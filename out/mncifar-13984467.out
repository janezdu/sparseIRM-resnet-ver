hello
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_152239-yk0vehx7
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/yk0vehx7
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1243
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5973, 3, 32, 32) (6027, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:40,  1.62s/it] 23%|##3       | 6/26 [00:01<00:04,  4.54it/s] 38%|###8      | 10/26 [00:01<00:01,  8.07it/s] 58%|#####7    | 15/26 [00:01<00:00, 13.00it/s] 77%|#######6  | 20/26 [00:02<00:00, 17.99it/s] 96%|#########6| 25/26 [00:02<00:00, 22.49it/s]100%|##########| 26/26 [00:02<00:00, 10.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.373 (0.540)	train_nll   0.37 (  0.54)	train_penalty   0.04 (  0.28)	weight_norm  20.87 ( 18.13)	train_acc   0.88 (  0.82)	train_minacc   0.00 (  0.06)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 7.4326 (8.5160)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.27it/s] 31%|###       | 8/26 [00:00<00:00, 42.20it/s]                                               31%|###       | 8/26 [00:00<00:00, 42.20it/s] 50%|#####     | 13/26 [00:00<00:00, 42.61it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.77it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.77it/s] 96%|#########6| 25/26 [00:00<00:00, 48.29it/s]100%|##########| 26/26 [00:00<00:00, 41.93it/s]
Test: [   0/  26]	Loss 0.473 (0.473)	test_acc   0.83 (  0.83)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.473 (0.473)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.486 (0.443)	test_acc   0.82 (  0.84)	test_minacc   0.01 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.486 (0.443)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.01 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.435 (0.433)	test_acc   0.85 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.435 (0.433)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  26/  26]	Loss 0.376 (0.429)	test_acc   0.88 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.376 (0.429)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.56it/s]100%|##########| 1/1 [00:00<00:00,  2.56it/s]
Test: [  0/  1]	Loss 1.906 (1.906)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.906 (1.906)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.906 (1.906)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.906 (1.906)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0729 (0.0729)	validation_time 0.0066 (0.0066)	train_time 0.0644 (0.0644)
record: (train_acc, test_acc) (0.8451000255346298, 0.10600000619888306)
last accs (train_acc, test_acc) (0.8451000255346298, 0.10600000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.56it/s] 19%|#9        | 5/26 [00:00<00:00, 21.91it/s] 38%|###8      | 10/26 [00:00<00:00, 30.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.36it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.88it/s] 92%|#########2| 24/26 [00:00<00:00, 37.55it/s]100%|##########| 26/26 [00:00<00:00, 31.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.371 (0.409)	train_nll   0.37 (  0.41)	train_penalty   0.04 (  0.06)	weight_norm  21.97 ( 21.63)	train_acc   0.88 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.1328 (7.1970)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.91it/s] 27%|##6       | 7/26 [00:00<00:00, 35.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.83it/s] 50%|#####     | 13/26 [00:00<00:00, 41.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.58it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.58it/s] 96%|#########6| 25/26 [00:00<00:00, 47.67it/s]100%|##########| 26/26 [00:00<00:00, 40.82it/s]
Test: [   0/  26]	Loss 0.439 (0.439)	test_acc   0.83 (  0.83)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.439 (0.439)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.444 (0.408)	test_acc   0.81 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.444 (0.408)	test_acc_d   0.81 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.386 (0.400)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.386 (0.400)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.361 (0.397)	test_acc   0.88 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.361 (0.397)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.91it/s]
Test: [  0/  1]	Loss 1.802 (1.802)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.802 (1.802)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.802 (1.802)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.802 (1.802)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0342 (0.0535)	validation_time 0.0004 (0.0035)	train_time 0.0338 (0.0491)
record: (train_acc, test_acc) (0.847900027692318, 0.1080000028014183)
last accs (train_acc, test_acc) (0.847900027692318, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.86it/s] 19%|#9        | 5/26 [00:00<00:00, 23.89it/s] 35%|###4      | 9/26 [00:00<00:00, 29.95it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.60it/s] 92%|#########2| 24/26 [00:00<00:00, 38.01it/s]100%|##########| 26/26 [00:00<00:00, 31.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.357 (0.387)	train_nll   0.36 (  0.39)	train_penalty   0.03 (  0.05)	weight_norm  22.11 ( 22.06)	train_acc   0.86 (  0.85)	train_minacc   0.13 (  0.03)	train_majacc   0.96 (  0.99)	train_corr   0.00 (  0.00)	l1 7.3026 (7.1364)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.39it/s] 23%|##3       | 6/26 [00:00<00:00, 29.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.69it/s] 42%|####2     | 11/26 [00:00<00:00, 37.04it/s] 65%|######5   | 17/26 [00:00<00:00, 43.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.94it/s] 88%|########8 | 23/26 [00:00<00:00, 45.34it/s]100%|##########| 26/26 [00:00<00:00, 39.56it/s]
Test: [   0/  26]	Loss 0.387 (0.387)	test_acc   0.83 (  0.83)	test_minacc   0.08 (  0.08)	test_majacc   0.98 (  0.98)	Loss_d 0.387 (0.387)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.420 (0.376)	test_acc   0.83 (  0.84)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.98)	Loss_d 0.420 (0.376)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.367 (0.372)	test_acc   0.87 (  0.85)	test_minacc   0.16 (  0.11)	test_majacc   0.99 (  0.98)	Loss_d 0.367 (0.372)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.16 (  0.11)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.329 (0.367)	test_acc   0.86 (  0.85)	test_minacc   0.07 (  0.12)	test_majacc   0.97 (  0.98)	Loss_d 0.329 (0.367)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.07 (  0.12)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.95 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.39it/s]
Test: [  0/  1]	Loss 1.972 (1.972)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.972 (1.972)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.972 (1.972)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.972 (1.972)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0323 (0.0465)	validation_time 0.0004 (0.0025)	train_time 0.0318 (0.0433)
record: (train_acc, test_acc) (0.8502000218629837, 0.15400001406669617)
last accs (train_acc, test_acc) (0.8502000218629837, 0.15400001406669617)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.64it/s] 19%|#9        | 5/26 [00:00<00:00, 26.41it/s] 35%|###4      | 9/26 [00:00<00:00, 31.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.38it/s] 69%|######9   | 18/26 [00:00<00:00, 35.81it/s] 85%|########4 | 22/26 [00:00<00:00, 37.10it/s]100%|##########| 26/26 [00:00<00:00, 31.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.325 (0.362)	train_nll   0.32 (  0.36)	train_penalty   0.02 (  0.03)	weight_norm  22.19 ( 22.15)	train_acc   0.85 (  0.85)	train_minacc   0.07 (  0.12)	train_majacc   0.96 (  0.98)	train_corr   0.00 (  0.00)	l1 7.3117 (7.2385)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.90it/s] 35%|###4      | 9/26 [00:00<00:00, 41.35it/s]                                               35%|###4      | 9/26 [00:00<00:00, 41.35it/s] 58%|#####7    | 15/26 [00:00<00:00, 47.95it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 47.95it/s] 81%|########  | 21/26 [00:00<00:00, 48.17it/s]100%|##########| 26/26 [00:00<00:00, 43.56it/s]
Test: [   0/  26]	Loss 0.362 (0.362)	test_acc   0.85 (  0.85)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 0.362 (0.362)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.385 (0.356)	test_acc   0.85 (  0.85)	test_minacc   0.17 (  0.15)	test_majacc   0.99 (  0.98)	Loss_d 0.385 (0.356)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.17 (  0.15)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.350 (0.353)	test_acc   0.86 (  0.86)	test_minacc   0.15 (  0.15)	test_majacc   0.98 (  0.98)	Loss_d 0.350 (0.353)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.311 (0.347)	test_acc   0.87 (  0.86)	test_minacc   0.10 (  0.15)	test_majacc   0.97 (  0.98)	Loss_d 0.311 (0.347)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.10 (  0.15)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.95 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.02it/s]
Test: [  0/  1]	Loss 2.031 (2.031)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   1.00 (  1.00)	Loss_d 2.031 (2.031)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 2.031 (2.031)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   1.00 (  1.00)	Loss_d 2.031 (2.031)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0331 (0.0431)	validation_time 0.0006 (0.0020)	train_time 0.0324 (0.0406)
record: (train_acc, test_acc) (0.8571000207066536, 0.16900001466274261)
last accs (train_acc, test_acc) (0.8571000207066536, 0.16900001466274261)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.56it/s] 19%|#9        | 5/26 [00:00<00:01, 19.89it/s] 35%|###4      | 9/26 [00:00<00:00, 26.38it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.02it/s] 69%|######9   | 18/26 [00:00<00:00, 34.47it/s] 88%|########8 | 23/26 [00:00<00:00, 36.76it/s]100%|##########| 26/26 [00:00<00:00, 29.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.298 (0.343)	train_nll   0.30 (  0.34)	train_penalty   0.01 (  0.03)	weight_norm  22.27 ( 22.23)	train_acc   0.86 (  0.86)	train_minacc   0.17 (  0.19)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 7.2785 (7.2478)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.29it/s] 27%|##6       | 7/26 [00:00<00:00, 36.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.32it/s] 50%|#####     | 13/26 [00:00<00:00, 41.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.86it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.86it/s] 96%|#########6| 25/26 [00:00<00:00, 47.61it/s]100%|##########| 26/26 [00:00<00:00, 40.04it/s]
Test: [   0/  26]	Loss 0.346 (0.346)	test_acc   0.85 (  0.85)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 0.346 (0.346)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.359 (0.337)	test_acc   0.85 (  0.86)	test_minacc   0.19 (  0.19)	test_majacc   0.99 (  0.98)	Loss_d 0.359 (0.337)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.348 (0.334)	test_acc   0.87 (  0.86)	test_minacc   0.22 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 0.348 (0.334)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.22 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.272 (0.329)	test_acc   0.88 (  0.86)	test_minacc   0.10 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 0.272 (0.329)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.10 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.72it/s]
Test: [  0/  1]	Loss 2.057 (2.057)	test_acc   0.18 (  0.18)	test_minacc   0.08 (  0.08)	test_majacc   1.00 (  1.00)	Loss_d 2.057 (2.057)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.08 (  0.08)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.88 (  0.88)
Test: [  1/  1]	Loss 2.057 (2.057)	test_acc   0.18 (  0.18)	test_minacc   0.08 (  0.08)	test_majacc   1.00 (  1.00)	Loss_d 2.057 (2.057)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.08 (  0.08)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.88 (  0.88)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0342 (0.0413)	validation_time 0.0004 (0.0017)	train_time 0.0338 (0.0392)
record: (train_acc, test_acc) (0.8637000230550766, 0.17500001192092896)
last accs (train_acc, test_acc) (0.8637000230550766, 0.17500001192092896)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.13it/s] 19%|#9        | 5/26 [00:00<00:00, 24.29it/s] 35%|###4      | 9/26 [00:00<00:00, 30.69it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.25it/s] 69%|######9   | 18/26 [00:00<00:00, 36.45it/s] 88%|########8 | 23/26 [00:00<00:00, 37.91it/s]100%|##########| 26/26 [00:00<00:00, 31.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.309 (0.328)	train_nll   0.31 (  0.33)	train_penalty   0.01 (  0.03)	weight_norm  22.38 ( 22.33)	train_acc   0.86 (  0.86)	train_minacc   0.37 (  0.26)	train_majacc   0.92 (  0.97)	train_corr   0.00 (  0.00)	l1 7.1603 (7.2082)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.92it/s] 23%|##3       | 6/26 [00:00<00:00, 30.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.00it/s] 46%|####6     | 12/26 [00:00<00:00, 39.09it/s] 69%|######9   | 18/26 [00:00<00:00, 45.88it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.88it/s] 92%|#########2| 24/26 [00:00<00:00, 47.08it/s]100%|##########| 26/26 [00:00<00:00, 39.30it/s]
Test: [   0/  26]	Loss 0.312 (0.312)	test_acc   0.85 (  0.85)	test_minacc   0.24 (  0.24)	test_majacc   0.97 (  0.97)	Loss_d 0.312 (0.312)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.345 (0.324)	test_acc   0.84 (  0.86)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 0.345 (0.324)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  20/  26]	Loss 0.338 (0.320)	test_acc   0.88 (  0.86)	test_minacc   0.31 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 0.338 (0.320)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.31 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.267 (0.314)	test_acc   0.89 (  0.87)	test_minacc   0.27 (  0.29)	test_majacc   0.98 (  0.97)	Loss_d 0.267 (0.314)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.27 (  0.29)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.90it/s]
Test: [  0/  1]	Loss 1.986 (1.986)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   1.00 (  1.00)	Loss_d 1.986 (1.986)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.986 (1.986)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   1.00 (  1.00)	Loss_d 1.986 (1.986)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0337 (0.0401)	validation_time 0.0003 (0.0015)	train_time 0.0334 (0.0383)
record: (train_acc, test_acc) (0.8663000245690345, 0.22300000488758087)
last accs (train_acc, test_acc) (0.8663000245690345, 0.22300000488758087)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.91it/s] 19%|#9        | 5/26 [00:00<00:01, 17.70it/s] 35%|###4      | 9/26 [00:00<00:00, 25.43it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.57it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.94it/s] 92%|#########2| 24/26 [00:00<00:00, 37.46it/s]100%|##########| 26/26 [00:00<00:00, 29.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.271 (0.312)	train_nll   0.27 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.51 ( 22.45)	train_acc   0.88 (  0.86)	train_minacc   0.30 (  0.32)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3534 (7.2258)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.27it/s] 27%|##6       | 7/26 [00:00<00:00, 22.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.66it/s] 50%|#####     | 13/26 [00:00<00:00, 34.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.82it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.82it/s] 96%|#########6| 25/26 [00:00<00:00, 45.25it/s]100%|##########| 26/26 [00:00<00:00, 34.03it/s]
Test: [   0/  26]	Loss 0.284 (0.284)	test_acc   0.86 (  0.86)	test_minacc   0.32 (  0.32)	test_majacc   0.97 (  0.97)	Loss_d 0.284 (0.284)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.323 (0.307)	test_acc   0.86 (  0.86)	test_minacc   0.34 (  0.33)	test_majacc   0.98 (  0.96)	Loss_d 0.323 (0.307)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.34 (  0.33)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.317 (0.304)	test_acc   0.87 (  0.87)	test_minacc   0.31 (  0.34)	test_majacc   0.97 (  0.96)	Loss_d 0.317 (0.304)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.31 (  0.34)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.247 (0.298)	test_acc   0.90 (  0.87)	test_minacc   0.30 (  0.34)	test_majacc   0.98 (  0.96)	Loss_d 0.247 (0.298)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.30 (  0.34)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.90 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.45it/s]
Test: [  0/  1]	Loss 2.104 (2.104)	test_acc   0.25 (  0.25)	test_minacc   0.16 (  0.16)	test_majacc   1.00 (  1.00)	Loss_d 2.104 (2.104)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.16 (  0.16)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 2.104 (2.104)	test_acc   0.25 (  0.25)	test_minacc   0.16 (  0.16)	test_majacc   1.00 (  1.00)	Loss_d 2.104 (2.104)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.16 (  0.16)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.76)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0360 (0.0395)	validation_time 0.0003 (0.0013)	train_time 0.0356 (0.0379)
record: (train_acc, test_acc) (0.868600022315979, 0.24500000476837158)
last accs (train_acc, test_acc) (0.868600022315979, 0.24500000476837158)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.91it/s] 19%|#9        | 5/26 [00:00<00:00, 24.46it/s] 35%|###4      | 9/26 [00:00<00:00, 30.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.81it/s] 69%|######9   | 18/26 [00:00<00:00, 34.94it/s] 88%|########8 | 23/26 [00:00<00:00, 36.57it/s]100%|##########| 26/26 [00:00<00:00, 30.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.267 (0.293)	train_nll   0.27 (  0.29)	train_penalty   0.01 (  0.01)	weight_norm  22.67 ( 22.59)	train_acc   0.86 (  0.87)	train_minacc   0.33 (  0.41)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 7.0081 (7.3370)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.99it/s] 31%|###       | 8/26 [00:00<00:00, 35.24it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 47.68it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 47.68it/s]100%|##########| 26/26 [00:00<00:00, 51.51it/s]100%|##########| 26/26 [00:00<00:00, 41.60it/s]
Test: [   0/  26]	Loss 0.280 (0.280)	test_acc   0.87 (  0.87)	test_minacc   0.36 (  0.36)	test_majacc   0.97 (  0.97)	Loss_d 0.280 (0.280)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.296 (0.293)	test_acc   0.87 (  0.87)	test_minacc   0.41 (  0.36)	test_majacc   0.97 (  0.96)	Loss_d 0.296 (0.293)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.41 (  0.36)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.85 (  0.87)
Test: [  20/  26]	Loss 0.301 (0.289)	test_acc   0.87 (  0.87)	test_minacc   0.35 (  0.38)	test_majacc   0.96 (  0.96)	Loss_d 0.301 (0.289)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.35 (  0.38)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.87)
Test: [  26/  26]	Loss 0.241 (0.285)	test_acc   0.90 (  0.87)	test_minacc   0.30 (  0.38)	test_majacc   0.98 (  0.96)	Loss_d 0.241 (0.285)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.30 (  0.38)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.89 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.73it/s]
Test: [  0/  1]	Loss 2.001 (2.001)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.99 (  0.99)	Loss_d 2.001 (2.001)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 2.001 (2.001)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.99 (  0.99)	Loss_d 2.001 (2.001)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.74)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0379 (0.0393)	validation_time 0.0004 (0.0012)	train_time 0.0374 (0.0378)
record: (train_acc, test_acc) (0.8726000220775604, 0.2680000066757202)
last accs (train_acc, test_acc) (0.8726000220775604, 0.2680000066757202)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.11it/s] 19%|#9        | 5/26 [00:00<00:00, 25.70it/s] 35%|###4      | 9/26 [00:00<00:00, 31.44it/s] 50%|#####     | 13/26 [00:00<00:00, 34.10it/s] 69%|######9   | 18/26 [00:00<00:00, 36.68it/s] 88%|########8 | 23/26 [00:00<00:00, 38.25it/s]100%|##########| 26/26 [00:00<00:00, 32.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.273 (0.292)	train_nll   0.27 (  0.29)	train_penalty   0.01 (  0.02)	weight_norm  22.89 ( 22.77)	train_acc   0.87 (  0.87)	train_minacc   0.40 (  0.43)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 6.4827 (7.3556)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.19it/s] 23%|##3       | 6/26 [00:00<00:00, 30.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.72it/s] 42%|####2     | 11/26 [00:00<00:00, 38.94it/s] 62%|######1   | 16/26 [00:00<00:00, 43.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 43.16it/s] 81%|########  | 21/26 [00:00<00:00, 43.11it/s]100%|##########| 26/26 [00:00<00:00, 37.61it/s]
Test: [   0/  26]	Loss 0.300 (0.300)	test_acc   0.85 (  0.85)	test_minacc   0.26 (  0.26)	test_majacc   0.98 (  0.98)	Loss_d 0.300 (0.300)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.282 (0.285)	test_acc   0.88 (  0.88)	test_minacc   0.40 (  0.34)	test_majacc   0.98 (  0.98)	Loss_d 0.282 (0.285)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.40 (  0.34)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.293 (0.282)	test_acc   0.88 (  0.88)	test_minacc   0.33 (  0.34)	test_majacc   0.98 (  0.98)	Loss_d 0.293 (0.282)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.33 (  0.34)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.90)
Test: [  26/  26]	Loss 0.252 (0.279)	test_acc   0.89 (  0.88)	test_minacc   0.27 (  0.35)	test_majacc   0.98 (  0.98)	Loss_d 0.252 (0.279)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.27 (  0.35)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.91it/s]
Test: [  0/  1]	Loss 1.976 (1.976)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.99 (  0.99)	Loss_d 1.976 (1.976)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.78)
Test: [  1/  1]	Loss 1.976 (1.976)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   0.99 (  0.99)	Loss_d 1.976 (1.976)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.78)
Overall Timing[  8/  1]	epoch_time 0.0362 (0.0389)	validation_time 0.0004 (0.0011)	train_time 0.0357 (0.0376)
record: (train_acc, test_acc) (0.8726000220775604, 0.2680000066757202)
last accs (train_acc, test_acc) (0.883800027012825, 0.2410000115633011)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s] 19%|#9        | 5/26 [00:00<00:00, 24.01it/s] 38%|###8      | 10/26 [00:00<00:00, 31.85it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.19it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.51it/s] 96%|#########6| 25/26 [00:00<00:00, 38.57it/s]100%|##########| 26/26 [00:00<00:00, 32.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.291 (0.296)	train_nll   0.29 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  23.18 ( 23.03)	train_acc   0.88 (  0.87)	train_minacc   0.53 (  0.39)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 6.0064 (7.2356)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.32it/s] 23%|##3       | 6/26 [00:00<00:00, 29.28it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.28it/s] 46%|####6     | 12/26 [00:00<00:00, 36.72it/s] 69%|######9   | 18/26 [00:00<00:00, 44.61it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.61it/s] 92%|#########2| 24/26 [00:00<00:00, 45.84it/s]100%|##########| 26/26 [00:00<00:00, 38.63it/s]
Test: [   0/  26]	Loss 0.300 (0.300)	test_acc   0.84 (  0.84)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 0.300 (0.300)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.270 (0.288)	test_acc   0.89 (  0.88)	test_minacc   0.50 (  0.46)	test_majacc   0.98 (  0.95)	Loss_d 0.270 (0.288)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.50 (  0.46)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.83 (  0.84)
Test: [  20/  26]	Loss 0.291 (0.285)	test_acc   0.87 (  0.88)	test_minacc   0.49 (  0.49)	test_majacc   0.93 (  0.95)	Loss_d 0.291 (0.285)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.83 (  0.84)
Test: [  26/  26]	Loss 0.276 (0.282)	test_acc   0.88 (  0.88)	test_minacc   0.43 (  0.49)	test_majacc   0.94 (  0.95)	Loss_d 0.276 (0.282)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.43 (  0.49)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.84 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.88it/s]
Test: [  0/  1]	Loss 1.601 (1.601)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.95 (  0.95)	Loss_d 1.601 (1.601)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 1.601 (1.601)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.95 (  0.95)	Loss_d 1.601 (1.601)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.58 (  0.58)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0346 (0.0385)	validation_time 0.0004 (0.0010)	train_time 0.0342 (0.0373)
record: (train_acc, test_acc) (0.8791000235080719, 0.3760000169277191)
last accs (train_acc, test_acc) (0.8791000235080719, 0.3760000169277191)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.68it/s] 23%|##3       | 6/26 [00:00<00:00, 28.58it/s] 38%|###8      | 10/26 [00:00<00:00, 32.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.57it/s] 69%|######9   | 18/26 [00:00<00:00, 36.70it/s] 88%|########8 | 23/26 [00:00<00:00, 38.19it/s]100%|##########| 26/26 [00:00<00:00, 33.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.234 (0.272)	train_nll   0.23 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.43 ( 23.31)	train_acc   0.89 (  0.88)	train_minacc   0.53 (  0.50)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5819 (7.1390)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.38it/s] 35%|###4      | 9/26 [00:00<00:00, 39.92it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.92it/s] 58%|#####7    | 15/26 [00:00<00:00, 46.96it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 46.96it/s] 81%|########  | 21/26 [00:00<00:00, 48.56it/s]100%|##########| 26/26 [00:00<00:00, 42.92it/s]
Test: [   0/  26]	Loss 0.267 (0.267)	test_acc   0.86 (  0.86)	test_minacc   0.38 (  0.38)	test_majacc   0.95 (  0.95)	Loss_d 0.267 (0.267)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.240 (0.253)	test_acc   0.91 (  0.89)	test_minacc   0.60 (  0.49)	test_majacc   0.98 (  0.96)	Loss_d 0.240 (0.253)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.60 (  0.49)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.82 (  0.85)
Test: [  20/  26]	Loss 0.248 (0.245)	test_acc   0.88 (  0.89)	test_minacc   0.53 (  0.50)	test_majacc   0.94 (  0.96)	Loss_d 0.248 (0.245)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.84 (  0.85)
Test: [  26/  26]	Loss 0.219 (0.241)	test_acc   0.90 (  0.90)	test_minacc   0.50 (  0.51)	test_majacc   0.95 (  0.97)	Loss_d 0.219 (0.241)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.95 (  0.97)	test_corr_d   0.87 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.65it/s]
Test: [  0/  1]	Loss 1.960 (1.960)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.94 (  0.94)	Loss_d 1.960 (1.960)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 1.960 (1.960)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.94 (  0.94)	Loss_d 1.960 (1.960)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.64 (  0.64)
Overall Timing[ 10/  1]	epoch_time 0.0342 (0.0381)	validation_time 0.0004 (0.0010)	train_time 0.0338 (0.0369)
record: (train_acc, test_acc) (0.8791000235080719, 0.3760000169277191)
last accs (train_acc, test_acc) (0.8963000185489655, 0.32100000977516174)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 19%|#9        | 5/26 [00:00<00:01, 18.32it/s] 35%|###4      | 9/26 [00:00<00:00, 25.85it/s] 50%|#####     | 13/26 [00:00<00:00, 30.21it/s] 69%|######9   | 18/26 [00:00<00:00, 34.04it/s] 88%|########8 | 23/26 [00:00<00:00, 36.38it/s]100%|##########| 26/26 [00:00<00:00, 28.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.211 (0.256)	train_nll   0.21 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  23.70 ( 23.57)	train_acc   0.91 (  0.89)	train_minacc   0.70 (  0.52)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 7.2396 (7.3416)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.41it/s] 27%|##6       | 7/26 [00:00<00:00, 35.74it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.74it/s] 50%|#####     | 13/26 [00:00<00:00, 41.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.69it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.69it/s] 96%|#########6| 25/26 [00:00<00:00, 48.19it/s]100%|##########| 26/26 [00:00<00:00, 40.91it/s]
Test: [   0/  26]	Loss 0.273 (0.273)	test_acc   0.89 (  0.89)	test_minacc   0.52 (  0.52)	test_majacc   0.96 (  0.96)	Loss_d 0.273 (0.273)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.223 (0.251)	test_acc   0.92 (  0.90)	test_minacc   0.67 (  0.58)	test_majacc   0.98 (  0.96)	Loss_d 0.223 (0.251)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.79 (  0.83)
Test: [  20/  26]	Loss 0.222 (0.234)	test_acc   0.91 (  0.91)	test_minacc   0.58 (  0.61)	test_majacc   0.97 (  0.96)	Loss_d 0.222 (0.234)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.58 (  0.61)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.84 (  0.83)
Test: [  26/  26]	Loss 0.170 (0.225)	test_acc   0.94 (  0.91)	test_minacc   0.67 (  0.62)	test_majacc   0.97 (  0.96)	Loss_d 0.170 (0.225)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.67 (  0.62)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.85 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.98it/s]
Test: [  0/  1]	Loss 2.105 (2.105)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.91 (  0.91)	Loss_d 2.105 (2.105)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 2.105 (2.105)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.91 (  0.91)	Loss_d 2.105 (2.105)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.52 (  0.52)
Overall Timing[ 11/  1]	epoch_time 0.0337 (0.0377)	validation_time 0.0004 (0.0009)	train_time 0.0333 (0.0366)
record: (train_acc, test_acc) (0.8791000235080719, 0.3760000169277191)
last accs (train_acc, test_acc) (0.9087000193595887, 0.37400001287460327)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 19%|#9        | 5/26 [00:00<00:00, 22.45it/s] 35%|###4      | 9/26 [00:00<00:00, 28.43it/s] 50%|#####     | 13/26 [00:00<00:00, 31.77it/s] 65%|######5   | 17/26 [00:00<00:00, 34.48it/s] 85%|########4 | 22/26 [00:00<00:00, 36.92it/s]100%|##########| 26/26 [00:00<00:00, 31.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.154 (0.235)	train_nll   0.15 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  24.00 ( 23.86)	train_acc   0.94 (  0.90)	train_minacc   0.63 (  0.58)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.7932 (7.3114)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.53it/s] 27%|##6       | 7/26 [00:00<00:00, 37.56it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.56it/s] 50%|#####     | 13/26 [00:00<00:00, 42.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.79it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.79it/s] 96%|#########6| 25/26 [00:00<00:00, 48.70it/s]100%|##########| 26/26 [00:00<00:00, 41.53it/s]
Test: [   0/  26]	Loss 0.223 (0.223)	test_acc   0.90 (  0.90)	test_minacc   0.59 (  0.59)	test_majacc   0.96 (  0.96)	Loss_d 0.223 (0.223)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.240 (0.248)	test_acc   0.89 (  0.90)	test_minacc   0.61 (  0.56)	test_majacc   0.96 (  0.96)	Loss_d 0.240 (0.248)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.61 (  0.56)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.82)
Test: [  20/  26]	Loss 0.187 (0.228)	test_acc   0.93 (  0.91)	test_minacc   0.67 (  0.61)	test_majacc   0.97 (  0.96)	Loss_d 0.187 (0.228)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.67 (  0.61)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.83 (  0.82)
Test: [  26/  26]	Loss 0.130 (0.215)	test_acc   0.96 (  0.91)	test_minacc   0.77 (  0.64)	test_majacc   0.98 (  0.96)	Loss_d 0.130 (0.215)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.77 (  0.64)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.85 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.91it/s]
Test: [  0/  1]	Loss 2.514 (2.514)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.92 (  0.92)	Loss_d 2.514 (2.514)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 2.514 (2.514)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.92 (  0.92)	Loss_d 2.514 (2.514)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.58 (  0.58)
Overall Timing[ 12/  1]	epoch_time 0.0342 (0.0375)	validation_time 0.0003 (0.0009)	train_time 0.0339 (0.0364)
record: (train_acc, test_acc) (0.8791000235080719, 0.3760000169277191)
last accs (train_acc, test_acc) (0.9132000232934951, 0.3460000157356262)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 19%|#9        | 5/26 [00:00<00:00, 24.92it/s] 38%|###8      | 10/26 [00:00<00:00, 33.07it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.04it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.03it/s] 96%|#########6| 25/26 [00:00<00:00, 38.81it/s]100%|##########| 26/26 [00:00<00:00, 32.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.150 (0.220)	train_nll   0.15 (  0.22)	train_penalty   0.00 (  0.01)	weight_norm  24.30 ( 24.16)	train_acc   0.94 (  0.90)	train_minacc   0.77 (  0.63)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.7825 (7.8101)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.64it/s] 31%|###       | 8/26 [00:00<00:00, 41.51it/s]                                               31%|###       | 8/26 [00:00<00:00, 41.51it/s] 50%|#####     | 13/26 [00:00<00:00, 43.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.81it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.81it/s] 96%|#########6| 25/26 [00:00<00:00, 49.25it/s]100%|##########| 26/26 [00:00<00:00, 41.97it/s]
Test: [   0/  26]	Loss 0.231 (0.231)	test_acc   0.91 (  0.91)	test_minacc   0.68 (  0.68)	test_majacc   0.95 (  0.95)	Loss_d 0.231 (0.231)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.201 (0.212)	test_acc   0.92 (  0.91)	test_minacc   0.74 (  0.69)	test_majacc   0.96 (  0.95)	Loss_d 0.201 (0.212)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.74 (  0.69)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.74 (  0.77)
Test: [  20/  26]	Loss 0.176 (0.196)	test_acc   0.93 (  0.92)	test_minacc   0.75 (  0.72)	test_majacc   0.96 (  0.95)	Loss_d 0.176 (0.196)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.75 (  0.72)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.78 (  0.77)
Test: [  26/  26]	Loss 0.107 (0.186)	test_acc   0.96 (  0.92)	test_minacc   0.80 (  0.74)	test_majacc   0.99 (  0.96)	Loss_d 0.107 (0.186)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.80 (  0.74)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.83 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.15it/s]
Test: [  0/  1]	Loss 2.220 (2.220)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.90 (  0.90)	Loss_d 2.220 (2.220)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 2.220 (2.220)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.90 (  0.90)	Loss_d 2.220 (2.220)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.36 (  0.36)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0348 (0.0373)	validation_time 0.0004 (0.0008)	train_time 0.0344 (0.0363)
record: (train_acc, test_acc) (0.9233000149726868, 0.4400000274181366)
last accs (train_acc, test_acc) (0.9233000149726868, 0.4400000274181366)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.63it/s] 19%|#9        | 5/26 [00:00<00:00, 25.32it/s] 35%|###4      | 9/26 [00:00<00:00, 31.44it/s] 50%|#####     | 13/26 [00:00<00:00, 34.44it/s] 65%|######5   | 17/26 [00:00<00:00, 36.25it/s] 85%|########4 | 22/26 [00:00<00:00, 38.10it/s]100%|##########| 26/26 [00:00<00:00, 32.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.111 (0.199)	train_nll   0.11 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm  24.65 ( 24.48)	train_acc   0.96 (  0.91)	train_minacc   0.80 (  0.68)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 8.3350 (8.0384)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.47it/s] 31%|###       | 8/26 [00:00<00:00, 34.93it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.93it/s] 50%|#####     | 13/26 [00:00<00:00, 38.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.11it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.11it/s] 96%|#########6| 25/26 [00:00<00:00, 45.39it/s]100%|##########| 26/26 [00:00<00:00, 38.03it/s]
Test: [   0/  26]	Loss 0.205 (0.205)	test_acc   0.91 (  0.91)	test_minacc   0.48 (  0.48)	test_majacc   0.99 (  0.99)	Loss_d 0.205 (0.205)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.190 (0.198)	test_acc   0.93 (  0.92)	test_minacc   0.67 (  0.56)	test_majacc   0.98 (  0.98)	Loss_d 0.190 (0.198)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.67 (  0.56)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.85)
Test: [  20/  26]	Loss 0.125 (0.175)	test_acc   0.95 (  0.93)	test_minacc   0.75 (  0.62)	test_majacc   0.99 (  0.99)	Loss_d 0.125 (0.175)	test_acc_d   0.95 (  0.93)	test_minacc_d   0.75 (  0.62)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.85)
Test: [  26/  26]	Loss 0.098 (0.165)	test_acc   0.96 (  0.93)	test_minacc   0.77 (  0.64)	test_majacc   0.99 (  0.99)	Loss_d 0.098 (0.165)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.77 (  0.64)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.87 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.69it/s]
Test: [  0/  1]	Loss 2.812 (2.812)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.93 (  0.93)	Loss_d 2.812 (2.812)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 2.812 (2.812)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.93 (  0.93)	Loss_d 2.812 (2.812)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.61 (  0.61)
Overall Timing[ 14/  1]	epoch_time 0.0332 (0.0370)	validation_time 0.0004 (0.0008)	train_time 0.0328 (0.0361)
record: (train_acc, test_acc) (0.9233000149726868, 0.4400000274181366)
last accs (train_acc, test_acc) (0.9333000213503838, 0.33100003004074097)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.17it/s] 19%|#9        | 5/26 [00:00<00:00, 23.12it/s] 35%|###4      | 9/26 [00:00<00:00, 29.89it/s] 50%|#####     | 13/26 [00:00<00:00, 33.17it/s] 65%|######5   | 17/26 [00:00<00:00, 35.48it/s] 85%|########4 | 22/26 [00:00<00:00, 37.32it/s]100%|##########| 26/26 [00:00<00:00, 31.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.008 (0.075)	train_nll   0.24 (  0.23)	train_penalty   0.01 (  0.00)	weight_norm  24.96 ( 24.83)	train_acc   0.90 (  0.91)	train_minacc   0.60 (  0.73)	train_majacc   0.94 (  0.94)	train_corr   0.00 (  0.00)	l1 6.3989 (7.8252)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.14it/s] 27%|##6       | 7/26 [00:00<00:00, 34.51it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.51it/s] 50%|#####     | 13/26 [00:00<00:00, 41.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.63it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.63it/s] 96%|#########6| 25/26 [00:00<00:00, 48.48it/s]100%|##########| 26/26 [00:00<00:00, 40.29it/s]
Test: [   0/  26]	Loss 0.232 (0.232)	test_acc   0.91 (  0.91)	test_minacc   0.65 (  0.65)	test_majacc   0.96 (  0.96)	Loss_d 0.232 (0.232)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.283 (0.246)	test_acc   0.89 (  0.90)	test_minacc   0.69 (  0.69)	test_majacc   0.93 (  0.94)	Loss_d 0.283 (0.246)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.78 (  0.79)
Test: [  20/  26]	Loss 0.262 (0.250)	test_acc   0.89 (  0.90)	test_minacc   0.64 (  0.68)	test_majacc   0.93 (  0.94)	Loss_d 0.262 (0.250)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.64 (  0.68)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.80 (  0.80)
Test: [  26/  26]	Loss 0.248 (0.251)	test_acc   0.90 (  0.90)	test_minacc   0.60 (  0.67)	test_majacc   0.94 (  0.94)	Loss_d 0.248 (0.251)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.60 (  0.67)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.82 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.11it/s]
Test: [  0/  1]	Loss 1.908 (1.908)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.92 (  0.92)	Loss_d 1.908 (1.908)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 1.908 (1.908)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.92 (  0.92)	Loss_d 1.908 (1.908)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.51 (  0.51)
Overall Timing[ 15/  1]	epoch_time 0.0348 (0.0369)	validation_time 0.0004 (0.0008)	train_time 0.0343 (0.0359)
record: (train_acc, test_acc) (0.9233000149726868, 0.4400000274181366)
last accs (train_acc, test_acc) (0.8989000170230865, 0.4150000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 19%|#9        | 5/26 [00:00<00:00, 22.25it/s] 35%|###4      | 9/26 [00:00<00:00, 28.52it/s] 50%|#####     | 13/26 [00:00<00:00, 31.77it/s] 65%|######5   | 17/26 [00:00<00:00, 34.43it/s] 85%|########4 | 22/26 [00:00<00:00, 36.62it/s]100%|##########| 26/26 [00:00<00:00, 37.40it/s]100%|##########| 26/26 [00:00<00:00, 30.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.001 (0.004)	train_nll   0.35 (  0.32)	train_penalty   0.00 (  0.00)	weight_norm  25.04 ( 25.02)	train_acc   0.79 (  0.84)	train_minacc   0.87 (  0.76)	train_majacc   0.78 (  0.85)	train_corr   0.00 (  0.00)	l1 6.2720 (6.5000)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.43it/s] 27%|##6       | 7/26 [00:00<00:00, 36.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.34it/s] 50%|#####     | 13/26 [00:00<00:00, 40.74it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.21it/s] 96%|#########6| 25/26 [00:00<00:00, 46.07it/s]100%|##########| 26/26 [00:00<00:00, 39.68it/s]
Test: [   0/  26]	Loss 0.325 (0.325)	test_acc   0.83 (  0.83)	test_minacc   0.83 (  0.83)	test_majacc   0.83 (  0.83)	Loss_d 0.325 (0.325)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.338 (0.324)	test_acc   0.82 (  0.83)	test_minacc   0.87 (  0.88)	test_majacc   0.81 (  0.82)	Loss_d 0.338 (0.324)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.87 (  0.88)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.54 (  0.57)
Test: [  20/  26]	Loss 0.351 (0.329)	test_acc   0.80 (  0.82)	test_minacc   0.85 (  0.88)	test_majacc   0.79 (  0.81)	Loss_d 0.351 (0.329)	test_acc_d   0.80 (  0.82)	test_minacc_d   0.85 (  0.88)	test_majacc_d   0.79 (  0.81)	test_corr_d   0.58 (  0.57)
Test: [  26/  26]	Loss 0.348 (0.331)	test_acc   0.79 (  0.82)	test_minacc   0.87 (  0.88)	test_majacc   0.78 (  0.81)	Loss_d 0.348 (0.331)	test_acc_d   0.79 (  0.82)	test_minacc_d   0.87 (  0.88)	test_majacc_d   0.78 (  0.81)	test_corr_d   0.60 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.76it/s]
Test: [  0/  1]	Loss 1.283 (1.283)	test_acc   0.64 (  0.64)	test_minacc   0.61 (  0.61)	test_majacc   0.84 (  0.84)	Loss_d 1.283 (1.283)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.84 (  0.84)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 1.283 (1.283)	test_acc   0.64 (  0.64)	test_minacc   0.61 (  0.61)	test_majacc   0.84 (  0.84)	Loss_d 1.283 (1.283)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.84 (  0.84)	test_corr_d  -0.02 ( -0.02)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/88/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0345 (0.0367)	validation_time 0.0004 (0.0008)	train_time 0.0341 (0.0358)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.96it/s] 19%|#9        | 5/26 [00:00<00:00, 25.22it/s] 35%|###4      | 9/26 [00:00<00:00, 29.01it/s] 50%|#####     | 13/26 [00:00<00:00, 32.60it/s] 69%|######9   | 18/26 [00:00<00:00, 35.85it/s] 88%|########8 | 23/26 [00:00<00:00, 37.76it/s]100%|##########| 26/26 [00:00<00:00, 32.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.001 (0.001)	train_nll   0.36 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  25.05 ( 25.05)	train_acc   0.81 (  0.81)	train_minacc   0.90 (  0.87)	train_majacc   0.80 (  0.80)	train_corr   0.00 (  0.00)	l1 6.5992 (6.4683)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.13it/s] 19%|#9        | 5/26 [00:00<00:00, 24.40it/s]                                               19%|#9        | 5/26 [00:00<00:00, 24.40it/s] 42%|####2     | 11/26 [00:00<00:00, 37.24it/s] 65%|######5   | 17/26 [00:00<00:00, 45.42it/s]                                                65%|######5   | 17/26 [00:00<00:00, 45.42it/s] 85%|########4 | 22/26 [00:00<00:00, 45.94it/s]100%|##########| 26/26 [00:00<00:00, 39.10it/s]
Test: [   0/  26]	Loss 0.342 (0.342)	test_acc   0.82 (  0.82)	test_minacc   0.83 (  0.83)	test_majacc   0.81 (  0.81)	Loss_d 0.342 (0.342)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.328 (0.329)	test_acc   0.82 (  0.82)	test_minacc   0.86 (  0.86)	test_majacc   0.81 (  0.81)	Loss_d 0.328 (0.329)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.58 (  0.58)
Test: [  20/  26]	Loss 0.341 (0.331)	test_acc   0.81 (  0.82)	test_minacc   0.82 (  0.86)	test_majacc   0.80 (  0.81)	Loss_d 0.341 (0.331)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.80 (  0.81)	test_corr_d   0.61 (  0.59)
Test: [  26/  26]	Loss 0.354 (0.333)	test_acc   0.82 (  0.82)	test_minacc   0.90 (  0.85)	test_majacc   0.81 (  0.81)	Loss_d 0.354 (0.333)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.90 (  0.85)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.61 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.09it/s]
Test: [  0/  1]	Loss 1.384 (1.384)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.83 (  0.83)	Loss_d 1.384 (1.384)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 1.384 (1.384)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.83 (  0.83)	Loss_d 1.384 (1.384)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.00 (  0.00)
Overall Timing[ 17/  1]	epoch_time 0.0349 (0.0366)	validation_time 0.0004 (0.0007)	train_time 0.0345 (0.0358)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.8182000200152397, 0.628000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.63it/s] 19%|#9        | 5/26 [00:00<00:00, 22.92it/s] 35%|###4      | 9/26 [00:00<00:00, 29.40it/s] 50%|#####     | 13/26 [00:00<00:00, 33.14it/s] 65%|######5   | 17/26 [00:00<00:00, 35.44it/s] 85%|########4 | 22/26 [00:00<00:00, 37.30it/s]100%|##########| 26/26 [00:00<00:00, 31.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.001 (0.001)	train_nll   0.33 (  0.33)	train_penalty   0.00 (  0.00)	weight_norm  25.05 ( 25.05)	train_acc   0.83 (  0.82)	train_minacc   0.93 (  0.86)	train_majacc   0.82 (  0.81)	train_corr   0.00 (  0.00)	l1 6.4603 (6.5515)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.05it/s] 23%|##3       | 6/26 [00:00<00:00, 29.54it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.54it/s] 42%|####2     | 11/26 [00:00<00:00, 37.56it/s] 65%|######5   | 17/26 [00:00<00:00, 43.73it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.73it/s] 88%|########8 | 23/26 [00:00<00:00, 47.21it/s]100%|##########| 26/26 [00:00<00:00, 38.97it/s]
Test: [   0/  26]	Loss 0.326 (0.326)	test_acc   0.82 (  0.82)	test_minacc   0.85 (  0.85)	test_majacc   0.81 (  0.81)	Loss_d 0.326 (0.326)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.319 (0.326)	test_acc   0.83 (  0.82)	test_minacc   0.86 (  0.86)	test_majacc   0.82 (  0.81)	Loss_d 0.319 (0.326)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.82 (  0.81)	test_corr_d   0.59 (  0.60)
Test: [  20/  26]	Loss 0.336 (0.324)	test_acc   0.80 (  0.82)	test_minacc   0.82 (  0.87)	test_majacc   0.80 (  0.81)	Loss_d 0.336 (0.324)	test_acc_d   0.80 (  0.82)	test_minacc_d   0.82 (  0.87)	test_majacc_d   0.80 (  0.81)	test_corr_d   0.63 (  0.60)
Test: [  26/  26]	Loss 0.331 (0.326)	test_acc   0.83 (  0.82)	test_minacc   0.93 (  0.86)	test_majacc   0.82 (  0.81)	Loss_d 0.331 (0.326)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.93 (  0.86)	test_majacc_d   0.82 (  0.81)	test_corr_d   0.64 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.28it/s]
Test: [  0/  1]	Loss 1.410 (1.410)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.83 (  0.83)	Loss_d 1.410 (1.410)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.410 (1.410)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.83 (  0.83)	Loss_d 1.410 (1.410)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.04 (  0.04)
Overall Timing[ 18/  1]	epoch_time 0.0343 (0.0365)	validation_time 0.0003 (0.0007)	train_time 0.0340 (0.0357)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.8190000249147416, 0.6200000047683716)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.91it/s] 19%|#9        | 5/26 [00:00<00:00, 24.69it/s] 35%|###4      | 9/26 [00:00<00:00, 30.68it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.94it/s] 69%|######9   | 18/26 [00:00<00:00, 36.41it/s] 88%|########8 | 23/26 [00:00<00:00, 37.56it/s]100%|##########| 26/26 [00:00<00:00, 28.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.33 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  25.06 ( 25.06)	train_acc   0.84 (  0.81)	train_minacc   0.90 (  0.87)	train_majacc   0.83 (  0.80)	train_corr   0.00 (  0.00)	l1 6.4778 (6.6129)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.55it/s] 27%|##6       | 7/26 [00:00<00:00, 38.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 38.54it/s] 50%|#####     | 13/26 [00:00<00:00, 43.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.87it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.87it/s] 96%|#########6| 25/26 [00:00<00:00, 48.05it/s]100%|##########| 26/26 [00:00<00:00, 41.00it/s]
Test: [   0/  26]	Loss 0.321 (0.321)	test_acc   0.82 (  0.82)	test_minacc   0.80 (  0.80)	test_majacc   0.82 (  0.82)	Loss_d 0.321 (0.321)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.313 (0.314)	test_acc   0.83 (  0.83)	test_minacc   0.83 (  0.84)	test_majacc   0.82 (  0.82)	Loss_d 0.313 (0.314)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.83 (  0.84)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.62 (  0.63)
Test: [  20/  26]	Loss 0.322 (0.311)	test_acc   0.82 (  0.83)	test_minacc   0.80 (  0.86)	test_majacc   0.82 (  0.82)	Loss_d 0.322 (0.311)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.80 (  0.86)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.66 (  0.64)
Test: [  26/  26]	Loss 0.328 (0.314)	test_acc   0.84 (  0.83)	test_minacc   0.90 (  0.85)	test_majacc   0.83 (  0.82)	Loss_d 0.328 (0.314)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.90 (  0.85)	test_majacc_d   0.83 (  0.82)	test_corr_d   0.65 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.37it/s]
Test: [  0/  1]	Loss 1.465 (1.465)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.83 (  0.83)	Loss_d 1.465 (1.465)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.465 (1.465)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.83 (  0.83)	Loss_d 1.465 (1.465)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.09 (  0.09)
Overall Timing[ 19/  1]	epoch_time 0.0361 (0.0365)	validation_time 0.0004 (0.0007)	train_time 0.0357 (0.0357)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.827500019967556, 0.6060000061988831)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.24it/s] 23%|##3       | 6/26 [00:00<00:00, 28.18it/s] 38%|###8      | 10/26 [00:00<00:00, 32.80it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.39it/s] 69%|######9   | 18/26 [00:00<00:00, 36.86it/s] 85%|########4 | 22/26 [00:00<00:00, 37.73it/s]100%|##########| 26/26 [00:00<00:00, 38.14it/s]100%|##########| 26/26 [00:00<00:00, 32.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.35 (  0.33)	train_penalty   0.00 (  0.00)	weight_norm  25.06 ( 25.06)	train_acc   0.80 (  0.81)	train_minacc   0.83 (  0.85)	train_majacc   0.79 (  0.81)	train_corr   0.00 (  0.00)	l1 6.6615 (6.7064)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.97it/s] 23%|##3       | 6/26 [00:00<00:00, 25.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.58it/s] 42%|####2     | 11/26 [00:00<00:00, 35.09it/s] 65%|######5   | 17/26 [00:00<00:00, 41.08it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.08it/s] 88%|########8 | 23/26 [00:00<00:00, 45.94it/s]100%|##########| 26/26 [00:00<00:00, 36.52it/s]
Test: [   0/  26]	Loss 0.332 (0.332)	test_acc   0.80 (  0.80)	test_minacc   0.80 (  0.80)	test_majacc   0.80 (  0.80)	Loss_d 0.332 (0.332)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.316 (0.322)	test_acc   0.82 (  0.82)	test_minacc   0.81 (  0.84)	test_majacc   0.82 (  0.81)	Loss_d 0.316 (0.322)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.82 (  0.81)	test_corr_d   0.61 (  0.61)
Test: [  20/  26]	Loss 0.319 (0.314)	test_acc   0.82 (  0.82)	test_minacc   0.82 (  0.86)	test_majacc   0.82 (  0.82)	Loss_d 0.319 (0.314)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.343 (0.317)	test_acc   0.81 (  0.82)	test_minacc   0.83 (  0.86)	test_majacc   0.80 (  0.82)	Loss_d 0.343 (0.317)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.83 (  0.86)	test_majacc_d   0.80 (  0.82)	test_corr_d   0.63 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.66it/s]
Test: [  0/  1]	Loss 1.496 (1.496)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.83 (  0.83)	Loss_d 1.496 (1.496)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.496 (1.496)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.83 (  0.83)	Loss_d 1.496 (1.496)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.08 (  0.08)
Overall Timing[ 20/  1]	epoch_time 0.0349 (0.0364)	validation_time 0.0003 (0.0007)	train_time 0.0345 (0.0356)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.8229000260829925, 0.6140000224113464)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.66it/s] 27%|##6       | 7/26 [00:00<00:00, 30.95it/s] 42%|####2     | 11/26 [00:00<00:00, 34.21it/s] 62%|######1   | 16/26 [00:00<00:00, 36.97it/s] 81%|########  | 21/26 [00:00<00:00, 38.30it/s]100%|##########| 26/26 [00:00<00:00, 39.56it/s]100%|##########| 26/26 [00:00<00:00, 33.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.33 (  0.33)	train_penalty   0.00 (  0.00)	weight_norm  25.06 ( 25.06)	train_acc   0.82 (  0.81)	train_minacc   0.83 (  0.86)	train_majacc   0.82 (  0.81)	train_corr   0.00 (  0.00)	l1 6.7678 (6.7706)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.67it/s] 27%|##6       | 7/26 [00:00<00:00, 34.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.32it/s] 46%|####6     | 12/26 [00:00<00:00, 39.89it/s] 65%|######5   | 17/26 [00:00<00:00, 40.89it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.89it/s] 88%|########8 | 23/26 [00:00<00:00, 44.76it/s]100%|##########| 26/26 [00:00<00:00, 38.68it/s]
Test: [   0/  26]	Loss 0.324 (0.324)	test_acc   0.81 (  0.81)	test_minacc   0.82 (  0.82)	test_majacc   0.81 (  0.81)	Loss_d 0.324 (0.324)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.327 (0.331)	test_acc   0.82 (  0.82)	test_minacc   0.80 (  0.83)	test_majacc   0.82 (  0.81)	Loss_d 0.327 (0.331)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.80 (  0.83)	test_majacc_d   0.82 (  0.81)	test_corr_d   0.63 (  0.62)
Test: [  20/  26]	Loss 0.311 (0.316)	test_acc   0.82 (  0.82)	test_minacc   0.80 (  0.85)	test_majacc   0.82 (  0.82)	Loss_d 0.311 (0.316)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.80 (  0.85)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.67 (  0.64)
Test: [  26/  26]	Loss 0.323 (0.317)	test_acc   0.83 (  0.82)	test_minacc   0.83 (  0.85)	test_majacc   0.83 (  0.82)	Loss_d 0.323 (0.317)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.83 (  0.85)	test_majacc_d   0.83 (  0.82)	test_corr_d   0.66 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.61it/s]
Test: [  0/  1]	Loss 1.570 (1.570)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.82 (  0.82)	Loss_d 1.570 (1.570)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 1.570 (1.570)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.82 (  0.82)	Loss_d 1.570 (1.570)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.11 (  0.11)
Overall Timing[ 21/  1]	epoch_time 0.0349 (0.0363)	validation_time 0.0004 (0.0007)	train_time 0.0345 (0.0356)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.8246000247001648, 0.6110000014305115)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.22it/s] 19%|#9        | 5/26 [00:00<00:00, 23.35it/s] 35%|###4      | 9/26 [00:00<00:00, 30.26it/s] 50%|#####     | 13/26 [00:00<00:00, 33.30it/s] 69%|######9   | 18/26 [00:00<00:00, 36.18it/s] 85%|########4 | 22/26 [00:00<00:00, 37.32it/s]100%|##########| 26/26 [00:00<00:00, 37.79it/s]100%|##########| 26/26 [00:00<00:00, 31.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.001)	train_nll   0.33 (  0.33)	train_penalty   0.00 (  0.00)	weight_norm  25.07 ( 25.07)	train_acc   0.80 (  0.82)	train_minacc   0.80 (  0.86)	train_majacc   0.80 (  0.81)	train_corr   0.00 (  0.00)	l1 7.0441 (6.8899)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.49it/s] 27%|##6       | 7/26 [00:00<00:00, 29.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.17it/s] 50%|#####     | 13/26 [00:00<00:00, 37.78it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.21it/s] 92%|#########2| 24/26 [00:00<00:00, 46.25it/s]100%|##########| 26/26 [00:00<00:00, 37.12it/s]
Test: [   0/  26]	Loss 0.329 (0.329)	test_acc   0.80 (  0.80)	test_minacc   0.82 (  0.82)	test_majacc   0.80 (  0.80)	Loss_d 0.329 (0.329)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.338 (0.338)	test_acc   0.80 (  0.81)	test_minacc   0.80 (  0.84)	test_majacc   0.80 (  0.80)	Loss_d 0.338 (0.338)	test_acc_d   0.80 (  0.81)	test_minacc_d   0.80 (  0.84)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.61 (  0.61)
Test: [  20/  26]	Loss 0.302 (0.323)	test_acc   0.82 (  0.82)	test_minacc   0.80 (  0.85)	test_majacc   0.82 (  0.81)	Loss_d 0.302 (0.323)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.80 (  0.85)	test_majacc_d   0.82 (  0.81)	test_corr_d   0.67 (  0.63)
Test: [  26/  26]	Loss 0.322 (0.321)	test_acc   0.80 (  0.82)	test_minacc   0.83 (  0.85)	test_majacc   0.80 (  0.81)	Loss_d 0.322 (0.321)	test_acc_d   0.80 (  0.82)	test_minacc_d   0.83 (  0.85)	test_majacc_d   0.80 (  0.81)	test_corr_d   0.65 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.36it/s]
Test: [  0/  1]	Loss 1.613 (1.613)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.81 (  0.81)	Loss_d 1.613 (1.613)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.613 (1.613)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.81 (  0.81)	Loss_d 1.613 (1.613)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.09 (  0.09)
Overall Timing[ 22/  1]	epoch_time 0.0345 (0.0363)	validation_time 0.0004 (0.0007)	train_time 0.0341 (0.0355)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.8174000238776207, 0.6130000352859497)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.73it/s] 19%|#9        | 5/26 [00:00<00:00, 23.50it/s] 35%|###4      | 9/26 [00:00<00:00, 28.29it/s] 50%|#####     | 13/26 [00:00<00:00, 27.91it/s] 65%|######5   | 17/26 [00:00<00:00, 30.82it/s] 81%|########  | 21/26 [00:00<00:00, 31.27it/s] 96%|#########6| 25/26 [00:00<00:00, 32.83it/s]100%|##########| 26/26 [00:00<00:00, 28.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.819123268127441
set z to 6.750932035446167
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 382 tensor(-0.0098, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 225 tensor(-0.0180, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 180 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 170 tensor(-0.0008, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.043 (0.041)	train_nll   0.56 (  0.40)	train_penalty   0.04 (  0.04)	weight_norm  26.48 ( 25.36)	train_acc   0.82 (  0.79)	train_minacc   0.87 (  0.71)	train_majacc   0.82 (  0.80)	train_corr   0.00 (  0.00)	l1 8.6886 (7.8171)	zero_count 0.0000 (29.0940)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.05it/s] 31%|###       | 8/26 [00:00<00:00, 39.38it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.38it/s] 50%|#####     | 13/26 [00:00<00:00, 41.98it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.52it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.52it/s] 96%|#########6| 25/26 [00:00<00:00, 48.69it/s]100%|##########| 26/26 [00:00<00:00, 41.67it/s]
Test: [   0/  26]	Loss 0.479 (0.479)	test_acc   0.49 (  0.49)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.479 (0.479)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.491 (0.486)	test_acc   0.51 (  0.51)	test_minacc   0.53 (  0.51)	test_majacc   0.50 (  0.51)	Loss_d 0.491 (0.486)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.56 (  0.59)
Test: [  20/  26]	Loss 0.486 (0.492)	test_acc   0.49 (  0.50)	test_minacc   0.49 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.486 (0.492)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.49 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.57 (  0.59)
Test: [  26/  26]	Loss 0.498 (0.490)	test_acc   0.46 (  0.51)	test_minacc   0.37 (  0.51)	test_majacc   0.48 (  0.51)	Loss_d 0.498 (0.490)	test_acc_d   0.46 (  0.51)	test_minacc_d   0.37 (  0.51)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.64 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.82it/s]
Test: [  0/  1]	Loss 1.570 (1.570)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.570 (1.570)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 1.570 (1.570)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.570 (1.570)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.01 (  0.01)
Overall Timing[ 23/  1]	epoch_time 0.0372 (0.0363)	validation_time 0.0003 (0.0006)	train_time 0.0369 (0.0356)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5058000116348267, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.55it/s] 15%|#5        | 4/26 [00:00<00:01, 14.47it/s] 31%|###       | 8/26 [00:00<00:00, 22.41it/s] 46%|####6     | 12/26 [00:00<00:00, 27.07it/s] 62%|######1   | 16/26 [00:00<00:00, 30.81it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.82it/s] 92%|#########2| 24/26 [00:00<00:00, 33.64it/s]100%|##########| 26/26 [00:00<00:00, 26.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 169 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 162 tensor(-0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 155 tensor(-0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 154 tensor(-0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 155 tensor(-0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 164 tensor(-0.0008, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.005)	train_nll   0.51 (  0.50)	train_penalty   0.00 (  0.01)	weight_norm  28.15 ( 27.61)	train_acc   0.81 (  0.71)	train_minacc   0.77 (  0.58)	train_majacc   0.82 (  0.74)	train_corr   0.00 (  0.00)	l1 7.0765 (7.3166)	zero_count 0.0000 (81.9390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.64it/s] 19%|#9        | 5/26 [00:00<00:00, 26.18it/s]                                               19%|#9        | 5/26 [00:00<00:00, 26.18it/s] 42%|####2     | 11/26 [00:00<00:00, 37.64it/s] 65%|######5   | 17/26 [00:00<00:00, 45.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 45.35it/s] 88%|########8 | 23/26 [00:00<00:00, 46.63it/s]100%|##########| 26/26 [00:00<00:00, 39.77it/s]
Test: [   0/  26]	Loss 0.569 (0.569)	test_acc   0.45 (  0.45)	test_minacc   0.83 (  0.83)	test_majacc   0.38 (  0.38)	Loss_d 0.569 (0.569)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.622 (0.589)	test_acc   0.41 (  0.45)	test_minacc   0.64 (  0.75)	test_majacc   0.36 (  0.39)	Loss_d 0.622 (0.589)	test_acc_d   0.41 (  0.45)	test_minacc_d   0.64 (  0.75)	test_majacc_d   0.36 (  0.39)	test_corr_d   0.41 (  0.45)
Test: [  20/  26]	Loss 0.591 (0.584)	test_acc   0.41 (  0.44)	test_minacc   0.75 (  0.76)	test_majacc   0.35 (  0.39)	Loss_d 0.591 (0.584)	test_acc_d   0.41 (  0.44)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.35 (  0.39)	test_corr_d   0.44 (  0.46)
Test: [  26/  26]	Loss 0.562 (0.582)	test_acc   0.46 (  0.44)	test_minacc   0.73 (  0.75)	test_majacc   0.42 (  0.39)	Loss_d 0.562 (0.582)	test_acc_d   0.46 (  0.44)	test_minacc_d   0.73 (  0.75)	test_majacc_d   0.42 (  0.39)	test_corr_d   0.50 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.22it/s]
Test: [  0/  1]	Loss 1.470 (1.470)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.40 (  0.40)	Loss_d 1.470 (1.470)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.470 (1.470)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.40 (  0.40)	Loss_d 1.470 (1.470)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.15 (  0.15)
Overall Timing[ 24/  1]	epoch_time 0.0363 (0.0363)	validation_time 0.0004 (0.0006)	train_time 0.0359 (0.0356)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.4443000040054321, 0.6770000457763672)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.77it/s] 19%|#9        | 5/26 [00:00<00:01, 19.66it/s] 35%|###4      | 9/26 [00:00<00:00, 24.66it/s] 50%|#####     | 13/26 [00:00<00:00, 27.46it/s] 62%|######1   | 16/26 [00:00<00:00, 28.20it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.99it/s] 92%|#########2| 24/26 [00:00<00:00, 31.21it/s]100%|##########| 26/26 [00:01<00:00, 25.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 183 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 209 tensor(-0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 247 tensor(-0.0008, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 393 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 349 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 315 tensor(-0.0003, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.001 (0.001)	train_nll   0.55 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  28.31 ( 28.26)	train_acc   0.53 (  0.51)	train_minacc   0.80 (  0.74)	train_majacc   0.49 (  0.47)	train_corr   0.00 (  0.00)	l1 6.8061 (6.8111)	zero_count 0.0000 (59.3190)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 19.98it/s] 31%|###       | 8/26 [00:00<00:00, 33.83it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.83it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.50it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.50it/s] 96%|#########6| 25/26 [00:00<00:00, 48.61it/s]100%|##########| 26/26 [00:00<00:00, 40.41it/s]
Test: [   0/  26]	Loss 0.569 (0.569)	test_acc   0.49 (  0.49)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.569 (0.569)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.571 (0.564)	test_acc   0.51 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.571 (0.564)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.47 (  0.50)
Test: [  20/  26]	Loss 0.581 (0.567)	test_acc   0.47 (  0.50)	test_minacc   0.47 (  0.51)	test_majacc   0.47 (  0.50)	Loss_d 0.581 (0.567)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.50 (  0.51)
Test: [  26/  26]	Loss 0.566 (0.567)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.52)	test_majacc   0.45 (  0.50)	Loss_d 0.566 (0.567)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.45 (  0.50)	test_corr_d   0.50 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.16it/s]
Test: [  0/  1]	Loss 1.517 (1.517)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.517 (1.517)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.517 (1.517)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.517 (1.517)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 25/  1]	epoch_time 0.0374 (0.0363)	validation_time 0.0003 (0.0006)	train_time 0.0371 (0.0356)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5001000134646892, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.19it/s] 19%|#9        | 5/26 [00:00<00:00, 23.28it/s] 35%|###4      | 9/26 [00:00<00:00, 29.30it/s] 50%|#####     | 13/26 [00:00<00:00, 30.19it/s] 65%|######5   | 17/26 [00:00<00:00, 31.28it/s] 81%|########  | 21/26 [00:00<00:00, 28.73it/s] 96%|#########6| 25/26 [00:00<00:00, 30.12it/s]100%|##########| 26/26 [00:00<00:00, 27.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 311 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 304 tensor(-7.2625e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 307 tensor(-6.0086e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 302 tensor(-3.4167e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 473 tensor(8.7038e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.31)	train_acc   0.47 (  0.50)	train_minacc   0.47 (  0.51)	train_majacc   0.47 (  0.50)	train_corr   0.00 (  0.00)	l1 6.7509 (6.7600)	zero_count 209.0000 (36.6980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.77it/s] 27%|##6       | 7/26 [00:00<00:00, 30.61it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.61it/s] 50%|#####     | 13/26 [00:00<00:00, 41.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.11it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.11it/s] 96%|#########6| 25/26 [00:00<00:00, 48.88it/s]100%|##########| 26/26 [00:00<00:00, 39.72it/s]
Test: [   0/  26]	Loss 0.573 (0.573)	test_acc   0.49 (  0.49)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.573 (0.573)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.572 (0.567)	test_acc   0.50 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.572 (0.567)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.46 (  0.49)
Test: [  20/  26]	Loss 0.584 (0.570)	test_acc   0.47 (  0.50)	test_minacc   0.47 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.584 (0.570)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.571 (0.570)	test_acc   0.47 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.571 (0.570)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.48 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.98it/s]
Test: [  0/  1]	Loss 1.500 (1.500)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.500 (1.500)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.500 (1.500)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.500 (1.500)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 26/  1]	epoch_time 0.0394 (0.0365)	validation_time 0.0004 (0.0006)	train_time 0.0390 (0.0358)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5001000100672245, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.93it/s] 15%|#5        | 4/26 [00:00<00:01, 19.00it/s] 31%|###       | 8/26 [00:00<00:00, 27.42it/s] 50%|#####     | 13/26 [00:00<00:00, 32.58it/s] 69%|######9   | 18/26 [00:00<00:00, 35.63it/s] 88%|########8 | 23/26 [00:00<00:00, 37.25it/s]100%|##########| 26/26 [00:00<00:00, 30.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 465 tensor(2.1360e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 297 tensor(-8.5301e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 479 tensor(2.6920e-05, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.46 (  0.49)	train_minacc   0.87 (  0.60)	train_majacc   0.40 (  0.47)	train_corr   0.00 (  0.00)	l1 6.7591 (6.7558)	zero_count 0.0000 (11.6220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.18it/s] 31%|###       | 8/26 [00:00<00:00, 40.31it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.31it/s] 50%|#####     | 13/26 [00:00<00:00, 42.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.28it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.28it/s] 96%|#########6| 25/26 [00:00<00:00, 47.79it/s]100%|##########| 26/26 [00:00<00:00, 41.27it/s]
Test: [   0/  26]	Loss 0.574 (0.574)	test_acc   0.49 (  0.49)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.574 (0.574)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.573 (0.568)	test_acc   0.47 (  0.49)	test_minacc   0.80 (  0.70)	test_majacc   0.39 (  0.45)	Loss_d 0.573 (0.568)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.80 (  0.70)	test_majacc_d   0.39 (  0.45)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.584 (0.571)	test_acc   0.44 (  0.48)	test_minacc   0.69 (  0.71)	test_majacc   0.40 (  0.44)	Loss_d 0.584 (0.571)	test_acc_d   0.44 (  0.48)	test_minacc_d   0.69 (  0.71)	test_majacc_d   0.40 (  0.44)	test_corr_d   0.48 (  0.48)
Test: [  26/  26]	Loss 0.572 (0.571)	test_acc   0.46 (  0.48)	test_minacc   0.87 (  0.71)	test_majacc   0.40 (  0.44)	Loss_d 0.572 (0.571)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.87 (  0.71)	test_majacc_d   0.40 (  0.44)	test_corr_d   0.47 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.57it/s]
Test: [  0/  1]	Loss 1.500 (1.500)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.500 (1.500)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.500 (1.500)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.500 (1.500)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Overall Timing[ 27/  1]	epoch_time 0.0381 (0.0365)	validation_time 0.0004 (0.0006)	train_time 0.0377 (0.0358)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.4844000103771687, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.95it/s] 15%|#5        | 4/26 [00:00<00:01, 16.63it/s] 31%|###       | 8/26 [00:00<00:00, 25.73it/s] 50%|#####     | 13/26 [00:00<00:00, 31.36it/s] 65%|######5   | 17/26 [00:00<00:00, 33.75it/s] 81%|########  | 21/26 [00:00<00:00, 32.69it/s] 96%|#########6| 25/26 [00:00<00:00, 32.36it/s]100%|##########| 26/26 [00:00<00:00, 27.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 467 tensor(3.5403e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 456 tensor(2.8056e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 303 tensor(-9.9574e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 298 tensor(-1.0007e-05, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.44 (  0.46)	train_minacc   1.00 (  0.81)	train_majacc   0.37 (  0.40)	train_corr   0.00 (  0.00)	l1 6.7638 (6.7514)	zero_count 0.0000 (13.2210)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.34it/s] 19%|#9        | 5/26 [00:00<00:00, 23.91it/s] 38%|###8      | 10/26 [00:00<00:00, 35.29it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.29it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.04it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.41it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.41it/s] 96%|#########6| 25/26 [00:00<00:00, 41.08it/s]100%|##########| 26/26 [00:00<00:00, 34.88it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.50 (  0.50)	test_minacc   0.92 (  0.92)	test_majacc   0.41 (  0.41)	Loss_d 0.570 (0.570)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.569 (0.564)	test_acc   0.44 (  0.46)	test_minacc   0.89 (  0.90)	test_majacc   0.34 (  0.38)	Loss_d 0.569 (0.564)	test_acc_d   0.44 (  0.46)	test_minacc_d   0.89 (  0.90)	test_majacc_d   0.34 (  0.38)	test_corr_d   0.45 (  0.49)
Test: [  20/  26]	Loss 0.579 (0.566)	test_acc   0.42 (  0.46)	test_minacc   0.87 (  0.90)	test_majacc   0.34 (  0.38)	Loss_d 0.579 (0.566)	test_acc_d   0.42 (  0.46)	test_minacc_d   0.87 (  0.90)	test_majacc_d   0.34 (  0.38)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.567 (0.567)	test_acc   0.44 (  0.46)	test_minacc   1.00 (  0.90)	test_majacc   0.37 (  0.38)	Loss_d 0.567 (0.567)	test_acc_d   0.44 (  0.46)	test_minacc_d   1.00 (  0.90)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.48 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.29it/s]
Test: [  0/  1]	Loss 1.517 (1.517)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.517 (1.517)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.517 (1.517)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.50 (  0.50)	Loss_d 1.517 (1.517)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 28/  1]	epoch_time 0.0406 (0.0367)	validation_time 0.0003 (0.0006)	train_time 0.0402 (0.0360)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.45670000338554384, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.36it/s] 23%|##3       | 6/26 [00:00<00:00, 25.50it/s] 35%|###4      | 9/26 [00:00<00:00, 25.63it/s] 50%|#####     | 13/26 [00:00<00:00, 29.37it/s] 65%|######5   | 17/26 [00:00<00:00, 30.85it/s] 81%|########  | 21/26 [00:00<00:00, 32.41it/s] 96%|#########6| 25/26 [00:00<00:00, 33.89it/s]100%|##########| 26/26 [00:00<00:00, 28.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 492 tensor(3.5372e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 463 tensor(7.8126e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 311 tensor(-0.0001, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.42 (  0.45)	train_minacc   0.97 (  0.90)	train_majacc   0.35 (  0.37)	train_corr   0.00 (  0.00)	l1 6.7592 (6.7492)	zero_count 0.0000 (10.9200)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.09it/s] 27%|##6       | 7/26 [00:00<00:00, 35.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.34it/s] 50%|#####     | 13/26 [00:00<00:00, 40.35it/s] 69%|######9   | 18/26 [00:00<00:00, 43.34it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.34it/s] 92%|#########2| 24/26 [00:00<00:00, 47.87it/s]100%|##########| 26/26 [00:00<00:00, 39.23it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.47 (  0.47)	test_minacc   0.95 (  0.95)	test_majacc   0.38 (  0.38)	Loss_d 0.570 (0.570)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.569 (0.565)	test_acc   0.44 (  0.45)	test_minacc   0.90 (  0.92)	test_majacc   0.33 (  0.36)	Loss_d 0.569 (0.565)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.90 (  0.92)	test_majacc_d   0.33 (  0.36)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.580 (0.567)	test_acc   0.40 (  0.44)	test_minacc   0.89 (  0.92)	test_majacc   0.32 (  0.36)	Loss_d 0.580 (0.567)	test_acc_d   0.40 (  0.44)	test_minacc_d   0.89 (  0.92)	test_majacc_d   0.32 (  0.36)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.568 (0.567)	test_acc   0.43 (  0.44)	test_minacc   1.00 (  0.91)	test_majacc   0.35 (  0.36)	Loss_d 0.568 (0.567)	test_acc_d   0.43 (  0.44)	test_minacc_d   1.00 (  0.91)	test_majacc_d   0.35 (  0.36)	test_corr_d   0.47 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.24it/s]
Test: [  0/  1]	Loss 1.524 (1.524)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.524 (1.524)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.524 (1.524)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.524 (1.524)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.33 (  0.33)
Overall Timing[ 29/  1]	epoch_time 0.0364 (0.0367)	validation_time 0.0006 (0.0006)	train_time 0.0358 (0.0360)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.44230000415444376, 0.5870000123977661)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.79it/s] 19%|#9        | 5/26 [00:00<00:01, 18.56it/s] 31%|###       | 8/26 [00:00<00:00, 21.95it/s] 46%|####6     | 12/26 [00:00<00:00, 26.73it/s] 62%|######1   | 16/26 [00:00<00:00, 29.98it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.60it/s] 92%|#########2| 24/26 [00:00<00:00, 33.19it/s]100%|##########| 26/26 [00:01<00:00, 25.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 501 tensor(2.7602e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 479 tensor(7.5623e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 304 tensor(-0.0001, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.40 (  0.43)	train_minacc   0.83 (  0.92)	train_majacc   0.34 (  0.35)	train_corr   0.00 (  0.00)	l1 6.7625 (6.7484)	zero_count 0.0000 (9.4380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.94it/s] 19%|#9        | 5/26 [00:00<00:00, 26.34it/s] 38%|###8      | 10/26 [00:00<00:00, 34.56it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.56it/s] 62%|######1   | 16/26 [00:00<00:00, 43.35it/s]                                                62%|######1   | 16/26 [00:00<00:00, 43.35it/s] 85%|########4 | 22/26 [00:00<00:00, 44.49it/s]100%|##########| 26/26 [00:00<00:00, 38.88it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.45 (  0.45)	test_minacc   0.98 (  0.98)	test_majacc   0.34 (  0.34)	Loss_d 0.570 (0.570)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.568 (0.564)	test_acc   0.44 (  0.44)	test_minacc   0.89 (  0.92)	test_majacc   0.34 (  0.35)	Loss_d 0.568 (0.564)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.89 (  0.92)	test_majacc_d   0.34 (  0.35)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.578 (0.566)	test_acc   0.39 (  0.43)	test_minacc   0.93 (  0.92)	test_majacc   0.30 (  0.34)	Loss_d 0.578 (0.566)	test_acc_d   0.39 (  0.43)	test_minacc_d   0.93 (  0.92)	test_majacc_d   0.30 (  0.34)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.567 (0.567)	test_acc   0.41 (  0.43)	test_minacc   0.97 (  0.92)	test_majacc   0.33 (  0.34)	Loss_d 0.567 (0.567)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.97 (  0.92)	test_majacc_d   0.33 (  0.34)	test_corr_d   0.47 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.62it/s]
Test: [  0/  1]	Loss 1.532 (1.532)	test_acc   0.65 (  0.65)	test_minacc   0.67 (  0.67)	test_majacc   0.39 (  0.39)	Loss_d 1.532 (1.532)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.532 (1.532)	test_acc   0.65 (  0.65)	test_minacc   0.67 (  0.67)	test_majacc   0.39 (  0.39)	Loss_d 1.532 (1.532)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.33 (  0.33)
Overall Timing[ 30/  1]	epoch_time 0.0427 (0.0368)	validation_time 0.0003 (0.0006)	train_time 0.0423 (0.0362)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.43140000450611116, 0.6450000405311584)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.95it/s] 23%|##3       | 6/26 [00:00<00:00, 25.75it/s] 38%|###8      | 10/26 [00:00<00:00, 31.38it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.32it/s] 69%|######9   | 18/26 [00:00<00:00, 35.90it/s] 85%|########4 | 22/26 [00:00<00:00, 34.26it/s]100%|##########| 26/26 [00:00<00:00, 35.73it/s]100%|##########| 26/26 [00:00<00:00, 31.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 478 tensor(8.7578e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 464 tensor(4.4943e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 306 tensor(-0.0001, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.40 (  0.43)	train_minacc   0.73 (  0.91)	train_majacc   0.35 (  0.34)	train_corr   0.00 (  0.00)	l1 6.7485 (6.7511)	zero_count 0.0000 (11.1930)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.43it/s] 23%|##3       | 6/26 [00:00<00:00, 27.67it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.67it/s] 42%|####2     | 11/26 [00:00<00:00, 34.83it/s] 65%|######5   | 17/26 [00:00<00:00, 43.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.14it/s] 88%|########8 | 23/26 [00:00<00:00, 43.63it/s]100%|##########| 26/26 [00:00<00:00, 37.18it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.44 (  0.44)	test_minacc   0.98 (  0.98)	test_majacc   0.33 (  0.33)	Loss_d 0.570 (0.570)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.568 (0.564)	test_acc   0.44 (  0.43)	test_minacc   0.89 (  0.92)	test_majacc   0.34 (  0.34)	Loss_d 0.568 (0.564)	test_acc_d   0.44 (  0.43)	test_minacc_d   0.89 (  0.92)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.578 (0.567)	test_acc   0.38 (  0.43)	test_minacc   0.89 (  0.92)	test_majacc   0.30 (  0.34)	Loss_d 0.578 (0.567)	test_acc_d   0.38 (  0.43)	test_minacc_d   0.89 (  0.92)	test_majacc_d   0.30 (  0.34)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.568 (0.567)	test_acc   0.41 (  0.43)	test_minacc   0.93 (  0.92)	test_majacc   0.34 (  0.34)	Loss_d 0.568 (0.567)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.93 (  0.92)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.47 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.37it/s]
Test: [  0/  1]	Loss 1.538 (1.538)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.39 (  0.39)	Loss_d 1.538 (1.538)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.538 (1.538)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.39 (  0.39)	Loss_d 1.538 (1.538)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.33 (  0.33)
Overall Timing[ 31/  1]	epoch_time 0.0450 (0.0371)	validation_time 0.0004 (0.0006)	train_time 0.0446 (0.0364)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.426700004786253, 0.6570000052452087)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.96it/s] 15%|#5        | 4/26 [00:00<00:01, 13.08it/s] 31%|###       | 8/26 [00:00<00:00, 21.26it/s] 42%|####2     | 11/26 [00:00<00:00, 22.57it/s] 62%|######1   | 16/26 [00:00<00:00, 28.74it/s] 81%|########  | 21/26 [00:00<00:00, 32.54it/s] 96%|#########6| 25/26 [00:00<00:00, 34.53it/s]100%|##########| 26/26 [00:01<00:00, 25.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 500 tensor(2.5912e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 479 tensor(8.3786e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 306 tensor(-0.0001, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.39 (  0.42)	train_minacc   0.73 (  0.90)	train_majacc   0.35 (  0.33)	train_corr   0.00 (  0.00)	l1 6.7417 (6.7502)	zero_count 0.0000 (9.6720)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 27%|##6       | 7/26 [00:00<00:00, 34.42it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.42it/s] 46%|####6     | 12/26 [00:00<00:00, 40.26it/s] 69%|######9   | 18/26 [00:00<00:00, 46.26it/s]                                                69%|######9   | 18/26 [00:00<00:00, 46.26it/s] 88%|########8 | 23/26 [00:00<00:00, 47.32it/s]100%|##########| 26/26 [00:00<00:00, 40.59it/s]
Test: [   0/  26]	Loss 0.571 (0.571)	test_acc   0.44 (  0.44)	test_minacc   1.00 (  1.00)	test_majacc   0.33 (  0.33)	Loss_d 0.571 (0.571)	test_acc_d   0.44 (  0.44)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.568 (0.565)	test_acc   0.43 (  0.43)	test_minacc   0.86 (  0.91)	test_majacc   0.33 (  0.34)	Loss_d 0.568 (0.565)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.86 (  0.91)	test_majacc_d   0.33 (  0.34)	test_corr_d   0.45 (  0.48)
Test: [  20/  26]	Loss 0.577 (0.567)	test_acc   0.37 (  0.42)	test_minacc   0.89 (  0.90)	test_majacc   0.29 (  0.33)	Loss_d 0.577 (0.567)	test_acc_d   0.37 (  0.42)	test_minacc_d   0.89 (  0.90)	test_majacc_d   0.29 (  0.33)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.568 (0.567)	test_acc   0.39 (  0.42)	test_minacc   0.73 (  0.90)	test_majacc   0.34 (  0.33)	Loss_d 0.568 (0.567)	test_acc_d   0.39 (  0.42)	test_minacc_d   0.73 (  0.90)	test_majacc_d   0.34 (  0.33)	test_corr_d   0.47 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.88it/s]
Test: [  0/  1]	Loss 1.544 (1.544)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.39 (  0.39)	Loss_d 1.544 (1.544)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.544 (1.544)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.69)	test_majacc   0.39 (  0.39)	Loss_d 1.544 (1.544)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.33 (  0.33)
Overall Timing[ 32/  1]	epoch_time 0.0389 (0.0372)	validation_time 0.0004 (0.0006)	train_time 0.0385 (0.0365)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.41940000492334367, 0.6630000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.36it/s] 15%|#5        | 4/26 [00:00<00:01, 18.14it/s] 31%|###       | 8/26 [00:00<00:00, 21.72it/s] 46%|####6     | 12/26 [00:00<00:00, 26.92it/s] 62%|######1   | 16/26 [00:00<00:00, 30.82it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.51it/s] 92%|#########2| 24/26 [00:00<00:00, 32.78it/s]100%|##########| 26/26 [00:00<00:00, 27.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 292 tensor(-8.2039e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 470 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 466 tensor(2.0735e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.40 (  0.42)	train_minacc   0.97 (  0.90)	train_majacc   0.33 (  0.33)	train_corr   0.00 (  0.00)	l1 6.7297 (6.7524)	zero_count 0.0000 (19.8900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.79it/s] 23%|##3       | 6/26 [00:00<00:00, 29.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.39it/s] 42%|####2     | 11/26 [00:00<00:00, 37.12it/s] 62%|######1   | 16/26 [00:00<00:00, 37.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.58it/s] 81%|########  | 21/26 [00:00<00:00, 40.60it/s]100%|##########| 26/26 [00:00<00:00, 35.50it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.44 (  0.44)	test_minacc   0.95 (  0.95)	test_majacc   0.33 (  0.33)	Loss_d 0.570 (0.570)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.567 (0.564)	test_acc   0.43 (  0.43)	test_minacc   0.89 (  0.91)	test_majacc   0.33 (  0.34)	Loss_d 0.567 (0.564)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.89 (  0.91)	test_majacc_d   0.33 (  0.34)	test_corr_d   0.46 (  0.48)
Test: [  20/  26]	Loss 0.576 (0.566)	test_acc   0.38 (  0.42)	test_minacc   0.93 (  0.91)	test_majacc   0.29 (  0.33)	Loss_d 0.576 (0.566)	test_acc_d   0.38 (  0.42)	test_minacc_d   0.93 (  0.91)	test_majacc_d   0.29 (  0.33)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.568 (0.566)	test_acc   0.40 (  0.42)	test_minacc   0.97 (  0.91)	test_majacc   0.33 (  0.33)	Loss_d 0.568 (0.566)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.97 (  0.91)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.47 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.74it/s]
Test: [  0/  1]	Loss 1.547 (1.547)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.45 (  0.45)	Loss_d 1.547 (1.547)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.547 (1.547)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.45 (  0.45)	Loss_d 1.547 (1.547)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.34 (  0.34)
Overall Timing[ 33/  1]	epoch_time 0.0430 (0.0373)	validation_time 0.0004 (0.0006)	train_time 0.0426 (0.0367)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.42080000492930414, 0.6160000562667847)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.73it/s] 27%|##6       | 7/26 [00:00<00:00, 24.96it/s] 42%|####2     | 11/26 [00:00<00:00, 29.43it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.23it/s] 88%|########8 | 23/26 [00:00<00:00, 34.27it/s]100%|##########| 26/26 [00:00<00:00, 30.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 457 tensor(1.1047e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.40 (  0.42)	train_minacc   0.97 (  0.90)	train_majacc   0.32 (  0.33)	train_corr   0.00 (  0.00)	l1 6.7376 (6.7447)	zero_count 0.0000 (2.1060)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.65it/s] 23%|##3       | 6/26 [00:00<00:01, 19.23it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.23it/s] 42%|####2     | 11/26 [00:00<00:00, 28.71it/s] 62%|######1   | 16/26 [00:00<00:00, 35.10it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.10it/s] 81%|########  | 21/26 [00:00<00:00, 36.96it/s]100%|##########| 26/26 [00:00<00:00, 30.08it/s]
Test: [   0/  26]	Loss 0.574 (0.574)	test_acc   0.44 (  0.44)	test_minacc   0.89 (  0.89)	test_majacc   0.34 (  0.34)	Loss_d 0.574 (0.574)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.570 (0.568)	test_acc   0.43 (  0.43)	test_minacc   0.87 (  0.90)	test_majacc   0.33 (  0.34)	Loss_d 0.570 (0.568)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.87 (  0.90)	test_majacc_d   0.33 (  0.34)	test_corr_d   0.45 (  0.47)
Test: [  20/  26]	Loss 0.581 (0.571)	test_acc   0.37 (  0.42)	test_minacc   0.89 (  0.90)	test_majacc   0.29 (  0.33)	Loss_d 0.581 (0.571)	test_acc_d   0.37 (  0.42)	test_minacc_d   0.89 (  0.90)	test_majacc_d   0.29 (  0.33)	test_corr_d   0.48 (  0.48)
Test: [  26/  26]	Loss 0.572 (0.570)	test_acc   0.40 (  0.42)	test_minacc   0.97 (  0.90)	test_majacc   0.32 (  0.33)	Loss_d 0.572 (0.570)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.97 (  0.90)	test_majacc_d   0.32 (  0.33)	test_corr_d   0.46 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.90it/s]
Test: [  0/  1]	Loss 1.552 (1.552)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.47 (  0.47)	Loss_d 1.552 (1.552)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.552 (1.552)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.47 (  0.47)	Loss_d 1.552 (1.552)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.33 (  0.33)
Overall Timing[ 34/  1]	epoch_time 0.0410 (0.0374)	validation_time 0.0006 (0.0006)	train_time 0.0403 (0.0368)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.4192000048160553, 0.5570000410079956)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.92it/s] 19%|#9        | 5/26 [00:00<00:00, 22.91it/s] 35%|###4      | 9/26 [00:00<00:00, 27.39it/s] 46%|####6     | 12/26 [00:00<00:00, 26.56it/s] 62%|######1   | 16/26 [00:00<00:00, 27.90it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.45it/s] 92%|#########2| 24/26 [00:00<00:00, 30.33it/s]100%|##########| 26/26 [00:01<00:00, 25.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 437 tensor(6.3745e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 322 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 304 tensor(-2.1304e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 479 tensor(9.8493e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 478 tensor(2.0308e-07, device='cuda:0')
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.39 (  0.42)	train_minacc   0.90 (  0.89)	train_majacc   0.32 (  0.33)	train_corr   0.00 (  0.00)	l1 6.8131 (6.7579)	zero_count 0.0000 (18.3300)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.88it/s] 27%|##6       | 7/26 [00:00<00:00, 30.23it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.23it/s] 46%|####6     | 12/26 [00:00<00:00, 36.47it/s] 65%|######5   | 17/26 [00:00<00:00, 40.20it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.20it/s] 85%|########4 | 22/26 [00:00<00:00, 42.85it/s]100%|##########| 26/26 [00:00<00:00, 34.48it/s]
Test: [   0/  26]	Loss 0.577 (0.577)	test_acc   0.43 (  0.43)	test_minacc   0.88 (  0.88)	test_majacc   0.34 (  0.34)	Loss_d 0.577 (0.577)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.571 (0.571)	test_acc   0.43 (  0.42)	test_minacc   0.87 (  0.89)	test_majacc   0.33 (  0.34)	Loss_d 0.571 (0.571)	test_acc_d   0.43 (  0.42)	test_minacc_d   0.87 (  0.89)	test_majacc_d   0.33 (  0.34)	test_corr_d   0.45 (  0.47)
Test: [  20/  26]	Loss 0.584 (0.573)	test_acc   0.37 (  0.42)	test_minacc   0.89 (  0.90)	test_majacc   0.29 (  0.33)	Loss_d 0.584 (0.573)	test_acc_d   0.37 (  0.42)	test_minacc_d   0.89 (  0.90)	test_majacc_d   0.29 (  0.33)	test_corr_d   0.48 (  0.47)
Test: [  26/  26]	Loss 0.575 (0.573)	test_acc   0.40 (  0.42)	test_minacc   0.97 (  0.89)	test_majacc   0.32 (  0.33)	Loss_d 0.575 (0.573)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.97 (  0.89)	test_majacc_d   0.32 (  0.33)	test_corr_d   0.46 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.39it/s]
Test: [  0/  1]	Loss 1.563 (1.563)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 1.563 (1.563)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.563 (1.563)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 1.563 (1.563)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.32 (  0.32)
Overall Timing[ 35/  1]	epoch_time 0.0396 (0.0375)	validation_time 0.0004 (0.0006)	train_time 0.0392 (0.0369)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.4178000048995018, 0.5300000309944153)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 19%|#9        | 5/26 [00:00<00:01, 19.79it/s] 35%|###4      | 9/26 [00:00<00:00, 25.73it/s] 46%|####6     | 12/26 [00:00<00:00, 25.86it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.15it/s] 85%|########4 | 22/26 [00:00<00:00, 29.29it/s] 96%|#########6| 25/26 [00:00<00:00, 28.27it/s]100%|##########| 26/26 [00:01<00:00, 24.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 303 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 480 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 484 tensor(6.0219e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 294 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 476 tensor(0.0001, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 472 tensor(2.3433e-05, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.40 (  0.42)	train_minacc   0.97 (  0.90)	train_majacc   0.32 (  0.34)	train_corr   0.00 (  0.00)	l1 6.7511 (6.7595)	zero_count 35.0000 (20.9990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.17it/s] 31%|###       | 8/26 [00:00<00:00, 38.44it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.44it/s] 50%|#####     | 13/26 [00:00<00:00, 42.29it/s] 69%|######9   | 18/26 [00:00<00:00, 43.21it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.21it/s] 88%|########8 | 23/26 [00:00<00:00, 42.66it/s]100%|##########| 26/26 [00:00<00:00, 39.15it/s]
Test: [   0/  26]	Loss 0.577 (0.577)	test_acc   0.44 (  0.44)	test_minacc   0.85 (  0.85)	test_majacc   0.35 (  0.35)	Loss_d 0.577 (0.577)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.572 (0.571)	test_acc   0.43 (  0.43)	test_minacc   0.90 (  0.87)	test_majacc   0.33 (  0.35)	Loss_d 0.572 (0.571)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.90 (  0.87)	test_majacc_d   0.33 (  0.35)	test_corr_d   0.45 (  0.47)
Test: [  20/  26]	Loss 0.584 (0.573)	test_acc   0.38 (  0.42)	test_minacc   0.87 (  0.88)	test_majacc   0.30 (  0.34)	Loss_d 0.584 (0.573)	test_acc_d   0.38 (  0.42)	test_minacc_d   0.87 (  0.88)	test_majacc_d   0.30 (  0.34)	test_corr_d   0.47 (  0.47)
Test: [  26/  26]	Loss 0.574 (0.573)	test_acc   0.40 (  0.42)	test_minacc   0.93 (  0.87)	test_majacc   0.32 (  0.34)	Loss_d 0.574 (0.573)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.93 (  0.87)	test_majacc_d   0.32 (  0.34)	test_corr_d   0.46 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.06it/s]
Test: [  0/  1]	Loss 1.567 (1.567)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.567 (1.567)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.567 (1.567)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.567 (1.567)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Overall Timing[ 36/  1]	epoch_time 0.0370 (0.0375)	validation_time 0.0004 (0.0006)	train_time 0.0366 (0.0368)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.4217000052034855, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.24it/s] 23%|##3       | 6/26 [00:00<00:00, 26.65it/s] 38%|###8      | 10/26 [00:00<00:00, 29.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.28it/s] 69%|######9   | 18/26 [00:00<00:00, 30.55it/s] 85%|########4 | 22/26 [00:00<00:00, 31.80it/s]100%|##########| 26/26 [00:00<00:00, 32.77it/s]100%|##########| 26/26 [00:00<00:00, 28.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 471 tensor(9.6757e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 461 tensor(1.4925e-05, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.39 (  0.43)	train_minacc   0.87 (  0.88)	train_majacc   0.33 (  0.35)	train_corr   0.00 (  0.00)	l1 6.7390 (6.7402)	zero_count 0.0000 (3.0810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.59it/s] 27%|##6       | 7/26 [00:00<00:00, 21.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.87it/s] 46%|####6     | 12/26 [00:00<00:00, 30.74it/s] 65%|######5   | 17/26 [00:00<00:00, 35.05it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.05it/s] 88%|########8 | 23/26 [00:00<00:00, 41.82it/s]100%|##########| 26/26 [00:00<00:00, 31.50it/s]
Test: [   0/  26]	Loss 0.583 (0.583)	test_acc   0.43 (  0.43)	test_minacc   0.70 (  0.70)	test_majacc   0.37 (  0.37)	Loss_d 0.583 (0.583)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.578 (0.576)	test_acc   0.44 (  0.43)	test_minacc   0.87 (  0.78)	test_majacc   0.34 (  0.36)	Loss_d 0.578 (0.576)	test_acc_d   0.44 (  0.43)	test_minacc_d   0.87 (  0.78)	test_majacc_d   0.34 (  0.36)	test_corr_d   0.44 (  0.46)
Test: [  20/  26]	Loss 0.591 (0.579)	test_acc   0.38 (  0.42)	test_minacc   0.76 (  0.79)	test_majacc   0.31 (  0.36)	Loss_d 0.591 (0.579)	test_acc_d   0.38 (  0.42)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.31 (  0.36)	test_corr_d   0.46 (  0.46)
Test: [  26/  26]	Loss 0.581 (0.578)	test_acc   0.39 (  0.42)	test_minacc   0.83 (  0.79)	test_majacc   0.33 (  0.36)	Loss_d 0.581 (0.578)	test_acc_d   0.39 (  0.42)	test_minacc_d   0.83 (  0.79)	test_majacc_d   0.33 (  0.36)	test_corr_d   0.45 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.24it/s]
Test: [  0/  1]	Loss 1.563 (1.563)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.563 (1.563)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.563 (1.563)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.563 (1.563)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Overall Timing[ 37/  1]	epoch_time 0.0409 (0.0376)	validation_time 0.0003 (0.0006)	train_time 0.0405 (0.0369)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.42190000477433204, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.96it/s] 19%|#9        | 5/26 [00:00<00:01, 18.01it/s] 35%|###4      | 9/26 [00:00<00:00, 24.87it/s] 50%|#####     | 13/26 [00:00<00:00, 25.88it/s] 65%|######5   | 17/26 [00:00<00:00, 28.96it/s] 81%|########  | 21/26 [00:00<00:00, 31.09it/s] 96%|#########6| 25/26 [00:00<00:00, 32.43it/s]100%|##########| 26/26 [00:00<00:00, 26.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 461 tensor(3.9075e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.32)	train_acc   0.40 (  0.44)	train_minacc   0.87 (  0.86)	train_majacc   0.33 (  0.37)	train_corr   0.00 (  0.00)	l1 6.6947 (6.7319)	zero_count 0.0000 (3.9000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.10it/s] 27%|##6       | 7/26 [00:00<00:00, 33.61it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.61it/s] 46%|####6     | 12/26 [00:00<00:00, 39.40it/s] 65%|######5   | 17/26 [00:00<00:00, 39.85it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.85it/s] 85%|########4 | 22/26 [00:00<00:00, 42.32it/s]100%|##########| 26/26 [00:00<00:00, 36.34it/s]
Test: [   0/  26]	Loss 0.575 (0.575)	test_acc   0.43 (  0.43)	test_minacc   0.86 (  0.86)	test_majacc   0.34 (  0.34)	Loss_d 0.575 (0.575)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.572 (0.569)	test_acc   0.43 (  0.42)	test_minacc   0.86 (  0.86)	test_majacc   0.33 (  0.34)	Loss_d 0.572 (0.569)	test_acc_d   0.43 (  0.42)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.33 (  0.34)	test_corr_d   0.45 (  0.47)
Test: [  20/  26]	Loss 0.584 (0.571)	test_acc   0.37 (  0.42)	test_minacc   0.84 (  0.86)	test_majacc   0.29 (  0.34)	Loss_d 0.584 (0.571)	test_acc_d   0.37 (  0.42)	test_minacc_d   0.84 (  0.86)	test_majacc_d   0.29 (  0.34)	test_corr_d   0.47 (  0.48)
Test: [  26/  26]	Loss 0.572 (0.571)	test_acc   0.39 (  0.42)	test_minacc   0.87 (  0.86)	test_majacc   0.32 (  0.34)	Loss_d 0.572 (0.571)	test_acc_d   0.39 (  0.42)	test_minacc_d   0.87 (  0.86)	test_majacc_d   0.32 (  0.34)	test_corr_d   0.47 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.87it/s]
Test: [  0/  1]	Loss 1.580 (1.580)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.580 (1.580)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.580 (1.580)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 1.580 (1.580)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.31 (  0.31)
Overall Timing[ 38/  1]	epoch_time 0.0380 (0.0376)	validation_time 0.0006 (0.0006)	train_time 0.0373 (0.0370)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.41600000512599944, 0.5049999952316284)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.99it/s] 15%|#5        | 4/26 [00:00<00:01, 15.71it/s] 31%|###       | 8/26 [00:00<00:00, 23.60it/s] 46%|####6     | 12/26 [00:00<00:00, 27.67it/s] 62%|######1   | 16/26 [00:00<00:00, 30.25it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.52it/s] 92%|#########2| 24/26 [00:00<00:00, 30.73it/s]100%|##########| 26/26 [00:01<00:00, 25.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 434 tensor(3.3337e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 432 tensor(3.5822e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 324 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 299 tensor(-5.1057e-05, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.65 (  0.44)	train_minacc   0.67 (  0.82)	train_majacc   0.65 (  0.37)	train_corr   0.00 (  0.00)	l1 6.7984 (6.7337)	zero_count 0.0000 (13.3770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.53it/s] 35%|###4      | 9/26 [00:00<00:00, 37.03it/s]                                               35%|###4      | 9/26 [00:00<00:00, 37.03it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.67it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.67it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.67it/s] 92%|#########2| 24/26 [00:00<00:00, 44.45it/s]100%|##########| 26/26 [00:00<00:00, 38.24it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.42 (  0.42)	test_minacc   0.83 (  0.83)	test_majacc   0.34 (  0.34)	Loss_d 0.560 (0.560)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.560 (0.554)	test_acc   0.42 (  0.41)	test_minacc   0.73 (  0.76)	test_majacc   0.35 (  0.35)	Loss_d 0.560 (0.554)	test_acc_d   0.42 (  0.41)	test_minacc_d   0.73 (  0.76)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.47 (  0.50)
Test: [  20/  26]	Loss 0.569 (0.555)	test_acc   0.36 (  0.41)	test_minacc   0.71 (  0.75)	test_majacc   0.30 (  0.35)	Loss_d 0.569 (0.555)	test_acc_d   0.36 (  0.41)	test_minacc_d   0.71 (  0.75)	test_majacc_d   0.30 (  0.35)	test_corr_d   0.50 (  0.51)
Test: [  26/  26]	Loss 0.555 (0.556)	test_acc   0.43 (  0.41)	test_minacc   0.67 (  0.74)	test_majacc   0.40 (  0.35)	Loss_d 0.555 (0.556)	test_acc_d   0.43 (  0.41)	test_minacc_d   0.67 (  0.74)	test_majacc_d   0.40 (  0.35)	test_corr_d   0.50 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.02it/s]
Test: [  0/  1]	Loss 1.622 (1.622)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.38 (  0.38)	Loss_d 1.622 (1.622)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.622 (1.622)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.38 (  0.38)	Loss_d 1.622 (1.622)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.34 (  0.34)
Overall Timing[ 39/  1]	epoch_time 0.0425 (0.0377)	validation_time 0.0004 (0.0006)	train_time 0.0420 (0.0371)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.41040000605583193, 0.6800000071525574)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.38it/s] 19%|#9        | 5/26 [00:00<00:00, 21.49it/s] 31%|###       | 8/26 [00:00<00:00, 23.15it/s] 46%|####6     | 12/26 [00:00<00:00, 27.96it/s] 62%|######1   | 16/26 [00:00<00:00, 27.78it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.94it/s] 92%|#########2| 24/26 [00:00<00:00, 31.72it/s]100%|##########| 26/26 [00:00<00:00, 26.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 492 tensor(3.7605e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 474 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 463 tensor(2.9782e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 311 tensor(-0.0003, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.70 (  0.41)	train_minacc   0.67 (  0.79)	train_majacc   0.71 (  0.35)	train_corr   0.00 (  0.00)	l1 6.7669 (6.7520)	zero_count 0.0000 (12.3240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.39it/s] 23%|##3       | 6/26 [00:00<00:00, 21.93it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.93it/s] 42%|####2     | 11/26 [00:00<00:00, 31.18it/s] 62%|######1   | 16/26 [00:00<00:00, 35.83it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.83it/s] 81%|########  | 21/26 [00:00<00:00, 36.46it/s]100%|##########| 26/26 [00:00<00:00, 31.02it/s]
Test: [   0/  26]	Loss 0.568 (0.568)	test_acc   0.39 (  0.39)	test_minacc   0.73 (  0.73)	test_majacc   0.33 (  0.33)	Loss_d 0.568 (0.568)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.563 (0.558)	test_acc   0.42 (  0.40)	test_minacc   0.70 (  0.70)	test_majacc   0.35 (  0.35)	Loss_d 0.563 (0.558)	test_acc_d   0.42 (  0.40)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.45 (  0.49)
Test: [  20/  26]	Loss 0.569 (0.558)	test_acc   0.36 (  0.40)	test_minacc   0.64 (  0.69)	test_majacc   0.32 (  0.35)	Loss_d 0.569 (0.558)	test_acc_d   0.36 (  0.40)	test_minacc_d   0.64 (  0.69)	test_majacc_d   0.32 (  0.35)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.560 (0.559)	test_acc   0.44 (  0.40)	test_minacc   0.67 (  0.69)	test_majacc   0.40 (  0.35)	Loss_d 0.560 (0.559)	test_acc_d   0.44 (  0.40)	test_minacc_d   0.67 (  0.69)	test_majacc_d   0.40 (  0.35)	test_corr_d   0.48 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.19it/s]
Test: [  0/  1]	Loss 1.598 (1.598)	test_acc   0.70 (  0.70)	test_minacc   0.73 (  0.73)	test_majacc   0.37 (  0.37)	Loss_d 1.598 (1.598)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.598 (1.598)	test_acc   0.70 (  0.70)	test_minacc   0.73 (  0.73)	test_majacc   0.37 (  0.37)	Loss_d 1.598 (1.598)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.31 (  0.31)
Overall Timing[ 40/  1]	epoch_time 0.0413 (0.0378)	validation_time 0.0004 (0.0006)	train_time 0.0409 (0.0372)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.40410000610351565, 0.6950000524520874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.14it/s] 19%|#9        | 5/26 [00:00<00:01, 20.84it/s] 35%|###4      | 9/26 [00:00<00:00, 27.01it/s] 46%|####6     | 12/26 [00:00<00:00, 26.79it/s] 62%|######1   | 16/26 [00:00<00:00, 30.26it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.75it/s] 92%|#########2| 24/26 [00:00<00:00, 31.88it/s]100%|##########| 26/26 [00:00<00:00, 27.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 483 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 487 tensor(1.9435e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 455 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.40 (  0.39)	train_minacc   0.67 (  0.71)	train_majacc   0.36 (  0.33)	train_corr   0.00 (  0.00)	l1 6.7042 (6.7507)	zero_count 0.0000 (12.0120)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.13it/s] 31%|###       | 8/26 [00:00<00:00, 39.40it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.40it/s] 46%|####6     | 12/26 [00:00<00:00, 39.14it/s] 65%|######5   | 17/26 [00:00<00:00, 39.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.10it/s] 85%|########4 | 22/26 [00:00<00:00, 42.03it/s]100%|##########| 26/26 [00:00<00:00, 36.47it/s]
Test: [   0/  26]	Loss 0.566 (0.566)	test_acc   0.48 (  0.48)	test_minacc   0.70 (  0.70)	test_majacc   0.44 (  0.44)	Loss_d 0.566 (0.566)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.558 (0.555)	test_acc   0.52 (  0.51)	test_minacc   0.69 (  0.67)	test_majacc   0.48 (  0.48)	Loss_d 0.558 (0.555)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.69 (  0.67)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.46 (  0.49)
Test: [  20/  26]	Loss 0.564 (0.556)	test_acc   0.49 (  0.51)	test_minacc   0.60 (  0.66)	test_majacc   0.47 (  0.48)	Loss_d 0.564 (0.556)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.60 (  0.66)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.556 (0.556)	test_acc   0.58 (  0.51)	test_minacc   0.67 (  0.65)	test_majacc   0.56 (  0.48)	Loss_d 0.556 (0.556)	test_acc_d   0.58 (  0.51)	test_minacc_d   0.67 (  0.65)	test_majacc_d   0.56 (  0.48)	test_corr_d   0.48 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.92it/s]
Test: [  0/  1]	Loss 1.576 (1.576)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.49 (  0.49)	Loss_d 1.576 (1.576)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.576 (1.576)	test_acc   0.69 (  0.69)	test_minacc   0.71 (  0.71)	test_majacc   0.49 (  0.49)	Loss_d 1.576 (1.576)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.31 (  0.31)
Overall Timing[ 41/  1]	epoch_time 0.0399 (0.0378)	validation_time 0.0004 (0.0006)	train_time 0.0395 (0.0372)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5111000131070614, 0.6880000233650208)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.89it/s] 19%|#9        | 5/26 [00:00<00:01, 16.13it/s] 35%|###4      | 9/26 [00:00<00:00, 20.94it/s] 50%|#####     | 13/26 [00:00<00:00, 25.53it/s] 65%|######5   | 17/26 [00:00<00:00, 28.88it/s] 81%|########  | 21/26 [00:00<00:00, 30.97it/s] 96%|#########6| 25/26 [00:00<00:00, 32.17it/s]100%|##########| 26/26 [00:01<00:00, 24.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 440 tensor(2.2902e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.34 ( 28.33)	train_acc   0.32 (  0.40)	train_minacc   0.63 (  0.71)	train_majacc   0.27 (  0.35)	train_corr   0.00 (  0.00)	l1 6.7060 (6.7247)	zero_count 0.0000 (2.7690)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.21it/s] 27%|##6       | 7/26 [00:00<00:00, 31.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.19it/s] 50%|#####     | 13/26 [00:00<00:00, 39.65it/s] 69%|######9   | 18/26 [00:00<00:00, 42.44it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.44it/s] 92%|#########2| 24/26 [00:00<00:00, 46.45it/s]100%|##########| 26/26 [00:00<00:00, 38.30it/s]
Test: [   0/  26]	Loss 0.587 (0.587)	test_acc   0.34 (  0.34)	test_minacc   0.67 (  0.67)	test_majacc   0.27 (  0.27)	Loss_d 0.587 (0.587)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.577 (0.579)	test_acc   0.38 (  0.36)	test_minacc   0.74 (  0.68)	test_majacc   0.30 (  0.29)	Loss_d 0.577 (0.579)	test_acc_d   0.38 (  0.36)	test_minacc_d   0.74 (  0.68)	test_majacc_d   0.30 (  0.29)	test_corr_d   0.42 (  0.44)
Test: [  20/  26]	Loss 0.590 (0.580)	test_acc   0.32 (  0.35)	test_minacc   0.60 (  0.69)	test_majacc   0.27 (  0.29)	Loss_d 0.590 (0.580)	test_acc_d   0.32 (  0.35)	test_minacc_d   0.60 (  0.69)	test_majacc_d   0.27 (  0.29)	test_corr_d   0.43 (  0.44)
Test: [  26/  26]	Loss 0.575 (0.579)	test_acc   0.32 (  0.35)	test_minacc   0.63 (  0.69)	test_majacc   0.28 (  0.29)	Loss_d 0.575 (0.579)	test_acc_d   0.32 (  0.35)	test_minacc_d   0.63 (  0.69)	test_majacc_d   0.28 (  0.29)	test_corr_d   0.45 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.04it/s]
Test: [  0/  1]	Loss 1.528 (1.528)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.47 (  0.47)	Loss_d 1.528 (1.528)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 1.528 (1.528)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.47 (  0.47)	Loss_d 1.528 (1.528)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.27 (  0.27)
Overall Timing[ 42/  1]	epoch_time 0.0398 (0.0379)	validation_time 0.0004 (0.0005)	train_time 0.0393 (0.0373)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.35340000849962233, 0.562000036239624)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 19%|#9        | 5/26 [00:00<00:00, 23.65it/s] 35%|###4      | 9/26 [00:00<00:00, 30.42it/s] 50%|#####     | 13/26 [00:00<00:00, 32.48it/s] 65%|######5   | 17/26 [00:00<00:00, 33.48it/s] 81%|########  | 21/26 [00:00<00:00, 33.94it/s] 96%|#########6| 25/26 [00:00<00:00, 31.88it/s]100%|##########| 26/26 [00:00<00:00, 28.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 348 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 468 tensor(1.9672e-05, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  28.34 ( 28.34)	train_acc   0.33 (  0.39)	train_minacc   0.63 (  0.70)	train_majacc   0.29 (  0.33)	train_corr   0.00 (  0.00)	l1 6.7602 (6.7331)	zero_count 0.0000 (6.3570)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.23it/s] 31%|###       | 8/26 [00:00<00:00, 40.02it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.02it/s] 50%|#####     | 13/26 [00:00<00:00, 44.33it/s] 69%|######9   | 18/26 [00:00<00:00, 44.97it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.97it/s] 88%|########8 | 23/26 [00:00<00:00, 43.67it/s]100%|##########| 26/26 [00:00<00:00, 40.42it/s]
Test: [   0/  26]	Loss 0.588 (0.588)	test_acc   0.33 (  0.33)	test_minacc   0.62 (  0.62)	test_majacc   0.27 (  0.27)	Loss_d 0.588 (0.588)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.580 (0.580)	test_acc   0.37 (  0.35)	test_minacc   0.73 (  0.68)	test_majacc   0.29 (  0.29)	Loss_d 0.580 (0.580)	test_acc_d   0.37 (  0.35)	test_minacc_d   0.73 (  0.68)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.41 (  0.43)
Test: [  20/  26]	Loss 0.591 (0.580)	test_acc   0.32 (  0.35)	test_minacc   0.62 (  0.69)	test_majacc   0.27 (  0.29)	Loss_d 0.591 (0.580)	test_acc_d   0.32 (  0.35)	test_minacc_d   0.62 (  0.69)	test_majacc_d   0.27 (  0.29)	test_corr_d   0.43 (  0.44)
Test: [  26/  26]	Loss 0.577 (0.580)	test_acc   0.33 (  0.35)	test_minacc   0.63 (  0.69)	test_majacc   0.29 (  0.29)	Loss_d 0.577 (0.580)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.63 (  0.69)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.44 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.67it/s]
Test: [  0/  1]	Loss 1.533 (1.533)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 1.533 (1.533)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 1.533 (1.533)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 1.533 (1.533)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.27 (  0.27)
Overall Timing[ 43/  1]	epoch_time 0.0408 (0.0380)	validation_time 0.0004 (0.0005)	train_time 0.0404 (0.0373)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.35050000888109206, 0.5260000228881836)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.24it/s] 19%|#9        | 5/26 [00:00<00:01, 20.54it/s] 31%|###       | 8/26 [00:00<00:00, 23.50it/s] 46%|####6     | 12/26 [00:00<00:00, 26.92it/s] 62%|######1   | 16/26 [00:00<00:00, 29.99it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.26it/s] 92%|#########2| 24/26 [00:00<00:00, 31.08it/s]100%|##########| 26/26 [00:00<00:00, 26.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 320 tensor(-6.3069e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 320 tensor(-1.1963e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 457 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  28.34 ( 28.34)	train_acc   0.36 (  0.35)	train_minacc   0.63 (  0.69)	train_majacc   0.32 (  0.29)	train_corr   0.00 (  0.00)	l1 6.7361 (6.7548)	zero_count 0.0000 (18.6810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.91it/s] 27%|##6       | 7/26 [00:00<00:00, 27.02it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.02it/s] 50%|#####     | 13/26 [00:00<00:00, 36.95it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.49it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.49it/s] 96%|#########6| 25/26 [00:00<00:00, 46.14it/s]100%|##########| 26/26 [00:00<00:00, 36.07it/s]
Test: [   0/  26]	Loss 0.582 (0.582)	test_acc   0.34 (  0.34)	test_minacc   0.68 (  0.68)	test_majacc   0.27 (  0.27)	Loss_d 0.582 (0.582)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.575 (0.574)	test_acc   0.36 (  0.35)	test_minacc   0.69 (  0.72)	test_majacc   0.29 (  0.29)	Loss_d 0.575 (0.574)	test_acc_d   0.36 (  0.35)	test_minacc_d   0.69 (  0.72)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.42 (  0.45)
Test: [  20/  26]	Loss 0.585 (0.575)	test_acc   0.33 (  0.35)	test_minacc   0.62 (  0.71)	test_majacc   0.28 (  0.29)	Loss_d 0.585 (0.575)	test_acc_d   0.33 (  0.35)	test_minacc_d   0.62 (  0.71)	test_majacc_d   0.28 (  0.29)	test_corr_d   0.45 (  0.45)
Test: [  26/  26]	Loss 0.569 (0.575)	test_acc   0.36 (  0.35)	test_minacc   0.63 (  0.70)	test_majacc   0.32 (  0.29)	Loss_d 0.569 (0.575)	test_acc_d   0.36 (  0.35)	test_minacc_d   0.63 (  0.70)	test_majacc_d   0.32 (  0.29)	test_corr_d   0.46 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.91it/s]
Test: [  0/  1]	Loss 1.549 (1.549)	test_acc   0.57 (  0.57)	test_minacc   0.58 (  0.58)	test_majacc   0.46 (  0.46)	Loss_d 1.549 (1.549)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.549 (1.549)	test_acc   0.57 (  0.57)	test_minacc   0.58 (  0.58)	test_majacc   0.46 (  0.46)	Loss_d 1.549 (1.549)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.30 (  0.30)
Overall Timing[ 44/  1]	epoch_time 0.0399 (0.0380)	validation_time 0.0003 (0.0005)	train_time 0.0396 (0.0374)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.35270000872015955, 0.5700000524520874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.50it/s] 19%|#9        | 5/26 [00:00<00:00, 22.35it/s] 35%|###4      | 9/26 [00:00<00:00, 27.49it/s] 50%|#####     | 13/26 [00:00<00:00, 30.88it/s] 65%|######5   | 17/26 [00:00<00:00, 29.55it/s] 81%|########  | 21/26 [00:00<00:00, 31.70it/s] 96%|#########6| 25/26 [00:00<00:00, 33.18it/s]100%|##########| 26/26 [00:00<00:00, 27.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 484 tensor(6.6659e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  28.34 ( 28.34)	train_acc   0.38 (  0.35)	train_minacc   0.63 (  0.67)	train_majacc   0.34 (  0.29)	train_corr   0.00 (  0.00)	l1 6.7283 (6.7334)	zero_count 0.0000 (1.0530)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.85it/s] 15%|#5        | 4/26 [00:00<00:01, 18.37it/s] 35%|###4      | 9/26 [00:00<00:00, 30.61it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.04it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.04it/s] 92%|#########2| 24/26 [00:00<00:00, 39.34it/s]100%|##########| 26/26 [00:00<00:00, 33.37it/s]
Test: [   0/  26]	Loss 0.579 (0.579)	test_acc   0.35 (  0.35)	test_minacc   0.64 (  0.64)	test_majacc   0.29 (  0.29)	Loss_d 0.579 (0.579)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.572 (0.571)	test_acc   0.37 (  0.36)	test_minacc   0.69 (  0.68)	test_majacc   0.30 (  0.30)	Loss_d 0.572 (0.571)	test_acc_d   0.37 (  0.36)	test_minacc_d   0.69 (  0.68)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.43 (  0.45)
Test: [  20/  26]	Loss 0.581 (0.572)	test_acc   0.35 (  0.36)	test_minacc   0.62 (  0.67)	test_majacc   0.30 (  0.31)	Loss_d 0.581 (0.572)	test_acc_d   0.35 (  0.36)	test_minacc_d   0.62 (  0.67)	test_majacc_d   0.30 (  0.31)	test_corr_d   0.46 (  0.46)
Test: [  26/  26]	Loss 0.567 (0.572)	test_acc   0.39 (  0.36)	test_minacc   0.63 (  0.66)	test_majacc   0.35 (  0.31)	Loss_d 0.567 (0.572)	test_acc_d   0.39 (  0.36)	test_minacc_d   0.63 (  0.66)	test_majacc_d   0.35 (  0.31)	test_corr_d   0.46 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.79it/s]
Test: [  0/  1]	Loss 1.574 (1.574)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.43 (  0.43)	Loss_d 1.574 (1.574)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.574 (1.574)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.43 (  0.43)	Loss_d 1.574 (1.574)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.31 (  0.31)
Overall Timing[ 45/  1]	epoch_time 0.0408 (0.0381)	validation_time 0.0004 (0.0005)	train_time 0.0403 (0.0375)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.36330000826716424, 0.6030000448226929)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.30it/s] 19%|#9        | 5/26 [00:00<00:00, 22.99it/s] 35%|###4      | 9/26 [00:00<00:00, 28.90it/s] 50%|#####     | 13/26 [00:00<00:00, 31.67it/s] 65%|######5   | 17/26 [00:00<00:00, 29.79it/s] 81%|########  | 21/26 [00:00<00:00, 31.78it/s] 96%|#########6| 25/26 [00:00<00:00, 33.38it/s]100%|##########| 26/26 [00:00<00:00, 29.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 470 tensor(3.9664e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  28.34 ( 28.34)	train_acc   0.39 (  0.36)	train_minacc   0.63 (  0.65)	train_majacc   0.35 (  0.30)	train_corr   0.00 (  0.00)	l1 6.7231 (6.7362)	zero_count 0.0000 (1.5990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.46it/s] 19%|#9        | 5/26 [00:00<00:00, 25.73it/s] 38%|###8      | 10/26 [00:00<00:00, 35.34it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.34it/s] 58%|#####7    | 15/26 [00:00<00:00, 40.27it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.59it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.59it/s] 96%|#########6| 25/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 35.35it/s]
Test: [   0/  26]	Loss 0.579 (0.579)	test_acc   0.35 (  0.35)	test_minacc   0.65 (  0.65)	test_majacc   0.29 (  0.29)	Loss_d 0.579 (0.579)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.570 (0.571)	test_acc   0.37 (  0.36)	test_minacc   0.64 (  0.67)	test_majacc   0.31 (  0.31)	Loss_d 0.570 (0.571)	test_acc_d   0.37 (  0.36)	test_minacc_d   0.64 (  0.67)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.43 (  0.45)
Test: [  20/  26]	Loss 0.579 (0.571)	test_acc   0.35 (  0.37)	test_minacc   0.60 (  0.66)	test_majacc   0.30 (  0.31)	Loss_d 0.579 (0.571)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.60 (  0.66)	test_majacc_d   0.30 (  0.31)	test_corr_d   0.46 (  0.46)
Test: [  26/  26]	Loss 0.566 (0.571)	test_acc   0.39 (  0.37)	test_minacc   0.63 (  0.65)	test_majacc   0.35 (  0.31)	Loss_d 0.566 (0.571)	test_acc_d   0.39 (  0.37)	test_minacc_d   0.63 (  0.65)	test_majacc_d   0.35 (  0.31)	test_corr_d   0.46 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.02it/s]
Test: [  0/  1]	Loss 1.579 (1.579)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.43 (  0.43)	Loss_d 1.579 (1.579)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.579 (1.579)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.43 (  0.43)	Loss_d 1.579 (1.579)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.31 (  0.31)
Overall Timing[ 46/  1]	epoch_time 0.0389 (0.0381)	validation_time 0.0004 (0.0005)	train_time 0.0385 (0.0375)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.365500008136034, 0.6070000529289246)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 19%|#9        | 5/26 [00:00<00:01, 20.76it/s] 35%|###4      | 9/26 [00:00<00:00, 26.73it/s] 50%|#####     | 13/26 [00:00<00:00, 29.75it/s] 65%|######5   | 17/26 [00:00<00:00, 28.47it/s] 81%|########  | 21/26 [00:00<00:00, 30.69it/s] 96%|#########6| 25/26 [00:00<00:00, 32.37it/s]100%|##########| 26/26 [00:00<00:00, 27.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 457 tensor(1.4679e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.34 ( 28.34)	train_acc   0.40 (  0.36)	train_minacc   0.63 (  0.63)	train_majacc   0.36 (  0.31)	train_corr   0.00 (  0.00)	l1 6.7257 (6.7342)	zero_count 0.0000 (2.1060)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.25it/s] 27%|##6       | 7/26 [00:00<00:00, 33.59it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.59it/s] 46%|####6     | 12/26 [00:00<00:00, 40.21it/s] 65%|######5   | 17/26 [00:00<00:00, 42.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.77it/s] 85%|########4 | 22/26 [00:00<00:00, 40.88it/s]100%|##########| 26/26 [00:00<00:00, 38.09it/s]
Test: [   0/  26]	Loss 0.578 (0.578)	test_acc   0.36 (  0.36)	test_minacc   0.65 (  0.65)	test_majacc   0.30 (  0.30)	Loss_d 0.578 (0.578)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.569 (0.570)	test_acc   0.39 (  0.37)	test_minacc   0.66 (  0.65)	test_majacc   0.33 (  0.32)	Loss_d 0.569 (0.570)	test_acc_d   0.39 (  0.37)	test_minacc_d   0.66 (  0.65)	test_majacc_d   0.33 (  0.32)	test_corr_d   0.44 (  0.45)
Test: [  20/  26]	Loss 0.577 (0.570)	test_acc   0.35 (  0.37)	test_minacc   0.56 (  0.65)	test_majacc   0.32 (  0.32)	Loss_d 0.577 (0.570)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.56 (  0.65)	test_majacc_d   0.32 (  0.32)	test_corr_d   0.46 (  0.46)
Test: [  26/  26]	Loss 0.565 (0.570)	test_acc   0.41 (  0.37)	test_minacc   0.67 (  0.64)	test_majacc   0.38 (  0.32)	Loss_d 0.565 (0.570)	test_acc_d   0.41 (  0.37)	test_minacc_d   0.67 (  0.64)	test_majacc_d   0.38 (  0.32)	test_corr_d   0.46 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.88it/s]
Test: [  0/  1]	Loss 1.580 (1.580)	test_acc   0.61 (  0.61)	test_minacc   0.64 (  0.64)	test_majacc   0.41 (  0.41)	Loss_d 1.580 (1.580)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.580 (1.580)	test_acc   0.61 (  0.61)	test_minacc   0.64 (  0.64)	test_majacc   0.41 (  0.41)	Loss_d 1.580 (1.580)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.31 (  0.31)
Overall Timing[ 47/  1]	epoch_time 0.0419 (0.0382)	validation_time 0.0004 (0.0005)	train_time 0.0414 (0.0376)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.37180000826716425, 0.6140000224113464)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.89it/s] 19%|#9        | 5/26 [00:00<00:01, 19.22it/s] 35%|###4      | 9/26 [00:00<00:00, 25.09it/s] 50%|#####     | 13/26 [00:00<00:00, 28.34it/s] 65%|######5   | 17/26 [00:00<00:00, 30.16it/s] 81%|########  | 21/26 [00:00<00:00, 29.26it/s] 96%|#########6| 25/26 [00:00<00:00, 31.39it/s]100%|##########| 26/26 [00:00<00:00, 26.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 446 tensor(1.9563e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.34 ( 28.34)	train_acc   0.40 (  0.36)	train_minacc   0.63 (  0.63)	train_majacc   0.36 (  0.31)	train_corr   0.00 (  0.00)	l1 6.7201 (6.7366)	zero_count 0.0000 (2.5350)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.74it/s] 19%|#9        | 5/26 [00:00<00:01, 20.10it/s] 38%|###8      | 10/26 [00:00<00:00, 31.29it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.29it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.40it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.40it/s] 96%|#########6| 25/26 [00:00<00:00, 40.65it/s]100%|##########| 26/26 [00:00<00:00, 32.61it/s]
Test: [   0/  26]	Loss 0.579 (0.579)	test_acc   0.35 (  0.35)	test_minacc   0.65 (  0.65)	test_majacc   0.29 (  0.29)	Loss_d 0.579 (0.579)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.570 (0.571)	test_acc   0.38 (  0.37)	test_minacc   0.63 (  0.64)	test_majacc   0.33 (  0.32)	Loss_d 0.570 (0.571)	test_acc_d   0.38 (  0.37)	test_minacc_d   0.63 (  0.64)	test_majacc_d   0.33 (  0.32)	test_corr_d   0.43 (  0.45)
Test: [  20/  26]	Loss 0.577 (0.570)	test_acc   0.36 (  0.38)	test_minacc   0.56 (  0.63)	test_majacc   0.32 (  0.33)	Loss_d 0.577 (0.570)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.56 (  0.63)	test_majacc_d   0.32 (  0.33)	test_corr_d   0.46 (  0.46)
Test: [  26/  26]	Loss 0.566 (0.570)	test_acc   0.42 (  0.37)	test_minacc   0.67 (  0.62)	test_majacc   0.38 (  0.33)	Loss_d 0.566 (0.570)	test_acc_d   0.42 (  0.37)	test_minacc_d   0.67 (  0.62)	test_majacc_d   0.38 (  0.33)	test_corr_d   0.46 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.27it/s]
Test: [  0/  1]	Loss 1.581 (1.581)	test_acc   0.61 (  0.61)	test_minacc   0.64 (  0.64)	test_majacc   0.41 (  0.41)	Loss_d 1.581 (1.581)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.581 (1.581)	test_acc   0.61 (  0.61)	test_minacc   0.64 (  0.64)	test_majacc   0.41 (  0.41)	Loss_d 1.581 (1.581)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.30 (  0.30)
Overall Timing[ 48/  1]	epoch_time 0.0390 (0.0382)	validation_time 0.0004 (0.0005)	train_time 0.0386 (0.0376)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.37400000759959223, 0.6140000224113464)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.26it/s] 19%|#9        | 5/26 [00:00<00:00, 24.58it/s] 35%|###4      | 9/26 [00:00<00:00, 29.47it/s] 50%|#####     | 13/26 [00:00<00:00, 31.55it/s] 65%|######5   | 17/26 [00:00<00:00, 29.75it/s] 81%|########  | 21/26 [00:00<00:00, 31.21it/s] 96%|#########6| 25/26 [00:00<00:00, 32.48it/s]100%|##########| 26/26 [00:00<00:00, 28.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 430 tensor(2.7585e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  28.34 ( 28.34)	train_acc   0.40 (  0.37)	train_minacc   0.63 (  0.61)	train_majacc   0.37 (  0.33)	train_corr   0.00 (  0.00)	l1 6.7150 (6.7379)	zero_count 0.0000 (3.1590)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s] 23%|##3       | 6/26 [00:00<00:00, 24.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.77it/s] 42%|####2     | 11/26 [00:00<00:00, 33.30it/s] 62%|######1   | 16/26 [00:00<00:00, 38.33it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.33it/s] 81%|########  | 21/26 [00:00<00:00, 37.25it/s]100%|##########| 26/26 [00:00<00:00, 40.70it/s]100%|##########| 26/26 [00:00<00:00, 32.59it/s]
Test: [   0/  26]	Loss 0.580 (0.580)	test_acc   0.35 (  0.35)	test_minacc   0.64 (  0.64)	test_majacc   0.29 (  0.29)	Loss_d 0.580 (0.580)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.571 (0.572)	test_acc   0.38 (  0.37)	test_minacc   0.60 (  0.63)	test_majacc   0.33 (  0.32)	Loss_d 0.571 (0.572)	test_acc_d   0.38 (  0.37)	test_minacc_d   0.60 (  0.63)	test_majacc_d   0.33 (  0.32)	test_corr_d   0.43 (  0.45)
Test: [  20/  26]	Loss 0.577 (0.572)	test_acc   0.37 (  0.38)	test_minacc   0.56 (  0.62)	test_majacc   0.34 (  0.33)	Loss_d 0.577 (0.572)	test_acc_d   0.37 (  0.38)	test_minacc_d   0.56 (  0.62)	test_majacc_d   0.34 (  0.33)	test_corr_d   0.46 (  0.46)
Test: [  26/  26]	Loss 0.567 (0.571)	test_acc   0.42 (  0.37)	test_minacc   0.67 (  0.61)	test_majacc   0.38 (  0.33)	Loss_d 0.567 (0.571)	test_acc_d   0.42 (  0.37)	test_minacc_d   0.67 (  0.61)	test_majacc_d   0.38 (  0.33)	test_corr_d   0.46 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.25it/s]
Test: [  0/  1]	Loss 1.578 (1.578)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.42 (  0.42)	Loss_d 1.578 (1.578)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.578 (1.578)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.42 (  0.42)	Loss_d 1.578 (1.578)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.30 (  0.30)
Overall Timing[ 49/  1]	epoch_time 0.0380 (0.0382)	validation_time 0.0003 (0.0005)	train_time 0.0377 (0.0376)
record: (train_acc, test_acc) (0.8214000303149224, 0.6370000243186951)
last accs (train_acc, test_acc) (0.37460000756382944, 0.6130000352859497)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.103 MB of 0.103 MB uploadedwandb: \ 0.103 MB of 0.103 MB uploadedwandb: | 0.103 MB of 0.103 MB uploadedwandb: / 0.103 MB of 0.103 MB uploadedwandb: - 0.103 MB of 0.103 MB uploadedwandb: \ 0.126 MB of 0.138 MB uploaded (0.003 MB deduped)wandb: | 0.503 MB of 0.503 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                           global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/diagnostics/epoch_time_val █▁▁▁▁▂▂▂▁▁▁▁▁▁▁▁▁▁▁▂▂▂▂▂▃▃▂▃▂▂▂▂▃▂▂▂▂▂▃▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/diagnostics/train_time_val █▁▁▁▁▂▂▂▁▁▁▂▂▂▂▁▂▂▁▂▂▃▂▃▃▄▂▃▃▂▃▂▃▃▃▃▃▂▃▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/Loss_avg ▅▄▅▅▅▆▅▅▅▆█▆▅▁▂▂▂▃▃▃▂▂▂▂▂▂▂▃▃▃▃▃▃▃▂▂▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/Loss_d_avg ▅▄▅▅▅▆▅▅▅▆█▆▅▁▂▂▂▃▃▃▂▂▂▂▂▂▂▃▃▃▃▃▃▃▂▂▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/Loss_d_val ▅▄▅▅▅▆▅▅▅▆█▆▅▁▂▂▂▃▃▃▂▂▂▂▂▂▂▃▃▃▃▃▃▃▂▂▃▃▃▃
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/Loss_val ▅▄▅▅▅▆▅▅▅▆█▆▅▁▂▂▂▃▃▃▂▂▂▂▂▂▂▃▃▃▃▃▃▃▂▂▃▃▃▃
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_acc_avg ▁▁▂▂▂▃▃▃▄▄▄▅▅▇▇▇▇▇▇▆▆▆▆▆▇██▇▆▆▆▆██▆▆▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_acc_d_avg ▁▁▂▂▂▃▃▃▄▄▄▅▅▇▇▇▇▇▇▆▆▆▆▆▇██▇▆▆▆▆██▆▆▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_acc_d_val ▁▁▂▂▂▃▃▃▄▄▄▅▅▇▇▇▇▇▇▆▆▆▆▆▇██▇▆▆▆▆██▆▆▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_acc_val ▁▁▂▂▂▃▃▃▄▄▄▅▅▇▇▇▇▇▇▆▆▆▆▆▇██▇▆▆▆▆██▆▆▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_corr_d_avg ████▇▆▆▇▆▅▅▄▅▁▁▁▂▂▂▁▄▃▃▃▃▃▃▄▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_corr_d_val ████▇▆▆▇▆▅▅▄▅▁▁▁▂▂▂▁▄▃▃▃▃▃▃▄▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_majacc_avg ████████▇▇▇▇▇▆▆▆▆▆▆▂▂▂▂▂▁▁▁▂▂▂▂▂▁▂▂▂▂▂▁▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_majacc_d_avg ████████▇▇▇▇▇▆▆▆▆▆▆▂▂▂▂▂▁▁▁▂▂▂▂▂▁▂▂▂▂▂▁▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_majacc_d_val ████████▇▇▇▇▇▆▆▆▆▆▆▂▂▂▂▂▁▁▁▂▂▂▂▂▁▂▂▂▂▂▁▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_majacc_val ████████▇▇▇▇▇▆▆▆▆▆▆▂▂▂▂▂▁▁▁▂▂▂▂▂▁▂▂▂▂▂▁▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_minacc_avg ▁▁▂▂▂▂▃▂▃▄▄▅▄▇▇▇▇▇▇▆▆▆▆▆▇██▇▆▆▆▆██▆▆▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_minacc_d_avg ▁▁▂▂▂▂▃▂▃▄▄▅▄▇▇▇▇▇▇▆▆▆▆▆▇██▇▆▆▆▆██▆▆▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_minacc_d_val ▁▁▂▂▂▂▃▂▃▄▄▅▄▇▇▇▇▇▇▆▆▆▆▆▇██▇▆▆▆▆██▆▆▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_minacc_val ▁▁▂▂▂▂▃▂▃▄▄▅▄▇▇▇▇▇▇▆▆▆▆▆▇██▇▆▆▆▆██▆▆▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/Loss_avg █▆▆▆▅▅▅▅▅▄▄▄▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/Loss_val ███▇▇▆▆▆▅▅▄▄▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/l1_avg █▃▃▄▄▄▄▄▃▄▄▆▆▁▁▁▂▂▂▆▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/l1_val ▄▃▄▄▄▄▃▂▂▄▅▅▁▁▂▂▂▂▃█▃▂▂▂▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▂
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_acc_avg ▇▇▇▇▇▇███████▇▇▇▇▇▇▆▃▃▃▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_acc_val ▇▇▇▇▇▇▇▇▇████▆▇▇▆▇▆▇▃▃▃▂▂▂▂▂▂▂▂▂▅▂▁▁▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_majacc_avg ████████████▇▇▆▆▆▆▆▆▃▃▃▂▂▁▁▁▁▁▂▂▂▁▂▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_majacc_val ████▇█▇▇▇▇██▇▆▆▆▆▆▆▆▃▃▂▂▂▂▂▂▁▁▂▂▅▂▁▁▂▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_minacc_avg ▁▁▁▂▃▃▄▄▅▅▅▆▇▇█████▆▇▅▆▇████████▇▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_minacc_val ▁▁▂▁▄▃▃▄▅▆▅▆▅▇▇█▇▇▇▇▇▄▇█▇▆▆█▇█▇▇▆▆▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_nll_avg ▇▅▄▄▃▃▂▂▂▂▁▁▁▃▃▃▃▃▃▄████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_nll_val ▅▅▄▄▄▃▃▃▂▂▁▁▂▄▄▄▄▄▄█▇███████████▇███████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_penalty_avg █▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_penalty_val █▇▅▄▂▃▂▃▂▂▂▂▂▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/weight_norm_avg ▁▃▄▄▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▆████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/weight_norm_val ▁▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▅▅▅▆████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▄█▅▂▃▂▂▂▃▃▃▁▁▂▂▁▂▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                           global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/diagnostics/epoch_time_val 0.03802
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/diagnostics/train_time_val 0.03766
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/diagnostics/validation_time_val 0.00034
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/Loss_avg 1.57789
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/Loss_d_avg 1.57789
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/Loss_d_val 1.57789
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/Loss_val 1.57789
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_acc_avg 0.613
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_acc_d_avg 0.613
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_acc_d_val 0.613
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_acc_val 0.613
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_corr_d_avg 0.29874
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_corr_d_val 0.29874
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_majacc_avg 0.42
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_majacc_d_avg 0.42
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_majacc_d_val 0.42
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_majacc_val 0.42
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_minacc_avg 0.63444
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_minacc_d_avg 0.63444
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_minacc_d_val 0.63444
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/test/test_minacc_val 0.63444
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/Loss_avg 7e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/Loss_val 6e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/l1_avg 6.73793
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/l1_val 6.71503
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_acc_avg 0.3704
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_acc_val 0.404
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_majacc_avg 0.32729
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_majacc_val 0.37273
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_minacc_avg 0.61076
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_minacc_val 0.63333
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_nll_avg 0.57484
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_nll_val 0.5688
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_penalty_avg 1e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/weight_norm_avg 28.34339
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/weight_norm_val 28.34394
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/zero_count_avg 3.159
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/88/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/yk0vehx7
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_152239-yk0vehx7/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_152512-wtxg5x4x
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/wtxg5x4x
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1170
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6004, 3, 32, 32) (5996, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:41,  1.64s/it] 19%|#9        | 5/26 [00:01<00:05,  3.74it/s] 38%|###8      | 10/26 [00:01<00:01,  8.25it/s] 54%|#####3    | 14/26 [00:01<00:00, 12.07it/s] 69%|######9   | 18/26 [00:02<00:00, 16.05it/s] 85%|########4 | 22/26 [00:02<00:00, 19.95it/s]100%|##########| 26/26 [00:02<00:00, 14.48it/s]100%|##########| 26/26 [00:02<00:00,  9.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.473 (0.580)	train_nll   0.47 (  0.58)	train_penalty   0.10 (  0.27)	weight_norm  20.98 ( 18.16)	train_acc   0.82 (  0.78)	train_minacc   0.02 (  0.10)	train_majacc   1.00 (  0.89)	train_corr   0.00 (  0.00)	l1 9.0820 (8.0163)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.94it/s] 23%|##3       | 6/26 [00:00<00:00, 29.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.29it/s] 42%|####2     | 11/26 [00:00<00:00, 34.39it/s] 62%|######1   | 16/26 [00:00<00:00, 38.46it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.46it/s] 81%|########  | 21/26 [00:00<00:00, 41.52it/s]100%|##########| 26/26 [00:00<00:00, 36.35it/s]
Test: [   0/  26]	Loss 0.427 (0.427)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.427 (0.427)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.394 (0.428)	test_acc   0.86 (  0.84)	test_minacc   0.04 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.394 (0.428)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.04 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  20/  26]	Loss 0.444 (0.422)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.444 (0.422)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.98)
Test: [  26/  26]	Loss 0.463 (0.421)	test_acc   0.83 (  0.84)	test_minacc   0.04 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.463 (0.421)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.04 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]
Test: [  0/  1]	Loss 1.715 (1.715)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.715 (1.715)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.715 (1.715)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.715 (1.715)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/89/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0776 (0.0776)	validation_time 0.0067 (0.0067)	train_time 0.0668 (0.0668)
record: (train_acc, test_acc) (0.8449000316262245, 0.10900000482797623)
last accs (train_acc, test_acc) (0.8449000316262245, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.55it/s] 12%|#1        | 3/26 [00:00<00:01, 12.99it/s] 27%|##6       | 7/26 [00:00<00:00, 22.38it/s] 42%|####2     | 11/26 [00:00<00:00, 27.78it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.18it/s] 88%|########8 | 23/26 [00:00<00:00, 33.22it/s]100%|##########| 26/26 [00:00<00:00, 27.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.473 (0.415)	train_nll   0.47 (  0.42)	train_penalty   0.11 (  0.06)	weight_norm  22.13 ( 21.77)	train_acc   0.82 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 9.7381 (9.5209)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 19.37it/s] 31%|###       | 8/26 [00:00<00:00, 33.44it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.44it/s] 50%|#####     | 13/26 [00:00<00:00, 38.88it/s] 69%|######9   | 18/26 [00:00<00:00, 41.77it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.77it/s] 88%|########8 | 23/26 [00:00<00:00, 43.00it/s]100%|##########| 26/26 [00:00<00:00, 36.65it/s]
Test: [   0/  26]	Loss 0.394 (0.394)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.394 (0.394)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.383 (0.407)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.383 (0.407)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.413 (0.402)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.413 (0.402)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
Test: [  26/  26]	Loss 0.467 (0.402)	test_acc   0.82 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.467 (0.402)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.86it/s]
Test: [  0/  1]	Loss 1.743 (1.743)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.743 (1.743)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.743 (1.743)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.743 (1.743)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Overall Timing[  1/  1]	epoch_time 0.0377 (0.0577)	validation_time 0.0003 (0.0035)	train_time 0.0374 (0.0521)
record: (train_acc, test_acc) (0.8449000316262245, 0.10900000482797623)
last accs (train_acc, test_acc) (0.8474000229239463, 0.10400000214576721)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.85it/s] 19%|#9        | 5/26 [00:00<00:00, 23.10it/s] 35%|###4      | 9/26 [00:00<00:00, 27.98it/s] 50%|#####     | 13/26 [00:00<00:00, 30.84it/s] 65%|######5   | 17/26 [00:00<00:00, 32.67it/s] 81%|########  | 21/26 [00:00<00:00, 34.02it/s] 96%|#########6| 25/26 [00:00<00:00, 34.46it/s]100%|##########| 26/26 [00:00<00:00, 29.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.435 (0.400)	train_nll   0.44 (  0.40)	train_penalty   0.05 (  0.05)	weight_norm  22.24 ( 22.20)	train_acc   0.82 (  0.85)	train_minacc   0.04 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 9.7038 (9.7279)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.81it/s] 27%|##6       | 7/26 [00:00<00:00, 26.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.93it/s] 46%|####6     | 12/26 [00:00<00:00, 33.83it/s] 65%|######5   | 17/26 [00:00<00:00, 38.42it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.42it/s] 85%|########4 | 22/26 [00:00<00:00, 41.83it/s]100%|##########| 26/26 [00:00<00:00, 34.05it/s]
Test: [   0/  26]	Loss 0.357 (0.357)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.357 (0.357)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.338 (0.377)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.338 (0.377)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.390 (0.372)	test_acc   0.84 (  0.85)	test_minacc   0.03 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.390 (0.372)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.03 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.96)
Test: [  26/  26]	Loss 0.426 (0.372)	test_acc   0.83 (  0.85)	test_minacc   0.07 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.426 (0.372)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.07 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.22it/s]
Test: [  0/  1]	Loss 1.573 (1.573)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.573 (1.573)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.573 (1.573)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.573 (1.573)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Overall Timing[  2/  1]	epoch_time 0.0389 (0.0514)	validation_time 0.0004 (0.0025)	train_time 0.0385 (0.0476)
record: (train_acc, test_acc) (0.8449000316262245, 0.10900000482797623)
last accs (train_acc, test_acc) (0.8475000220537185, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.23it/s] 19%|#9        | 5/26 [00:00<00:01, 16.00it/s] 35%|###4      | 9/26 [00:00<00:00, 22.89it/s] 50%|#####     | 13/26 [00:00<00:00, 27.25it/s] 65%|######5   | 17/26 [00:00<00:00, 29.98it/s] 81%|########  | 21/26 [00:00<00:00, 32.03it/s] 96%|#########6| 25/26 [00:00<00:00, 33.69it/s]100%|##########| 26/26 [00:00<00:00, 26.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.419 (0.377)	train_nll   0.42 (  0.38)	train_penalty   0.05 (  0.04)	weight_norm  22.29 ( 22.27)	train_acc   0.82 (  0.85)	train_minacc   0.11 (  0.10)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 9.4382 (9.6198)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.41it/s] 35%|###4      | 9/26 [00:00<00:00, 42.00it/s]                                               35%|###4      | 9/26 [00:00<00:00, 42.00it/s] 54%|#####3    | 14/26 [00:00<00:00, 40.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.93it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.93it/s] 92%|#########2| 24/26 [00:00<00:00, 45.11it/s]100%|##########| 26/26 [00:00<00:00, 39.95it/s]
Test: [   0/  26]	Loss 0.355 (0.355)	test_acc   0.86 (  0.86)	test_minacc   0.12 (  0.12)	test_majacc   0.99 (  0.99)	Loss_d 0.355 (0.355)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.327 (0.369)	test_acc   0.86 (  0.85)	test_minacc   0.09 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.327 (0.369)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.09 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.372 (0.364)	test_acc   0.84 (  0.85)	test_minacc   0.13 (  0.07)	test_majacc   0.98 (  0.99)	Loss_d 0.372 (0.364)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.13 (  0.07)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.92 (  0.93)
Test: [  26/  26]	Loss 0.411 (0.364)	test_acc   0.82 (  0.85)	test_minacc   0.04 (  0.07)	test_majacc   1.00 (  0.99)	Loss_d 0.411 (0.364)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.04 (  0.07)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.78it/s]
Test: [  0/  1]	Loss 1.469 (1.469)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.469 (1.469)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.91)
Test: [  1/  1]	Loss 1.469 (1.469)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.469 (1.469)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.91)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/89/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0390 (0.0483)	validation_time 0.0004 (0.0019)	train_time 0.0386 (0.0453)
record: (train_acc, test_acc) (0.852100025177002, 0.11600000411272049)
last accs (train_acc, test_acc) (0.852100025177002, 0.11600000411272049)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.74it/s] 15%|#5        | 4/26 [00:00<00:01, 18.02it/s] 31%|###       | 8/26 [00:00<00:00, 25.86it/s] 46%|####6     | 12/26 [00:00<00:00, 29.47it/s] 62%|######1   | 16/26 [00:00<00:00, 31.52it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.27it/s] 92%|#########2| 24/26 [00:00<00:00, 34.19it/s]100%|##########| 26/26 [00:00<00:00, 28.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.408 (0.360)	train_nll   0.41 (  0.36)	train_penalty   0.06 (  0.04)	weight_norm  22.35 ( 22.32)	train_acc   0.82 (  0.85)	train_minacc   0.09 (  0.16)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 9.1604 (9.3970)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 27%|##6       | 7/26 [00:00<00:00, 28.24it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.24it/s] 46%|####6     | 12/26 [00:00<00:00, 35.26it/s] 65%|######5   | 17/26 [00:00<00:00, 39.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.69it/s] 85%|########4 | 22/26 [00:00<00:00, 39.46it/s]100%|##########| 26/26 [00:00<00:00, 34.86it/s]
Test: [   0/  26]	Loss 0.349 (0.349)	test_acc   0.86 (  0.86)	test_minacc   0.16 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 0.349 (0.349)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.16 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.312 (0.354)	test_acc   0.88 (  0.85)	test_minacc   0.26 (  0.15)	test_majacc   0.98 (  0.98)	Loss_d 0.312 (0.354)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.26 (  0.15)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.352 (0.347)	test_acc   0.85 (  0.86)	test_minacc   0.23 (  0.18)	test_majacc   0.97 (  0.98)	Loss_d 0.352 (0.347)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.23 (  0.18)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.92 (  0.93)
Test: [  26/  26]	Loss 0.384 (0.348)	test_acc   0.82 (  0.86)	test_minacc   0.11 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 0.384 (0.348)	test_acc_d   0.82 (  0.86)	test_minacc_d   0.11 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.31it/s]
Test: [  0/  1]	Loss 1.569 (1.569)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   1.00 (  1.00)	Loss_d 1.569 (1.569)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.89 (  0.89)
Test: [  1/  1]	Loss 1.569 (1.569)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   1.00 (  1.00)	Loss_d 1.569 (1.569)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.89 (  0.89)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/89/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0413 (0.0469)	validation_time 0.0004 (0.0016)	train_time 0.0409 (0.0444)
record: (train_acc, test_acc) (0.8565000295639038, 0.15900000929832458)
last accs (train_acc, test_acc) (0.8565000295639038, 0.15900000929832458)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.83it/s] 19%|#9        | 5/26 [00:00<00:00, 23.09it/s] 35%|###4      | 9/26 [00:00<00:00, 27.51it/s] 50%|#####     | 13/26 [00:00<00:00, 30.27it/s] 65%|######5   | 17/26 [00:00<00:00, 32.91it/s] 81%|########  | 21/26 [00:00<00:00, 33.55it/s] 96%|#########6| 25/26 [00:00<00:00, 33.67it/s]100%|##########| 26/26 [00:00<00:00, 29.29it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.395 (0.342)	train_nll   0.40 (  0.34)	train_penalty   0.06 (  0.03)	weight_norm  22.41 ( 22.38)	train_acc   0.83 (  0.86)	train_minacc   0.16 (  0.23)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 8.8764 (9.0270)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.04it/s] 23%|##3       | 6/26 [00:00<00:00, 23.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.58it/s] 42%|####2     | 11/26 [00:00<00:00, 32.58it/s] 62%|######1   | 16/26 [00:00<00:00, 37.78it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.78it/s] 81%|########  | 21/26 [00:00<00:00, 36.74it/s]100%|##########| 26/26 [00:00<00:00, 40.20it/s]100%|##########| 26/26 [00:00<00:00, 32.07it/s]
Test: [   0/  26]	Loss 0.332 (0.332)	test_acc   0.85 (  0.85)	test_minacc   0.14 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 0.332 (0.332)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.296 (0.340)	test_acc   0.88 (  0.86)	test_minacc   0.23 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 0.296 (0.340)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.23 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.316 (0.331)	test_acc   0.86 (  0.86)	test_minacc   0.26 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 0.316 (0.331)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.26 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.93)
Test: [  26/  26]	Loss 0.371 (0.331)	test_acc   0.84 (  0.86)	test_minacc   0.18 (  0.19)	test_majacc   0.99 (  0.98)	Loss_d 0.371 (0.331)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.18 (  0.19)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.74it/s]
Test: [  0/  1]	Loss 1.702 (1.702)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   0.99 (  0.99)	Loss_d 1.702 (1.702)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  1/  1]	Loss 1.702 (1.702)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   0.99 (  0.99)	Loss_d 1.702 (1.702)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/89/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0406 (0.0459)	validation_time 0.0004 (0.0014)	train_time 0.0402 (0.0437)
record: (train_acc, test_acc) (0.8615000262856484, 0.18700000643730164)
last accs (train_acc, test_acc) (0.8615000262856484, 0.18700000643730164)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.88it/s] 19%|#9        | 5/26 [00:00<00:01, 20.30it/s] 35%|###4      | 9/26 [00:00<00:00, 26.76it/s] 50%|#####     | 13/26 [00:00<00:00, 29.44it/s] 65%|######5   | 17/26 [00:00<00:00, 30.35it/s] 81%|########  | 21/26 [00:00<00:00, 31.29it/s] 96%|#########6| 25/26 [00:00<00:00, 32.73it/s]100%|##########| 26/26 [00:00<00:00, 27.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.378 (0.333)	train_nll   0.38 (  0.33)	train_penalty   0.04 (  0.02)	weight_norm  22.48 ( 22.44)	train_acc   0.86 (  0.86)	train_minacc   0.33 (  0.29)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.4653 (8.7287)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.66it/s] 23%|##3       | 6/26 [00:00<00:00, 31.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.47it/s] 42%|####2     | 11/26 [00:00<00:00, 38.63it/s] 62%|######1   | 16/26 [00:00<00:00, 42.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.59it/s] 81%|########  | 21/26 [00:00<00:00, 39.70it/s]100%|##########| 26/26 [00:00<00:00, 42.45it/s]100%|##########| 26/26 [00:00<00:00, 36.26it/s]
Test: [   0/  26]	Loss 0.330 (0.330)	test_acc   0.86 (  0.86)	test_minacc   0.26 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 0.330 (0.330)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.303 (0.339)	test_acc   0.88 (  0.86)	test_minacc   0.38 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 0.303 (0.339)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.38 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.312 (0.331)	test_acc   0.87 (  0.86)	test_minacc   0.40 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 0.312 (0.331)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.40 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.90)
Test: [  26/  26]	Loss 0.366 (0.332)	test_acc   0.86 (  0.86)	test_minacc   0.33 (  0.30)	test_majacc   0.98 (  0.96)	Loss_d 0.366 (0.332)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.33 (  0.30)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.89 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.73it/s]
Test: [  0/  1]	Loss 1.682 (1.682)	test_acc   0.29 (  0.29)	test_minacc   0.21 (  0.21)	test_majacc   0.97 (  0.97)	Loss_d 1.682 (1.682)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 1.682 (1.682)	test_acc   0.29 (  0.29)	test_minacc   0.21 (  0.21)	test_majacc   0.97 (  0.97)	Loss_d 1.682 (1.682)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/89/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0405 (0.0451)	validation_time 0.0003 (0.0013)	train_time 0.0401 (0.0432)
record: (train_acc, test_acc) (0.8615000246763229, 0.28600001335144043)
last accs (train_acc, test_acc) (0.8615000246763229, 0.28600001335144043)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.89it/s] 15%|#5        | 4/26 [00:00<00:01, 18.51it/s] 31%|###       | 8/26 [00:00<00:00, 26.22it/s] 46%|####6     | 12/26 [00:00<00:00, 29.85it/s] 62%|######1   | 16/26 [00:00<00:00, 31.14it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.28it/s] 92%|#########2| 24/26 [00:00<00:00, 33.06it/s]100%|##########| 26/26 [00:00<00:00, 28.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.354 (0.325)	train_nll   0.35 (  0.32)	train_penalty   0.03 (  0.02)	weight_norm  22.56 ( 22.52)	train_acc   0.84 (  0.86)	train_minacc   0.20 (  0.33)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0848 (8.4699)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.71it/s] 23%|##3       | 6/26 [00:00<00:00, 32.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.74it/s] 42%|####2     | 11/26 [00:00<00:00, 39.30it/s] 62%|######1   | 16/26 [00:00<00:00, 42.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.53it/s] 81%|########  | 21/26 [00:00<00:00, 43.77it/s]100%|##########| 26/26 [00:00<00:00, 45.25it/s]100%|##########| 26/26 [00:00<00:00, 38.04it/s]
Test: [   0/  26]	Loss 0.322 (0.322)	test_acc   0.86 (  0.86)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 0.322 (0.322)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.289 (0.324)	test_acc   0.89 (  0.86)	test_minacc   0.34 (  0.24)	test_majacc   0.98 (  0.97)	Loss_d 0.289 (0.324)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.34 (  0.24)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.92)
Test: [  20/  26]	Loss 0.294 (0.317)	test_acc   0.88 (  0.87)	test_minacc   0.42 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 0.294 (0.317)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.42 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.92)
Test: [  26/  26]	Loss 0.338 (0.318)	test_acc   0.87 (  0.87)	test_minacc   0.36 (  0.28)	test_majacc   0.98 (  0.97)	Loss_d 0.338 (0.318)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.36 (  0.28)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.89 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.00it/s]
Test: [  0/  1]	Loss 1.685 (1.685)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.97 (  0.97)	Loss_d 1.685 (1.685)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.685 (1.685)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.97 (  0.97)	Loss_d 1.685 (1.685)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.84 (  0.84)
Overall Timing[  7/  1]	epoch_time 0.0383 (0.0442)	validation_time 0.0004 (0.0012)	train_time 0.0380 (0.0426)
record: (train_acc, test_acc) (0.8615000246763229, 0.28600001335144043)
last accs (train_acc, test_acc) (0.8676000165939332, 0.23100000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.34it/s] 19%|#9        | 5/26 [00:00<00:01, 19.09it/s] 35%|###4      | 9/26 [00:00<00:00, 24.63it/s] 50%|#####     | 13/26 [00:00<00:00, 27.96it/s] 65%|######5   | 17/26 [00:00<00:00, 30.05it/s] 81%|########  | 21/26 [00:00<00:00, 31.55it/s] 96%|#########6| 25/26 [00:00<00:00, 32.79it/s]100%|##########| 26/26 [00:00<00:00, 26.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.366 (0.318)	train_nll   0.37 (  0.32)	train_penalty   0.05 (  0.02)	weight_norm  22.68 ( 22.62)	train_acc   0.86 (  0.86)	train_minacc   0.22 (  0.36)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 8.0225 (8.2717)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s] 27%|##6       | 7/26 [00:00<00:00, 28.37it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.37it/s] 50%|#####     | 13/26 [00:00<00:00, 36.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.28it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.28it/s] 92%|#########2| 24/26 [00:00<00:00, 44.10it/s]100%|##########| 26/26 [00:00<00:00, 35.31it/s]
Test: [   0/  26]	Loss 0.297 (0.297)	test_acc   0.87 (  0.87)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.297 (0.297)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.259 (0.306)	test_acc   0.90 (  0.87)	test_minacc   0.34 (  0.24)	test_majacc   0.99 (  0.98)	Loss_d 0.259 (0.306)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.34 (  0.24)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.268 (0.300)	test_acc   0.89 (  0.87)	test_minacc   0.42 (  0.25)	test_majacc   0.98 (  0.98)	Loss_d 0.268 (0.300)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.42 (  0.25)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.92)
Test: [  26/  26]	Loss 0.339 (0.301)	test_acc   0.86 (  0.87)	test_minacc   0.31 (  0.25)	test_majacc   0.99 (  0.98)	Loss_d 0.339 (0.301)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.31 (  0.25)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.76it/s]
Test: [  0/  1]	Loss 1.767 (1.767)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 1.767 (1.767)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.83 (  0.83)
Test: [  1/  1]	Loss 1.767 (1.767)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.99 (  0.99)	Loss_d 1.767 (1.767)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.83 (  0.83)
Overall Timing[  8/  1]	epoch_time 0.0433 (0.0441)	validation_time 0.0004 (0.0011)	train_time 0.0428 (0.0426)
record: (train_acc, test_acc) (0.8615000246763229, 0.28600001335144043)
last accs (train_acc, test_acc) (0.8724000219106675, 0.2120000123977661)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 19%|#9        | 5/26 [00:00<00:01, 20.01it/s] 35%|###4      | 9/26 [00:00<00:00, 25.69it/s] 50%|#####     | 13/26 [00:00<00:00, 29.07it/s] 65%|######5   | 17/26 [00:00<00:00, 30.75it/s] 81%|########  | 21/26 [00:00<00:00, 32.37it/s] 96%|#########6| 25/26 [00:00<00:00, 33.21it/s]100%|##########| 26/26 [00:00<00:00, 27.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.342 (0.305)	train_nll   0.34 (  0.31)	train_penalty   0.04 (  0.02)	weight_norm  22.81 ( 22.74)	train_acc   0.85 (  0.87)	train_minacc   0.22 (  0.40)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 7.7035 (7.9875)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.51it/s] 19%|#9        | 5/26 [00:00<00:00, 25.85it/s] 38%|###8      | 10/26 [00:00<00:00, 31.64it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.64it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.18it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.73it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.73it/s] 96%|#########6| 25/26 [00:00<00:00, 42.38it/s]100%|##########| 26/26 [00:00<00:00, 34.98it/s]
Test: [   0/  26]	Loss 0.302 (0.302)	test_acc   0.86 (  0.86)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 0.302 (0.302)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.264 (0.307)	test_acc   0.89 (  0.87)	test_minacc   0.34 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 0.264 (0.307)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.34 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  20/  26]	Loss 0.261 (0.296)	test_acc   0.89 (  0.87)	test_minacc   0.35 (  0.25)	test_majacc   0.99 (  0.98)	Loss_d 0.261 (0.296)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.35 (  0.25)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.92)
Test: [  26/  26]	Loss 0.321 (0.295)	test_acc   0.87 (  0.87)	test_minacc   0.33 (  0.26)	test_majacc   0.99 (  0.98)	Loss_d 0.321 (0.295)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.33 (  0.26)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.57it/s]
Test: [  0/  1]	Loss 1.793 (1.793)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 1.793 (1.793)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.83)
Test: [  1/  1]	Loss 1.793 (1.793)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 1.793 (1.793)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.83)
Overall Timing[  9/  1]	epoch_time 0.0408 (0.0438)	validation_time 0.0003 (0.0010)	train_time 0.0405 (0.0424)
record: (train_acc, test_acc) (0.8615000246763229, 0.28600001335144043)
last accs (train_acc, test_acc) (0.8735000243782998, 0.2160000056028366)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.35it/s] 19%|#9        | 5/26 [00:00<00:01, 14.78it/s] 35%|###4      | 9/26 [00:00<00:00, 21.99it/s] 50%|#####     | 13/26 [00:00<00:00, 27.40it/s] 65%|######5   | 17/26 [00:00<00:00, 30.46it/s] 81%|########  | 21/26 [00:00<00:00, 32.21it/s] 96%|#########6| 25/26 [00:00<00:00, 33.29it/s]100%|##########| 26/26 [00:01<00:00, 25.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.323 (0.294)	train_nll   0.32 (  0.29)	train_penalty   0.02 (  0.02)	weight_norm  22.97 ( 22.88)	train_acc   0.90 (  0.87)	train_minacc   0.53 (  0.40)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.7835 (8.0282)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 15%|#5        | 4/26 [00:00<00:01, 17.60it/s] 38%|###8      | 10/26 [00:00<00:00, 33.49it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.49it/s] 62%|######1   | 16/26 [00:00<00:00, 39.57it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.57it/s] 85%|########4 | 22/26 [00:00<00:00, 44.54it/s]100%|##########| 26/26 [00:00<00:00, 35.84it/s]
Test: [   0/  26]	Loss 0.298 (0.298)	test_acc   0.86 (  0.86)	test_minacc   0.36 (  0.36)	test_majacc   0.95 (  0.95)	Loss_d 0.298 (0.298)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.256 (0.299)	test_acc   0.90 (  0.87)	test_minacc   0.53 (  0.42)	test_majacc   0.96 (  0.95)	Loss_d 0.256 (0.299)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.53 (  0.42)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.85 (  0.86)
Test: [  20/  26]	Loss 0.264 (0.286)	test_acc   0.89 (  0.88)	test_minacc   0.60 (  0.45)	test_majacc   0.95 (  0.95)	Loss_d 0.264 (0.286)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.60 (  0.45)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.85)
Test: [  26/  26]	Loss 0.290 (0.286)	test_acc   0.91 (  0.88)	test_minacc   0.60 (  0.46)	test_majacc   0.98 (  0.95)	Loss_d 0.290 (0.286)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.60 (  0.46)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.84 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.35it/s]
Test: [  0/  1]	Loss 1.586 (1.586)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 1.586 (1.586)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 1.586 (1.586)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 1.586 (1.586)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.65 (  0.65)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/89/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0423 (0.0437)	validation_time 0.0004 (0.0009)	train_time 0.0419 (0.0423)
record: (train_acc, test_acc) (0.8772000226378441, 0.33900001645088196)
last accs (train_acc, test_acc) (0.8772000226378441, 0.33900001645088196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.41it/s] 12%|#1        | 3/26 [00:00<00:01, 14.00it/s] 27%|##6       | 7/26 [00:00<00:00, 24.43it/s] 42%|####2     | 11/26 [00:00<00:00, 29.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.27it/s] 88%|########8 | 23/26 [00:00<00:00, 34.95it/s]100%|##########| 26/26 [00:00<00:00, 29.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.316 (0.285)	train_nll   0.32 (  0.28)	train_penalty   0.04 (  0.01)	weight_norm  23.17 ( 23.08)	train_acc   0.88 (  0.88)	train_minacc   0.38 (  0.46)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0586 (7.9775)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.34it/s] 31%|###       | 8/26 [00:00<00:00, 30.36it/s]                                               31%|###       | 8/26 [00:00<00:00, 30.36it/s] 50%|#####     | 13/26 [00:00<00:00, 36.73it/s] 69%|######9   | 18/26 [00:00<00:00, 39.63it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.63it/s] 92%|#########2| 24/26 [00:00<00:00, 41.42it/s]100%|##########| 26/26 [00:00<00:00, 35.10it/s]
Test: [   0/  26]	Loss 0.284 (0.284)	test_acc   0.88 (  0.88)	test_minacc   0.47 (  0.47)	test_majacc   0.95 (  0.95)	Loss_d 0.284 (0.284)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.238 (0.283)	test_acc   0.90 (  0.87)	test_minacc   0.68 (  0.52)	test_majacc   0.93 (  0.94)	Loss_d 0.238 (0.283)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.68 (  0.52)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.82 (  0.84)
Test: [  20/  26]	Loss 0.218 (0.265)	test_acc   0.93 (  0.89)	test_minacc   0.73 (  0.57)	test_majacc   0.96 (  0.94)	Loss_d 0.218 (0.265)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.73 (  0.57)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.81 (  0.83)
Test: [  26/  26]	Loss 0.273 (0.264)	test_acc   0.92 (  0.89)	test_minacc   0.62 (  0.57)	test_majacc   0.99 (  0.95)	Loss_d 0.273 (0.264)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.99 (  0.95)	test_corr_d   0.83 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.33it/s]
Test: [  0/  1]	Loss 1.665 (1.665)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 1.665 (1.665)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 1.665 (1.665)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 1.665 (1.665)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.53 (  0.53)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/89/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0378 (0.0432)	validation_time 0.0004 (0.0009)	train_time 0.0374 (0.0419)
record: (train_acc, test_acc) (0.8883000243902206, 0.4010000228881836)
last accs (train_acc, test_acc) (0.8883000243902206, 0.4010000228881836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 19%|#9        | 5/26 [00:00<00:00, 21.44it/s] 35%|###4      | 9/26 [00:00<00:00, 27.07it/s] 50%|#####     | 13/26 [00:00<00:00, 30.29it/s] 65%|######5   | 17/26 [00:00<00:00, 31.35it/s] 81%|########  | 21/26 [00:00<00:00, 32.93it/s] 96%|#########6| 25/26 [00:00<00:00, 34.19it/s]100%|##########| 26/26 [00:00<00:00, 28.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.312 (0.273)	train_nll   0.31 (  0.27)	train_penalty   0.02 (  0.01)	weight_norm  23.39 ( 23.28)	train_acc   0.90 (  0.89)	train_minacc   0.53 (  0.52)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.9117 (8.0433)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.36it/s] 23%|##3       | 6/26 [00:00<00:00, 32.38it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.38it/s] 42%|####2     | 11/26 [00:00<00:00, 38.29it/s] 65%|######5   | 17/26 [00:00<00:00, 39.93it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.93it/s] 85%|########4 | 22/26 [00:00<00:00, 42.36it/s]100%|##########| 26/26 [00:00<00:00, 36.65it/s]
Test: [   0/  26]	Loss 0.240 (0.240)	test_acc   0.89 (  0.89)	test_minacc   0.36 (  0.36)	test_majacc   0.98 (  0.98)	Loss_d 0.240 (0.240)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.237 (0.264)	test_acc   0.90 (  0.88)	test_minacc   0.55 (  0.43)	test_majacc   0.96 (  0.97)	Loss_d 0.237 (0.264)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.55 (  0.43)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.87 (  0.88)
Test: [  20/  26]	Loss 0.208 (0.253)	test_acc   0.93 (  0.89)	test_minacc   0.66 (  0.48)	test_majacc   0.98 (  0.97)	Loss_d 0.208 (0.253)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.66 (  0.48)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.84 (  0.87)
Test: [  26/  26]	Loss 0.241 (0.249)	test_acc   0.92 (  0.90)	test_minacc   0.62 (  0.49)	test_majacc   0.99 (  0.97)	Loss_d 0.241 (0.249)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.62 (  0.49)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.85 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.39it/s]
Test: [  0/  1]	Loss 1.949 (1.949)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.93 (  0.93)	Loss_d 1.949 (1.949)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.75 (  0.75)
Test: [  1/  1]	Loss 1.949 (1.949)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.93 (  0.93)	Loss_d 1.949 (1.949)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.75 (  0.75)
Overall Timing[ 12/  1]	epoch_time 0.0381 (0.0428)	validation_time 0.0004 (0.0009)	train_time 0.0377 (0.0416)
record: (train_acc, test_acc) (0.8883000243902206, 0.4010000228881836)
last accs (train_acc, test_acc) (0.8958000204563141, 0.2760000228881836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.95it/s]  8%|7         | 2/26 [00:00<00:02,  8.87it/s] 23%|##3       | 6/26 [00:00<00:00, 20.60it/s] 38%|###8      | 10/26 [00:00<00:00, 25.77it/s] 50%|#####     | 13/26 [00:00<00:00, 27.07it/s] 65%|######5   | 17/26 [00:00<00:00, 29.49it/s] 81%|########  | 21/26 [00:00<00:00, 31.18it/s] 96%|#########6| 25/26 [00:00<00:00, 32.64it/s]100%|##########| 26/26 [00:00<00:00, 26.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.280 (0.259)	train_nll   0.28 (  0.26)	train_penalty   0.02 (  0.01)	weight_norm  23.63 ( 23.52)	train_acc   0.88 (  0.89)	train_minacc   0.40 (  0.54)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0047 (8.0555)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.51it/s] 31%|###       | 8/26 [00:00<00:00, 32.11it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.11it/s] 50%|#####     | 13/26 [00:00<00:00, 37.94it/s] 69%|######9   | 18/26 [00:00<00:00, 39.80it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.80it/s] 88%|########8 | 23/26 [00:00<00:00, 40.14it/s]100%|##########| 26/26 [00:00<00:00, 35.46it/s]
Test: [   0/  26]	Loss 0.251 (0.251)	test_acc   0.89 (  0.89)	test_minacc   0.47 (  0.47)	test_majacc   0.97 (  0.97)	Loss_d 0.251 (0.251)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.264 (0.279)	test_acc   0.91 (  0.88)	test_minacc   0.49 (  0.46)	test_majacc   0.97 (  0.96)	Loss_d 0.264 (0.279)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.49 (  0.46)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  20/  26]	Loss 0.249 (0.270)	test_acc   0.91 (  0.89)	test_minacc   0.60 (  0.49)	test_majacc   0.97 (  0.96)	Loss_d 0.249 (0.270)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.60 (  0.49)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.83 (  0.85)
Test: [  26/  26]	Loss 0.225 (0.265)	test_acc   0.92 (  0.89)	test_minacc   0.64 (  0.51)	test_majacc   0.98 (  0.96)	Loss_d 0.225 (0.265)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.64 (  0.51)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.83 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.56it/s]
Test: [  0/  1]	Loss 1.994 (1.994)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.99 (  0.99)	Loss_d 1.994 (1.994)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 1.994 (1.994)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.99 (  0.99)	Loss_d 1.994 (1.994)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.66)
Overall Timing[ 13/  1]	epoch_time 0.0392 (0.0425)	validation_time 0.0006 (0.0008)	train_time 0.0386 (0.0414)
record: (train_acc, test_acc) (0.8883000243902206, 0.4010000228881836)
last accs (train_acc, test_acc) (0.8938000252246857, 0.3400000035762787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.88it/s] 19%|#9        | 5/26 [00:00<00:01, 20.40it/s] 35%|###4      | 9/26 [00:00<00:00, 26.27it/s] 50%|#####     | 13/26 [00:00<00:00, 29.66it/s] 65%|######5   | 17/26 [00:00<00:00, 31.90it/s] 81%|########  | 21/26 [00:00<00:00, 33.33it/s] 96%|#########6| 25/26 [00:00<00:00, 34.18it/s]100%|##########| 26/26 [00:00<00:00, 28.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.276 (0.252)	train_nll   0.28 (  0.25)	train_penalty   0.02 (  0.01)	weight_norm  23.89 ( 23.76)	train_acc   0.90 (  0.90)	train_minacc   0.53 (  0.57)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.9616 (8.0580)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.77it/s] 27%|##6       | 7/26 [00:00<00:00, 22.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.66it/s] 46%|####6     | 12/26 [00:00<00:00, 31.20it/s] 65%|######5   | 17/26 [00:00<00:00, 33.83it/s]                                                65%|######5   | 17/26 [00:00<00:00, 33.83it/s] 85%|########4 | 22/26 [00:00<00:00, 37.74it/s]100%|##########| 26/26 [00:00<00:00, 29.92it/s]
Test: [   0/  26]	Loss 0.233 (0.233)	test_acc   0.90 (  0.90)	test_minacc   0.43 (  0.43)	test_majacc   0.98 (  0.98)	Loss_d 0.233 (0.233)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.234 (0.260)	test_acc   0.90 (  0.89)	test_minacc   0.42 (  0.44)	test_majacc   0.97 (  0.97)	Loss_d 0.234 (0.260)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.42 (  0.44)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.87)
Test: [  20/  26]	Loss 0.236 (0.250)	test_acc   0.89 (  0.90)	test_minacc   0.53 (  0.47)	test_majacc   0.96 (  0.97)	Loss_d 0.236 (0.250)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.53 (  0.47)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.84 (  0.87)
Test: [  26/  26]	Loss 0.212 (0.245)	test_acc   0.93 (  0.90)	test_minacc   0.67 (  0.49)	test_majacc   0.99 (  0.97)	Loss_d 0.212 (0.245)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.67 (  0.49)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.83 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.81it/s]
Test: [  0/  1]	Loss 2.038 (2.038)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 2.038 (2.038)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 2.038 (2.038)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 2.038 (2.038)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.64 (  0.64)
Overall Timing[ 14/  1]	epoch_time 0.0411 (0.0424)	validation_time 0.0004 (0.0008)	train_time 0.0407 (0.0413)
record: (train_acc, test_acc) (0.8883000243902206, 0.4010000228881836)
last accs (train_acc, test_acc) (0.8995000194907189, 0.3330000042915344)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.15it/s] 19%|#9        | 5/26 [00:00<00:00, 23.19it/s] 35%|###4      | 9/26 [00:00<00:00, 28.22it/s] 50%|#####     | 13/26 [00:00<00:00, 30.89it/s] 65%|######5   | 17/26 [00:00<00:00, 32.15it/s] 81%|########  | 21/26 [00:00<00:00, 33.60it/s] 96%|#########6| 25/26 [00:00<00:00, 34.75it/s]100%|##########| 26/26 [00:00<00:00, 29.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.000 (0.099)	train_nll   0.38 (  0.28)	train_penalty   0.00 (  0.01)	weight_norm  24.18 ( 24.05)	train_acc   0.81 (  0.87)	train_minacc   0.82 (  0.68)	train_majacc   0.80 (  0.91)	train_corr   0.00 (  0.00)	l1 7.5159 (8.1243)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.67it/s] 23%|##3       | 6/26 [00:00<00:00, 27.55it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.55it/s] 42%|####2     | 11/26 [00:00<00:00, 35.35it/s] 62%|######1   | 16/26 [00:00<00:00, 39.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.95it/s] 81%|########  | 21/26 [00:00<00:00, 38.78it/s]100%|##########| 26/26 [00:00<00:00, 34.93it/s]
Test: [   0/  26]	Loss 0.356 (0.356)	test_acc   0.82 (  0.82)	test_minacc   0.90 (  0.90)	test_majacc   0.80 (  0.80)	Loss_d 0.356 (0.356)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.365 (0.367)	test_acc   0.78 (  0.80)	test_minacc   0.75 (  0.84)	test_majacc   0.79 (  0.79)	Loss_d 0.365 (0.367)	test_acc_d   0.78 (  0.80)	test_minacc_d   0.75 (  0.84)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.59 (  0.56)
Test: [  20/  26]	Loss 0.365 (0.366)	test_acc   0.82 (  0.81)	test_minacc   0.90 (  0.84)	test_majacc   0.80 (  0.80)	Loss_d 0.365 (0.366)	test_acc_d   0.82 (  0.81)	test_minacc_d   0.90 (  0.84)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.54 (  0.57)
Test: [  26/  26]	Loss 0.385 (0.371)	test_acc   0.80 (  0.81)	test_minacc   0.82 (  0.84)	test_majacc   0.80 (  0.80)	Loss_d 0.385 (0.371)	test_acc_d   0.80 (  0.81)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.51 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.20it/s]
Test: [  0/  1]	Loss 1.095 (1.095)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.84 (  0.84)	Loss_d 1.095 (1.095)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 1.095 (1.095)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.84 (  0.84)	Loss_d 1.095 (1.095)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.01 (  0.01)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/89/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0380 (0.0422)	validation_time 0.0004 (0.0008)	train_time 0.0376 (0.0411)
record: (train_acc, test_acc) (0.8050000269412995, 0.6320000290870667)
last accs (train_acc, test_acc) (0.8050000269412995, 0.6320000290870667)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.76it/s] 19%|#9        | 5/26 [00:00<00:01, 19.50it/s] 35%|###4      | 9/26 [00:00<00:00, 25.16it/s] 50%|#####     | 13/26 [00:00<00:00, 28.68it/s] 65%|######5   | 17/26 [00:00<00:00, 30.68it/s] 81%|########  | 21/26 [00:00<00:00, 32.31it/s] 96%|#########6| 25/26 [00:00<00:00, 33.22it/s]100%|##########| 26/26 [00:00<00:00, 27.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.004 (0.002)	train_nll   0.51 (  0.45)	train_penalty   0.00 (  0.00)	weight_norm  24.25 ( 24.23)	train_acc   0.67 (  0.74)	train_minacc   0.64 (  0.79)	train_majacc   0.68 (  0.73)	train_corr   0.00 (  0.00)	l1 6.7702 (6.9632)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.49it/s]  8%|7         | 2/26 [00:00<00:02,  9.12it/s] 31%|###       | 8/26 [00:00<00:00, 29.92it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 38.02it/s] 77%|#######6  | 20/26 [00:00<00:00, 43.58it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 43.58it/s]100%|##########| 26/26 [00:00<00:00, 47.90it/s]100%|##########| 26/26 [00:00<00:00, 36.01it/s]
Test: [   0/  26]	Loss 0.432 (0.432)	test_acc   0.71 (  0.71)	test_minacc   0.67 (  0.67)	test_majacc   0.72 (  0.72)	Loss_d 0.432 (0.432)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.455 (0.454)	test_acc   0.74 (  0.73)	test_minacc   0.68 (  0.72)	test_majacc   0.75 (  0.73)	Loss_d 0.455 (0.454)	test_acc_d   0.74 (  0.73)	test_minacc_d   0.68 (  0.72)	test_majacc_d   0.75 (  0.73)	test_corr_d   0.58 (  0.55)
Test: [  20/  26]	Loss 0.442 (0.451)	test_acc   0.74 (  0.73)	test_minacc   0.77 (  0.72)	test_majacc   0.73 (  0.73)	Loss_d 0.442 (0.451)	test_acc_d   0.74 (  0.73)	test_minacc_d   0.77 (  0.72)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.53 (  0.55)
Test: [  26/  26]	Loss 0.486 (0.454)	test_acc   0.69 (  0.73)	test_minacc   0.64 (  0.72)	test_majacc   0.70 (  0.73)	Loss_d 0.486 (0.454)	test_acc_d   0.69 (  0.73)	test_minacc_d   0.64 (  0.72)	test_majacc_d   0.70 (  0.73)	test_corr_d   0.52 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.19it/s]
Test: [  0/  1]	Loss 1.152 (1.152)	test_acc   0.58 (  0.58)	test_minacc   0.54 (  0.54)	test_majacc   0.87 (  0.87)	Loss_d 1.152 (1.152)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 1.152 (1.152)	test_acc   0.58 (  0.58)	test_minacc   0.54 (  0.54)	test_majacc   0.87 (  0.87)	Loss_d 1.152 (1.152)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.20 (  0.20)
Overall Timing[ 16/  1]	epoch_time 0.0389 (0.0420)	validation_time 0.0003 (0.0007)	train_time 0.0385 (0.0410)
record: (train_acc, test_acc) (0.8050000269412995, 0.6320000290870667)
last accs (train_acc, test_acc) (0.728000027000904, 0.5750000476837158)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.02it/s] 19%|#9        | 5/26 [00:00<00:00, 24.99it/s] 35%|###4      | 9/26 [00:00<00:00, 29.04it/s] 50%|#####     | 13/26 [00:00<00:00, 31.18it/s] 65%|######5   | 17/26 [00:00<00:00, 32.30it/s] 81%|########  | 21/26 [00:00<00:00, 33.49it/s] 96%|#########6| 25/26 [00:00<00:00, 34.50it/s]100%|##########| 26/26 [00:00<00:00, 29.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.004 (0.002)	train_nll   0.43 (  0.48)	train_penalty   0.00 (  0.00)	weight_norm  24.27 ( 24.26)	train_acc   0.76 (  0.73)	train_minacc   0.71 (  0.77)	train_majacc   0.77 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3480 (6.5325)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.64it/s] 23%|##3       | 6/26 [00:00<00:00, 27.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.03it/s] 42%|####2     | 11/26 [00:00<00:00, 34.93it/s] 62%|######1   | 16/26 [00:00<00:00, 39.54it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.54it/s] 81%|########  | 21/26 [00:00<00:00, 38.25it/s]100%|##########| 26/26 [00:00<00:00, 41.56it/s]100%|##########| 26/26 [00:00<00:00, 33.72it/s]
Test: [   0/  26]	Loss 0.436 (0.436)	test_acc   0.73 (  0.73)	test_minacc   0.76 (  0.76)	test_majacc   0.72 (  0.72)	Loss_d 0.436 (0.436)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.446 (0.448)	test_acc   0.72 (  0.73)	test_minacc   0.72 (  0.76)	test_majacc   0.72 (  0.72)	Loss_d 0.446 (0.448)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.72 (  0.76)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.57 (  0.56)
Test: [  20/  26]	Loss 0.458 (0.449)	test_acc   0.74 (  0.73)	test_minacc   0.81 (  0.76)	test_majacc   0.72 (  0.72)	Loss_d 0.458 (0.449)	test_acc_d   0.74 (  0.73)	test_minacc_d   0.81 (  0.76)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.52 (  0.55)
Test: [  26/  26]	Loss 0.446 (0.451)	test_acc   0.75 (  0.73)	test_minacc   0.76 (  0.77)	test_majacc   0.75 (  0.72)	Loss_d 0.446 (0.451)	test_acc_d   0.75 (  0.73)	test_minacc_d   0.76 (  0.77)	test_majacc_d   0.75 (  0.72)	test_corr_d   0.54 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.51it/s]
Test: [  0/  1]	Loss 1.115 (1.115)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.84 (  0.84)	Loss_d 1.115 (1.115)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.115 (1.115)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.84 (  0.84)	Loss_d 1.115 (1.115)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.24 (  0.24)
Overall Timing[ 17/  1]	epoch_time 0.0384 (0.0418)	validation_time 0.0004 (0.0007)	train_time 0.0380 (0.0408)
record: (train_acc, test_acc) (0.8050000269412995, 0.6320000290870667)
last accs (train_acc, test_acc) (0.7295000303387642, 0.5940000414848328)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.76it/s] 19%|#9        | 5/26 [00:00<00:01, 20.09it/s] 35%|###4      | 9/26 [00:00<00:00, 27.23it/s] 50%|#####     | 13/26 [00:00<00:00, 31.30it/s] 65%|######5   | 17/26 [00:00<00:00, 33.71it/s] 81%|########  | 21/26 [00:00<00:00, 35.58it/s] 96%|#########6| 25/26 [00:00<00:00, 36.92it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.001)	train_nll   0.47 (  0.47)	train_penalty   0.00 (  0.00)	weight_norm  24.28 ( 24.27)	train_acc   0.71 (  0.70)	train_minacc   0.76 (  0.78)	train_majacc   0.70 (  0.69)	train_corr   0.00 (  0.00)	l1 6.2013 (6.3256)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.99it/s] 12%|#1        | 3/26 [00:00<00:01, 13.34it/s] 31%|###       | 8/26 [00:00<00:00, 28.08it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.08it/s] 50%|#####     | 13/26 [00:00<00:00, 34.74it/s] 69%|######9   | 18/26 [00:00<00:00, 39.42it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.42it/s] 88%|########8 | 23/26 [00:00<00:00, 38.70it/s]100%|##########| 26/26 [00:00<00:00, 33.01it/s]
Test: [   0/  26]	Loss 0.434 (0.434)	test_acc   0.73 (  0.73)	test_minacc   0.81 (  0.81)	test_majacc   0.71 (  0.71)	Loss_d 0.434 (0.434)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.433 (0.441)	test_acc   0.72 (  0.73)	test_minacc   0.75 (  0.82)	test_majacc   0.72 (  0.71)	Loss_d 0.433 (0.441)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.75 (  0.82)	test_majacc_d   0.72 (  0.71)	test_corr_d   0.58 (  0.54)
Test: [  20/  26]	Loss 0.443 (0.443)	test_acc   0.72 (  0.72)	test_minacc   0.84 (  0.81)	test_majacc   0.70 (  0.71)	Loss_d 0.443 (0.443)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.70 (  0.71)	test_corr_d   0.51 (  0.54)
Test: [  26/  26]	Loss 0.466 (0.445)	test_acc   0.72 (  0.72)	test_minacc   0.76 (  0.81)	test_majacc   0.71 (  0.71)	Loss_d 0.466 (0.445)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.76 (  0.81)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.51 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.51it/s]
Test: [  0/  1]	Loss 1.065 (1.065)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.84 (  0.84)	Loss_d 1.065 (1.065)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 1.065 (1.065)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.84 (  0.84)	Loss_d 1.065 (1.065)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.18 (  0.18)
Overall Timing[ 18/  1]	epoch_time 0.0383 (0.0416)	validation_time 0.0004 (0.0007)	train_time 0.0379 (0.0406)
record: (train_acc, test_acc) (0.8050000269412995, 0.6320000290870667)
last accs (train_acc, test_acc) (0.7226000331044197, 0.6300000548362732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.82it/s] 12%|#1        | 3/26 [00:00<00:01, 14.35it/s] 27%|##6       | 7/26 [00:00<00:00, 24.14it/s] 42%|####2     | 11/26 [00:00<00:00, 28.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.64it/s] 88%|########8 | 23/26 [00:00<00:00, 33.33it/s]100%|##########| 26/26 [00:00<00:00, 28.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.002 (0.001)	train_nll   0.50 (  0.47)	train_penalty   0.00 (  0.00)	weight_norm  24.28 ( 24.28)	train_acc   0.68 (  0.70)	train_minacc   0.80 (  0.83)	train_majacc   0.65 (  0.68)	train_corr   0.00 (  0.00)	l1 6.3287 (6.2467)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 23%|##3       | 6/26 [00:00<00:00, 31.02it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.02it/s] 42%|####2     | 11/26 [00:00<00:00, 37.80it/s] 62%|######1   | 16/26 [00:00<00:00, 41.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.80it/s] 81%|########  | 21/26 [00:00<00:00, 39.62it/s]100%|##########| 26/26 [00:00<00:00, 42.38it/s]100%|##########| 26/26 [00:00<00:00, 35.60it/s]
Test: [   0/  26]	Loss 0.474 (0.474)	test_acc   0.67 (  0.67)	test_minacc   0.78 (  0.78)	test_majacc   0.66 (  0.66)	Loss_d 0.474 (0.474)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.454 (0.477)	test_acc   0.72 (  0.70)	test_minacc   0.75 (  0.79)	test_majacc   0.72 (  0.68)	Loss_d 0.454 (0.477)	test_acc_d   0.72 (  0.70)	test_minacc_d   0.75 (  0.79)	test_majacc_d   0.72 (  0.68)	test_corr_d   0.55 (  0.49)
Test: [  20/  26]	Loss 0.473 (0.478)	test_acc   0.69 (  0.70)	test_minacc   0.84 (  0.80)	test_majacc   0.67 (  0.68)	Loss_d 0.473 (0.478)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.46 (  0.49)
Test: [  26/  26]	Loss 0.495 (0.478)	test_acc   0.70 (  0.70)	test_minacc   0.80 (  0.81)	test_majacc   0.67 (  0.68)	Loss_d 0.495 (0.478)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.80 (  0.81)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.46 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.17it/s]
Test: [  0/  1]	Loss 1.073 (1.073)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.75 (  0.75)	Loss_d 1.073 (1.073)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.073 (1.073)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.75 (  0.75)	Loss_d 1.073 (1.073)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.09 (  0.09)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/89/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0395 (0.0415)	validation_time 0.0004 (0.0007)	train_time 0.0391 (0.0406)
record: (train_acc, test_acc) (0.6964000302553177, 0.6430000066757202)
last accs (train_acc, test_acc) (0.6964000302553177, 0.6430000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.09it/s] 19%|#9        | 5/26 [00:00<00:00, 21.36it/s] 35%|###4      | 9/26 [00:00<00:00, 27.81it/s] 50%|#####     | 13/26 [00:00<00:00, 31.04it/s] 65%|######5   | 17/26 [00:00<00:00, 32.42it/s] 81%|########  | 21/26 [00:00<00:00, 33.57it/s] 96%|#########6| 25/26 [00:00<00:00, 34.60it/s]100%|##########| 26/26 [00:00<00:00, 29.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.001)	train_nll   0.47 (  0.47)	train_penalty   0.00 (  0.00)	weight_norm  24.29 ( 24.29)	train_acc   0.71 (  0.71)	train_minacc   0.84 (  0.81)	train_majacc   0.68 (  0.69)	train_corr   0.00 (  0.00)	l1 6.2041 (6.1625)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.03it/s] 19%|#9        | 5/26 [00:00<00:00, 21.23it/s] 38%|###8      | 10/26 [00:00<00:00, 32.72it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.72it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.38it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 35.38it/s] 81%|########  | 21/26 [00:00<00:00, 41.66it/s]100%|##########| 26/26 [00:00<00:00, 34.93it/s]
Test: [   0/  26]	Loss 0.478 (0.478)	test_acc   0.67 (  0.67)	test_minacc   0.83 (  0.83)	test_majacc   0.64 (  0.64)	Loss_d 0.478 (0.478)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.464 (0.484)	test_acc   0.69 (  0.68)	test_minacc   0.79 (  0.81)	test_majacc   0.67 (  0.66)	Loss_d 0.464 (0.484)	test_acc_d   0.69 (  0.68)	test_minacc_d   0.79 (  0.81)	test_majacc_d   0.67 (  0.66)	test_corr_d   0.52 (  0.47)
Test: [  20/  26]	Loss 0.488 (0.484)	test_acc   0.67 (  0.68)	test_minacc   0.85 (  0.82)	test_majacc   0.64 (  0.66)	Loss_d 0.488 (0.484)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.64 (  0.66)	test_corr_d   0.43 (  0.46)
Test: [  26/  26]	Loss 0.480 (0.484)	test_acc   0.70 (  0.68)	test_minacc   0.84 (  0.83)	test_majacc   0.67 (  0.66)	Loss_d 0.480 (0.484)	test_acc_d   0.70 (  0.68)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.67 (  0.66)	test_corr_d   0.45 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.69it/s]
Test: [  0/  1]	Loss 1.053 (1.053)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.74 (  0.74)	Loss_d 1.053 (1.053)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.053 (1.053)	test_acc   0.67 (  0.67)	test_minacc   0.66 (  0.66)	test_majacc   0.74 (  0.74)	Loss_d 1.053 (1.053)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.05 (  0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/89/checkpoints/model_best.pth
Overall Timing[ 20/  1]	epoch_time 0.0396 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0392 (0.0405)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.16it/s] 15%|#5        | 4/26 [00:00<00:01, 18.96it/s] 31%|###       | 8/26 [00:00<00:00, 26.55it/s] 46%|####6     | 12/26 [00:00<00:00, 30.06it/s] 62%|######1   | 16/26 [00:00<00:00, 32.75it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.93it/s] 96%|#########6| 25/26 [00:00<00:00, 36.11it/s]100%|##########| 26/26 [00:00<00:00, 29.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.001)	train_nll   0.44 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  24.30 ( 24.29)	train_acc   0.74 (  0.70)	train_minacc   0.82 (  0.81)	train_majacc   0.72 (  0.68)	train_corr   0.00 (  0.00)	l1 6.0946 (6.1585)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.61it/s] 27%|##6       | 7/26 [00:00<00:00, 35.31it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.31it/s] 46%|####6     | 12/26 [00:00<00:00, 40.71it/s] 65%|######5   | 17/26 [00:00<00:00, 42.92it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.92it/s] 85%|########4 | 22/26 [00:00<00:00, 41.48it/s]100%|##########| 26/26 [00:00<00:00, 38.85it/s]
Test: [   0/  26]	Loss 0.433 (0.433)	test_acc   0.72 (  0.72)	test_minacc   0.81 (  0.81)	test_majacc   0.70 (  0.70)	Loss_d 0.433 (0.433)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.437 (0.445)	test_acc   0.70 (  0.71)	test_minacc   0.75 (  0.81)	test_majacc   0.69 (  0.69)	Loss_d 0.437 (0.445)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.75 (  0.81)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.58 (  0.54)
Test: [  20/  26]	Loss 0.453 (0.445)	test_acc   0.69 (  0.71)	test_minacc   0.84 (  0.82)	test_majacc   0.66 (  0.69)	Loss_d 0.453 (0.445)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.66 (  0.69)	test_corr_d   0.50 (  0.54)
Test: [  26/  26]	Loss 0.448 (0.446)	test_acc   0.73 (  0.71)	test_minacc   0.82 (  0.82)	test_majacc   0.71 (  0.69)	Loss_d 0.448 (0.446)	test_acc_d   0.73 (  0.71)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.71 (  0.69)	test_corr_d   0.53 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.33it/s]
Test: [  0/  1]	Loss 1.093 (1.093)	test_acc   0.65 (  0.65)	test_minacc   0.63 (  0.63)	test_majacc   0.79 (  0.79)	Loss_d 1.093 (1.093)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.093 (1.093)	test_acc   0.65 (  0.65)	test_minacc   0.63 (  0.63)	test_majacc   0.79 (  0.79)	Loss_d 1.093 (1.093)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.15 (  0.15)
Overall Timing[ 21/  1]	epoch_time 0.0388 (0.0413)	validation_time 0.0003 (0.0007)	train_time 0.0385 (0.0404)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.7096000319719314, 0.6450000405311584)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.14it/s] 19%|#9        | 5/26 [00:00<00:01, 16.77it/s] 35%|###4      | 9/26 [00:00<00:00, 23.66it/s] 50%|#####     | 13/26 [00:00<00:00, 27.32it/s] 65%|######5   | 17/26 [00:00<00:00, 29.03it/s] 81%|########  | 21/26 [00:00<00:00, 30.99it/s] 96%|#########6| 25/26 [00:00<00:00, 32.37it/s]100%|##########| 26/26 [00:01<00:00, 25.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.47 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  24.30 ( 24.30)	train_acc   0.70 (  0.69)	train_minacc   0.80 (  0.82)	train_majacc   0.68 (  0.67)	train_corr   0.00 (  0.00)	l1 6.1208 (6.1480)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.94it/s] 23%|##3       | 6/26 [00:00<00:00, 23.41it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.41it/s] 42%|####2     | 11/26 [00:00<00:00, 32.06it/s] 62%|######1   | 16/26 [00:00<00:00, 36.72it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.72it/s] 81%|########  | 21/26 [00:00<00:00, 38.09it/s]100%|##########| 26/26 [00:00<00:00, 41.04it/s]100%|##########| 26/26 [00:00<00:00, 32.13it/s]
Test: [   0/  26]	Loss 0.438 (0.438)	test_acc   0.71 (  0.71)	test_minacc   0.81 (  0.81)	test_majacc   0.70 (  0.70)	Loss_d 0.438 (0.438)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.433 (0.447)	test_acc   0.71 (  0.71)	test_minacc   0.75 (  0.81)	test_majacc   0.70 (  0.69)	Loss_d 0.433 (0.447)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.75 (  0.81)	test_majacc_d   0.70 (  0.69)	test_corr_d   0.58 (  0.53)
Test: [  20/  26]	Loss 0.453 (0.448)	test_acc   0.69 (  0.71)	test_minacc   0.84 (  0.81)	test_majacc   0.67 (  0.69)	Loss_d 0.453 (0.448)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.67 (  0.69)	test_corr_d   0.50 (  0.53)
Test: [  26/  26]	Loss 0.463 (0.450)	test_acc   0.71 (  0.70)	test_minacc   0.80 (  0.81)	test_majacc   0.69 (  0.68)	Loss_d 0.463 (0.450)	test_acc_d   0.71 (  0.70)	test_minacc_d   0.80 (  0.81)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.51 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.67it/s]
Test: [  0/  1]	Loss 1.094 (1.094)	test_acc   0.66 (  0.66)	test_minacc   0.64 (  0.64)	test_majacc   0.77 (  0.77)	Loss_d 1.094 (1.094)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.094 (1.094)	test_acc   0.66 (  0.66)	test_minacc   0.64 (  0.64)	test_majacc   0.77 (  0.77)	Loss_d 1.094 (1.094)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.14 (  0.14)
Overall Timing[ 22/  1]	epoch_time 0.0391 (0.0412)	validation_time 0.0003 (0.0006)	train_time 0.0388 (0.0403)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.7043000312447548, 0.656000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.07it/s] 19%|#9        | 5/26 [00:00<00:00, 24.49it/s] 31%|###       | 8/26 [00:00<00:00, 25.13it/s] 46%|####6     | 12/26 [00:00<00:00, 29.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.68it/s] 88%|########8 | 23/26 [00:00<00:00, 32.26it/s]100%|##########| 26/26 [00:00<00:00, 28.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.093507766723633
set z to 6.032572689056396
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 393 tensor(-0.0086, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 269 tensor(-0.0077, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 204 tensor(0.0113, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 187 tensor(0.0036, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 188 tensor(0.0008, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.055 (0.159)	train_nll   0.71 (  0.65)	train_penalty   0.05 (  0.16)	weight_norm  28.55 ( 25.51)	train_acc   0.75 (  0.69)	train_minacc   0.44 (  0.55)	train_majacc   0.81 (  0.71)	train_corr   0.00 (  0.00)	l1 6.9890 (7.1470)	zero_count 0.0000 (38.6490)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.51it/s] 27%|##6       | 7/26 [00:00<00:00, 31.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.18it/s] 50%|#####     | 13/26 [00:00<00:00, 38.74it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.33it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.33it/s] 96%|#########6| 25/26 [00:00<00:00, 45.86it/s]100%|##########| 26/26 [00:00<00:00, 37.80it/s]
Test: [   0/  26]	Loss 0.607 (0.607)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.607 (0.607)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.693 (0.658)	test_acc   0.48 (  0.49)	test_minacc   0.51 (  0.47)	test_majacc   0.48 (  0.50)	Loss_d 0.693 (0.658)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.51 (  0.47)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.48 (  0.50)
Test: [  20/  26]	Loss 0.655 (0.640)	test_acc   0.48 (  0.50)	test_minacc   0.55 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.655 (0.640)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.55 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.50 (  0.51)
Test: [  26/  26]	Loss 0.717 (0.646)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.717 (0.646)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.50 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.06it/s]
Test: [  0/  1]	Loss 1.575 (1.575)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.575 (1.575)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.575 (1.575)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.575 (1.575)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Overall Timing[ 23/  1]	epoch_time 0.0358 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0353 (0.0401)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.5000000112652778, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 15%|#5        | 4/26 [00:00<00:01, 18.36it/s] 31%|###       | 8/26 [00:00<00:00, 25.66it/s] 46%|####6     | 12/26 [00:00<00:00, 28.75it/s] 62%|######1   | 16/26 [00:00<00:00, 31.52it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.53it/s] 92%|#########2| 24/26 [00:00<00:00, 33.54it/s]100%|##########| 26/26 [00:00<00:00, 27.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 189 tensor(4.2471e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 189 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 195 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 197 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 198 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 225 tensor(-0.0004, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.082 (0.006)	train_nll   0.82 (  0.64)	train_penalty   0.08 (  0.01)	weight_norm  31.31 ( 30.46)	train_acc   0.54 (  0.62)	train_minacc   0.49 (  0.39)	train_majacc   0.55 (  0.66)	train_corr   0.00 (  0.00)	l1 6.1625 (6.3356)	zero_count 0.0000 (74.4900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.58it/s] 27%|##6       | 7/26 [00:00<00:00, 34.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.83it/s] 50%|#####     | 13/26 [00:00<00:00, 40.12it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.95it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.95it/s] 96%|#########6| 25/26 [00:00<00:00, 46.76it/s]100%|##########| 26/26 [00:00<00:00, 39.63it/s]
Test: [   0/  26]	Loss 0.616 (0.616)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.49 (  0.49)	Loss_d 0.616 (0.616)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.656 (0.640)	test_acc   0.48 (  0.50)	test_minacc   0.51 (  0.47)	test_majacc   0.48 (  0.50)	Loss_d 0.656 (0.640)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.51 (  0.47)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.45 (  0.43)
Test: [  20/  26]	Loss 0.651 (0.636)	test_acc   0.48 (  0.50)	test_minacc   0.55 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.651 (0.636)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.55 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.48 (  0.44)
Test: [  26/  26]	Loss 0.779 (0.640)	test_acc   0.54 (  0.50)	test_minacc   0.49 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.779 (0.640)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.49 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.42 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.41it/s]
Test: [  0/  1]	Loss 1.041 (1.041)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.041 (1.041)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.041 (1.041)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.041 (1.041)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.29 (  0.29)
Overall Timing[ 24/  1]	epoch_time 0.0364 (0.0408)	validation_time 0.0004 (0.0006)	train_time 0.0360 (0.0400)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.5020000086128712, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.27it/s] 19%|#9        | 5/26 [00:00<00:00, 21.66it/s] 35%|###4      | 9/26 [00:00<00:00, 27.16it/s] 50%|#####     | 13/26 [00:00<00:00, 29.96it/s] 65%|######5   | 17/26 [00:00<00:00, 31.59it/s] 81%|########  | 21/26 [00:00<00:00, 32.21it/s]100%|##########| 26/26 [00:00<00:00, 33.73it/s]100%|##########| 26/26 [00:00<00:00, 28.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 281 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 294 tensor(-0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 306 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 311 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 313 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 328 tensor(-0.0003, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.001 (0.002)	train_nll   0.62 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.59 ( 31.50)	train_acc   0.54 (  0.53)	train_minacc   0.51 (  0.48)	train_majacc   0.54 (  0.54)	train_corr   0.00 (  0.00)	l1 6.0415 (6.0671)	zero_count 0.0000 (52.1040)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.72it/s] 31%|###       | 8/26 [00:00<00:00, 38.82it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.82it/s] 50%|#####     | 13/26 [00:00<00:00, 41.03it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.42it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.42it/s] 96%|#########6| 25/26 [00:00<00:00, 47.95it/s]100%|##########| 26/26 [00:00<00:00, 41.00it/s]
Test: [   0/  26]	Loss 0.618 (0.618)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.49 (  0.49)	Loss_d 0.618 (0.618)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.642 (0.630)	test_acc   0.48 (  0.50)	test_minacc   0.47 (  0.46)	test_majacc   0.48 (  0.50)	Loss_d 0.642 (0.630)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.47 (  0.46)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.38 (  0.38)
Test: [  20/  26]	Loss 0.669 (0.630)	test_acc   0.49 (  0.50)	test_minacc   0.55 (  0.49)	test_majacc   0.48 (  0.50)	Loss_d 0.669 (0.630)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.55 (  0.49)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.41 (  0.39)
Test: [  26/  26]	Loss 0.624 (0.632)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.49)	test_majacc   0.55 (  0.51)	Loss_d 0.624 (0.632)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.49)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.34 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.06it/s]
Test: [  0/  1]	Loss 1.003 (1.003)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.003 (1.003)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.003 (1.003)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.003 (1.003)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.16 (  0.16)
Overall Timing[ 25/  1]	epoch_time 0.0376 (0.0407)	validation_time 0.0003 (0.0006)	train_time 0.0372 (0.0399)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.5041000121831893, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.15it/s] 19%|#9        | 5/26 [00:00<00:01, 18.82it/s] 35%|###4      | 9/26 [00:00<00:00, 26.42it/s] 50%|#####     | 13/26 [00:00<00:00, 28.57it/s] 65%|######5   | 17/26 [00:00<00:00, 28.29it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.46it/s] 92%|#########2| 24/26 [00:00<00:00, 31.33it/s]100%|##########| 26/26 [00:01<00:00, 25.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 314 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 312 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 320 tensor(-4.6311e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 322 tensor(-1.2489e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 351 tensor(-0.0001, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 343 tensor(-1.9423e-05, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.001)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  31.63 ( 31.61)	train_acc   0.54 (  0.50)	train_minacc   0.51 (  0.50)	train_majacc   0.55 (  0.50)	train_corr   0.00 (  0.00)	l1 6.0324 (6.0398)	zero_count 160.0000 (41.4010)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.44it/s] 27%|##6       | 7/26 [00:00<00:00, 31.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.13it/s] 46%|####6     | 12/26 [00:00<00:00, 38.55it/s] 65%|######5   | 17/26 [00:00<00:00, 42.66it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.66it/s] 88%|########8 | 23/26 [00:00<00:00, 46.22it/s]100%|##########| 26/26 [00:00<00:00, 37.63it/s]
Test: [   0/  26]	Loss 0.614 (0.614)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.614 (0.614)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.645 (0.632)	test_acc   0.48 (  0.50)	test_minacc   0.51 (  0.47)	test_majacc   0.48 (  0.50)	Loss_d 0.645 (0.632)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.51 (  0.47)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  20/  26]	Loss 0.670 (0.634)	test_acc   0.48 (  0.50)	test_minacc   0.55 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 0.670 (0.634)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.55 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.39 (  0.37)
Test: [  26/  26]	Loss 0.622 (0.634)	test_acc   0.54 (  0.50)	test_minacc   0.51 (  0.50)	test_majacc   0.55 (  0.50)	Loss_d 0.622 (0.634)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.55 (  0.50)	test_corr_d   0.32 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.78it/s]
Test: [  0/  1]	Loss 0.963 (0.963)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.963 (0.963)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.963 (0.963)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.963 (0.963)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 26/  1]	epoch_time 0.0385 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0382 (0.0398)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.5007000086903572, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.59it/s] 15%|#5        | 4/26 [00:00<00:01, 20.34it/s] 31%|###       | 8/26 [00:00<00:00, 28.63it/s] 46%|####6     | 12/26 [00:00<00:00, 31.08it/s] 62%|######1   | 16/26 [00:00<00:00, 32.15it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.73it/s] 92%|#########2| 24/26 [00:00<00:00, 34.03it/s]100%|##########| 26/26 [00:00<00:00, 29.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 321 tensor(-3.5127e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 313 tensor(-5.1266e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 314 tensor(-2.1688e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 319 tensor(8.8081e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.64 ( 31.63)	train_acc   0.54 (  0.50)	train_minacc   0.51 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.0214 (6.0358)	zero_count 0.0000 (36.8550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.57it/s] 27%|##6       | 7/26 [00:00<00:00, 36.10it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.10it/s] 50%|#####     | 13/26 [00:00<00:00, 44.98it/s] 69%|######9   | 18/26 [00:00<00:00, 45.52it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.52it/s] 92%|#########2| 24/26 [00:00<00:00, 49.97it/s]100%|##########| 26/26 [00:00<00:00, 42.75it/s]
Test: [   0/  26]	Loss 0.617 (0.617)	test_acc   0.49 (  0.49)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.617 (0.617)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.644 (0.633)	test_acc   0.48 (  0.50)	test_minacc   0.51 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.644 (0.633)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.51 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  20/  26]	Loss 0.666 (0.635)	test_acc   0.48 (  0.50)	test_minacc   0.55 (  0.51)	test_majacc   0.47 (  0.49)	Loss_d 0.666 (0.635)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.38 (  0.36)
Test: [  26/  26]	Loss 0.626 (0.635)	test_acc   0.53 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.54 (  0.50)	Loss_d 0.626 (0.635)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.30 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.57it/s]
Test: [  0/  1]	Loss 0.947 (0.947)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.947 (0.947)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.947 (0.947)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.947 (0.947)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.14)
Overall Timing[ 27/  1]	epoch_time 0.0357 (0.0404)	validation_time 0.0003 (0.0006)	train_time 0.0354 (0.0396)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.49950000950694085, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 19%|#9        | 5/26 [00:00<00:00, 22.27it/s] 31%|###       | 8/26 [00:00<00:00, 25.27it/s] 46%|####6     | 12/26 [00:00<00:00, 30.23it/s] 62%|######1   | 16/26 [00:00<00:00, 31.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.53it/s] 92%|#########2| 24/26 [00:00<00:00, 33.37it/s]100%|##########| 26/26 [00:00<00:00, 28.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 335 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 330 tensor(-4.3333e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 323 tensor(2.7967e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.64 ( 31.64)	train_acc   0.52 (  0.50)	train_minacc   0.51 (  0.51)	train_majacc   0.52 (  0.50)	train_corr   0.00 (  0.00)	l1 6.0223 (6.0332)	zero_count 0.0000 (21.2550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.81it/s] 15%|#5        | 4/26 [00:00<00:01, 14.37it/s] 35%|###4      | 9/26 [00:00<00:00, 26.90it/s]                                               35%|###4      | 9/26 [00:00<00:00, 26.90it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.08it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.34it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.34it/s] 96%|#########6| 25/26 [00:00<00:00, 39.49it/s]100%|##########| 26/26 [00:00<00:00, 31.17it/s]
Test: [   0/  26]	Loss 0.622 (0.622)	test_acc   0.49 (  0.49)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.622 (0.622)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.644 (0.635)	test_acc   0.48 (  0.49)	test_minacc   0.51 (  0.49)	test_majacc   0.47 (  0.49)	Loss_d 0.644 (0.635)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.51 (  0.49)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.34 (  0.34)
Test: [  20/  26]	Loss 0.663 (0.636)	test_acc   0.48 (  0.49)	test_minacc   0.55 (  0.52)	test_majacc   0.47 (  0.49)	Loss_d 0.663 (0.636)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.55 (  0.52)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.37 (  0.35)
Test: [  26/  26]	Loss 0.630 (0.637)	test_acc   0.52 (  0.50)	test_minacc   0.51 (  0.52)	test_majacc   0.52 (  0.49)	Loss_d 0.630 (0.637)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.51 (  0.52)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.29 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.30it/s]
Test: [  0/  1]	Loss 0.945 (0.945)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.945 (0.945)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.945 (0.945)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.945 (0.945)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 28/  1]	epoch_time 0.0369 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0365 (0.0395)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.49670001402497294, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.85it/s] 19%|#9        | 5/26 [00:00<00:00, 21.15it/s] 31%|###       | 8/26 [00:00<00:00, 23.90it/s] 46%|####6     | 12/26 [00:00<00:00, 26.92it/s] 65%|######5   | 17/26 [00:00<00:00, 29.71it/s] 85%|########4 | 22/26 [00:00<00:00, 33.40it/s]100%|##########| 26/26 [00:00<00:00, 28.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 345 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 335 tensor(-1.0173e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 328 tensor(2.0698e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.65 ( 31.65)	train_acc   0.52 (  0.50)	train_minacc   0.51 (  0.52)	train_majacc   0.52 (  0.49)	train_corr   0.00 (  0.00)	l1 6.0278 (6.0332)	zero_count 0.0000 (20.4750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.48it/s] 23%|##3       | 6/26 [00:00<00:00, 30.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.77it/s] 42%|####2     | 11/26 [00:00<00:00, 38.47it/s] 65%|######5   | 17/26 [00:00<00:00, 45.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 45.94it/s] 85%|########4 | 22/26 [00:00<00:00, 45.26it/s]100%|##########| 26/26 [00:00<00:00, 39.33it/s]
Test: [   0/  26]	Loss 0.624 (0.624)	test_acc   0.49 (  0.49)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.624 (0.624)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.645 (0.637)	test_acc   0.47 (  0.49)	test_minacc   0.53 (  0.51)	test_majacc   0.46 (  0.49)	Loss_d 0.645 (0.637)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.660 (0.637)	test_acc   0.48 (  0.49)	test_minacc   0.56 (  0.53)	test_majacc   0.47 (  0.48)	Loss_d 0.660 (0.637)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.56 (  0.53)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.36 (  0.34)
Test: [  26/  26]	Loss 0.633 (0.638)	test_acc   0.52 (  0.49)	test_minacc   0.51 (  0.54)	test_majacc   0.52 (  0.49)	Loss_d 0.633 (0.638)	test_acc_d   0.52 (  0.49)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.52 (  0.49)	test_corr_d   0.27 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.17it/s]
Test: [  0/  1]	Loss 0.943 (0.943)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.943 (0.943)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.943 (0.943)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.943 (0.943)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 29/  1]	epoch_time 0.0365 (0.0402)	validation_time 0.0005 (0.0006)	train_time 0.0360 (0.0394)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4947000104486942, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.58it/s] 19%|#9        | 5/26 [00:00<00:00, 21.09it/s] 35%|###4      | 9/26 [00:00<00:00, 25.99it/s] 50%|#####     | 13/26 [00:00<00:00, 28.39it/s] 65%|######5   | 17/26 [00:00<00:00, 29.63it/s] 81%|########  | 21/26 [00:00<00:00, 30.29it/s] 96%|#########6| 25/26 [00:00<00:00, 32.36it/s]100%|##########| 26/26 [00:00<00:00, 27.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 335 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 327 tensor(-1.3322e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 326 tensor(1.5198e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 322 tensor(-8.0856e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.65 ( 31.65)	train_acc   0.51 (  0.49)	train_minacc   0.51 (  0.53)	train_majacc   0.51 (  0.49)	train_corr   0.00 (  0.00)	l1 6.0266 (6.0341)	zero_count 0.0000 (28.6260)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.80it/s] 27%|##6       | 7/26 [00:00<00:00, 35.22it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.22it/s] 50%|#####     | 13/26 [00:00<00:00, 41.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.09it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.09it/s] 96%|#########6| 25/26 [00:00<00:00, 48.12it/s]100%|##########| 26/26 [00:00<00:00, 40.70it/s]
Test: [   0/  26]	Loss 0.626 (0.626)	test_acc   0.49 (  0.49)	test_minacc   0.52 (  0.52)	test_majacc   0.48 (  0.48)	Loss_d 0.626 (0.626)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.646 (0.638)	test_acc   0.47 (  0.49)	test_minacc   0.53 (  0.51)	test_majacc   0.46 (  0.48)	Loss_d 0.646 (0.638)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.46 (  0.48)	test_corr_d   0.32 (  0.32)
Test: [  20/  26]	Loss 0.657 (0.639)	test_acc   0.48 (  0.49)	test_minacc   0.56 (  0.53)	test_majacc   0.47 (  0.48)	Loss_d 0.657 (0.639)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.56 (  0.53)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.36 (  0.33)
Test: [  26/  26]	Loss 0.636 (0.639)	test_acc   0.51 (  0.49)	test_minacc   0.51 (  0.54)	test_majacc   0.51 (  0.49)	Loss_d 0.636 (0.639)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.26 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.49it/s]
Test: [  0/  1]	Loss 0.941 (0.941)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.941 (0.941)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.941 (0.941)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.941 (0.941)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 30/  1]	epoch_time 0.0371 (0.0401)	validation_time 0.0004 (0.0006)	train_time 0.0367 (0.0393)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4928000103533268, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.63it/s] 19%|#9        | 5/26 [00:00<00:00, 22.04it/s] 35%|###4      | 9/26 [00:00<00:00, 28.44it/s] 50%|#####     | 13/26 [00:00<00:00, 30.37it/s] 65%|######5   | 17/26 [00:00<00:00, 31.53it/s] 81%|########  | 21/26 [00:00<00:00, 31.69it/s] 96%|#########6| 25/26 [00:00<00:00, 33.77it/s]100%|##########| 26/26 [00:00<00:00, 28.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 368 tensor(-7.7170e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 345 tensor(-1.0945e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 327 tensor(8.3752e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 325 tensor(1.5943e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.66 ( 31.65)	train_acc   0.51 (  0.49)	train_minacc   0.51 (  0.53)	train_majacc   0.51 (  0.49)	train_corr   0.00 (  0.00)	l1 6.0251 (6.0330)	zero_count 0.0000 (26.4810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.61it/s] 19%|#9        | 5/26 [00:00<00:01, 18.13it/s]                                               19%|#9        | 5/26 [00:00<00:01, 18.13it/s] 42%|####2     | 11/26 [00:00<00:00, 31.77it/s] 62%|######1   | 16/26 [00:00<00:00, 37.01it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.01it/s] 85%|########4 | 22/26 [00:00<00:00, 42.46it/s]100%|##########| 26/26 [00:00<00:00, 32.93it/s]
Test: [   0/  26]	Loss 0.628 (0.628)	test_acc   0.49 (  0.49)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.628 (0.628)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.647 (0.640)	test_acc   0.46 (  0.49)	test_minacc   0.53 (  0.53)	test_majacc   0.45 (  0.48)	Loss_d 0.647 (0.640)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.45 (  0.48)	test_corr_d   0.32 (  0.31)
Test: [  20/  26]	Loss 0.655 (0.640)	test_acc   0.48 (  0.49)	test_minacc   0.56 (  0.55)	test_majacc   0.47 (  0.48)	Loss_d 0.655 (0.640)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.35 (  0.32)
Test: [  26/  26]	Loss 0.638 (0.640)	test_acc   0.51 (  0.49)	test_minacc   0.53 (  0.55)	test_majacc   0.51 (  0.48)	Loss_d 0.638 (0.640)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.53 (  0.55)	test_majacc_d   0.51 (  0.48)	test_corr_d   0.25 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.56it/s]
Test: [  0/  1]	Loss 0.938 (0.938)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.938 (0.938)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.938 (0.938)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.938 (0.938)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 31/  1]	epoch_time 0.0385 (0.0400)	validation_time 0.0003 (0.0006)	train_time 0.0381 (0.0393)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4915000115931034, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.29it/s] 19%|#9        | 5/26 [00:00<00:00, 24.09it/s] 35%|###4      | 9/26 [00:00<00:00, 26.15it/s] 50%|#####     | 13/26 [00:00<00:00, 29.96it/s] 65%|######5   | 17/26 [00:00<00:00, 31.14it/s] 81%|########  | 21/26 [00:00<00:00, 31.93it/s] 96%|#########6| 25/26 [00:00<00:00, 33.95it/s]100%|##########| 26/26 [00:00<00:00, 28.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 375 tensor(-8.1227e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 351 tensor(3.6481e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 325 tensor(2.3217e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.66 ( 31.66)	train_acc   0.51 (  0.49)	train_minacc   0.53 (  0.55)	train_majacc   0.50 (  0.48)	train_corr   0.00 (  0.00)	l1 6.0250 (6.0318)	zero_count 0.0000 (18.7980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.65it/s] 23%|##3       | 6/26 [00:00<00:00, 31.94it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.94it/s] 42%|####2     | 11/26 [00:00<00:00, 37.16it/s] 62%|######1   | 16/26 [00:00<00:00, 40.97it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.97it/s] 81%|########  | 21/26 [00:00<00:00, 39.03it/s]100%|##########| 26/26 [00:00<00:00, 41.97it/s]100%|##########| 26/26 [00:00<00:00, 35.85it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.49 (  0.49)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.630 (0.630)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.647 (0.641)	test_acc   0.46 (  0.49)	test_minacc   0.53 (  0.54)	test_majacc   0.45 (  0.48)	Loss_d 0.647 (0.641)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.53 (  0.54)	test_majacc_d   0.45 (  0.48)	test_corr_d   0.31 (  0.31)
Test: [  20/  26]	Loss 0.653 (0.641)	test_acc   0.48 (  0.49)	test_minacc   0.56 (  0.56)	test_majacc   0.46 (  0.48)	Loss_d 0.653 (0.641)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.46 (  0.48)	test_corr_d   0.34 (  0.32)
Test: [  26/  26]	Loss 0.640 (0.641)	test_acc   0.51 (  0.49)	test_minacc   0.53 (  0.56)	test_majacc   0.50 (  0.48)	Loss_d 0.640 (0.641)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.53 (  0.56)	test_majacc_d   0.50 (  0.48)	test_corr_d   0.25 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.71it/s]
Test: [  0/  1]	Loss 0.937 (0.937)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.937 (0.937)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.937 (0.937)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.937 (0.937)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 32/  1]	epoch_time 0.0393 (0.0400)	validation_time 0.0004 (0.0006)	train_time 0.0389 (0.0393)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4902000079751015, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.88it/s] 19%|#9        | 5/26 [00:00<00:00, 26.64it/s] 35%|###4      | 9/26 [00:00<00:00, 31.01it/s] 50%|#####     | 13/26 [00:00<00:00, 30.72it/s] 69%|######9   | 18/26 [00:00<00:00, 32.74it/s] 88%|########8 | 23/26 [00:00<00:00, 35.34it/s]100%|##########| 26/26 [00:00<00:00, 31.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 370 tensor(-7.1783e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 327 tensor(2.5655e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.66 ( 31.66)	train_acc   0.50 (  0.49)	train_minacc   0.53 (  0.56)	train_majacc   0.50 (  0.47)	train_corr   0.00 (  0.00)	l1 6.0265 (6.0311)	zero_count 0.0000 (12.6750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.88it/s] 35%|###4      | 9/26 [00:00<00:00, 44.00it/s]                                               35%|###4      | 9/26 [00:00<00:00, 44.00it/s] 54%|#####3    | 14/26 [00:00<00:00, 44.94it/s] 77%|#######6  | 20/26 [00:00<00:00, 49.96it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 49.96it/s]100%|##########| 26/26 [00:00<00:00, 52.90it/s]100%|##########| 26/26 [00:00<00:00, 44.66it/s]
Test: [   0/  26]	Loss 0.631 (0.631)	test_acc   0.49 (  0.49)	test_minacc   0.57 (  0.57)	test_majacc   0.48 (  0.48)	Loss_d 0.631 (0.631)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.648 (0.642)	test_acc   0.45 (  0.48)	test_minacc   0.53 (  0.55)	test_majacc   0.44 (  0.47)	Loss_d 0.648 (0.642)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.53 (  0.55)	test_majacc_d   0.44 (  0.47)	test_corr_d   0.30 (  0.30)
Test: [  20/  26]	Loss 0.652 (0.642)	test_acc   0.48 (  0.49)	test_minacc   0.56 (  0.57)	test_majacc   0.46 (  0.47)	Loss_d 0.652 (0.642)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.56 (  0.57)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.34 (  0.31)
Test: [  26/  26]	Loss 0.641 (0.642)	test_acc   0.50 (  0.49)	test_minacc   0.53 (  0.57)	test_majacc   0.49 (  0.47)	Loss_d 0.641 (0.642)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.53 (  0.57)	test_majacc_d   0.49 (  0.47)	test_corr_d   0.24 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.21it/s]
Test: [  0/  1]	Loss 0.935 (0.935)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.935 (0.935)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.935 (0.935)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 0.935 (0.935)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 33/  1]	epoch_time 0.0396 (0.0400)	validation_time 0.0003 (0.0006)	train_time 0.0393 (0.0393)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.48800001001358034, 0.503000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.64it/s] 19%|#9        | 5/26 [00:00<00:00, 24.12it/s] 35%|###4      | 9/26 [00:00<00:00, 30.48it/s] 50%|#####     | 13/26 [00:00<00:00, 31.34it/s] 65%|######5   | 17/26 [00:00<00:00, 32.16it/s] 85%|########4 | 22/26 [00:00<00:00, 33.41it/s]100%|##########| 26/26 [00:00<00:00, 34.89it/s]100%|##########| 26/26 [00:00<00:00, 29.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 387 tensor(-6.2273e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 340 tensor(1.9009e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 338 tensor(-6.0315e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.66 ( 31.66)	train_acc   0.50 (  0.49)	train_minacc   0.53 (  0.57)	train_majacc   0.49 (  0.47)	train_corr   0.00 (  0.00)	l1 6.0287 (6.0318)	zero_count 0.0000 (18.2520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.88it/s] 27%|##6       | 7/26 [00:00<00:00, 32.69it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.69it/s] 50%|#####     | 13/26 [00:00<00:00, 41.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.66it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.66it/s] 96%|#########6| 25/26 [00:00<00:00, 48.37it/s]100%|##########| 26/26 [00:00<00:00, 39.90it/s]
Test: [   0/  26]	Loss 0.632 (0.632)	test_acc   0.48 (  0.48)	test_minacc   0.57 (  0.57)	test_majacc   0.47 (  0.47)	Loss_d 0.632 (0.632)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.649 (0.642)	test_acc   0.45 (  0.48)	test_minacc   0.53 (  0.55)	test_majacc   0.44 (  0.47)	Loss_d 0.649 (0.642)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.53 (  0.55)	test_majacc_d   0.44 (  0.47)	test_corr_d   0.30 (  0.30)
Test: [  20/  26]	Loss 0.651 (0.642)	test_acc   0.48 (  0.48)	test_minacc   0.58 (  0.57)	test_majacc   0.46 (  0.47)	Loss_d 0.651 (0.642)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.33 (  0.31)
Test: [  26/  26]	Loss 0.642 (0.643)	test_acc   0.50 (  0.49)	test_minacc   0.53 (  0.57)	test_majacc   0.49 (  0.47)	Loss_d 0.642 (0.643)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.53 (  0.57)	test_majacc_d   0.49 (  0.47)	test_corr_d   0.24 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.93it/s]
Test: [  0/  1]	Loss 0.934 (0.934)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.934 (0.934)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.934 (0.934)	test_acc   0.50 (  0.50)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.934 (0.934)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Overall Timing[ 34/  1]	epoch_time 0.0386 (0.0399)	validation_time 0.0005 (0.0006)	train_time 0.0382 (0.0392)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4868000065982342, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.29it/s] 12%|#1        | 3/26 [00:00<00:02,  7.89it/s] 27%|##6       | 7/26 [00:00<00:01, 16.94it/s] 42%|####2     | 11/26 [00:00<00:00, 23.00it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.41it/s] 88%|########8 | 23/26 [00:01<00:00, 30.41it/s]100%|##########| 26/26 [00:01<00:00, 23.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 345 tensor(-3.0526e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 330 tensor(7.8613e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.66 ( 31.66)	train_acc   0.49 (  0.49)	train_minacc   0.53 (  0.58)	train_majacc   0.48 (  0.47)	train_corr   0.00 (  0.00)	l1 6.0292 (6.0319)	zero_count 0.0000 (13.5330)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.68it/s] 27%|##6       | 7/26 [00:00<00:00, 35.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.20it/s] 50%|#####     | 13/26 [00:00<00:00, 40.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.15it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.15it/s] 96%|#########6| 25/26 [00:00<00:00, 45.37it/s]100%|##########| 26/26 [00:00<00:00, 39.14it/s]
Test: [   0/  26]	Loss 0.632 (0.632)	test_acc   0.49 (  0.49)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 0.632 (0.632)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.649 (0.643)	test_acc   0.46 (  0.48)	test_minacc   0.57 (  0.57)	test_majacc   0.44 (  0.47)	Loss_d 0.649 (0.643)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.44 (  0.47)	test_corr_d   0.30 (  0.29)
Test: [  20/  26]	Loss 0.650 (0.643)	test_acc   0.48 (  0.48)	test_minacc   0.61 (  0.59)	test_majacc   0.46 (  0.47)	Loss_d 0.650 (0.643)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.33 (  0.30)
Test: [  26/  26]	Loss 0.643 (0.643)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.58)	test_majacc   0.48 (  0.47)	Loss_d 0.643 (0.643)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.48 (  0.47)	test_corr_d   0.23 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.47it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.933 (0.933)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.933 (0.933)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 35/  1]	epoch_time 0.0408 (0.0400)	validation_time 0.0003 (0.0005)	train_time 0.0405 (0.0393)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4865000081062317, 0.5060000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.79it/s] 19%|#9        | 5/26 [00:00<00:01, 17.69it/s] 35%|###4      | 9/26 [00:00<00:00, 24.63it/s] 50%|#####     | 13/26 [00:00<00:00, 28.48it/s] 65%|######5   | 17/26 [00:00<00:00, 28.69it/s] 81%|########  | 21/26 [00:00<00:00, 29.07it/s] 96%|#########6| 25/26 [00:00<00:00, 31.21it/s]100%|##########| 26/26 [00:01<00:00, 25.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 397 tensor(-3.3811e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 327 tensor(1.7294e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.66 ( 31.66)	train_acc   0.49 (  0.49)	train_minacc   0.53 (  0.59)	train_majacc   0.48 (  0.47)	train_corr   0.00 (  0.00)	l1 6.0282 (6.0315)	zero_count 0.0000 (11.6220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.15it/s] 31%|###       | 8/26 [00:00<00:00, 40.66it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.66it/s] 50%|#####     | 13/26 [00:00<00:00, 43.85it/s] 69%|######9   | 18/26 [00:00<00:00, 41.18it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.18it/s] 88%|########8 | 23/26 [00:00<00:00, 42.75it/s]100%|##########| 26/26 [00:00<00:00, 39.66it/s]
Test: [   0/  26]	Loss 0.633 (0.633)	test_acc   0.49 (  0.49)	test_minacc   0.64 (  0.64)	test_majacc   0.46 (  0.46)	Loss_d 0.633 (0.633)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.650 (0.644)	test_acc   0.46 (  0.48)	test_minacc   0.58 (  0.58)	test_majacc   0.44 (  0.46)	Loss_d 0.650 (0.644)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.650 (0.643)	test_acc   0.48 (  0.48)	test_minacc   0.61 (  0.59)	test_majacc   0.46 (  0.46)	Loss_d 0.650 (0.643)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.33 (  0.30)
Test: [  26/  26]	Loss 0.643 (0.644)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.59)	test_majacc   0.48 (  0.47)	Loss_d 0.643 (0.644)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.59)	test_majacc_d   0.48 (  0.47)	test_corr_d   0.23 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.59it/s]
Test: [  0/  1]	Loss 0.932 (0.932)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.932 (0.932)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.932 (0.932)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.932 (0.932)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 36/  1]	epoch_time 0.0395 (0.0399)	validation_time 0.0005 (0.0005)	train_time 0.0390 (0.0393)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4851000040769577, 0.5070000290870667)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 19%|#9        | 5/26 [00:00<00:00, 22.26it/s] 35%|###4      | 9/26 [00:00<00:00, 27.92it/s] 50%|#####     | 13/26 [00:00<00:00, 31.10it/s] 65%|######5   | 17/26 [00:00<00:00, 32.80it/s] 81%|########  | 21/26 [00:00<00:00, 31.65it/s] 96%|#########6| 25/26 [00:00<00:00, 33.08it/s]100%|##########| 26/26 [00:00<00:00, 28.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 339 tensor(-1.7824e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.66 ( 31.66)	train_acc   0.49 (  0.48)	train_minacc   0.53 (  0.60)	train_majacc   0.48 (  0.46)	train_corr   0.00 (  0.00)	l1 6.0297 (6.0300)	zero_count 0.0000 (6.7080)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 23%|##3       | 6/26 [00:00<00:00, 28.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.39it/s] 42%|####2     | 11/26 [00:00<00:00, 35.95it/s] 62%|######1   | 16/26 [00:00<00:00, 40.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.55it/s] 81%|########  | 21/26 [00:00<00:00, 40.27it/s]100%|##########| 26/26 [00:00<00:00, 43.13it/s]100%|##########| 26/26 [00:00<00:00, 35.21it/s]
Test: [   0/  26]	Loss 0.633 (0.633)	test_acc   0.49 (  0.49)	test_minacc   0.64 (  0.64)	test_majacc   0.46 (  0.46)	Loss_d 0.633 (0.633)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.650 (0.644)	test_acc   0.45 (  0.48)	test_minacc   0.58 (  0.58)	test_majacc   0.43 (  0.46)	Loss_d 0.650 (0.644)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.43 (  0.46)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.650 (0.644)	test_acc   0.48 (  0.48)	test_minacc   0.61 (  0.60)	test_majacc   0.45 (  0.46)	Loss_d 0.650 (0.644)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.61 (  0.60)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.33 (  0.30)
Test: [  26/  26]	Loss 0.643 (0.644)	test_acc   0.49 (  0.48)	test_minacc   0.53 (  0.60)	test_majacc   0.48 (  0.46)	Loss_d 0.643 (0.644)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.53 (  0.60)	test_majacc_d   0.48 (  0.46)	test_corr_d   0.23 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.23it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.931 (0.931)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.49 (  0.49)	Loss_d 0.931 (0.931)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 37/  1]	epoch_time 0.0385 (0.0399)	validation_time 0.0004 (0.0005)	train_time 0.0381 (0.0392)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.48250000888109207, 0.5110000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.92it/s] 23%|##3       | 6/26 [00:00<00:00, 25.72it/s] 38%|###8      | 10/26 [00:00<00:00, 29.84it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.10it/s] 69%|######9   | 18/26 [00:00<00:00, 30.44it/s] 85%|########4 | 22/26 [00:00<00:00, 31.63it/s]100%|##########| 26/26 [00:00<00:00, 30.76it/s]100%|##########| 26/26 [00:00<00:00, 27.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 367 tensor(-1.5474e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 403 tensor(-4.3317e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.66 ( 31.66)	train_acc   0.49 (  0.48)	train_minacc   0.53 (  0.61)	train_majacc   0.48 (  0.46)	train_corr   0.00 (  0.00)	l1 6.0311 (6.0307)	zero_count 0.0000 (9.8280)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.77it/s] 31%|###       | 8/26 [00:00<00:00, 33.01it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.01it/s] 50%|#####     | 13/26 [00:00<00:00, 39.20it/s] 69%|######9   | 18/26 [00:00<00:00, 40.61it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.61it/s] 92%|#########2| 24/26 [00:00<00:00, 46.40it/s]100%|##########| 26/26 [00:00<00:00, 37.74it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.49 (  0.49)	test_minacc   0.66 (  0.66)	test_majacc   0.46 (  0.46)	Loss_d 0.634 (0.634)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.650 (0.644)	test_acc   0.45 (  0.48)	test_minacc   0.58 (  0.59)	test_majacc   0.43 (  0.46)	Loss_d 0.650 (0.644)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.43 (  0.46)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.650 (0.644)	test_acc   0.48 (  0.48)	test_minacc   0.61 (  0.60)	test_majacc   0.45 (  0.46)	Loss_d 0.650 (0.644)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.61 (  0.60)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.32 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.49 (  0.48)	test_minacc   0.53 (  0.60)	test_majacc   0.48 (  0.46)	Loss_d 0.644 (0.645)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.53 (  0.60)	test_majacc_d   0.48 (  0.46)	test_corr_d   0.23 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.13it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.931 (0.931)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.931 (0.931)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 38/  1]	epoch_time 0.0403 (0.0399)	validation_time 0.0004 (0.0005)	train_time 0.0400 (0.0393)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4809000066518784, 0.51500004529953)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.05it/s] 15%|#5        | 4/26 [00:00<00:01, 17.96it/s] 31%|###       | 8/26 [00:00<00:00, 25.54it/s] 46%|####6     | 12/26 [00:00<00:00, 29.47it/s] 62%|######1   | 16/26 [00:00<00:00, 31.06it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.94it/s] 92%|#########2| 24/26 [00:00<00:00, 29.55it/s]100%|##########| 26/26 [00:00<00:00, 26.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 391 tensor(-1.1174e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 386 tensor(4.6636e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.66)	train_acc   0.49 (  0.48)	train_minacc   0.53 (  0.61)	train_majacc   0.48 (  0.46)	train_corr   0.00 (  0.00)	l1 6.0304 (6.0311)	zero_count 0.0000 (9.5550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.26it/s] 27%|##6       | 7/26 [00:00<00:00, 23.38it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.38it/s] 46%|####6     | 12/26 [00:00<00:00, 31.53it/s] 65%|######5   | 17/26 [00:00<00:00, 36.09it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.09it/s] 85%|########4 | 22/26 [00:00<00:00, 39.22it/s]100%|##########| 26/26 [00:00<00:00, 31.80it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.49 (  0.49)	test_minacc   0.67 (  0.67)	test_majacc   0.46 (  0.46)	Loss_d 0.634 (0.634)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.651 (0.644)	test_acc   0.45 (  0.48)	test_minacc   0.60 (  0.59)	test_majacc   0.43 (  0.46)	Loss_d 0.651 (0.644)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.60 (  0.59)	test_majacc_d   0.43 (  0.46)	test_corr_d   0.29 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.644)	test_acc   0.48 (  0.48)	test_minacc   0.61 (  0.61)	test_majacc   0.45 (  0.46)	Loss_d 0.650 (0.644)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.32 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.49 (  0.48)	test_minacc   0.56 (  0.61)	test_majacc   0.48 (  0.46)	Loss_d 0.644 (0.645)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.56 (  0.61)	test_majacc_d   0.48 (  0.46)	test_corr_d   0.23 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.85it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.931 (0.931)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.931 (0.931)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 39/  1]	epoch_time 0.0392 (0.0399)	validation_time 0.0003 (0.0005)	train_time 0.0388 (0.0392)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4798000085055828, 0.5180000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.58it/s] 23%|##3       | 6/26 [00:00<00:00, 29.15it/s] 38%|###8      | 10/26 [00:00<00:00, 31.71it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.59it/s] 69%|######9   | 18/26 [00:00<00:00, 28.08it/s] 81%|########  | 21/26 [00:00<00:00, 27.24it/s] 96%|#########6| 25/26 [00:00<00:00, 29.61it/s]100%|##########| 26/26 [00:00<00:00, 27.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 404 tensor(-1.6026e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 383 tensor(1.0489e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.67)	train_acc   0.49 (  0.48)	train_minacc   0.58 (  0.62)	train_majacc   0.47 (  0.45)	train_corr   0.00 (  0.00)	l1 6.0298 (6.0308)	zero_count 0.0000 (9.1650)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.26it/s] 23%|##3       | 6/26 [00:00<00:00, 31.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.99it/s] 42%|####2     | 11/26 [00:00<00:00, 39.00it/s] 65%|######5   | 17/26 [00:00<00:00, 42.48it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.48it/s] 88%|########8 | 23/26 [00:00<00:00, 47.50it/s]100%|##########| 26/26 [00:00<00:00, 39.60it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.45)	Loss_d 0.634 (0.634)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.45 (  0.48)	test_minacc   0.62 (  0.61)	test_majacc   0.42 (  0.45)	Loss_d 0.651 (0.645)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.42 (  0.45)	test_corr_d   0.29 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.644)	test_acc   0.48 (  0.48)	test_minacc   0.61 (  0.62)	test_majacc   0.45 (  0.45)	Loss_d 0.650 (0.644)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.61 (  0.62)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.32 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.49 (  0.48)	test_minacc   0.58 (  0.61)	test_majacc   0.47 (  0.45)	Loss_d 0.644 (0.645)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.58 (  0.61)	test_majacc_d   0.47 (  0.45)	test_corr_d   0.23 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.90it/s]
Test: [  0/  1]	Loss 0.930 (0.930)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.930 (0.930)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.930 (0.930)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.930 (0.930)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.14 (  0.14)
Overall Timing[ 40/  1]	epoch_time 0.0377 (0.0398)	validation_time 0.0004 (0.0005)	train_time 0.0373 (0.0392)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4784000097513199, 0.5250000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.70it/s] 19%|#9        | 5/26 [00:00<00:00, 22.77it/s] 35%|###4      | 9/26 [00:00<00:00, 26.63it/s] 50%|#####     | 13/26 [00:00<00:00, 30.10it/s] 65%|######5   | 17/26 [00:00<00:00, 32.32it/s] 81%|########  | 21/26 [00:00<00:00, 30.47it/s] 96%|#########6| 25/26 [00:00<00:00, 31.68it/s]100%|##########| 26/26 [00:00<00:00, 27.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 388 tensor(-4.7083e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.67)	train_acc   0.48 (  0.48)	train_minacc   0.58 (  0.62)	train_majacc   0.46 (  0.45)	train_corr   0.00 (  0.00)	l1 6.0303 (6.0298)	zero_count 0.0000 (4.7970)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.11it/s] 23%|##3       | 6/26 [00:00<00:00, 21.93it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.93it/s] 46%|####6     | 12/26 [00:00<00:00, 34.56it/s] 69%|######9   | 18/26 [00:00<00:00, 39.70it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.70it/s] 92%|#########2| 24/26 [00:00<00:00, 45.82it/s]100%|##########| 26/26 [00:00<00:00, 35.65it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.45)	Loss_d 0.634 (0.634)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.45 (  0.47)	test_minacc   0.62 (  0.61)	test_majacc   0.42 (  0.45)	Loss_d 0.651 (0.645)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.42 (  0.45)	test_corr_d   0.29 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.644)	test_acc   0.48 (  0.48)	test_minacc   0.61 (  0.62)	test_majacc   0.45 (  0.45)	Loss_d 0.650 (0.644)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.61 (  0.62)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.32 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.48 (  0.48)	test_minacc   0.58 (  0.62)	test_majacc   0.46 (  0.45)	Loss_d 0.644 (0.645)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.58 (  0.62)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.23 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.83it/s]
Test: [  0/  1]	Loss 0.930 (0.930)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.930 (0.930)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.930 (0.930)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.49 (  0.49)	Loss_d 0.930 (0.930)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.13 (  0.13)
Overall Timing[ 41/  1]	epoch_time 0.0376 (0.0398)	validation_time 0.0004 (0.0005)	train_time 0.0372 (0.0392)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4770000078380108, 0.5290000438690186)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 19%|#9        | 5/26 [00:00<00:00, 21.37it/s] 35%|###4      | 9/26 [00:00<00:00, 27.61it/s] 50%|#####     | 13/26 [00:00<00:00, 30.89it/s] 65%|######5   | 17/26 [00:00<00:00, 33.62it/s] 81%|########  | 21/26 [00:00<00:00, 33.08it/s] 96%|#########6| 25/26 [00:00<00:00, 35.12it/s]100%|##########| 26/26 [00:00<00:00, 29.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 391 tensor(-3.9996e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.67)	train_acc   0.48 (  0.48)	train_minacc   0.58 (  0.63)	train_majacc   0.46 (  0.45)	train_corr   0.00 (  0.00)	l1 6.0308 (6.0298)	zero_count 0.0000 (4.6800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.89it/s] 19%|#9        | 5/26 [00:00<00:00, 26.78it/s] 38%|###8      | 10/26 [00:00<00:00, 36.45it/s]                                                38%|###8      | 10/26 [00:00<00:00, 36.45it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.35it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.11it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.11it/s] 96%|#########6| 25/26 [00:00<00:00, 42.24it/s]100%|##########| 26/26 [00:00<00:00, 35.39it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.45)	Loss_d 0.634 (0.634)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.45 (  0.47)	test_minacc   0.62 (  0.62)	test_majacc   0.42 (  0.45)	Loss_d 0.651 (0.645)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.42 (  0.45)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.644)	test_acc   0.48 (  0.47)	test_minacc   0.61 (  0.62)	test_majacc   0.45 (  0.45)	Loss_d 0.650 (0.644)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.61 (  0.62)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.32 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.48 (  0.47)	test_minacc   0.58 (  0.62)	test_majacc   0.46 (  0.45)	Loss_d 0.644 (0.645)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.58 (  0.62)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.00it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 0.931 (0.931)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 0.931 (0.931)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.13 (  0.13)
Overall Timing[ 42/  1]	epoch_time 0.0382 (0.0398)	validation_time 0.0003 (0.0005)	train_time 0.0378 (0.0391)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.474700009137392, 0.5330000519752502)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 19%|#9        | 5/26 [00:00<00:00, 22.75it/s] 35%|###4      | 9/26 [00:00<00:00, 28.54it/s] 50%|#####     | 13/26 [00:00<00:00, 31.50it/s] 65%|######5   | 17/26 [00:00<00:00, 33.28it/s] 81%|########  | 21/26 [00:00<00:00, 31.74it/s] 96%|#########6| 25/26 [00:00<00:00, 30.59it/s]100%|##########| 26/26 [00:00<00:00, 27.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 390 tensor(-4.1879e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 397 tensor(3.0671e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.67)	train_acc   0.48 (  0.47)	train_minacc   0.58 (  0.63)	train_majacc   0.46 (  0.45)	train_corr   0.00 (  0.00)	l1 6.0314 (6.0302)	zero_count 0.0000 (9.1650)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.13it/s] 31%|###       | 8/26 [00:00<00:00, 33.25it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.25it/s] 50%|#####     | 13/26 [00:00<00:00, 38.53it/s] 69%|######9   | 18/26 [00:00<00:00, 42.07it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.07it/s] 88%|########8 | 23/26 [00:00<00:00, 43.86it/s]100%|##########| 26/26 [00:00<00:00, 36.44it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.45)	Loss_d 0.634 (0.634)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.45 (  0.47)	test_minacc   0.62 (  0.62)	test_majacc   0.42 (  0.45)	Loss_d 0.651 (0.645)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.42 (  0.45)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.645)	test_acc   0.47 (  0.47)	test_minacc   0.61 (  0.63)	test_majacc   0.45 (  0.45)	Loss_d 0.650 (0.645)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.61 (  0.63)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.32 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.48 (  0.47)	test_minacc   0.58 (  0.62)	test_majacc   0.46 (  0.45)	Loss_d 0.644 (0.645)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.58 (  0.62)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.28it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.931 (0.931)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.931 (0.931)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Overall Timing[ 43/  1]	epoch_time 0.0420 (0.0398)	validation_time 0.0004 (0.0005)	train_time 0.0416 (0.0392)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4738000078201294, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.15it/s] 19%|#9        | 5/26 [00:00<00:00, 24.43it/s] 35%|###4      | 9/26 [00:00<00:00, 29.61it/s] 50%|#####     | 13/26 [00:00<00:00, 32.26it/s] 65%|######5   | 17/26 [00:00<00:00, 29.95it/s] 81%|########  | 21/26 [00:00<00:00, 31.31it/s] 96%|#########6| 25/26 [00:00<00:00, 30.24it/s]100%|##########| 26/26 [00:00<00:00, 27.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 410 tensor(-5.9030e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 401 tensor(6.9734e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.67)	train_acc   0.48 (  0.47)	train_minacc   0.58 (  0.63)	train_majacc   0.46 (  0.45)	train_corr   0.00 (  0.00)	l1 6.0308 (6.0307)	zero_count 0.0000 (8.2290)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s]  8%|7         | 2/26 [00:00<00:03,  7.12it/s] 27%|##6       | 7/26 [00:00<00:00, 22.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.13it/s] 50%|#####     | 13/26 [00:00<00:00, 33.51it/s] 69%|######9   | 18/26 [00:00<00:00, 35.10it/s]                                                69%|######9   | 18/26 [00:00<00:00, 35.10it/s] 88%|########8 | 23/26 [00:00<00:00, 39.34it/s]100%|##########| 26/26 [00:00<00:00, 30.74it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.45)	Loss_d 0.635 (0.635)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.45 (  0.47)	test_minacc   0.64 (  0.62)	test_majacc   0.42 (  0.45)	Loss_d 0.651 (0.645)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.64 (  0.62)	test_majacc_d   0.42 (  0.45)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.645)	test_acc   0.47 (  0.47)	test_minacc   0.61 (  0.63)	test_majacc   0.44 (  0.44)	Loss_d 0.650 (0.645)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.61 (  0.63)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.32 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.48 (  0.47)	test_minacc   0.58 (  0.63)	test_majacc   0.46 (  0.45)	Loss_d 0.644 (0.645)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.58 (  0.63)	test_majacc_d   0.46 (  0.45)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.30it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.931 (0.931)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.931 (0.931)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Overall Timing[ 44/  1]	epoch_time 0.0423 (0.0399)	validation_time 0.0003 (0.0005)	train_time 0.0420 (0.0392)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4728000043928623, 0.5350000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.83it/s] 19%|#9        | 5/26 [00:00<00:00, 22.64it/s] 35%|###4      | 9/26 [00:00<00:00, 28.17it/s] 50%|#####     | 13/26 [00:00<00:00, 30.53it/s] 65%|######5   | 17/26 [00:00<00:00, 32.47it/s] 81%|########  | 21/26 [00:00<00:00, 30.98it/s] 96%|#########6| 25/26 [00:00<00:00, 32.01it/s]100%|##########| 26/26 [00:00<00:00, 28.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 397 tensor(-1.6534e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.67)	train_acc   0.48 (  0.47)	train_minacc   0.58 (  0.63)	train_majacc   0.46 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0311 (6.0302)	zero_count 0.0000 (4.4460)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.89it/s] 27%|##6       | 7/26 [00:00<00:00, 34.10it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.10it/s] 46%|####6     | 12/26 [00:00<00:00, 39.76it/s] 65%|######5   | 17/26 [00:00<00:00, 42.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.33it/s] 85%|########4 | 22/26 [00:00<00:00, 44.24it/s]100%|##########| 26/26 [00:00<00:00, 38.16it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.45)	Loss_d 0.635 (0.635)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.45 (  0.47)	test_minacc   0.64 (  0.63)	test_majacc   0.42 (  0.44)	Loss_d 0.651 (0.645)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.64 (  0.63)	test_majacc_d   0.42 (  0.44)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.645)	test_acc   0.47 (  0.47)	test_minacc   0.61 (  0.63)	test_majacc   0.44 (  0.44)	Loss_d 0.650 (0.645)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.61 (  0.63)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.32 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.48 (  0.47)	test_minacc   0.58 (  0.63)	test_majacc   0.46 (  0.44)	Loss_d 0.644 (0.645)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.58 (  0.63)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.32it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.931 (0.931)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.48 (  0.48)	Loss_d 0.931 (0.931)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Overall Timing[ 45/  1]	epoch_time 0.0389 (0.0398)	validation_time 0.0004 (0.0005)	train_time 0.0385 (0.0392)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4723000044226646, 0.5370000004768372)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.79it/s] 23%|##3       | 6/26 [00:00<00:00, 25.29it/s] 38%|###8      | 10/26 [00:00<00:00, 30.05it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.22it/s] 69%|######9   | 18/26 [00:00<00:00, 33.23it/s] 85%|########4 | 22/26 [00:00<00:00, 30.86it/s]100%|##########| 26/26 [00:00<00:00, 32.29it/s]100%|##########| 26/26 [00:00<00:00, 28.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 396 tensor(8.2636e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.67)	train_acc   0.48 (  0.47)	train_minacc   0.58 (  0.63)	train_majacc   0.46 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0313 (6.0303)	zero_count 0.0000 (4.4850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.86it/s] 23%|##3       | 6/26 [00:00<00:00, 32.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.95it/s] 42%|####2     | 11/26 [00:00<00:00, 38.99it/s] 62%|######1   | 16/26 [00:00<00:00, 42.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.93it/s] 81%|########  | 21/26 [00:00<00:00, 41.12it/s]100%|##########| 26/26 [00:00<00:00, 43.88it/s]100%|##########| 26/26 [00:00<00:00, 36.84it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.45)	Loss_d 0.635 (0.635)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.45 (  0.47)	test_minacc   0.64 (  0.63)	test_majacc   0.42 (  0.44)	Loss_d 0.651 (0.645)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.64 (  0.63)	test_majacc_d   0.42 (  0.44)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.645)	test_acc   0.47 (  0.47)	test_minacc   0.61 (  0.63)	test_majacc   0.44 (  0.44)	Loss_d 0.650 (0.645)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.61 (  0.63)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.31 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.48 (  0.47)	test_minacc   0.58 (  0.63)	test_majacc   0.46 (  0.44)	Loss_d 0.644 (0.645)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.58 (  0.63)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.04it/s]
Test: [  0/  1]	Loss 0.932 (0.932)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.932 (0.932)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.932 (0.932)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.932 (0.932)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Overall Timing[ 46/  1]	epoch_time 0.0392 (0.0398)	validation_time 0.0005 (0.0005)	train_time 0.0388 (0.0392)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4713000044822693, 0.5400000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 19%|#9        | 5/26 [00:00<00:00, 21.20it/s] 35%|###4      | 9/26 [00:00<00:00, 26.95it/s] 50%|#####     | 13/26 [00:00<00:00, 29.40it/s] 65%|######5   | 17/26 [00:00<00:00, 30.96it/s] 81%|########  | 21/26 [00:00<00:00, 30.03it/s] 96%|#########6| 25/26 [00:00<00:00, 32.14it/s]100%|##########| 26/26 [00:00<00:00, 27.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 394 tensor(4.8287e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.67)	train_acc   0.48 (  0.47)	train_minacc   0.58 (  0.64)	train_majacc   0.46 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0318 (6.0304)	zero_count 0.0000 (4.5630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.21it/s] 27%|##6       | 7/26 [00:00<00:00, 35.26it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.26it/s] 50%|#####     | 13/26 [00:00<00:00, 39.83it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.49it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.49it/s] 96%|#########6| 25/26 [00:00<00:00, 45.19it/s]100%|##########| 26/26 [00:00<00:00, 39.49it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.45)	Loss_d 0.635 (0.635)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.45 (  0.47)	test_minacc   0.64 (  0.63)	test_majacc   0.42 (  0.44)	Loss_d 0.651 (0.645)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.64 (  0.63)	test_majacc_d   0.42 (  0.44)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.645)	test_acc   0.47 (  0.47)	test_minacc   0.61 (  0.64)	test_majacc   0.44 (  0.44)	Loss_d 0.650 (0.645)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.61 (  0.64)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.31 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.48 (  0.47)	test_minacc   0.58 (  0.63)	test_majacc   0.46 (  0.44)	Loss_d 0.644 (0.645)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.58 (  0.63)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.61it/s]
Test: [  0/  1]	Loss 0.932 (0.932)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.932 (0.932)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.932 (0.932)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.932 (0.932)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.13 (  0.13)
Overall Timing[ 47/  1]	epoch_time 0.0374 (0.0398)	validation_time 0.0004 (0.0005)	train_time 0.0370 (0.0392)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.470500004529953, 0.5400000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.22it/s] 19%|#9        | 5/26 [00:00<00:01, 20.63it/s] 35%|###4      | 9/26 [00:00<00:00, 26.72it/s] 50%|#####     | 13/26 [00:00<00:00, 29.92it/s] 65%|######5   | 17/26 [00:00<00:00, 32.13it/s] 81%|########  | 21/26 [00:00<00:00, 30.74it/s] 96%|#########6| 25/26 [00:00<00:00, 30.29it/s]100%|##########| 26/26 [00:00<00:00, 26.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 400 tensor(-2.5804e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 403 tensor(1.9050e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.67)	train_acc   0.48 (  0.47)	train_minacc   0.58 (  0.64)	train_majacc   0.46 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0317 (6.0307)	zero_count 0.0000 (8.5410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.48it/s] 15%|#5        | 4/26 [00:00<00:01, 16.91it/s] 38%|###8      | 10/26 [00:00<00:00, 33.03it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.03it/s] 62%|######1   | 16/26 [00:00<00:00, 39.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.16it/s] 85%|########4 | 22/26 [00:00<00:00, 41.88it/s]100%|##########| 26/26 [00:00<00:00, 35.33it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.45)	Loss_d 0.635 (0.635)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.45 (  0.47)	test_minacc   0.66 (  0.64)	test_majacc   0.42 (  0.44)	Loss_d 0.651 (0.645)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.66 (  0.64)	test_majacc_d   0.42 (  0.44)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.645)	test_acc   0.46 (  0.47)	test_minacc   0.61 (  0.64)	test_majacc   0.44 (  0.44)	Loss_d 0.650 (0.645)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.61 (  0.64)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.31 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.48 (  0.47)	test_minacc   0.58 (  0.63)	test_majacc   0.46 (  0.44)	Loss_d 0.644 (0.645)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.58 (  0.63)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.88it/s]
Test: [  0/  1]	Loss 0.932 (0.932)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.932 (0.932)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.932 (0.932)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.932 (0.932)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Overall Timing[ 48/  1]	epoch_time 0.0378 (0.0397)	validation_time 0.0004 (0.0005)	train_time 0.0374 (0.0391)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.47060000452399253, 0.5410000085830688)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.53it/s] 15%|#5        | 4/26 [00:00<00:01, 18.76it/s] 27%|##6       | 7/26 [00:00<00:00, 23.06it/s] 42%|####2     | 11/26 [00:00<00:00, 27.79it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.57it/s] 85%|########4 | 22/26 [00:00<00:00, 28.90it/s]100%|##########| 26/26 [00:00<00:00, 30.80it/s]100%|##########| 26/26 [00:00<00:00, 26.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 416 tensor(-3.6363e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 405 tensor(7.3851e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  31.67 ( 31.67)	train_acc   0.48 (  0.47)	train_minacc   0.58 (  0.64)	train_majacc   0.46 (  0.44)	train_corr   0.00 (  0.00)	l1 6.0312 (6.0310)	zero_count 0.0000 (7.8390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.96it/s] 35%|###4      | 9/26 [00:00<00:00, 38.41it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.41it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.76it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.76it/s] 92%|#########2| 24/26 [00:00<00:00, 41.48it/s]100%|##########| 26/26 [00:00<00:00, 38.34it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.48 (  0.48)	test_minacc   0.67 (  0.67)	test_majacc   0.45 (  0.45)	Loss_d 0.635 (0.635)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.45 (  0.47)	test_minacc   0.66 (  0.63)	test_majacc   0.42 (  0.44)	Loss_d 0.651 (0.645)	test_acc_d   0.45 (  0.47)	test_minacc_d   0.66 (  0.63)	test_majacc_d   0.42 (  0.44)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.650 (0.645)	test_acc   0.46 (  0.47)	test_minacc   0.61 (  0.64)	test_majacc   0.44 (  0.44)	Loss_d 0.650 (0.645)	test_acc_d   0.46 (  0.47)	test_minacc_d   0.61 (  0.64)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.31 (  0.29)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.48 (  0.47)	test_minacc   0.58 (  0.63)	test_majacc   0.46 (  0.44)	Loss_d 0.644 (0.645)	test_acc_d   0.48 (  0.47)	test_minacc_d   0.58 (  0.63)	test_majacc_d   0.46 (  0.44)	test_corr_d   0.23 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.93it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.933 (0.933)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.933 (0.933)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.14 (  0.14)
Overall Timing[ 49/  1]	epoch_time 0.0392 (0.0397)	validation_time 0.0003 (0.0005)	train_time 0.0389 (0.0391)
record: (train_acc, test_acc) (0.6821000350117683, 0.6710000038146973)
last accs (train_acc, test_acc) (0.4703000022172928, 0.5440000295639038)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.093 MB of 0.093 MB uploadedwandb: \ 0.093 MB of 0.093 MB uploadedwandb: | 0.093 MB of 0.093 MB uploadedwandb: / 0.038 MB of 0.502 MB uploaded (0.003 MB deduped)wandb: - 0.502 MB of 0.502 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                           global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/diagnostics/epoch_time_val █▁▂▂▂▂▁▂▂▁▁▂▁▂▁▁▂▂▂▁▁▁▁▁▁▁▂▂▂▂▁▂▁▁▁▂▂▂▁▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/diagnostics/train_time_val █▁▂▂▂▂▂▃▂▁▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▂▂▂▂▂▂▂▁▁▂▂▂▂▁▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/Loss_avg ▆▆▅▅▆▆▆▇▅▆██▂▂▂▂▂▂▂▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/Loss_d_avg ▆▆▅▅▆▆▆▇▅▆██▂▂▂▂▂▂▂▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/Loss_d_val ▆▆▅▅▆▆▆▇▅▆██▂▂▂▂▂▂▂▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/Loss_val ▆▆▅▅▆▆▆▇▅▆██▂▂▂▂▂▂▂▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_acc_avg ▁▁▁▁▂▃▃▂▄▅▃▄█▇▇▇███▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_acc_d_avg ▁▁▁▁▂▃▃▂▄▅▃▄█▇▇▇███▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_acc_d_val ▁▁▁▁▂▃▃▂▄▅▃▄█▇▇▇███▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_acc_val ▁▁▁▁▂▃▃▂▄▅▃▄█▇▇▇███▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_corr_d_avg ████▇▇▇▇▆▅▆▆▁▂▃▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_corr_d_val ████▇▇▇▇▆▅▆▆▁▂▃▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_majacc_avg █████████▇▇█▆▆▆▆▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_majacc_d_avg █████████▇▇█▆▆▆▆▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_majacc_d_val █████████▇▇█▆▆▆▆▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_majacc_val █████████▇▇█▆▆▆▆▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_minacc_avg ▁▁▁▁▂▃▃▂▄▅▃▄▇▇▇▇███▆▆▆▆▆▆▆▆▆▆▆▆▆▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_minacc_d_avg ▁▁▁▁▂▃▃▂▄▅▃▄▇▇▇▇███▆▆▆▆▆▆▆▆▆▆▆▆▆▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_minacc_d_val ▁▁▁▁▂▃▃▂▄▅▃▄▇▇▇▇███▆▆▆▆▆▆▆▆▆▆▆▆▆▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_minacc_val ▁▁▁▁▂▃▃▂▄▅▃▄▇▇▇▇███▆▆▆▆▆▆▆▆▆▆▆▆▆▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/Loss_avg █▆▆▆▅▅▅▅▅▄▄▄▂▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/Loss_val ██▇▇▇▇▆▆▆▆▆▅▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/l1_avg ▅███▇▆▆▅▅▅▅▅▅▃▂▂▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/l1_val ▇██▇▆▆▅▅▄▅▅▅▄▂▂▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_acc_avg ▆▇▇▇▇▇▇██████▅▅▅▅▅▅▅▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_acc_val ▇▇▇▇▇▇▇▇████▆▄▆▅▅▅▅▅▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_majacc_avg ▇██████▇█▇▇█▇▅▅▄▄▄▄▄▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_majacc_val ████████████▅▄▅▄▄▄▄▆▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_minacc_avg ▂▁▁▂▃▃▄▄▄▅▅▆▇█▇████▆▅▅▅▅▅▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_minacc_val ▁▁▁▂▂▄▃▃▅▄▅▄█▆▇▇███▅▅▅▅▅▅▅▅▅▅▅▅▅▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_nll_avg ▇▄▄▃▂▂▂▂▂▁▁▁▁▄▅▅▅▅▅█████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_nll_val ▄▄▄▃▃▃▂▂▂▂▂▁▃▅▃▄▄▄▄█▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_penalty_avg █▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_penalty_val ██▅▄▅▄▃▄▃▃▂▂▁▁▁▁▁▁▁▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/weight_norm_avg ▁▃▃▃▃▃▃▃▃▄▄▄▄▄▄▄▄▄▄▅████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/weight_norm_val ▁▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃▃▃▆████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▆█▇▆▄▅▅▄▃▃▃▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                           global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/diagnostics/epoch_time_val 0.03923
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/diagnostics/train_time_val 0.03888
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/diagnostics/validation_time_val 0.00034
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/Loss_avg 0.93288
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/Loss_d_avg 0.93288
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/Loss_d_val 0.93288
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/Loss_val 0.93288
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_acc_avg 0.544
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_acc_d_avg 0.544
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_acc_d_val 0.544
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_acc_val 0.544
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_corr_d_avg 0.13591
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_corr_d_val 0.13591
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_majacc_avg 0.48
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_majacc_d_avg 0.48
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_majacc_d_val 0.48
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_majacc_val 0.48
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_minacc_avg 0.55111
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_minacc_d_avg 0.55111
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_minacc_d_val 0.55111
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/test/test_minacc_val 0.55111
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/Loss_avg 8e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/Loss_val 9e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/l1_avg 6.03095
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/l1_val 6.03117
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_acc_avg 0.4707
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_acc_val 0.48
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_majacc_avg 0.44081
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_majacc_val 0.45854
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_minacc_avg 0.63986
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_minacc_val 0.57778
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_nll_avg 0.6447
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_nll_val 0.6436
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_penalty_avg 1e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/train_penalty_val 3e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/weight_norm_avg 31.66538
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/weight_norm_val 31.66551
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/zero_count_avg 7.839
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/89/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/wtxg5x4x
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_152512-wtxg5x4x/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_152750-2rwbu5nm
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/2rwbu5nm
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1220
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5996, 3, 32, 32) (6004, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:40,  1.63s/it] 19%|#9        | 5/26 [00:01<00:05,  3.77it/s] 38%|###8      | 10/26 [00:01<00:01,  8.37it/s] 58%|#####7    | 15/26 [00:01<00:00, 13.17it/s] 73%|#######3  | 19/26 [00:02<00:00, 17.01it/s] 92%|#########2| 24/26 [00:02<00:00, 21.81it/s]100%|##########| 26/26 [00:02<00:00,  9.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.395 (0.521)	train_nll   0.40 (  0.52)	train_penalty   0.06 (  0.15)	weight_norm  20.95 ( 18.17)	train_acc   0.84 (  0.80)	train_minacc   0.00 (  0.09)	train_majacc   0.99 (  0.93)	train_corr   0.00 (  0.00)	l1 8.1913 (8.2423)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.55it/s] 23%|##3       | 6/26 [00:00<00:00, 28.19it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.19it/s] 42%|####2     | 11/26 [00:00<00:00, 33.72it/s] 62%|######1   | 16/26 [00:00<00:00, 38.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.76it/s] 81%|########  | 21/26 [00:00<00:00, 41.67it/s]100%|##########| 26/26 [00:00<00:00, 43.66it/s]100%|##########| 26/26 [00:00<00:00, 35.23it/s]
Test: [   0/  26]	Loss 0.424 (0.424)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.424 (0.424)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.360 (0.401)	test_acc   0.87 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.360 (0.401)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.361 (0.407)	test_acc   0.88 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.361 (0.407)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  26/  26]	Loss 0.395 (0.404)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.395 (0.404)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.51it/s]
Test: [  0/  1]	Loss 1.843 (1.843)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.843 (1.843)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.843 (1.843)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.843 (1.843)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/90/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0759 (0.0759)	validation_time 0.0067 (0.0067)	train_time 0.0676 (0.0676)
record: (train_acc, test_acc) (0.8465000225305557, 0.10600000619888306)
last accs (train_acc, test_acc) (0.8465000225305557, 0.10600000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 19%|#9        | 5/26 [00:00<00:01, 20.61it/s] 35%|###4      | 9/26 [00:00<00:00, 26.51it/s] 50%|#####     | 13/26 [00:00<00:00, 29.84it/s] 65%|######5   | 17/26 [00:00<00:00, 32.16it/s] 81%|########  | 21/26 [00:00<00:00, 34.26it/s] 96%|#########6| 25/26 [00:00<00:00, 35.48it/s]100%|##########| 26/26 [00:00<00:00, 28.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.375 (0.402)	train_nll   0.37 (  0.40)	train_penalty   0.06 (  0.05)	weight_norm  22.07 ( 21.73)	train_acc   0.85 (  0.85)	train_minacc   0.00 (  0.04)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 8.6180 (8.4242)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.96it/s] 23%|##3       | 6/26 [00:00<00:00, 24.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.77it/s] 42%|####2     | 11/26 [00:00<00:00, 33.35it/s] 62%|######1   | 16/26 [00:00<00:00, 38.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.52it/s] 81%|########  | 21/26 [00:00<00:00, 41.39it/s]100%|##########| 26/26 [00:00<00:00, 43.15it/s]100%|##########| 26/26 [00:00<00:00, 34.01it/s]
Test: [   0/  26]	Loss 0.402 (0.402)	test_acc   0.84 (  0.84)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.402 (0.402)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.350 (0.377)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   0.99 (  1.00)	Loss_d 0.350 (0.377)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.96 (  0.97)
Test: [  20/  26]	Loss 0.331 (0.380)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.331 (0.380)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.369 (0.376)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.369 (0.376)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.25it/s]
Test: [  0/  1]	Loss 1.862 (1.862)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.862 (1.862)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.862 (1.862)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.862 (1.862)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/90/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0396 (0.0577)	validation_time 0.0004 (0.0035)	train_time 0.0392 (0.0534)
record: (train_acc, test_acc) (0.8496000299453735, 0.1080000028014183)
last accs (train_acc, test_acc) (0.8496000299453735, 0.1080000028014183)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 19%|#9        | 5/26 [00:00<00:00, 23.69it/s] 35%|###4      | 9/26 [00:00<00:00, 29.83it/s] 50%|#####     | 13/26 [00:00<00:00, 32.42it/s] 65%|######5   | 17/26 [00:00<00:00, 33.84it/s] 81%|########  | 21/26 [00:00<00:00, 34.35it/s] 96%|#########6| 25/26 [00:00<00:00, 34.87it/s]100%|##########| 26/26 [00:00<00:00, 29.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.383 (0.378)	train_nll   0.38 (  0.38)	train_penalty   0.06 (  0.04)	weight_norm  22.20 ( 22.15)	train_acc   0.85 (  0.85)	train_minacc   0.11 (  0.09)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 8.6525 (8.4691)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.01it/s] 31%|###       | 8/26 [00:00<00:00, 34.36it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.36it/s] 50%|#####     | 13/26 [00:00<00:00, 39.77it/s] 69%|######9   | 18/26 [00:00<00:00, 42.76it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.76it/s] 88%|########8 | 23/26 [00:00<00:00, 44.02it/s]100%|##########| 26/26 [00:00<00:00, 35.91it/s]
Test: [   0/  26]	Loss 0.375 (0.375)	test_acc   0.85 (  0.85)	test_minacc   0.15 (  0.15)	test_majacc   0.98 (  0.98)	Loss_d 0.375 (0.375)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.350 (0.358)	test_acc   0.87 (  0.85)	test_minacc   0.08 (  0.09)	test_majacc   0.98 (  0.99)	Loss_d 0.350 (0.358)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.08 (  0.09)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.310 (0.358)	test_acc   0.88 (  0.85)	test_minacc   0.10 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.310 (0.358)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.10 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.349 (0.352)	test_acc   0.85 (  0.85)	test_minacc   0.08 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.349 (0.352)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.08 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.80it/s]
Test: [  0/  1]	Loss 1.901 (1.901)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 1.901 (1.901)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.85 (  0.85)
Test: [  1/  1]	Loss 1.901 (1.901)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 1.901 (1.901)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.85 (  0.85)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/90/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0389 (0.0515)	validation_time 0.0004 (0.0025)	train_time 0.0386 (0.0484)
record: (train_acc, test_acc) (0.851300026357174, 0.16900001466274261)
last accs (train_acc, test_acc) (0.851300026357174, 0.16900001466274261)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.80it/s] 19%|#9        | 5/26 [00:00<00:00, 24.26it/s] 35%|###4      | 9/26 [00:00<00:00, 29.88it/s] 50%|#####     | 13/26 [00:00<00:00, 32.67it/s] 65%|######5   | 17/26 [00:00<00:00, 33.68it/s] 81%|########  | 21/26 [00:00<00:00, 34.39it/s] 96%|#########6| 25/26 [00:00<00:00, 35.09it/s]100%|##########| 26/26 [00:00<00:00, 30.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.318 (0.360)	train_nll   0.32 (  0.36)	train_penalty   0.03 (  0.03)	weight_norm  22.25 ( 22.23)	train_acc   0.86 (  0.85)	train_minacc   0.22 (  0.15)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 8.4783 (8.3882)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 27%|##6       | 7/26 [00:00<00:00, 32.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.92it/s] 46%|####6     | 12/26 [00:00<00:00, 39.43it/s] 65%|######5   | 17/26 [00:00<00:00, 37.46it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.46it/s] 85%|########4 | 22/26 [00:00<00:00, 40.42it/s]100%|##########| 26/26 [00:00<00:00, 34.93it/s]
Test: [   0/  26]	Loss 0.361 (0.361)	test_acc   0.85 (  0.85)	test_minacc   0.39 (  0.39)	test_majacc   0.94 (  0.94)	Loss_d 0.361 (0.361)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.375 (0.359)	test_acc   0.83 (  0.84)	test_minacc   0.20 (  0.27)	test_majacc   0.92 (  0.94)	Loss_d 0.375 (0.359)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.20 (  0.27)	test_majacc_d   0.92 (  0.94)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.303 (0.356)	test_acc   0.88 (  0.84)	test_minacc   0.35 (  0.29)	test_majacc   0.96 (  0.94)	Loss_d 0.303 (0.356)	test_acc_d   0.88 (  0.84)	test_minacc_d   0.35 (  0.29)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.300 (0.351)	test_acc   0.86 (  0.85)	test_minacc   0.27 (  0.30)	test_majacc   0.96 (  0.95)	Loss_d 0.300 (0.351)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.27 (  0.30)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.90 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.78it/s]
Test: [  0/  1]	Loss 1.686 (1.686)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.98 (  0.98)	Loss_d 1.686 (1.686)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 1.686 (1.686)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.98 (  0.98)	Loss_d 1.686 (1.686)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.69 (  0.69)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/90/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0416 (0.0490)	validation_time 0.0003 (0.0019)	train_time 0.0413 (0.0466)
record: (train_acc, test_acc) (0.847500025510788, 0.3190000057220459)
last accs (train_acc, test_acc) (0.847500025510788, 0.3190000057220459)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.41it/s] 23%|##3       | 6/26 [00:00<00:00, 26.45it/s] 38%|###8      | 10/26 [00:00<00:00, 30.62it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.14it/s] 69%|######9   | 18/26 [00:00<00:00, 34.61it/s] 85%|########4 | 22/26 [00:00<00:00, 35.55it/s]100%|##########| 26/26 [00:00<00:00, 36.65it/s]100%|##########| 26/26 [00:00<00:00, 31.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.326 (0.353)	train_nll   0.33 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.31 ( 22.28)	train_acc   0.86 (  0.85)	train_minacc   0.38 (  0.23)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 8.1882 (8.1780)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.90it/s] 23%|##3       | 6/26 [00:00<00:00, 32.61it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.61it/s] 42%|####2     | 11/26 [00:00<00:00, 38.98it/s] 62%|######1   | 16/26 [00:00<00:00, 42.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.50it/s] 81%|########  | 21/26 [00:00<00:00, 40.04it/s]100%|##########| 26/26 [00:00<00:00, 42.58it/s]100%|##########| 26/26 [00:00<00:00, 36.14it/s]
Test: [   0/  26]	Loss 0.353 (0.353)	test_acc   0.85 (  0.85)	test_minacc   0.51 (  0.51)	test_majacc   0.91 (  0.91)	Loss_d 0.353 (0.353)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.380 (0.351)	test_acc   0.85 (  0.85)	test_minacc   0.35 (  0.41)	test_majacc   0.92 (  0.92)	Loss_d 0.380 (0.351)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.35 (  0.41)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.85 (  0.83)
Test: [  20/  26]	Loss 0.299 (0.347)	test_acc   0.89 (  0.85)	test_minacc   0.52 (  0.43)	test_majacc   0.94 (  0.92)	Loss_d 0.299 (0.347)	test_acc_d   0.89 (  0.85)	test_minacc_d   0.52 (  0.43)	test_majacc_d   0.94 (  0.92)	test_corr_d   0.86 (  0.83)
Test: [  26/  26]	Loss 0.296 (0.339)	test_acc   0.88 (  0.85)	test_minacc   0.54 (  0.46)	test_majacc   0.94 (  0.92)	Loss_d 0.296 (0.339)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.54 (  0.46)	test_majacc_d   0.94 (  0.92)	test_corr_d   0.84 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.02it/s]
Test: [  0/  1]	Loss 1.553 (1.553)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 1.553 (1.553)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.46 (  0.46)
Test: [  1/  1]	Loss 1.553 (1.553)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 1.553 (1.553)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.46 (  0.46)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/90/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0380 (0.0468)	validation_time 0.0006 (0.0017)	train_time 0.0373 (0.0448)
record: (train_acc, test_acc) (0.8538000238537788, 0.4400000274181366)
last accs (train_acc, test_acc) (0.8538000238537788, 0.4400000274181366)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.87it/s] 19%|#9        | 5/26 [00:00<00:01, 20.38it/s] 35%|###4      | 9/26 [00:00<00:00, 26.52it/s] 50%|#####     | 13/26 [00:00<00:00, 29.89it/s] 65%|######5   | 17/26 [00:00<00:00, 31.82it/s] 81%|########  | 21/26 [00:00<00:00, 33.37it/s] 96%|#########6| 25/26 [00:00<00:00, 34.12it/s]100%|##########| 26/26 [00:00<00:00, 27.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.310 (0.337)	train_nll   0.31 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.40 ( 22.35)	train_acc   0.87 (  0.86)	train_minacc   0.24 (  0.28)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.7492 (7.8116)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.83it/s] 27%|##6       | 7/26 [00:00<00:00, 34.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.20it/s] 46%|####6     | 12/26 [00:00<00:00, 40.14it/s] 65%|######5   | 17/26 [00:00<00:00, 41.23it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.23it/s] 85%|########4 | 22/26 [00:00<00:00, 43.84it/s]100%|##########| 26/26 [00:00<00:00, 38.36it/s]
Test: [   0/  26]	Loss 0.304 (0.304)	test_acc   0.87 (  0.87)	test_minacc   0.46 (  0.46)	test_majacc   0.94 (  0.94)	Loss_d 0.304 (0.304)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.310 (0.313)	test_acc   0.85 (  0.87)	test_minacc   0.24 (  0.33)	test_majacc   0.94 (  0.96)	Loss_d 0.310 (0.313)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.24 (  0.33)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.90 (  0.89)
Test: [  20/  26]	Loss 0.266 (0.307)	test_acc   0.88 (  0.87)	test_minacc   0.19 (  0.32)	test_majacc   0.98 (  0.96)	Loss_d 0.266 (0.307)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.19 (  0.32)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.92 (  0.89)
Test: [  26/  26]	Loss 0.268 (0.301)	test_acc   0.89 (  0.87)	test_minacc   0.38 (  0.33)	test_majacc   0.98 (  0.97)	Loss_d 0.268 (0.301)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.38 (  0.33)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.09it/s]
Test: [  0/  1]	Loss 1.651 (1.651)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.97 (  0.97)	Loss_d 1.651 (1.651)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 1.651 (1.651)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.97 (  0.97)	Loss_d 1.651 (1.651)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.65 (  0.65)
Overall Timing[  5/  1]	epoch_time 0.0397 (0.0456)	validation_time 0.0005 (0.0015)	train_time 0.0392 (0.0438)
record: (train_acc, test_acc) (0.8538000238537788, 0.4400000274181366)
last accs (train_acc, test_acc) (0.8710000184774399, 0.3240000009536743)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 19%|#9        | 5/26 [00:00<00:00, 23.95it/s] 35%|###4      | 9/26 [00:00<00:00, 30.16it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.09it/s] 92%|#########2| 24/26 [00:00<00:00, 38.43it/s]100%|##########| 26/26 [00:00<00:00, 32.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.276 (0.316)	train_nll   0.28 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.49 ( 22.45)	train_acc   0.86 (  0.86)	train_minacc   0.19 (  0.33)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.6656 (7.5860)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.89it/s] 27%|##6       | 7/26 [00:00<00:00, 32.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.68it/s] 50%|#####     | 13/26 [00:00<00:00, 39.19it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.75it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.75it/s] 92%|#########2| 24/26 [00:00<00:00, 44.03it/s]100%|##########| 26/26 [00:00<00:00, 36.93it/s]
Test: [   0/  26]	Loss 0.308 (0.308)	test_acc   0.86 (  0.86)	test_minacc   0.30 (  0.30)	test_majacc   0.97 (  0.97)	Loss_d 0.308 (0.308)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.303 (0.303)	test_acc   0.87 (  0.87)	test_minacc   0.16 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 0.303 (0.303)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.16 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  20/  26]	Loss 0.267 (0.302)	test_acc   0.89 (  0.87)	test_minacc   0.12 (  0.23)	test_majacc   0.99 (  0.98)	Loss_d 0.267 (0.302)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.12 (  0.23)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.92)
Test: [  26/  26]	Loss 0.256 (0.295)	test_acc   0.88 (  0.87)	test_minacc   0.27 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 0.256 (0.295)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.27 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.68it/s]
Test: [  0/  1]	Loss 1.838 (1.838)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 1.838 (1.838)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 1.838 (1.838)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 1.838 (1.838)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.72 (  0.72)
Overall Timing[  6/  1]	epoch_time 0.0399 (0.0448)	validation_time 0.0004 (0.0013)	train_time 0.0395 (0.0432)
record: (train_acc, test_acc) (0.8538000238537788, 0.4400000274181366)
last accs (train_acc, test_acc) (0.8702000261545181, 0.25699999928474426)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.94it/s] 19%|#9        | 5/26 [00:00<00:01, 18.46it/s] 35%|###4      | 9/26 [00:00<00:00, 24.72it/s] 50%|#####     | 13/26 [00:00<00:00, 28.36it/s] 65%|######5   | 17/26 [00:00<00:00, 30.53it/s] 81%|########  | 21/26 [00:00<00:00, 32.49it/s] 96%|#########6| 25/26 [00:00<00:00, 33.25it/s]100%|##########| 26/26 [00:00<00:00, 26.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.255 (0.296)	train_nll   0.25 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.61 ( 22.55)	train_acc   0.88 (  0.87)	train_minacc   0.46 (  0.37)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.8992 (7.6886)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.95it/s] 15%|#5        | 4/26 [00:00<00:01, 17.53it/s] 35%|###4      | 9/26 [00:00<00:00, 30.20it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.20it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.98it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.98it/s] 92%|#########2| 24/26 [00:00<00:00, 39.55it/s]100%|##########| 26/26 [00:00<00:00, 33.47it/s]
Test: [   0/  26]	Loss 0.268 (0.268)	test_acc   0.88 (  0.88)	test_minacc   0.43 (  0.43)	test_majacc   0.96 (  0.96)	Loss_d 0.268 (0.268)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.255 (0.259)	test_acc   0.88 (  0.89)	test_minacc   0.33 (  0.42)	test_majacc   0.96 (  0.97)	Loss_d 0.255 (0.259)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.33 (  0.42)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.90 (  0.88)
Test: [  20/  26]	Loss 0.202 (0.257)	test_acc   0.91 (  0.89)	test_minacc   0.38 (  0.44)	test_majacc   0.99 (  0.97)	Loss_d 0.202 (0.257)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.38 (  0.44)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.92 (  0.88)
Test: [  26/  26]	Loss 0.209 (0.251)	test_acc   0.92 (  0.89)	test_minacc   0.62 (  0.45)	test_majacc   0.98 (  0.97)	Loss_d 0.209 (0.251)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.62 (  0.45)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.85 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.58it/s]
Test: [  0/  1]	Loss 1.823 (1.823)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.95 (  0.95)	Loss_d 1.823 (1.823)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 1.823 (1.823)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.95 (  0.95)	Loss_d 1.823 (1.823)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.55 (  0.55)
Overall Timing[  7/  1]	epoch_time 0.0397 (0.0442)	validation_time 0.0003 (0.0012)	train_time 0.0394 (0.0427)
record: (train_acc, test_acc) (0.8538000238537788, 0.4400000274181366)
last accs (train_acc, test_acc) (0.8930000219941139, 0.38600000739097595)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.57it/s] 15%|#5        | 4/26 [00:00<00:01, 16.95it/s] 31%|###       | 8/26 [00:00<00:00, 25.09it/s] 46%|####6     | 12/26 [00:00<00:00, 29.95it/s] 62%|######1   | 16/26 [00:00<00:00, 33.23it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.47it/s] 92%|#########2| 24/26 [00:00<00:00, 33.74it/s]100%|##########| 26/26 [00:00<00:00, 27.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.245 (0.276)	train_nll   0.25 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.75 ( 22.67)	train_acc   0.89 (  0.88)	train_minacc   0.43 (  0.46)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.8781 (7.7796)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.11it/s]  8%|7         | 2/26 [00:00<00:03,  6.28it/s] 27%|##6       | 7/26 [00:00<00:00, 21.02it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.02it/s] 46%|####6     | 12/26 [00:00<00:00, 30.48it/s] 69%|######9   | 18/26 [00:00<00:00, 34.62it/s]                                                69%|######9   | 18/26 [00:00<00:00, 34.62it/s] 88%|########8 | 23/26 [00:00<00:00, 38.46it/s]100%|##########| 26/26 [00:00<00:00, 28.53it/s]
Test: [   0/  26]	Loss 0.254 (0.254)	test_acc   0.88 (  0.88)	test_minacc   0.52 (  0.52)	test_majacc   0.95 (  0.95)	Loss_d 0.254 (0.254)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.243 (0.257)	test_acc   0.88 (  0.89)	test_minacc   0.45 (  0.51)	test_majacc   0.94 (  0.95)	Loss_d 0.243 (0.257)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.45 (  0.51)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.87 (  0.85)
Test: [  20/  26]	Loss 0.196 (0.246)	test_acc   0.93 (  0.90)	test_minacc   0.56 (  0.54)	test_majacc   0.98 (  0.96)	Loss_d 0.196 (0.246)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.89 (  0.84)
Test: [  26/  26]	Loss 0.192 (0.239)	test_acc   0.93 (  0.90)	test_minacc   0.62 (  0.55)	test_majacc   0.98 (  0.96)	Loss_d 0.192 (0.239)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.82 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.49it/s]
Test: [  0/  1]	Loss 1.823 (1.823)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 1.823 (1.823)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 1.823 (1.823)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 1.823 (1.823)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.48 (  0.48)
Overall Timing[  8/  1]	epoch_time 0.0393 (0.0436)	validation_time 0.0004 (0.0011)	train_time 0.0388 (0.0423)
record: (train_acc, test_acc) (0.8538000238537788, 0.4400000274181366)
last accs (train_acc, test_acc) (0.8995000241398812, 0.4100000262260437)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.86it/s] 19%|#9        | 5/26 [00:00<00:01, 20.00it/s] 35%|###4      | 9/26 [00:00<00:00, 26.28it/s] 50%|#####     | 13/26 [00:00<00:00, 30.09it/s] 65%|######5   | 17/26 [00:00<00:00, 32.13it/s] 81%|########  | 21/26 [00:00<00:00, 33.66it/s] 96%|#########6| 25/26 [00:00<00:00, 34.25it/s]100%|##########| 26/26 [00:00<00:00, 27.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.204 (0.261)	train_nll   0.20 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  22.94 ( 22.84)	train_acc   0.92 (  0.89)	train_minacc   0.57 (  0.50)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.9634 (7.7928)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.56it/s] 23%|##3       | 6/26 [00:00<00:00, 25.05it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.05it/s] 42%|####2     | 11/26 [00:00<00:00, 31.06it/s] 65%|######5   | 17/26 [00:00<00:00, 37.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.41it/s] 85%|########4 | 22/26 [00:00<00:00, 41.14it/s]100%|##########| 26/26 [00:00<00:00, 32.89it/s]
Test: [   0/  26]	Loss 0.303 (0.303)	test_acc   0.88 (  0.88)	test_minacc   0.64 (  0.64)	test_majacc   0.92 (  0.92)	Loss_d 0.303 (0.303)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.239 (0.260)	test_acc   0.89 (  0.89)	test_minacc   0.57 (  0.59)	test_majacc   0.94 (  0.94)	Loss_d 0.239 (0.260)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.80)
Test: [  20/  26]	Loss 0.164 (0.240)	test_acc   0.94 (  0.90)	test_minacc   0.69 (  0.63)	test_majacc   0.97 (  0.94)	Loss_d 0.164 (0.240)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.69 (  0.63)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.84 (  0.79)
Test: [  26/  26]	Loss 0.150 (0.232)	test_acc   0.97 (  0.90)	test_minacc   0.86 (  0.65)	test_majacc   0.99 (  0.95)	Loss_d 0.150 (0.232)	test_acc_d   0.97 (  0.90)	test_minacc_d   0.86 (  0.65)	test_majacc_d   0.99 (  0.95)	test_corr_d   0.77 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.80it/s]
Test: [  0/  1]	Loss 1.712 (1.712)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.92 (  0.92)	Loss_d 1.712 (1.712)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.712 (1.712)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.92 (  0.92)	Loss_d 1.712 (1.712)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.33 (  0.33)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/90/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0406 (0.0433)	validation_time 0.0004 (0.0010)	train_time 0.0403 (0.0421)
record: (train_acc, test_acc) (0.9020000211000443, 0.47700002789497375)
last accs (train_acc, test_acc) (0.9020000211000443, 0.47700002789497375)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.97it/s] 23%|##3       | 6/26 [00:00<00:00, 26.91it/s] 38%|###8      | 10/26 [00:00<00:00, 32.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.14it/s] 69%|######9   | 18/26 [00:00<00:00, 35.97it/s] 85%|########4 | 22/26 [00:00<00:00, 36.07it/s]100%|##########| 26/26 [00:00<00:00, 36.13it/s]100%|##########| 26/26 [00:00<00:00, 31.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.185 (0.254)	train_nll   0.19 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.17 ( 23.06)	train_acc   0.92 (  0.89)	train_minacc   0.62 (  0.52)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.9810 (7.9042)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.61it/s] 31%|###       | 8/26 [00:00<00:00, 39.25it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.25it/s] 50%|#####     | 13/26 [00:00<00:00, 40.13it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.30it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.30it/s] 96%|#########6| 25/26 [00:00<00:00, 47.17it/s]100%|##########| 26/26 [00:00<00:00, 40.58it/s]
Test: [   0/  26]	Loss 0.239 (0.239)	test_acc   0.91 (  0.91)	test_minacc   0.57 (  0.57)	test_majacc   0.97 (  0.97)	Loss_d 0.239 (0.239)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.238 (0.234)	test_acc   0.89 (  0.90)	test_minacc   0.39 (  0.56)	test_majacc   0.96 (  0.96)	Loss_d 0.238 (0.234)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.39 (  0.56)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.83)
Test: [  20/  26]	Loss 0.162 (0.221)	test_acc   0.93 (  0.91)	test_minacc   0.54 (  0.59)	test_majacc   0.99 (  0.97)	Loss_d 0.162 (0.221)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.54 (  0.59)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.89 (  0.83)
Test: [  26/  26]	Loss 0.151 (0.213)	test_acc   0.94 (  0.91)	test_minacc   0.78 (  0.61)	test_majacc   0.97 (  0.97)	Loss_d 0.151 (0.213)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.78 (  0.61)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.80 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.50it/s]
Test: [  0/  1]	Loss 2.005 (2.005)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.98 (  0.98)	Loss_d 2.005 (2.005)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 2.005 (2.005)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.98 (  0.98)	Loss_d 2.005 (2.005)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.45 (  0.45)
Overall Timing[ 10/  1]	epoch_time 0.0400 (0.0430)	validation_time 0.0004 (0.0010)	train_time 0.0395 (0.0419)
record: (train_acc, test_acc) (0.9020000211000443, 0.47700002789497375)
last accs (train_acc, test_acc) (0.9146000215411186, 0.4360000193119049)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.88it/s] 19%|#9        | 5/26 [00:00<00:00, 21.71it/s] 35%|###4      | 9/26 [00:00<00:00, 28.05it/s] 50%|#####     | 13/26 [00:00<00:00, 31.05it/s] 65%|######5   | 17/26 [00:00<00:00, 33.12it/s] 85%|########4 | 22/26 [00:00<00:00, 35.94it/s]100%|##########| 26/26 [00:00<00:00, 29.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.162 (0.253)	train_nll   0.16 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.45 ( 23.30)	train_acc   0.94 (  0.90)	train_minacc   0.76 (  0.54)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.9338 (7.8502)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.46it/s] 27%|##6       | 7/26 [00:00<00:00, 35.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.92it/s] 46%|####6     | 12/26 [00:00<00:00, 35.83it/s] 65%|######5   | 17/26 [00:00<00:00, 40.32it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.32it/s] 85%|########4 | 22/26 [00:00<00:00, 42.15it/s]100%|##########| 26/26 [00:00<00:00, 36.42it/s]
Test: [   0/  26]	Loss 0.239 (0.239)	test_acc   0.89 (  0.89)	test_minacc   0.51 (  0.51)	test_majacc   0.96 (  0.96)	Loss_d 0.239 (0.239)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.227 (0.220)	test_acc   0.91 (  0.91)	test_minacc   0.49 (  0.56)	test_majacc   0.96 (  0.97)	Loss_d 0.227 (0.220)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.49 (  0.56)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.86 (  0.84)
Test: [  20/  26]	Loss 0.150 (0.211)	test_acc   0.93 (  0.91)	test_minacc   0.54 (  0.58)	test_majacc   0.99 (  0.97)	Loss_d 0.150 (0.211)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.54 (  0.58)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.89 (  0.83)
Test: [  26/  26]	Loss 0.134 (0.205)	test_acc   0.97 (  0.91)	test_minacc   0.86 (  0.60)	test_majacc   0.99 (  0.97)	Loss_d 0.134 (0.205)	test_acc_d   0.97 (  0.91)	test_minacc_d   0.86 (  0.60)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.80 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.34it/s]
Test: [  0/  1]	Loss 2.053 (2.053)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 2.053 (2.053)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 2.053 (2.053)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 2.053 (2.053)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.51 (  0.51)
Overall Timing[ 11/  1]	epoch_time 0.0381 (0.0426)	validation_time 0.0005 (0.0009)	train_time 0.0376 (0.0415)
record: (train_acc, test_acc) (0.9020000211000443, 0.47700002789497375)
last accs (train_acc, test_acc) (0.9146000226736068, 0.3920000195503235)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s] 19%|#9        | 5/26 [00:00<00:01, 18.52it/s] 35%|###4      | 9/26 [00:00<00:00, 24.39it/s] 50%|#####     | 13/26 [00:00<00:00, 27.89it/s] 65%|######5   | 17/26 [00:00<00:00, 29.78it/s] 81%|########  | 21/26 [00:00<00:00, 31.40it/s] 96%|#########6| 25/26 [00:00<00:00, 33.48it/s]100%|##########| 26/26 [00:00<00:00, 26.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.200 (0.229)	train_nll   0.20 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.76 ( 23.60)	train_acc   0.93 (  0.91)	train_minacc   0.70 (  0.58)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.6533 (8.1132)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 23%|##3       | 6/26 [00:00<00:00, 24.98it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.98it/s] 42%|####2     | 11/26 [00:00<00:00, 33.29it/s] 62%|######1   | 16/26 [00:00<00:00, 38.73it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.73it/s] 81%|########  | 21/26 [00:00<00:00, 37.76it/s]100%|##########| 26/26 [00:00<00:00, 33.24it/s]
Test: [   0/  26]	Loss 0.212 (0.212)	test_acc   0.92 (  0.92)	test_minacc   0.70 (  0.70)	test_majacc   0.96 (  0.96)	Loss_d 0.212 (0.212)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.221 (0.224)	test_acc   0.91 (  0.91)	test_minacc   0.63 (  0.62)	test_majacc   0.95 (  0.96)	Loss_d 0.221 (0.224)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.63 (  0.62)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.84 (  0.82)
Test: [  20/  26]	Loss 0.178 (0.213)	test_acc   0.94 (  0.92)	test_minacc   0.62 (  0.63)	test_majacc   0.98 (  0.97)	Loss_d 0.178 (0.213)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.62 (  0.63)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.86 (  0.82)
Test: [  26/  26]	Loss 0.169 (0.208)	test_acc   0.93 (  0.92)	test_minacc   0.73 (  0.63)	test_majacc   0.97 (  0.97)	Loss_d 0.169 (0.208)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.73 (  0.63)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.11it/s]
Test: [  0/  1]	Loss 1.711 (1.711)	test_acc   0.46 (  0.46)	test_minacc   0.40 (  0.40)	test_majacc   0.96 (  0.96)	Loss_d 1.711 (1.711)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 1.711 (1.711)	test_acc   0.46 (  0.46)	test_minacc   0.40 (  0.40)	test_majacc   0.96 (  0.96)	Loss_d 1.711 (1.711)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.38 (  0.38)
Overall Timing[ 12/  1]	epoch_time 0.0430 (0.0426)	validation_time 0.0003 (0.0009)	train_time 0.0426 (0.0416)
record: (train_acc, test_acc) (0.9020000211000443, 0.47700002789497375)
last accs (train_acc, test_acc) (0.9180000209212303, 0.4580000340938568)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.52it/s] 15%|#5        | 4/26 [00:00<00:01, 19.89it/s] 31%|###       | 8/26 [00:00<00:00, 27.03it/s] 46%|####6     | 12/26 [00:00<00:00, 30.70it/s] 62%|######1   | 16/26 [00:00<00:00, 32.43it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.36it/s] 92%|#########2| 24/26 [00:00<00:00, 34.24it/s]100%|##########| 26/26 [00:00<00:00, 29.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.155 (0.209)	train_nll   0.15 (  0.21)	train_penalty   0.00 (  0.01)	weight_norm  24.06 ( 23.91)	train_acc   0.94 (  0.91)	train_minacc   0.76 (  0.66)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0085 (8.2772)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 23%|##3       | 6/26 [00:00<00:00, 30.64it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.64it/s] 42%|####2     | 11/26 [00:00<00:00, 37.31it/s] 62%|######1   | 16/26 [00:00<00:00, 41.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.95it/s] 81%|########  | 21/26 [00:00<00:00, 41.83it/s]100%|##########| 26/26 [00:00<00:00, 36.91it/s]
Test: [   0/  26]	Loss 0.217 (0.217)	test_acc   0.90 (  0.90)	test_minacc   0.56 (  0.56)	test_majacc   0.97 (  0.97)	Loss_d 0.217 (0.217)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.189 (0.198)	test_acc   0.92 (  0.92)	test_minacc   0.59 (  0.62)	test_majacc   0.97 (  0.97)	Loss_d 0.189 (0.198)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.59 (  0.62)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.83)
Test: [  20/  26]	Loss 0.133 (0.184)	test_acc   0.94 (  0.93)	test_minacc   0.58 (  0.64)	test_majacc   0.99 (  0.98)	Loss_d 0.133 (0.184)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.58 (  0.64)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.88 (  0.83)
Test: [  26/  26]	Loss 0.125 (0.178)	test_acc   0.96 (  0.93)	test_minacc   0.81 (  0.66)	test_majacc   0.99 (  0.98)	Loss_d 0.125 (0.178)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.81 (  0.66)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.80 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.42it/s]
Test: [  0/  1]	Loss 2.045 (2.045)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.94 (  0.94)	Loss_d 2.045 (2.045)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 2.045 (2.045)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.94 (  0.94)	Loss_d 2.045 (2.045)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.43 (  0.43)
Overall Timing[ 13/  1]	epoch_time 0.0390 (0.0424)	validation_time 0.0004 (0.0009)	train_time 0.0385 (0.0414)
record: (train_acc, test_acc) (0.9020000211000443, 0.47700002789497375)
last accs (train_acc, test_acc) (0.9297000215649605, 0.4300000071525574)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 19%|#9        | 5/26 [00:00<00:01, 20.15it/s] 35%|###4      | 9/26 [00:00<00:00, 26.75it/s] 50%|#####     | 13/26 [00:00<00:00, 30.30it/s] 65%|######5   | 17/26 [00:00<00:00, 32.28it/s] 81%|########  | 21/26 [00:00<00:00, 33.48it/s] 96%|#########6| 25/26 [00:00<00:00, 33.94it/s]100%|##########| 26/26 [00:00<00:00, 27.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.170 (0.175)	train_nll   0.17 (  0.18)	train_penalty   0.00 (  0.01)	weight_norm  24.43 ( 24.23)	train_acc   0.92 (  0.93)	train_minacc   0.62 (  0.71)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 8.6856 (8.9880)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.37it/s] 23%|##3       | 6/26 [00:00<00:00, 30.44it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.44it/s] 42%|####2     | 11/26 [00:00<00:00, 36.97it/s] 62%|######1   | 16/26 [00:00<00:00, 41.17it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.17it/s] 81%|########  | 21/26 [00:00<00:00, 39.82it/s]100%|##########| 26/26 [00:00<00:00, 42.69it/s]100%|##########| 26/26 [00:00<00:00, 35.12it/s]
Test: [   0/  26]	Loss 0.253 (0.253)	test_acc   0.90 (  0.90)	test_minacc   0.69 (  0.69)	test_majacc   0.94 (  0.94)	Loss_d 0.253 (0.253)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.230 (0.233)	test_acc   0.91 (  0.90)	test_minacc   0.67 (  0.67)	test_majacc   0.94 (  0.94)	Loss_d 0.230 (0.233)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.77)
Test: [  20/  26]	Loss 0.160 (0.215)	test_acc   0.93 (  0.91)	test_minacc   0.69 (  0.69)	test_majacc   0.97 (  0.95)	Loss_d 0.160 (0.215)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.84 (  0.77)
Test: [  26/  26]	Loss 0.137 (0.207)	test_acc   0.94 (  0.92)	test_minacc   0.78 (  0.71)	test_majacc   0.96 (  0.95)	Loss_d 0.137 (0.207)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.78 (  0.71)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.76 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.82it/s]
Test: [  0/  1]	Loss 2.274 (2.274)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.89 (  0.89)	Loss_d 2.274 (2.274)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 2.274 (2.274)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.89 (  0.89)	Loss_d 2.274 (2.274)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.35 (  0.35)
Overall Timing[ 14/  1]	epoch_time 0.0400 (0.0422)	validation_time 0.0003 (0.0008)	train_time 0.0397 (0.0413)
record: (train_acc, test_acc) (0.9020000211000443, 0.47700002789497375)
last accs (train_acc, test_acc) (0.9150000178217887, 0.445000022649765)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.67it/s] 15%|#5        | 4/26 [00:00<00:01, 16.51it/s] 31%|###       | 8/26 [00:00<00:00, 24.65it/s] 42%|####2     | 11/26 [00:00<00:00, 26.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.71it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.63it/s] 88%|########8 | 23/26 [00:00<00:00, 32.83it/s]100%|##########| 26/26 [00:00<00:00, 26.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.006 (0.084)	train_nll   0.19 (  0.24)	train_penalty   0.01 (  0.00)	weight_norm  24.79 ( 24.65)	train_acc   0.92 (  0.90)	train_minacc   0.92 (  0.72)	train_majacc   0.92 (  0.94)	train_corr   0.00 (  0.00)	l1 7.3537 (7.7800)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.02it/s] 35%|###4      | 9/26 [00:00<00:00, 40.22it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.22it/s] 58%|#####7    | 15/26 [00:00<00:00, 44.57it/s] 77%|#######6  | 20/26 [00:00<00:00, 45.47it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 45.47it/s] 96%|#########6| 25/26 [00:00<00:00, 45.64it/s]100%|##########| 26/26 [00:00<00:00, 39.67it/s]
Test: [   0/  26]	Loss 0.266 (0.266)	test_acc   0.91 (  0.91)	test_minacc   0.77 (  0.77)	test_majacc   0.93 (  0.93)	Loss_d 0.266 (0.266)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.293 (0.233)	test_acc   0.87 (  0.91)	test_minacc   0.71 (  0.82)	test_majacc   0.89 (  0.92)	Loss_d 0.293 (0.233)	test_acc_d   0.87 (  0.91)	test_minacc_d   0.71 (  0.82)	test_majacc_d   0.89 (  0.92)	test_corr_d   0.69 (  0.67)
Test: [  20/  26]	Loss 0.231 (0.231)	test_acc   0.91 (  0.91)	test_minacc   0.79 (  0.83)	test_majacc   0.92 (  0.92)	Loss_d 0.231 (0.231)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.79 (  0.83)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.72 (  0.67)
Test: [  26/  26]	Loss 0.199 (0.237)	test_acc   0.92 (  0.90)	test_minacc   0.92 (  0.83)	test_majacc   0.92 (  0.92)	Loss_d 0.199 (0.237)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.92 (  0.83)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.63 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.46it/s]
Test: [  0/  1]	Loss 1.323 (1.323)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.90 (  0.90)	Loss_d 1.323 (1.323)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 1.323 (1.323)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.90 (  0.90)	Loss_d 1.323 (1.323)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.01 (  0.01)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/90/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0382 (0.0420)	validation_time 0.0004 (0.0008)	train_time 0.0378 (0.0410)
record: (train_acc, test_acc) (0.9047000212073326, 0.5840000510215759)
last accs (train_acc, test_acc) (0.9047000212073326, 0.5840000510215759)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.12it/s] 19%|#9        | 5/26 [00:00<00:01, 19.94it/s] 35%|###4      | 9/26 [00:00<00:00, 26.48it/s] 50%|#####     | 13/26 [00:00<00:00, 29.96it/s] 65%|######5   | 17/26 [00:00<00:00, 32.63it/s] 81%|########  | 21/26 [00:00<00:00, 34.21it/s] 96%|#########6| 25/26 [00:00<00:00, 34.76it/s]100%|##########| 26/26 [00:00<00:00, 28.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.001)	train_nll   0.28 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm  24.84 ( 24.83)	train_acc   0.88 (  0.88)	train_minacc   0.84 (  0.82)	train_majacc   0.89 (  0.89)	train_corr   0.00 (  0.00)	l1 6.9601 (7.1300)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.07it/s] 27%|##6       | 7/26 [00:00<00:00, 35.64it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.64it/s] 46%|####6     | 12/26 [00:00<00:00, 40.54it/s] 65%|######5   | 17/26 [00:00<00:00, 42.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.94it/s] 85%|########4 | 22/26 [00:00<00:00, 40.98it/s]100%|##########| 26/26 [00:00<00:00, 37.86it/s]
Test: [   0/  26]	Loss 0.289 (0.289)	test_acc   0.88 (  0.88)	test_minacc   0.77 (  0.77)	test_majacc   0.90 (  0.90)	Loss_d 0.289 (0.289)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.252 (0.263)	test_acc   0.89 (  0.88)	test_minacc   0.76 (  0.79)	test_majacc   0.91 (  0.90)	Loss_d 0.252 (0.263)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.91 (  0.90)	test_corr_d   0.72 (  0.67)
Test: [  20/  26]	Loss 0.250 (0.265)	test_acc   0.89 (  0.88)	test_minacc   0.75 (  0.79)	test_majacc   0.91 (  0.90)	Loss_d 0.250 (0.265)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.75 (  0.79)	test_majacc_d   0.91 (  0.90)	test_corr_d   0.71 (  0.66)
Test: [  26/  26]	Loss 0.275 (0.268)	test_acc   0.88 (  0.88)	test_minacc   0.84 (  0.79)	test_majacc   0.89 (  0.90)	Loss_d 0.275 (0.268)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.84 (  0.79)	test_majacc_d   0.89 (  0.90)	test_corr_d   0.60 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.04it/s]
Test: [  0/  1]	Loss 1.275 (1.275)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.90 (  0.90)	Loss_d 1.275 (1.275)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 1.275 (1.275)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.90 (  0.90)	Loss_d 1.275 (1.275)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.00 (  0.00)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/90/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0371 (0.0417)	validation_time 0.0004 (0.0008)	train_time 0.0367 (0.0408)
record: (train_acc, test_acc) (0.8803000280857086, 0.6010000109672546)
last accs (train_acc, test_acc) (0.8803000280857086, 0.6010000109672546)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.81it/s] 23%|##3       | 6/26 [00:00<00:00, 27.99it/s] 42%|####2     | 11/26 [00:00<00:00, 34.52it/s] 62%|######1   | 16/26 [00:00<00:00, 36.52it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.58it/s] 92%|#########2| 24/26 [00:00<00:00, 36.70it/s]100%|##########| 26/26 [00:00<00:00, 32.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.001)	train_nll   0.27 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm  24.85 ( 24.85)	train_acc   0.88 (  0.88)	train_minacc   0.86 (  0.80)	train_majacc   0.88 (  0.89)	train_corr   0.00 (  0.00)	l1 6.9679 (6.9529)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.64it/s] 23%|##3       | 6/26 [00:00<00:00, 31.44it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.44it/s] 42%|####2     | 11/26 [00:00<00:00, 37.31it/s] 62%|######1   | 16/26 [00:00<00:00, 40.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.53it/s] 81%|########  | 21/26 [00:00<00:00, 39.06it/s]100%|##########| 26/26 [00:00<00:00, 42.10it/s]100%|##########| 26/26 [00:00<00:00, 34.97it/s]
Test: [   0/  26]	Loss 0.286 (0.286)	test_acc   0.89 (  0.89)	test_minacc   0.74 (  0.74)	test_majacc   0.92 (  0.92)	Loss_d 0.286 (0.286)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.237 (0.258)	test_acc   0.90 (  0.88)	test_minacc   0.86 (  0.82)	test_majacc   0.91 (  0.89)	Loss_d 0.237 (0.258)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.86 (  0.82)	test_majacc_d   0.91 (  0.89)	test_corr_d   0.70 (  0.65)
Test: [  20/  26]	Loss 0.274 (0.252)	test_acc   0.87 (  0.89)	test_minacc   0.75 (  0.83)	test_majacc   0.89 (  0.90)	Loss_d 0.274 (0.252)	test_acc_d   0.87 (  0.89)	test_minacc_d   0.75 (  0.83)	test_majacc_d   0.89 (  0.90)	test_corr_d   0.68 (  0.65)
Test: [  26/  26]	Loss 0.272 (0.256)	test_acc   0.88 (  0.88)	test_minacc   0.86 (  0.82)	test_majacc   0.88 (  0.89)	Loss_d 0.272 (0.256)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.86 (  0.82)	test_majacc_d   0.88 (  0.89)	test_corr_d   0.59 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.17it/s]
Test: [  0/  1]	Loss 1.251 (1.251)	test_acc   0.63 (  0.63)	test_minacc   0.60 (  0.60)	test_majacc   0.91 (  0.91)	Loss_d 1.251 (1.251)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.91 (  0.91)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 1.251 (1.251)	test_acc   0.63 (  0.63)	test_minacc   0.60 (  0.60)	test_majacc   0.91 (  0.91)	Loss_d 1.251 (1.251)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.91 (  0.91)	test_corr_d  -0.04 ( -0.04)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/90/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0379 (0.0415)	validation_time 0.0004 (0.0008)	train_time 0.0374 (0.0406)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.13it/s] 19%|#9        | 5/26 [00:00<00:00, 23.45it/s] 35%|###4      | 9/26 [00:00<00:00, 28.73it/s] 50%|#####     | 13/26 [00:00<00:00, 31.32it/s] 65%|######5   | 17/26 [00:00<00:00, 33.17it/s] 81%|########  | 21/26 [00:00<00:00, 33.85it/s] 96%|#########6| 25/26 [00:00<00:00, 34.23it/s]100%|##########| 26/26 [00:00<00:00, 29.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.002 (0.001)	train_nll   0.24 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm  24.86 ( 24.85)	train_acc   0.90 (  0.88)	train_minacc   0.86 (  0.83)	train_majacc   0.91 (  0.89)	train_corr   0.00 (  0.00)	l1 6.8519 (7.1145)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.29it/s] 27%|##6       | 7/26 [00:00<00:00, 34.49it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.49it/s] 46%|####6     | 12/26 [00:00<00:00, 39.65it/s] 65%|######5   | 17/26 [00:00<00:00, 39.04it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.04it/s] 85%|########4 | 22/26 [00:00<00:00, 41.40it/s]100%|##########| 26/26 [00:00<00:00, 36.21it/s]
Test: [   0/  26]	Loss 0.259 (0.259)	test_acc   0.90 (  0.90)	test_minacc   0.72 (  0.72)	test_majacc   0.93 (  0.93)	Loss_d 0.259 (0.259)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.221 (0.222)	test_acc   0.89 (  0.90)	test_minacc   0.76 (  0.79)	test_majacc   0.91 (  0.92)	Loss_d 0.221 (0.222)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.76 (  0.79)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.76 (  0.71)
Test: [  20/  26]	Loss 0.229 (0.218)	test_acc   0.88 (  0.91)	test_minacc   0.73 (  0.81)	test_majacc   0.90 (  0.93)	Loss_d 0.229 (0.218)	test_acc_d   0.88 (  0.91)	test_minacc_d   0.73 (  0.81)	test_majacc_d   0.90 (  0.93)	test_corr_d   0.75 (  0.71)
Test: [  26/  26]	Loss 0.240 (0.223)	test_acc   0.90 (  0.91)	test_minacc   0.86 (  0.81)	test_majacc   0.91 (  0.92)	Loss_d 0.240 (0.223)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.86 (  0.81)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.66 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.11it/s]
Test: [  0/  1]	Loss 1.361 (1.361)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.92 (  0.92)	Loss_d 1.361 (1.361)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.361 (1.361)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.92 (  0.92)	Loss_d 1.361 (1.361)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.09 (  0.09)
Overall Timing[ 18/  1]	epoch_time 0.0400 (0.0414)	validation_time 0.0003 (0.0007)	train_time 0.0396 (0.0406)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.9057000170350075, 0.5840000510215759)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.51it/s] 27%|##6       | 7/26 [00:00<00:00, 29.64it/s] 42%|####2     | 11/26 [00:00<00:00, 31.85it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.83it/s] 88%|########8 | 23/26 [00:00<00:00, 34.51it/s]100%|##########| 26/26 [00:00<00:00, 30.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.001 (0.001)	train_nll   0.29 (  0.25)	train_penalty   0.00 (  0.00)	weight_norm  24.86 ( 24.86)	train_acc   0.87 (  0.89)	train_minacc   0.84 (  0.83)	train_majacc   0.88 (  0.90)	train_corr   0.00 (  0.00)	l1 7.2922 (7.2904)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.03it/s] 23%|##3       | 6/26 [00:00<00:00, 20.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.69it/s] 42%|####2     | 11/26 [00:00<00:00, 29.89it/s] 62%|######1   | 16/26 [00:00<00:00, 35.31it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.31it/s] 81%|########  | 21/26 [00:00<00:00, 36.31it/s]100%|##########| 26/26 [00:00<00:00, 40.09it/s]100%|##########| 26/26 [00:00<00:00, 30.12it/s]
Test: [   0/  26]	Loss 0.274 (0.274)	test_acc   0.88 (  0.88)	test_minacc   0.69 (  0.69)	test_majacc   0.91 (  0.91)	Loss_d 0.274 (0.274)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.211 (0.242)	test_acc   0.90 (  0.89)	test_minacc   0.76 (  0.76)	test_majacc   0.92 (  0.91)	Loss_d 0.211 (0.242)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.92 (  0.91)	test_corr_d   0.77 (  0.72)
Test: [  20/  26]	Loss 0.218 (0.224)	test_acc   0.91 (  0.91)	test_minacc   0.73 (  0.78)	test_majacc   0.94 (  0.93)	Loss_d 0.218 (0.224)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.73 (  0.78)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.79 (  0.72)
Test: [  26/  26]	Loss 0.270 (0.227)	test_acc   0.90 (  0.90)	test_minacc   0.84 (  0.78)	test_majacc   0.91 (  0.93)	Loss_d 0.270 (0.227)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.84 (  0.78)	test_majacc_d   0.91 (  0.93)	test_corr_d   0.66 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.61it/s]
Test: [  0/  1]	Loss 1.523 (1.523)	test_acc   0.57 (  0.57)	test_minacc   0.53 (  0.53)	test_majacc   0.92 (  0.92)	Loss_d 1.523 (1.523)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.523 (1.523)	test_acc   0.57 (  0.57)	test_minacc   0.53 (  0.53)	test_majacc   0.92 (  0.92)	Loss_d 1.523 (1.523)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.13 (  0.13)
Overall Timing[ 19/  1]	epoch_time 0.0387 (0.0413)	validation_time 0.0003 (0.0007)	train_time 0.0383 (0.0404)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.9039000204205513, 0.5670000314712524)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.78it/s] 19%|#9        | 5/26 [00:00<00:00, 25.94it/s] 35%|###4      | 9/26 [00:00<00:00, 30.92it/s] 50%|#####     | 13/26 [00:00<00:00, 31.80it/s] 65%|######5   | 17/26 [00:00<00:00, 32.53it/s] 81%|########  | 21/26 [00:00<00:00, 33.27it/s] 96%|#########6| 25/26 [00:00<00:00, 34.11it/s]100%|##########| 26/26 [00:00<00:00, 30.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.002)	train_nll   0.25 (  0.24)	train_penalty   0.00 (  0.00)	weight_norm  24.87 ( 24.87)	train_acc   0.89 (  0.89)	train_minacc   0.86 (  0.78)	train_majacc   0.90 (  0.91)	train_corr   0.00 (  0.00)	l1 7.5295 (7.3616)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 12%|#1        | 3/26 [00:00<00:01, 12.40it/s] 35%|###4      | 9/26 [00:00<00:00, 30.68it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.68it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.73it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.73it/s] 92%|#########2| 24/26 [00:00<00:00, 39.45it/s]100%|##########| 26/26 [00:00<00:00, 32.24it/s]
Test: [   0/  26]	Loss 0.265 (0.265)	test_acc   0.90 (  0.90)	test_minacc   0.80 (  0.80)	test_majacc   0.91 (  0.91)	Loss_d 0.265 (0.265)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.240 (0.255)	test_acc   0.88 (  0.88)	test_minacc   0.76 (  0.78)	test_majacc   0.90 (  0.90)	Loss_d 0.240 (0.255)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.76 (  0.78)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.73 (  0.69)
Test: [  20/  26]	Loss 0.192 (0.231)	test_acc   0.92 (  0.90)	test_minacc   0.75 (  0.80)	test_majacc   0.94 (  0.91)	Loss_d 0.192 (0.231)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.75 (  0.80)	test_majacc_d   0.94 (  0.91)	test_corr_d   0.78 (  0.70)
Test: [  26/  26]	Loss 0.238 (0.230)	test_acc   0.90 (  0.90)	test_minacc   0.86 (  0.81)	test_majacc   0.91 (  0.91)	Loss_d 0.238 (0.230)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.86 (  0.81)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.44it/s]
Test: [  0/  1]	Loss 1.589 (1.589)	test_acc   0.59 (  0.59)	test_minacc   0.55 (  0.55)	test_majacc   0.92 (  0.92)	Loss_d 1.589 (1.589)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.589 (1.589)	test_acc   0.59 (  0.59)	test_minacc   0.55 (  0.55)	test_majacc   0.92 (  0.92)	Loss_d 1.589 (1.589)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.09 (  0.09)
Overall Timing[ 20/  1]	epoch_time 0.0396 (0.0412)	validation_time 0.0005 (0.0007)	train_time 0.0391 (0.0404)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.8982000163197518, 0.5850000381469727)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 19%|#9        | 5/26 [00:00<00:01, 19.78it/s] 35%|###4      | 9/26 [00:00<00:00, 26.44it/s] 50%|#####     | 13/26 [00:00<00:00, 30.21it/s] 65%|######5   | 17/26 [00:00<00:00, 31.86it/s] 81%|########  | 21/26 [00:00<00:00, 33.39it/s] 96%|#########6| 25/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:00<00:00, 28.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.008 (0.002)	train_nll   0.32 (  0.24)	train_penalty   0.01 (  0.00)	weight_norm  24.89 ( 24.88)	train_acc   0.84 (  0.89)	train_minacc   0.86 (  0.81)	train_majacc   0.84 (  0.91)	train_corr   0.00 (  0.00)	l1 7.9858 (7.4821)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.61it/s] 31%|###       | 8/26 [00:00<00:00, 39.89it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.89it/s] 50%|#####     | 13/26 [00:00<00:00, 41.89it/s] 69%|######9   | 18/26 [00:00<00:00, 44.50it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.50it/s] 88%|########8 | 23/26 [00:00<00:00, 41.64it/s]100%|##########| 26/26 [00:00<00:00, 38.65it/s]
Test: [   0/  26]	Loss 0.314 (0.314)	test_acc   0.86 (  0.86)	test_minacc   0.80 (  0.80)	test_majacc   0.87 (  0.87)	Loss_d 0.314 (0.314)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.298 (0.312)	test_acc   0.86 (  0.86)	test_minacc   0.73 (  0.78)	test_majacc   0.87 (  0.87)	Loss_d 0.298 (0.312)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.73 (  0.78)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.70 (  0.64)
Test: [  20/  26]	Loss 0.215 (0.289)	test_acc   0.90 (  0.86)	test_minacc   0.88 (  0.80)	test_majacc   0.91 (  0.88)	Loss_d 0.215 (0.289)	test_acc_d   0.90 (  0.86)	test_minacc_d   0.88 (  0.80)	test_majacc_d   0.91 (  0.88)	test_corr_d   0.74 (  0.66)
Test: [  26/  26]	Loss 0.285 (0.281)	test_acc   0.87 (  0.87)	test_minacc   0.86 (  0.81)	test_majacc   0.87 (  0.88)	Loss_d 0.285 (0.281)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.86 (  0.81)	test_majacc_d   0.87 (  0.88)	test_corr_d   0.60 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.06it/s]
Test: [  0/  1]	Loss 1.702 (1.702)	test_acc   0.60 (  0.60)	test_minacc   0.56 (  0.56)	test_majacc   0.88 (  0.88)	Loss_d 1.702 (1.702)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 1.702 (1.702)	test_acc   0.60 (  0.60)	test_minacc   0.56 (  0.56)	test_majacc   0.88 (  0.88)	Loss_d 1.702 (1.702)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.06 (  0.06)
Overall Timing[ 21/  1]	epoch_time 0.0396 (0.0411)	validation_time 0.0003 (0.0007)	train_time 0.0393 (0.0403)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.8673000191450119, 0.5950000286102295)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.72it/s] 19%|#9        | 5/26 [00:00<00:01, 20.99it/s] 35%|###4      | 9/26 [00:00<00:00, 27.09it/s] 50%|#####     | 13/26 [00:00<00:00, 30.29it/s] 65%|######5   | 17/26 [00:00<00:00, 32.31it/s] 81%|########  | 21/26 [00:00<00:00, 34.07it/s] 96%|#########6| 25/26 [00:00<00:00, 34.37it/s]100%|##########| 26/26 [00:00<00:00, 29.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.002 (0.002)	train_nll   0.18 (  0.23)	train_penalty   0.00 (  0.00)	weight_norm  24.90 ( 24.89)	train_acc   0.92 (  0.90)	train_minacc   0.86 (  0.71)	train_majacc   0.93 (  0.93)	train_corr   0.00 (  0.00)	l1 7.7792 (7.4378)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.81it/s] 19%|#9        | 5/26 [00:00<00:00, 21.48it/s]                                               19%|#9        | 5/26 [00:00<00:00, 21.48it/s] 42%|####2     | 11/26 [00:00<00:00, 33.99it/s] 65%|######5   | 17/26 [00:00<00:00, 42.04it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.04it/s] 85%|########4 | 22/26 [00:00<00:00, 43.52it/s]100%|##########| 26/26 [00:00<00:00, 35.90it/s]
Test: [   0/  26]	Loss 0.225 (0.225)	test_acc   0.91 (  0.91)	test_minacc   0.77 (  0.77)	test_majacc   0.93 (  0.93)	Loss_d 0.225 (0.225)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.276 (0.269)	test_acc   0.88 (  0.88)	test_minacc   0.80 (  0.76)	test_majacc   0.89 (  0.90)	Loss_d 0.276 (0.269)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.80 (  0.76)	test_majacc_d   0.89 (  0.90)	test_corr_d   0.72 (  0.70)
Test: [  20/  26]	Loss 0.240 (0.263)	test_acc   0.90 (  0.88)	test_minacc   0.71 (  0.74)	test_majacc   0.93 (  0.91)	Loss_d 0.240 (0.263)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.71 (  0.74)	test_majacc_d   0.93 (  0.91)	test_corr_d   0.77 (  0.71)
Test: [  26/  26]	Loss 0.189 (0.258)	test_acc   0.92 (  0.88)	test_minacc   0.89 (  0.74)	test_majacc   0.92 (  0.91)	Loss_d 0.189 (0.258)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.89 (  0.74)	test_majacc_d   0.92 (  0.91)	test_corr_d   0.69 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.18it/s]
Test: [  0/  1]	Loss 1.881 (1.881)	test_acc   0.55 (  0.55)	test_minacc   0.51 (  0.51)	test_majacc   0.92 (  0.92)	Loss_d 1.881 (1.881)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 1.881 (1.881)	test_acc   0.55 (  0.55)	test_minacc   0.51 (  0.51)	test_majacc   0.92 (  0.92)	Loss_d 1.881 (1.881)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.16 (  0.16)
Overall Timing[ 22/  1]	epoch_time 0.0388 (0.0410)	validation_time 0.0004 (0.0007)	train_time 0.0383 (0.0402)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.8826000258922577, 0.5530000329017639)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.86it/s] 23%|##3       | 6/26 [00:00<00:00, 22.53it/s] 38%|###8      | 10/26 [00:00<00:00, 27.32it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.20it/s] 69%|######9   | 18/26 [00:00<00:00, 32.08it/s] 85%|########4 | 22/26 [00:00<00:00, 33.48it/s]100%|##########| 26/26 [00:00<00:00, 34.21it/s]100%|##########| 26/26 [00:00<00:00, 28.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 7.918030261993408
set z to 7.838849959373474
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 397 tensor(-0.0134, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.002 (0.002)	train_nll   0.17 (  0.23)	train_penalty   0.00 (  0.00)	weight_norm  24.91 ( 24.91)	train_acc   0.93 (  0.90)	train_minacc   0.84 (  0.78)	train_majacc   0.95 (  0.92)	train_corr   0.00 (  0.00)	l1 7.9756 (7.7251)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.42it/s] 23%|##3       | 6/26 [00:00<00:00, 29.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.06it/s] 42%|####2     | 11/26 [00:00<00:00, 36.34it/s] 62%|######1   | 16/26 [00:00<00:00, 40.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.63it/s] 81%|########  | 21/26 [00:00<00:00, 39.45it/s]100%|##########| 26/26 [00:00<00:00, 34.76it/s]
Test: [   0/  26]	Loss 1.164 (1.164)	test_acc   0.53 (  0.53)	test_minacc   0.39 (  0.39)	test_majacc   0.55 (  0.55)	Loss_d 1.164 (1.164)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 1.201 (1.224)	test_acc   0.54 (  0.50)	test_minacc   0.65 (  0.54)	test_majacc   0.52 (  0.50)	Loss_d 1.201 (1.224)	test_acc_d   0.54 (  0.50)	test_minacc_d   0.65 (  0.54)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.50 (  0.50)
Test: [  20/  26]	Loss 1.248 (1.235)	test_acc   0.46 (  0.50)	test_minacc   0.40 (  0.52)	test_majacc   0.46 (  0.50)	Loss_d 1.248 (1.235)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.40 (  0.52)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.59 (  0.49)
Test: [  26/  26]	Loss 1.225 (1.233)	test_acc   0.47 (  0.50)	test_minacc   0.46 (  0.50)	test_majacc   0.47 (  0.50)	Loss_d 1.225 (1.233)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.51 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.26it/s]
Test: [  0/  1]	Loss 2.633 (2.633)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.633 (2.633)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 2.633 (2.633)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.633 (2.633)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Overall Timing[ 23/  1]	epoch_time 0.0393 (0.0409)	validation_time 0.0004 (0.0007)	train_time 0.0389 (0.0402)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.5000000133514404, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.43it/s] 15%|#5        | 4/26 [00:00<00:01, 17.14it/s] 27%|##6       | 7/26 [00:00<00:00, 22.01it/s] 42%|####2     | 11/26 [00:00<00:00, 27.01it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.60it/s] 65%|######5   | 17/26 [00:00<00:00, 26.91it/s] 81%|########  | 21/26 [00:00<00:00, 29.40it/s] 92%|#########2| 24/26 [00:00<00:00, 29.42it/s]100%|##########| 26/26 [00:01<00:00, 25.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 333 tensor(-0.0138, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 232 tensor(-0.0203, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 202 tensor(-0.0113, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 192 tensor(-0.0084, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 186 tensor(-0.0058, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 204 tensor(-0.0040, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.002 (0.053)	train_nll   0.55 (  0.50)	train_penalty   0.00 (  0.05)	weight_norm  27.29 ( 26.13)	train_acc   0.84 (  0.82)	train_minacc   0.38 (  0.61)	train_majacc   0.92 (  0.85)	train_corr   0.00 (  0.00)	l1 8.6350 (9.1666)	zero_count 0.0000 (59.4360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.28it/s] 27%|##6       | 7/26 [00:00<00:00, 27.73it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.73it/s] 46%|####6     | 12/26 [00:00<00:00, 35.37it/s] 65%|######5   | 17/26 [00:00<00:00, 39.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.34it/s] 85%|########4 | 22/26 [00:00<00:00, 38.75it/s]100%|##########| 26/26 [00:00<00:00, 34.53it/s]
Test: [   0/  26]	Loss 0.535 (0.535)	test_acc   0.60 (  0.60)	test_minacc   0.43 (  0.43)	test_majacc   0.63 (  0.63)	Loss_d 0.535 (0.535)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.558 (0.608)	test_acc   0.54 (  0.53)	test_minacc   0.65 (  0.55)	test_majacc   0.53 (  0.53)	Loss_d 0.558 (0.608)	test_acc_d   0.54 (  0.53)	test_minacc_d   0.65 (  0.55)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.62 (  0.57)
Test: [  20/  26]	Loss 0.628 (0.614)	test_acc   0.46 (  0.53)	test_minacc   0.40 (  0.52)	test_majacc   0.47 (  0.53)	Loss_d 0.628 (0.614)	test_acc_d   0.46 (  0.53)	test_minacc_d   0.40 (  0.52)	test_majacc_d   0.47 (  0.53)	test_corr_d   0.60 (  0.56)
Test: [  26/  26]	Loss 0.641 (0.609)	test_acc   0.49 (  0.52)	test_minacc   0.46 (  0.50)	test_majacc   0.49 (  0.53)	Loss_d 0.641 (0.609)	test_acc_d   0.49 (  0.52)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.49 (  0.53)	test_corr_d   0.56 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.38it/s]
Test: [  0/  1]	Loss 1.929 (1.929)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 1.929 (1.929)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.929 (1.929)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 1.929 (1.929)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.30 (  0.30)
Overall Timing[ 24/  1]	epoch_time 0.0426 (0.0410)	validation_time 0.0003 (0.0007)	train_time 0.0422 (0.0403)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.5236000215411186, 0.4970000088214874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.72it/s] 23%|##3       | 6/26 [00:00<00:00, 26.25it/s] 38%|###8      | 10/26 [00:00<00:00, 30.15it/s] 50%|#####     | 13/26 [00:00<00:00, 28.64it/s] 62%|######1   | 16/26 [00:00<00:00, 28.11it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.91it/s] 92%|#########2| 24/26 [00:00<00:00, 32.42it/s]100%|##########| 26/26 [00:00<00:00, 27.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 211 tensor(-0.0008, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 278 tensor(-0.0039, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 368 tensor(-0.0028, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 376 tensor(-0.0019, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 371 tensor(-0.0018, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.001 (0.004)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  27.94 ( 27.72)	train_acc   0.64 (  0.64)	train_minacc   0.86 (  0.60)	train_majacc   0.61 (  0.64)	train_corr   0.00 (  0.00)	l1 7.8540 (7.9131)	zero_count 0.0000 (43.6020)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.18it/s] 15%|#5        | 4/26 [00:00<00:01, 14.77it/s] 35%|###4      | 9/26 [00:00<00:00, 27.06it/s]                                               35%|###4      | 9/26 [00:00<00:00, 27.06it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.35it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.69it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 34.69it/s] 92%|#########2| 24/26 [00:00<00:00, 38.69it/s]100%|##########| 26/26 [00:00<00:00, 30.50it/s]
Test: [   0/  26]	Loss 0.637 (0.637)	test_acc   0.55 (  0.55)	test_minacc   0.79 (  0.79)	test_majacc   0.51 (  0.51)	Loss_d 0.637 (0.637)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.593 (0.621)	test_acc   0.55 (  0.53)	test_minacc   0.80 (  0.73)	test_majacc   0.51 (  0.49)	Loss_d 0.593 (0.621)	test_acc_d   0.55 (  0.53)	test_minacc_d   0.80 (  0.73)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.42 (  0.39)
Test: [  20/  26]	Loss 0.631 (0.617)	test_acc   0.47 (  0.52)	test_minacc   0.62 (  0.70)	test_majacc   0.44 (  0.49)	Loss_d 0.631 (0.617)	test_acc_d   0.47 (  0.52)	test_minacc_d   0.62 (  0.70)	test_majacc_d   0.44 (  0.49)	test_corr_d   0.36 (  0.38)
Test: [  26/  26]	Loss 0.607 (0.617)	test_acc   0.52 (  0.52)	test_minacc   0.68 (  0.69)	test_majacc   0.49 (  0.49)	Loss_d 0.607 (0.617)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.68 (  0.69)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.36 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.78it/s]
Test: [  0/  1]	Loss 1.516 (1.516)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.54 (  0.54)	Loss_d 1.516 (1.516)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 1.516 (1.516)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.54 (  0.54)	Loss_d 1.516 (1.516)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.17 (  0.17)
Overall Timing[ 25/  1]	epoch_time 0.0391 (0.0409)	validation_time 0.0004 (0.0006)	train_time 0.0387 (0.0402)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.518600014835596, 0.6140000224113464)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.08it/s] 23%|##3       | 6/26 [00:00<00:00, 30.97it/s] 38%|###8      | 10/26 [00:00<00:00, 33.57it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.21it/s] 69%|######9   | 18/26 [00:00<00:00, 36.62it/s] 88%|########8 | 23/26 [00:00<00:00, 37.93it/s]100%|##########| 26/26 [00:00<00:00, 33.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  28.02 ( 28.00)	train_acc   0.46 (  0.49)	train_minacc   0.92 (  0.80)	train_majacc   0.38 (  0.44)	train_corr   0.00 (  0.00)	l1 7.7728 (7.7782)	zero_count 0.0000 (5.4600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.22it/s] 35%|###4      | 9/26 [00:00<00:00, 38.14it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.14it/s] 58%|#####7    | 15/26 [00:00<00:00, 46.89it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 46.89it/s] 81%|########  | 21/26 [00:00<00:00, 47.33it/s]100%|##########| 26/26 [00:00<00:00, 42.30it/s]
Test: [   0/  26]	Loss 0.626 (0.626)	test_acc   0.45 (  0.45)	test_minacc   0.92 (  0.92)	test_majacc   0.36 (  0.36)	Loss_d 0.626 (0.626)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.629 (0.632)	test_acc   0.47 (  0.46)	test_minacc   0.86 (  0.86)	test_majacc   0.42 (  0.40)	Loss_d 0.629 (0.632)	test_acc_d   0.47 (  0.46)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.42 (  0.40)	test_corr_d   0.30 (  0.28)
Test: [  20/  26]	Loss 0.648 (0.633)	test_acc   0.39 (  0.46)	test_minacc   0.81 (  0.85)	test_majacc   0.34 (  0.39)	Loss_d 0.648 (0.633)	test_acc_d   0.39 (  0.46)	test_minacc_d   0.81 (  0.85)	test_majacc_d   0.34 (  0.39)	test_corr_d   0.25 (  0.27)
Test: [  26/  26]	Loss 0.625 (0.633)	test_acc   0.48 (  0.46)	test_minacc   0.92 (  0.85)	test_majacc   0.41 (  0.39)	Loss_d 0.625 (0.633)	test_acc_d   0.48 (  0.46)	test_minacc_d   0.92 (  0.85)	test_majacc_d   0.41 (  0.39)	test_corr_d   0.27 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.57it/s]
Test: [  0/  1]	Loss 1.180 (1.180)	test_acc   0.74 (  0.74)	test_minacc   0.77 (  0.77)	test_majacc   0.47 (  0.47)	Loss_d 1.180 (1.180)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.180 (1.180)	test_acc   0.74 (  0.74)	test_minacc   0.77 (  0.77)	test_majacc   0.47 (  0.47)	Loss_d 1.180 (1.180)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.04 (  0.04)
Overall Timing[ 26/  1]	epoch_time 0.0345 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0341 (0.0400)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.4606000064909458, 0.7390000224113464)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.10it/s] 27%|##6       | 7/26 [00:00<00:00, 31.20it/s] 42%|####2     | 11/26 [00:00<00:00, 34.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.23it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.00it/s] 96%|#########6| 25/26 [00:00<00:00, 38.85it/s]100%|##########| 26/26 [00:00<00:00, 34.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.46 (  0.43)	train_minacc   0.78 (  0.83)	train_majacc   0.40 (  0.36)	train_corr   0.00 (  0.00)	l1 7.7648 (7.7714)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 27%|##6       | 7/26 [00:00<00:00, 36.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.18it/s] 50%|#####     | 13/26 [00:00<00:00, 41.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.55it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.55it/s] 96%|#########6| 25/26 [00:00<00:00, 47.19it/s]100%|##########| 26/26 [00:00<00:00, 39.89it/s]
Test: [   0/  26]	Loss 0.628 (0.628)	test_acc   0.42 (  0.42)	test_minacc   0.90 (  0.90)	test_majacc   0.33 (  0.33)	Loss_d 0.628 (0.628)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.631 (0.632)	test_acc   0.45 (  0.44)	test_minacc   0.86 (  0.82)	test_majacc   0.39 (  0.37)	Loss_d 0.631 (0.632)	test_acc_d   0.45 (  0.44)	test_minacc_d   0.86 (  0.82)	test_majacc_d   0.39 (  0.37)	test_corr_d   0.30 (  0.29)
Test: [  20/  26]	Loss 0.648 (0.634)	test_acc   0.39 (  0.43)	test_minacc   0.69 (  0.80)	test_majacc   0.35 (  0.36)	Loss_d 0.648 (0.634)	test_acc_d   0.39 (  0.43)	test_minacc_d   0.69 (  0.80)	test_majacc_d   0.35 (  0.36)	test_corr_d   0.27 (  0.28)
Test: [  26/  26]	Loss 0.625 (0.634)	test_acc   0.46 (  0.43)	test_minacc   0.76 (  0.80)	test_majacc   0.40 (  0.37)	Loss_d 0.625 (0.634)	test_acc_d   0.46 (  0.43)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.40 (  0.37)	test_corr_d   0.28 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.22it/s]
Test: [  0/  1]	Loss 1.191 (1.191)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.42 (  0.42)	Loss_d 1.191 (1.191)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.191 (1.191)	test_acc   0.68 (  0.68)	test_minacc   0.71 (  0.71)	test_majacc   0.42 (  0.42)	Loss_d 1.191 (1.191)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.10 (  0.10)
Overall Timing[ 27/  1]	epoch_time 0.0340 (0.0405)	validation_time 0.0003 (0.0006)	train_time 0.0337 (0.0398)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.432700004696846, 0.6800000071525574)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.47it/s] 19%|#9        | 5/26 [00:00<00:00, 25.53it/s] 35%|###4      | 9/26 [00:00<00:00, 30.95it/s] 50%|#####     | 13/26 [00:00<00:00, 33.04it/s] 65%|######5   | 17/26 [00:00<00:00, 32.92it/s] 81%|########  | 21/26 [00:00<00:00, 33.82it/s] 96%|#########6| 25/26 [00:00<00:00, 34.82it/s]100%|##########| 26/26 [00:00<00:00, 30.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.44 (  0.43)	train_minacc   0.70 (  0.76)	train_majacc   0.39 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7586 (7.7625)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.36it/s] 27%|##6       | 7/26 [00:00<00:00, 33.75it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.75it/s] 50%|#####     | 13/26 [00:00<00:00, 42.38it/s] 69%|######9   | 18/26 [00:00<00:00, 44.45it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.45it/s] 92%|#########2| 24/26 [00:00<00:00, 48.66it/s]100%|##########| 26/26 [00:00<00:00, 40.60it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.44 (  0.44)	test_minacc   0.82 (  0.82)	test_majacc   0.36 (  0.36)	Loss_d 0.629 (0.629)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.631 (0.634)	test_acc   0.44 (  0.44)	test_minacc   0.80 (  0.75)	test_majacc   0.39 (  0.39)	Loss_d 0.631 (0.634)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.80 (  0.75)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.30 (  0.30)
Test: [  20/  26]	Loss 0.650 (0.635)	test_acc   0.40 (  0.44)	test_minacc   0.60 (  0.73)	test_majacc   0.37 (  0.38)	Loss_d 0.650 (0.635)	test_acc_d   0.40 (  0.44)	test_minacc_d   0.60 (  0.73)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.27 (  0.29)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.43 (  0.44)	test_minacc   0.65 (  0.72)	test_majacc   0.39 (  0.39)	Loss_d 0.627 (0.635)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.65 (  0.72)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.29 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.18it/s]
Test: [  0/  1]	Loss 1.196 (1.196)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.46 (  0.46)	Loss_d 1.196 (1.196)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.196 (1.196)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.46 (  0.46)	Loss_d 1.196 (1.196)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.12 (  0.12)
Overall Timing[ 28/  1]	epoch_time 0.0357 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0353 (0.0396)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.43530000519752504, 0.6260000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.63it/s] 19%|#9        | 5/26 [00:00<00:00, 23.91it/s] 35%|###4      | 9/26 [00:00<00:00, 29.84it/s] 50%|#####     | 13/26 [00:00<00:00, 32.90it/s] 65%|######5   | 17/26 [00:00<00:00, 34.50it/s] 81%|########  | 21/26 [00:00<00:00, 35.37it/s] 96%|#########6| 25/26 [00:00<00:00, 35.64it/s]100%|##########| 26/26 [00:00<00:00, 30.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.41 (  0.43)	train_minacc   0.57 (  0.71)	train_majacc   0.38 (  0.38)	train_corr   0.00 (  0.00)	l1 7.7590 (7.7597)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.41it/s] 31%|###       | 8/26 [00:00<00:00, 37.79it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.79it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.32it/s] 77%|#######6  | 20/26 [00:00<00:00, 46.62it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 46.62it/s]100%|##########| 26/26 [00:00<00:00, 50.57it/s]100%|##########| 26/26 [00:00<00:00, 41.76it/s]
Test: [   0/  26]	Loss 0.631 (0.631)	test_acc   0.43 (  0.43)	test_minacc   0.77 (  0.77)	test_majacc   0.37 (  0.37)	Loss_d 0.631 (0.631)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.632 (0.634)	test_acc   0.45 (  0.44)	test_minacc   0.80 (  0.72)	test_majacc   0.40 (  0.39)	Loss_d 0.632 (0.634)	test_acc_d   0.45 (  0.44)	test_minacc_d   0.80 (  0.72)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.31 (  0.30)
Test: [  20/  26]	Loss 0.651 (0.636)	test_acc   0.39 (  0.43)	test_minacc   0.56 (  0.69)	test_majacc   0.37 (  0.39)	Loss_d 0.651 (0.636)	test_acc_d   0.39 (  0.43)	test_minacc_d   0.56 (  0.69)	test_majacc_d   0.37 (  0.39)	test_corr_d   0.27 (  0.29)
Test: [  26/  26]	Loss 0.628 (0.636)	test_acc   0.41 (  0.43)	test_minacc   0.57 (  0.69)	test_majacc   0.38 (  0.39)	Loss_d 0.628 (0.636)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.57 (  0.69)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.29 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.52it/s]
Test: [  0/  1]	Loss 1.200 (1.200)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.200 (1.200)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.200 (1.200)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.200 (1.200)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.12 (  0.12)
Overall Timing[ 29/  1]	epoch_time 0.0349 (0.0401)	validation_time 0.0004 (0.0006)	train_time 0.0344 (0.0394)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.4333000055551529, 0.6060000061988831)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s] 19%|#9        | 5/26 [00:00<00:01, 19.39it/s] 35%|###4      | 9/26 [00:00<00:00, 26.15it/s] 50%|#####     | 13/26 [00:00<00:00, 30.25it/s] 65%|######5   | 17/26 [00:00<00:00, 33.14it/s] 81%|########  | 21/26 [00:00<00:00, 34.12it/s] 96%|#########6| 25/26 [00:00<00:00, 35.60it/s]100%|##########| 26/26 [00:00<00:00, 28.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.41 (  0.43)	train_minacc   0.57 (  0.68)	train_majacc   0.38 (  0.38)	train_corr   0.00 (  0.00)	l1 7.7614 (7.7614)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 36.96it/s] 35%|###4      | 9/26 [00:00<00:00, 40.44it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 46.52it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 46.52it/s] 81%|########  | 21/26 [00:00<00:00, 47.34it/s]100%|##########| 26/26 [00:00<00:00, 42.49it/s]
Test: [   0/  26]	Loss 0.631 (0.631)	test_acc   0.43 (  0.43)	test_minacc   0.79 (  0.79)	test_majacc   0.37 (  0.37)	Loss_d 0.631 (0.631)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.632 (0.634)	test_acc   0.45 (  0.43)	test_minacc   0.78 (  0.71)	test_majacc   0.40 (  0.38)	Loss_d 0.632 (0.634)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.78 (  0.71)	test_majacc_d   0.40 (  0.38)	test_corr_d   0.31 (  0.30)
Test: [  20/  26]	Loss 0.651 (0.636)	test_acc   0.39 (  0.43)	test_minacc   0.54 (  0.68)	test_majacc   0.37 (  0.38)	Loss_d 0.651 (0.636)	test_acc_d   0.39 (  0.43)	test_minacc_d   0.54 (  0.68)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.27 (  0.29)
Test: [  26/  26]	Loss 0.628 (0.636)	test_acc   0.41 (  0.43)	test_minacc   0.57 (  0.68)	test_majacc   0.38 (  0.39)	Loss_d 0.628 (0.636)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.57 (  0.68)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.29 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.82it/s]
Test: [  0/  1]	Loss 1.204 (1.204)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.204 (1.204)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.204 (1.204)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.204 (1.204)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.13 (  0.13)
Overall Timing[ 30/  1]	epoch_time 0.0367 (0.0400)	validation_time 0.0003 (0.0006)	train_time 0.0364 (0.0393)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.4297000048160553, 0.6020000576972961)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.25it/s] 19%|#9        | 5/26 [00:00<00:00, 23.51it/s] 35%|###4      | 9/26 [00:00<00:00, 29.92it/s] 50%|#####     | 13/26 [00:00<00:00, 33.45it/s] 65%|######5   | 17/26 [00:00<00:00, 35.03it/s] 81%|########  | 21/26 [00:00<00:00, 35.72it/s] 96%|#########6| 25/26 [00:00<00:00, 36.67it/s]100%|##########| 26/26 [00:00<00:00, 30.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.41 (  0.42)	train_minacc   0.57 (  0.68)	train_majacc   0.38 (  0.38)	train_corr   0.00 (  0.00)	l1 7.7636 (7.7640)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.60it/s] 31%|###       | 8/26 [00:00<00:00, 39.04it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.04it/s] 50%|#####     | 13/26 [00:00<00:00, 40.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.78it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.78it/s] 96%|#########6| 25/26 [00:00<00:00, 47.12it/s]100%|##########| 26/26 [00:00<00:00, 40.96it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.43 (  0.43)	test_minacc   0.77 (  0.77)	test_majacc   0.37 (  0.37)	Loss_d 0.630 (0.630)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.632 (0.634)	test_acc   0.44 (  0.43)	test_minacc   0.78 (  0.70)	test_majacc   0.40 (  0.38)	Loss_d 0.632 (0.634)	test_acc_d   0.44 (  0.43)	test_minacc_d   0.78 (  0.70)	test_majacc_d   0.40 (  0.38)	test_corr_d   0.31 (  0.30)
Test: [  20/  26]	Loss 0.651 (0.636)	test_acc   0.39 (  0.43)	test_minacc   0.52 (  0.68)	test_majacc   0.37 (  0.38)	Loss_d 0.651 (0.636)	test_acc_d   0.39 (  0.43)	test_minacc_d   0.52 (  0.68)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.27 (  0.29)
Test: [  26/  26]	Loss 0.628 (0.636)	test_acc   0.40 (  0.43)	test_minacc   0.57 (  0.67)	test_majacc   0.37 (  0.38)	Loss_d 0.628 (0.636)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.57 (  0.67)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.29 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.58it/s]
Test: [  0/  1]	Loss 1.207 (1.207)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.207 (1.207)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.207 (1.207)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.207 (1.207)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Overall Timing[ 31/  1]	epoch_time 0.0360 (0.0399)	validation_time 0.0004 (0.0006)	train_time 0.0355 (0.0392)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.42580000442266464, 0.6020000576972961)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 19%|#9        | 5/26 [00:00<00:01, 19.08it/s] 35%|###4      | 9/26 [00:00<00:00, 24.47it/s] 50%|#####     | 13/26 [00:00<00:00, 28.45it/s] 65%|######5   | 17/26 [00:00<00:00, 31.45it/s] 81%|########  | 21/26 [00:00<00:00, 32.61it/s] 96%|#########6| 25/26 [00:00<00:00, 33.52it/s]100%|##########| 26/26 [00:00<00:00, 27.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.41 (  0.42)	train_minacc   0.57 (  0.67)	train_majacc   0.38 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7652 (7.7663)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.20it/s] 27%|##6       | 7/26 [00:00<00:00, 35.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.93it/s] 50%|#####     | 13/26 [00:00<00:00, 41.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.45it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.45it/s] 96%|#########6| 25/26 [00:00<00:00, 47.70it/s]100%|##########| 26/26 [00:00<00:00, 40.46it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.42 (  0.42)	test_minacc   0.74 (  0.74)	test_majacc   0.36 (  0.36)	Loss_d 0.630 (0.630)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.631 (0.634)	test_acc   0.44 (  0.43)	test_minacc   0.78 (  0.69)	test_majacc   0.39 (  0.38)	Loss_d 0.631 (0.634)	test_acc_d   0.44 (  0.43)	test_minacc_d   0.78 (  0.69)	test_majacc_d   0.39 (  0.38)	test_corr_d   0.31 (  0.30)
Test: [  20/  26]	Loss 0.650 (0.636)	test_acc   0.38 (  0.42)	test_minacc   0.50 (  0.66)	test_majacc   0.37 (  0.38)	Loss_d 0.650 (0.636)	test_acc_d   0.38 (  0.42)	test_minacc_d   0.50 (  0.66)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.628 (0.636)	test_acc   0.40 (  0.42)	test_minacc   0.54 (  0.66)	test_majacc   0.37 (  0.38)	Loss_d 0.628 (0.636)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.54 (  0.66)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.29 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.58it/s]
Test: [  0/  1]	Loss 1.209 (1.209)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.209 (1.209)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.209 (1.209)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.209 (1.209)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Overall Timing[ 32/  1]	epoch_time 0.0397 (0.0399)	validation_time 0.0004 (0.0006)	train_time 0.0392 (0.0392)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.4235000050961971, 0.6040000319480896)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.54it/s] 23%|##3       | 6/26 [00:00<00:00, 25.30it/s] 38%|###8      | 10/26 [00:00<00:00, 29.50it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.30it/s] 69%|######9   | 18/26 [00:00<00:00, 33.61it/s] 85%|########4 | 22/26 [00:00<00:00, 35.24it/s]100%|##########| 26/26 [00:00<00:00, 35.77it/s]100%|##########| 26/26 [00:00<00:00, 30.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.40 (  0.42)	train_minacc   0.54 (  0.67)	train_majacc   0.38 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7663 (7.7680)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.48it/s] 27%|##6       | 7/26 [00:00<00:00, 34.86it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.86it/s] 50%|#####     | 13/26 [00:00<00:00, 40.66it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.64it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.64it/s] 96%|#########6| 25/26 [00:00<00:00, 47.47it/s]100%|##########| 26/26 [00:00<00:00, 39.67it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.42 (  0.42)	test_minacc   0.75 (  0.75)	test_majacc   0.36 (  0.36)	Loss_d 0.630 (0.630)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.631 (0.634)	test_acc   0.45 (  0.43)	test_minacc   0.78 (  0.67)	test_majacc   0.40 (  0.39)	Loss_d 0.631 (0.634)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.78 (  0.67)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.31 (  0.30)
Test: [  20/  26]	Loss 0.650 (0.636)	test_acc   0.39 (  0.42)	test_minacc   0.52 (  0.66)	test_majacc   0.37 (  0.38)	Loss_d 0.650 (0.636)	test_acc_d   0.39 (  0.42)	test_minacc_d   0.52 (  0.66)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.627 (0.636)	test_acc   0.40 (  0.42)	test_minacc   0.57 (  0.65)	test_majacc   0.37 (  0.38)	Loss_d 0.627 (0.636)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.57 (  0.65)	test_majacc_d   0.37 (  0.38)	test_corr_d   0.29 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.31it/s]
Test: [  0/  1]	Loss 1.210 (1.210)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.210 (1.210)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.210 (1.210)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.210 (1.210)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Overall Timing[ 33/  1]	epoch_time 0.0381 (0.0398)	validation_time 0.0004 (0.0006)	train_time 0.0377 (0.0392)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.42440000450611115, 0.6010000109672546)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.95it/s] 19%|#9        | 5/26 [00:00<00:00, 24.85it/s] 35%|###4      | 9/26 [00:00<00:00, 31.32it/s] 50%|#####     | 13/26 [00:00<00:00, 34.25it/s] 65%|######5   | 17/26 [00:00<00:00, 36.15it/s] 85%|########4 | 22/26 [00:00<00:00, 38.23it/s]100%|##########| 26/26 [00:00<00:00, 32.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.40 (  0.41)	train_minacc   0.51 (  0.66)	train_majacc   0.38 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7672 (7.7692)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.71it/s] 31%|###       | 8/26 [00:00<00:00, 36.77it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.77it/s] 54%|#####3    | 14/26 [00:00<00:00, 44.48it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.62it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.62it/s] 96%|#########6| 25/26 [00:00<00:00, 45.98it/s]100%|##########| 26/26 [00:00<00:00, 39.66it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.43 (  0.43)	test_minacc   0.74 (  0.74)	test_majacc   0.37 (  0.37)	Loss_d 0.630 (0.630)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.631 (0.634)	test_acc   0.45 (  0.43)	test_minacc   0.78 (  0.67)	test_majacc   0.40 (  0.39)	Loss_d 0.631 (0.634)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.78 (  0.67)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.32 (  0.31)
Test: [  20/  26]	Loss 0.649 (0.635)	test_acc   0.39 (  0.42)	test_minacc   0.52 (  0.65)	test_majacc   0.38 (  0.39)	Loss_d 0.649 (0.635)	test_acc_d   0.39 (  0.42)	test_minacc_d   0.52 (  0.65)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.28 (  0.30)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.40 (  0.43)	test_minacc   0.51 (  0.65)	test_majacc   0.38 (  0.39)	Loss_d 0.627 (0.635)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.51 (  0.65)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.30 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.12it/s]
Test: [  0/  1]	Loss 1.212 (1.212)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 1.212 (1.212)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.212 (1.212)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 1.212 (1.212)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Overall Timing[ 34/  1]	epoch_time 0.0385 (0.0398)	validation_time 0.0004 (0.0006)	train_time 0.0381 (0.0391)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.42530000498890874, 0.5980000495910645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.01it/s] 19%|#9        | 5/26 [00:00<00:00, 22.76it/s] 35%|###4      | 9/26 [00:00<00:00, 27.99it/s] 50%|#####     | 13/26 [00:00<00:00, 30.92it/s] 65%|######5   | 17/26 [00:00<00:00, 32.55it/s] 81%|########  | 21/26 [00:00<00:00, 33.47it/s] 96%|#########6| 25/26 [00:00<00:00, 33.92it/s]100%|##########| 26/26 [00:00<00:00, 28.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.40 (  0.41)	train_minacc   0.51 (  0.66)	train_majacc   0.38 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7679 (7.7702)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.73it/s] 23%|##3       | 6/26 [00:00<00:00, 25.12it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.12it/s] 42%|####2     | 11/26 [00:00<00:00, 33.63it/s] 62%|######1   | 16/26 [00:00<00:00, 38.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.71it/s] 81%|########  | 21/26 [00:00<00:00, 38.29it/s]100%|##########| 26/26 [00:00<00:00, 41.21it/s]100%|##########| 26/26 [00:00<00:00, 32.96it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.42 (  0.42)	test_minacc   0.74 (  0.74)	test_majacc   0.36 (  0.36)	Loss_d 0.629 (0.629)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.631 (0.633)	test_acc   0.45 (  0.43)	test_minacc   0.78 (  0.67)	test_majacc   0.40 (  0.39)	Loss_d 0.631 (0.633)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.78 (  0.67)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.32 (  0.31)
Test: [  20/  26]	Loss 0.649 (0.635)	test_acc   0.39 (  0.43)	test_minacc   0.52 (  0.65)	test_majacc   0.37 (  0.39)	Loss_d 0.649 (0.635)	test_acc_d   0.39 (  0.43)	test_minacc_d   0.52 (  0.65)	test_majacc_d   0.37 (  0.39)	test_corr_d   0.28 (  0.30)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.40 (  0.43)	test_minacc   0.51 (  0.64)	test_majacc   0.38 (  0.39)	Loss_d 0.627 (0.635)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.51 (  0.64)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.30 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.13it/s]
Test: [  0/  1]	Loss 1.213 (1.213)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 1.213 (1.213)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.213 (1.213)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 1.213 (1.213)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Overall Timing[ 35/  1]	epoch_time 0.0391 (0.0398)	validation_time 0.0004 (0.0006)	train_time 0.0387 (0.0391)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.42600000461936, 0.593000054359436)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.27it/s] 19%|#9        | 5/26 [00:00<00:00, 26.35it/s] 35%|###4      | 9/26 [00:00<00:00, 32.18it/s] 50%|#####     | 13/26 [00:00<00:00, 33.44it/s] 65%|######5   | 17/26 [00:00<00:00, 34.90it/s] 81%|########  | 21/26 [00:00<00:00, 35.53it/s]100%|##########| 26/26 [00:00<00:00, 37.36it/s]100%|##########| 26/26 [00:00<00:00, 31.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.41 (  0.41)	train_minacc   0.51 (  0.65)	train_majacc   0.39 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7682 (7.7710)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 27%|##6       | 7/26 [00:00<00:00, 34.22it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.22it/s] 50%|#####     | 13/26 [00:00<00:00, 40.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.13it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.13it/s] 96%|#########6| 25/26 [00:00<00:00, 47.37it/s]100%|##########| 26/26 [00:00<00:00, 39.83it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.43 (  0.43)	test_minacc   0.74 (  0.74)	test_majacc   0.37 (  0.37)	Loss_d 0.629 (0.629)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.630 (0.633)	test_acc   0.45 (  0.43)	test_minacc   0.76 (  0.66)	test_majacc   0.40 (  0.39)	Loss_d 0.630 (0.633)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.76 (  0.66)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.32 (  0.31)
Test: [  20/  26]	Loss 0.648 (0.635)	test_acc   0.39 (  0.43)	test_minacc   0.52 (  0.64)	test_majacc   0.38 (  0.39)	Loss_d 0.648 (0.635)	test_acc_d   0.39 (  0.43)	test_minacc_d   0.52 (  0.64)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.28 (  0.30)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.41 (  0.43)	test_minacc   0.51 (  0.63)	test_majacc   0.39 (  0.39)	Loss_d 0.627 (0.635)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.51 (  0.63)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.30 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.27it/s]
Test: [  0/  1]	Loss 1.214 (1.214)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 1.214 (1.214)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.214 (1.214)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 1.214 (1.214)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Overall Timing[ 36/  1]	epoch_time 0.0381 (0.0397)	validation_time 0.0004 (0.0006)	train_time 0.0376 (0.0391)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.4279000049233437, 0.5910000205039978)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.85it/s] 27%|##6       | 7/26 [00:00<00:00, 30.30it/s] 42%|####2     | 11/26 [00:00<00:00, 32.25it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.45it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.02it/s] 88%|########8 | 23/26 [00:00<00:00, 36.37it/s]100%|##########| 26/26 [00:00<00:00, 32.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.40 (  0.41)	train_minacc   0.51 (  0.65)	train_majacc   0.38 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7684 (7.7714)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.23it/s] 35%|###4      | 9/26 [00:00<00:00, 42.39it/s]                                               35%|###4      | 9/26 [00:00<00:00, 42.39it/s] 58%|#####7    | 15/26 [00:00<00:00, 45.28it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 45.28it/s] 81%|########  | 21/26 [00:00<00:00, 49.31it/s]100%|##########| 26/26 [00:00<00:00, 42.62it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.42 (  0.42)	test_minacc   0.72 (  0.72)	test_majacc   0.37 (  0.37)	Loss_d 0.629 (0.629)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.630 (0.633)	test_acc   0.45 (  0.43)	test_minacc   0.76 (  0.66)	test_majacc   0.41 (  0.40)	Loss_d 0.630 (0.633)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.76 (  0.66)	test_majacc_d   0.41 (  0.40)	test_corr_d   0.32 (  0.31)
Test: [  20/  26]	Loss 0.648 (0.635)	test_acc   0.39 (  0.43)	test_minacc   0.52 (  0.63)	test_majacc   0.38 (  0.39)	Loss_d 0.648 (0.635)	test_acc_d   0.39 (  0.43)	test_minacc_d   0.52 (  0.63)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.29 (  0.30)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.41 (  0.43)	test_minacc   0.51 (  0.63)	test_majacc   0.39 (  0.39)	Loss_d 0.627 (0.635)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.51 (  0.63)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.30 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.88it/s]
Test: [  0/  1]	Loss 1.215 (1.215)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.215 (1.215)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.215 (1.215)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.215 (1.215)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Overall Timing[ 37/  1]	epoch_time 0.0411 (0.0398)	validation_time 0.0005 (0.0006)	train_time 0.0406 (0.0391)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.4291000048518181, 0.5860000252723694)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.38it/s] 19%|#9        | 5/26 [00:00<00:00, 24.09it/s] 35%|###4      | 9/26 [00:00<00:00, 30.28it/s] 50%|#####     | 13/26 [00:00<00:00, 33.30it/s] 65%|######5   | 17/26 [00:00<00:00, 35.32it/s] 81%|########  | 21/26 [00:00<00:00, 36.03it/s] 96%|#########6| 25/26 [00:00<00:00, 36.39it/s]100%|##########| 26/26 [00:00<00:00, 31.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.40 (  0.41)	train_minacc   0.51 (  0.65)	train_majacc   0.38 (  0.36)	train_corr   0.00 (  0.00)	l1 7.7686 (7.7716)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.20it/s] 31%|###       | 8/26 [00:00<00:00, 40.06it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.06it/s] 50%|#####     | 13/26 [00:00<00:00, 44.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 49.78it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 49.78it/s] 92%|#########2| 24/26 [00:00<00:00, 49.66it/s]100%|##########| 26/26 [00:00<00:00, 42.53it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.42 (  0.42)	test_minacc   0.70 (  0.70)	test_majacc   0.37 (  0.37)	Loss_d 0.629 (0.629)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.630 (0.633)	test_acc   0.45 (  0.43)	test_minacc   0.76 (  0.65)	test_majacc   0.41 (  0.40)	Loss_d 0.630 (0.633)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.76 (  0.65)	test_majacc_d   0.41 (  0.40)	test_corr_d   0.32 (  0.31)
Test: [  20/  26]	Loss 0.647 (0.634)	test_acc   0.40 (  0.43)	test_minacc   0.52 (  0.63)	test_majacc   0.38 (  0.39)	Loss_d 0.647 (0.634)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.52 (  0.63)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.29 (  0.30)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.41 (  0.43)	test_minacc   0.51 (  0.62)	test_majacc   0.39 (  0.40)	Loss_d 0.627 (0.635)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.51 (  0.62)	test_majacc_d   0.39 (  0.40)	test_corr_d   0.30 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.13it/s]
Test: [  0/  1]	Loss 1.217 (1.217)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.217 (1.217)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.217 (1.217)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.217 (1.217)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Overall Timing[ 38/  1]	epoch_time 0.0437 (0.0399)	validation_time 0.0003 (0.0006)	train_time 0.0434 (0.0392)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.42950000482797623, 0.5840000510215759)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.98it/s] 19%|#9        | 5/26 [00:00<00:01, 17.70it/s] 35%|###4      | 9/26 [00:00<00:00, 24.30it/s] 50%|#####     | 13/26 [00:00<00:00, 28.41it/s] 65%|######5   | 17/26 [00:00<00:00, 30.84it/s] 81%|########  | 21/26 [00:00<00:00, 32.58it/s] 96%|#########6| 25/26 [00:00<00:00, 33.71it/s]100%|##########| 26/26 [00:00<00:00, 26.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.40 (  0.41)	train_minacc   0.51 (  0.65)	train_majacc   0.38 (  0.36)	train_corr   0.00 (  0.00)	l1 7.7687 (7.7716)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.74it/s] 19%|#9        | 5/26 [00:00<00:00, 25.05it/s] 38%|###8      | 10/26 [00:00<00:00, 34.44it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.81it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.91it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.91it/s] 96%|#########6| 25/26 [00:00<00:00, 42.47it/s]100%|##########| 26/26 [00:00<00:00, 35.24it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.42 (  0.42)	test_minacc   0.70 (  0.70)	test_majacc   0.36 (  0.36)	Loss_d 0.629 (0.629)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.630 (0.633)	test_acc   0.45 (  0.43)	test_minacc   0.73 (  0.65)	test_majacc   0.41 (  0.39)	Loss_d 0.630 (0.633)	test_acc_d   0.45 (  0.43)	test_minacc_d   0.73 (  0.65)	test_majacc_d   0.41 (  0.39)	test_corr_d   0.32 (  0.31)
Test: [  20/  26]	Loss 0.647 (0.634)	test_acc   0.40 (  0.43)	test_minacc   0.52 (  0.62)	test_majacc   0.39 (  0.39)	Loss_d 0.647 (0.634)	test_acc_d   0.40 (  0.43)	test_minacc_d   0.52 (  0.62)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.29 (  0.30)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.41 (  0.43)	test_minacc   0.51 (  0.62)	test_majacc   0.39 (  0.39)	Loss_d 0.627 (0.635)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.51 (  0.62)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.30 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.92it/s]
Test: [  0/  1]	Loss 1.218 (1.218)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.218 (1.218)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.218 (1.218)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.218 (1.218)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Overall Timing[ 39/  1]	epoch_time 0.0389 (0.0398)	validation_time 0.0004 (0.0006)	train_time 0.0385 (0.0392)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.42680000498890874, 0.5820000171661377)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.54it/s] 23%|##3       | 6/26 [00:00<00:00, 27.75it/s] 38%|###8      | 10/26 [00:00<00:00, 31.56it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.13it/s] 69%|######9   | 18/26 [00:00<00:00, 34.43it/s] 85%|########4 | 22/26 [00:00<00:00, 35.23it/s]100%|##########| 26/26 [00:00<00:00, 35.17it/s]100%|##########| 26/26 [00:00<00:00, 31.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.39 (  0.41)	train_minacc   0.51 (  0.64)	train_majacc   0.37 (  0.36)	train_corr   0.00 (  0.00)	l1 7.7687 (7.7714)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.01it/s] 15%|#5        | 4/26 [00:00<00:01, 20.61it/s] 35%|###4      | 9/26 [00:00<00:00, 33.25it/s]                                               35%|###4      | 9/26 [00:00<00:00, 33.25it/s] 54%|#####3    | 14/26 [00:00<00:00, 39.13it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.80it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.80it/s] 92%|#########2| 24/26 [00:00<00:00, 39.67it/s]100%|##########| 26/26 [00:00<00:00, 34.35it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.41 (  0.41)	test_minacc   0.70 (  0.70)	test_majacc   0.36 (  0.36)	Loss_d 0.629 (0.629)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.631 (0.633)	test_acc   0.44 (  0.42)	test_minacc   0.73 (  0.65)	test_majacc   0.39 (  0.39)	Loss_d 0.631 (0.633)	test_acc_d   0.44 (  0.42)	test_minacc_d   0.73 (  0.65)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.32 (  0.31)
Test: [  20/  26]	Loss 0.646 (0.635)	test_acc   0.40 (  0.42)	test_minacc   0.52 (  0.62)	test_majacc   0.39 (  0.39)	Loss_d 0.646 (0.635)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.52 (  0.62)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.29 (  0.30)
Test: [  26/  26]	Loss 0.627 (0.635)	test_acc   0.40 (  0.42)	test_minacc   0.51 (  0.62)	test_majacc   0.38 (  0.39)	Loss_d 0.627 (0.635)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.51 (  0.62)	test_majacc_d   0.38 (  0.39)	test_corr_d   0.30 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.15it/s]
Test: [  0/  1]	Loss 1.219 (1.219)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.219 (1.219)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.219 (1.219)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.219 (1.219)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Overall Timing[ 40/  1]	epoch_time 0.0375 (0.0398)	validation_time 0.0004 (0.0006)	train_time 0.0371 (0.0392)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.42260000482201576, 0.5840000510215759)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s] 19%|#9        | 5/26 [00:00<00:00, 22.18it/s] 35%|###4      | 9/26 [00:00<00:00, 28.12it/s] 50%|#####     | 13/26 [00:00<00:00, 31.02it/s] 65%|######5   | 17/26 [00:00<00:00, 32.63it/s] 81%|########  | 21/26 [00:00<00:00, 33.54it/s] 96%|#########6| 25/26 [00:00<00:00, 33.87it/s]100%|##########| 26/26 [00:00<00:00, 28.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.38 (  0.40)	train_minacc   0.51 (  0.64)	train_majacc   0.36 (  0.36)	train_corr   0.00 (  0.00)	l1 7.7688 (7.7708)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.50it/s] 27%|##6       | 7/26 [00:00<00:00, 31.23it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.23it/s] 46%|####6     | 12/26 [00:00<00:00, 36.83it/s] 65%|######5   | 17/26 [00:00<00:00, 40.63it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.63it/s] 85%|########4 | 22/26 [00:00<00:00, 40.92it/s]100%|##########| 26/26 [00:00<00:00, 35.61it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.41 (  0.41)	test_minacc   0.70 (  0.70)	test_majacc   0.36 (  0.36)	Loss_d 0.629 (0.629)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.631 (0.634)	test_acc   0.43 (  0.42)	test_minacc   0.71 (  0.64)	test_majacc   0.39 (  0.38)	Loss_d 0.631 (0.634)	test_acc_d   0.43 (  0.42)	test_minacc_d   0.71 (  0.64)	test_majacc_d   0.39 (  0.38)	test_corr_d   0.32 (  0.30)
Test: [  20/  26]	Loss 0.646 (0.635)	test_acc   0.40 (  0.42)	test_minacc   0.52 (  0.62)	test_majacc   0.38 (  0.38)	Loss_d 0.646 (0.635)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.52 (  0.62)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.29 (  0.30)
Test: [  26/  26]	Loss 0.628 (0.635)	test_acc   0.40 (  0.42)	test_minacc   0.51 (  0.62)	test_majacc   0.38 (  0.38)	Loss_d 0.628 (0.635)	test_acc_d   0.40 (  0.42)	test_minacc_d   0.51 (  0.62)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.29 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.73it/s]
Test: [  0/  1]	Loss 1.219 (1.219)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.219 (1.219)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.219 (1.219)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.46 (  0.46)	Loss_d 1.219 (1.219)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Overall Timing[ 41/  1]	epoch_time 0.0375 (0.0397)	validation_time 0.0004 (0.0006)	train_time 0.0371 (0.0391)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.4175000049173832, 0.5879999995231628)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.17it/s] 23%|##3       | 6/26 [00:00<00:00, 28.81it/s] 38%|###8      | 10/26 [00:00<00:00, 31.14it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.15it/s] 69%|######9   | 18/26 [00:00<00:00, 33.68it/s] 85%|########4 | 22/26 [00:00<00:00, 35.28it/s]100%|##########| 26/26 [00:00<00:00, 31.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.37 (  0.40)	train_minacc   0.51 (  0.63)	train_majacc   0.34 (  0.36)	train_corr   0.00 (  0.00)	l1 7.7689 (7.7700)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.90it/s] 23%|##3       | 6/26 [00:00<00:00, 23.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.20it/s] 42%|####2     | 11/26 [00:00<00:00, 32.49it/s] 65%|######5   | 17/26 [00:00<00:00, 38.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.35it/s] 88%|########8 | 23/26 [00:00<00:00, 44.48it/s]100%|##########| 26/26 [00:00<00:00, 34.30it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.41 (  0.41)	test_minacc   0.70 (  0.70)	test_majacc   0.35 (  0.35)	Loss_d 0.629 (0.629)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.35 (  0.35)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.632 (0.635)	test_acc   0.42 (  0.41)	test_minacc   0.71 (  0.65)	test_majacc   0.37 (  0.37)	Loss_d 0.632 (0.635)	test_acc_d   0.42 (  0.41)	test_minacc_d   0.71 (  0.65)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.31 (  0.30)
Test: [  20/  26]	Loss 0.647 (0.636)	test_acc   0.38 (  0.41)	test_minacc   0.52 (  0.63)	test_majacc   0.36 (  0.37)	Loss_d 0.647 (0.636)	test_acc_d   0.38 (  0.41)	test_minacc_d   0.52 (  0.63)	test_majacc_d   0.36 (  0.37)	test_corr_d   0.29 (  0.29)
Test: [  26/  26]	Loss 0.629 (0.636)	test_acc   0.39 (  0.41)	test_minacc   0.51 (  0.62)	test_majacc   0.37 (  0.37)	Loss_d 0.629 (0.636)	test_acc_d   0.39 (  0.41)	test_minacc_d   0.51 (  0.62)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.29 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.00it/s]
Test: [  0/  1]	Loss 1.219 (1.219)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 1.219 (1.219)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.219 (1.219)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 1.219 (1.219)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.15 (  0.15)
Overall Timing[ 42/  1]	epoch_time 0.0376 (0.0397)	validation_time 0.0003 (0.0005)	train_time 0.0372 (0.0391)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.4085000055730343, 0.5950000286102295)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.59it/s] 19%|#9        | 5/26 [00:00<00:01, 20.95it/s] 35%|###4      | 9/26 [00:00<00:00, 26.42it/s] 50%|#####     | 13/26 [00:00<00:00, 28.92it/s] 65%|######5   | 17/26 [00:00<00:00, 30.65it/s] 81%|########  | 21/26 [00:00<00:00, 32.54it/s] 96%|#########6| 25/26 [00:00<00:00, 33.18it/s]100%|##########| 26/26 [00:00<00:00, 27.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.36 (  0.40)	train_minacc   0.51 (  0.63)	train_majacc   0.33 (  0.36)	train_corr   0.00 (  0.00)	l1 7.7692 (7.7689)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.49it/s] 23%|##3       | 6/26 [00:00<00:00, 31.01it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.01it/s] 42%|####2     | 11/26 [00:00<00:00, 37.29it/s] 62%|######1   | 16/26 [00:00<00:00, 41.37it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.37it/s] 81%|########  | 21/26 [00:00<00:00, 39.33it/s]100%|##########| 26/26 [00:00<00:00, 35.79it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.39 (  0.39)	test_minacc   0.69 (  0.69)	test_majacc   0.34 (  0.34)	Loss_d 0.630 (0.630)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.633 (0.636)	test_acc   0.42 (  0.40)	test_minacc   0.73 (  0.66)	test_majacc   0.38 (  0.36)	Loss_d 0.633 (0.636)	test_acc_d   0.42 (  0.40)	test_minacc_d   0.73 (  0.66)	test_majacc_d   0.38 (  0.36)	test_corr_d   0.31 (  0.30)
Test: [  20/  26]	Loss 0.647 (0.636)	test_acc   0.37 (  0.40)	test_minacc   0.54 (  0.64)	test_majacc   0.34 (  0.36)	Loss_d 0.647 (0.636)	test_acc_d   0.37 (  0.40)	test_minacc_d   0.54 (  0.64)	test_majacc_d   0.34 (  0.36)	test_corr_d   0.29 (  0.29)
Test: [  26/  26]	Loss 0.630 (0.637)	test_acc   0.36 (  0.40)	test_minacc   0.49 (  0.63)	test_majacc   0.34 (  0.36)	Loss_d 0.630 (0.637)	test_acc_d   0.36 (  0.40)	test_minacc_d   0.49 (  0.63)	test_majacc_d   0.34 (  0.36)	test_corr_d   0.29 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.36it/s]
Test: [  0/  1]	Loss 1.219 (1.219)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.219 (1.219)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.219 (1.219)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.46 (  0.46)	Loss_d 1.219 (1.219)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Overall Timing[ 43/  1]	epoch_time 0.0390 (0.0397)	validation_time 0.0004 (0.0005)	train_time 0.0386 (0.0391)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.3999000063240528, 0.6000000238418579)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.11it/s] 19%|#9        | 5/26 [00:00<00:00, 22.26it/s] 35%|###4      | 9/26 [00:00<00:00, 28.26it/s] 50%|#####     | 13/26 [00:00<00:00, 31.25it/s] 65%|######5   | 17/26 [00:00<00:00, 32.22it/s] 81%|########  | 21/26 [00:00<00:00, 33.34it/s] 96%|#########6| 25/26 [00:00<00:00, 34.11it/s]100%|##########| 26/26 [00:00<00:00, 28.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.36 (  0.40)	train_minacc   0.51 (  0.62)	train_majacc   0.33 (  0.36)	train_corr   0.00 (  0.00)	l1 7.7697 (7.7677)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.87it/s] 23%|##3       | 6/26 [00:00<00:00, 33.01it/s]                                               23%|##3       | 6/26 [00:00<00:00, 33.01it/s] 42%|####2     | 11/26 [00:00<00:00, 38.99it/s] 62%|######1   | 16/26 [00:00<00:00, 42.46it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.46it/s] 81%|########  | 21/26 [00:00<00:00, 39.43it/s]100%|##########| 26/26 [00:00<00:00, 42.25it/s]100%|##########| 26/26 [00:00<00:00, 35.72it/s]
Test: [   0/  26]	Loss 0.631 (0.631)	test_acc   0.38 (  0.38)	test_minacc   0.70 (  0.70)	test_majacc   0.32 (  0.32)	Loss_d 0.631 (0.631)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.32 (  0.32)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.635 (0.637)	test_acc   0.41 (  0.39)	test_minacc   0.73 (  0.67)	test_majacc   0.36 (  0.34)	Loss_d 0.635 (0.637)	test_acc_d   0.41 (  0.39)	test_minacc_d   0.73 (  0.67)	test_majacc_d   0.36 (  0.34)	test_corr_d   0.30 (  0.29)
Test: [  20/  26]	Loss 0.648 (0.638)	test_acc   0.36 (  0.39)	test_minacc   0.54 (  0.65)	test_majacc   0.34 (  0.34)	Loss_d 0.648 (0.638)	test_acc_d   0.36 (  0.39)	test_minacc_d   0.54 (  0.65)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.631 (0.638)	test_acc   0.36 (  0.39)	test_minacc   0.51 (  0.64)	test_majacc   0.33 (  0.34)	Loss_d 0.631 (0.638)	test_acc_d   0.36 (  0.39)	test_minacc_d   0.51 (  0.64)	test_majacc_d   0.33 (  0.34)	test_corr_d   0.28 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.32it/s]
Test: [  0/  1]	Loss 1.217 (1.217)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.46 (  0.46)	Loss_d 1.217 (1.217)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 1.217 (1.217)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.46 (  0.46)	Loss_d 1.217 (1.217)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.14 (  0.14)
Overall Timing[ 44/  1]	epoch_time 0.0400 (0.0397)	validation_time 0.0003 (0.0005)	train_time 0.0396 (0.0391)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.3890000065565109, 0.6110000014305115)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.25it/s] 19%|#9        | 5/26 [00:00<00:01, 16.71it/s] 35%|###4      | 9/26 [00:00<00:00, 23.61it/s] 50%|#####     | 13/26 [00:00<00:00, 28.09it/s] 65%|######5   | 17/26 [00:00<00:00, 30.28it/s] 81%|########  | 21/26 [00:00<00:00, 31.78it/s] 96%|#########6| 25/26 [00:00<00:00, 32.68it/s]100%|##########| 26/26 [00:01<00:00, 25.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.35 (  0.40)	train_minacc   0.54 (  0.62)	train_majacc   0.32 (  0.36)	train_corr   0.00 (  0.00)	l1 7.7701 (7.7663)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.58it/s] 27%|##6       | 7/26 [00:00<00:00, 33.77it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.77it/s] 46%|####6     | 12/26 [00:00<00:00, 39.09it/s] 65%|######5   | 17/26 [00:00<00:00, 41.88it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.88it/s] 85%|########4 | 22/26 [00:00<00:00, 43.13it/s]100%|##########| 26/26 [00:00<00:00, 36.72it/s]
Test: [   0/  26]	Loss 0.631 (0.631)	test_acc   0.36 (  0.36)	test_minacc   0.70 (  0.70)	test_majacc   0.30 (  0.30)	Loss_d 0.631 (0.631)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.636 (0.638)	test_acc   0.40 (  0.38)	test_minacc   0.76 (  0.67)	test_majacc   0.35 (  0.33)	Loss_d 0.636 (0.638)	test_acc_d   0.40 (  0.38)	test_minacc_d   0.76 (  0.67)	test_majacc_d   0.35 (  0.33)	test_corr_d   0.30 (  0.29)
Test: [  20/  26]	Loss 0.649 (0.639)	test_acc   0.36 (  0.38)	test_minacc   0.54 (  0.65)	test_majacc   0.33 (  0.33)	Loss_d 0.649 (0.639)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.54 (  0.65)	test_majacc_d   0.33 (  0.33)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.632 (0.639)	test_acc   0.36 (  0.38)	test_minacc   0.51 (  0.65)	test_majacc   0.33 (  0.34)	Loss_d 0.632 (0.639)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.51 (  0.65)	test_majacc_d   0.33 (  0.34)	test_corr_d   0.28 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.60it/s]
Test: [  0/  1]	Loss 1.215 (1.215)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.44 (  0.44)	Loss_d 1.215 (1.215)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.215 (1.215)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.44 (  0.44)	Loss_d 1.215 (1.215)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.13 (  0.13)
Overall Timing[ 45/  1]	epoch_time 0.0388 (0.0396)	validation_time 0.0004 (0.0005)	train_time 0.0383 (0.0391)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.38240000694990156, 0.6150000095367432)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.90it/s] 19%|#9        | 5/26 [00:00<00:00, 22.81it/s] 35%|###4      | 9/26 [00:00<00:00, 29.19it/s] 50%|#####     | 13/26 [00:00<00:00, 32.67it/s] 65%|######5   | 17/26 [00:00<00:00, 33.74it/s] 81%|########  | 21/26 [00:00<00:00, 34.17it/s] 96%|#########6| 25/26 [00:00<00:00, 34.75it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.34 (  0.40)	train_minacc   0.54 (  0.62)	train_majacc   0.31 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7702 (7.7645)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 23%|##3       | 6/26 [00:00<00:00, 30.26it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.26it/s] 42%|####2     | 11/26 [00:00<00:00, 36.84it/s] 62%|######1   | 16/26 [00:00<00:00, 40.94it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.94it/s] 81%|########  | 21/26 [00:00<00:00, 39.78it/s]100%|##########| 26/26 [00:00<00:00, 42.83it/s]100%|##########| 26/26 [00:00<00:00, 35.66it/s]
Test: [   0/  26]	Loss 0.632 (0.632)	test_acc   0.36 (  0.36)	test_minacc   0.70 (  0.70)	test_majacc   0.29 (  0.29)	Loss_d 0.632 (0.632)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.638 (0.639)	test_acc   0.38 (  0.37)	test_minacc   0.76 (  0.69)	test_majacc   0.33 (  0.32)	Loss_d 0.638 (0.639)	test_acc_d   0.38 (  0.37)	test_minacc_d   0.76 (  0.69)	test_majacc_d   0.33 (  0.32)	test_corr_d   0.29 (  0.28)
Test: [  20/  26]	Loss 0.651 (0.640)	test_acc   0.34 (  0.37)	test_minacc   0.54 (  0.66)	test_majacc   0.32 (  0.32)	Loss_d 0.651 (0.640)	test_acc_d   0.34 (  0.37)	test_minacc_d   0.54 (  0.66)	test_majacc_d   0.32 (  0.32)	test_corr_d   0.27 (  0.27)
Test: [  26/  26]	Loss 0.634 (0.640)	test_acc   0.35 (  0.37)	test_minacc   0.54 (  0.66)	test_majacc   0.31 (  0.32)	Loss_d 0.634 (0.640)	test_acc_d   0.35 (  0.37)	test_minacc_d   0.54 (  0.66)	test_majacc_d   0.31 (  0.32)	test_corr_d   0.27 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.42it/s]
Test: [  0/  1]	Loss 1.212 (1.212)	test_acc   0.62 (  0.62)	test_minacc   0.65 (  0.65)	test_majacc   0.43 (  0.43)	Loss_d 1.212 (1.212)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.212 (1.212)	test_acc   0.62 (  0.62)	test_minacc   0.65 (  0.65)	test_majacc   0.43 (  0.43)	Loss_d 1.212 (1.212)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.13 (  0.13)
Overall Timing[ 46/  1]	epoch_time 0.0380 (0.0396)	validation_time 0.0004 (0.0005)	train_time 0.0375 (0.0390)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.3748000077307224, 0.6240000128746033)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.64it/s] 19%|#9        | 5/26 [00:00<00:01, 19.14it/s] 35%|###4      | 9/26 [00:00<00:00, 25.51it/s] 50%|#####     | 13/26 [00:00<00:00, 29.78it/s] 65%|######5   | 17/26 [00:00<00:00, 31.88it/s] 81%|########  | 21/26 [00:00<00:00, 33.47it/s] 96%|#########6| 25/26 [00:00<00:00, 33.85it/s]100%|##########| 26/26 [00:00<00:00, 27.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.34 (  0.41)	train_minacc   0.54 (  0.62)	train_majacc   0.31 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7694 (7.7622)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.97it/s] 27%|##6       | 7/26 [00:00<00:00, 34.25it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.25it/s] 46%|####6     | 12/26 [00:00<00:00, 40.39it/s] 65%|######5   | 17/26 [00:00<00:00, 43.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.81it/s] 85%|########4 | 22/26 [00:00<00:00, 39.70it/s]100%|##########| 26/26 [00:00<00:00, 38.00it/s]
Test: [   0/  26]	Loss 0.633 (0.633)	test_acc   0.36 (  0.36)	test_minacc   0.70 (  0.70)	test_majacc   0.29 (  0.29)	Loss_d 0.633 (0.633)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.639 (0.640)	test_acc   0.37 (  0.36)	test_minacc   0.78 (  0.69)	test_majacc   0.31 (  0.31)	Loss_d 0.639 (0.640)	test_acc_d   0.37 (  0.36)	test_minacc_d   0.78 (  0.69)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.652 (0.641)	test_acc   0.32 (  0.36)	test_minacc   0.52 (  0.67)	test_majacc   0.30 (  0.31)	Loss_d 0.652 (0.641)	test_acc_d   0.32 (  0.36)	test_minacc_d   0.52 (  0.67)	test_majacc_d   0.30 (  0.31)	test_corr_d   0.26 (  0.27)
Test: [  26/  26]	Loss 0.636 (0.641)	test_acc   0.34 (  0.36)	test_minacc   0.54 (  0.67)	test_majacc   0.31 (  0.31)	Loss_d 0.636 (0.641)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.54 (  0.67)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.27 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.16it/s]
Test: [  0/  1]	Loss 1.209 (1.209)	test_acc   0.63 (  0.63)	test_minacc   0.66 (  0.66)	test_majacc   0.42 (  0.42)	Loss_d 1.209 (1.209)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.209 (1.209)	test_acc   0.63 (  0.63)	test_minacc   0.66 (  0.66)	test_majacc   0.42 (  0.42)	Loss_d 1.209 (1.209)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.12 (  0.12)
Overall Timing[ 47/  1]	epoch_time 0.0391 (0.0396)	validation_time 0.0004 (0.0005)	train_time 0.0387 (0.0390)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.36450000792741777, 0.6330000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.13it/s] 19%|#9        | 5/26 [00:00<00:00, 23.36it/s] 35%|###4      | 9/26 [00:00<00:00, 28.85it/s] 50%|#####     | 13/26 [00:00<00:00, 32.48it/s] 65%|######5   | 17/26 [00:00<00:00, 34.59it/s] 81%|########  | 21/26 [00:00<00:00, 36.21it/s] 96%|#########6| 25/26 [00:00<00:00, 36.41it/s]100%|##########| 26/26 [00:00<00:00, 30.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.34 (  0.41)	train_minacc   0.57 (  0.62)	train_majacc   0.30 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7669 (7.7590)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.46it/s] 23%|##3       | 6/26 [00:00<00:00, 32.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.68it/s] 42%|####2     | 11/26 [00:00<00:00, 37.39it/s] 65%|######5   | 17/26 [00:00<00:00, 39.44it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.44it/s] 88%|########8 | 23/26 [00:00<00:00, 44.11it/s]100%|##########| 26/26 [00:00<00:00, 36.39it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.35 (  0.35)	test_minacc   0.70 (  0.70)	test_majacc   0.29 (  0.29)	Loss_d 0.634 (0.634)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.640 (0.641)	test_acc   0.36 (  0.36)	test_minacc   0.78 (  0.71)	test_majacc   0.30 (  0.30)	Loss_d 0.640 (0.641)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.78 (  0.71)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  20/  26]	Loss 0.653 (0.642)	test_acc   0.33 (  0.36)	test_minacc   0.56 (  0.69)	test_majacc   0.29 (  0.30)	Loss_d 0.653 (0.642)	test_acc_d   0.33 (  0.36)	test_minacc_d   0.56 (  0.69)	test_majacc_d   0.29 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  26/  26]	Loss 0.637 (0.642)	test_acc   0.34 (  0.36)	test_minacc   0.57 (  0.68)	test_majacc   0.30 (  0.30)	Loss_d 0.637 (0.642)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.57 (  0.68)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.27 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.44it/s]
Test: [  0/  1]	Loss 1.209 (1.209)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.42 (  0.42)	Loss_d 1.209 (1.209)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.209 (1.209)	test_acc   0.64 (  0.64)	test_minacc   0.67 (  0.67)	test_majacc   0.42 (  0.42)	Loss_d 1.209 (1.209)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.12 (  0.12)
Overall Timing[ 48/  1]	epoch_time 0.0384 (0.0396)	validation_time 0.0003 (0.0005)	train_time 0.0381 (0.0390)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.3602000081837177, 0.6420000195503235)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.99it/s] 19%|#9        | 5/26 [00:00<00:01, 17.90it/s] 35%|###4      | 9/26 [00:00<00:00, 24.85it/s] 50%|#####     | 13/26 [00:00<00:00, 28.60it/s] 65%|######5   | 17/26 [00:00<00:00, 31.22it/s] 81%|########  | 21/26 [00:00<00:00, 32.95it/s] 96%|#########6| 25/26 [00:00<00:00, 34.26it/s]100%|##########| 26/26 [00:00<00:00, 27.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  28.03 ( 28.03)	train_acc   0.34 (  0.41)	train_minacc   0.57 (  0.62)	train_majacc   0.31 (  0.37)	train_corr   0.00 (  0.00)	l1 7.7616 (7.7547)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 23%|##3       | 6/26 [00:00<00:00, 29.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.14it/s] 42%|####2     | 11/26 [00:00<00:00, 36.97it/s] 62%|######1   | 16/26 [00:00<00:00, 41.13it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.13it/s] 81%|########  | 21/26 [00:00<00:00, 37.67it/s]100%|##########| 26/26 [00:00<00:00, 34.29it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.36 (  0.36)	test_minacc   0.72 (  0.72)	test_majacc   0.29 (  0.29)	Loss_d 0.634 (0.634)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.29 (  0.29)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.640 (0.640)	test_acc   0.36 (  0.36)	test_minacc   0.78 (  0.71)	test_majacc   0.30 (  0.30)	Loss_d 0.640 (0.640)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.78 (  0.71)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.28 (  0.27)
Test: [  20/  26]	Loss 0.653 (0.641)	test_acc   0.32 (  0.36)	test_minacc   0.56 (  0.69)	test_majacc   0.29 (  0.30)	Loss_d 0.653 (0.641)	test_acc_d   0.32 (  0.36)	test_minacc_d   0.56 (  0.69)	test_majacc_d   0.29 (  0.30)	test_corr_d   0.26 (  0.27)
Test: [  26/  26]	Loss 0.637 (0.642)	test_acc   0.34 (  0.36)	test_minacc   0.57 (  0.69)	test_majacc   0.30 (  0.30)	Loss_d 0.637 (0.642)	test_acc_d   0.34 (  0.36)	test_minacc_d   0.57 (  0.69)	test_majacc_d   0.30 (  0.30)	test_corr_d   0.27 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.52it/s]
Test: [  0/  1]	Loss 1.211 (1.211)	test_acc   0.65 (  0.65)	test_minacc   0.67 (  0.67)	test_majacc   0.42 (  0.42)	Loss_d 1.211 (1.211)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.211 (1.211)	test_acc   0.65 (  0.65)	test_minacc   0.67 (  0.67)	test_majacc   0.42 (  0.42)	Loss_d 1.211 (1.211)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.12 (  0.12)
Overall Timing[ 49/  1]	epoch_time 0.0415 (0.0396)	validation_time 0.0005 (0.0005)	train_time 0.0410 (0.0390)
record: (train_acc, test_acc) (0.883900024175644, 0.6330000162124634)
last accs (train_acc, test_acc) (0.3591000087857246, 0.6450000405311584)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.093 MB of 0.093 MB uploadedwandb: \ 0.093 MB of 0.093 MB uploadedwandb: | 0.093 MB of 0.093 MB uploadedwandb: / 0.093 MB of 0.093 MB uploadedwandb: - 0.093 MB of 0.093 MB uploadedwandb: \ 0.038 MB of 0.498 MB uploaded (0.003 MB deduped)wandb: | 0.498 MB of 0.498 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                           global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/diagnostics/epoch_time_val █▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▂▂▂▂▂▃▂▂▂▂▂▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/diagnostics/train_time_val █▂▂▃▂▂▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▁▁▁▂▁▂▂▂▂▂▃▂▂▂▂▂▂▂▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/Loss_avg ▄▄▄▃▃▄▄▄▅▅▄▅▂▁▁▂▃▄▄█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/Loss_d_avg ▄▄▄▃▃▄▄▄▅▅▄▅▂▁▁▂▃▄▄█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/Loss_d_val ▄▄▄▃▃▄▄▄▅▅▄▅▂▁▁▂▃▄▄█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/Loss_val ▄▄▄▃▃▄▄▄▅▅▄▅▂▁▁▂▃▄▄█▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_acc_avg ▁▁▂▃▃▃▄▄▅▄▅▅▆▆▇▆▆▆▆▅▇█▇▇▆▆▇▆▆▆▆▆▆▆▆▆▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_acc_d_avg ▁▁▂▃▃▃▄▄▅▄▅▅▆▆▇▆▆▆▆▅▇█▇▇▆▆▇▆▆▆▆▆▆▆▆▆▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_acc_d_val ▁▁▂▃▃▃▄▄▅▄▅▅▆▆▇▆▆▆▆▅▇█▇▇▆▆▇▆▆▆▆▆▆▆▆▆▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_acc_val ▁▁▂▃▃▃▄▄▅▄▅▅▆▆▇▆▆▆▆▅▇█▇▇▆▆▇▆▆▆▆▆▆▆▆▆▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_corr_d_avg ██▇▆▆▆▅▅▄▅▄▄▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_corr_d_val ██▇▆▆▆▅▅▄▅▄▄▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_majacc_avg ██████▇▇█▇█▇▇▇▇▇▇▇▇▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_majacc_d_avg ██████▇▇█▇█▇▇▇▇▇▇▇▇▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_majacc_d_val ██████▇▇█▇█▇▇▇▇▇▇▇▇▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_majacc_val ██████▇▇█▇█▇▇▇▇▇▇▇▇▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_minacc_avg ▁▁▂▃▃▃▄▄▄▄▅▄▆▆▆▆▆▆▆▆▇█▇▇▇▇▇▇▇▇▆▆▆▆▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_minacc_d_avg ▁▁▂▃▃▃▄▄▄▄▅▄▆▆▆▆▆▆▆▆▇█▇▇▇▇▇▇▇▇▆▆▆▆▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_minacc_d_val ▁▁▂▃▃▃▄▄▄▄▅▄▆▆▆▆▆▆▆▆▇█▇▇▇▇▇▇▇▇▆▆▆▆▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_minacc_val ▁▁▂▃▃▃▄▄▄▄▅▄▆▆▆▆▆▆▆▆▇█▇▇▇▇▇▇▇▇▆▆▆▆▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/Loss_avg █▆▆▆▆▅▅▅▄▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/Loss_val ███▇▆▆▆▅▄▄▅▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/l1_avg ▇███▅▄▄▅▅▅▆▇▅▂▁▂▃▃▃▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/l1_val ▆██▇▄▄▅▅▅▅▄▅▃▁▁▁▄▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_acc_avg ▆▇▇▇▇▇▇███████▇█████▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_acc_val ▇▇▇▇▇▇▇▇█████▇▇█▇▇██▅▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_majacc_avg ▇███████████▇▇▇▇▇▇▇▇▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_majacc_val ██████▇█████▇▇▇▇▇▆▇▇▄▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_minacc_avg ▁▁▁▂▃▄▄▅▅▅▆▆▇█████▇█▆██▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_minacc_val ▁▁▂▃▃▂▅▄▆▇▆▇█▇█████▇██▇▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_nll_avg ▆▄▄▃▃▃▂▂▂▂▁▁▁▂▂▂▂▁▁▁▇███████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_nll_val ▅▄▄▃▃▃▂▂▁▁▂▁▁▃▃▂▂▃▁▁████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_penalty_avg █▃▃▃▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_penalty_val ▇█▇▄▄▃▂▂▁▂▂▁▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/weight_norm_avg ▁▄▄▄▄▄▄▄▄▅▅▅▆▆▆▆▆▆▆▆████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/weight_norm_val ▁▂▂▂▂▃▃▃▃▃▄▄▅▅▅▅▅▅▅▅████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                           global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/diagnostics/epoch_time_val 0.04149
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/diagnostics/train_time_val 0.04103
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/diagnostics/validation_time_val 0.00045
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/Loss_avg 1.21124
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/Loss_d_avg 1.21124
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/Loss_d_val 1.21124
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/Loss_val 1.21124
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_acc_avg 0.645
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_acc_d_avg 0.645
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_acc_d_val 0.645
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_acc_val 0.645
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_corr_d_avg 0.12064
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_corr_d_val 0.12064
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_majacc_avg 0.42
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_majacc_d_avg 0.42
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_majacc_d_val 0.42
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_majacc_val 0.42
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_minacc_avg 0.67
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_minacc_d_avg 0.67
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_minacc_d_val 0.67
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/test/test_minacc_val 0.67
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/Loss_avg 7e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/Loss_val 7e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/l1_avg 7.75473
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/l1_val 7.7616
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_acc_avg 0.406
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_acc_val 0.344
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_majacc_avg 0.36864
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_majacc_val 0.30516
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_minacc_avg 0.62103
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_minacc_val 0.56757
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_nll_avg 0.63667
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_nll_val 0.63587
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_penalty_avg 1e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/weight_norm_avg 28.03241
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/weight_norm_val 28.03265
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/90/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/2rwbu5nm
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_152750-2rwbu5nm/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_153036-cypmcvor
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/cypmcvor
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1122
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6046, 3, 32, 32) (5954, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:37,  1.51s/it] 23%|##3       | 6/26 [00:01<00:04,  4.83it/s] 38%|###8      | 10/26 [00:01<00:01,  8.63it/s] 58%|#####7    | 15/26 [00:01<00:00, 13.69it/s] 73%|#######3  | 19/26 [00:01<00:00, 17.32it/s] 88%|########8 | 23/26 [00:02<00:00, 20.81it/s]100%|##########| 26/26 [00:02<00:00, 10.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.397 (0.534)	train_nll   0.40 (  0.53)	train_penalty   0.03 (  0.27)	weight_norm  20.84 ( 18.12)	train_acc   0.85 (  0.81)	train_minacc   0.00 (  0.07)	train_majacc   0.98 (  0.94)	train_corr   0.00 (  0.00)	l1 7.5263 (8.5159)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.30it/s] 27%|##6       | 7/26 [00:00<00:00, 29.84it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.84it/s] 46%|####6     | 12/26 [00:00<00:00, 37.30it/s] 65%|######5   | 17/26 [00:00<00:00, 40.21it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.21it/s] 88%|########8 | 23/26 [00:00<00:00, 44.88it/s]100%|##########| 26/26 [00:00<00:00, 35.34it/s]
Test: [   0/  26]	Loss 0.450 (0.450)	test_acc   0.82 (  0.82)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.450 (0.450)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.402 (0.430)	test_acc   0.85 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.402 (0.430)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.448 (0.421)	test_acc   0.83 (  0.84)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.448 (0.421)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  26/  26]	Loss 0.393 (0.419)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.393 (0.419)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.57it/s]100%|##########| 1/1 [00:00<00:00,  2.56it/s]
Test: [  0/  1]	Loss 1.730 (1.730)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.730 (1.730)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.730 (1.730)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.730 (1.730)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0798 (0.0798)	validation_time 0.0067 (0.0067)	train_time 0.0694 (0.0694)
record: (train_acc, test_acc) (0.8457000266909599, 0.10500000417232513)
last accs (train_acc, test_acc) (0.8457000266909599, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 19%|#9        | 5/26 [00:00<00:00, 22.16it/s] 35%|###4      | 9/26 [00:00<00:00, 26.89it/s] 50%|#####     | 13/26 [00:00<00:00, 30.18it/s] 65%|######5   | 17/26 [00:00<00:00, 32.51it/s] 81%|########  | 21/26 [00:00<00:00, 34.28it/s]100%|##########| 26/26 [00:00<00:00, 36.68it/s]100%|##########| 26/26 [00:00<00:00, 29.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.381 (0.407)	train_nll   0.38 (  0.41)	train_penalty   0.03 (  0.06)	weight_norm  21.93 ( 21.59)	train_acc   0.86 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 7.2409 (7.4441)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 23%|##3       | 6/26 [00:00<00:00, 26.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.90it/s] 42%|####2     | 11/26 [00:00<00:00, 35.55it/s] 62%|######1   | 16/26 [00:00<00:00, 39.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.11it/s] 81%|########  | 21/26 [00:00<00:00, 41.64it/s]100%|##########| 26/26 [00:00<00:00, 43.89it/s]100%|##########| 26/26 [00:00<00:00, 35.05it/s]
Test: [   0/  26]	Loss 0.433 (0.433)	test_acc   0.83 (  0.83)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.433 (0.433)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.399 (0.418)	test_acc   0.85 (  0.84)	test_minacc   0.00 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.399 (0.418)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.00 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.418 (0.406)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.418 (0.406)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  26/  26]	Loss 0.374 (0.404)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.374 (0.404)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.41it/s]
Test: [  0/  1]	Loss 1.777 (1.777)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.777 (1.777)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.777 (1.777)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.777 (1.777)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0406 (0.0602)	validation_time 0.0004 (0.0036)	train_time 0.0401 (0.0548)
record: (train_acc, test_acc) (0.8462000290751457, 0.1120000034570694)
last accs (train_acc, test_acc) (0.8462000290751457, 0.1120000034570694)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.11it/s] 19%|#9        | 5/26 [00:00<00:00, 21.99it/s] 35%|###4      | 9/26 [00:00<00:00, 27.57it/s] 50%|#####     | 13/26 [00:00<00:00, 30.38it/s] 65%|######5   | 17/26 [00:00<00:00, 31.81it/s] 81%|########  | 21/26 [00:00<00:00, 33.18it/s] 96%|#########6| 25/26 [00:00<00:00, 33.76it/s]100%|##########| 26/26 [00:00<00:00, 28.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.360 (0.391)	train_nll   0.36 (  0.39)	train_penalty   0.03 (  0.05)	weight_norm  22.07 ( 22.02)	train_acc   0.86 (  0.85)	train_minacc   0.03 (  0.05)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.1102 (7.2749)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.23it/s] 27%|##6       | 7/26 [00:00<00:00, 27.88it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.88it/s] 46%|####6     | 12/26 [00:00<00:00, 32.97it/s] 65%|######5   | 17/26 [00:00<00:00, 38.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.10it/s] 85%|########4 | 22/26 [00:00<00:00, 41.26it/s]100%|##########| 26/26 [00:00<00:00, 33.08it/s]
Test: [   0/  26]	Loss 0.436 (0.436)	test_acc   0.83 (  0.83)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.436 (0.436)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.389 (0.411)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.389 (0.411)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.411 (0.398)	test_acc   0.84 (  0.85)	test_minacc   0.06 (  0.04)	test_majacc   1.00 (  0.99)	Loss_d 0.411 (0.398)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.06 (  0.04)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.357 (0.395)	test_acc   0.87 (  0.85)	test_minacc   0.03 (  0.04)	test_majacc   1.00 (  0.99)	Loss_d 0.357 (0.395)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.03 (  0.04)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.04it/s]
Test: [  0/  1]	Loss 1.952 (1.952)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.952 (1.952)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.952 (1.952)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.952 (1.952)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  2/  1]	epoch_time 0.0434 (0.0546)	validation_time 0.0007 (0.0026)	train_time 0.0427 (0.0507)
record: (train_acc, test_acc) (0.8462000290751457, 0.1120000034570694)
last accs (train_acc, test_acc) (0.8502000222802162, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.93it/s] 23%|##3       | 6/26 [00:00<00:00, 29.73it/s] 38%|###8      | 10/26 [00:00<00:00, 32.90it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.04it/s] 69%|######9   | 18/26 [00:00<00:00, 34.89it/s] 85%|########4 | 22/26 [00:00<00:00, 35.80it/s]100%|##########| 26/26 [00:00<00:00, 36.01it/s]100%|##########| 26/26 [00:00<00:00, 31.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.326 (0.368)	train_nll   0.33 (  0.37)	train_penalty   0.02 (  0.04)	weight_norm  22.16 ( 22.12)	train_acc   0.86 (  0.85)	train_minacc   0.09 (  0.12)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 6.7766 (7.1165)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.74it/s] 23%|##3       | 6/26 [00:00<00:00, 33.05it/s]                                               23%|##3       | 6/26 [00:00<00:00, 33.05it/s] 42%|####2     | 11/26 [00:00<00:00, 39.57it/s] 62%|######1   | 16/26 [00:00<00:00, 42.24it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.24it/s] 81%|########  | 21/26 [00:00<00:00, 40.94it/s]100%|##########| 26/26 [00:00<00:00, 37.66it/s]
Test: [   0/  26]	Loss 0.419 (0.419)	test_acc   0.82 (  0.82)	test_minacc   0.06 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 0.419 (0.419)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.372 (0.392)	test_acc   0.87 (  0.84)	test_minacc   0.13 (  0.08)	test_majacc   0.99 (  0.98)	Loss_d 0.372 (0.392)	test_acc_d   0.87 (  0.84)	test_minacc_d   0.13 (  0.08)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.396 (0.378)	test_acc   0.86 (  0.85)	test_minacc   0.18 (  0.09)	test_majacc   1.00 (  0.98)	Loss_d 0.396 (0.378)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.18 (  0.09)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.322 (0.374)	test_acc   0.86 (  0.85)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.98)	Loss_d 0.322 (0.374)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.11it/s]
Test: [  0/  1]	Loss 1.955 (1.955)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.955 (1.955)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.955 (1.955)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.955 (1.955)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0422 (0.0515)	validation_time 0.0003 (0.0020)	train_time 0.0419 (0.0485)
record: (train_acc, test_acc) (0.8500000185966492, 0.11700000613927841)
last accs (train_acc, test_acc) (0.8500000185966492, 0.11700000613927841)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.55it/s] 23%|##3       | 6/26 [00:00<00:00, 24.96it/s] 38%|###8      | 10/26 [00:00<00:00, 30.01it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.38it/s] 69%|######9   | 18/26 [00:00<00:00, 35.08it/s] 85%|########4 | 22/26 [00:00<00:00, 36.28it/s]100%|##########| 26/26 [00:00<00:00, 37.33it/s]100%|##########| 26/26 [00:00<00:00, 30.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.319 (0.345)	train_nll   0.32 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.27 ( 22.22)	train_acc   0.85 (  0.85)	train_minacc   0.12 (  0.20)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 6.5838 (6.9568)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.55it/s] 23%|##3       | 6/26 [00:00<00:00, 25.08it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.08it/s] 42%|####2     | 11/26 [00:00<00:00, 32.31it/s] 65%|######5   | 17/26 [00:00<00:00, 36.52it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.52it/s] 85%|########4 | 22/26 [00:00<00:00, 39.64it/s]100%|##########| 26/26 [00:00<00:00, 31.53it/s]
Test: [   0/  26]	Loss 0.392 (0.392)	test_acc   0.81 (  0.81)	test_minacc   0.10 (  0.10)	test_majacc   0.96 (  0.96)	Loss_d 0.392 (0.392)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.348 (0.367)	test_acc   0.86 (  0.84)	test_minacc   0.22 (  0.16)	test_majacc   0.97 (  0.97)	Loss_d 0.348 (0.367)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.22 (  0.16)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.376 (0.352)	test_acc   0.86 (  0.85)	test_minacc   0.21 (  0.18)	test_majacc   0.99 (  0.97)	Loss_d 0.376 (0.352)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.21 (  0.18)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.307 (0.349)	test_acc   0.85 (  0.85)	test_minacc   0.12 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 0.307 (0.349)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.12 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.55it/s]
Test: [  0/  1]	Loss 1.922 (1.922)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 1.922 (1.922)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.89 (  0.89)
Test: [  1/  1]	Loss 1.922 (1.922)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 1.922 (1.922)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.89 (  0.89)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0396 (0.0491)	validation_time 0.0005 (0.0017)	train_time 0.0391 (0.0466)
record: (train_acc, test_acc) (0.8520000298023224, 0.17800000309944153)
last accs (train_acc, test_acc) (0.8520000298023224, 0.17800000309944153)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.09it/s] 19%|#9        | 5/26 [00:00<00:00, 25.86it/s] 35%|###4      | 9/26 [00:00<00:00, 30.56it/s] 50%|#####     | 13/26 [00:00<00:00, 32.05it/s] 65%|######5   | 17/26 [00:00<00:00, 32.82it/s] 81%|########  | 21/26 [00:00<00:00, 34.37it/s] 96%|#########6| 25/26 [00:00<00:00, 35.85it/s]100%|##########| 26/26 [00:00<00:00, 30.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.302 (0.328)	train_nll   0.30 (  0.33)	train_penalty   0.01 (  0.02)	weight_norm  22.40 ( 22.34)	train_acc   0.85 (  0.86)	train_minacc   0.18 (  0.28)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.5869 (6.8943)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.51it/s] 15%|#5        | 4/26 [00:00<00:01, 13.90it/s] 35%|###4      | 9/26 [00:00<00:00, 25.90it/s]                                               35%|###4      | 9/26 [00:00<00:00, 25.90it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.23it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.77it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.77it/s] 92%|#########2| 24/26 [00:00<00:00, 37.83it/s]100%|##########| 26/26 [00:00<00:00, 30.47it/s]
Test: [   0/  26]	Loss 0.377 (0.377)	test_acc   0.83 (  0.83)	test_minacc   0.15 (  0.15)	test_majacc   0.98 (  0.98)	Loss_d 0.377 (0.377)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.344 (0.362)	test_acc   0.87 (  0.85)	test_minacc   0.25 (  0.17)	test_majacc   0.97 (  0.97)	Loss_d 0.344 (0.362)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.25 (  0.17)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.365 (0.343)	test_acc   0.86 (  0.86)	test_minacc   0.22 (  0.18)	test_majacc   0.99 (  0.98)	Loss_d 0.365 (0.343)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.22 (  0.18)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.293 (0.339)	test_acc   0.85 (  0.86)	test_minacc   0.12 (  0.18)	test_majacc   0.97 (  0.98)	Loss_d 0.293 (0.339)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.12 (  0.18)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.59it/s]
Test: [  0/  1]	Loss 2.001 (2.001)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 2.001 (2.001)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.89 (  0.89)
Test: [  1/  1]	Loss 2.001 (2.001)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 2.001 (2.001)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.89 (  0.89)
Overall Timing[  5/  1]	epoch_time 0.0412 (0.0478)	validation_time 0.0004 (0.0015)	train_time 0.0408 (0.0457)
record: (train_acc, test_acc) (0.8520000298023224, 0.17800000309944153)
last accs (train_acc, test_acc) (0.8558000272512436, 0.15800000727176666)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.76it/s] 27%|##6       | 7/26 [00:00<00:00, 29.46it/s] 42%|####2     | 11/26 [00:00<00:00, 31.86it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.96it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.47it/s] 88%|########8 | 23/26 [00:00<00:00, 33.64it/s]100%|##########| 26/26 [00:00<00:00, 30.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.295 (0.317)	train_nll   0.30 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.55 ( 22.48)	train_acc   0.88 (  0.87)	train_minacc   0.38 (  0.33)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.6721 (6.9335)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 35.36it/s] 35%|###4      | 9/26 [00:00<00:00, 41.17it/s]                                               35%|###4      | 9/26 [00:00<00:00, 41.17it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.31it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.31it/s] 92%|#########2| 24/26 [00:00<00:00, 42.49it/s]100%|##########| 26/26 [00:00<00:00, 39.12it/s]
Test: [   0/  26]	Loss 0.365 (0.365)	test_acc   0.83 (  0.83)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 0.365 (0.365)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.334 (0.340)	test_acc   0.87 (  0.85)	test_minacc   0.25 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 0.334 (0.340)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.25 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.348 (0.325)	test_acc   0.85 (  0.86)	test_minacc   0.25 (  0.21)	test_majacc   0.98 (  0.98)	Loss_d 0.348 (0.325)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.25 (  0.21)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.93)
Test: [  26/  26]	Loss 0.283 (0.322)	test_acc   0.86 (  0.86)	test_minacc   0.18 (  0.21)	test_majacc   0.97 (  0.98)	Loss_d 0.283 (0.322)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.18 (  0.21)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.66it/s]
Test: [  0/  1]	Loss 2.050 (2.050)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.98 (  0.98)	Loss_d 2.050 (2.050)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.89 (  0.89)
Test: [  1/  1]	Loss 2.050 (2.050)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.98 (  0.98)	Loss_d 2.050 (2.050)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.89 (  0.89)
Overall Timing[  6/  1]	epoch_time 0.0412 (0.0469)	validation_time 0.0004 (0.0013)	train_time 0.0407 (0.0450)
record: (train_acc, test_acc) (0.8520000298023224, 0.17800000309944153)
last accs (train_acc, test_acc) (0.8615000283718109, 0.15800000727176666)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.72it/s] 19%|#9        | 5/26 [00:00<00:01, 17.93it/s] 35%|###4      | 9/26 [00:00<00:00, 24.56it/s] 50%|#####     | 13/26 [00:00<00:00, 27.73it/s] 65%|######5   | 17/26 [00:00<00:00, 30.45it/s] 81%|########  | 21/26 [00:00<00:00, 32.12it/s] 96%|#########6| 25/26 [00:00<00:00, 33.35it/s]100%|##########| 26/26 [00:00<00:00, 26.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.260 (0.302)	train_nll   0.26 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.74 ( 22.65)	train_acc   0.88 (  0.87)	train_minacc   0.44 (  0.37)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3405 (6.9157)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.40it/s] 27%|##6       | 7/26 [00:00<00:00, 33.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.12it/s] 46%|####6     | 12/26 [00:00<00:00, 38.87it/s] 65%|######5   | 17/26 [00:00<00:00, 39.09it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.09it/s] 85%|########4 | 22/26 [00:00<00:00, 41.94it/s]100%|##########| 26/26 [00:00<00:00, 36.14it/s]
Test: [   0/  26]	Loss 0.338 (0.338)	test_acc   0.83 (  0.83)	test_minacc   0.28 (  0.28)	test_majacc   0.95 (  0.95)	Loss_d 0.338 (0.338)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.308 (0.317)	test_acc   0.87 (  0.86)	test_minacc   0.40 (  0.34)	test_majacc   0.95 (  0.95)	Loss_d 0.308 (0.317)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.40 (  0.34)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.272 (0.293)	test_acc   0.88 (  0.87)	test_minacc   0.43 (  0.35)	test_majacc   0.98 (  0.96)	Loss_d 0.272 (0.293)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.43 (  0.35)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.87 (  0.88)
Test: [  26/  26]	Loss 0.241 (0.288)	test_acc   0.88 (  0.87)	test_minacc   0.26 (  0.36)	test_majacc   0.97 (  0.96)	Loss_d 0.241 (0.288)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.26 (  0.36)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.37it/s]
Test: [  0/  1]	Loss 2.253 (2.253)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 2.253 (2.253)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 2.253 (2.253)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 2.253 (2.253)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.79 (  0.79)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0381 (0.0458)	validation_time 0.0004 (0.0012)	train_time 0.0377 (0.0440)
record: (train_acc, test_acc) (0.8672000193595886, 0.2639999985694885)
last accs (train_acc, test_acc) (0.8672000193595886, 0.2639999985694885)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.85it/s] 15%|#5        | 4/26 [00:00<00:01, 16.33it/s] 31%|###       | 8/26 [00:00<00:00, 25.32it/s] 46%|####6     | 12/26 [00:00<00:00, 30.26it/s] 62%|######1   | 16/26 [00:00<00:00, 33.50it/s] 81%|########  | 21/26 [00:00<00:00, 35.85it/s] 96%|#########6| 25/26 [00:00<00:00, 36.66it/s]100%|##########| 26/26 [00:00<00:00, 29.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.211 (0.281)	train_nll   0.21 (  0.28)	train_penalty   0.00 (  0.01)	weight_norm  22.95 ( 22.85)	train_acc   0.89 (  0.87)	train_minacc   0.56 (  0.43)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 7.6415 (6.9580)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.48it/s] 31%|###       | 8/26 [00:00<00:00, 35.05it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.05it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.61it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.73it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.73it/s] 92%|#########2| 24/26 [00:00<00:00, 43.49it/s]100%|##########| 26/26 [00:00<00:00, 38.61it/s]
Test: [   0/  26]	Loss 0.341 (0.341)	test_acc   0.86 (  0.86)	test_minacc   0.40 (  0.40)	test_majacc   0.96 (  0.96)	Loss_d 0.341 (0.341)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.287 (0.305)	test_acc   0.88 (  0.88)	test_minacc   0.35 (  0.43)	test_majacc   0.96 (  0.96)	Loss_d 0.287 (0.305)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.35 (  0.43)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.87)
Test: [  20/  26]	Loss 0.257 (0.282)	test_acc   0.90 (  0.88)	test_minacc   0.55 (  0.44)	test_majacc   0.97 (  0.96)	Loss_d 0.257 (0.282)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.55 (  0.44)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.85 (  0.87)
Test: [  26/  26]	Loss 0.185 (0.274)	test_acc   0.91 (  0.89)	test_minacc   0.53 (  0.45)	test_majacc   0.97 (  0.96)	Loss_d 0.185 (0.274)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.53 (  0.45)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.98it/s]
Test: [  0/  1]	Loss 2.416 (2.416)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.99 (  0.99)	Loss_d 2.416 (2.416)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 2.416 (2.416)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.99 (  0.99)	Loss_d 2.416 (2.416)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0401 (0.0451)	validation_time 0.0004 (0.0011)	train_time 0.0396 (0.0436)
record: (train_acc, test_acc) (0.8870000276565552, 0.281000018119812)
last accs (train_acc, test_acc) (0.8870000276565552, 0.281000018119812)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 19%|#9        | 5/26 [00:00<00:01, 20.19it/s] 35%|###4      | 9/26 [00:00<00:00, 27.00it/s] 50%|#####     | 13/26 [00:00<00:00, 31.16it/s] 65%|######5   | 17/26 [00:00<00:00, 33.67it/s] 81%|########  | 21/26 [00:00<00:00, 34.64it/s] 96%|#########6| 25/26 [00:00<00:00, 35.09it/s]100%|##########| 26/26 [00:00<00:00, 28.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.210 (0.270)	train_nll   0.21 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  23.16 ( 23.06)	train_acc   0.90 (  0.88)	train_minacc   0.59 (  0.49)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 7.4082 (7.1434)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.32it/s] 31%|###       | 8/26 [00:00<00:00, 38.68it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.68it/s] 50%|#####     | 13/26 [00:00<00:00, 37.91it/s] 69%|######9   | 18/26 [00:00<00:00, 41.42it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.42it/s] 88%|########8 | 23/26 [00:00<00:00, 42.38it/s]100%|##########| 26/26 [00:00<00:00, 36.65it/s]
Test: [   0/  26]	Loss 0.330 (0.330)	test_acc   0.86 (  0.86)	test_minacc   0.35 (  0.35)	test_majacc   0.97 (  0.97)	Loss_d 0.330 (0.330)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.288 (0.297)	test_acc   0.87 (  0.87)	test_minacc   0.38 (  0.36)	test_majacc   0.96 (  0.96)	Loss_d 0.288 (0.297)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.38 (  0.36)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  20/  26]	Loss 0.267 (0.281)	test_acc   0.87 (  0.88)	test_minacc   0.39 (  0.38)	test_majacc   0.97 (  0.96)	Loss_d 0.267 (0.281)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.39 (  0.38)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.87 (  0.89)
Test: [  26/  26]	Loss 0.177 (0.273)	test_acc   0.93 (  0.88)	test_minacc   0.62 (  0.40)	test_majacc   0.98 (  0.97)	Loss_d 0.177 (0.273)	test_acc_d   0.93 (  0.88)	test_minacc_d   0.62 (  0.40)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.88 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.44it/s]
Test: [  0/  1]	Loss 2.444 (2.444)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   1.00 (  1.00)	Loss_d 2.444 (2.444)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 2.444 (2.444)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   1.00 (  1.00)	Loss_d 2.444 (2.444)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.79 (  0.79)
Overall Timing[  9/  1]	epoch_time 0.0366 (0.0443)	validation_time 0.0004 (0.0011)	train_time 0.0362 (0.0428)
record: (train_acc, test_acc) (0.8870000276565552, 0.281000018119812)
last accs (train_acc, test_acc) (0.8800000264644623, 0.27400001883506775)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.48it/s] 19%|#9        | 5/26 [00:00<00:01, 19.24it/s] 35%|###4      | 9/26 [00:00<00:00, 25.72it/s] 50%|#####     | 13/26 [00:00<00:00, 29.47it/s] 65%|######5   | 17/26 [00:00<00:00, 31.74it/s] 81%|########  | 21/26 [00:00<00:00, 33.02it/s] 96%|#########6| 25/26 [00:00<00:00, 34.50it/s]100%|##########| 26/26 [00:00<00:00, 27.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.165 (0.259)	train_nll   0.16 (  0.26)	train_penalty   0.01 (  0.01)	weight_norm  23.39 ( 23.28)	train_acc   0.93 (  0.89)	train_minacc   0.71 (  0.55)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.3588 (7.2469)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02, 10.00it/s] 27%|##6       | 7/26 [00:00<00:00, 34.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.96it/s] 46%|####6     | 12/26 [00:00<00:00, 40.07it/s] 65%|######5   | 17/26 [00:00<00:00, 42.76it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.76it/s] 88%|########8 | 23/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 38.63it/s]
Test: [   0/  26]	Loss 0.307 (0.307)	test_acc   0.87 (  0.87)	test_minacc   0.46 (  0.46)	test_majacc   0.96 (  0.96)	Loss_d 0.307 (0.307)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.296 (0.274)	test_acc   0.86 (  0.88)	test_minacc   0.40 (  0.49)	test_majacc   0.94 (  0.95)	Loss_d 0.296 (0.274)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.40 (  0.49)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  20/  26]	Loss 0.221 (0.259)	test_acc   0.89 (  0.89)	test_minacc   0.57 (  0.51)	test_majacc   0.96 (  0.95)	Loss_d 0.221 (0.259)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.57 (  0.51)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.83 (  0.85)
Test: [  26/  26]	Loss 0.149 (0.252)	test_acc   0.94 (  0.89)	test_minacc   0.76 (  0.52)	test_majacc   0.97 (  0.95)	Loss_d 0.149 (0.252)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.76 (  0.52)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.84 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.73it/s]
Test: [  0/  1]	Loss 2.361 (2.361)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.97 (  0.97)	Loss_d 2.361 (2.361)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 2.361 (2.361)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.97 (  0.97)	Loss_d 2.361 (2.361)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.72 (  0.72)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0397 (0.0439)	validation_time 0.0004 (0.0010)	train_time 0.0392 (0.0425)
record: (train_acc, test_acc) (0.8900000243782997, 0.31300002336502075)
last accs (train_acc, test_acc) (0.8900000243782997, 0.31300002336502075)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.12it/s] 27%|##6       | 7/26 [00:00<00:00, 30.69it/s] 42%|####2     | 11/26 [00:00<00:00, 28.99it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.18it/s] 88%|########8 | 23/26 [00:00<00:00, 33.50it/s]100%|##########| 26/26 [00:00<00:00, 29.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.157 (0.233)	train_nll   0.16 (  0.23)	train_penalty   0.01 (  0.01)	weight_norm  23.64 ( 23.52)	train_acc   0.93 (  0.90)	train_minacc   0.68 (  0.63)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.4021 (7.6607)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.35it/s] 27%|##6       | 7/26 [00:00<00:00, 37.59it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.59it/s] 50%|#####     | 13/26 [00:00<00:00, 43.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.89it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.89it/s] 92%|#########2| 24/26 [00:00<00:00, 44.75it/s]100%|##########| 26/26 [00:00<00:00, 38.72it/s]
Test: [   0/  26]	Loss 0.285 (0.285)	test_acc   0.88 (  0.88)	test_minacc   0.46 (  0.46)	test_majacc   0.97 (  0.97)	Loss_d 0.285 (0.285)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.255 (0.249)	test_acc   0.90 (  0.90)	test_minacc   0.56 (  0.58)	test_majacc   0.95 (  0.96)	Loss_d 0.255 (0.249)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.85 (  0.84)
Test: [  20/  26]	Loss 0.218 (0.237)	test_acc   0.91 (  0.90)	test_minacc   0.57 (  0.58)	test_majacc   0.98 (  0.96)	Loss_d 0.218 (0.237)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  26/  26]	Loss 0.143 (0.231)	test_acc   0.94 (  0.90)	test_minacc   0.76 (  0.59)	test_majacc   0.97 (  0.96)	Loss_d 0.143 (0.231)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.76 (  0.59)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.85 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.91it/s]
Test: [  0/  1]	Loss 2.479 (2.479)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 2.479 (2.479)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 2.479 (2.479)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 2.479 (2.479)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.72 (  0.72)
Overall Timing[ 11/  1]	epoch_time 0.0394 (0.0435)	validation_time 0.0004 (0.0009)	train_time 0.0390 (0.0422)
record: (train_acc, test_acc) (0.8900000243782997, 0.31300002336502075)
last accs (train_acc, test_acc) (0.9043000177145004, 0.30900001525878906)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.55it/s] 19%|#9        | 5/26 [00:00<00:01, 17.65it/s] 35%|###4      | 9/26 [00:00<00:00, 24.69it/s] 50%|#####     | 13/26 [00:00<00:00, 29.26it/s] 65%|######5   | 17/26 [00:00<00:00, 31.94it/s] 81%|########  | 21/26 [00:00<00:00, 33.59it/s] 96%|#########6| 25/26 [00:00<00:00, 35.17it/s]100%|##########| 26/26 [00:00<00:00, 27.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.155 (0.221)	train_nll   0.16 (  0.22)	train_penalty   0.01 (  0.01)	weight_norm  23.99 ( 23.81)	train_acc   0.94 (  0.91)	train_minacc   0.71 (  0.67)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.3018 (7.8404)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.41it/s] 27%|##6       | 7/26 [00:00<00:00, 33.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.14it/s] 46%|####6     | 12/26 [00:00<00:00, 40.17it/s] 69%|######9   | 18/26 [00:00<00:00, 41.02it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.02it/s] 88%|########8 | 23/26 [00:00<00:00, 42.61it/s]100%|##########| 26/26 [00:00<00:00, 38.24it/s]
Test: [   0/  26]	Loss 0.298 (0.298)	test_acc   0.88 (  0.88)	test_minacc   0.40 (  0.40)	test_majacc   0.98 (  0.98)	Loss_d 0.298 (0.298)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.243 (0.249)	test_acc   0.90 (  0.89)	test_minacc   0.45 (  0.51)	test_majacc   0.97 (  0.97)	Loss_d 0.243 (0.249)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.45 (  0.51)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.88)
Test: [  20/  26]	Loss 0.231 (0.242)	test_acc   0.88 (  0.90)	test_minacc   0.49 (  0.52)	test_majacc   0.97 (  0.96)	Loss_d 0.231 (0.242)	test_acc_d   0.88 (  0.90)	test_minacc_d   0.49 (  0.52)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.87 (  0.88)
Test: [  26/  26]	Loss 0.137 (0.234)	test_acc   0.96 (  0.90)	test_minacc   0.79 (  0.54)	test_majacc   0.99 (  0.97)	Loss_d 0.137 (0.234)	test_acc_d   0.96 (  0.90)	test_minacc_d   0.79 (  0.54)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.87 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.05it/s]
Test: [  0/  1]	Loss 2.527 (2.527)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.97 (  0.97)	Loss_d 2.527 (2.527)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 2.527 (2.527)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.97 (  0.97)	Loss_d 2.527 (2.527)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
Overall Timing[ 12/  1]	epoch_time 0.0422 (0.0434)	validation_time 0.0005 (0.0009)	train_time 0.0417 (0.0422)
record: (train_acc, test_acc) (0.8900000243782997, 0.31300002336502075)
last accs (train_acc, test_acc) (0.9025000264644623, 0.26600000262260437)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.36it/s] 19%|#9        | 5/26 [00:00<00:00, 24.85it/s] 35%|###4      | 9/26 [00:00<00:00, 29.65it/s] 50%|#####     | 13/26 [00:00<00:00, 32.04it/s] 65%|######5   | 17/26 [00:00<00:00, 33.38it/s] 81%|########  | 21/26 [00:00<00:00, 34.14it/s] 96%|#########6| 25/26 [00:00<00:00, 34.54it/s]100%|##########| 26/26 [00:00<00:00, 29.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.147 (0.213)	train_nll   0.15 (  0.21)	train_penalty   0.00 (  0.01)	weight_norm  24.36 ( 24.18)	train_acc   0.94 (  0.91)	train_minacc   0.74 (  0.67)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 8.0317 (7.8414)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 27%|##6       | 7/26 [00:00<00:00, 33.65it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.65it/s] 50%|#####     | 13/26 [00:00<00:00, 41.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.29it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.29it/s] 92%|#########2| 24/26 [00:00<00:00, 43.98it/s]100%|##########| 26/26 [00:00<00:00, 37.61it/s]
Test: [   0/  26]	Loss 0.289 (0.289)	test_acc   0.89 (  0.89)	test_minacc   0.53 (  0.53)	test_majacc   0.97 (  0.97)	Loss_d 0.289 (0.289)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.244 (0.247)	test_acc   0.91 (  0.90)	test_minacc   0.56 (  0.55)	test_majacc   0.97 (  0.97)	Loss_d 0.244 (0.247)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.86)
Test: [  20/  26]	Loss 0.231 (0.236)	test_acc   0.90 (  0.90)	test_minacc   0.54 (  0.55)	test_majacc   0.98 (  0.97)	Loss_d 0.231 (0.236)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.85 (  0.86)
Test: [  26/  26]	Loss 0.116 (0.226)	test_acc   0.96 (  0.91)	test_minacc   0.74 (  0.57)	test_majacc   1.00 (  0.97)	Loss_d 0.116 (0.226)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.74 (  0.57)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.87 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.96it/s]
Test: [  0/  1]	Loss 2.716 (2.716)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.99 (  0.99)	Loss_d 2.716 (2.716)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 2.716 (2.716)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.99 (  0.99)	Loss_d 2.716 (2.716)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0388 (0.0431)	validation_time 0.0004 (0.0009)	train_time 0.0384 (0.0419)
record: (train_acc, test_acc) (0.9074000170826912, 0.33400002121925354)
last accs (train_acc, test_acc) (0.9074000170826912, 0.33400002121925354)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.50it/s] 15%|#5        | 4/26 [00:00<00:01, 15.61it/s] 31%|###       | 8/26 [00:00<00:00, 23.25it/s] 46%|####6     | 12/26 [00:00<00:00, 27.19it/s] 62%|######1   | 16/26 [00:00<00:00, 30.10it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.95it/s] 92%|#########2| 24/26 [00:00<00:00, 32.28it/s]100%|##########| 26/26 [00:00<00:00, 26.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.135 (0.195)	train_nll   0.14 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm  24.84 ( 24.61)	train_acc   0.95 (  0.92)	train_minacc   0.82 (  0.71)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 8.6001 (8.2828)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.53it/s] 31%|###       | 8/26 [00:00<00:00, 34.82it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.82it/s] 50%|#####     | 13/26 [00:00<00:00, 40.33it/s] 69%|######9   | 18/26 [00:00<00:00, 43.29it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.29it/s] 92%|#########2| 24/26 [00:00<00:00, 43.40it/s]100%|##########| 26/26 [00:00<00:00, 38.39it/s]
Test: [   0/  26]	Loss 0.268 (0.268)	test_acc   0.89 (  0.89)	test_minacc   0.59 (  0.59)	test_majacc   0.96 (  0.96)	Loss_d 0.268 (0.268)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.219 (0.224)	test_acc   0.91 (  0.91)	test_minacc   0.67 (  0.69)	test_majacc   0.95 (  0.95)	Loss_d 0.219 (0.224)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.67 (  0.69)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.80 (  0.79)
Test: [  20/  26]	Loss 0.170 (0.208)	test_acc   0.93 (  0.92)	test_minacc   0.78 (  0.71)	test_majacc   0.96 (  0.95)	Loss_d 0.170 (0.208)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.78 (  0.71)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.76 (  0.79)
Test: [  26/  26]	Loss 0.084 (0.195)	test_acc   0.98 (  0.92)	test_minacc   0.94 (  0.73)	test_majacc   0.98 (  0.96)	Loss_d 0.084 (0.195)	test_acc_d   0.98 (  0.92)	test_minacc_d   0.94 (  0.73)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.79 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 49.77it/s]
Test: [  0/  1]	Loss 2.722 (2.722)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.96 (  0.96)	Loss_d 2.722 (2.722)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 2.722 (2.722)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.96 (  0.96)	Loss_d 2.722 (2.722)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.49 (  0.49)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0408 (0.0429)	validation_time 0.0008 (0.0009)	train_time 0.0399 (0.0418)
record: (train_acc, test_acc) (0.9225000214576721, 0.4100000262260437)
last accs (train_acc, test_acc) (0.9225000214576721, 0.4100000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.17it/s] 23%|##3       | 6/26 [00:00<00:00, 27.79it/s] 38%|###8      | 10/26 [00:00<00:00, 31.25it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.01it/s] 69%|######9   | 18/26 [00:00<00:00, 34.24it/s] 85%|########4 | 22/26 [00:00<00:00, 34.68it/s]100%|##########| 26/26 [00:00<00:00, 35.19it/s]100%|##########| 26/26 [00:00<00:00, 30.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.001 (0.086)	train_nll   0.32 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  25.25 ( 25.07)	train_acc   0.84 (  0.89)	train_minacc   0.85 (  0.71)	train_majacc   0.84 (  0.92)	train_corr   0.00 (  0.00)	l1 5.8938 (7.5208)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.67it/s] 27%|##6       | 7/26 [00:00<00:00, 34.48it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.48it/s] 46%|####6     | 12/26 [00:00<00:00, 37.35it/s] 65%|######5   | 17/26 [00:00<00:00, 40.62it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.62it/s] 85%|########4 | 22/26 [00:00<00:00, 42.06it/s]100%|##########| 26/26 [00:00<00:00, 37.04it/s]
Test: [   0/  26]	Loss 0.337 (0.337)	test_acc   0.83 (  0.83)	test_minacc   0.81 (  0.81)	test_majacc   0.84 (  0.84)	Loss_d 0.337 (0.337)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.331 (0.318)	test_acc   0.82 (  0.84)	test_minacc   0.80 (  0.86)	test_majacc   0.82 (  0.83)	Loss_d 0.331 (0.318)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.80 (  0.86)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.62 (  0.60)
Test: [  20/  26]	Loss 0.319 (0.321)	test_acc   0.84 (  0.83)	test_minacc   0.84 (  0.87)	test_majacc   0.84 (  0.83)	Loss_d 0.319 (0.321)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.84 (  0.87)	test_majacc_d   0.84 (  0.83)	test_corr_d   0.59 (  0.60)
Test: [  26/  26]	Loss 0.315 (0.323)	test_acc   0.85 (  0.84)	test_minacc   0.85 (  0.86)	test_majacc   0.85 (  0.83)	Loss_d 0.315 (0.323)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.85 (  0.86)	test_majacc_d   0.85 (  0.83)	test_corr_d   0.61 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.76it/s]
Test: [  0/  1]	Loss 1.480 (1.480)	test_acc   0.55 (  0.55)	test_minacc   0.51 (  0.51)	test_majacc   0.90 (  0.90)	Loss_d 1.480 (1.480)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.480 (1.480)	test_acc   0.55 (  0.55)	test_minacc   0.51 (  0.51)	test_majacc   0.90 (  0.90)	Loss_d 1.480 (1.480)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.24 (  0.24)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0384 (0.0426)	validation_time 0.0004 (0.0008)	train_time 0.0380 (0.0415)
record: (train_acc, test_acc) (0.835600021481514, 0.5530000329017639)
last accs (train_acc, test_acc) (0.835600021481514, 0.5530000329017639)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.21it/s] 23%|##3       | 6/26 [00:00<00:00, 25.85it/s] 38%|###8      | 10/26 [00:00<00:00, 29.53it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.60it/s] 69%|######9   | 18/26 [00:00<00:00, 32.03it/s] 85%|########4 | 22/26 [00:00<00:00, 33.21it/s]100%|##########| 26/26 [00:00<00:00, 34.07it/s]100%|##########| 26/26 [00:00<00:00, 28.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.002 (0.002)	train_nll   0.42 (  0.38)	train_penalty   0.00 (  0.00)	weight_norm  25.34 ( 25.31)	train_acc   0.76 (  0.79)	train_minacc   0.91 (  0.86)	train_majacc   0.73 (  0.78)	train_corr   0.00 (  0.00)	l1 5.3966 (5.3410)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.46it/s] 19%|#9        | 5/26 [00:00<00:00, 23.94it/s] 38%|###8      | 10/26 [00:00<00:00, 33.97it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.97it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.30it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.30it/s] 92%|#########2| 24/26 [00:00<00:00, 37.69it/s]100%|##########| 26/26 [00:00<00:00, 32.56it/s]
Test: [   0/  26]	Loss 0.418 (0.418)	test_acc   0.75 (  0.75)	test_minacc   0.82 (  0.82)	test_majacc   0.74 (  0.74)	Loss_d 0.418 (0.418)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.428 (0.417)	test_acc   0.74 (  0.76)	test_minacc   0.80 (  0.84)	test_majacc   0.73 (  0.74)	Loss_d 0.428 (0.417)	test_acc_d   0.74 (  0.76)	test_minacc_d   0.80 (  0.84)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.53 (  0.52)
Test: [  20/  26]	Loss 0.404 (0.421)	test_acc   0.77 (  0.75)	test_minacc   0.81 (  0.84)	test_majacc   0.76 (  0.74)	Loss_d 0.404 (0.421)	test_acc_d   0.77 (  0.75)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.76 (  0.74)	test_corr_d   0.51 (  0.51)
Test: [  26/  26]	Loss 0.407 (0.418)	test_acc   0.77 (  0.75)	test_minacc   0.91 (  0.84)	test_majacc   0.75 (  0.74)	Loss_d 0.407 (0.418)	test_acc_d   0.77 (  0.75)	test_minacc_d   0.91 (  0.84)	test_majacc_d   0.75 (  0.74)	test_corr_d   0.49 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 24.45it/s]
Test: [  0/  1]	Loss 1.393 (1.393)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.80 (  0.80)	Loss_d 1.393 (1.393)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 1.393 (1.393)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.80 (  0.80)	Loss_d 1.393 (1.393)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.18 (  0.18)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/91/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0497 (0.0431)	validation_time 0.0059 (0.0011)	train_time 0.0438 (0.0417)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 19%|#9        | 5/26 [00:00<00:01, 18.56it/s] 35%|###4      | 9/26 [00:00<00:00, 24.50it/s] 50%|#####     | 13/26 [00:00<00:00, 27.85it/s] 65%|######5   | 17/26 [00:00<00:00, 29.53it/s] 81%|########  | 21/26 [00:00<00:00, 31.10it/s] 96%|#########6| 25/26 [00:00<00:00, 32.02it/s]100%|##########| 26/26 [00:00<00:00, 26.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.003 (0.002)	train_nll   0.32 (  0.38)	train_penalty   0.00 (  0.00)	weight_norm  25.35 ( 25.35)	train_acc   0.82 (  0.78)	train_minacc   0.88 (  0.82)	train_majacc   0.81 (  0.78)	train_corr   0.00 (  0.00)	l1 5.2971 (5.2522)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 19%|#9        | 5/26 [00:00<00:00, 24.13it/s] 38%|###8      | 10/26 [00:00<00:00, 31.41it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.41it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.35it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.98it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.98it/s] 96%|#########6| 25/26 [00:00<00:00, 42.70it/s]100%|##########| 26/26 [00:00<00:00, 33.82it/s]
Test: [   0/  26]	Loss 0.354 (0.354)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.84)	test_majacc   0.79 (  0.79)	Loss_d 0.354 (0.354)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.378 (0.371)	test_acc   0.78 (  0.79)	test_minacc   0.84 (  0.85)	test_majacc   0.77 (  0.78)	Loss_d 0.378 (0.371)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.84 (  0.85)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.61 (  0.59)
Test: [  20/  26]	Loss 0.386 (0.375)	test_acc   0.78 (  0.78)	test_minacc   0.79 (  0.84)	test_majacc   0.78 (  0.77)	Loss_d 0.386 (0.375)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.79 (  0.84)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.57 (  0.59)
Test: [  26/  26]	Loss 0.334 (0.373)	test_acc   0.81 (  0.79)	test_minacc   0.88 (  0.84)	test_majacc   0.80 (  0.78)	Loss_d 0.334 (0.373)	test_acc_d   0.81 (  0.79)	test_minacc_d   0.88 (  0.84)	test_majacc_d   0.80 (  0.78)	test_corr_d   0.59 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.59it/s]
Test: [  0/  1]	Loss 1.476 (1.476)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.84 (  0.84)	Loss_d 1.476 (1.476)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 1.476 (1.476)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.84 (  0.84)	Loss_d 1.476 (1.476)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.28 (  0.28)
Overall Timing[ 17/  1]	epoch_time 0.0404 (0.0429)	validation_time 0.0004 (0.0011)	train_time 0.0399 (0.0416)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.7851000297069549, 0.5710000395774841)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.95it/s] 19%|#9        | 5/26 [00:00<00:00, 21.49it/s] 35%|###4      | 9/26 [00:00<00:00, 27.63it/s] 50%|#####     | 13/26 [00:00<00:00, 30.37it/s] 65%|######5   | 17/26 [00:00<00:00, 32.23it/s] 81%|########  | 21/26 [00:00<00:00, 33.84it/s] 96%|#########6| 25/26 [00:00<00:00, 34.69it/s]100%|##########| 26/26 [00:00<00:00, 28.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.001)	train_nll   0.35 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  25.37 ( 25.36)	train_acc   0.79 (  0.78)	train_minacc   0.88 (  0.83)	train_majacc   0.78 (  0.77)	train_corr   0.00 (  0.00)	l1 5.5339 (5.5401)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.26it/s] 31%|###       | 8/26 [00:00<00:00, 40.35it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.35it/s] 50%|#####     | 13/26 [00:00<00:00, 38.69it/s] 69%|######9   | 18/26 [00:00<00:00, 42.00it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.00it/s] 88%|########8 | 23/26 [00:00<00:00, 43.32it/s]100%|##########| 26/26 [00:00<00:00, 37.81it/s]
Test: [   0/  26]	Loss 0.353 (0.353)	test_acc   0.78 (  0.78)	test_minacc   0.84 (  0.84)	test_majacc   0.77 (  0.77)	Loss_d 0.353 (0.353)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.365 (0.346)	test_acc   0.78 (  0.80)	test_minacc   0.82 (  0.86)	test_majacc   0.78 (  0.79)	Loss_d 0.365 (0.346)	test_acc_d   0.78 (  0.80)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.78 (  0.79)	test_corr_d   0.64 (  0.63)
Test: [  20/  26]	Loss 0.366 (0.352)	test_acc   0.78 (  0.79)	test_minacc   0.81 (  0.84)	test_majacc   0.78 (  0.78)	Loss_d 0.366 (0.352)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.60 (  0.62)
Test: [  26/  26]	Loss 0.349 (0.354)	test_acc   0.79 (  0.79)	test_minacc   0.88 (  0.84)	test_majacc   0.78 (  0.78)	Loss_d 0.349 (0.354)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.88 (  0.84)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.60 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.03it/s]
Test: [  0/  1]	Loss 1.546 (1.546)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.87 (  0.87)	Loss_d 1.546 (1.546)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.546 (1.546)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.87 (  0.87)	Loss_d 1.546 (1.546)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.32 (  0.32)
Overall Timing[ 18/  1]	epoch_time 0.0405 (0.0428)	validation_time 0.0004 (0.0011)	train_time 0.0400 (0.0415)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.7905000240206719, 0.578000009059906)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.07it/s] 19%|#9        | 5/26 [00:00<00:00, 22.77it/s] 35%|###4      | 9/26 [00:00<00:00, 27.38it/s] 50%|#####     | 13/26 [00:00<00:00, 30.64it/s] 65%|######5   | 17/26 [00:00<00:00, 32.47it/s] 81%|########  | 21/26 [00:00<00:00, 33.85it/s] 96%|#########6| 25/26 [00:00<00:00, 35.30it/s]100%|##########| 26/26 [00:00<00:00, 29.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.001)	train_nll   0.37 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm  25.37 ( 25.37)	train_acc   0.77 (  0.78)	train_minacc   0.88 (  0.86)	train_majacc   0.75 (  0.77)	train_corr   0.00 (  0.00)	l1 5.7357 (5.6142)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.28it/s] 23%|##3       | 6/26 [00:00<00:00, 21.34it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.34it/s] 42%|####2     | 11/26 [00:00<00:00, 29.90it/s] 62%|######1   | 16/26 [00:00<00:00, 36.07it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.07it/s] 81%|########  | 21/26 [00:00<00:00, 35.98it/s]100%|##########| 26/26 [00:00<00:00, 39.95it/s]100%|##########| 26/26 [00:00<00:00, 30.33it/s]
Test: [   0/  26]	Loss 0.370 (0.370)	test_acc   0.77 (  0.77)	test_minacc   0.84 (  0.84)	test_majacc   0.75 (  0.75)	Loss_d 0.370 (0.370)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.362 (0.358)	test_acc   0.78 (  0.79)	test_minacc   0.85 (  0.86)	test_majacc   0.77 (  0.77)	Loss_d 0.362 (0.358)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.85 (  0.86)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.62 (  0.60)
Test: [  20/  26]	Loss 0.370 (0.364)	test_acc   0.77 (  0.78)	test_minacc   0.82 (  0.85)	test_majacc   0.76 (  0.76)	Loss_d 0.370 (0.364)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.82 (  0.85)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.57 (  0.59)
Test: [  26/  26]	Loss 0.369 (0.367)	test_acc   0.77 (  0.78)	test_minacc   0.88 (  0.85)	test_majacc   0.75 (  0.76)	Loss_d 0.369 (0.367)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.88 (  0.85)	test_majacc_d   0.75 (  0.76)	test_corr_d   0.57 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.32it/s]
Test: [  0/  1]	Loss 1.565 (1.565)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.87 (  0.87)	Loss_d 1.565 (1.565)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 1.565 (1.565)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.87 (  0.87)	Loss_d 1.565 (1.565)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.27 (  0.27)
Overall Timing[ 19/  1]	epoch_time 0.0408 (0.0427)	validation_time 0.0003 (0.0010)	train_time 0.0404 (0.0414)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.7770000293850898, 0.5940000414848328)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.59it/s] 19%|#9        | 5/26 [00:00<00:01, 18.21it/s] 35%|###4      | 9/26 [00:00<00:00, 25.71it/s] 50%|#####     | 13/26 [00:00<00:00, 30.13it/s] 65%|######5   | 17/26 [00:00<00:00, 33.27it/s] 81%|########  | 21/26 [00:00<00:00, 33.90it/s] 96%|#########6| 25/26 [00:00<00:00, 34.01it/s]100%|##########| 26/26 [00:00<00:00, 27.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.34 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm  25.37 ( 25.37)	train_acc   0.80 (  0.78)	train_minacc   0.91 (  0.85)	train_majacc   0.78 (  0.77)	train_corr   0.00 (  0.00)	l1 5.6296 (5.6936)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.85it/s] 27%|##6       | 7/26 [00:00<00:00, 33.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.60it/s] 46%|####6     | 12/26 [00:00<00:00, 36.47it/s] 69%|######9   | 18/26 [00:00<00:00, 40.94it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.94it/s] 88%|########8 | 23/26 [00:00<00:00, 42.84it/s]100%|##########| 26/26 [00:00<00:00, 37.15it/s]
Test: [   0/  26]	Loss 0.352 (0.352)	test_acc   0.78 (  0.78)	test_minacc   0.85 (  0.85)	test_majacc   0.76 (  0.76)	Loss_d 0.352 (0.352)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.353 (0.348)	test_acc   0.78 (  0.79)	test_minacc   0.85 (  0.86)	test_majacc   0.77 (  0.78)	Loss_d 0.353 (0.348)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.85 (  0.86)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.365 (0.354)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.85)	test_majacc   0.78 (  0.77)	Loss_d 0.365 (0.354)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.85)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.59 (  0.61)
Test: [  26/  26]	Loss 0.343 (0.356)	test_acc   0.80 (  0.79)	test_minacc   0.91 (  0.85)	test_majacc   0.78 (  0.77)	Loss_d 0.343 (0.356)	test_acc_d   0.80 (  0.79)	test_minacc_d   0.91 (  0.85)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.59 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.10it/s]
Test: [  0/  1]	Loss 1.563 (1.563)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.87 (  0.87)	Loss_d 1.563 (1.563)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.563 (1.563)	test_acc   0.59 (  0.59)	test_minacc   0.56 (  0.56)	test_majacc   0.87 (  0.87)	Loss_d 1.563 (1.563)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.29 (  0.29)
Overall Timing[ 20/  1]	epoch_time 0.0415 (0.0426)	validation_time 0.0004 (0.0010)	train_time 0.0411 (0.0414)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.7850000199079513, 0.5870000123977661)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.09it/s] 15%|#5        | 4/26 [00:00<00:01, 20.79it/s] 31%|###       | 8/26 [00:00<00:00, 27.49it/s] 46%|####6     | 12/26 [00:00<00:00, 30.80it/s] 62%|######1   | 16/26 [00:00<00:00, 32.35it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.68it/s] 92%|#########2| 24/26 [00:00<00:00, 34.44it/s]100%|##########| 26/26 [00:00<00:00, 29.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.34 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm  25.37 ( 25.37)	train_acc   0.79 (  0.78)	train_minacc   0.91 (  0.85)	train_majacc   0.77 (  0.77)	train_corr   0.00 (  0.00)	l1 5.6687 (5.7606)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.89it/s] 15%|#5        | 4/26 [00:00<00:01, 20.65it/s] 38%|###8      | 10/26 [00:00<00:00, 36.78it/s]                                                38%|###8      | 10/26 [00:00<00:00, 36.78it/s] 58%|#####7    | 15/26 [00:00<00:00, 40.00it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 40.00it/s] 81%|########  | 21/26 [00:00<00:00, 44.88it/s]100%|##########| 26/26 [00:00<00:00, 46.32it/s]100%|##########| 26/26 [00:00<00:00, 36.57it/s]
Test: [   0/  26]	Loss 0.350 (0.350)	test_acc   0.77 (  0.77)	test_minacc   0.84 (  0.84)	test_majacc   0.76 (  0.76)	Loss_d 0.350 (0.350)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.342 (0.339)	test_acc   0.80 (  0.80)	test_minacc   0.85 (  0.86)	test_majacc   0.79 (  0.79)	Loss_d 0.342 (0.339)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.85 (  0.86)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.65 (  0.63)
Test: [  20/  26]	Loss 0.361 (0.344)	test_acc   0.78 (  0.79)	test_minacc   0.82 (  0.85)	test_majacc   0.77 (  0.78)	Loss_d 0.361 (0.344)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.82 (  0.85)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.60 (  0.63)
Test: [  26/  26]	Loss 0.345 (0.348)	test_acc   0.79 (  0.79)	test_minacc   0.91 (  0.85)	test_majacc   0.77 (  0.78)	Loss_d 0.345 (0.348)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.91 (  0.85)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.60 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.05it/s]
Test: [  0/  1]	Loss 1.580 (1.580)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.87 (  0.87)	Loss_d 1.580 (1.580)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.580 (1.580)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.87 (  0.87)	Loss_d 1.580 (1.580)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.32 (  0.32)
Overall Timing[ 21/  1]	epoch_time 0.0384 (0.0424)	validation_time 0.0006 (0.0010)	train_time 0.0378 (0.0413)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.7897000333666802, 0.5790000557899475)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.94it/s] 19%|#9        | 5/26 [00:00<00:01, 16.12it/s] 35%|###4      | 9/26 [00:00<00:00, 23.25it/s] 50%|#####     | 13/26 [00:00<00:00, 27.76it/s] 65%|######5   | 17/26 [00:00<00:00, 30.37it/s] 81%|########  | 21/26 [00:00<00:00, 32.22it/s] 96%|#########6| 25/26 [00:00<00:00, 33.74it/s]100%|##########| 26/26 [00:00<00:00, 26.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.34 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm  25.38 ( 25.37)	train_acc   0.80 (  0.78)	train_minacc   0.88 (  0.85)	train_majacc   0.78 (  0.77)	train_corr   0.00 (  0.00)	l1 5.6988 (5.8002)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 23%|##3       | 6/26 [00:00<00:00, 30.26it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.26it/s] 42%|####2     | 11/26 [00:00<00:00, 38.19it/s] 62%|######1   | 16/26 [00:00<00:00, 42.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.08it/s] 81%|########  | 21/26 [00:00<00:00, 39.17it/s]100%|##########| 26/26 [00:00<00:00, 42.02it/s]100%|##########| 26/26 [00:00<00:00, 35.32it/s]
Test: [   0/  26]	Loss 0.347 (0.347)	test_acc   0.78 (  0.78)	test_minacc   0.85 (  0.85)	test_majacc   0.77 (  0.77)	Loss_d 0.347 (0.347)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.329 (0.333)	test_acc   0.80 (  0.80)	test_minacc   0.82 (  0.86)	test_majacc   0.80 (  0.79)	Loss_d 0.329 (0.333)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.80 (  0.79)	test_corr_d   0.67 (  0.64)
Test: [  20/  26]	Loss 0.356 (0.336)	test_acc   0.78 (  0.80)	test_minacc   0.84 (  0.85)	test_majacc   0.77 (  0.79)	Loss_d 0.356 (0.336)	test_acc_d   0.78 (  0.80)	test_minacc_d   0.84 (  0.85)	test_majacc_d   0.77 (  0.79)	test_corr_d   0.61 (  0.64)
Test: [  26/  26]	Loss 0.343 (0.340)	test_acc   0.80 (  0.79)	test_minacc   0.88 (  0.85)	test_majacc   0.78 (  0.78)	Loss_d 0.343 (0.340)	test_acc_d   0.80 (  0.79)	test_minacc_d   0.88 (  0.85)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.61 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.15it/s]
Test: [  0/  1]	Loss 1.599 (1.599)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.89 (  0.89)	Loss_d 1.599 (1.599)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.599 (1.599)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.89 (  0.89)	Loss_d 1.599 (1.599)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.33 (  0.33)
Overall Timing[ 22/  1]	epoch_time 0.0397 (0.0423)	validation_time 0.0004 (0.0010)	train_time 0.0392 (0.0412)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.794000026345253, 0.5840000510215759)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.75it/s]  8%|7         | 2/26 [00:00<00:02,  8.29it/s] 23%|##3       | 6/26 [00:00<00:01, 19.23it/s] 35%|###4      | 9/26 [00:00<00:00, 20.66it/s] 50%|#####     | 13/26 [00:00<00:00, 23.94it/s] 65%|######5   | 17/26 [00:00<00:00, 27.19it/s] 81%|########  | 21/26 [00:00<00:00, 28.37it/s] 96%|#########6| 25/26 [00:01<00:00, 29.26it/s]100%|##########| 26/26 [00:01<00:00, 23.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 5.756490707397461
set z to 5.698925800323487
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 385 tensor(-0.0084, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 246 tensor(-0.0109, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 219 tensor(-0.0041, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 210 tensor(-0.0021, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 205 tensor(-0.0015, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.009 (0.013)	train_nll   0.34 (  0.37)	train_penalty   0.01 (  0.01)	weight_norm  25.80 ( 25.52)	train_acc   0.90 (  0.79)	train_minacc   0.76 (  0.72)	train_majacc   0.93 (  0.80)	train_corr   0.00 (  0.00)	l1 6.7493 (6.7638)	zero_count 0.0000 (38.3760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.31it/s] 15%|#5        | 4/26 [00:00<00:01, 11.47it/s] 35%|###4      | 9/26 [00:00<00:00, 23.58it/s]                                               35%|###4      | 9/26 [00:00<00:00, 23.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 33.21it/s] 92%|#########2| 24/26 [00:00<00:00, 37.88it/s]100%|##########| 26/26 [00:00<00:00, 29.49it/s]
Test: [   0/  26]	Loss 0.543 (0.543)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.543 (0.543)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.477 (0.481)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.50)	test_majacc   0.50 (  0.51)	Loss_d 0.477 (0.481)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.50)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.68 (  0.68)
Test: [  20/  26]	Loss 0.475 (0.471)	test_acc   0.48 (  0.51)	test_minacc   0.55 (  0.52)	test_majacc   0.46 (  0.50)	Loss_d 0.475 (0.471)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.55 (  0.52)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.70 (  0.68)
Test: [  26/  26]	Loss 0.505 (0.477)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.505 (0.477)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.70 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.43it/s]
Test: [  0/  1]	Loss 1.794 (1.794)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.794 (1.794)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 1.794 (1.794)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.794 (1.794)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Overall Timing[ 23/  1]	epoch_time 0.0471 (0.0425)	validation_time 0.0006 (0.0009)	train_time 0.0464 (0.0414)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5013000153899193, 0.5070000290870667)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 15%|#5        | 4/26 [00:00<00:01, 17.25it/s] 27%|##6       | 7/26 [00:00<00:00, 20.54it/s] 42%|####2     | 11/26 [00:00<00:00, 25.69it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.74it/s] 65%|######5   | 17/26 [00:00<00:00, 26.19it/s] 81%|########  | 21/26 [00:00<00:00, 29.01it/s] 92%|#########2| 24/26 [00:00<00:00, 28.57it/s]100%|##########| 26/26 [00:01<00:00, 24.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 204 tensor(-0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 202 tensor(-0.0020, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 201 tensor(-0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 203 tensor(-0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 365 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
Epoch: [24][  26/  26]	Loss 0.002 (0.003)	train_nll   0.54 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  26.01 ( 25.94)	train_acc   0.75 (  0.75)	train_minacc   0.76 (  0.81)	train_majacc   0.75 (  0.75)	train_corr   0.00 (  0.00)	l1 5.6688 (5.9806)	zero_count 0.0000 (65.7540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.53it/s] 27%|##6       | 7/26 [00:00<00:00, 28.07it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.07it/s] 46%|####6     | 12/26 [00:00<00:00, 35.92it/s] 65%|######5   | 17/26 [00:00<00:00, 39.85it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.85it/s] 85%|########4 | 22/26 [00:00<00:00, 42.47it/s]100%|##########| 26/26 [00:00<00:00, 34.86it/s]
Test: [   0/  26]	Loss 0.488 (0.488)	test_acc   0.86 (  0.86)	test_minacc   0.88 (  0.88)	test_majacc   0.85 (  0.85)	Loss_d 0.488 (0.488)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.505 (0.497)	test_acc   0.84 (  0.84)	test_minacc   0.82 (  0.83)	test_majacc   0.85 (  0.84)	Loss_d 0.505 (0.497)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.82 (  0.83)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.60 (  0.56)
Test: [  20/  26]	Loss 0.505 (0.497)	test_acc   0.84 (  0.84)	test_minacc   0.72 (  0.82)	test_majacc   0.86 (  0.84)	Loss_d 0.505 (0.497)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.72 (  0.82)	test_majacc_d   0.86 (  0.84)	test_corr_d   0.60 (  0.57)
Test: [  26/  26]	Loss 0.513 (0.499)	test_acc   0.82 (  0.83)	test_minacc   0.82 (  0.82)	test_majacc   0.82 (  0.83)	Loss_d 0.513 (0.499)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.57 (  0.57)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.44it/s]
Test: [  0/  1]	Loss 1.533 (1.533)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.83 (  0.83)	Loss_d 1.533 (1.533)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.533 (1.533)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.83 (  0.83)	Loss_d 1.533 (1.533)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.22 (  0.22)
Overall Timing[ 24/  1]	epoch_time 0.0410 (0.0425)	validation_time 0.0003 (0.0009)	train_time 0.0407 (0.0414)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.832300028681755, 0.5610000491142273)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.36it/s] 23%|##3       | 6/26 [00:00<00:00, 23.67it/s] 35%|###4      | 9/26 [00:00<00:00, 25.44it/s] 46%|####6     | 12/26 [00:00<00:00, 24.59it/s] 62%|######1   | 16/26 [00:00<00:00, 27.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.88it/s] 92%|#########2| 24/26 [00:00<00:00, 31.22it/s]100%|##########| 26/26 [00:00<00:00, 26.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 395 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.001 (0.001)	train_nll   0.52 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  26.03 ( 26.03)	train_acc   0.46 (  0.60)	train_minacc   0.74 (  0.71)	train_majacc   0.42 (  0.58)	train_corr   0.00 (  0.00)	l1 5.5542 (5.6089)	zero_count 0.0000 (4.5240)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.11it/s] 27%|##6       | 7/26 [00:00<00:00, 32.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.13it/s] 46%|####6     | 12/26 [00:00<00:00, 38.65it/s] 65%|######5   | 17/26 [00:00<00:00, 42.07it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.07it/s] 85%|########4 | 22/26 [00:00<00:00, 41.64it/s]100%|##########| 26/26 [00:00<00:00, 36.58it/s]
Test: [   0/  26]	Loss 0.533 (0.533)	test_acc   0.49 (  0.49)	test_minacc   0.63 (  0.63)	test_majacc   0.46 (  0.46)	Loss_d 0.533 (0.533)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.529 (0.527)	test_acc   0.48 (  0.49)	test_minacc   0.64 (  0.66)	test_majacc   0.46 (  0.46)	Loss_d 0.529 (0.527)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.64 (  0.66)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.57 (  0.53)
Test: [  20/  26]	Loss 0.535 (0.529)	test_acc   0.48 (  0.49)	test_minacc   0.70 (  0.68)	test_majacc   0.43 (  0.46)	Loss_d 0.535 (0.529)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.70 (  0.68)	test_majacc_d   0.43 (  0.46)	test_corr_d   0.59 (  0.55)
Test: [  26/  26]	Loss 0.523 (0.529)	test_acc   0.46 (  0.48)	test_minacc   0.68 (  0.67)	test_majacc   0.42 (  0.45)	Loss_d 0.523 (0.529)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.68 (  0.67)	test_majacc_d   0.42 (  0.45)	test_corr_d   0.55 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.58it/s]
Test: [  0/  1]	Loss 1.504 (1.504)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.504 (1.504)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 1.504 (1.504)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 1.504 (1.504)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.27 (  0.27)
Overall Timing[ 25/  1]	epoch_time 0.0408 (0.0424)	validation_time 0.0005 (0.0009)	train_time 0.0403 (0.0413)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.484900008559227, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.60it/s] 19%|#9        | 5/26 [00:00<00:00, 22.52it/s] 35%|###4      | 9/26 [00:00<00:00, 27.21it/s] 50%|#####     | 13/26 [00:00<00:00, 29.23it/s] 65%|######5   | 17/26 [00:00<00:00, 31.01it/s] 81%|########  | 21/26 [00:00<00:00, 32.21it/s] 96%|#########6| 25/26 [00:00<00:00, 33.15it/s]100%|##########| 26/26 [00:00<00:00, 28.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  26.04 ( 26.03)	train_acc   0.47 (  0.51)	train_minacc   0.62 (  0.71)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 5.5760 (5.5438)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 23%|##3       | 6/26 [00:00<00:00, 23.80it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.80it/s] 42%|####2     | 11/26 [00:00<00:00, 29.78it/s] 62%|######1   | 16/26 [00:00<00:00, 36.26it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.26it/s] 81%|########  | 21/26 [00:00<00:00, 39.23it/s]100%|##########| 26/26 [00:00<00:00, 32.29it/s]
Test: [   0/  26]	Loss 0.543 (0.543)	test_acc   0.49 (  0.49)	test_minacc   0.51 (  0.51)	test_majacc   0.48 (  0.48)	Loss_d 0.543 (0.543)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.541 (0.540)	test_acc   0.51 (  0.50)	test_minacc   0.58 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 0.541 (0.540)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.56 (  0.53)
Test: [  20/  26]	Loss 0.549 (0.541)	test_acc   0.46 (  0.50)	test_minacc   0.52 (  0.56)	test_majacc   0.45 (  0.49)	Loss_d 0.549 (0.541)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.52 (  0.56)	test_majacc_d   0.45 (  0.49)	test_corr_d   0.59 (  0.54)
Test: [  26/  26]	Loss 0.539 (0.542)	test_acc   0.47 (  0.49)	test_minacc   0.59 (  0.55)	test_majacc   0.45 (  0.48)	Loss_d 0.539 (0.542)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.45 (  0.48)	test_corr_d   0.55 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.96it/s]
Test: [  0/  1]	Loss 1.503 (1.503)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.503 (1.503)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.503 (1.503)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.503 (1.503)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Overall Timing[ 26/  1]	epoch_time 0.0390 (0.0423)	validation_time 0.0004 (0.0009)	train_time 0.0386 (0.0412)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.4923000091612339, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.65it/s] 12%|#1        | 3/26 [00:00<00:01, 12.22it/s] 23%|##3       | 6/26 [00:00<00:01, 17.91it/s] 38%|###8      | 10/26 [00:00<00:00, 23.60it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.77it/s] 69%|######9   | 18/26 [00:00<00:00, 29.27it/s] 85%|########4 | 22/26 [00:00<00:00, 30.52it/s]100%|##########| 26/26 [00:00<00:00, 32.03it/s]100%|##########| 26/26 [00:01<00:00, 24.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.54 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  26.04 ( 26.04)	train_acc   0.48 (  0.50)	train_minacc   0.59 (  0.69)	train_majacc   0.46 (  0.47)	train_corr   0.00 (  0.00)	l1 5.5827 (5.5320)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.15it/s] 12%|#1        | 3/26 [00:00<00:01, 13.69it/s] 31%|###       | 8/26 [00:00<00:00, 27.99it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.99it/s] 50%|#####     | 13/26 [00:00<00:00, 35.23it/s] 69%|######9   | 18/26 [00:00<00:00, 36.19it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.19it/s] 88%|########8 | 23/26 [00:00<00:00, 39.19it/s]100%|##########| 26/26 [00:00<00:00, 32.73it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.50 (  0.50)	Loss_d 0.547 (0.547)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.548 (0.549)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.548 (0.549)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.55 (  0.51)
Test: [  20/  26]	Loss 0.560 (0.551)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.560 (0.551)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.53)
Test: [  26/  26]	Loss 0.549 (0.552)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.549 (0.552)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.53 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.37it/s]
Test: [  0/  1]	Loss 1.493 (1.493)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.493 (1.493)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 1.493 (1.493)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.493 (1.493)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.28 (  0.28)
Overall Timing[ 27/  1]	epoch_time 0.0422 (0.0423)	validation_time 0.0005 (0.0009)	train_time 0.0417 (0.0412)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.4996000143289566, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.44it/s] 19%|#9        | 5/26 [00:00<00:00, 21.51it/s] 35%|###4      | 9/26 [00:00<00:00, 26.85it/s] 50%|#####     | 13/26 [00:00<00:00, 29.69it/s] 65%|######5   | 17/26 [00:00<00:00, 31.01it/s] 81%|########  | 21/26 [00:00<00:00, 32.09it/s] 96%|#########6| 25/26 [00:00<00:00, 33.21it/s]100%|##########| 26/26 [00:00<00:00, 27.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.55 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  26.04 ( 26.04)	train_acc   0.47 (  0.60)	train_minacc   0.59 (  0.71)	train_majacc   0.45 (  0.58)	train_corr   0.00 (  0.00)	l1 5.6226 (5.5443)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.75it/s] 31%|###       | 8/26 [00:00<00:00, 39.95it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.95it/s] 50%|#####     | 13/26 [00:00<00:00, 42.83it/s] 69%|######9   | 18/26 [00:00<00:00, 40.87it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.87it/s] 88%|########8 | 23/26 [00:00<00:00, 42.44it/s]100%|##########| 26/26 [00:00<00:00, 39.19it/s]
Test: [   0/  26]	Loss 0.551 (0.551)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.551 (0.551)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.555 (0.559)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.555 (0.559)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.53 (  0.49)
Test: [  20/  26]	Loss 0.573 (0.561)	test_acc   0.47 (  0.50)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.50)	Loss_d 0.573 (0.561)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.54 (  0.50)
Test: [  26/  26]	Loss 0.557 (0.561)	test_acc   0.47 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.557 (0.561)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.50 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.61it/s]
Test: [  0/  1]	Loss 1.466 (1.466)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.466 (1.466)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.466 (1.466)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.466 (1.466)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 28/  1]	epoch_time 0.0395 (0.0422)	validation_time 0.0004 (0.0009)	train_time 0.0392 (0.0412)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.4977000134885311, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.55it/s] 19%|#9        | 5/26 [00:00<00:01, 14.93it/s] 35%|###4      | 9/26 [00:00<00:00, 21.57it/s] 50%|#####     | 13/26 [00:00<00:00, 25.84it/s] 65%|######5   | 17/26 [00:00<00:00, 28.57it/s] 81%|########  | 21/26 [00:00<00:00, 31.74it/s] 96%|#########6| 25/26 [00:00<00:00, 32.92it/s]100%|##########| 26/26 [00:01<00:00, 24.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 374 tensor(-0.0016, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.004 (0.001)	train_nll   0.49 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  26.04 ( 26.04)	train_acc   0.80 (  0.63)	train_minacc   0.97 (  0.73)	train_majacc   0.78 (  0.62)	train_corr   0.00 (  0.00)	l1 5.7921 (5.6448)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.84it/s] 27%|##6       | 7/26 [00:00<00:00, 30.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.13it/s] 46%|####6     | 12/26 [00:00<00:00, 37.25it/s] 65%|######5   | 17/26 [00:00<00:00, 40.74it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.74it/s] 85%|########4 | 22/26 [00:00<00:00, 39.93it/s]100%|##########| 26/26 [00:00<00:00, 35.67it/s]
Test: [   0/  26]	Loss 0.527 (0.527)	test_acc   0.49 (  0.49)	test_minacc   0.50 (  0.50)	test_majacc   0.48 (  0.48)	Loss_d 0.527 (0.527)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.529 (0.535)	test_acc   0.49 (  0.48)	test_minacc   0.56 (  0.55)	test_majacc   0.47 (  0.47)	Loss_d 0.529 (0.535)	test_acc_d   0.49 (  0.48)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.54 (  0.49)
Test: [  20/  26]	Loss 0.549 (0.535)	test_acc   0.46 (  0.48)	test_minacc   0.58 (  0.57)	test_majacc   0.44 (  0.47)	Loss_d 0.549 (0.535)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.44 (  0.47)	test_corr_d   0.54 (  0.51)
Test: [  26/  26]	Loss 0.529 (0.537)	test_acc   0.48 (  0.48)	test_minacc   0.65 (  0.56)	test_majacc   0.45 (  0.47)	Loss_d 0.529 (0.537)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.65 (  0.56)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.50 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.26it/s]
Test: [  0/  1]	Loss 1.462 (1.462)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.462 (1.462)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 1.462 (1.462)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.462 (1.462)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.18 (  0.18)
Overall Timing[ 29/  1]	epoch_time 0.0404 (0.0421)	validation_time 0.0004 (0.0008)	train_time 0.0400 (0.0411)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.4803000048995018, 0.5060000419616699)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 15%|#5        | 4/26 [00:00<00:01, 16.62it/s] 27%|##6       | 7/26 [00:00<00:00, 20.66it/s] 42%|####2     | 11/26 [00:00<00:00, 26.25it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.37it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.11it/s] 85%|########4 | 22/26 [00:00<00:00, 28.76it/s]100%|##########| 26/26 [00:00<00:00, 29.02it/s]100%|##########| 26/26 [00:01<00:00, 24.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 410 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 401 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 364 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 364 tensor(-1.1165e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 365 tensor(-0.0007, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.001)	train_nll   0.55 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  26.06 ( 26.05)	train_acc   0.64 (  0.52)	train_minacc   1.00 (  0.67)	train_majacc   0.59 (  0.49)	train_corr   0.00 (  0.00)	l1 5.6854 (5.7095)	zero_count 0.0000 (25.0380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.96it/s] 23%|##3       | 6/26 [00:00<00:00, 25.78it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.78it/s] 42%|####2     | 11/26 [00:00<00:00, 33.97it/s] 62%|######1   | 16/26 [00:00<00:00, 39.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.25it/s] 81%|########  | 21/26 [00:00<00:00, 38.56it/s]100%|##########| 26/26 [00:00<00:00, 41.89it/s]100%|##########| 26/26 [00:00<00:00, 33.08it/s]
Test: [   0/  26]	Loss 0.545 (0.545)	test_acc   0.49 (  0.49)	test_minacc   0.53 (  0.53)	test_majacc   0.48 (  0.48)	Loss_d 0.545 (0.545)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.539 (0.537)	test_acc   0.49 (  0.49)	test_minacc   0.56 (  0.57)	test_majacc   0.48 (  0.48)	Loss_d 0.539 (0.537)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.56 (  0.57)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.52 (  0.49)
Test: [  20/  26]	Loss 0.545 (0.538)	test_acc   0.52 (  0.50)	test_minacc   0.57 (  0.58)	test_majacc   0.51 (  0.48)	Loss_d 0.545 (0.538)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.51 (  0.48)	test_corr_d   0.54 (  0.50)
Test: [  26/  26]	Loss 0.544 (0.542)	test_acc   0.49 (  0.49)	test_minacc   0.65 (  0.58)	test_majacc   0.46 (  0.48)	Loss_d 0.544 (0.542)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.65 (  0.58)	test_majacc_d   0.46 (  0.48)	test_corr_d   0.48 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.03it/s]
Test: [  0/  1]	Loss 1.441 (1.441)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.50 (  0.50)	Loss_d 1.441 (1.441)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 1.441 (1.441)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.50 (  0.50)	Loss_d 1.441 (1.441)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.19)
Overall Timing[ 30/  1]	epoch_time 0.0405 (0.0421)	validation_time 0.0004 (0.0008)	train_time 0.0401 (0.0411)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.49410001748800275, 0.5230000019073486)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.32it/s] 12%|#1        | 3/26 [00:00<00:01, 14.02it/s] 27%|##6       | 7/26 [00:00<00:00, 23.94it/s] 38%|###8      | 10/26 [00:00<00:00, 25.22it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.82it/s] 65%|######5   | 17/26 [00:00<00:00, 28.19it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.96it/s] 92%|#########2| 24/26 [00:00<00:00, 30.38it/s]100%|##########| 26/26 [00:01<00:00, 25.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 349 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 351 tensor(7.4492e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 362 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 407 tensor(4.9598e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.55)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.06)	train_acc   0.46 (  0.55)	train_minacc   0.50 (  0.68)	train_majacc   0.46 (  0.52)	train_corr   0.00 (  0.00)	l1 5.6990 (5.7147)	zero_count 104.0000 (26.6630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 19%|#9        | 5/26 [00:00<00:00, 23.27it/s] 38%|###8      | 10/26 [00:00<00:00, 33.69it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.69it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.40it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.53it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.53it/s]100%|##########| 26/26 [00:00<00:00, 44.79it/s]100%|##########| 26/26 [00:00<00:00, 34.65it/s]
Test: [   0/  26]	Loss 0.563 (0.563)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.563 (0.563)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.563 (0.557)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.563 (0.557)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.558 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.558 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.56 (  0.50)
Test: [  26/  26]	Loss 0.566 (0.559)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.566 (0.559)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.48 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.26it/s]
Test: [  0/  1]	Loss 1.424 (1.424)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.424 (1.424)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.424 (1.424)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.424 (1.424)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 31/  1]	epoch_time 0.0417 (0.0420)	validation_time 0.0004 (0.0008)	train_time 0.0413 (0.0411)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.75it/s] 19%|#9        | 5/26 [00:00<00:00, 22.36it/s] 35%|###4      | 9/26 [00:00<00:00, 28.82it/s] 50%|#####     | 13/26 [00:00<00:00, 30.92it/s] 65%|######5   | 17/26 [00:00<00:00, 33.61it/s] 81%|########  | 21/26 [00:00<00:00, 34.85it/s] 96%|#########6| 25/26 [00:00<00:00, 36.07it/s]100%|##########| 26/26 [00:00<00:00, 29.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 422 tensor(-6.1790e-05, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6970 (5.6698)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 27%|##6       | 7/26 [00:00<00:00, 33.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.83it/s] 46%|####6     | 12/26 [00:00<00:00, 37.55it/s] 69%|######9   | 18/26 [00:00<00:00, 44.76it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.76it/s] 92%|#########2| 24/26 [00:00<00:00, 46.59it/s]100%|##########| 26/26 [00:00<00:00, 38.88it/s]
Test: [   0/  26]	Loss 0.553 (0.553)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.553 (0.553)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.562 (0.555)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.562 (0.555)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.52 (  0.50)
Test: [  20/  26]	Loss 0.558 (0.555)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.558 (0.555)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.58 (  0.52)
Test: [  26/  26]	Loss 0.565 (0.556)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.556)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.50 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.92it/s]
Test: [  0/  1]	Loss 1.439 (1.439)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.439 (1.439)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 1.439 (1.439)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.439 (1.439)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.27 (  0.27)
Overall Timing[ 32/  1]	epoch_time 0.0358 (0.0419)	validation_time 0.0003 (0.0008)	train_time 0.0354 (0.0409)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.33it/s] 15%|#5        | 4/26 [00:00<00:01, 19.12it/s] 31%|###       | 8/26 [00:00<00:00, 27.77it/s] 46%|####6     | 12/26 [00:00<00:00, 32.21it/s] 62%|######1   | 16/26 [00:00<00:00, 34.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.54it/s] 92%|#########2| 24/26 [00:00<00:00, 37.35it/s]100%|##########| 26/26 [00:00<00:00, 30.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 458 tensor(2.8776e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6841 (5.6870)	zero_count 0.0000 (5.5380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.03it/s] 23%|##3       | 6/26 [00:00<00:00, 27.55it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.55it/s] 46%|####6     | 12/26 [00:00<00:00, 39.64it/s] 69%|######9   | 18/26 [00:00<00:00, 43.50it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.50it/s] 92%|#########2| 24/26 [00:00<00:00, 48.04it/s]100%|##########| 26/26 [00:00<00:00, 38.68it/s]
Test: [   0/  26]	Loss 0.553 (0.553)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.553 (0.553)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.560 (0.554)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.554)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.50)
Test: [  20/  26]	Loss 0.557 (0.554)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.557 (0.554)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.51)
Test: [  26/  26]	Loss 0.564 (0.556)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.564 (0.556)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.50 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.99it/s]
Test: [  0/  1]	Loss 1.423 (1.423)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.423 (1.423)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 1.423 (1.423)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.423 (1.423)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Overall Timing[ 33/  1]	epoch_time 0.0357 (0.0417)	validation_time 0.0004 (0.0008)	train_time 0.0352 (0.0408)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.42it/s] 19%|#9        | 5/26 [00:00<00:01, 19.79it/s] 31%|###       | 8/26 [00:00<00:00, 23.36it/s] 46%|####6     | 12/26 [00:00<00:00, 29.02it/s] 62%|######1   | 16/26 [00:00<00:00, 32.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.08it/s] 92%|#########2| 24/26 [00:00<00:00, 35.74it/s]100%|##########| 26/26 [00:00<00:00, 28.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 438 tensor(1.6703e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6800 (5.6946)	zero_count 0.0000 (2.8470)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.32it/s] 31%|###       | 8/26 [00:00<00:00, 40.40it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.40it/s] 50%|#####     | 13/26 [00:00<00:00, 40.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.66it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.66it/s] 96%|#########6| 25/26 [00:00<00:00, 47.04it/s]100%|##########| 26/26 [00:00<00:00, 40.35it/s]
Test: [   0/  26]	Loss 0.555 (0.555)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.555 (0.555)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.555)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.555)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.557 (0.555)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.557 (0.555)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.56 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.49 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.63it/s]
Test: [  0/  1]	Loss 1.414 (1.414)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.414 (1.414)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.414 (1.414)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.414 (1.414)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 34/  1]	epoch_time 0.0369 (0.0415)	validation_time 0.0004 (0.0008)	train_time 0.0366 (0.0406)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 19%|#9        | 5/26 [00:00<00:00, 21.72it/s] 31%|###       | 8/26 [00:00<00:00, 24.08it/s] 42%|####2     | 11/26 [00:00<00:00, 25.54it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.95it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.80it/s] 88%|########8 | 23/26 [00:00<00:00, 30.48it/s]100%|##########| 26/26 [00:00<00:00, 26.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 446 tensor(-1.1555e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 441 tensor(-4.1362e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 418 tensor(-4.0355e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 398 tensor(-3.5569e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6871 (5.6956)	zero_count 0.0000 (13.2990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.48it/s] 27%|##6       | 7/26 [00:00<00:00, 36.29it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.29it/s] 50%|#####     | 13/26 [00:00<00:00, 40.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.26it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.26it/s] 96%|#########6| 25/26 [00:00<00:00, 47.20it/s]100%|##########| 26/26 [00:00<00:00, 39.56it/s]
Test: [   0/  26]	Loss 0.557 (0.557)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.557 (0.557)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.561 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.561 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.557 (0.557)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.557 (0.557)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.56 (  0.49)
Test: [  26/  26]	Loss 0.566 (0.558)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.566 (0.558)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.48 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.66it/s]
Test: [  0/  1]	Loss 1.416 (1.416)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.416 (1.416)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.416 (1.416)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.416 (1.416)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.23 (  0.23)
Overall Timing[ 35/  1]	epoch_time 0.0382 (0.0414)	validation_time 0.0005 (0.0008)	train_time 0.0377 (0.0406)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.70it/s] 19%|#9        | 5/26 [00:00<00:00, 24.45it/s] 35%|###4      | 9/26 [00:00<00:00, 29.96it/s] 50%|#####     | 13/26 [00:00<00:00, 28.63it/s] 65%|######5   | 17/26 [00:00<00:00, 30.68it/s] 81%|########  | 21/26 [00:00<00:00, 32.14it/s] 96%|#########6| 25/26 [00:00<00:00, 33.83it/s]100%|##########| 26/26 [00:00<00:00, 28.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 482 tensor(3.1932e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6969 (5.6959)	zero_count 0.0000 (1.1310)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.39it/s] 27%|##6       | 7/26 [00:00<00:00, 25.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.87it/s] 50%|#####     | 13/26 [00:00<00:00, 36.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.33it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.33it/s] 96%|#########6| 25/26 [00:00<00:00, 44.92it/s]100%|##########| 26/26 [00:00<00:00, 35.51it/s]
Test: [   0/  26]	Loss 0.558 (0.558)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.558 (0.558)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.562 (0.557)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.562 (0.557)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.557 (0.557)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.557 (0.557)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.56 (  0.49)
Test: [  26/  26]	Loss 0.567 (0.558)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.567 (0.558)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.48 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.21it/s]
Test: [  0/  1]	Loss 1.421 (1.421)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.421 (1.421)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.421 (1.421)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.421 (1.421)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Overall Timing[ 36/  1]	epoch_time 0.0377 (0.0413)	validation_time 0.0003 (0.0008)	train_time 0.0374 (0.0405)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.67it/s] 19%|#9        | 5/26 [00:00<00:00, 21.79it/s] 35%|###4      | 9/26 [00:00<00:00, 25.27it/s] 50%|#####     | 13/26 [00:00<00:00, 29.75it/s] 65%|######5   | 17/26 [00:00<00:00, 29.83it/s] 81%|########  | 21/26 [00:00<00:00, 29.86it/s] 96%|#########6| 25/26 [00:00<00:00, 30.20it/s]100%|##########| 26/26 [00:00<00:00, 26.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 456 tensor(-1.1820e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 452 tensor(3.1558e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 424 tensor(-7.4207e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 406 tensor(-2.2942e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6984 (5.6973)	zero_count 0.0000 (11.9340)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 38.04it/s] 35%|###4      | 9/26 [00:00<00:00, 43.57it/s]                                               35%|###4      | 9/26 [00:00<00:00, 43.57it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.79it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.79it/s] 92%|#########2| 24/26 [00:00<00:00, 46.09it/s]100%|##########| 26/26 [00:00<00:00, 40.45it/s]
Test: [   0/  26]	Loss 0.557 (0.557)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.557 (0.557)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.561 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.561 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.50 (  0.49)
Test: [  20/  26]	Loss 0.557 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.557 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.566 (0.558)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.566 (0.558)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.49 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.72it/s]
Test: [  0/  1]	Loss 1.426 (1.426)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.426 (1.426)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.426 (1.426)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.426 (1.426)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 37/  1]	epoch_time 0.0442 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0438 (0.0406)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.01it/s] 23%|##3       | 6/26 [00:00<00:00, 29.74it/s] 38%|###8      | 10/26 [00:00<00:00, 33.34it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.70it/s] 69%|######9   | 18/26 [00:00<00:00, 30.35it/s] 85%|########4 | 22/26 [00:00<00:00, 32.41it/s]100%|##########| 26/26 [00:00<00:00, 31.52it/s]100%|##########| 26/26 [00:00<00:00, 28.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 471 tensor(1.2794e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 448 tensor(1.5529e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 419 tensor(-6.0093e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6968 (5.6994)	zero_count 0.0000 (7.6050)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.03it/s] 27%|##6       | 7/26 [00:00<00:00, 33.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.36it/s] 50%|#####     | 13/26 [00:00<00:00, 42.81it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.99it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.99it/s] 96%|#########6| 25/26 [00:00<00:00, 49.40it/s]100%|##########| 26/26 [00:00<00:00, 41.15it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.50 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.566 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.566 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.49 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.44it/s]
Test: [  0/  1]	Loss 1.424 (1.424)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.424 (1.424)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.424 (1.424)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.424 (1.424)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 38/  1]	epoch_time 0.0393 (0.0414)	validation_time 0.0003 (0.0007)	train_time 0.0390 (0.0405)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.03it/s] 19%|#9        | 5/26 [00:00<00:01, 19.35it/s] 35%|###4      | 9/26 [00:00<00:00, 25.57it/s] 46%|####6     | 12/26 [00:00<00:00, 26.77it/s] 62%|######1   | 16/26 [00:00<00:00, 30.88it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.96it/s] 92%|#########2| 24/26 [00:00<00:00, 30.65it/s]100%|##########| 26/26 [00:00<00:00, 26.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 455 tensor(-5.1135e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 423 tensor(1.7672e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 412 tensor(5.7059e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6960 (5.6988)	zero_count 0.0000 (9.4770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.60it/s] 23%|##3       | 6/26 [00:00<00:00, 25.64it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.64it/s] 42%|####2     | 11/26 [00:00<00:00, 34.24it/s] 62%|######1   | 16/26 [00:00<00:00, 39.38it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.38it/s] 85%|########4 | 22/26 [00:00<00:00, 41.97it/s]100%|##########| 26/26 [00:00<00:00, 36.54it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.49 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.87it/s]
Test: [  0/  1]	Loss 1.422 (1.422)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.422 (1.422)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.422 (1.422)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.422 (1.422)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 39/  1]	epoch_time 0.0400 (0.0413)	validation_time 0.0006 (0.0007)	train_time 0.0393 (0.0405)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.50it/s] 23%|##3       | 6/26 [00:00<00:00, 27.07it/s] 38%|###8      | 10/26 [00:00<00:00, 30.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.41it/s] 69%|######9   | 18/26 [00:00<00:00, 30.32it/s] 85%|########4 | 22/26 [00:00<00:00, 29.67it/s]100%|##########| 26/26 [00:00<00:00, 31.32it/s]100%|##########| 26/26 [00:00<00:00, 28.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 406 tensor(2.4931e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 407 tensor(1.7998e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6956 (5.6978)	zero_count 0.0000 (8.1510)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.41it/s] 27%|##6       | 7/26 [00:00<00:00, 36.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.53it/s] 46%|####6     | 12/26 [00:00<00:00, 41.93it/s] 65%|######5   | 17/26 [00:00<00:00, 44.09it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.09it/s] 85%|########4 | 22/26 [00:00<00:00, 42.25it/s]100%|##########| 26/26 [00:00<00:00, 38.48it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.49 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.11it/s]
Test: [  0/  1]	Loss 1.420 (1.420)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.420 (1.420)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.420 (1.420)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.420 (1.420)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 40/  1]	epoch_time 0.0388 (0.0413)	validation_time 0.0005 (0.0007)	train_time 0.0384 (0.0404)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.05it/s] 19%|#9        | 5/26 [00:00<00:00, 24.00it/s] 35%|###4      | 9/26 [00:00<00:00, 28.76it/s] 50%|#####     | 13/26 [00:00<00:00, 32.11it/s] 65%|######5   | 17/26 [00:00<00:00, 33.78it/s] 81%|########  | 21/26 [00:00<00:00, 33.07it/s] 96%|#########6| 25/26 [00:00<00:00, 35.07it/s]100%|##########| 26/26 [00:00<00:00, 30.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 385 tensor(9.0821e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6985 (5.6968)	zero_count 0.0000 (4.9140)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 27%|##6       | 7/26 [00:00<00:00, 30.65it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.65it/s] 50%|#####     | 13/26 [00:00<00:00, 38.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.47it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.47it/s] 96%|#########6| 25/26 [00:00<00:00, 46.07it/s]100%|##########| 26/26 [00:00<00:00, 37.68it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.49 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.01it/s]
Test: [  0/  1]	Loss 1.421 (1.421)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.421 (1.421)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 1.421 (1.421)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.421 (1.421)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Overall Timing[ 41/  1]	epoch_time 0.0359 (0.0411)	validation_time 0.0003 (0.0007)	train_time 0.0356 (0.0403)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.46it/s] 19%|#9        | 5/26 [00:00<00:00, 24.56it/s] 35%|###4      | 9/26 [00:00<00:00, 29.67it/s] 50%|#####     | 13/26 [00:00<00:00, 32.89it/s] 65%|######5   | 17/26 [00:00<00:00, 34.55it/s] 81%|########  | 21/26 [00:00<00:00, 33.20it/s] 96%|#########6| 25/26 [00:00<00:00, 32.51it/s]100%|##########| 26/26 [00:00<00:00, 29.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 377 tensor(-1.4166e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 421 tensor(2.2305e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6982 (5.6976)	zero_count 0.0000 (8.7360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.72it/s] 19%|#9        | 5/26 [00:00<00:01, 12.72it/s]                                               19%|#9        | 5/26 [00:00<00:01, 12.72it/s] 42%|####2     | 11/26 [00:00<00:00, 23.86it/s] 65%|######5   | 17/26 [00:00<00:00, 32.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 32.79it/s] 88%|########8 | 23/26 [00:00<00:00, 37.51it/s]100%|##########| 26/26 [00:00<00:00, 27.36it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.49 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.70it/s]
Test: [  0/  1]	Loss 1.421 (1.421)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.421 (1.421)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 1.421 (1.421)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.421 (1.421)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Overall Timing[ 42/  1]	epoch_time 0.0438 (0.0412)	validation_time 0.0004 (0.0007)	train_time 0.0434 (0.0404)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.70it/s] 19%|#9        | 5/26 [00:00<00:01, 15.31it/s] 35%|###4      | 9/26 [00:00<00:00, 22.84it/s] 50%|#####     | 13/26 [00:00<00:00, 27.68it/s] 65%|######5   | 17/26 [00:00<00:00, 31.16it/s] 81%|########  | 21/26 [00:00<00:00, 31.25it/s] 96%|#########6| 25/26 [00:00<00:00, 31.00it/s]100%|##########| 26/26 [00:01<00:00, 24.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 381 tensor(-8.1312e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 417 tensor(9.9383e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6981 (5.6981)	zero_count 0.0000 (8.7360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.68it/s] 31%|###       | 8/26 [00:00<00:00, 41.15it/s]                                               31%|###       | 8/26 [00:00<00:00, 41.15it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.17it/s] 77%|#######6  | 20/26 [00:00<00:00, 49.65it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 49.65it/s]100%|##########| 26/26 [00:00<00:00, 52.74it/s]100%|##########| 26/26 [00:00<00:00, 44.01it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.49 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.62it/s]
Test: [  0/  1]	Loss 1.421 (1.421)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.421 (1.421)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 1.421 (1.421)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.421 (1.421)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Overall Timing[ 43/  1]	epoch_time 0.0390 (0.0412)	validation_time 0.0003 (0.0007)	train_time 0.0386 (0.0404)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.61it/s] 27%|##6       | 7/26 [00:00<00:00, 31.88it/s] 42%|####2     | 11/26 [00:00<00:00, 34.22it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.94it/s] 88%|########8 | 23/26 [00:00<00:00, 30.93it/s]100%|##########| 26/26 [00:00<00:00, 29.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 385 tensor(-1.1397e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 409 tensor(9.4356e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6984 (5.6985)	zero_count 0.0000 (8.8920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.59it/s] 12%|#1        | 3/26 [00:00<00:01, 14.71it/s] 31%|###       | 8/26 [00:00<00:00, 29.68it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.68it/s] 50%|#####     | 13/26 [00:00<00:00, 36.89it/s] 69%|######9   | 18/26 [00:00<00:00, 37.10it/s]                                                69%|######9   | 18/26 [00:00<00:00, 37.10it/s] 88%|########8 | 23/26 [00:00<00:00, 39.67it/s]100%|##########| 26/26 [00:00<00:00, 33.19it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.49 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.75it/s]
Test: [  0/  1]	Loss 1.422 (1.422)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.422 (1.422)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.422 (1.422)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.422 (1.422)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 44/  1]	epoch_time 0.0391 (0.0411)	validation_time 0.0004 (0.0007)	train_time 0.0386 (0.0403)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.66it/s] 19%|#9        | 5/26 [00:00<00:00, 25.14it/s] 35%|###4      | 9/26 [00:00<00:00, 29.93it/s] 50%|#####     | 13/26 [00:00<00:00, 31.91it/s] 65%|######5   | 17/26 [00:00<00:00, 29.43it/s] 81%|########  | 21/26 [00:00<00:00, 29.14it/s] 96%|#########6| 25/26 [00:00<00:00, 30.70it/s]100%|##########| 26/26 [00:00<00:00, 26.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 386 tensor(-9.6624e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 380 tensor(8.5655e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 460 tensor(2.7928e-08, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 460 tensor(0., device='cuda:0')
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6994 (5.6991)	zero_count 0.0000 (9.9840)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.07it/s] 23%|##3       | 6/26 [00:00<00:00, 23.84it/s] 38%|###8      | 10/26 [00:00<00:00, 29.72it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.72it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.87it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.53it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.53it/s]100%|##########| 26/26 [00:00<00:00, 44.77it/s]100%|##########| 26/26 [00:00<00:00, 32.96it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.49 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.47it/s]
Test: [  0/  1]	Loss 1.422 (1.422)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.422 (1.422)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.422 (1.422)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.422 (1.422)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 45/  1]	epoch_time 0.0409 (0.0411)	validation_time 0.0004 (0.0007)	train_time 0.0405 (0.0403)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.27it/s] 19%|#9        | 5/26 [00:00<00:01, 18.95it/s] 35%|###4      | 9/26 [00:00<00:00, 25.50it/s] 50%|#####     | 13/26 [00:00<00:00, 28.91it/s] 62%|######1   | 16/26 [00:00<00:00, 27.81it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.29it/s] 92%|#########2| 24/26 [00:00<00:00, 30.71it/s]100%|##########| 26/26 [00:01<00:00, 25.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 465 tensor(-5.1163e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 406 tensor(-1.0478e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 390 tensor(7.1343e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 464 tensor(2.6221e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 457 tensor(1.0807e-06, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6989 (5.6990)	zero_count 47.0000 (13.7720)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.79it/s] 15%|#5        | 4/26 [00:00<00:01, 21.43it/s] 35%|###4      | 9/26 [00:00<00:00, 33.55it/s]                                               35%|###4      | 9/26 [00:00<00:00, 33.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.77it/s] 77%|#######6  | 20/26 [00:00<00:00, 44.91it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 44.91it/s]100%|##########| 26/26 [00:00<00:00, 49.62it/s]100%|##########| 26/26 [00:00<00:00, 37.68it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.48 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 22.22it/s]
Test: [  0/  1]	Loss 1.423 (1.423)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.423 (1.423)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.423 (1.423)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.423 (1.423)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 46/  1]	epoch_time 0.0398 (0.0411)	validation_time 0.0009 (0.0007)	train_time 0.0389 (0.0403)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 15%|#5        | 4/26 [00:00<00:01, 15.88it/s] 31%|###       | 8/26 [00:00<00:00, 23.48it/s] 46%|####6     | 12/26 [00:00<00:00, 28.16it/s] 62%|######1   | 16/26 [00:00<00:00, 30.06it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.68it/s] 92%|#########2| 24/26 [00:00<00:00, 29.07it/s]100%|##########| 26/26 [00:01<00:00, 25.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 457 tensor(5.0599e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 378 tensor(-4.2135e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 462 tensor(9.4338e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 463 tensor(8.3035e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6991 (5.6988)	zero_count 0.0000 (11.3100)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.72it/s] 23%|##3       | 6/26 [00:00<00:00, 22.02it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.02it/s] 42%|####2     | 11/26 [00:00<00:00, 30.68it/s] 62%|######1   | 16/26 [00:00<00:00, 36.51it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.51it/s] 81%|########  | 21/26 [00:00<00:00, 39.41it/s]100%|##########| 26/26 [00:00<00:00, 42.19it/s]100%|##########| 26/26 [00:00<00:00, 31.99it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.48 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.01it/s]
Test: [  0/  1]	Loss 1.424 (1.424)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.424 (1.424)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.424 (1.424)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.424 (1.424)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 47/  1]	epoch_time 0.0403 (0.0411)	validation_time 0.0004 (0.0007)	train_time 0.0398 (0.0403)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.93it/s] 15%|#5        | 4/26 [00:00<00:01, 17.91it/s] 31%|###       | 8/26 [00:00<00:00, 22.85it/s] 46%|####6     | 12/26 [00:00<00:00, 27.64it/s] 62%|######1   | 16/26 [00:00<00:00, 30.11it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.69it/s] 88%|########8 | 23/26 [00:00<00:00, 28.89it/s]100%|##########| 26/26 [00:01<00:00, 25.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 460 tensor(2.9531e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 462 tensor(2.5078e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 383 tensor(-2.8250e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 389 tensor(1.2471e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 467 tensor(1.2624e-06, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6993 (5.6992)	zero_count 0.0000 (15.5220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.45it/s] 27%|##6       | 7/26 [00:00<00:00, 32.37it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.37it/s] 50%|#####     | 13/26 [00:00<00:00, 41.76it/s] 69%|######9   | 18/26 [00:00<00:00, 42.50it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.50it/s] 92%|#########2| 24/26 [00:00<00:00, 46.55it/s]100%|##########| 26/26 [00:00<00:00, 38.38it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.48 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.63it/s]
Test: [  0/  1]	Loss 1.425 (1.425)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.425 (1.425)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.425 (1.425)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.425 (1.425)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 48/  1]	epoch_time 0.0426 (0.0411)	validation_time 0.0013 (0.0007)	train_time 0.0413 (0.0403)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.80it/s] 19%|#9        | 5/26 [00:00<00:00, 22.39it/s] 31%|###       | 8/26 [00:00<00:00, 23.84it/s] 46%|####6     | 12/26 [00:00<00:00, 28.42it/s] 62%|######1   | 16/26 [00:00<00:00, 31.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.50it/s] 92%|#########2| 24/26 [00:00<00:00, 30.48it/s]100%|##########| 26/26 [00:00<00:00, 27.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 459 tensor(2.6205e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 458 tensor(5.9028e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 392 tensor(-2.6839e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 375 tensor(3.5256e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 458 tensor(-5.7137e-08, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.56)	train_penalty   0.00 (  0.00)	weight_norm  26.07 ( 26.07)	train_acc   0.46 (  0.50)	train_minacc   0.50 (  0.50)	train_majacc   0.46 (  0.50)	train_corr   0.00 (  0.00)	l1 5.6990 (5.6995)	zero_count 0.0000 (15.7560)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.13it/s] 23%|##3       | 6/26 [00:00<00:00, 32.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.13it/s] 42%|####2     | 11/26 [00:00<00:00, 37.87it/s] 62%|######1   | 16/26 [00:00<00:00, 41.83it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.83it/s] 81%|########  | 21/26 [00:00<00:00, 40.22it/s]100%|##########| 26/26 [00:00<00:00, 42.79it/s]100%|##########| 26/26 [00:00<00:00, 35.91it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.556 (0.556)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.556)	test_acc   0.51 (  0.50)	test_minacc   0.53 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.560 (0.556)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.556 (0.556)	test_acc   0.47 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.46 (  0.50)	Loss_d 0.556 (0.556)	test_acc_d   0.47 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.57 (  0.50)
Test: [  26/  26]	Loss 0.565 (0.557)	test_acc   0.46 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.46 (  0.50)	Loss_d 0.565 (0.557)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.46 (  0.50)	test_corr_d   0.48 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.08it/s]
Test: [  0/  1]	Loss 1.426 (1.426)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.426 (1.426)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.426 (1.426)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.426 (1.426)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.25 (  0.25)
Overall Timing[ 49/  1]	epoch_time 0.0398 (0.0411)	validation_time 0.0004 (0.0007)	train_time 0.0393 (0.0403)
record: (train_acc, test_acc) (0.7535000342726708, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5000000143051148, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.171 MB of 0.171 MB uploadedwandb: \ 0.171 MB of 0.171 MB uploadedwandb: | 0.171 MB of 0.171 MB uploadedwandb: / 0.171 MB of 0.171 MB uploadedwandb: - 0.171 MB of 0.171 MB uploadedwandb: \ 0.038 MB of 0.409 MB uploaded (0.003 MB deduped)wandb: | 0.409 MB of 0.409 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                           global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/diagnostics/epoch_time_val █▂▂▂▂▂▁▂▂▂▂▂▁▃▂▂▂▁▂▃▂▂▂▂▂▂▁▁▁▁▂▂▁▁▂▂▂▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/diagnostics/train_time_val █▂▃▂▂▂▂▂▂▂▂▂▂▃▂▂▂▂▂▃▂▂▂▂▂▂▁▁▂▁▃▂▂▁▃▂▂▂▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▇▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/Loss_avg ▃▃▄▄▄▄▆▆▆▇▇█▁▁▁▂▂▂▂▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/Loss_d_avg ▃▃▄▄▄▄▆▆▆▇▇█▁▁▁▂▂▂▂▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/Loss_d_val ▃▃▄▄▄▄▆▆▆▇▇█▁▁▁▂▂▂▂▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/Loss_val ▃▃▄▄▄▄▆▆▆▇▇█▁▁▁▂▂▂▂▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_acc_avg ▁▁▁▁▂▂▃▄▄▄▃▄▇██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_acc_d_avg ▁▁▁▁▂▂▃▄▄▄▃▄▇██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_acc_d_val ▁▁▁▁▂▂▃▄▄▄▃▄▇██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_acc_val ▁▁▁▁▂▂▃▄▄▄▃▄▇██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_corr_d_avg ████▇▇▆▆▆▆▆▅▂▁▂▂▂▂▂▁▂▂▂▂▁▁▂▂▁▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_corr_d_val ████▇▇▆▆▆▆▆▅▂▁▂▂▂▂▂▁▂▂▂▂▁▁▂▂▁▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_majacc_avg ████████████▇▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_majacc_d_avg ████████████▇▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_majacc_d_val ████████████▇▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_majacc_val ████████████▇▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_minacc_avg ▁▁▁▁▂▂▃▃▄▄▃▄▇██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_minacc_d_avg ▁▁▁▁▂▂▃▃▄▄▃▄▇██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_minacc_d_val ▁▁▁▁▂▂▃▃▄▄▃▄▇██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_minacc_val ▁▁▁▁▂▂▃▃▄▄▃▄▇██████▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/Loss_val ██▇▇▆▆▆▅▄▄▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/l1_avg █▆▅▅▅▅▅▅▅▆▇▇▆▁▁▂▂▂▂▄▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/l1_val ▇▆▆▅▄▅▆▇▆▆▆█▃▁▁▂▂▂▂▅▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇█████▆▆▆▆▆▆▆▃▁▁▃▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_acc_val ▇▇▇▇▇▇▇▇████▇▅▆▆▆▆▆▇▁▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_majacc_avg ▇██████▇▇▇▇▇▇▅▅▅▅▅▅▅▂▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_majacc_val ████▇█▇▇████▆▅▆▅▅▅▅▇▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_minacc_avg ▁▁▁▂▃▄▄▄▅▆▆▆▇██████▇▇▇▇▇▆▇▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_minacc_val ▁▁▁▂▂▄▄▅▆▆▆▆▇▇▇▇▇▇▇▆▆▅▅▅█▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_nll_avg █▅▅▄▃▃▃▂▂▁▁▁▂▄▄▄▄▄▄▄▇▇▇▇████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_nll_val ▅▅▅▄▄▃▃▂▁▁▁▁▄▆▄▄▄▄▄▄▇███████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_penalty_avg █▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_penalty_val █▇█▅▄▄▂▂▂▂▂▁▁▁▂▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/weight_norm_avg ▁▄▄▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇█████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/weight_norm_val ▁▂▃▃▃▃▄▄▄▅▅▆▇▇▇▇▇▇▇█████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▂▁▁▁▆▆▁▂▃▁▃▂▂▂▃▃▃▄▃▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▄▁▁
wandb: 
wandb: Run summary:
wandb:                                                                           global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/diagnostics/epoch_time_val 0.03977
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/diagnostics/train_time_val 0.03933
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/diagnostics/validation_time_val 0.00042
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/Loss_avg 1.42595
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/Loss_d_avg 1.42595
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/Loss_d_val 1.42595
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/Loss_val 1.42595
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_corr_d_avg 0.25362
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_corr_d_val 0.25362
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/Loss_val 6e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/l1_avg 5.69947
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/l1_val 5.69905
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_acc_val 0.464
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_majacc_avg 0.49989
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_majacc_val 0.45833
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_minacc_avg 0.50164
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_minacc_val 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_nll_avg 0.55708
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_nll_val 0.56528
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/weight_norm_avg 26.06855
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/weight_norm_val 26.06857
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/zero_count_avg 15.756
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/91/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/cypmcvor
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_153036-cypmcvor/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_153318-0m2hqc10
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/0m2hqc10
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1229
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6079, 3, 32, 32) (5921, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:42,  1.70s/it] 19%|#9        | 5/26 [00:01<00:05,  3.61it/s] 35%|###4      | 9/26 [00:01<00:02,  7.16it/s] 50%|#####     | 13/26 [00:02<00:01, 11.09it/s] 65%|######5   | 17/26 [00:02<00:00, 15.21it/s] 81%|########  | 21/26 [00:02<00:00, 19.14it/s] 96%|#########6| 25/26 [00:02<00:00, 22.77it/s]100%|##########| 26/26 [00:02<00:00,  9.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.387 (0.601)	train_nll   0.39 (  0.60)	train_penalty   0.04 (  0.41)	weight_norm  21.00 ( 18.18)	train_acc   0.86 (  0.79)	train_minacc   0.00 (  0.10)	train_majacc   1.00 (  0.91)	train_corr   0.00 (  0.00)	l1 6.4695 (7.3104)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.25it/s] 19%|#9        | 5/26 [00:00<00:00, 24.13it/s]                                               19%|#9        | 5/26 [00:00<00:00, 24.13it/s] 42%|####2     | 11/26 [00:00<00:00, 36.93it/s] 62%|######1   | 16/26 [00:00<00:00, 36.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.59it/s] 81%|########  | 21/26 [00:00<00:00, 39.83it/s]100%|##########| 26/26 [00:00<00:00, 42.27it/s]100%|##########| 26/26 [00:00<00:00, 35.03it/s]
Test: [   0/  26]	Loss 0.431 (0.431)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.431 (0.431)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.411 (0.419)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.411 (0.419)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.415 (0.424)	test_acc   0.86 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.415 (0.424)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.378 (0.421)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.378 (0.421)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.55it/s]100%|##########| 1/1 [00:00<00:00,  2.55it/s]
Test: [  0/  1]	Loss 1.853 (1.853)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.853 (1.853)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.853 (1.853)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.853 (1.853)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0776 (0.0776)	validation_time 0.0066 (0.0066)	train_time 0.0692 (0.0692)
record: (train_acc, test_acc) (0.8459000223279, 0.11900000274181366)
last accs (train_acc, test_acc) (0.8459000223279, 0.11900000274181366)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.86it/s] 15%|#5        | 4/26 [00:00<00:01, 15.79it/s] 31%|###       | 8/26 [00:00<00:00, 23.08it/s] 46%|####6     | 12/26 [00:00<00:00, 27.46it/s] 62%|######1   | 16/26 [00:00<00:00, 30.30it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.25it/s] 92%|#########2| 24/26 [00:00<00:00, 33.40it/s]100%|##########| 26/26 [00:00<00:00, 27.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.362 (0.412)	train_nll   0.36 (  0.41)	train_penalty   0.04 (  0.06)	weight_norm  22.15 ( 21.79)	train_acc   0.87 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.7925 (6.6881)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.51it/s] 27%|##6       | 7/26 [00:00<00:00, 34.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.09it/s] 46%|####6     | 12/26 [00:00<00:00, 40.31it/s] 65%|######5   | 17/26 [00:00<00:00, 39.04it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.04it/s] 85%|########4 | 22/26 [00:00<00:00, 42.08it/s]100%|##########| 26/26 [00:00<00:00, 37.41it/s]
Test: [   0/  26]	Loss 0.415 (0.415)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.415 (0.415)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.395 (0.399)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.395 (0.399)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.403 (0.404)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.403 (0.404)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.360 (0.402)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.360 (0.402)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.63it/s]
Test: [  0/  1]	Loss 1.766 (1.766)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.766 (1.766)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.766 (1.766)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.766 (1.766)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0378 (0.0577)	validation_time 0.0004 (0.0035)	train_time 0.0373 (0.0533)
record: (train_acc, test_acc) (0.8459000223279, 0.11900000274181366)
last accs (train_acc, test_acc) (0.848700025856495, 0.11000000685453415)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.65it/s] 19%|#9        | 5/26 [00:00<00:00, 21.59it/s] 35%|###4      | 9/26 [00:00<00:00, 26.88it/s] 50%|#####     | 13/26 [00:00<00:00, 29.52it/s] 65%|######5   | 17/26 [00:00<00:00, 31.86it/s] 81%|########  | 21/26 [00:00<00:00, 33.46it/s] 96%|#########6| 25/26 [00:00<00:00, 34.71it/s]100%|##########| 26/26 [00:00<00:00, 29.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.352 (0.401)	train_nll   0.35 (  0.40)	train_penalty   0.03 (  0.05)	weight_norm  22.27 ( 22.23)	train_acc   0.86 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.9303 (6.9022)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.44it/s] 27%|##6       | 7/26 [00:00<00:00, 32.62it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.62it/s] 46%|####6     | 12/26 [00:00<00:00, 38.60it/s] 65%|######5   | 17/26 [00:00<00:00, 40.65it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.65it/s] 85%|########4 | 22/26 [00:00<00:00, 43.04it/s]100%|##########| 26/26 [00:00<00:00, 36.87it/s]
Test: [   0/  26]	Loss 0.415 (0.415)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.415 (0.415)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.377 (0.386)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.377 (0.386)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.401 (0.388)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.401 (0.388)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.349 (0.386)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.349 (0.386)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.06it/s]
Test: [  0/  1]	Loss 1.782 (1.782)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.782 (1.782)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.782 (1.782)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.782 (1.782)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Overall Timing[  2/  1]	epoch_time 0.0386 (0.0514)	validation_time 0.0004 (0.0025)	train_time 0.0382 (0.0482)
record: (train_acc, test_acc) (0.8459000223279, 0.11900000274181366)
last accs (train_acc, test_acc) (0.848700028181076, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.01it/s] 19%|#9        | 5/26 [00:00<00:01, 16.02it/s] 35%|###4      | 9/26 [00:00<00:00, 23.10it/s] 50%|#####     | 13/26 [00:00<00:00, 27.15it/s] 65%|######5   | 17/26 [00:00<00:00, 29.86it/s] 81%|########  | 21/26 [00:00<00:00, 31.59it/s] 96%|#########6| 25/26 [00:00<00:00, 32.63it/s]100%|##########| 26/26 [00:01<00:00, 25.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.332 (0.382)	train_nll   0.33 (  0.38)	train_penalty   0.03 (  0.04)	weight_norm  22.32 ( 22.29)	train_acc   0.87 (  0.85)	train_minacc   0.03 (  0.04)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.9555 (7.0385)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.82it/s] 23%|##3       | 6/26 [00:00<00:01, 19.23it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.23it/s] 46%|####6     | 12/26 [00:00<00:00, 31.19it/s] 69%|######9   | 18/26 [00:00<00:00, 37.15it/s]                                                69%|######9   | 18/26 [00:00<00:00, 37.15it/s] 88%|########8 | 23/26 [00:00<00:00, 38.56it/s]100%|##########| 26/26 [00:00<00:00, 31.41it/s]
Test: [   0/  26]	Loss 0.389 (0.389)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.389 (0.389)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.344 (0.359)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.344 (0.359)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.378 (0.359)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.378 (0.359)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.332 (0.357)	test_acc   0.87 (  0.85)	test_minacc   0.03 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.332 (0.357)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.03 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.97it/s]
Test: [  0/  1]	Loss 1.739 (1.739)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.739 (1.739)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.739 (1.739)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.739 (1.739)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
Overall Timing[  3/  1]	epoch_time 0.0379 (0.0480)	validation_time 0.0009 (0.0021)	train_time 0.0370 (0.0454)
record: (train_acc, test_acc) (0.8459000223279, 0.11900000274181366)
last accs (train_acc, test_acc) (0.8506000222563743, 0.11600000411272049)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.83it/s] 19%|#9        | 5/26 [00:00<00:00, 26.24it/s] 35%|###4      | 9/26 [00:00<00:00, 32.03it/s] 50%|#####     | 13/26 [00:00<00:00, 34.17it/s] 65%|######5   | 17/26 [00:00<00:00, 35.89it/s] 81%|########  | 21/26 [00:00<00:00, 36.98it/s]100%|##########| 26/26 [00:00<00:00, 38.52it/s]100%|##########| 26/26 [00:00<00:00, 32.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.321 (0.360)	train_nll   0.32 (  0.36)	train_penalty   0.02 (  0.03)	weight_norm  22.39 ( 22.35)	train_acc   0.87 (  0.85)	train_minacc   0.03 (  0.12)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 6.9432 (7.1724)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.10it/s] 15%|#5        | 4/26 [00:00<00:01, 13.53it/s] 35%|###4      | 9/26 [00:00<00:00, 25.49it/s]                                               35%|###4      | 9/26 [00:00<00:00, 25.49it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.73it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 34.73it/s] 92%|#########2| 24/26 [00:00<00:00, 38.79it/s]100%|##########| 26/26 [00:00<00:00, 29.59it/s]
Test: [   0/  26]	Loss 0.372 (0.372)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.372 (0.372)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.325 (0.338)	test_acc   0.86 (  0.85)	test_minacc   0.05 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.325 (0.338)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.05 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.96)
Test: [  20/  26]	Loss 0.351 (0.340)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.351 (0.340)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.312 (0.337)	test_acc   0.87 (  0.85)	test_minacc   0.03 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.312 (0.337)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.03 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.72it/s]
Test: [  0/  1]	Loss 1.750 (1.750)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.750 (1.750)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.750 (1.750)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.750 (1.750)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Overall Timing[  4/  1]	epoch_time 0.0383 (0.0461)	validation_time 0.0004 (0.0018)	train_time 0.0379 (0.0439)
record: (train_acc, test_acc) (0.8459000223279, 0.11900000274181366)
last accs (train_acc, test_acc) (0.8498000269532203, 0.11100000888109207)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.68it/s] 19%|#9        | 5/26 [00:00<00:01, 17.90it/s] 35%|###4      | 9/26 [00:00<00:00, 24.87it/s] 50%|#####     | 13/26 [00:00<00:00, 29.06it/s] 65%|######5   | 17/26 [00:00<00:00, 31.80it/s] 81%|########  | 21/26 [00:00<00:00, 33.36it/s] 96%|#########6| 25/26 [00:00<00:00, 34.40it/s]100%|##########| 26/26 [00:00<00:00, 27.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.314 (0.339)	train_nll   0.31 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.47 ( 22.43)	train_acc   0.89 (  0.85)	train_minacc   0.21 (  0.20)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 7.0324 (7.1647)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.75it/s] 27%|##6       | 7/26 [00:00<00:00, 32.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.58it/s] 46%|####6     | 12/26 [00:00<00:00, 39.10it/s] 65%|######5   | 17/26 [00:00<00:00, 37.42it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.42it/s] 85%|########4 | 22/26 [00:00<00:00, 40.97it/s]100%|##########| 26/26 [00:00<00:00, 35.48it/s]
Test: [   0/  26]	Loss 0.364 (0.364)	test_acc   0.84 (  0.84)	test_minacc   0.08 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.364 (0.364)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.310 (0.327)	test_acc   0.85 (  0.86)	test_minacc   0.15 (  0.13)	test_majacc   0.98 (  0.99)	Loss_d 0.310 (0.327)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.15 (  0.13)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.93 (  0.94)
Test: [  20/  26]	Loss 0.342 (0.329)	test_acc   0.86 (  0.85)	test_minacc   0.11 (  0.12)	test_majacc   0.99 (  0.99)	Loss_d 0.342 (0.329)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.11 (  0.12)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.299 (0.326)	test_acc   0.88 (  0.86)	test_minacc   0.18 (  0.12)	test_majacc   0.99 (  0.99)	Loss_d 0.299 (0.326)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.18 (  0.12)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.28it/s]
Test: [  0/  1]	Loss 1.744 (1.744)	test_acc   0.16 (  0.16)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.744 (1.744)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.87 (  0.87)
Test: [  1/  1]	Loss 1.744 (1.744)	test_acc   0.16 (  0.16)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.744 (1.744)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.87 (  0.87)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0390 (0.0449)	validation_time 0.0003 (0.0015)	train_time 0.0387 (0.0430)
record: (train_acc, test_acc) (0.8550000237822533, 0.15800000727176666)
last accs (train_acc, test_acc) (0.8550000237822533, 0.15800000727176666)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 15%|#5        | 4/26 [00:00<00:01, 18.31it/s] 31%|###       | 8/26 [00:00<00:00, 25.82it/s] 46%|####6     | 12/26 [00:00<00:00, 29.65it/s] 62%|######1   | 16/26 [00:00<00:00, 31.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.51it/s] 92%|#########2| 24/26 [00:00<00:00, 35.04it/s]100%|##########| 26/26 [00:00<00:00, 28.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.310 (0.327)	train_nll   0.31 (  0.33)	train_penalty   0.02 (  0.02)	weight_norm  22.57 ( 22.51)	train_acc   0.86 (  0.86)	train_minacc   0.27 (  0.24)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 7.1835 (7.2429)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.47it/s] 31%|###       | 8/26 [00:00<00:00, 39.53it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.53it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.99it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.90it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.90it/s] 92%|#########2| 24/26 [00:00<00:00, 42.55it/s]100%|##########| 26/26 [00:00<00:00, 39.77it/s]
Test: [   0/  26]	Loss 0.355 (0.355)	test_acc   0.85 (  0.85)	test_minacc   0.14 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 0.355 (0.355)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.311 (0.326)	test_acc   0.88 (  0.86)	test_minacc   0.31 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 0.311 (0.326)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.31 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.344 (0.326)	test_acc   0.86 (  0.86)	test_minacc   0.11 (  0.18)	test_majacc   0.99 (  0.98)	Loss_d 0.344 (0.326)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.11 (  0.18)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.93)
Test: [  26/  26]	Loss 0.296 (0.321)	test_acc   0.87 (  0.86)	test_minacc   0.24 (  0.19)	test_majacc   0.97 (  0.98)	Loss_d 0.296 (0.321)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.24 (  0.19)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.91 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.27it/s]
Test: [  0/  1]	Loss 1.886 (1.886)	test_acc   0.21 (  0.21)	test_minacc   0.12 (  0.12)	test_majacc   0.97 (  0.97)	Loss_d 1.886 (1.886)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.83 (  0.83)
Test: [  1/  1]	Loss 1.886 (1.886)	test_acc   0.21 (  0.21)	test_minacc   0.12 (  0.12)	test_majacc   0.97 (  0.97)	Loss_d 1.886 (1.886)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.83 (  0.83)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0381 (0.0439)	validation_time 0.0004 (0.0014)	train_time 0.0377 (0.0423)
record: (train_acc, test_acc) (0.8623000217676162, 0.20600001513957977)
last accs (train_acc, test_acc) (0.8623000217676162, 0.20600001513957977)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.29it/s] 19%|#9        | 5/26 [00:00<00:00, 21.10it/s] 35%|###4      | 9/26 [00:00<00:00, 26.95it/s] 50%|#####     | 13/26 [00:00<00:00, 30.08it/s] 65%|######5   | 17/26 [00:00<00:00, 32.23it/s] 81%|########  | 21/26 [00:00<00:00, 33.67it/s] 96%|#########6| 25/26 [00:00<00:00, 34.49it/s]100%|##########| 26/26 [00:00<00:00, 28.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.299 (0.314)	train_nll   0.30 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.69 ( 22.63)	train_acc   0.87 (  0.86)	train_minacc   0.18 (  0.32)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3124 (7.3068)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.25it/s] 15%|#5        | 4/26 [00:00<00:01, 18.52it/s] 35%|###4      | 9/26 [00:00<00:00, 31.75it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.75it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.61it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.61it/s] 92%|#########2| 24/26 [00:00<00:00, 39.93it/s]100%|##########| 26/26 [00:00<00:00, 34.93it/s]
Test: [   0/  26]	Loss 0.340 (0.340)	test_acc   0.85 (  0.85)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 0.340 (0.340)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.299 (0.309)	test_acc   0.87 (  0.87)	test_minacc   0.25 (  0.21)	test_majacc   0.98 (  0.98)	Loss_d 0.299 (0.309)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.25 (  0.21)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.325 (0.309)	test_acc   0.85 (  0.86)	test_minacc   0.11 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.325 (0.309)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.11 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.281 (0.305)	test_acc   0.88 (  0.86)	test_minacc   0.24 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.281 (0.305)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.24 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.98it/s]
Test: [  0/  1]	Loss 1.923 (1.923)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 1.923 (1.923)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.923 (1.923)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 1.923 (1.923)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.84 (  0.84)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0371 (0.0431)	validation_time 0.0003 (0.0012)	train_time 0.0367 (0.0416)
record: (train_acc, test_acc) (0.8648000245690346, 0.2110000103712082)
last accs (train_acc, test_acc) (0.8648000245690346, 0.2110000103712082)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.32it/s] 19%|#9        | 5/26 [00:00<00:00, 21.60it/s] 35%|###4      | 9/26 [00:00<00:00, 28.20it/s] 50%|#####     | 13/26 [00:00<00:00, 32.30it/s] 65%|######5   | 17/26 [00:00<00:00, 34.43it/s] 85%|########4 | 22/26 [00:00<00:00, 36.73it/s]100%|##########| 26/26 [00:00<00:00, 37.01it/s]100%|##########| 26/26 [00:00<00:00, 30.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.283 (0.301)	train_nll   0.28 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.82 ( 22.75)	train_acc   0.88 (  0.87)	train_minacc   0.36 (  0.36)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.2036 (7.3096)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.17it/s] 31%|###       | 8/26 [00:00<00:00, 39.88it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.88it/s] 50%|#####     | 13/26 [00:00<00:00, 41.97it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.41it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.41it/s] 92%|#########2| 24/26 [00:00<00:00, 43.48it/s]100%|##########| 26/26 [00:00<00:00, 39.89it/s]
Test: [   0/  26]	Loss 0.332 (0.332)	test_acc   0.86 (  0.86)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.332 (0.332)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.283 (0.294)	test_acc   0.88 (  0.87)	test_minacc   0.29 (  0.25)	test_majacc   0.98 (  0.98)	Loss_d 0.283 (0.294)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.29 (  0.25)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.92)
Test: [  20/  26]	Loss 0.313 (0.294)	test_acc   0.85 (  0.87)	test_minacc   0.11 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 0.313 (0.294)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.11 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.263 (0.289)	test_acc   0.89 (  0.87)	test_minacc   0.30 (  0.24)	test_majacc   0.98 (  0.98)	Loss_d 0.263 (0.289)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.30 (  0.24)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.06it/s]
Test: [  0/  1]	Loss 1.911 (1.911)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 1.911 (1.911)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 1.911 (1.911)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 1.911 (1.911)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0362 (0.0423)	validation_time 0.0004 (0.0011)	train_time 0.0357 (0.0409)
record: (train_acc, test_acc) (0.870200025498867, 0.2580000162124634)
last accs (train_acc, test_acc) (0.870200025498867, 0.2580000162124634)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.65it/s] 19%|#9        | 5/26 [00:00<00:00, 23.44it/s] 35%|###4      | 9/26 [00:00<00:00, 28.61it/s] 50%|#####     | 13/26 [00:00<00:00, 30.96it/s] 65%|######5   | 17/26 [00:00<00:00, 32.47it/s] 81%|########  | 21/26 [00:00<00:00, 33.75it/s] 96%|#########6| 25/26 [00:00<00:00, 34.72it/s]100%|##########| 26/26 [00:00<00:00, 29.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.265 (0.284)	train_nll   0.27 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.99 ( 22.90)	train_acc   0.88 (  0.87)	train_minacc   0.39 (  0.42)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.3719 (7.4403)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.69it/s] 27%|##6       | 7/26 [00:00<00:00, 34.45it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.45it/s] 46%|####6     | 12/26 [00:00<00:00, 40.34it/s] 65%|######5   | 17/26 [00:00<00:00, 42.87it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.87it/s] 85%|########4 | 22/26 [00:00<00:00, 42.57it/s]100%|##########| 26/26 [00:00<00:00, 39.08it/s]
Test: [   0/  26]	Loss 0.317 (0.317)	test_acc   0.85 (  0.85)	test_minacc   0.24 (  0.24)	test_majacc   0.97 (  0.97)	Loss_d 0.317 (0.317)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.277 (0.289)	test_acc   0.88 (  0.88)	test_minacc   0.34 (  0.29)	test_majacc   0.98 (  0.98)	Loss_d 0.277 (0.289)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.34 (  0.29)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.268 (0.280)	test_acc   0.90 (  0.88)	test_minacc   0.32 (  0.30)	test_majacc   0.99 (  0.98)	Loss_d 0.268 (0.280)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.32 (  0.30)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.91)
Test: [  26/  26]	Loss 0.249 (0.273)	test_acc   0.90 (  0.88)	test_minacc   0.39 (  0.31)	test_majacc   0.98 (  0.98)	Loss_d 0.249 (0.273)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.39 (  0.31)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.19it/s]
Test: [  0/  1]	Loss 2.051 (2.051)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.97 (  0.97)	Loss_d 2.051 (2.051)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 2.051 (2.051)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.97 (  0.97)	Loss_d 2.051 (2.051)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Overall Timing[  9/  1]	epoch_time 0.0375 (0.0418)	validation_time 0.0004 (0.0011)	train_time 0.0370 (0.0405)
record: (train_acc, test_acc) (0.870200025498867, 0.2580000162124634)
last accs (train_acc, test_acc) (0.8804000243544579, 0.2460000067949295)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.67it/s] 19%|#9        | 5/26 [00:00<00:00, 23.77it/s] 35%|###4      | 9/26 [00:00<00:00, 28.59it/s] 50%|#####     | 13/26 [00:00<00:00, 30.62it/s] 65%|######5   | 17/26 [00:00<00:00, 32.34it/s] 81%|########  | 21/26 [00:00<00:00, 33.40it/s] 96%|#########6| 25/26 [00:00<00:00, 33.88it/s]100%|##########| 26/26 [00:00<00:00, 29.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.234 (0.267)	train_nll   0.23 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.22 ( 23.10)	train_acc   0.92 (  0.88)	train_minacc   0.52 (  0.49)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.7900 (7.5578)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.36it/s] 23%|##3       | 6/26 [00:00<00:00, 28.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.73it/s] 42%|####2     | 11/26 [00:00<00:00, 36.82it/s] 62%|######1   | 16/26 [00:00<00:00, 40.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.55it/s] 81%|########  | 21/26 [00:00<00:00, 39.71it/s]100%|##########| 26/26 [00:00<00:00, 42.41it/s]100%|##########| 26/26 [00:00<00:00, 34.84it/s]
Test: [   0/  26]	Loss 0.274 (0.274)	test_acc   0.89 (  0.89)	test_minacc   0.40 (  0.40)	test_majacc   0.98 (  0.98)	Loss_d 0.274 (0.274)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.296 (0.280)	test_acc   0.88 (  0.88)	test_minacc   0.29 (  0.34)	test_majacc   0.98 (  0.98)	Loss_d 0.296 (0.280)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.29 (  0.34)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  20/  26]	Loss 0.253 (0.269)	test_acc   0.89 (  0.88)	test_minacc   0.34 (  0.36)	test_majacc   0.99 (  0.98)	Loss_d 0.253 (0.269)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.34 (  0.36)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.90)
Test: [  26/  26]	Loss 0.203 (0.258)	test_acc   0.92 (  0.89)	test_minacc   0.48 (  0.38)	test_majacc   0.99 (  0.98)	Loss_d 0.203 (0.258)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.48 (  0.38)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.35it/s]
Test: [  0/  1]	Loss 2.331 (2.331)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.95 (  0.95)	Loss_d 2.331 (2.331)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 2.331 (2.331)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.95 (  0.95)	Loss_d 2.331 (2.331)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.74 (  0.74)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0453 (0.0421)	validation_time 0.0004 (0.0010)	train_time 0.0449 (0.0409)
record: (train_acc, test_acc) (0.8890000199079513, 0.2760000228881836)
last accs (train_acc, test_acc) (0.8890000199079513, 0.2760000228881836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.21it/s] 23%|##3       | 6/26 [00:00<00:00, 24.48it/s] 38%|###8      | 10/26 [00:00<00:00, 29.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.40it/s] 69%|######9   | 18/26 [00:00<00:00, 34.07it/s] 85%|########4 | 22/26 [00:00<00:00, 35.17it/s]100%|##########| 26/26 [00:00<00:00, 36.17it/s]100%|##########| 26/26 [00:00<00:00, 30.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.228 (0.257)	train_nll   0.23 (  0.26)	train_penalty   0.01 (  0.01)	weight_norm  23.54 ( 23.38)	train_acc   0.91 (  0.89)	train_minacc   0.64 (  0.53)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 8.1922 (7.6807)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.73it/s] 27%|##6       | 7/26 [00:00<00:00, 28.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.46it/s] 46%|####6     | 12/26 [00:00<00:00, 36.21it/s] 65%|######5   | 17/26 [00:00<00:00, 40.09it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.09it/s] 85%|########4 | 22/26 [00:00<00:00, 39.30it/s]100%|##########| 26/26 [00:00<00:00, 35.21it/s]
Test: [   0/  26]	Loss 0.283 (0.283)	test_acc   0.87 (  0.87)	test_minacc   0.44 (  0.44)	test_majacc   0.95 (  0.95)	Loss_d 0.283 (0.283)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.275 (0.276)	test_acc   0.89 (  0.88)	test_minacc   0.44 (  0.43)	test_majacc   0.97 (  0.96)	Loss_d 0.275 (0.276)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.44 (  0.43)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  20/  26]	Loss 0.275 (0.267)	test_acc   0.89 (  0.89)	test_minacc   0.46 (  0.45)	test_majacc   0.97 (  0.96)	Loss_d 0.275 (0.267)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.46 (  0.45)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.87)
Test: [  26/  26]	Loss 0.193 (0.258)	test_acc   0.92 (  0.89)	test_minacc   0.52 (  0.46)	test_majacc   0.98 (  0.97)	Loss_d 0.193 (0.258)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.52 (  0.46)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.86 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.53it/s]
Test: [  0/  1]	Loss 2.272 (2.272)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 2.272 (2.272)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 2.272 (2.272)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 2.272 (2.272)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.60 (  0.60)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0382 (0.0418)	validation_time 0.0004 (0.0010)	train_time 0.0379 (0.0407)
record: (train_acc, test_acc) (0.8895000173449517, 0.3570000231266022)
last accs (train_acc, test_acc) (0.8895000173449517, 0.3570000231266022)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.22it/s] 19%|#9        | 5/26 [00:00<00:00, 21.05it/s] 35%|###4      | 9/26 [00:00<00:00, 26.96it/s] 50%|#####     | 13/26 [00:00<00:00, 30.47it/s] 65%|######5   | 17/26 [00:00<00:00, 32.20it/s] 81%|########  | 21/26 [00:00<00:00, 33.73it/s] 96%|#########6| 25/26 [00:00<00:00, 34.67it/s]100%|##########| 26/26 [00:00<00:00, 29.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.190 (0.248)	train_nll   0.19 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.92 ( 23.74)	train_acc   0.92 (  0.89)	train_minacc   0.58 (  0.55)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.9570 (7.5848)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.35it/s] 27%|##6       | 7/26 [00:00<00:00, 35.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.18it/s] 46%|####6     | 12/26 [00:00<00:00, 41.03it/s] 65%|######5   | 17/26 [00:00<00:00, 43.17it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.17it/s] 85%|########4 | 22/26 [00:00<00:00, 41.13it/s]100%|##########| 26/26 [00:00<00:00, 38.70it/s]
Test: [   0/  26]	Loss 0.267 (0.267)	test_acc   0.88 (  0.88)	test_minacc   0.44 (  0.44)	test_majacc   0.97 (  0.97)	Loss_d 0.267 (0.267)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.231 (0.245)	test_acc   0.90 (  0.90)	test_minacc   0.47 (  0.49)	test_majacc   0.98 (  0.97)	Loss_d 0.231 (0.245)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  20/  26]	Loss 0.208 (0.233)	test_acc   0.91 (  0.90)	test_minacc   0.46 (  0.51)	test_majacc   0.99 (  0.98)	Loss_d 0.208 (0.233)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.89 (  0.87)
Test: [  26/  26]	Loss 0.143 (0.219)	test_acc   0.95 (  0.91)	test_minacc   0.64 (  0.52)	test_majacc   1.00 (  0.98)	Loss_d 0.143 (0.219)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.64 (  0.52)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.53it/s]
Test: [  0/  1]	Loss 2.567 (2.567)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.92 (  0.92)	Loss_d 2.567 (2.567)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 2.567 (2.567)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.92 (  0.92)	Loss_d 2.567 (2.567)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.62 (  0.62)
Overall Timing[ 12/  1]	epoch_time 0.0394 (0.0416)	validation_time 0.0004 (0.0009)	train_time 0.0390 (0.0405)
record: (train_acc, test_acc) (0.8895000173449517, 0.3570000231266022)
last accs (train_acc, test_acc) (0.9102000244259835, 0.3330000042915344)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.68it/s] 23%|##3       | 6/26 [00:00<00:00, 27.24it/s] 38%|###8      | 10/26 [00:00<00:00, 30.78it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.09it/s] 69%|######9   | 18/26 [00:00<00:00, 34.37it/s] 85%|########4 | 22/26 [00:00<00:00, 35.26it/s]100%|##########| 26/26 [00:00<00:00, 36.25it/s]100%|##########| 26/26 [00:00<00:00, 31.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.189 (0.250)	train_nll   0.19 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  24.32 ( 24.13)	train_acc   0.92 (  0.89)	train_minacc   0.79 (  0.56)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 7.4740 (7.3774)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.43it/s] 27%|##6       | 7/26 [00:00<00:00, 33.97it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.97it/s] 46%|####6     | 12/26 [00:00<00:00, 39.80it/s] 65%|######5   | 17/26 [00:00<00:00, 41.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.45it/s] 85%|########4 | 22/26 [00:00<00:00, 40.70it/s]100%|##########| 26/26 [00:00<00:00, 37.57it/s]
Test: [   0/  26]	Loss 0.206 (0.206)	test_acc   0.92 (  0.92)	test_minacc   0.63 (  0.63)	test_majacc   0.98 (  0.98)	Loss_d 0.206 (0.206)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.193 (0.200)	test_acc   0.94 (  0.93)	test_minacc   0.75 (  0.68)	test_majacc   0.97 (  0.97)	Loss_d 0.193 (0.200)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.75 (  0.68)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.80 (  0.81)
Test: [  20/  26]	Loss 0.208 (0.203)	test_acc   0.91 (  0.92)	test_minacc   0.62 (  0.66)	test_majacc   0.96 (  0.97)	Loss_d 0.208 (0.203)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.62 (  0.66)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.83 (  0.82)
Test: [  26/  26]	Loss 0.132 (0.195)	test_acc   0.96 (  0.92)	test_minacc   0.82 (  0.68)	test_majacc   0.98 (  0.97)	Loss_d 0.132 (0.195)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.82 (  0.68)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.82 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.77it/s]
Test: [  0/  1]	Loss 2.244 (2.244)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.90 (  0.90)	Loss_d 2.244 (2.244)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 2.244 (2.244)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.90 (  0.90)	Loss_d 2.244 (2.244)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.61 (  0.61)
Overall Timing[ 13/  1]	epoch_time 0.0368 (0.0413)	validation_time 0.0005 (0.0009)	train_time 0.0363 (0.0402)
record: (train_acc, test_acc) (0.8895000173449517, 0.3570000231266022)
last accs (train_acc, test_acc) (0.9245000181794166, 0.33900001645088196)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.42it/s] 19%|#9        | 5/26 [00:00<00:01, 19.57it/s] 35%|###4      | 9/26 [00:00<00:00, 26.19it/s] 50%|#####     | 13/26 [00:00<00:00, 29.23it/s] 65%|######5   | 17/26 [00:00<00:00, 30.94it/s] 81%|########  | 21/26 [00:00<00:00, 32.52it/s] 96%|#########6| 25/26 [00:00<00:00, 33.51it/s]100%|##########| 26/26 [00:00<00:00, 27.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.180 (0.220)	train_nll   0.18 (  0.22)	train_penalty   0.00 (  0.01)	weight_norm  24.72 ( 24.52)	train_acc   0.94 (  0.91)	train_minacc   0.82 (  0.64)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.1984 (7.9643)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.63it/s] 27%|##6       | 7/26 [00:00<00:00, 35.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.13it/s] 46%|####6     | 12/26 [00:00<00:00, 40.12it/s] 65%|######5   | 17/26 [00:00<00:00, 38.86it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.86it/s] 85%|########4 | 22/26 [00:00<00:00, 41.50it/s]100%|##########| 26/26 [00:00<00:00, 36.54it/s]
Test: [   0/  26]	Loss 0.214 (0.214)	test_acc   0.92 (  0.92)	test_minacc   0.68 (  0.68)	test_majacc   0.96 (  0.96)	Loss_d 0.214 (0.214)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.190 (0.203)	test_acc   0.92 (  0.91)	test_minacc   0.71 (  0.68)	test_majacc   0.95 (  0.96)	Loss_d 0.190 (0.203)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.71 (  0.68)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.80 (  0.81)
Test: [  20/  26]	Loss 0.185 (0.198)	test_acc   0.94 (  0.92)	test_minacc   0.71 (  0.68)	test_majacc   0.97 (  0.96)	Loss_d 0.185 (0.198)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.71 (  0.68)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.83 (  0.81)
Test: [  26/  26]	Loss 0.146 (0.190)	test_acc   0.96 (  0.92)	test_minacc   0.82 (  0.69)	test_majacc   0.98 (  0.97)	Loss_d 0.146 (0.190)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.82 (  0.69)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.83 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.06it/s]
Test: [  0/  1]	Loss 2.070 (2.070)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.92 (  0.92)	Loss_d 2.070 (2.070)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 2.070 (2.070)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.92 (  0.92)	Loss_d 2.070 (2.070)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.55 (  0.55)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0407 (0.0412)	validation_time 0.0003 (0.0008)	train_time 0.0403 (0.0402)
record: (train_acc, test_acc) (0.9241000205278397, 0.3630000054836273)
last accs (train_acc, test_acc) (0.9241000205278397, 0.3630000054836273)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.29it/s] 23%|##3       | 6/26 [00:00<00:00, 30.27it/s] 38%|###8      | 10/26 [00:00<00:00, 32.91it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.26it/s] 69%|######9   | 18/26 [00:00<00:00, 34.76it/s] 85%|########4 | 22/26 [00:00<00:00, 35.33it/s]100%|##########| 26/26 [00:00<00:00, 35.63it/s]100%|##########| 26/26 [00:00<00:00, 31.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.001 (0.082)	train_nll   0.35 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  25.08 ( 24.91)	train_acc   0.85 (  0.89)	train_minacc   0.85 (  0.71)	train_majacc   0.85 (  0.92)	train_corr   0.00 (  0.00)	l1 6.4693 (7.7204)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.27it/s] 23%|##3       | 6/26 [00:00<00:00, 21.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.49it/s] 42%|####2     | 11/26 [00:00<00:00, 30.11it/s] 65%|######5   | 17/26 [00:00<00:00, 34.24it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.24it/s] 85%|########4 | 22/26 [00:00<00:00, 38.49it/s]100%|##########| 26/26 [00:00<00:00, 30.82it/s]
Test: [   0/  26]	Loss 0.452 (0.452)	test_acc   0.78 (  0.78)	test_minacc   0.70 (  0.70)	test_majacc   0.80 (  0.80)	Loss_d 0.452 (0.452)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.413 (0.411)	test_acc   0.80 (  0.79)	test_minacc   0.61 (  0.68)	test_majacc   0.83 (  0.81)	Loss_d 0.413 (0.411)	test_acc_d   0.80 (  0.79)	test_minacc_d   0.61 (  0.68)	test_majacc_d   0.83 (  0.81)	test_corr_d   0.63 (  0.59)
Test: [  20/  26]	Loss 0.384 (0.400)	test_acc   0.81 (  0.80)	test_minacc   0.68 (  0.71)	test_majacc   0.83 (  0.82)	Loss_d 0.384 (0.400)	test_acc_d   0.81 (  0.80)	test_minacc_d   0.68 (  0.71)	test_majacc_d   0.83 (  0.82)	test_corr_d   0.63 (  0.59)
Test: [  26/  26]	Loss 0.361 (0.398)	test_acc   0.84 (  0.81)	test_minacc   0.85 (  0.71)	test_majacc   0.84 (  0.82)	Loss_d 0.361 (0.398)	test_acc_d   0.84 (  0.81)	test_minacc_d   0.85 (  0.71)	test_majacc_d   0.84 (  0.82)	test_corr_d   0.62 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.35it/s]
Test: [  0/  1]	Loss 1.272 (1.272)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.87 (  0.87)	Loss_d 1.272 (1.272)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.272 (1.272)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.87 (  0.87)	Loss_d 1.272 (1.272)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.25 (  0.25)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0398 (0.0411)	validation_time 0.0004 (0.0008)	train_time 0.0393 (0.0402)
record: (train_acc, test_acc) (0.8061000263094902, 0.49900001287460327)
last accs (train_acc, test_acc) (0.8061000263094902, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.89it/s] 15%|#5        | 4/26 [00:00<00:01, 19.66it/s] 31%|###       | 8/26 [00:00<00:00, 26.20it/s] 46%|####6     | 12/26 [00:00<00:00, 29.76it/s] 62%|######1   | 16/26 [00:00<00:00, 31.26it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.76it/s] 92%|#########2| 24/26 [00:00<00:00, 33.41it/s]100%|##########| 26/26 [00:00<00:00, 28.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.001)	train_nll   0.52 (  0.48)	train_penalty   0.00 (  0.00)	weight_norm  25.17 ( 25.14)	train_acc   0.72 (  0.74)	train_minacc   0.85 (  0.72)	train_majacc   0.71 (  0.75)	train_corr   0.00 (  0.00)	l1 5.0267 (5.4970)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.82it/s] 31%|###       | 8/26 [00:00<00:00, 30.04it/s]                                               31%|###       | 8/26 [00:00<00:00, 30.04it/s] 50%|#####     | 13/26 [00:00<00:00, 36.16it/s] 69%|######9   | 18/26 [00:00<00:00, 40.04it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.04it/s] 88%|########8 | 23/26 [00:00<00:00, 41.30it/s]100%|##########| 26/26 [00:00<00:00, 34.25it/s]
Test: [   0/  26]	Loss 0.559 (0.559)	test_acc   0.67 (  0.67)	test_minacc   0.78 (  0.78)	test_majacc   0.65 (  0.65)	Loss_d 0.559 (0.559)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.537 (0.540)	test_acc   0.71 (  0.69)	test_minacc   0.71 (  0.75)	test_majacc   0.71 (  0.68)	Loss_d 0.537 (0.540)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.71 (  0.75)	test_majacc_d   0.71 (  0.68)	test_corr_d   0.43 (  0.41)
Test: [  20/  26]	Loss 0.526 (0.537)	test_acc   0.69 (  0.69)	test_minacc   0.75 (  0.76)	test_majacc   0.69 (  0.68)	Loss_d 0.526 (0.537)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.44 (  0.40)
Test: [  26/  26]	Loss 0.521 (0.536)	test_acc   0.72 (  0.70)	test_minacc   0.85 (  0.77)	test_majacc   0.70 (  0.68)	Loss_d 0.521 (0.536)	test_acc_d   0.72 (  0.70)	test_minacc_d   0.85 (  0.77)	test_majacc_d   0.70 (  0.68)	test_corr_d   0.44 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.61it/s]
Test: [  0/  1]	Loss 0.871 (0.871)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.76 (  0.76)	Loss_d 0.871 (0.871)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.871 (0.871)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.76 (  0.76)	Loss_d 0.871 (0.871)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.08 (  0.08)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0383 (0.0410)	validation_time 0.0004 (0.0008)	train_time 0.0379 (0.0401)
record: (train_acc, test_acc) (0.6959000358581543, 0.5660000443458557)
last accs (train_acc, test_acc) (0.6959000358581543, 0.5660000443458557)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 12%|#1        | 3/26 [00:00<00:01, 11.73it/s] 27%|##6       | 7/26 [00:00<00:00, 20.30it/s] 42%|####2     | 11/26 [00:00<00:00, 24.99it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.81it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.49it/s] 88%|########8 | 23/26 [00:00<00:00, 31.88it/s]100%|##########| 26/26 [00:01<00:00, 25.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.001 (0.001)	train_nll   0.49 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  25.18 ( 25.18)	train_acc   0.74 (  0.70)	train_minacc   0.76 (  0.72)	train_majacc   0.74 (  0.70)	train_corr   0.00 (  0.00)	l1 4.9603 (4.9916)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.96it/s] 31%|###       | 8/26 [00:00<00:00, 40.26it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.26it/s] 50%|#####     | 13/26 [00:00<00:00, 39.46it/s] 69%|######9   | 18/26 [00:00<00:00, 41.17it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.17it/s] 92%|#########2| 24/26 [00:00<00:00, 45.65it/s]100%|##########| 26/26 [00:00<00:00, 38.54it/s]
Test: [   0/  26]	Loss 0.524 (0.524)	test_acc   0.70 (  0.70)	test_minacc   0.76 (  0.76)	test_majacc   0.69 (  0.69)	Loss_d 0.524 (0.524)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.503 (0.512)	test_acc   0.72 (  0.70)	test_minacc   0.64 (  0.71)	test_majacc   0.73 (  0.70)	Loss_d 0.503 (0.512)	test_acc_d   0.72 (  0.70)	test_minacc_d   0.64 (  0.71)	test_majacc_d   0.73 (  0.70)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.502 (0.510)	test_acc   0.75 (  0.71)	test_minacc   0.75 (  0.73)	test_majacc   0.75 (  0.71)	Loss_d 0.502 (0.510)	test_acc_d   0.75 (  0.71)	test_minacc_d   0.75 (  0.73)	test_majacc_d   0.75 (  0.71)	test_corr_d   0.51 (  0.47)
Test: [  26/  26]	Loss 0.496 (0.510)	test_acc   0.74 (  0.71)	test_minacc   0.79 (  0.73)	test_majacc   0.73 (  0.71)	Loss_d 0.496 (0.510)	test_acc_d   0.74 (  0.71)	test_minacc_d   0.79 (  0.73)	test_majacc_d   0.73 (  0.71)	test_corr_d   0.50 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.92it/s]
Test: [  0/  1]	Loss 0.925 (0.925)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.52)	test_majacc   0.78 (  0.78)	Loss_d 0.925 (0.925)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 0.925 (0.925)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.52)	test_majacc   0.78 (  0.78)	Loss_d 0.925 (0.925)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.18 (  0.18)
Overall Timing[ 17/  1]	epoch_time 0.0406 (0.0410)	validation_time 0.0003 (0.0008)	train_time 0.0402 (0.0401)
record: (train_acc, test_acc) (0.6959000358581543, 0.5660000443458557)
last accs (train_acc, test_acc) (0.713000029861927, 0.5490000247955322)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.98it/s] 19%|#9        | 5/26 [00:00<00:01, 19.57it/s] 35%|###4      | 9/26 [00:00<00:00, 25.22it/s] 50%|#####     | 13/26 [00:00<00:00, 28.46it/s] 65%|######5   | 17/26 [00:00<00:00, 30.59it/s] 81%|########  | 21/26 [00:00<00:00, 32.10it/s] 96%|#########6| 25/26 [00:00<00:00, 33.17it/s]100%|##########| 26/26 [00:00<00:00, 27.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.53)	train_penalty   0.00 (  0.00)	weight_norm  25.19 ( 25.18)	train_acc   0.72 (  0.70)	train_minacc   0.76 (  0.74)	train_majacc   0.71 (  0.69)	train_corr   0.00 (  0.00)	l1 4.9782 (5.0042)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 23%|##3       | 6/26 [00:00<00:00, 31.31it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.31it/s] 42%|####2     | 11/26 [00:00<00:00, 37.95it/s] 62%|######1   | 16/26 [00:00<00:00, 41.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.62it/s] 81%|########  | 21/26 [00:00<00:00, 39.60it/s]100%|##########| 26/26 [00:00<00:00, 42.16it/s]100%|##########| 26/26 [00:00<00:00, 36.33it/s]
Test: [   0/  26]	Loss 0.519 (0.519)	test_acc   0.71 (  0.71)	test_minacc   0.76 (  0.76)	test_majacc   0.70 (  0.70)	Loss_d 0.519 (0.519)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.498 (0.507)	test_acc   0.73 (  0.71)	test_minacc   0.64 (  0.71)	test_majacc   0.74 (  0.71)	Loss_d 0.498 (0.507)	test_acc_d   0.73 (  0.71)	test_minacc_d   0.64 (  0.71)	test_majacc_d   0.74 (  0.71)	test_corr_d   0.51 (  0.49)
Test: [  20/  26]	Loss 0.492 (0.505)	test_acc   0.75 (  0.72)	test_minacc   0.75 (  0.73)	test_majacc   0.75 (  0.71)	Loss_d 0.492 (0.505)	test_acc_d   0.75 (  0.72)	test_minacc_d   0.75 (  0.73)	test_majacc_d   0.75 (  0.71)	test_corr_d   0.52 (  0.48)
Test: [  26/  26]	Loss 0.499 (0.505)	test_acc   0.72 (  0.72)	test_minacc   0.73 (  0.73)	test_majacc   0.72 (  0.72)	Loss_d 0.499 (0.505)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.50 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.57it/s]
Test: [  0/  1]	Loss 0.937 (0.937)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.80 (  0.80)	Loss_d 0.937 (0.937)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 0.937 (0.937)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.80 (  0.80)	Loss_d 0.937 (0.937)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.19 (  0.19)
Overall Timing[ 18/  1]	epoch_time 0.0402 (0.0409)	validation_time 0.0004 (0.0008)	train_time 0.0397 (0.0400)
record: (train_acc, test_acc) (0.6959000358581543, 0.5660000443458557)
last accs (train_acc, test_acc) (0.7171000336408615, 0.5350000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.08it/s] 19%|#9        | 5/26 [00:00<00:01, 19.02it/s] 35%|###4      | 9/26 [00:00<00:00, 25.85it/s] 50%|#####     | 13/26 [00:00<00:00, 29.57it/s] 65%|######5   | 17/26 [00:00<00:00, 31.92it/s] 81%|########  | 21/26 [00:00<00:00, 33.55it/s] 96%|#########6| 25/26 [00:00<00:00, 34.38it/s]100%|##########| 26/26 [00:00<00:00, 27.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.52 (  0.52)	train_penalty   0.00 (  0.00)	weight_norm  25.19 ( 25.19)	train_acc   0.69 (  0.70)	train_minacc   0.73 (  0.75)	train_majacc   0.68 (  0.69)	train_corr   0.00 (  0.00)	l1 5.0453 (5.0226)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.16it/s] 27%|##6       | 7/26 [00:00<00:00, 34.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.16it/s] 46%|####6     | 12/26 [00:00<00:00, 39.90it/s] 65%|######5   | 17/26 [00:00<00:00, 42.49it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.49it/s] 85%|########4 | 22/26 [00:00<00:00, 40.42it/s]100%|##########| 26/26 [00:00<00:00, 38.26it/s]
Test: [   0/  26]	Loss 0.522 (0.522)	test_acc   0.72 (  0.72)	test_minacc   0.78 (  0.78)	test_majacc   0.71 (  0.71)	Loss_d 0.522 (0.522)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.496 (0.508)	test_acc   0.74 (  0.70)	test_minacc   0.66 (  0.72)	test_majacc   0.75 (  0.70)	Loss_d 0.496 (0.508)	test_acc_d   0.74 (  0.70)	test_minacc_d   0.66 (  0.72)	test_majacc_d   0.75 (  0.70)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.491 (0.507)	test_acc   0.74 (  0.71)	test_minacc   0.75 (  0.74)	test_majacc   0.74 (  0.71)	Loss_d 0.491 (0.507)	test_acc_d   0.74 (  0.71)	test_minacc_d   0.75 (  0.74)	test_majacc_d   0.74 (  0.71)	test_corr_d   0.51 (  0.47)
Test: [  26/  26]	Loss 0.503 (0.506)	test_acc   0.70 (  0.71)	test_minacc   0.73 (  0.74)	test_majacc   0.70 (  0.71)	Loss_d 0.503 (0.506)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.73 (  0.74)	test_majacc_d   0.70 (  0.71)	test_corr_d   0.48 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.39it/s]
Test: [  0/  1]	Loss 0.945 (0.945)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.79 (  0.79)	Loss_d 0.945 (0.945)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.945 (0.945)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.79 (  0.79)	Loss_d 0.945 (0.945)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.17 (  0.17)
Overall Timing[ 19/  1]	epoch_time 0.0402 (0.0409)	validation_time 0.0003 (0.0007)	train_time 0.0399 (0.0400)
record: (train_acc, test_acc) (0.6959000358581543, 0.5660000443458557)
last accs (train_acc, test_acc) (0.7122000283598899, 0.5400000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.66it/s] 19%|#9        | 5/26 [00:00<00:00, 22.52it/s] 35%|###4      | 9/26 [00:00<00:00, 27.79it/s] 50%|#####     | 13/26 [00:00<00:00, 29.52it/s] 65%|######5   | 17/26 [00:00<00:00, 31.19it/s] 81%|########  | 21/26 [00:00<00:00, 32.53it/s] 96%|#########6| 25/26 [00:00<00:00, 33.32it/s]100%|##########| 26/26 [00:00<00:00, 28.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.002 (0.001)	train_nll   0.54 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  25.20 ( 25.19)	train_acc   0.66 (  0.70)	train_minacc   0.73 (  0.76)	train_majacc   0.65 (  0.69)	train_corr   0.00 (  0.00)	l1 5.1791 (5.0493)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.42it/s] 27%|##6       | 7/26 [00:00<00:00, 33.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.11it/s] 46%|####6     | 12/26 [00:00<00:00, 38.38it/s] 65%|######5   | 17/26 [00:00<00:00, 39.01it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.01it/s] 85%|########4 | 22/26 [00:00<00:00, 41.51it/s]100%|##########| 26/26 [00:00<00:00, 36.03it/s]
Test: [   0/  26]	Loss 0.547 (0.547)	test_acc   0.67 (  0.67)	test_minacc   0.83 (  0.83)	test_majacc   0.64 (  0.64)	Loss_d 0.547 (0.547)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.512 (0.538)	test_acc   0.68 (  0.67)	test_minacc   0.73 (  0.76)	test_majacc   0.67 (  0.65)	Loss_d 0.512 (0.538)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.73 (  0.76)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.41 (  0.39)
Test: [  20/  26]	Loss 0.523 (0.536)	test_acc   0.70 (  0.67)	test_minacc   0.80 (  0.78)	test_majacc   0.69 (  0.65)	Loss_d 0.523 (0.536)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.80 (  0.78)	test_majacc_d   0.69 (  0.65)	test_corr_d   0.42 (  0.38)
Test: [  26/  26]	Loss 0.527 (0.533)	test_acc   0.66 (  0.68)	test_minacc   0.73 (  0.79)	test_majacc   0.65 (  0.66)	Loss_d 0.527 (0.533)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.73 (  0.79)	test_majacc_d   0.65 (  0.66)	test_corr_d   0.40 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.90it/s]
Test: [  0/  1]	Loss 0.898 (0.898)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.75 (  0.75)	Loss_d 0.898 (0.898)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.898 (0.898)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.75 (  0.75)	Loss_d 0.898 (0.898)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.04 (  0.04)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[ 20/  1]	epoch_time 0.0427 (0.0410)	validation_time 0.0004 (0.0007)	train_time 0.0423 (0.0401)
record: (train_acc, test_acc) (0.6750000267028808, 0.5860000252723694)
last accs (train_acc, test_acc) (0.6750000267028808, 0.5860000252723694)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.76it/s] 19%|#9        | 5/26 [00:00<00:00, 24.12it/s] 35%|###4      | 9/26 [00:00<00:00, 29.33it/s] 50%|#####     | 13/26 [00:00<00:00, 31.56it/s] 65%|######5   | 17/26 [00:00<00:00, 32.80it/s] 81%|########  | 21/26 [00:00<00:00, 33.83it/s] 96%|#########6| 25/26 [00:00<00:00, 34.88it/s]100%|##########| 26/26 [00:00<00:00, 29.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.002)	train_nll   0.45 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.21 ( 25.20)	train_acc   0.74 (  0.72)	train_minacc   0.79 (  0.74)	train_majacc   0.74 (  0.72)	train_corr   0.00 (  0.00)	l1 4.9998 (4.9984)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.29it/s] 31%|###       | 8/26 [00:00<00:00, 38.93it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.93it/s] 50%|#####     | 13/26 [00:00<00:00, 38.62it/s] 69%|######9   | 18/26 [00:00<00:00, 40.72it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.72it/s] 88%|########8 | 23/26 [00:00<00:00, 42.00it/s]100%|##########| 26/26 [00:00<00:00, 38.05it/s]
Test: [   0/  26]	Loss 0.511 (0.511)	test_acc   0.71 (  0.71)	test_minacc   0.73 (  0.73)	test_majacc   0.71 (  0.71)	Loss_d 0.511 (0.511)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.472 (0.504)	test_acc   0.73 (  0.71)	test_minacc   0.73 (  0.71)	test_majacc   0.73 (  0.70)	Loss_d 0.472 (0.504)	test_acc_d   0.73 (  0.71)	test_minacc_d   0.73 (  0.71)	test_majacc_d   0.73 (  0.70)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.502 (0.497)	test_acc   0.73 (  0.72)	test_minacc   0.75 (  0.75)	test_majacc   0.73 (  0.71)	Loss_d 0.502 (0.497)	test_acc_d   0.73 (  0.72)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.73 (  0.71)	test_corr_d   0.51 (  0.47)
Test: [  26/  26]	Loss 0.467 (0.495)	test_acc   0.74 (  0.72)	test_minacc   0.79 (  0.74)	test_majacc   0.73 (  0.71)	Loss_d 0.467 (0.495)	test_acc_d   0.74 (  0.72)	test_minacc_d   0.79 (  0.74)	test_majacc_d   0.73 (  0.71)	test_corr_d   0.48 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.17it/s]
Test: [  0/  1]	Loss 0.952 (0.952)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.80 (  0.80)	Loss_d 0.952 (0.952)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.952 (0.952)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.80 (  0.80)	Loss_d 0.952 (0.952)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.07 (  0.07)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[ 21/  1]	epoch_time 0.0399 (0.0409)	validation_time 0.0004 (0.0007)	train_time 0.0395 (0.0401)
record: (train_acc, test_acc) (0.7178000272512436, 0.5900000333786011)
last accs (train_acc, test_acc) (0.7178000272512436, 0.5900000333786011)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 15%|#5        | 4/26 [00:00<00:01, 14.93it/s] 31%|###       | 8/26 [00:00<00:00, 22.98it/s] 46%|####6     | 12/26 [00:00<00:00, 27.45it/s] 62%|######1   | 16/26 [00:00<00:00, 30.07it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.11it/s] 92%|#########2| 24/26 [00:00<00:00, 33.19it/s]100%|##########| 26/26 [00:00<00:00, 27.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.003 (0.001)	train_nll   0.46 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  25.22 ( 25.21)	train_acc   0.74 (  0.72)	train_minacc   0.79 (  0.76)	train_majacc   0.74 (  0.72)	train_corr   0.00 (  0.00)	l1 4.5570 (4.8442)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.37it/s] 27%|##6       | 7/26 [00:00<00:00, 35.57it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.57it/s] 46%|####6     | 12/26 [00:00<00:00, 41.02it/s] 65%|######5   | 17/26 [00:00<00:00, 43.25it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.25it/s] 85%|########4 | 22/26 [00:00<00:00, 41.42it/s]100%|##########| 26/26 [00:00<00:00, 38.13it/s]
Test: [   0/  26]	Loss 0.497 (0.497)	test_acc   0.71 (  0.71)	test_minacc   0.76 (  0.76)	test_majacc   0.69 (  0.69)	Loss_d 0.497 (0.497)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.477 (0.487)	test_acc   0.73 (  0.71)	test_minacc   0.73 (  0.74)	test_majacc   0.73 (  0.71)	Loss_d 0.477 (0.487)	test_acc_d   0.73 (  0.71)	test_minacc_d   0.73 (  0.74)	test_majacc_d   0.73 (  0.71)	test_corr_d   0.52 (  0.50)
Test: [  20/  26]	Loss 0.484 (0.484)	test_acc   0.75 (  0.73)	test_minacc   0.75 (  0.76)	test_majacc   0.75 (  0.72)	Loss_d 0.484 (0.484)	test_acc_d   0.75 (  0.73)	test_minacc_d   0.75 (  0.76)	test_majacc_d   0.75 (  0.72)	test_corr_d   0.52 (  0.49)
Test: [  26/  26]	Loss 0.465 (0.484)	test_acc   0.74 (  0.73)	test_minacc   0.79 (  0.77)	test_majacc   0.74 (  0.72)	Loss_d 0.465 (0.484)	test_acc_d   0.74 (  0.73)	test_minacc_d   0.79 (  0.77)	test_majacc_d   0.74 (  0.72)	test_corr_d   0.51 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.70it/s]
Test: [  0/  1]	Loss 0.869 (0.869)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.80 (  0.80)	Loss_d 0.869 (0.869)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.869 (0.869)	test_acc   0.60 (  0.60)	test_minacc   0.58 (  0.58)	test_majacc   0.80 (  0.80)	Loss_d 0.869 (0.869)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.07 (  0.07)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/92/checkpoints/model_best.pth
Overall Timing[ 22/  1]	epoch_time 0.0393 (0.0409)	validation_time 0.0004 (0.0007)	train_time 0.0389 (0.0401)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 19%|#9        | 5/26 [00:00<00:00, 22.55it/s] 31%|###       | 8/26 [00:00<00:00, 23.84it/s] 46%|####6     | 12/26 [00:00<00:00, 28.13it/s] 62%|######1   | 16/26 [00:00<00:00, 29.52it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.57it/s] 92%|#########2| 24/26 [00:00<00:00, 31.42it/s]100%|##########| 26/26 [00:00<00:00, 27.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 4.636557579040527
set z to 4.590192003250122
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 381 tensor(-0.0081, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 221 tensor(-0.0086, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 165 tensor(0.0082, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 148 tensor(0.0040, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 141 tensor(0.0013, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.000 (0.076)	train_nll   0.54 (  0.57)	train_penalty   0.00 (  0.08)	weight_norm  27.09 ( 25.75)	train_acc   0.71 (  0.70)	train_minacc   0.55 (  0.58)	train_majacc   0.73 (  0.72)	train_corr   0.00 (  0.00)	l1 5.7946 (5.8504)	zero_count 0.0000 (44.0310)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.05it/s] 23%|##3       | 6/26 [00:00<00:00, 27.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.66it/s] 42%|####2     | 11/26 [00:00<00:00, 35.05it/s] 62%|######1   | 16/26 [00:00<00:00, 39.57it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.57it/s] 81%|########  | 21/26 [00:00<00:00, 38.31it/s]100%|##########| 26/26 [00:00<00:00, 34.67it/s]
Test: [   0/  26]	Loss 0.632 (0.632)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.52 (  0.52)	Loss_d 0.632 (0.632)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.697 (0.670)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.50)	Loss_d 0.697 (0.670)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.36 (  0.33)
Test: [  20/  26]	Loss 0.716 (0.662)	test_acc   0.49 (  0.50)	test_minacc   0.50 (  0.49)	test_majacc   0.49 (  0.50)	Loss_d 0.716 (0.662)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.29 (  0.34)
Test: [  26/  26]	Loss 0.649 (0.658)	test_acc   0.48 (  0.50)	test_minacc   0.39 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.649 (0.658)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.39 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.40 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.96it/s]
Test: [  0/  1]	Loss 1.015 (1.015)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.015 (1.015)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 1.015 (1.015)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.015 (1.015)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 23/  1]	epoch_time 0.0398 (0.0408)	validation_time 0.0004 (0.0007)	train_time 0.0393 (0.0400)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.5000000169277191, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.12it/s] 19%|#9        | 5/26 [00:00<00:01, 15.87it/s] 35%|###4      | 9/26 [00:00<00:00, 21.85it/s] 50%|#####     | 13/26 [00:00<00:00, 25.33it/s] 65%|######5   | 17/26 [00:00<00:00, 27.35it/s] 81%|########  | 21/26 [00:00<00:00, 29.95it/s] 96%|#########6| 25/26 [00:00<00:00, 31.01it/s]100%|##########| 26/26 [00:01<00:00, 24.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 141 tensor(0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 140 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 139 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 139 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 147 tensor(8.0792e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 160 tensor(-3.1569e-05, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.003)	train_nll   0.59 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  28.22 ( 27.87)	train_acc   0.65 (  0.67)	train_minacc   0.45 (  0.53)	train_majacc   0.68 (  0.70)	train_corr   0.00 (  0.00)	l1 4.7140 (5.0006)	zero_count 0.0000 (86.5410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 18.65it/s] 31%|###       | 8/26 [00:00<00:00, 32.55it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.55it/s] 50%|#####     | 13/26 [00:00<00:00, 38.02it/s] 69%|######9   | 18/26 [00:00<00:00, 41.63it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.63it/s] 88%|########8 | 23/26 [00:00<00:00, 39.91it/s]100%|##########| 26/26 [00:00<00:00, 36.74it/s]
Test: [   0/  26]	Loss 0.583 (0.583)	test_acc   0.58 (  0.58)	test_minacc   0.59 (  0.59)	test_majacc   0.58 (  0.58)	Loss_d 0.583 (0.583)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.591 (0.594)	test_acc   0.55 (  0.57)	test_minacc   0.56 (  0.51)	test_majacc   0.55 (  0.58)	Loss_d 0.591 (0.594)	test_acc_d   0.55 (  0.57)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.55 (  0.58)	test_corr_d   0.43 (  0.43)
Test: [  20/  26]	Loss 0.602 (0.594)	test_acc   0.55 (  0.57)	test_minacc   0.50 (  0.51)	test_majacc   0.56 (  0.59)	Loss_d 0.602 (0.594)	test_acc_d   0.55 (  0.57)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.41 (  0.43)
Test: [  26/  26]	Loss 0.591 (0.594)	test_acc   0.60 (  0.57)	test_minacc   0.55 (  0.52)	test_majacc   0.60 (  0.58)	Loss_d 0.591 (0.594)	test_acc_d   0.60 (  0.57)	test_minacc_d   0.55 (  0.52)	test_majacc_d   0.60 (  0.58)	test_corr_d   0.46 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.73it/s]
Test: [  0/  1]	Loss 1.028 (1.028)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.59 (  0.59)	Loss_d 1.028 (1.028)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.028 (1.028)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.59 (  0.59)	Loss_d 1.028 (1.028)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.10 (  0.10)
Overall Timing[ 24/  1]	epoch_time 0.0402 (0.0408)	validation_time 0.0003 (0.0007)	train_time 0.0399 (0.0400)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.5722000148296357, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.32it/s] 19%|#9        | 5/26 [00:00<00:01, 18.89it/s] 35%|###4      | 9/26 [00:00<00:00, 24.08it/s] 46%|####6     | 12/26 [00:00<00:00, 25.94it/s] 62%|######1   | 16/26 [00:00<00:00, 27.48it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.90it/s] 92%|#########2| 24/26 [00:00<00:00, 30.25it/s]100%|##########| 26/26 [00:01<00:00, 24.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 175 tensor(-2.0970e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 224 tensor(3.8946e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 226 tensor(-7.0895e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 290 tensor(9.2565e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 312 tensor(1.2186e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 343 tensor(-7.1386e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  28.32 ( 28.29)	train_acc   0.49 (  0.53)	train_minacc   0.52 (  0.55)	train_majacc   0.48 (  0.53)	train_corr   0.00 (  0.00)	l1 4.5955 (4.6065)	zero_count 0.0000 (65.4810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.21it/s] 31%|###       | 8/26 [00:00<00:00, 39.02it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.02it/s] 50%|#####     | 13/26 [00:00<00:00, 41.78it/s] 69%|######9   | 18/26 [00:00<00:00, 41.64it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.64it/s] 88%|########8 | 23/26 [00:00<00:00, 42.77it/s]100%|##########| 26/26 [00:00<00:00, 39.19it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.53 (  0.53)	test_minacc   0.56 (  0.56)	test_majacc   0.52 (  0.52)	Loss_d 0.597 (0.597)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.599 (0.601)	test_acc   0.50 (  0.51)	test_minacc   0.56 (  0.54)	test_majacc   0.49 (  0.51)	Loss_d 0.599 (0.601)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.40 (  0.39)
Test: [  20/  26]	Loss 0.606 (0.601)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.54)	test_majacc   0.50 (  0.51)	Loss_d 0.606 (0.601)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.54)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.39 (  0.39)
Test: [  26/  26]	Loss 0.590 (0.602)	test_acc   0.49 (  0.51)	test_minacc   0.48 (  0.55)	test_majacc   0.49 (  0.50)	Loss_d 0.590 (0.602)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.48 (  0.55)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.44 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.40it/s]
Test: [  0/  1]	Loss 0.964 (0.964)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 0.964 (0.964)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.964 (0.964)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 0.964 (0.964)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.06 (  0.06)
Overall Timing[ 25/  1]	epoch_time 0.0379 (0.0407)	validation_time 0.0004 (0.0007)	train_time 0.0374 (0.0399)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.5087000102698803, 0.5290000438690186)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.67it/s] 19%|#9        | 5/26 [00:00<00:01, 17.47it/s] 35%|###4      | 9/26 [00:00<00:00, 23.74it/s] 46%|####6     | 12/26 [00:00<00:00, 24.86it/s] 62%|######1   | 16/26 [00:00<00:00, 28.34it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.03it/s] 92%|#########2| 24/26 [00:00<00:00, 31.76it/s]100%|##########| 26/26 [00:01<00:00, 25.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 363 tensor(8.8886e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 360 tensor(-1.6788e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.48 (  0.49)	train_minacc   0.52 (  0.55)	train_majacc   0.48 (  0.48)	train_corr   0.00 (  0.00)	l1 4.5879 (4.5928)	zero_count 0.0000 (18.2130)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.90it/s] 12%|#1        | 3/26 [00:00<00:01, 13.87it/s] 31%|###       | 8/26 [00:00<00:00, 28.02it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.02it/s] 50%|#####     | 13/26 [00:00<00:00, 35.37it/s] 69%|######9   | 18/26 [00:00<00:00, 37.98it/s]                                                69%|######9   | 18/26 [00:00<00:00, 37.98it/s] 88%|########8 | 23/26 [00:00<00:00, 39.06it/s]100%|##########| 26/26 [00:00<00:00, 33.32it/s]
Test: [   0/  26]	Loss 0.602 (0.602)	test_acc   0.52 (  0.52)	test_minacc   0.57 (  0.57)	test_majacc   0.51 (  0.51)	Loss_d 0.602 (0.602)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.602 (0.603)	test_acc   0.49 (  0.50)	test_minacc   0.59 (  0.55)	test_majacc   0.47 (  0.49)	Loss_d 0.602 (0.603)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.39 (  0.38)
Test: [  20/  26]	Loss 0.610 (0.604)	test_acc   0.51 (  0.51)	test_minacc   0.59 (  0.56)	test_majacc   0.49 (  0.50)	Loss_d 0.610 (0.604)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.38 (  0.38)
Test: [  26/  26]	Loss 0.596 (0.604)	test_acc   0.48 (  0.50)	test_minacc   0.52 (  0.56)	test_majacc   0.47 (  0.49)	Loss_d 0.596 (0.604)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.52 (  0.56)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.43 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.24it/s]
Test: [  0/  1]	Loss 0.957 (0.957)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.957 (0.957)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.957 (0.957)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.957 (0.957)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Overall Timing[ 26/  1]	epoch_time 0.0404 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0399 (0.0399)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.5015000096559524, 0.5380000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.45it/s] 15%|#5        | 4/26 [00:00<00:01, 13.79it/s] 31%|###       | 8/26 [00:00<00:00, 21.83it/s] 42%|####2     | 11/26 [00:00<00:00, 23.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.51it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.05it/s] 88%|########8 | 23/26 [00:00<00:00, 31.76it/s]100%|##########| 26/26 [00:01<00:00, 25.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 365 tensor(-4.5951e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 387 tensor(3.1727e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.48 (  0.49)	train_minacc   0.48 (  0.55)	train_majacc   0.47 (  0.48)	train_corr   0.00 (  0.00)	l1 4.5764 (4.5858)	zero_count 0.0000 (10.5300)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.03it/s] 27%|##6       | 7/26 [00:00<00:00, 30.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.66it/s] 46%|####6     | 12/26 [00:00<00:00, 37.24it/s] 65%|######5   | 17/26 [00:00<00:00, 41.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.13it/s] 85%|########4 | 22/26 [00:00<00:00, 43.39it/s]100%|##########| 26/26 [00:00<00:00, 37.19it/s]
Test: [   0/  26]	Loss 0.605 (0.605)	test_acc   0.52 (  0.52)	test_minacc   0.54 (  0.54)	test_majacc   0.51 (  0.51)	Loss_d 0.605 (0.605)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.603 (0.605)	test_acc   0.48 (  0.50)	test_minacc   0.56 (  0.54)	test_majacc   0.47 (  0.49)	Loss_d 0.603 (0.605)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  20/  26]	Loss 0.612 (0.606)	test_acc   0.49 (  0.50)	test_minacc   0.59 (  0.55)	test_majacc   0.48 (  0.49)	Loss_d 0.612 (0.606)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  26/  26]	Loss 0.600 (0.606)	test_acc   0.48 (  0.50)	test_minacc   0.48 (  0.56)	test_majacc   0.47 (  0.48)	Loss_d 0.600 (0.606)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.48 (  0.56)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.42 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.38it/s]
Test: [  0/  1]	Loss 0.955 (0.955)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.955 (0.955)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.955 (0.955)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.955 (0.955)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Overall Timing[ 27/  1]	epoch_time 0.0399 (0.0406)	validation_time 0.0003 (0.0006)	train_time 0.0396 (0.0399)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.4958000132739544, 0.5380000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 19%|#9        | 5/26 [00:00<00:00, 23.88it/s] 31%|###       | 8/26 [00:00<00:00, 25.66it/s] 46%|####6     | 12/26 [00:00<00:00, 29.72it/s] 62%|######1   | 16/26 [00:00<00:00, 29.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.29it/s] 92%|#########2| 24/26 [00:00<00:00, 32.62it/s]100%|##########| 26/26 [00:00<00:00, 28.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 379 tensor(-2.2444e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 403 tensor(-3.2623e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.48 (  0.49)	train_minacc   0.48 (  0.55)	train_majacc   0.48 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5730 (4.5834)	zero_count 0.0000 (9.3600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.85it/s] 23%|##3       | 6/26 [00:00<00:00, 31.35it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.35it/s] 42%|####2     | 11/26 [00:00<00:00, 38.52it/s] 62%|######1   | 16/26 [00:00<00:00, 42.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.53it/s] 81%|########  | 21/26 [00:00<00:00, 40.34it/s]100%|##########| 26/26 [00:00<00:00, 36.58it/s]
Test: [   0/  26]	Loss 0.606 (0.606)	test_acc   0.52 (  0.52)	test_minacc   0.56 (  0.56)	test_majacc   0.51 (  0.51)	Loss_d 0.606 (0.606)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.602 (0.605)	test_acc   0.49 (  0.50)	test_minacc   0.58 (  0.55)	test_majacc   0.47 (  0.49)	Loss_d 0.602 (0.605)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  20/  26]	Loss 0.613 (0.605)	test_acc   0.50 (  0.50)	test_minacc   0.59 (  0.55)	test_majacc   0.48 (  0.49)	Loss_d 0.613 (0.605)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  26/  26]	Loss 0.601 (0.606)	test_acc   0.48 (  0.50)	test_minacc   0.52 (  0.56)	test_majacc   0.48 (  0.49)	Loss_d 0.601 (0.606)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.52 (  0.56)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.41 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.34it/s]
Test: [  0/  1]	Loss 0.958 (0.958)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.958 (0.958)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.958 (0.958)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.958 (0.958)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.07 (  0.07)
Overall Timing[ 28/  1]	epoch_time 0.0396 (0.0406)	validation_time 0.0003 (0.0006)	train_time 0.0393 (0.0399)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.4974000124335289, 0.5360000133514404)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.41it/s] 23%|##3       | 6/26 [00:00<00:00, 26.75it/s] 38%|###8      | 10/26 [00:00<00:00, 30.95it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.64it/s] 69%|######9   | 18/26 [00:00<00:00, 30.62it/s] 85%|########4 | 22/26 [00:00<00:00, 33.06it/s]100%|##########| 26/26 [00:00<00:00, 33.50it/s]100%|##########| 26/26 [00:00<00:00, 29.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 368 tensor(8.6580e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 414 tensor(-2.5657e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.48 (  0.48)	train_minacc   0.52 (  0.55)	train_majacc   0.47 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5716 (4.5838)	zero_count 0.0000 (9.3600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.69it/s] 19%|#9        | 5/26 [00:00<00:01, 20.02it/s] 38%|###8      | 10/26 [00:00<00:00, 31.09it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.09it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.15it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.04it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.04it/s] 96%|#########6| 25/26 [00:00<00:00, 40.69it/s]100%|##########| 26/26 [00:00<00:00, 32.16it/s]
Test: [   0/  26]	Loss 0.607 (0.607)	test_acc   0.52 (  0.52)	test_minacc   0.56 (  0.56)	test_majacc   0.51 (  0.51)	Loss_d 0.607 (0.607)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.602 (0.606)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.55)	test_majacc   0.47 (  0.49)	Loss_d 0.602 (0.606)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  20/  26]	Loss 0.614 (0.606)	test_acc   0.50 (  0.50)	test_minacc   0.59 (  0.55)	test_majacc   0.48 (  0.49)	Loss_d 0.614 (0.606)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  26/  26]	Loss 0.602 (0.606)	test_acc   0.48 (  0.50)	test_minacc   0.52 (  0.56)	test_majacc   0.47 (  0.48)	Loss_d 0.602 (0.606)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.52 (  0.56)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.41 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.13it/s]
Test: [  0/  1]	Loss 0.961 (0.961)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.961 (0.961)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.961 (0.961)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.961 (0.961)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.07 (  0.07)
Overall Timing[ 29/  1]	epoch_time 0.0397 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0393 (0.0399)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.4959000123143196, 0.5380000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.19it/s] 19%|#9        | 5/26 [00:00<00:00, 21.39it/s] 35%|###4      | 9/26 [00:00<00:00, 26.52it/s] 46%|####6     | 12/26 [00:00<00:00, 26.21it/s] 62%|######1   | 16/26 [00:00<00:00, 26.97it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.64it/s] 92%|#########2| 24/26 [00:00<00:00, 31.36it/s]100%|##########| 26/26 [00:00<00:00, 26.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 412 tensor(-1.0753e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 385 tensor(5.5508e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.47 (  0.48)	train_minacc   0.48 (  0.55)	train_majacc   0.47 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5710 (4.5831)	zero_count 0.0000 (8.7750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.94it/s] 27%|##6       | 7/26 [00:00<00:00, 31.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.20it/s] 46%|####6     | 12/26 [00:00<00:00, 38.26it/s] 65%|######5   | 17/26 [00:00<00:00, 41.31it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.31it/s] 85%|########4 | 22/26 [00:00<00:00, 40.23it/s]100%|##########| 26/26 [00:00<00:00, 36.95it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.52 (  0.52)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.608 (0.608)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.604 (0.607)	test_acc   0.48 (  0.49)	test_minacc   0.58 (  0.55)	test_majacc   0.46 (  0.48)	Loss_d 0.604 (0.607)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.46 (  0.48)	test_corr_d   0.38 (  0.37)
Test: [  20/  26]	Loss 0.615 (0.607)	test_acc   0.47 (  0.49)	test_minacc   0.59 (  0.56)	test_majacc   0.46 (  0.48)	Loss_d 0.615 (0.607)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.46 (  0.48)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.604 (0.607)	test_acc   0.47 (  0.49)	test_minacc   0.48 (  0.56)	test_majacc   0.47 (  0.48)	Loss_d 0.604 (0.607)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.48 (  0.56)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.41 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.73it/s]
Test: [  0/  1]	Loss 0.963 (0.963)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.963 (0.963)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.963 (0.963)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.963 (0.963)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.07 (  0.07)
Overall Timing[ 30/  1]	epoch_time 0.0391 (0.0405)	validation_time 0.0003 (0.0006)	train_time 0.0387 (0.0398)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.49090000945329665, 0.5420000553131104)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.02it/s] 19%|#9        | 5/26 [00:00<00:01, 20.54it/s] 35%|###4      | 9/26 [00:00<00:00, 27.20it/s] 50%|#####     | 13/26 [00:00<00:00, 30.62it/s] 65%|######5   | 17/26 [00:00<00:00, 30.33it/s] 81%|########  | 21/26 [00:00<00:00, 31.97it/s] 96%|#########6| 25/26 [00:00<00:00, 33.18it/s]100%|##########| 26/26 [00:00<00:00, 27.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 362 tensor(2.6925e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.45 (  0.48)	train_minacc   0.48 (  0.55)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5739 (4.5809)	zero_count 0.0000 (5.8110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.29it/s] 23%|##3       | 6/26 [00:00<00:00, 23.15it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.15it/s] 42%|####2     | 11/26 [00:00<00:00, 31.73it/s] 62%|######1   | 16/26 [00:00<00:00, 37.60it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.60it/s] 81%|########  | 21/26 [00:00<00:00, 40.71it/s]100%|##########| 26/26 [00:00<00:00, 43.17it/s]100%|##########| 26/26 [00:00<00:00, 33.12it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.51 (  0.51)	test_minacc   0.57 (  0.57)	test_majacc   0.50 (  0.50)	Loss_d 0.609 (0.609)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.604 (0.608)	test_acc   0.47 (  0.49)	test_minacc   0.59 (  0.55)	test_majacc   0.45 (  0.48)	Loss_d 0.604 (0.608)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.45 (  0.48)	test_corr_d   0.38 (  0.37)
Test: [  20/  26]	Loss 0.616 (0.608)	test_acc   0.47 (  0.49)	test_minacc   0.59 (  0.56)	test_majacc   0.46 (  0.48)	Loss_d 0.616 (0.608)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.46 (  0.48)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.605 (0.608)	test_acc   0.46 (  0.49)	test_minacc   0.48 (  0.56)	test_majacc   0.45 (  0.47)	Loss_d 0.605 (0.608)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.48 (  0.56)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.40 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.34it/s]
Test: [  0/  1]	Loss 0.964 (0.964)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.964 (0.964)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.964 (0.964)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.964 (0.964)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.08 (  0.08)
Overall Timing[ 31/  1]	epoch_time 0.0392 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0387 (0.0398)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.48720000725984575, 0.5410000085830688)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.99it/s] 19%|#9        | 5/26 [00:00<00:01, 18.07it/s] 35%|###4      | 9/26 [00:00<00:00, 25.37it/s] 50%|#####     | 13/26 [00:00<00:00, 29.69it/s] 65%|######5   | 17/26 [00:00<00:00, 30.36it/s] 81%|########  | 21/26 [00:00<00:00, 30.18it/s] 96%|#########6| 25/26 [00:00<00:00, 32.72it/s]100%|##########| 26/26 [00:00<00:00, 26.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 418 tensor(-6.9739e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 372 tensor(2.7143e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.45 (  0.48)	train_minacc   0.48 (  0.56)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5750 (4.5811)	zero_count 0.0000 (9.0480)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.56it/s] 27%|##6       | 7/26 [00:00<00:00, 33.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.11it/s] 46%|####6     | 12/26 [00:00<00:00, 39.40it/s] 65%|######5   | 17/26 [00:00<00:00, 41.85it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.85it/s] 85%|########4 | 22/26 [00:00<00:00, 40.65it/s]100%|##########| 26/26 [00:00<00:00, 37.20it/s]
Test: [   0/  26]	Loss 0.610 (0.610)	test_acc   0.51 (  0.51)	test_minacc   0.57 (  0.57)	test_majacc   0.50 (  0.50)	Loss_d 0.610 (0.610)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.605 (0.609)	test_acc   0.47 (  0.48)	test_minacc   0.59 (  0.55)	test_majacc   0.45 (  0.47)	Loss_d 0.605 (0.609)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.38 (  0.37)
Test: [  20/  26]	Loss 0.616 (0.609)	test_acc   0.47 (  0.49)	test_minacc   0.59 (  0.56)	test_majacc   0.45 (  0.47)	Loss_d 0.616 (0.609)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.606 (0.609)	test_acc   0.45 (  0.48)	test_minacc   0.48 (  0.56)	test_majacc   0.45 (  0.47)	Loss_d 0.606 (0.609)	test_acc_d   0.45 (  0.48)	test_minacc_d   0.48 (  0.56)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.40 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.93it/s]
Test: [  0/  1]	Loss 0.966 (0.966)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.966 (0.966)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.966 (0.966)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.966 (0.966)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.08 (  0.08)
Overall Timing[ 32/  1]	epoch_time 0.0388 (0.0404)	validation_time 0.0004 (0.0006)	train_time 0.0383 (0.0398)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.4828000084757805, 0.5400000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.07it/s] 23%|##3       | 6/26 [00:00<00:00, 26.36it/s] 38%|###8      | 10/26 [00:00<00:00, 30.43it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.19it/s] 69%|######9   | 18/26 [00:00<00:00, 30.26it/s] 85%|########4 | 22/26 [00:00<00:00, 31.62it/s]100%|##########| 26/26 [00:00<00:00, 33.20it/s]100%|##########| 26/26 [00:00<00:00, 29.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 361 tensor(2.0688e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.44 (  0.48)	train_minacc   0.39 (  0.56)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5810 (4.5799)	zero_count 0.0000 (5.8500)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.60it/s] 27%|##6       | 7/26 [00:00<00:00, 26.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.16it/s] 50%|#####     | 13/26 [00:00<00:00, 35.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.37it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.37it/s] 96%|#########6| 25/26 [00:00<00:00, 44.52it/s]100%|##########| 26/26 [00:00<00:00, 35.01it/s]
Test: [   0/  26]	Loss 0.611 (0.611)	test_acc   0.51 (  0.51)	test_minacc   0.57 (  0.57)	test_majacc   0.49 (  0.49)	Loss_d 0.611 (0.611)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.607 (0.611)	test_acc   0.48 (  0.48)	test_minacc   0.59 (  0.55)	test_majacc   0.46 (  0.47)	Loss_d 0.607 (0.611)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.38 (  0.37)
Test: [  20/  26]	Loss 0.617 (0.610)	test_acc   0.47 (  0.48)	test_minacc   0.59 (  0.55)	test_majacc   0.45 (  0.47)	Loss_d 0.617 (0.610)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.607 (0.610)	test_acc   0.46 (  0.48)	test_minacc   0.48 (  0.56)	test_majacc   0.45 (  0.46)	Loss_d 0.607 (0.610)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.48 (  0.56)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.40 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.95it/s]
Test: [  0/  1]	Loss 0.967 (0.967)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.967 (0.967)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.967 (0.967)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.967 (0.967)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.08 (  0.08)
Overall Timing[ 33/  1]	epoch_time 0.0390 (0.0404)	validation_time 0.0003 (0.0006)	train_time 0.0386 (0.0397)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.47840000662207605, 0.5410000085830688)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 19%|#9        | 5/26 [00:00<00:00, 23.10it/s] 35%|###4      | 9/26 [00:00<00:00, 28.37it/s] 50%|#####     | 13/26 [00:00<00:00, 31.12it/s] 65%|######5   | 17/26 [00:00<00:00, 29.74it/s] 81%|########  | 21/26 [00:00<00:00, 31.86it/s] 96%|#########6| 25/26 [00:00<00:00, 30.69it/s]100%|##########| 26/26 [00:00<00:00, 27.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 421 tensor(-6.0317e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 383 tensor(2.8715e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.44 (  0.48)	train_minacc   0.39 (  0.56)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5825 (4.5801)	zero_count 0.0000 (8.5020)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 27%|##6       | 7/26 [00:00<00:00, 33.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.16it/s] 46%|####6     | 12/26 [00:00<00:00, 39.53it/s] 65%|######5   | 17/26 [00:00<00:00, 42.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.10it/s] 85%|########4 | 22/26 [00:00<00:00, 44.18it/s]100%|##########| 26/26 [00:00<00:00, 37.82it/s]
Test: [   0/  26]	Loss 0.612 (0.612)	test_acc   0.50 (  0.50)	test_minacc   0.56 (  0.56)	test_majacc   0.49 (  0.49)	Loss_d 0.612 (0.612)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.608 (0.612)	test_acc   0.47 (  0.48)	test_minacc   0.59 (  0.55)	test_majacc   0.45 (  0.47)	Loss_d 0.608 (0.612)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.38 (  0.36)
Test: [  20/  26]	Loss 0.618 (0.611)	test_acc   0.47 (  0.48)	test_minacc   0.59 (  0.56)	test_majacc   0.45 (  0.46)	Loss_d 0.618 (0.611)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.607 (0.611)	test_acc   0.44 (  0.48)	test_minacc   0.42 (  0.56)	test_majacc   0.44 (  0.46)	Loss_d 0.607 (0.611)	test_acc_d   0.44 (  0.48)	test_minacc_d   0.42 (  0.56)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.40 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.27it/s]
Test: [  0/  1]	Loss 0.969 (0.969)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.45 (  0.45)	Loss_d 0.969 (0.969)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.969 (0.969)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.45 (  0.45)	Loss_d 0.969 (0.969)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.08 (  0.08)
Overall Timing[ 34/  1]	epoch_time 0.0385 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0381 (0.0397)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.4761000078320503, 0.5350000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.77it/s] 15%|#5        | 4/26 [00:00<00:01, 19.57it/s] 31%|###       | 8/26 [00:00<00:00, 26.27it/s] 46%|####6     | 12/26 [00:00<00:00, 29.81it/s] 62%|######1   | 16/26 [00:00<00:00, 31.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.22it/s] 92%|#########2| 24/26 [00:00<00:00, 31.98it/s]100%|##########| 26/26 [00:00<00:00, 28.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 363 tensor(2.4570e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.44 (  0.48)	train_minacc   0.39 (  0.56)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5908 (4.5778)	zero_count 0.0000 (5.7720)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.20it/s] 23%|##3       | 6/26 [00:00<00:00, 31.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.99it/s] 42%|####2     | 11/26 [00:00<00:00, 37.72it/s] 62%|######1   | 16/26 [00:00<00:00, 41.72it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.72it/s] 81%|########  | 21/26 [00:00<00:00, 38.39it/s]100%|##########| 26/26 [00:00<00:00, 41.33it/s]100%|##########| 26/26 [00:00<00:00, 35.25it/s]
Test: [   0/  26]	Loss 0.614 (0.614)	test_acc   0.50 (  0.50)	test_minacc   0.56 (  0.56)	test_majacc   0.49 (  0.49)	Loss_d 0.614 (0.614)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.610 (0.613)	test_acc   0.48 (  0.48)	test_minacc   0.59 (  0.55)	test_majacc   0.46 (  0.47)	Loss_d 0.610 (0.613)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.38 (  0.36)
Test: [  20/  26]	Loss 0.619 (0.613)	test_acc   0.47 (  0.48)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.46)	Loss_d 0.619 (0.613)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.608 (0.613)	test_acc   0.44 (  0.48)	test_minacc   0.39 (  0.55)	test_majacc   0.45 (  0.46)	Loss_d 0.608 (0.613)	test_acc_d   0.44 (  0.48)	test_minacc_d   0.39 (  0.55)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.39 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.82it/s]
Test: [  0/  1]	Loss 0.970 (0.970)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 0.970 (0.970)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.970 (0.970)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 0.970 (0.970)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Overall Timing[ 35/  1]	epoch_time 0.0396 (0.0403)	validation_time 0.0003 (0.0006)	train_time 0.0393 (0.0397)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.47570000901818277, 0.5300000309944153)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 19%|#9        | 5/26 [00:00<00:00, 23.74it/s] 35%|###4      | 9/26 [00:00<00:00, 29.05it/s] 50%|#####     | 13/26 [00:00<00:00, 31.17it/s] 65%|######5   | 17/26 [00:00<00:00, 32.77it/s] 81%|########  | 21/26 [00:00<00:00, 31.04it/s] 96%|#########6| 25/26 [00:00<00:00, 30.69it/s]100%|##########| 26/26 [00:00<00:00, 27.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 425 tensor(-4.8053e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 383 tensor(3.6123e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.44 (  0.48)	train_minacc   0.39 (  0.57)	train_majacc   0.44 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5902 (4.5786)	zero_count 128.0000 (6.5540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.71it/s] 35%|###4      | 9/26 [00:00<00:00, 42.88it/s]                                               35%|###4      | 9/26 [00:00<00:00, 42.88it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.60it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.60it/s] 96%|#########6| 25/26 [00:00<00:00, 49.90it/s]100%|##########| 26/26 [00:00<00:00, 43.25it/s]
Test: [   0/  26]	Loss 0.614 (0.614)	test_acc   0.50 (  0.50)	test_minacc   0.56 (  0.56)	test_majacc   0.49 (  0.49)	Loss_d 0.614 (0.614)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.611 (0.614)	test_acc   0.48 (  0.48)	test_minacc   0.59 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 0.611 (0.614)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.38 (  0.36)
Test: [  20/  26]	Loss 0.620 (0.614)	test_acc   0.47 (  0.48)	test_minacc   0.57 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 0.620 (0.614)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.57 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.608 (0.613)	test_acc   0.44 (  0.48)	test_minacc   0.39 (  0.55)	test_majacc   0.45 (  0.46)	Loss_d 0.608 (0.613)	test_acc_d   0.44 (  0.48)	test_minacc_d   0.39 (  0.55)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.39 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.66it/s]
Test: [  0/  1]	Loss 0.971 (0.971)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 0.971 (0.971)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.971 (0.971)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.46 (  0.46)	Loss_d 0.971 (0.971)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.08 (  0.08)
Overall Timing[ 36/  1]	epoch_time 0.0397 (0.0403)	validation_time 0.0005 (0.0006)	train_time 0.0392 (0.0397)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.4752000090479851, 0.5290000438690186)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.60it/s] 19%|#9        | 5/26 [00:00<00:00, 24.24it/s] 35%|###4      | 9/26 [00:00<00:00, 30.83it/s] 50%|#####     | 13/26 [00:00<00:00, 33.17it/s] 65%|######5   | 17/26 [00:00<00:00, 34.69it/s] 85%|########4 | 22/26 [00:00<00:00, 36.96it/s]100%|##########| 26/26 [00:00<00:00, 35.41it/s]100%|##########| 26/26 [00:00<00:00, 30.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 360 tensor(3.6760e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 374 tensor(6.9377e-06, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.44 (  0.48)	train_minacc   0.39 (  0.57)	train_majacc   0.44 (  0.46)	train_corr   0.00 (  0.00)	l1 4.5925 (4.5741)	zero_count 0.0000 (5.8890)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.05it/s] 23%|##3       | 6/26 [00:00<00:00, 22.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.32it/s] 46%|####6     | 12/26 [00:00<00:00, 34.99it/s] 69%|######9   | 18/26 [00:00<00:00, 40.03it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.03it/s] 92%|#########2| 24/26 [00:00<00:00, 45.93it/s]100%|##########| 26/26 [00:00<00:00, 35.72it/s]
Test: [   0/  26]	Loss 0.615 (0.615)	test_acc   0.51 (  0.51)	test_minacc   0.56 (  0.56)	test_majacc   0.50 (  0.50)	Loss_d 0.615 (0.615)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.612 (0.615)	test_acc   0.47 (  0.48)	test_minacc   0.58 (  0.55)	test_majacc   0.46 (  0.47)	Loss_d 0.612 (0.615)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.37 (  0.36)
Test: [  20/  26]	Loss 0.621 (0.615)	test_acc   0.47 (  0.48)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 0.621 (0.615)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.608 (0.614)	test_acc   0.44 (  0.48)	test_minacc   0.39 (  0.55)	test_majacc   0.45 (  0.46)	Loss_d 0.608 (0.614)	test_acc_d   0.44 (  0.48)	test_minacc_d   0.39 (  0.55)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.39 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.15it/s]
Test: [  0/  1]	Loss 0.971 (0.971)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.971 (0.971)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.971 (0.971)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.971 (0.971)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Overall Timing[ 37/  1]	epoch_time 0.0347 (0.0401)	validation_time 0.0004 (0.0006)	train_time 0.0343 (0.0395)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.4757000113427639, 0.5260000228881836)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.36it/s] 19%|#9        | 5/26 [00:00<00:00, 21.79it/s] 35%|###4      | 9/26 [00:00<00:00, 27.43it/s] 50%|#####     | 13/26 [00:00<00:00, 30.92it/s] 65%|######5   | 17/26 [00:00<00:00, 32.78it/s] 81%|########  | 21/26 [00:00<00:00, 34.30it/s] 96%|#########6| 25/26 [00:00<00:00, 33.34it/s]100%|##########| 26/26 [00:00<00:00, 28.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 417 tensor(-1.1875e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 388 tensor(4.1979e-05, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.44 (  0.48)	train_minacc   0.39 (  0.57)	train_majacc   0.44 (  0.46)	train_corr   0.00 (  0.00)	l1 4.6058 (4.5727)	zero_count 0.0000 (9.0090)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.93it/s] 19%|#9        | 5/26 [00:00<00:00, 27.12it/s]                                               19%|#9        | 5/26 [00:00<00:00, 27.12it/s] 42%|####2     | 11/26 [00:00<00:00, 40.13it/s] 62%|######1   | 16/26 [00:00<00:00, 42.10it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.10it/s] 85%|########4 | 22/26 [00:00<00:00, 47.49it/s]100%|##########| 26/26 [00:00<00:00, 39.44it/s]
Test: [   0/  26]	Loss 0.615 (0.615)	test_acc   0.51 (  0.51)	test_minacc   0.56 (  0.56)	test_majacc   0.50 (  0.50)	Loss_d 0.615 (0.615)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.612 (0.615)	test_acc   0.47 (  0.48)	test_minacc   0.56 (  0.55)	test_majacc   0.46 (  0.47)	Loss_d 0.612 (0.615)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.37 (  0.36)
Test: [  20/  26]	Loss 0.621 (0.616)	test_acc   0.47 (  0.48)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.47)	Loss_d 0.621 (0.616)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.608 (0.615)	test_acc   0.44 (  0.48)	test_minacc   0.39 (  0.55)	test_majacc   0.44 (  0.46)	Loss_d 0.608 (0.615)	test_acc_d   0.44 (  0.48)	test_minacc_d   0.39 (  0.55)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.39 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.78it/s]
Test: [  0/  1]	Loss 0.972 (0.972)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.972 (0.972)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.972 (0.972)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.972 (0.972)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Overall Timing[ 38/  1]	epoch_time 0.0373 (0.0401)	validation_time 0.0004 (0.0006)	train_time 0.0369 (0.0394)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.4763000122606754, 0.5230000019073486)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.21it/s] 19%|#9        | 5/26 [00:00<00:00, 23.97it/s] 35%|###4      | 9/26 [00:00<00:00, 28.43it/s] 50%|#####     | 13/26 [00:00<00:00, 31.89it/s] 65%|######5   | 17/26 [00:00<00:00, 33.66it/s] 81%|########  | 21/26 [00:00<00:00, 34.11it/s] 96%|#########6| 25/26 [00:00<00:00, 35.27it/s]100%|##########| 26/26 [00:00<00:00, 30.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 360 tensor(2.7773e-05, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.44 (  0.48)	train_minacc   0.39 (  0.57)	train_majacc   0.44 (  0.46)	train_corr   0.00 (  0.00)	l1 4.5970 (4.5698)	zero_count 0.0000 (4.7970)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.85it/s] 27%|##6       | 7/26 [00:00<00:00, 36.45it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.45it/s] 50%|#####     | 13/26 [00:00<00:00, 43.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.04it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.04it/s] 96%|#########6| 25/26 [00:00<00:00, 48.70it/s]100%|##########| 26/26 [00:00<00:00, 41.62it/s]
Test: [   0/  26]	Loss 0.615 (0.615)	test_acc   0.51 (  0.51)	test_minacc   0.56 (  0.56)	test_majacc   0.50 (  0.50)	Loss_d 0.615 (0.615)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.612 (0.615)	test_acc   0.47 (  0.48)	test_minacc   0.54 (  0.55)	test_majacc   0.46 (  0.47)	Loss_d 0.612 (0.615)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.37 (  0.36)
Test: [  20/  26]	Loss 0.621 (0.616)	test_acc   0.48 (  0.48)	test_minacc   0.59 (  0.55)	test_majacc   0.46 (  0.47)	Loss_d 0.621 (0.616)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.607 (0.615)	test_acc   0.44 (  0.48)	test_minacc   0.39 (  0.55)	test_majacc   0.44 (  0.46)	Loss_d 0.607 (0.615)	test_acc_d   0.44 (  0.48)	test_minacc_d   0.39 (  0.55)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.40 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.99it/s]
Test: [  0/  1]	Loss 0.973 (0.973)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.973 (0.973)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.973 (0.973)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.973 (0.973)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Overall Timing[ 39/  1]	epoch_time 0.0347 (0.0399)	validation_time 0.0003 (0.0006)	train_time 0.0344 (0.0393)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.4769000110626221, 0.5200000405311584)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 19%|#9        | 5/26 [00:00<00:00, 23.02it/s] 35%|###4      | 9/26 [00:00<00:00, 28.05it/s] 50%|#####     | 13/26 [00:00<00:00, 31.67it/s] 65%|######5   | 17/26 [00:00<00:00, 34.12it/s] 85%|########4 | 22/26 [00:00<00:00, 36.46it/s]100%|##########| 26/26 [00:00<00:00, 34.33it/s]100%|##########| 26/26 [00:00<00:00, 29.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 392 tensor(1.3378e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 415 tensor(1.4867e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 414 tensor(4.5960e-09, device='cuda:0')
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.44 (  0.48)	train_minacc   0.39 (  0.57)	train_majacc   0.44 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5872 (4.5685)	zero_count 0.0000 (10.5300)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.50it/s] 23%|##3       | 6/26 [00:00<00:00, 28.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.29it/s] 46%|####6     | 12/26 [00:00<00:00, 37.20it/s] 69%|######9   | 18/26 [00:00<00:00, 44.48it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.48it/s] 92%|#########2| 24/26 [00:00<00:00, 45.90it/s]100%|##########| 26/26 [00:00<00:00, 38.40it/s]
Test: [   0/  26]	Loss 0.614 (0.614)	test_acc   0.51 (  0.51)	test_minacc   0.56 (  0.56)	test_majacc   0.50 (  0.50)	Loss_d 0.614 (0.614)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.612 (0.614)	test_acc   0.47 (  0.48)	test_minacc   0.54 (  0.55)	test_majacc   0.46 (  0.47)	Loss_d 0.612 (0.614)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.37 (  0.36)
Test: [  20/  26]	Loss 0.621 (0.616)	test_acc   0.48 (  0.48)	test_minacc   0.59 (  0.55)	test_majacc   0.46 (  0.47)	Loss_d 0.621 (0.616)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.607 (0.615)	test_acc   0.44 (  0.48)	test_minacc   0.39 (  0.55)	test_majacc   0.44 (  0.46)	Loss_d 0.607 (0.615)	test_acc_d   0.44 (  0.48)	test_minacc_d   0.39 (  0.55)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.40 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.22it/s]
Test: [  0/  1]	Loss 0.974 (0.974)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.974 (0.974)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.974 (0.974)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.974 (0.974)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Overall Timing[ 40/  1]	epoch_time 0.0347 (0.0398)	validation_time 0.0004 (0.0006)	train_time 0.0342 (0.0392)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.47740001103281976, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 19%|#9        | 5/26 [00:00<00:00, 22.94it/s] 35%|###4      | 9/26 [00:00<00:00, 29.28it/s] 50%|#####     | 13/26 [00:00<00:00, 32.16it/s] 65%|######5   | 17/26 [00:00<00:00, 33.80it/s] 81%|########  | 21/26 [00:00<00:00, 34.22it/s] 96%|#########6| 25/26 [00:00<00:00, 34.68it/s]100%|##########| 26/26 [00:00<00:00, 29.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.43 (  0.48)	train_minacc   0.39 (  0.57)	train_majacc   0.43 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5821 (4.5722)	zero_count 0.0000 (3.7830)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 23%|##3       | 6/26 [00:00<00:00, 28.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.75it/s] 42%|####2     | 11/26 [00:00<00:00, 36.61it/s] 65%|######5   | 17/26 [00:00<00:00, 41.51it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.51it/s] 88%|########8 | 23/26 [00:00<00:00, 46.60it/s]100%|##########| 26/26 [00:00<00:00, 38.22it/s]
Test: [   0/  26]	Loss 0.613 (0.613)	test_acc   0.50 (  0.50)	test_minacc   0.57 (  0.57)	test_majacc   0.49 (  0.49)	Loss_d 0.613 (0.613)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.611 (0.612)	test_acc   0.48 (  0.48)	test_minacc   0.59 (  0.56)	test_majacc   0.46 (  0.46)	Loss_d 0.611 (0.612)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.37 (  0.36)
Test: [  20/  26]	Loss 0.620 (0.614)	test_acc   0.48 (  0.48)	test_minacc   0.62 (  0.56)	test_majacc   0.46 (  0.46)	Loss_d 0.620 (0.614)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.605 (0.613)	test_acc   0.43 (  0.47)	test_minacc   0.39 (  0.56)	test_majacc   0.44 (  0.46)	Loss_d 0.605 (0.613)	test_acc_d   0.43 (  0.47)	test_minacc_d   0.39 (  0.56)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.40 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.10it/s]
Test: [  0/  1]	Loss 0.974 (0.974)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.974 (0.974)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.974 (0.974)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.46 (  0.46)	Loss_d 0.974 (0.974)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Overall Timing[ 41/  1]	epoch_time 0.0352 (0.0397)	validation_time 0.0003 (0.0005)	train_time 0.0348 (0.0391)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.47430000752210616, 0.5250000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 15%|#5        | 4/26 [00:00<00:01, 16.68it/s] 31%|###       | 8/26 [00:00<00:00, 25.53it/s] 46%|####6     | 12/26 [00:00<00:00, 29.78it/s] 62%|######1   | 16/26 [00:00<00:00, 32.10it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.46it/s] 92%|#########2| 24/26 [00:00<00:00, 34.68it/s]100%|##########| 26/26 [00:00<00:00, 28.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 360 tensor(4.3371e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.44 (  0.48)	train_minacc   0.45 (  0.57)	train_majacc   0.43 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5657 (4.5704)	zero_count 0.0000 (5.8890)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.26it/s] 27%|##6       | 7/26 [00:00<00:00, 33.04it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.04it/s] 46%|####6     | 12/26 [00:00<00:00, 38.81it/s] 69%|######9   | 18/26 [00:00<00:00, 44.90it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.90it/s] 92%|#########2| 24/26 [00:00<00:00, 46.48it/s]100%|##########| 26/26 [00:00<00:00, 38.81it/s]
Test: [   0/  26]	Loss 0.611 (0.611)	test_acc   0.50 (  0.50)	test_minacc   0.56 (  0.56)	test_majacc   0.49 (  0.49)	Loss_d 0.611 (0.611)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.608 (0.609)	test_acc   0.47 (  0.48)	test_minacc   0.59 (  0.56)	test_majacc   0.45 (  0.46)	Loss_d 0.608 (0.609)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.37 (  0.36)
Test: [  20/  26]	Loss 0.618 (0.612)	test_acc   0.47 (  0.48)	test_minacc   0.62 (  0.57)	test_majacc   0.45 (  0.46)	Loss_d 0.618 (0.612)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.45 (  0.46)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.603 (0.611)	test_acc   0.43 (  0.47)	test_minacc   0.42 (  0.57)	test_majacc   0.43 (  0.45)	Loss_d 0.603 (0.611)	test_acc_d   0.43 (  0.47)	test_minacc_d   0.42 (  0.57)	test_majacc_d   0.43 (  0.45)	test_corr_d   0.40 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.18it/s]
Test: [  0/  1]	Loss 0.974 (0.974)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.46 (  0.46)	Loss_d 0.974 (0.974)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.974 (0.974)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.46 (  0.46)	Loss_d 0.974 (0.974)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Overall Timing[ 42/  1]	epoch_time 0.0368 (0.0396)	validation_time 0.0004 (0.0005)	train_time 0.0363 (0.0390)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.47280000761151314, 0.5460000038146973)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.62it/s] 15%|#5        | 4/26 [00:00<00:01, 17.88it/s] 31%|###       | 8/26 [00:00<00:00, 24.72it/s] 46%|####6     | 12/26 [00:00<00:00, 29.13it/s] 62%|######1   | 16/26 [00:00<00:00, 31.56it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.78it/s] 92%|#########2| 24/26 [00:00<00:00, 34.63it/s]100%|##########| 26/26 [00:00<00:00, 28.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 406 tensor(1.8347e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.46 (  0.49)	train_minacc   0.52 (  0.57)	train_majacc   0.45 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5590 (4.5717)	zero_count 0.0000 (4.0950)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.12it/s] 23%|##3       | 6/26 [00:00<00:01, 17.28it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.28it/s] 42%|####2     | 11/26 [00:00<00:00, 26.30it/s] 62%|######1   | 16/26 [00:00<00:00, 32.90it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.90it/s] 81%|########  | 21/26 [00:00<00:00, 36.21it/s]100%|##########| 26/26 [00:00<00:00, 28.99it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.51 (  0.51)	test_minacc   0.56 (  0.56)	test_majacc   0.50 (  0.50)	Loss_d 0.609 (0.609)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.605 (0.606)	test_acc   0.46 (  0.48)	test_minacc   0.59 (  0.56)	test_majacc   0.44 (  0.47)	Loss_d 0.605 (0.606)	test_acc_d   0.46 (  0.48)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.44 (  0.47)	test_corr_d   0.37 (  0.37)
Test: [  20/  26]	Loss 0.616 (0.609)	test_acc   0.48 (  0.48)	test_minacc   0.64 (  0.57)	test_majacc   0.46 (  0.47)	Loss_d 0.616 (0.609)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.46 (  0.47)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.602 (0.609)	test_acc   0.44 (  0.48)	test_minacc   0.45 (  0.58)	test_majacc   0.44 (  0.46)	Loss_d 0.602 (0.609)	test_acc_d   0.44 (  0.48)	test_minacc_d   0.45 (  0.58)	test_majacc_d   0.44 (  0.46)	test_corr_d   0.40 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.92it/s]
Test: [  0/  1]	Loss 0.972 (0.972)	test_acc   0.55 (  0.55)	test_minacc   0.57 (  0.57)	test_majacc   0.45 (  0.45)	Loss_d 0.972 (0.972)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.972 (0.972)	test_acc   0.55 (  0.55)	test_minacc   0.57 (  0.57)	test_majacc   0.45 (  0.45)	Loss_d 0.972 (0.972)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Overall Timing[ 43/  1]	epoch_time 0.0380 (0.0396)	validation_time 0.0004 (0.0005)	train_time 0.0376 (0.0390)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.48060000872612, 0.5540000200271606)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.69it/s] 19%|#9        | 5/26 [00:00<00:00, 22.73it/s] 31%|###       | 8/26 [00:00<00:00, 25.22it/s] 46%|####6     | 12/26 [00:00<00:00, 29.95it/s] 62%|######1   | 16/26 [00:00<00:00, 31.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.50it/s] 92%|#########2| 24/26 [00:00<00:00, 34.49it/s]100%|##########| 26/26 [00:00<00:00, 28.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 371 tensor(2.4963e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.48 (  0.49)	train_minacc   0.55 (  0.57)	train_majacc   0.47 (  0.47)	train_corr   0.00 (  0.00)	l1 4.5601 (4.5722)	zero_count 0.0000 (5.4600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.20it/s] 27%|##6       | 7/26 [00:00<00:00, 32.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.54it/s] 50%|#####     | 13/26 [00:00<00:00, 40.95it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.05it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.05it/s] 96%|#########6| 25/26 [00:00<00:00, 47.40it/s]100%|##########| 26/26 [00:00<00:00, 39.31it/s]
Test: [   0/  26]	Loss 0.607 (0.607)	test_acc   0.53 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.51 (  0.51)	Loss_d 0.607 (0.607)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.601 (0.603)	test_acc   0.48 (  0.51)	test_minacc   0.58 (  0.57)	test_majacc   0.47 (  0.49)	Loss_d 0.601 (0.603)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.38 (  0.37)
Test: [  20/  26]	Loss 0.614 (0.605)	test_acc   0.49 (  0.51)	test_minacc   0.61 (  0.57)	test_majacc   0.48 (  0.49)	Loss_d 0.614 (0.605)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.61 (  0.57)	test_majacc_d   0.48 (  0.49)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.600 (0.605)	test_acc   0.48 (  0.50)	test_minacc   0.55 (  0.57)	test_majacc   0.47 (  0.49)	Loss_d 0.600 (0.605)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.55 (  0.57)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.40 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.52it/s]
Test: [  0/  1]	Loss 0.970 (0.970)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.45 (  0.45)	Loss_d 0.970 (0.970)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.970 (0.970)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.45 (  0.45)	Loss_d 0.970 (0.970)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Overall Timing[ 44/  1]	epoch_time 0.0354 (0.0395)	validation_time 0.0004 (0.0005)	train_time 0.0350 (0.0389)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.5014000131487847, 0.5550000071525574)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.07it/s] 23%|##3       | 6/26 [00:00<00:00, 26.81it/s] 38%|###8      | 10/26 [00:00<00:00, 31.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.36it/s] 69%|######9   | 18/26 [00:00<00:00, 33.21it/s] 85%|########4 | 22/26 [00:00<00:00, 34.93it/s]100%|##########| 26/26 [00:00<00:00, 36.40it/s]100%|##########| 26/26 [00:00<00:00, 31.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 389 tensor(9.0550e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.33)	train_acc   0.47 (  0.49)	train_minacc   0.45 (  0.56)	train_majacc   0.47 (  0.48)	train_corr   0.00 (  0.00)	l1 4.5840 (4.5754)	zero_count 0.0000 (4.7580)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.87it/s] 31%|###       | 8/26 [00:00<00:00, 38.35it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.35it/s] 50%|#####     | 13/26 [00:00<00:00, 40.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.76it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.76it/s] 96%|#########6| 25/26 [00:00<00:00, 46.97it/s]100%|##########| 26/26 [00:00<00:00, 40.07it/s]
Test: [   0/  26]	Loss 0.605 (0.605)	test_acc   0.54 (  0.54)	test_minacc   0.65 (  0.65)	test_majacc   0.52 (  0.52)	Loss_d 0.605 (0.605)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.597 (0.600)	test_acc   0.50 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.48 (  0.51)	Loss_d 0.597 (0.600)	test_acc_d   0.50 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.38 (  0.37)
Test: [  20/  26]	Loss 0.612 (0.602)	test_acc   0.51 (  0.52)	test_minacc   0.59 (  0.59)	test_majacc   0.49 (  0.51)	Loss_d 0.612 (0.602)	test_acc_d   0.51 (  0.52)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.599 (0.602)	test_acc   0.47 (  0.52)	test_minacc   0.45 (  0.59)	test_majacc   0.47 (  0.50)	Loss_d 0.599 (0.602)	test_acc_d   0.47 (  0.52)	test_minacc_d   0.45 (  0.59)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.40 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.81it/s]
Test: [  0/  1]	Loss 0.967 (0.967)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.47 (  0.47)	Loss_d 0.967 (0.967)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.967 (0.967)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.47 (  0.47)	Loss_d 0.967 (0.967)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.05 (  0.05)
Overall Timing[ 45/  1]	epoch_time 0.0352 (0.0394)	validation_time 0.0004 (0.0005)	train_time 0.0348 (0.0388)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.5167000148892402, 0.5580000281333923)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.33it/s] 23%|##3       | 6/26 [00:00<00:00, 23.89it/s] 38%|###8      | 10/26 [00:00<00:00, 26.90it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.87it/s] 69%|######9   | 18/26 [00:00<00:00, 32.67it/s] 85%|########4 | 22/26 [00:00<00:00, 33.51it/s]100%|##########| 26/26 [00:00<00:00, 33.43it/s]100%|##########| 26/26 [00:00<00:00, 28.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 369 tensor(3.1059e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 337 tensor(-0.0004, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 330 tensor(-1.5403e-05, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.34)	train_acc   0.46 (  0.50)	train_minacc   0.42 (  0.55)	train_majacc   0.47 (  0.48)	train_corr   0.00 (  0.00)	l1 4.5898 (4.5809)	zero_count 174.0000 (9.8880)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.75it/s] 23%|##3       | 6/26 [00:00<00:00, 25.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.39it/s] 42%|####2     | 11/26 [00:00<00:00, 33.84it/s] 62%|######1   | 16/26 [00:00<00:00, 38.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.47it/s] 81%|########  | 21/26 [00:00<00:00, 38.56it/s]100%|##########| 26/26 [00:00<00:00, 41.91it/s]100%|##########| 26/26 [00:00<00:00, 33.72it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.52 (  0.52)	test_minacc   0.54 (  0.54)	test_majacc   0.52 (  0.52)	Loss_d 0.609 (0.609)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.600 (0.604)	test_acc   0.48 (  0.50)	test_minacc   0.58 (  0.54)	test_majacc   0.47 (  0.49)	Loss_d 0.600 (0.604)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.38 (  0.37)
Test: [  20/  26]	Loss 0.616 (0.605)	test_acc   0.48 (  0.50)	test_minacc   0.61 (  0.55)	test_majacc   0.46 (  0.49)	Loss_d 0.616 (0.605)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.61 (  0.55)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.606 (0.606)	test_acc   0.46 (  0.50)	test_minacc   0.42 (  0.55)	test_majacc   0.47 (  0.49)	Loss_d 0.606 (0.606)	test_acc_d   0.46 (  0.50)	test_minacc_d   0.42 (  0.55)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.40 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.13it/s]
Test: [  0/  1]	Loss 0.983 (0.983)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 0.983 (0.983)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.983 (0.983)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 0.983 (0.983)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Overall Timing[ 46/  1]	epoch_time 0.0395 (0.0394)	validation_time 0.0006 (0.0005)	train_time 0.0389 (0.0388)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.49730000844597816, 0.5370000004768372)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.69it/s] 15%|#5        | 4/26 [00:00<00:01, 18.35it/s] 31%|###       | 8/26 [00:00<00:00, 25.78it/s] 42%|####2     | 11/26 [00:00<00:00, 25.47it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.51it/s] 69%|######9   | 18/26 [00:00<00:00, 28.88it/s] 81%|########  | 21/26 [00:00<00:00, 27.59it/s] 96%|#########6| 25/26 [00:00<00:00, 30.54it/s]100%|##########| 26/26 [00:00<00:00, 26.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 320 tensor(-1.8949e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 485 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 479 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 483 tensor(4.6561e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.33 ( 28.34)	train_acc   0.50 (  0.49)	train_minacc   0.55 (  0.55)	train_majacc   0.50 (  0.48)	train_corr   0.00 (  0.00)	l1 4.5668 (4.5963)	zero_count 0.0000 (17.8620)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.47it/s] 35%|###4      | 9/26 [00:00<00:00, 39.34it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.34it/s] 58%|#####7    | 15/26 [00:00<00:00, 45.40it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 45.40it/s] 81%|########  | 21/26 [00:00<00:00, 46.12it/s]100%|##########| 26/26 [00:00<00:00, 42.31it/s]
Test: [   0/  26]	Loss 0.607 (0.607)	test_acc   0.53 (  0.53)	test_minacc   0.60 (  0.60)	test_majacc   0.51 (  0.51)	Loss_d 0.607 (0.607)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.598 (0.602)	test_acc   0.50 (  0.52)	test_minacc   0.58 (  0.57)	test_majacc   0.49 (  0.51)	Loss_d 0.598 (0.602)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.38 (  0.37)
Test: [  20/  26]	Loss 0.613 (0.602)	test_acc   0.49 (  0.52)	test_minacc   0.57 (  0.57)	test_majacc   0.48 (  0.51)	Loss_d 0.613 (0.602)	test_acc_d   0.49 (  0.52)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.48 (  0.51)	test_corr_d   0.37 (  0.38)
Test: [  26/  26]	Loss 0.600 (0.603)	test_acc   0.49 (  0.51)	test_minacc   0.45 (  0.57)	test_majacc   0.50 (  0.50)	Loss_d 0.600 (0.603)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.45 (  0.57)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.40 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.57it/s]
Test: [  0/  1]	Loss 0.980 (0.980)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.980 (0.980)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.980 (0.980)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.980 (0.980)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Overall Timing[ 47/  1]	epoch_time 0.0398 (0.0394)	validation_time 0.0004 (0.0005)	train_time 0.0394 (0.0388)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.5123000112175942, 0.5440000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 19%|#9        | 5/26 [00:00<00:00, 22.07it/s] 35%|###4      | 9/26 [00:00<00:00, 28.98it/s] 50%|#####     | 13/26 [00:00<00:00, 28.73it/s] 65%|######5   | 17/26 [00:00<00:00, 31.84it/s] 81%|########  | 21/26 [00:00<00:00, 31.04it/s] 96%|#########6| 25/26 [00:00<00:00, 33.24it/s]100%|##########| 26/26 [00:00<00:00, 28.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 454 tensor(7.7044e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 453 tensor(-1.3045e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.34 ( 28.34)	train_acc   0.50 (  0.50)	train_minacc   0.48 (  0.56)	train_majacc   0.50 (  0.48)	train_corr   0.00 (  0.00)	l1 4.5737 (4.5808)	zero_count 0.0000 (4.4850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.48it/s] 31%|###       | 8/26 [00:00<00:00, 35.86it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.86it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.07it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.07it/s] 92%|#########2| 24/26 [00:00<00:00, 47.81it/s]100%|##########| 26/26 [00:00<00:00, 42.20it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.53 (  0.53)	test_minacc   0.62 (  0.62)	test_majacc   0.52 (  0.52)	Loss_d 0.609 (0.609)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.599 (0.605)	test_acc   0.50 (  0.52)	test_minacc   0.56 (  0.57)	test_majacc   0.49 (  0.51)	Loss_d 0.599 (0.605)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.56 (  0.57)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.37 (  0.37)
Test: [  20/  26]	Loss 0.615 (0.604)	test_acc   0.50 (  0.52)	test_minacc   0.57 (  0.57)	test_majacc   0.49 (  0.51)	Loss_d 0.615 (0.604)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.606 (0.605)	test_acc   0.48 (  0.51)	test_minacc   0.45 (  0.57)	test_majacc   0.49 (  0.50)	Loss_d 0.606 (0.605)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.45 (  0.57)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.39 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.49it/s]
Test: [  0/  1]	Loss 0.979 (0.979)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.49 (  0.49)	Loss_d 0.979 (0.979)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.979 (0.979)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.49 (  0.49)	Loss_d 0.979 (0.979)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.07 (  0.07)
Overall Timing[ 48/  1]	epoch_time 0.0423 (0.0395)	validation_time 0.0006 (0.0005)	train_time 0.0417 (0.0389)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.5117000104188919, 0.5430000424385071)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.14it/s] 15%|#5        | 4/26 [00:00<00:01, 18.94it/s] 27%|##6       | 7/26 [00:00<00:00, 22.53it/s] 42%|####2     | 11/26 [00:00<00:00, 28.44it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.70it/s] 65%|######5   | 17/26 [00:00<00:00, 27.63it/s] 81%|########  | 21/26 [00:00<00:00, 31.03it/s] 96%|#########6| 25/26 [00:00<00:00, 30.59it/s]100%|##########| 26/26 [00:00<00:00, 26.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 322 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 305 tensor(-3.5476e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 470 tensor(5.7702e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 468 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 464 tensor(3.7752e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm  28.34 ( 28.34)	train_acc   0.45 (  0.49)	train_minacc   0.39 (  0.55)	train_majacc   0.46 (  0.48)	train_corr   0.00 (  0.00)	l1 4.5734 (4.5993)	zero_count 0.0000 (20.5140)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.10it/s] 27%|##6       | 7/26 [00:00<00:00, 33.03it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.03it/s] 50%|#####     | 13/26 [00:00<00:00, 39.34it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.19it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.19it/s] 96%|#########6| 25/26 [00:00<00:00, 45.09it/s]100%|##########| 26/26 [00:00<00:00, 37.83it/s]
Test: [   0/  26]	Loss 0.613 (0.613)	test_acc   0.52 (  0.52)	test_minacc   0.54 (  0.54)	test_majacc   0.51 (  0.51)	Loss_d 0.613 (0.613)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.605 (0.610)	test_acc   0.48 (  0.49)	test_minacc   0.58 (  0.55)	test_majacc   0.46 (  0.48)	Loss_d 0.605 (0.610)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.46 (  0.48)	test_corr_d   0.38 (  0.36)
Test: [  20/  26]	Loss 0.618 (0.609)	test_acc   0.48 (  0.49)	test_minacc   0.62 (  0.55)	test_majacc   0.46 (  0.48)	Loss_d 0.618 (0.609)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.46 (  0.48)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.609 (0.609)	test_acc   0.46 (  0.49)	test_minacc   0.42 (  0.56)	test_majacc   0.47 (  0.48)	Loss_d 0.609 (0.609)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.42 (  0.56)	test_majacc_d   0.47 (  0.48)	test_corr_d   0.39 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.76it/s]
Test: [  0/  1]	Loss 0.987 (0.987)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 0.987 (0.987)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.987 (0.987)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.46 (  0.46)	Loss_d 0.987 (0.987)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.07 (  0.07)
Overall Timing[ 49/  1]	epoch_time 0.0429 (0.0395)	validation_time 0.0004 (0.0005)	train_time 0.0425 (0.0390)
record: (train_acc, test_acc) (0.7273000337481499, 0.6020000576972961)
last accs (train_acc, test_acc) (0.4899000065624714, 0.5410000085830688)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.096 MB of 0.096 MB uploadedwandb: \ 0.096 MB of 0.096 MB uploadedwandb: | 0.096 MB of 0.096 MB uploadedwandb: / 0.096 MB of 0.096 MB uploadedwandb: - 0.096 MB of 0.096 MB uploadedwandb: \ 0.096 MB of 0.096 MB uploadedwandb: | 0.096 MB of 0.096 MB uploadedwandb: / 0.096 MB of 0.096 MB uploadedwandb: - 0.096 MB of 0.096 MB uploadedwandb: \ 0.096 MB of 0.096 MB uploadedwandb: | 0.096 MB of 0.096 MB uploadedwandb: / 0.118 MB of 0.127 MB uploaded (0.003 MB deduped)wandb: - 0.502 MB of 0.502 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                           global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/diagnostics/epoch_time_val █▂▂▂▂▂▁▁▃▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▂▁▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/diagnostics/train_time_val █▂▂▂▂▂▁▁▃▂▂▁▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▁▂▁▂▂▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/diagnostics/validation_time_val █▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/Loss_avg ▅▅▅▅▅▅▅▅▇▇█▇▃▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/Loss_d_avg ▅▅▅▅▅▅▅▅▇▇█▇▃▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/Loss_d_val ▅▅▅▅▅▅▅▅▇▇█▇▃▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/Loss_val ▅▅▅▅▅▅▅▅▇▇█▇▃▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_acc_avg ▁▁▁▁▂▂▂▃▃▅▄▄▇▇▇▇███▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_acc_d_avg ▁▁▁▁▂▂▂▃▃▅▄▄▇▇▇▇███▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_acc_d_val ▁▁▁▁▂▂▂▃▃▅▄▄▇▇▇▇███▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_acc_val ▁▁▁▁▂▂▂▃▃▅▄▄▇▇▇▇███▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_corr_d_avg ████▇▇▇▇▆▅▆▅▃▂▂▃▁▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_corr_d_val ████▇▇▇▇▆▅▆▅▃▂▂▃▁▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_majacc_avg ████████▇▇▇▇▆▅▅▅▅▅▅▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_majacc_d_avg ████████▇▇▇▇▆▅▅▅▅▅▅▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_majacc_d_val ████████▇▇▇▇▆▅▅▅▅▅▅▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_majacc_val ████████▇▇▇▇▆▅▅▅▅▅▅▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_minacc_avg ▁▁▁▁▂▂▂▃▃▄▄▄▆█▇▇███▇▇███████▇▇▇▇▇▇██████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_minacc_d_avg ▁▁▁▁▂▂▂▃▃▄▄▄▆█▇▇███▇▇███████▇▇▇▇▇▇██████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_minacc_d_val ▁▁▁▁▂▂▂▃▃▄▄▄▆█▇▇███▇▇███████▇▇▇▇▇▇██████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_minacc_val ▁▁▁▁▂▂▂▃▃▄▄▄▆█▇▇███▇▇███████▇▇▇▇▇▇██████
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/Loss_avg █▆▆▅▅▅▅▅▄▄▄▄▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/Loss_val ██▇▇▇▇▆▆▅▅▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/l1_avg ▇▆▆▆▇▇▇▇███▇█▃▂▂▂▂▂▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/l1_val ▅▅▆▆▆▆▆▆▇██▇▅▂▂▂▂▂▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_acc_avg ▆▇▇▇▇▇▇██████▅▅▅▅▅▅▅▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_acc_val ▇▇▇▇▇▇▇▇████▇▅▅▅▄▅▅▅▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▂▁▂▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_majacc_avg ▇██████▇▇▇▇▇▇▅▄▄▄▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_majacc_val █████▇█▇█▇█▇▆▄▅▄▄▅▅▅▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▂▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_minacc_avg ▂▁▁▁▃▃▄▄▅▆▆▆███████▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_minacc_val ▁▁▁▁▃▃▃▄▅▆▆▇██▇▇▇▇▇▅▅▅▅▅▅▅▅▄▄▄▄▄▄▄▅▅▅▅▅▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_nll_avg █▄▄▄▃▃▂▂▁▁▁▁▁▆▆▆▆▆▆▇████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_nll_val ▄▄▄▃▃▃▃▃▂▂▁▁▄▆▆▆▇▅▆▇████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_penalty_avg █▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_penalty_val █▇▆▅▄▄▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/weight_norm_avg ▁▃▄▄▄▄▄▄▄▅▅▅▆▆▆▆▆▆▆▆████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/weight_norm_val ▁▂▂▂▂▂▃▃▃▃▄▄▅▅▅▅▅▅▅▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▆█▃▂▂▂▂▂▂▂▂▂▂▂▁▂▁▂▂▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▆▁▁▁▁▁▁▁█▁▁
wandb: 
wandb: Run summary:
wandb:                                                                           global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/diagnostics/epoch_time_val 0.04289
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/diagnostics/train_time_val 0.04247
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/diagnostics/validation_time_val 0.0004
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/Loss_avg 0.98698
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/Loss_d_avg 0.98698
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/Loss_d_val 0.98698
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/Loss_val 0.98698
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_acc_avg 0.541
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_acc_d_avg 0.541
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_acc_d_val 0.541
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_acc_val 0.541
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_corr_d_avg 0.07341
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_corr_d_val 0.07341
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_majacc_avg 0.46
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_majacc_d_avg 0.46
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_majacc_d_val 0.46
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_majacc_val 0.46
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_minacc_avg 0.55
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_minacc_d_avg 0.55
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_minacc_d_val 0.55
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/test/test_minacc_val 0.55
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/Loss_avg 7e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/Loss_val 9e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/l1_avg 4.5993
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/l1_val 4.57336
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_acc_avg 0.4883
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_acc_val 0.452
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_majacc_avg 0.47645
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_majacc_val 0.46083
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_minacc_avg 0.55065
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_minacc_val 0.39394
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_nll_avg 0.60874
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_nll_val 0.61096
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_penalty_avg 1e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/train_penalty_val 3e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/weight_norm_avg 28.33598
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/weight_norm_val 28.33638
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/zero_count_avg 20.514
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/92/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/0m2hqc10
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_153318-0m2hqc10/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_153600-5eht0kmc
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/5eht0kmc
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1198
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5968, 3, 32, 32) (6032, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:42,  1.69s/it] 23%|##3       | 6/26 [00:01<00:04,  4.40it/s] 42%|####2     | 11/26 [00:01<00:01,  8.71it/s] 62%|######1   | 16/26 [00:02<00:00, 13.43it/s] 81%|########  | 21/26 [00:02<00:00, 18.17it/s]100%|##########| 26/26 [00:02<00:00, 15.12it/s]100%|##########| 26/26 [00:02<00:00,  9.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.496 (0.607)	train_nll   0.50 (  0.61)	train_penalty   0.11 (  0.35)	weight_norm  20.91 ( 18.12)	train_acc   0.83 (  0.79)	train_minacc   0.02 (  0.08)	train_majacc   1.00 (  0.92)	train_corr   0.00 (  0.00)	l1 6.0568 (7.5107)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 23%|##3       | 6/26 [00:00<00:00, 31.54it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.54it/s] 42%|####2     | 11/26 [00:00<00:00, 38.34it/s] 62%|######1   | 16/26 [00:00<00:00, 41.87it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.87it/s] 81%|########  | 21/26 [00:00<00:00, 39.83it/s]100%|##########| 26/26 [00:00<00:00, 42.43it/s]100%|##########| 26/26 [00:00<00:00, 35.75it/s]
Test: [   0/  26]	Loss 0.393 (0.393)	test_acc   0.87 (  0.87)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.393 (0.393)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.440 (0.437)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.440 (0.437)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.99 (  0.99)
Test: [  20/  26]	Loss 0.454 (0.439)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.454 (0.439)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  26/  26]	Loss 0.480 (0.440)	test_acc   0.82 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.480 (0.440)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]100%|##########| 1/1 [00:00<00:00,  2.54it/s]
Test: [  0/  1]	Loss 1.789 (1.789)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.789 (1.789)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  1/  1]	Loss 1.789 (1.789)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.789 (1.789)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0790 (0.0790)	validation_time 0.0067 (0.0067)	train_time 0.0707 (0.0707)
record: (train_acc, test_acc) (0.8460000267028809, 0.10400000214576721)
last accs (train_acc, test_acc) (0.8460000267028809, 0.10400000214576721)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.00it/s] 19%|#9        | 5/26 [00:00<00:01, 19.14it/s] 35%|###4      | 9/26 [00:00<00:00, 26.18it/s] 50%|#####     | 13/26 [00:00<00:00, 29.33it/s] 65%|######5   | 17/26 [00:00<00:00, 31.48it/s] 81%|########  | 21/26 [00:00<00:00, 32.69it/s] 96%|#########6| 25/26 [00:00<00:00, 32.92it/s]100%|##########| 26/26 [00:00<00:00, 27.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.453 (0.423)	train_nll   0.45 (  0.42)	train_penalty   0.09 (  0.06)	weight_norm  22.04 ( 21.69)	train_acc   0.82 (  0.85)	train_minacc   0.07 (  0.01)	train_majacc   0.99 (  1.00)	train_corr   0.00 (  0.00)	l1 5.8377 (5.8341)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.27it/s] 23%|##3       | 6/26 [00:00<00:00, 23.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.57it/s] 42%|####2     | 11/26 [00:00<00:00, 32.14it/s] 62%|######1   | 16/26 [00:00<00:00, 37.92it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.92it/s] 81%|########  | 21/26 [00:00<00:00, 40.94it/s]100%|##########| 26/26 [00:00<00:00, 33.69it/s]
Test: [   0/  26]	Loss 0.376 (0.376)	test_acc   0.87 (  0.87)	test_minacc   0.10 (  0.10)	test_majacc   0.98 (  0.98)	Loss_d 0.376 (0.376)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.398 (0.412)	test_acc   0.85 (  0.85)	test_minacc   0.10 (  0.06)	test_majacc   0.98 (  0.98)	Loss_d 0.398 (0.412)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.10 (  0.06)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.95 (  0.96)
Test: [  20/  26]	Loss 0.420 (0.416)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.05)	test_majacc   0.99 (  0.98)	Loss_d 0.420 (0.416)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.05)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.97 (  0.96)
Test: [  26/  26]	Loss 0.445 (0.416)	test_acc   0.82 (  0.84)	test_minacc   0.11 (  0.05)	test_majacc   0.98 (  0.98)	Loss_d 0.445 (0.416)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.11 (  0.05)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.22it/s]
Test: [  0/  1]	Loss 1.742 (1.742)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.742 (1.742)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.742 (1.742)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.742 (1.742)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0405 (0.0597)	validation_time 0.0004 (0.0036)	train_time 0.0400 (0.0554)
record: (train_acc, test_acc) (0.8432000198960304, 0.13500000536441803)
last accs (train_acc, test_acc) (0.8432000198960304, 0.13500000536441803)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.86it/s] 19%|#9        | 5/26 [00:00<00:01, 15.87it/s] 35%|###4      | 9/26 [00:00<00:00, 22.61it/s] 50%|#####     | 13/26 [00:00<00:00, 26.80it/s] 65%|######5   | 17/26 [00:00<00:00, 30.21it/s] 81%|########  | 21/26 [00:00<00:00, 32.13it/s] 96%|#########6| 25/26 [00:00<00:00, 33.55it/s]100%|##########| 26/26 [00:01<00:00, 25.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.435 (0.409)	train_nll   0.44 (  0.41)	train_penalty   0.08 (  0.06)	weight_norm  22.15 ( 22.12)	train_acc   0.83 (  0.85)	train_minacc   0.11 (  0.02)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 5.8445 (5.7639)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 27%|##6       | 7/26 [00:00<00:00, 31.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.93it/s] 46%|####6     | 12/26 [00:00<00:00, 38.19it/s] 65%|######5   | 17/26 [00:00<00:00, 36.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.11it/s] 85%|########4 | 22/26 [00:00<00:00, 39.78it/s]100%|##########| 26/26 [00:00<00:00, 34.18it/s]
Test: [   0/  26]	Loss 0.371 (0.371)	test_acc   0.85 (  0.85)	test_minacc   0.06 (  0.06)	test_majacc   0.97 (  0.97)	Loss_d 0.371 (0.371)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.388 (0.398)	test_acc   0.85 (  0.85)	test_minacc   0.10 (  0.07)	test_majacc   0.99 (  0.98)	Loss_d 0.388 (0.398)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.10 (  0.07)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.398 (0.399)	test_acc   0.84 (  0.85)	test_minacc   0.05 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.398 (0.399)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.05 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  26/  26]	Loss 0.426 (0.400)	test_acc   0.84 (  0.85)	test_minacc   0.18 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.426 (0.400)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.18 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.39it/s]
Test: [  0/  1]	Loss 1.744 (1.744)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 1.744 (1.744)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.744 (1.744)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 1.744 (1.744)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0393 (0.0529)	validation_time 0.0004 (0.0025)	train_time 0.0388 (0.0498)
record: (train_acc, test_acc) (0.8483000284433365, 0.13700000941753387)
last accs (train_acc, test_acc) (0.8483000284433365, 0.13700000941753387)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.84it/s]  8%|7         | 2/26 [00:00<00:03,  7.99it/s] 23%|##3       | 6/26 [00:00<00:01, 19.47it/s] 38%|###8      | 10/26 [00:00<00:00, 25.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.14it/s] 69%|######9   | 18/26 [00:00<00:00, 31.16it/s] 85%|########4 | 22/26 [00:00<00:00, 32.23it/s]100%|##########| 26/26 [00:00<00:00, 33.21it/s]100%|##########| 26/26 [00:00<00:00, 26.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.411 (0.393)	train_nll   0.41 (  0.39)	train_penalty   0.07 (  0.05)	weight_norm  22.19 ( 22.17)	train_acc   0.83 (  0.85)	train_minacc   0.14 (  0.06)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 5.9871 (5.8577)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.46it/s] 27%|##6       | 7/26 [00:00<00:00, 33.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.12it/s] 46%|####6     | 12/26 [00:00<00:00, 38.92it/s] 65%|######5   | 17/26 [00:00<00:00, 37.86it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.86it/s] 85%|########4 | 22/26 [00:00<00:00, 41.21it/s]100%|##########| 26/26 [00:00<00:00, 35.52it/s]
Test: [   0/  26]	Loss 0.352 (0.352)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.98 (  0.98)	Loss_d 0.352 (0.352)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.355 (0.377)	test_acc   0.86 (  0.85)	test_minacc   0.14 (  0.09)	test_majacc   0.99 (  0.98)	Loss_d 0.355 (0.377)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.14 (  0.09)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.355 (0.374)	test_acc   0.84 (  0.85)	test_minacc   0.08 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.355 (0.374)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.400 (0.374)	test_acc   0.84 (  0.85)	test_minacc   0.16 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.400 (0.374)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.16 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.45it/s]
Test: [  0/  1]	Loss 1.736 (1.736)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 1.736 (1.736)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.736 (1.736)	test_acc   0.16 (  0.16)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 1.736 (1.736)	test_acc_d   0.16 (  0.16)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0403 (0.0497)	validation_time 0.0003 (0.0020)	train_time 0.0399 (0.0474)
record: (train_acc, test_acc) (0.8513000259399414, 0.15800000727176666)
last accs (train_acc, test_acc) (0.8513000259399414, 0.15800000727176666)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.42it/s] 15%|#5        | 4/26 [00:00<00:01, 18.40it/s] 31%|###       | 8/26 [00:00<00:00, 25.63it/s] 46%|####6     | 12/26 [00:00<00:00, 29.25it/s] 62%|######1   | 16/26 [00:00<00:00, 30.88it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.28it/s] 92%|#########2| 24/26 [00:00<00:00, 34.02it/s]100%|##########| 26/26 [00:00<00:00, 28.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.388 (0.367)	train_nll   0.39 (  0.37)	train_penalty   0.04 (  0.04)	weight_norm  22.25 ( 22.22)	train_acc   0.84 (  0.85)	train_minacc   0.23 (  0.10)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 6.1636 (6.0941)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.69it/s] 27%|##6       | 7/26 [00:00<00:00, 33.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.83it/s] 46%|####6     | 12/26 [00:00<00:00, 40.11it/s] 65%|######5   | 17/26 [00:00<00:00, 41.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.81it/s] 88%|########8 | 23/26 [00:00<00:00, 42.26it/s]100%|##########| 26/26 [00:00<00:00, 37.68it/s]
Test: [   0/  26]	Loss 0.335 (0.335)	test_acc   0.84 (  0.84)	test_minacc   0.08 (  0.08)	test_majacc   0.95 (  0.95)	Loss_d 0.335 (0.335)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.332 (0.356)	test_acc   0.87 (  0.85)	test_minacc   0.29 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 0.332 (0.356)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.29 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.322 (0.346)	test_acc   0.84 (  0.85)	test_minacc   0.11 (  0.18)	test_majacc   0.98 (  0.97)	Loss_d 0.322 (0.346)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.11 (  0.18)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  26/  26]	Loss 0.376 (0.345)	test_acc   0.84 (  0.85)	test_minacc   0.23 (  0.19)	test_majacc   0.98 (  0.97)	Loss_d 0.376 (0.345)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.23 (  0.19)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.27it/s]
Test: [  0/  1]	Loss 1.662 (1.662)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   0.97 (  0.97)	Loss_d 1.662 (1.662)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  1/  1]	Loss 1.662 (1.662)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   0.97 (  0.97)	Loss_d 1.662 (1.662)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0374 (0.0473)	validation_time 0.0004 (0.0017)	train_time 0.0369 (0.0453)
record: (train_acc, test_acc) (0.8539000234603882, 0.1860000044107437)
last accs (train_acc, test_acc) (0.8539000234603882, 0.1860000044107437)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.48it/s] 27%|##6       | 7/26 [00:00<00:00, 29.25it/s] 42%|####2     | 11/26 [00:00<00:00, 32.42it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.70it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.51it/s] 88%|########8 | 23/26 [00:00<00:00, 34.54it/s]100%|##########| 26/26 [00:00<00:00, 30.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.364 (0.347)	train_nll   0.36 (  0.35)	train_penalty   0.04 (  0.03)	weight_norm  22.32 ( 22.29)	train_acc   0.84 (  0.85)	train_minacc   0.30 (  0.16)	train_majacc   0.96 (  0.97)	train_corr   0.00 (  0.00)	l1 6.2404 (6.2194)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s] 23%|##3       | 6/26 [00:00<00:00, 23.45it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.45it/s] 42%|####2     | 11/26 [00:00<00:00, 32.40it/s] 62%|######1   | 16/26 [00:00<00:00, 37.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.58it/s] 81%|########  | 21/26 [00:00<00:00, 40.67it/s]100%|##########| 26/26 [00:00<00:00, 43.26it/s]100%|##########| 26/26 [00:00<00:00, 32.89it/s]
Test: [   0/  26]	Loss 0.320 (0.320)	test_acc   0.85 (  0.85)	test_minacc   0.37 (  0.37)	test_majacc   0.92 (  0.92)	Loss_d 0.320 (0.320)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.304 (0.336)	test_acc   0.86 (  0.85)	test_minacc   0.39 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 0.304 (0.336)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.39 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.87 (  0.87)
Test: [  20/  26]	Loss 0.296 (0.327)	test_acc   0.87 (  0.86)	test_minacc   0.44 (  0.36)	test_majacc   0.95 (  0.94)	Loss_d 0.296 (0.327)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.44 (  0.36)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.86 (  0.87)
Test: [  26/  26]	Loss 0.343 (0.326)	test_acc   0.85 (  0.86)	test_minacc   0.36 (  0.36)	test_majacc   0.95 (  0.94)	Loss_d 0.343 (0.326)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.87 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.50it/s]
Test: [  0/  1]	Loss 1.624 (1.624)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.96 (  0.96)	Loss_d 1.624 (1.624)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.624 (1.624)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.96 (  0.96)	Loss_d 1.624 (1.624)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0403 (0.0461)	validation_time 0.0003 (0.0015)	train_time 0.0399 (0.0444)
record: (train_acc, test_acc) (0.8563000246882438, 0.30900001525878906)
last accs (train_acc, test_acc) (0.8563000246882438, 0.30900001525878906)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 19%|#9        | 5/26 [00:00<00:00, 23.16it/s] 35%|###4      | 9/26 [00:00<00:00, 28.51it/s] 50%|#####     | 13/26 [00:00<00:00, 31.07it/s] 65%|######5   | 17/26 [00:00<00:00, 32.07it/s] 81%|########  | 21/26 [00:00<00:00, 33.38it/s] 96%|#########6| 25/26 [00:00<00:00, 34.50it/s]100%|##########| 26/26 [00:00<00:00, 29.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.353 (0.329)	train_nll   0.35 (  0.33)	train_penalty   0.03 (  0.02)	weight_norm  22.40 ( 22.36)	train_acc   0.84 (  0.85)	train_minacc   0.30 (  0.25)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.1931 (6.2386)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s] 27%|##6       | 7/26 [00:00<00:00, 33.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.12it/s] 46%|####6     | 12/26 [00:00<00:00, 39.88it/s] 65%|######5   | 17/26 [00:00<00:00, 42.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.34it/s] 88%|########8 | 23/26 [00:00<00:00, 46.77it/s]100%|##########| 26/26 [00:00<00:00, 38.34it/s]
Test: [   0/  26]	Loss 0.314 (0.314)	test_acc   0.86 (  0.86)	test_minacc   0.31 (  0.31)	test_majacc   0.95 (  0.95)	Loss_d 0.314 (0.314)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.297 (0.333)	test_acc   0.87 (  0.86)	test_minacc   0.37 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 0.297 (0.333)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.37 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.291 (0.319)	test_acc   0.87 (  0.86)	test_minacc   0.38 (  0.31)	test_majacc   0.97 (  0.96)	Loss_d 0.291 (0.319)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.38 (  0.31)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.90)
Test: [  26/  26]	Loss 0.333 (0.317)	test_acc   0.84 (  0.86)	test_minacc   0.34 (  0.31)	test_majacc   0.95 (  0.96)	Loss_d 0.333 (0.317)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.34 (  0.31)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.27it/s]
Test: [  0/  1]	Loss 1.796 (1.796)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.97 (  0.97)	Loss_d 1.796 (1.796)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 1.796 (1.796)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.97 (  0.97)	Loss_d 1.796 (1.796)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Overall Timing[  6/  1]	epoch_time 0.0462 (0.0461)	validation_time 0.0005 (0.0013)	train_time 0.0456 (0.0446)
record: (train_acc, test_acc) (0.8563000246882438, 0.30900001525878906)
last accs (train_acc, test_acc) (0.8637000205516815, 0.25200000405311584)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.02it/s] 19%|#9        | 5/26 [00:00<00:01, 20.54it/s] 35%|###4      | 9/26 [00:00<00:00, 27.80it/s] 50%|#####     | 13/26 [00:00<00:00, 31.97it/s] 65%|######5   | 17/26 [00:00<00:00, 33.93it/s] 81%|########  | 21/26 [00:00<00:00, 34.73it/s] 96%|#########6| 25/26 [00:00<00:00, 35.68it/s]100%|##########| 26/26 [00:00<00:00, 29.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.312 (0.314)	train_nll   0.31 (  0.31)	train_penalty   0.02 (  0.02)	weight_norm  22.49 ( 22.45)	train_acc   0.86 (  0.86)	train_minacc   0.39 (  0.32)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 6.3548 (6.2874)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.47it/s] 27%|##6       | 7/26 [00:00<00:00, 33.99it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.99it/s] 46%|####6     | 12/26 [00:00<00:00, 39.20it/s] 65%|######5   | 17/26 [00:00<00:00, 40.40it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.40it/s] 85%|########4 | 22/26 [00:00<00:00, 41.61it/s]100%|##########| 26/26 [00:00<00:00, 36.49it/s]
Test: [   0/  26]	Loss 0.311 (0.311)	test_acc   0.87 (  0.87)	test_minacc   0.29 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 0.311 (0.311)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.300 (0.331)	test_acc   0.87 (  0.86)	test_minacc   0.32 (  0.29)	test_majacc   0.97 (  0.96)	Loss_d 0.300 (0.331)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.32 (  0.29)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  20/  26]	Loss 0.292 (0.315)	test_acc   0.87 (  0.87)	test_minacc   0.35 (  0.30)	test_majacc   0.98 (  0.96)	Loss_d 0.292 (0.315)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.35 (  0.30)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  26/  26]	Loss 0.300 (0.313)	test_acc   0.86 (  0.87)	test_minacc   0.36 (  0.31)	test_majacc   0.97 (  0.96)	Loss_d 0.300 (0.313)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.36 (  0.31)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.87 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.46it/s]
Test: [  0/  1]	Loss 1.926 (1.926)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.97 (  0.97)	Loss_d 1.926 (1.926)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.926 (1.926)	test_acc   0.28 (  0.28)	test_minacc   0.20 (  0.20)	test_majacc   0.97 (  0.97)	Loss_d 1.926 (1.926)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.71 (  0.71)
Overall Timing[  7/  1]	epoch_time 0.0425 (0.0457)	validation_time 0.0004 (0.0012)	train_time 0.0421 (0.0442)
record: (train_acc, test_acc) (0.8563000246882438, 0.30900001525878906)
last accs (train_acc, test_acc) (0.865500019788742, 0.281000018119812)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.45it/s] 23%|##3       | 6/26 [00:00<00:00, 23.85it/s] 38%|###8      | 10/26 [00:00<00:00, 28.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.82it/s] 88%|########8 | 23/26 [00:00<00:00, 34.43it/s]100%|##########| 26/26 [00:00<00:00, 29.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.311 (0.313)	train_nll   0.31 (  0.31)	train_penalty   0.02 (  0.02)	weight_norm  22.61 ( 22.55)	train_acc   0.88 (  0.86)	train_minacc   0.41 (  0.31)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 6.1165 (6.1643)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 23%|##3       | 6/26 [00:00<00:00, 28.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.66it/s] 42%|####2     | 11/26 [00:00<00:00, 37.10it/s] 62%|######1   | 16/26 [00:00<00:00, 41.83it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.83it/s] 81%|########  | 21/26 [00:00<00:00, 39.34it/s]100%|##########| 26/26 [00:00<00:00, 41.78it/s]100%|##########| 26/26 [00:00<00:00, 34.50it/s]
Test: [   0/  26]	Loss 0.298 (0.298)	test_acc   0.86 (  0.86)	test_minacc   0.25 (  0.25)	test_majacc   0.95 (  0.95)	Loss_d 0.298 (0.298)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.263 (0.302)	test_acc   0.88 (  0.87)	test_minacc   0.36 (  0.30)	test_majacc   0.97 (  0.96)	Loss_d 0.263 (0.302)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.36 (  0.30)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.275 (0.290)	test_acc   0.88 (  0.87)	test_minacc   0.43 (  0.33)	test_majacc   0.96 (  0.97)	Loss_d 0.275 (0.290)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.43 (  0.33)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.86 (  0.89)
Test: [  26/  26]	Loss 0.266 (0.287)	test_acc   0.89 (  0.87)	test_minacc   0.48 (  0.34)	test_majacc   0.98 (  0.97)	Loss_d 0.266 (0.287)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.48 (  0.34)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.88 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.81it/s]
Test: [  0/  1]	Loss 1.845 (1.845)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.94 (  0.94)	Loss_d 1.845 (1.845)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 1.845 (1.845)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.94 (  0.94)	Loss_d 1.845 (1.845)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.69 (  0.69)
Overall Timing[  8/  1]	epoch_time 0.0389 (0.0449)	validation_time 0.0004 (0.0011)	train_time 0.0385 (0.0436)
record: (train_acc, test_acc) (0.8563000246882438, 0.30900001525878906)
last accs (train_acc, test_acc) (0.8720000207424163, 0.29200002551078796)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.59it/s] 19%|#9        | 5/26 [00:00<00:00, 24.03it/s] 35%|###4      | 9/26 [00:00<00:00, 29.25it/s] 50%|#####     | 13/26 [00:00<00:00, 31.55it/s] 65%|######5   | 17/26 [00:00<00:00, 33.33it/s] 81%|########  | 21/26 [00:00<00:00, 34.97it/s] 96%|#########6| 25/26 [00:00<00:00, 36.13it/s]100%|##########| 26/26 [00:00<00:00, 30.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.275 (0.295)	train_nll   0.27 (  0.30)	train_penalty   0.01 (  0.01)	weight_norm  22.74 ( 22.68)	train_acc   0.89 (  0.87)	train_minacc   0.68 (  0.35)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7364 (6.3072)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.58it/s] 27%|##6       | 7/26 [00:00<00:00, 31.81it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.81it/s] 46%|####6     | 12/26 [00:00<00:00, 34.92it/s] 65%|######5   | 17/26 [00:00<00:00, 38.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.80it/s] 85%|########4 | 22/26 [00:00<00:00, 41.19it/s]100%|##########| 26/26 [00:00<00:00, 34.33it/s]
Test: [   0/  26]	Loss 0.278 (0.278)	test_acc   0.88 (  0.88)	test_minacc   0.75 (  0.75)	test_majacc   0.90 (  0.90)	Loss_d 0.278 (0.278)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.259 (0.297)	test_acc   0.89 (  0.87)	test_minacc   0.64 (  0.60)	test_majacc   0.93 (  0.91)	Loss_d 0.259 (0.297)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.64 (  0.60)	test_majacc_d   0.93 (  0.91)	test_corr_d   0.78 (  0.78)
Test: [  20/  26]	Loss 0.252 (0.281)	test_acc   0.86 (  0.87)	test_minacc   0.75 (  0.63)	test_majacc   0.88 (  0.91)	Loss_d 0.252 (0.281)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.75 (  0.63)	test_majacc_d   0.88 (  0.91)	test_corr_d   0.74 (  0.78)
Test: [  26/  26]	Loss 0.228 (0.274)	test_acc   0.91 (  0.88)	test_minacc   0.75 (  0.65)	test_majacc   0.95 (  0.92)	Loss_d 0.228 (0.274)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.75 (  0.65)	test_majacc_d   0.95 (  0.92)	test_corr_d   0.76 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.95it/s]
Test: [  0/  1]	Loss 1.775 (1.775)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.88 (  0.88)	Loss_d 1.775 (1.775)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.775 (1.775)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.88 (  0.88)	Loss_d 1.775 (1.775)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.34 (  0.34)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0421 (0.0446)	validation_time 0.0004 (0.0010)	train_time 0.0417 (0.0434)
record: (train_acc, test_acc) (0.8772000249624252, 0.492000013589859)
last accs (train_acc, test_acc) (0.8772000249624252, 0.492000013589859)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.04it/s] 23%|##3       | 6/26 [00:00<00:00, 25.59it/s] 38%|###8      | 10/26 [00:00<00:00, 29.40it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.03it/s] 69%|######9   | 18/26 [00:00<00:00, 32.41it/s] 85%|########4 | 22/26 [00:00<00:00, 34.16it/s]100%|##########| 26/26 [00:00<00:00, 34.67it/s]100%|##########| 26/26 [00:00<00:00, 29.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.239 (0.282)	train_nll   0.24 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.90 ( 22.82)	train_acc   0.88 (  0.87)	train_minacc   0.50 (  0.45)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.0569 (6.3267)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.48it/s] 27%|##6       | 7/26 [00:00<00:00, 34.41it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.41it/s] 46%|####6     | 12/26 [00:00<00:00, 39.31it/s] 69%|######9   | 18/26 [00:00<00:00, 46.11it/s]                                                69%|######9   | 18/26 [00:00<00:00, 46.11it/s] 88%|########8 | 23/26 [00:00<00:00, 45.20it/s]100%|##########| 26/26 [00:00<00:00, 39.03it/s]
Test: [   0/  26]	Loss 0.278 (0.278)	test_acc   0.85 (  0.85)	test_minacc   0.71 (  0.71)	test_majacc   0.87 (  0.87)	Loss_d 0.278 (0.278)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.287 (0.290)	test_acc   0.89 (  0.87)	test_minacc   0.63 (  0.66)	test_majacc   0.93 (  0.91)	Loss_d 0.287 (0.290)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.63 (  0.66)	test_majacc_d   0.93 (  0.91)	test_corr_d   0.80 (  0.77)
Test: [  20/  26]	Loss 0.242 (0.274)	test_acc   0.89 (  0.88)	test_minacc   0.79 (  0.69)	test_majacc   0.91 (  0.92)	Loss_d 0.242 (0.274)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.79 (  0.69)	test_majacc_d   0.91 (  0.92)	test_corr_d   0.72 (  0.76)
Test: [  26/  26]	Loss 0.208 (0.269)	test_acc   0.91 (  0.88)	test_minacc   0.80 (  0.70)	test_majacc   0.94 (  0.92)	Loss_d 0.208 (0.269)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.80 (  0.70)	test_majacc_d   0.94 (  0.92)	test_corr_d   0.76 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.92it/s]
Test: [  0/  1]	Loss 1.810 (1.810)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.85 (  0.85)	Loss_d 1.810 (1.810)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 1.810 (1.810)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.85 (  0.85)	Loss_d 1.810 (1.810)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.28 (  0.28)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0418 (0.0444)	validation_time 0.0004 (0.0010)	train_time 0.0413 (0.0432)
record: (train_acc, test_acc) (0.8846000221967697, 0.5010000467300415)
last accs (train_acc, test_acc) (0.8846000221967697, 0.5010000467300415)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.38it/s] 19%|#9        | 5/26 [00:00<00:01, 17.51it/s] 35%|###4      | 9/26 [00:00<00:00, 25.03it/s] 50%|#####     | 13/26 [00:00<00:00, 29.38it/s] 65%|######5   | 17/26 [00:00<00:00, 32.35it/s] 81%|########  | 21/26 [00:00<00:00, 34.66it/s]100%|##########| 26/26 [00:00<00:00, 36.95it/s]100%|##########| 26/26 [00:00<00:00, 27.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.236 (0.264)	train_nll   0.24 (  0.26)	train_penalty   0.01 (  0.01)	weight_norm  23.08 ( 23.00)	train_acc   0.91 (  0.88)	train_minacc   0.66 (  0.53)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.9134 (6.9215)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.95it/s] 23%|##3       | 6/26 [00:00<00:00, 31.79it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.79it/s] 42%|####2     | 11/26 [00:00<00:00, 38.53it/s] 62%|######1   | 16/26 [00:00<00:00, 41.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.99it/s] 81%|########  | 21/26 [00:00<00:00, 40.09it/s]100%|##########| 26/26 [00:00<00:00, 36.16it/s]
Test: [   0/  26]	Loss 0.231 (0.231)	test_acc   0.90 (  0.90)	test_minacc   0.71 (  0.71)	test_majacc   0.93 (  0.93)	Loss_d 0.231 (0.231)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.226 (0.260)	test_acc   0.93 (  0.90)	test_minacc   0.76 (  0.69)	test_majacc   0.95 (  0.93)	Loss_d 0.226 (0.260)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.76 (  0.69)	test_majacc_d   0.95 (  0.93)	test_corr_d   0.78 (  0.78)
Test: [  20/  26]	Loss 0.221 (0.249)	test_acc   0.91 (  0.90)	test_minacc   0.84 (  0.72)	test_majacc   0.92 (  0.93)	Loss_d 0.221 (0.249)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.84 (  0.72)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.72 (  0.77)
Test: [  26/  26]	Loss 0.196 (0.244)	test_acc   0.94 (  0.90)	test_minacc   0.82 (  0.73)	test_majacc   0.97 (  0.93)	Loss_d 0.196 (0.244)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.82 (  0.73)	test_majacc_d   0.97 (  0.93)	test_corr_d   0.75 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.41it/s]
Test: [  0/  1]	Loss 1.828 (1.828)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.86 (  0.86)	Loss_d 1.828 (1.828)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.828 (1.828)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.86 (  0.86)	Loss_d 1.828 (1.828)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.25 (  0.25)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0405 (0.0440)	validation_time 0.0003 (0.0009)	train_time 0.0402 (0.0430)
record: (train_acc, test_acc) (0.8989000203609466, 0.5110000371932983)
last accs (train_acc, test_acc) (0.8989000203609466, 0.5110000371932983)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.45it/s] 19%|#9        | 5/26 [00:00<00:00, 22.64it/s] 35%|###4      | 9/26 [00:00<00:00, 28.57it/s] 50%|#####     | 13/26 [00:00<00:00, 31.47it/s] 65%|######5   | 17/26 [00:00<00:00, 34.16it/s] 85%|########4 | 22/26 [00:00<00:00, 36.86it/s]100%|##########| 26/26 [00:00<00:00, 30.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.197 (0.244)	train_nll   0.20 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  23.29 ( 23.19)	train_acc   0.92 (  0.89)	train_minacc   0.70 (  0.60)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.4543 (7.1156)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.97it/s] 23%|##3       | 6/26 [00:00<00:00, 29.41it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.41it/s] 42%|####2     | 11/26 [00:00<00:00, 36.41it/s] 62%|######1   | 16/26 [00:00<00:00, 36.75it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.75it/s] 81%|########  | 21/26 [00:00<00:00, 39.23it/s]100%|##########| 26/26 [00:00<00:00, 41.77it/s]100%|##########| 26/26 [00:00<00:00, 34.02it/s]
Test: [   0/  26]	Loss 0.248 (0.248)	test_acc   0.89 (  0.89)	test_minacc   0.76 (  0.76)	test_majacc   0.91 (  0.91)	Loss_d 0.248 (0.248)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.206 (0.247)	test_acc   0.93 (  0.90)	test_minacc   0.75 (  0.73)	test_majacc   0.96 (  0.93)	Loss_d 0.206 (0.247)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.75 (  0.73)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.77 (  0.76)
Test: [  20/  26]	Loss 0.195 (0.237)	test_acc   0.92 (  0.90)	test_minacc   0.89 (  0.76)	test_majacc   0.93 (  0.93)	Loss_d 0.195 (0.237)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.89 (  0.76)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.71 (  0.75)
Test: [  26/  26]	Loss 0.157 (0.230)	test_acc   0.94 (  0.90)	test_minacc   0.84 (  0.77)	test_majacc   0.96 (  0.93)	Loss_d 0.157 (0.230)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.84 (  0.77)	test_majacc_d   0.96 (  0.93)	test_corr_d   0.73 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.58it/s]
Test: [  0/  1]	Loss 1.936 (1.936)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.84 (  0.84)	Loss_d 1.936 (1.936)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.936 (1.936)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.84 (  0.84)	Loss_d 1.936 (1.936)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.22 (  0.22)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0390 (0.0437)	validation_time 0.0004 (0.0009)	train_time 0.0386 (0.0426)
record: (train_acc, test_acc) (0.9041000242829322, 0.5300000309944153)
last accs (train_acc, test_acc) (0.9041000242829322, 0.5300000309944153)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.55it/s] 23%|##3       | 6/26 [00:00<00:00, 29.74it/s] 42%|####2     | 11/26 [00:00<00:00, 35.21it/s] 62%|######1   | 16/26 [00:00<00:00, 38.02it/s] 81%|########  | 21/26 [00:00<00:00, 39.35it/s]100%|##########| 26/26 [00:00<00:00, 40.48it/s]100%|##########| 26/26 [00:00<00:00, 34.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.238 (0.234)	train_nll   0.24 (  0.23)	train_penalty   0.01 (  0.01)	weight_norm  23.55 ( 23.42)	train_acc   0.91 (  0.90)	train_minacc   0.66 (  0.61)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.4505 (7.3129)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.60it/s] 23%|##3       | 6/26 [00:00<00:00, 30.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.18it/s] 42%|####2     | 11/26 [00:00<00:00, 38.11it/s] 65%|######5   | 17/26 [00:00<00:00, 39.61it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.61it/s] 85%|########4 | 22/26 [00:00<00:00, 41.86it/s]100%|##########| 26/26 [00:00<00:00, 36.08it/s]
Test: [   0/  26]	Loss 0.215 (0.215)	test_acc   0.92 (  0.92)	test_minacc   0.76 (  0.76)	test_majacc   0.94 (  0.94)	Loss_d 0.215 (0.215)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.201 (0.236)	test_acc   0.92 (  0.90)	test_minacc   0.73 (  0.63)	test_majacc   0.95 (  0.94)	Loss_d 0.201 (0.236)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.73 (  0.63)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.80 (  0.81)
Test: [  20/  26]	Loss 0.169 (0.217)	test_acc   0.93 (  0.91)	test_minacc   0.78 (  0.68)	test_majacc   0.95 (  0.95)	Loss_d 0.169 (0.217)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.78 (  0.68)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.77 (  0.80)
Test: [  26/  26]	Loss 0.182 (0.211)	test_acc   0.94 (  0.91)	test_minacc   0.73 (  0.69)	test_majacc   0.98 (  0.95)	Loss_d 0.182 (0.211)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.73 (  0.69)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.79 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.88it/s]
Test: [  0/  1]	Loss 2.181 (2.181)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 2.181 (2.181)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 2.181 (2.181)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 2.181 (2.181)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.44 (  0.44)
Overall Timing[ 13/  1]	epoch_time 0.0370 (0.0432)	validation_time 0.0004 (0.0009)	train_time 0.0366 (0.0422)
record: (train_acc, test_acc) (0.9041000242829322, 0.5300000309944153)
last accs (train_acc, test_acc) (0.912400020301342, 0.42500001192092896)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.76it/s] 19%|#9        | 5/26 [00:00<00:01, 16.93it/s] 35%|###4      | 9/26 [00:00<00:00, 23.22it/s] 50%|#####     | 13/26 [00:00<00:00, 26.64it/s] 65%|######5   | 17/26 [00:00<00:00, 29.03it/s] 81%|########  | 21/26 [00:00<00:00, 30.86it/s] 96%|#########6| 25/26 [00:00<00:00, 32.06it/s]100%|##########| 26/26 [00:01<00:00, 25.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.162 (0.202)	train_nll   0.16 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm  23.81 ( 23.68)	train_acc   0.94 (  0.92)	train_minacc   0.82 (  0.70)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 8.4304 (7.9486)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.30it/s] 23%|##3       | 6/26 [00:00<00:00, 30.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.66it/s] 42%|####2     | 11/26 [00:00<00:00, 37.66it/s] 62%|######1   | 16/26 [00:00<00:00, 38.19it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.57it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.57it/s] 96%|#########6| 25/26 [00:00<00:00, 40.40it/s]100%|##########| 26/26 [00:00<00:00, 34.73it/s]
Test: [   0/  26]	Loss 0.198 (0.198)	test_acc   0.92 (  0.92)	test_minacc   0.80 (  0.80)	test_majacc   0.93 (  0.93)	Loss_d 0.198 (0.198)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.157 (0.219)	test_acc   0.95 (  0.91)	test_minacc   0.81 (  0.73)	test_majacc   0.97 (  0.94)	Loss_d 0.157 (0.219)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.81 (  0.73)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.77 (  0.76)
Test: [  20/  26]	Loss 0.134 (0.200)	test_acc   0.94 (  0.92)	test_minacc   0.90 (  0.78)	test_majacc   0.95 (  0.94)	Loss_d 0.134 (0.200)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.90 (  0.78)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.71 (  0.75)
Test: [  26/  26]	Loss 0.112 (0.189)	test_acc   0.96 (  0.92)	test_minacc   0.84 (  0.80)	test_majacc   0.99 (  0.94)	Loss_d 0.112 (0.189)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.84 (  0.80)	test_majacc_d   0.99 (  0.94)	test_corr_d   0.74 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.03it/s]
Test: [  0/  1]	Loss 2.414 (2.414)	test_acc   0.49 (  0.49)	test_minacc   0.44 (  0.44)	test_majacc   0.88 (  0.88)	Loss_d 2.414 (2.414)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 2.414 (2.414)	test_acc   0.49 (  0.49)	test_minacc   0.44 (  0.44)	test_majacc   0.88 (  0.88)	Loss_d 2.414 (2.414)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.31 (  0.31)
Overall Timing[ 14/  1]	epoch_time 0.0397 (0.0430)	validation_time 0.0004 (0.0008)	train_time 0.0393 (0.0420)
record: (train_acc, test_acc) (0.9041000242829322, 0.5300000309944153)
last accs (train_acc, test_acc) (0.9231000229120254, 0.48500001430511475)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.48it/s] 19%|#9        | 5/26 [00:00<00:01, 19.04it/s] 35%|###4      | 9/26 [00:00<00:00, 25.62it/s] 50%|#####     | 13/26 [00:00<00:00, 29.24it/s] 65%|######5   | 17/26 [00:00<00:00, 30.72it/s] 81%|########  | 21/26 [00:00<00:00, 32.20it/s] 96%|#########6| 25/26 [00:00<00:00, 34.09it/s]100%|##########| 26/26 [00:00<00:00, 27.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.003 (0.082)	train_nll   0.26 (  0.24)	train_penalty   0.00 (  0.00)	weight_norm  24.07 ( 23.96)	train_acc   0.89 (  0.89)	train_minacc   0.91 (  0.71)	train_majacc   0.88 (  0.93)	train_corr   0.00 (  0.00)	l1 6.6258 (7.6345)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.77it/s] 15%|#5        | 4/26 [00:00<00:01, 18.47it/s] 35%|###4      | 9/26 [00:00<00:00, 30.78it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.78it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.71it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.71it/s] 92%|#########2| 24/26 [00:00<00:00, 38.69it/s]100%|##########| 26/26 [00:00<00:00, 32.86it/s]
Test: [   0/  26]	Loss 0.304 (0.304)	test_acc   0.85 (  0.85)	test_minacc   0.88 (  0.88)	test_majacc   0.84 (  0.84)	Loss_d 0.304 (0.304)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.275 (0.282)	test_acc   0.87 (  0.87)	test_minacc   0.88 (  0.85)	test_majacc   0.87 (  0.87)	Loss_d 0.275 (0.282)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.88 (  0.85)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.66 (  0.66)
Test: [  20/  26]	Loss 0.261 (0.280)	test_acc   0.88 (  0.87)	test_minacc   0.92 (  0.87)	test_majacc   0.87 (  0.87)	Loss_d 0.261 (0.280)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.92 (  0.87)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.62 (  0.65)
Test: [  26/  26]	Loss 0.265 (0.283)	test_acc   0.89 (  0.87)	test_minacc   0.91 (  0.87)	test_majacc   0.89 (  0.87)	Loss_d 0.265 (0.283)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.91 (  0.87)	test_majacc_d   0.89 (  0.87)	test_corr_d   0.63 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.61it/s]
Test: [  0/  1]	Loss 1.593 (1.593)	test_acc   0.54 (  0.54)	test_minacc   0.50 (  0.50)	test_majacc   0.89 (  0.89)	Loss_d 1.593 (1.593)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.593 (1.593)	test_acc   0.54 (  0.54)	test_minacc   0.50 (  0.50)	test_majacc   0.89 (  0.89)	Loss_d 1.593 (1.593)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.24 (  0.24)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0428 (0.0429)	validation_time 0.0005 (0.0008)	train_time 0.0423 (0.0420)
record: (train_acc, test_acc) (0.8677000198364258, 0.5380000472068787)
last accs (train_acc, test_acc) (0.8677000198364258, 0.5380000472068787)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.10it/s] 19%|#9        | 5/26 [00:00<00:01, 18.62it/s] 35%|###4      | 9/26 [00:00<00:00, 23.92it/s] 50%|#####     | 13/26 [00:00<00:00, 27.69it/s] 65%|######5   | 17/26 [00:00<00:00, 30.25it/s] 81%|########  | 21/26 [00:00<00:00, 31.54it/s] 96%|#########6| 25/26 [00:00<00:00, 32.55it/s]100%|##########| 26/26 [00:00<00:00, 26.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.003 (0.002)	train_nll   0.37 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  24.12 ( 24.11)	train_acc   0.84 (  0.83)	train_minacc   0.77 (  0.83)	train_majacc   0.85 (  0.83)	train_corr   0.00 (  0.00)	l1 6.1400 (6.2334)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.65it/s] 27%|##6       | 7/26 [00:00<00:00, 29.31it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.31it/s] 46%|####6     | 12/26 [00:00<00:00, 34.06it/s] 65%|######5   | 17/26 [00:00<00:00, 38.64it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.64it/s] 85%|########4 | 22/26 [00:00<00:00, 41.79it/s]100%|##########| 26/26 [00:00<00:00, 33.99it/s]
Test: [   0/  26]	Loss 0.382 (0.382)	test_acc   0.81 (  0.81)	test_minacc   0.82 (  0.82)	test_majacc   0.81 (  0.81)	Loss_d 0.382 (0.382)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.336 (0.371)	test_acc   0.81 (  0.81)	test_minacc   0.81 (  0.78)	test_majacc   0.81 (  0.81)	Loss_d 0.336 (0.371)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.81 (  0.78)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.62 (  0.62)
Test: [  20/  26]	Loss 0.343 (0.365)	test_acc   0.83 (  0.81)	test_minacc   0.92 (  0.79)	test_majacc   0.81 (  0.81)	Loss_d 0.343 (0.365)	test_acc_d   0.83 (  0.81)	test_minacc_d   0.92 (  0.79)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.57 (  0.61)
Test: [  26/  26]	Loss 0.374 (0.366)	test_acc   0.83 (  0.81)	test_minacc   0.77 (  0.79)	test_majacc   0.84 (  0.81)	Loss_d 0.374 (0.366)	test_acc_d   0.83 (  0.81)	test_minacc_d   0.77 (  0.79)	test_majacc_d   0.84 (  0.81)	test_corr_d   0.60 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.03it/s]
Test: [  0/  1]	Loss 1.518 (1.518)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.81 (  0.81)	Loss_d 1.518 (1.518)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.518 (1.518)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.81 (  0.81)	Loss_d 1.518 (1.518)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.23 (  0.23)
Overall Timing[ 16/  1]	epoch_time 0.0413 (0.0428)	validation_time 0.0003 (0.0008)	train_time 0.0410 (0.0420)
record: (train_acc, test_acc) (0.8677000198364258, 0.5380000472068787)
last accs (train_acc, test_acc) (0.8072000303864479, 0.5110000371932983)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.26it/s] 23%|##3       | 6/26 [00:00<00:00, 26.58it/s] 38%|###8      | 10/26 [00:00<00:00, 30.05it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.88it/s] 69%|######9   | 18/26 [00:00<00:00, 33.04it/s] 85%|########4 | 22/26 [00:00<00:00, 33.98it/s]100%|##########| 26/26 [00:00<00:00, 35.28it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.004 (0.002)	train_nll   0.29 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  24.13 ( 24.13)	train_acc   0.86 (  0.82)	train_minacc   0.84 (  0.83)	train_majacc   0.87 (  0.81)	train_corr   0.00 (  0.00)	l1 5.8144 (5.9960)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.51it/s] 23%|##3       | 6/26 [00:00<00:00, 25.07it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.07it/s] 42%|####2     | 11/26 [00:00<00:00, 33.70it/s] 62%|######1   | 16/26 [00:00<00:00, 38.42it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.42it/s] 81%|########  | 21/26 [00:00<00:00, 38.20it/s]100%|##########| 26/26 [00:00<00:00, 33.17it/s]
Test: [   0/  26]	Loss 0.309 (0.309)	test_acc   0.85 (  0.85)	test_minacc   0.80 (  0.80)	test_majacc   0.86 (  0.86)	Loss_d 0.309 (0.309)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.297 (0.309)	test_acc   0.86 (  0.85)	test_minacc   0.75 (  0.74)	test_majacc   0.88 (  0.87)	Loss_d 0.297 (0.309)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.75 (  0.74)	test_majacc_d   0.88 (  0.87)	test_corr_d   0.72 (  0.72)
Test: [  20/  26]	Loss 0.292 (0.304)	test_acc   0.86 (  0.85)	test_minacc   0.90 (  0.77)	test_majacc   0.86 (  0.87)	Loss_d 0.292 (0.304)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.90 (  0.77)	test_majacc_d   0.86 (  0.87)	test_corr_d   0.68 (  0.72)
Test: [  26/  26]	Loss 0.297 (0.306)	test_acc   0.86 (  0.85)	test_minacc   0.84 (  0.76)	test_majacc   0.87 (  0.86)	Loss_d 0.297 (0.306)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.84 (  0.76)	test_majacc_d   0.87 (  0.86)	test_corr_d   0.69 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.36it/s]
Test: [  0/  1]	Loss 1.576 (1.576)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.90 (  0.90)	Loss_d 1.576 (1.576)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 1.576 (1.576)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.90 (  0.90)	Loss_d 1.576 (1.576)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.37 (  0.37)
Overall Timing[ 17/  1]	epoch_time 0.0404 (0.0427)	validation_time 0.0004 (0.0008)	train_time 0.0400 (0.0418)
record: (train_acc, test_acc) (0.8677000198364258, 0.5380000472068787)
last accs (train_acc, test_acc) (0.8484000326395035, 0.4780000150203705)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 19%|#9        | 5/26 [00:00<00:00, 21.74it/s] 35%|###4      | 9/26 [00:00<00:00, 26.55it/s] 50%|#####     | 13/26 [00:00<00:00, 29.48it/s] 65%|######5   | 17/26 [00:00<00:00, 31.77it/s] 81%|########  | 21/26 [00:00<00:00, 34.05it/s] 96%|#########6| 25/26 [00:00<00:00, 35.07it/s]100%|##########| 26/26 [00:00<00:00, 28.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.002 (0.001)	train_nll   0.31 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  24.15 ( 24.14)	train_acc   0.85 (  0.82)	train_minacc   0.93 (  0.81)	train_majacc   0.83 (  0.82)	train_corr   0.00 (  0.00)	l1 5.7885 (6.0701)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.21it/s] 27%|##6       | 7/26 [00:00<00:00, 24.84it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.84it/s] 50%|#####     | 13/26 [00:00<00:00, 34.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.43it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.43it/s] 96%|#########6| 25/26 [00:00<00:00, 43.83it/s]100%|##########| 26/26 [00:00<00:00, 34.04it/s]
Test: [   0/  26]	Loss 0.329 (0.329)	test_acc   0.81 (  0.81)	test_minacc   0.84 (  0.84)	test_majacc   0.81 (  0.81)	Loss_d 0.329 (0.329)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.305 (0.309)	test_acc   0.85 (  0.84)	test_minacc   0.85 (  0.82)	test_majacc   0.85 (  0.84)	Loss_d 0.305 (0.309)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.68 (  0.68)
Test: [  20/  26]	Loss 0.302 (0.305)	test_acc   0.87 (  0.84)	test_minacc   0.94 (  0.85)	test_majacc   0.85 (  0.84)	Loss_d 0.302 (0.305)	test_acc_d   0.87 (  0.84)	test_minacc_d   0.94 (  0.85)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.64 (  0.67)
Test: [  26/  26]	Loss 0.309 (0.309)	test_acc   0.85 (  0.84)	test_minacc   0.93 (  0.85)	test_majacc   0.83 (  0.84)	Loss_d 0.309 (0.309)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.93 (  0.85)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.64 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.56it/s]
Test: [  0/  1]	Loss 1.448 (1.448)	test_acc   0.56 (  0.56)	test_minacc   0.52 (  0.52)	test_majacc   0.90 (  0.90)	Loss_d 1.448 (1.448)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.448 (1.448)	test_acc   0.56 (  0.56)	test_minacc   0.52 (  0.52)	test_majacc   0.90 (  0.90)	Loss_d 1.448 (1.448)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.25 (  0.25)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0395 (0.0425)	validation_time 0.0003 (0.0007)	train_time 0.0391 (0.0417)
record: (train_acc, test_acc) (0.8401000256538391, 0.5600000023841858)
last accs (train_acc, test_acc) (0.8401000256538391, 0.5600000023841858)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.67it/s] 12%|#1        | 3/26 [00:00<00:02,  9.78it/s] 27%|##6       | 7/26 [00:00<00:00, 19.21it/s] 42%|####2     | 11/26 [00:00<00:00, 24.83it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.64it/s] 88%|########8 | 23/26 [00:00<00:00, 32.19it/s]100%|##########| 26/26 [00:01<00:00, 24.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.001)	train_nll   0.33 (  0.33)	train_penalty   0.00 (  0.00)	weight_norm  24.15 ( 24.15)	train_acc   0.83 (  0.82)	train_minacc   0.84 (  0.83)	train_majacc   0.83 (  0.82)	train_corr   0.00 (  0.00)	l1 6.1761 (6.1893)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.09it/s] 19%|#9        | 5/26 [00:00<00:00, 26.10it/s] 38%|###8      | 10/26 [00:00<00:00, 34.27it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.64it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.64it/s] 96%|#########6| 25/26 [00:00<00:00, 42.81it/s]100%|##########| 26/26 [00:00<00:00, 35.61it/s]
Test: [   0/  26]	Loss 0.327 (0.327)	test_acc   0.81 (  0.81)	test_minacc   0.80 (  0.80)	test_majacc   0.81 (  0.81)	Loss_d 0.327 (0.327)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.305 (0.317)	test_acc   0.84 (  0.83)	test_minacc   0.78 (  0.78)	test_majacc   0.85 (  0.84)	Loss_d 0.305 (0.317)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.70 (  0.69)
Test: [  20/  26]	Loss 0.288 (0.301)	test_acc   0.86 (  0.84)	test_minacc   0.92 (  0.82)	test_majacc   0.85 (  0.85)	Loss_d 0.288 (0.301)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.92 (  0.82)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.67 (  0.69)
Test: [  26/  26]	Loss 0.329 (0.305)	test_acc   0.84 (  0.84)	test_minacc   0.84 (  0.82)	test_majacc   0.84 (  0.84)	Loss_d 0.329 (0.305)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.65 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.70it/s]
Test: [  0/  1]	Loss 1.584 (1.584)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.90 (  0.90)	Loss_d 1.584 (1.584)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 1.584 (1.584)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.90 (  0.90)	Loss_d 1.584 (1.584)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.26 (  0.26)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0416 (0.0425)	validation_time 0.0004 (0.0007)	train_time 0.0411 (0.0417)
record: (train_acc, test_acc) (0.8390000264644623, 0.5649999976158142)
last accs (train_acc, test_acc) (0.8390000264644623, 0.5649999976158142)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s] 19%|#9        | 5/26 [00:00<00:01, 20.19it/s] 35%|###4      | 9/26 [00:00<00:00, 25.57it/s] 50%|#####     | 13/26 [00:00<00:00, 28.70it/s] 65%|######5   | 17/26 [00:00<00:00, 30.83it/s] 81%|########  | 21/26 [00:00<00:00, 32.41it/s] 96%|#########6| 25/26 [00:00<00:00, 33.66it/s]100%|##########| 26/26 [00:00<00:00, 27.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.001)	train_nll   0.33 (  0.32)	train_penalty   0.00 (  0.00)	weight_norm  24.16 ( 24.16)	train_acc   0.83 (  0.83)	train_minacc   0.86 (  0.85)	train_majacc   0.83 (  0.82)	train_corr   0.00 (  0.00)	l1 6.2968 (6.2660)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.35it/s] 23%|##3       | 6/26 [00:00<00:00, 26.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.95it/s] 42%|####2     | 11/26 [00:00<00:00, 33.33it/s] 62%|######1   | 16/26 [00:00<00:00, 38.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.62it/s] 81%|########  | 21/26 [00:00<00:00, 39.35it/s]100%|##########| 26/26 [00:00<00:00, 42.37it/s]100%|##########| 26/26 [00:00<00:00, 33.68it/s]
Test: [   0/  26]	Loss 0.323 (0.323)	test_acc   0.82 (  0.82)	test_minacc   0.86 (  0.86)	test_majacc   0.82 (  0.82)	Loss_d 0.323 (0.323)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.298 (0.317)	test_acc   0.84 (  0.83)	test_minacc   0.73 (  0.77)	test_majacc   0.85 (  0.84)	Loss_d 0.298 (0.317)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.73 (  0.77)	test_majacc_d   0.85 (  0.84)	test_corr_d   0.71 (  0.71)
Test: [  20/  26]	Loss 0.282 (0.301)	test_acc   0.88 (  0.85)	test_minacc   0.92 (  0.81)	test_majacc   0.87 (  0.85)	Loss_d 0.282 (0.301)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.92 (  0.81)	test_majacc_d   0.87 (  0.85)	test_corr_d   0.69 (  0.71)
Test: [  26/  26]	Loss 0.317 (0.303)	test_acc   0.84 (  0.84)	test_minacc   0.82 (  0.80)	test_majacc   0.84 (  0.85)	Loss_d 0.317 (0.303)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.82 (  0.80)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.23it/s]
Test: [  0/  1]	Loss 1.657 (1.657)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.90 (  0.90)	Loss_d 1.657 (1.657)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.657 (1.657)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.90 (  0.90)	Loss_d 1.657 (1.657)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.30 (  0.30)
Overall Timing[ 20/  1]	epoch_time 0.0404 (0.0424)	validation_time 0.0004 (0.0007)	train_time 0.0400 (0.0416)
record: (train_acc, test_acc) (0.8390000264644623, 0.5649999976158142)
last accs (train_acc, test_acc) (0.8410000286698341, 0.5290000438690186)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.04it/s] 23%|##3       | 6/26 [00:00<00:00, 23.39it/s] 38%|###8      | 10/26 [00:00<00:00, 28.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.39it/s] 69%|######9   | 18/26 [00:00<00:00, 31.68it/s] 85%|########4 | 22/26 [00:00<00:00, 32.90it/s]100%|##########| 26/26 [00:00<00:00, 33.58it/s]100%|##########| 26/26 [00:00<00:00, 28.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.002 (0.001)	train_nll   0.33 (  0.31)	train_penalty   0.00 (  0.00)	weight_norm  24.18 ( 24.17)	train_acc   0.84 (  0.84)	train_minacc   0.93 (  0.81)	train_majacc   0.82 (  0.84)	train_corr   0.00 (  0.00)	l1 6.6796 (6.3401)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.78it/s] 23%|##3       | 6/26 [00:00<00:00, 29.25it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.25it/s] 42%|####2     | 11/26 [00:00<00:00, 35.60it/s] 62%|######1   | 16/26 [00:00<00:00, 40.14it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.14it/s] 81%|########  | 21/26 [00:00<00:00, 40.31it/s]100%|##########| 26/26 [00:00<00:00, 42.88it/s]100%|##########| 26/26 [00:00<00:00, 35.17it/s]
Test: [   0/  26]	Loss 0.336 (0.336)	test_acc   0.80 (  0.80)	test_minacc   0.88 (  0.88)	test_majacc   0.79 (  0.79)	Loss_d 0.336 (0.336)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.315 (0.327)	test_acc   0.82 (  0.81)	test_minacc   0.83 (  0.84)	test_majacc   0.82 (  0.81)	Loss_d 0.315 (0.327)	test_acc_d   0.82 (  0.81)	test_minacc_d   0.83 (  0.84)	test_majacc_d   0.82 (  0.81)	test_corr_d   0.66 (  0.65)
Test: [  20/  26]	Loss 0.282 (0.313)	test_acc   0.87 (  0.83)	test_minacc   0.94 (  0.86)	test_majacc   0.85 (  0.82)	Loss_d 0.282 (0.313)	test_acc_d   0.87 (  0.83)	test_minacc_d   0.94 (  0.86)	test_majacc_d   0.85 (  0.82)	test_corr_d   0.64 (  0.65)
Test: [  26/  26]	Loss 0.320 (0.313)	test_acc   0.85 (  0.83)	test_minacc   0.93 (  0.86)	test_majacc   0.83 (  0.82)	Loss_d 0.320 (0.313)	test_acc_d   0.85 (  0.83)	test_minacc_d   0.93 (  0.86)	test_majacc_d   0.83 (  0.82)	test_corr_d   0.61 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.22it/s]
Test: [  0/  1]	Loss 1.625 (1.625)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.82 (  0.82)	Loss_d 1.625 (1.625)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.625 (1.625)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.82 (  0.82)	Loss_d 1.625 (1.625)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.13 (  0.13)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/93/checkpoints/model_best.pth
Overall Timing[ 21/  1]	epoch_time 0.0400 (0.0423)	validation_time 0.0003 (0.0007)	train_time 0.0397 (0.0415)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.29it/s] 19%|#9        | 5/26 [00:00<00:00, 23.52it/s] 35%|###4      | 9/26 [00:00<00:00, 28.69it/s] 50%|#####     | 13/26 [00:00<00:00, 31.23it/s] 65%|######5   | 17/26 [00:00<00:00, 31.95it/s] 81%|########  | 21/26 [00:00<00:00, 32.88it/s] 96%|#########6| 25/26 [00:00<00:00, 33.59it/s]100%|##########| 26/26 [00:00<00:00, 29.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.001 (0.001)	train_nll   0.31 (  0.29)	train_penalty   0.00 (  0.00)	weight_norm  24.19 ( 24.18)	train_acc   0.85 (  0.85)	train_minacc   0.89 (  0.83)	train_majacc   0.84 (  0.85)	train_corr   0.00 (  0.00)	l1 7.1045 (6.5166)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 24.77it/s] 35%|###4      | 9/26 [00:00<00:00, 35.09it/s]                                               35%|###4      | 9/26 [00:00<00:00, 35.09it/s] 54%|#####3    | 14/26 [00:00<00:00, 39.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.30it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.30it/s] 92%|#########2| 24/26 [00:00<00:00, 40.11it/s]100%|##########| 26/26 [00:00<00:00, 36.45it/s]
Test: [   0/  26]	Loss 0.334 (0.334)	test_acc   0.82 (  0.82)	test_minacc   0.84 (  0.84)	test_majacc   0.81 (  0.81)	Loss_d 0.334 (0.334)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.332 (0.349)	test_acc   0.81 (  0.81)	test_minacc   0.75 (  0.80)	test_majacc   0.82 (  0.81)	Loss_d 0.332 (0.349)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.75 (  0.80)	test_majacc_d   0.82 (  0.81)	test_corr_d   0.66 (  0.65)
Test: [  20/  26]	Loss 0.307 (0.338)	test_acc   0.82 (  0.81)	test_minacc   0.90 (  0.82)	test_majacc   0.81 (  0.81)	Loss_d 0.307 (0.338)	test_acc_d   0.82 (  0.81)	test_minacc_d   0.90 (  0.82)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.62 (  0.65)
Test: [  26/  26]	Loss 0.306 (0.333)	test_acc   0.85 (  0.81)	test_minacc   0.89 (  0.83)	test_majacc   0.84 (  0.81)	Loss_d 0.306 (0.333)	test_acc_d   0.85 (  0.81)	test_minacc_d   0.89 (  0.83)	test_majacc_d   0.84 (  0.81)	test_corr_d   0.63 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.51it/s]
Test: [  0/  1]	Loss 1.892 (1.892)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.83 (  0.83)	Loss_d 1.892 (1.892)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.892 (1.892)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.83 (  0.83)	Loss_d 1.892 (1.892)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.15 (  0.15)
Overall Timing[ 22/  1]	epoch_time 0.0400 (0.0422)	validation_time 0.0005 (0.0007)	train_time 0.0395 (0.0414)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.814500027179718, 0.612000048160553)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 19%|#9        | 5/26 [00:00<00:00, 22.38it/s] 35%|###4      | 9/26 [00:00<00:00, 27.88it/s] 50%|#####     | 13/26 [00:00<00:00, 30.39it/s] 65%|######5   | 17/26 [00:00<00:00, 32.25it/s] 81%|########  | 21/26 [00:00<00:00, 32.80it/s] 96%|#########6| 25/26 [00:00<00:00, 30.52it/s]100%|##########| 26/26 [00:00<00:00, 27.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 7.063968658447266
set z to 6.993328971862793
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 359 tensor(-0.0110, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 291 tensor(-0.0069, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.003 (0.012)	train_nll   0.26 (  0.32)	train_penalty   0.00 (  0.01)	weight_norm  24.23 ( 24.19)	train_acc   0.84 (  0.83)	train_minacc   0.91 (  0.81)	train_majacc   0.83 (  0.83)	train_corr   0.00 (  0.00)	l1 8.4341 (6.8152)	zero_count 0.0000 (5.9280)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.68it/s] 27%|##6       | 7/26 [00:00<00:00, 30.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.36it/s] 46%|####6     | 12/26 [00:00<00:00, 37.50it/s] 65%|######5   | 17/26 [00:00<00:00, 36.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.34it/s] 85%|########4 | 22/26 [00:00<00:00, 40.02it/s]100%|##########| 26/26 [00:00<00:00, 33.95it/s]
Test: [   0/  26]	Loss 0.512 (0.512)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.512 (0.512)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.505 (0.514)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.505 (0.514)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.72 (  0.71)
Test: [  20/  26]	Loss 0.524 (0.519)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.524 (0.519)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.70 (  0.71)
Test: [  26/  26]	Loss 0.521 (0.521)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.521 (0.521)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.14it/s]
Test: [  0/  1]	Loss 2.157 (2.157)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.157 (2.157)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 2.157 (2.157)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.157 (2.157)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 23/  1]	epoch_time 0.0393 (0.0421)	validation_time 0.0004 (0.0007)	train_time 0.0388 (0.0413)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  9.34it/s] 23%|##3       | 6/26 [00:00<00:00, 20.00it/s] 35%|###4      | 9/26 [00:00<00:00, 22.96it/s] 46%|####6     | 12/26 [00:00<00:00, 24.69it/s] 62%|######1   | 16/26 [00:00<00:00, 27.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.39it/s] 88%|########8 | 23/26 [00:00<00:00, 29.34it/s]100%|##########| 26/26 [00:01<00:00, 25.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 269 tensor(-0.0028, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 242 tensor(-0.0040, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 229 tensor(-0.0025, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 225 tensor(-0.0020, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 224 tensor(-0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 222 tensor(-0.0009, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.003 (0.004)	train_nll   0.57 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  24.81 ( 24.59)	train_acc   0.74 (  0.69)	train_minacc   0.86 (  0.62)	train_majacc   0.72 (  0.71)	train_corr   0.00 (  0.00)	l1 7.4008 (7.8027)	zero_count 0.0000 (61.8540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.59it/s] 27%|##6       | 7/26 [00:00<00:00, 30.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.12it/s] 46%|####6     | 12/26 [00:00<00:00, 36.29it/s] 65%|######5   | 17/26 [00:00<00:00, 40.21it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.21it/s] 85%|########4 | 22/26 [00:00<00:00, 39.26it/s]100%|##########| 26/26 [00:00<00:00, 35.23it/s]
Test: [   0/  26]	Loss 0.578 (0.578)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.578 (0.578)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.565 (0.575)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.565 (0.575)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.51 (  0.51)
Test: [  20/  26]	Loss 0.581 (0.576)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.581 (0.576)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.52 (  0.51)
Test: [  26/  26]	Loss 0.598 (0.578)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.598 (0.578)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.47 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.50it/s]
Test: [  0/  1]	Loss 1.863 (1.863)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.863 (1.863)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 1.863 (1.863)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.863 (1.863)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.30 (  0.30)
Overall Timing[ 24/  1]	epoch_time 0.0416 (0.0420)	validation_time 0.0004 (0.0007)	train_time 0.0411 (0.0413)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.56it/s] 19%|#9        | 5/26 [00:00<00:01, 17.23it/s] 35%|###4      | 9/26 [00:00<00:00, 22.66it/s] 46%|####6     | 12/26 [00:00<00:00, 24.68it/s] 62%|######1   | 16/26 [00:00<00:00, 26.76it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.29it/s] 92%|#########2| 24/26 [00:00<00:00, 30.97it/s]100%|##########| 26/26 [00:01<00:00, 24.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 223 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 221 tensor(-0.0008, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 220 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 220 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 232 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 233 tensor(-0.0002, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.91 ( 24.88)	train_acc   0.52 (  0.52)	train_minacc   0.93 (  0.74)	train_majacc   0.43 (  0.48)	train_corr   0.00 (  0.00)	l1 7.0358 (7.0927)	zero_count 0.0000 (67.3920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.33it/s] 27%|##6       | 7/26 [00:00<00:00, 24.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.20it/s] 46%|####6     | 12/26 [00:00<00:00, 32.94it/s] 65%|######5   | 17/26 [00:00<00:00, 37.88it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.88it/s] 88%|########8 | 23/26 [00:00<00:00, 41.24it/s]100%|##########| 26/26 [00:00<00:00, 33.36it/s]
Test: [   0/  26]	Loss 0.577 (0.577)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.577 (0.577)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.559 (0.568)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.559 (0.568)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.47)
Test: [  20/  26]	Loss 0.571 (0.569)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.571 (0.569)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.47 (  0.47)
Test: [  26/  26]	Loss 0.563 (0.569)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.563 (0.569)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.43 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.76it/s]
Test: [  0/  1]	Loss 1.821 (1.821)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.821 (1.821)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.821 (1.821)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.821 (1.821)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.29 (  0.29)
Overall Timing[ 25/  1]	epoch_time 0.0406 (0.0420)	validation_time 0.0004 (0.0007)	train_time 0.0401 (0.0413)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.12it/s] 19%|#9        | 5/26 [00:00<00:01, 17.90it/s] 35%|###4      | 9/26 [00:00<00:00, 24.64it/s] 50%|#####     | 13/26 [00:00<00:00, 28.97it/s] 65%|######5   | 17/26 [00:00<00:00, 30.34it/s] 81%|########  | 21/26 [00:00<00:00, 30.72it/s] 96%|#########6| 25/26 [00:00<00:00, 29.73it/s]100%|##########| 26/26 [00:01<00:00, 25.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 346 tensor(-3.5493e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 390 tensor(-4.0145e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 409 tensor(1.9411e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9933 (6.9945)	zero_count 102.0000 (24.5460)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.93it/s] 23%|##3       | 6/26 [00:00<00:00, 27.76it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.76it/s] 42%|####2     | 11/26 [00:00<00:00, 35.49it/s] 62%|######1   | 16/26 [00:00<00:00, 39.77it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.77it/s] 81%|########  | 21/26 [00:00<00:00, 37.91it/s]100%|##########| 26/26 [00:00<00:00, 40.83it/s]100%|##########| 26/26 [00:00<00:00, 33.48it/s]
Test: [   0/  26]	Loss 0.581 (0.581)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.581 (0.581)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.567 (0.573)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.567 (0.573)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.47)
Test: [  20/  26]	Loss 0.577 (0.574)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.577 (0.574)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.570 (0.575)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.570 (0.575)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.43 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.02it/s]
Test: [  0/  1]	Loss 1.795 (1.795)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.795 (1.795)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.795 (1.795)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.795 (1.795)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Overall Timing[ 26/  1]	epoch_time 0.0437 (0.0420)	validation_time 0.0004 (0.0006)	train_time 0.0433 (0.0413)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.62it/s] 15%|#5        | 4/26 [00:00<00:01, 17.18it/s] 31%|###       | 8/26 [00:00<00:00, 25.85it/s] 42%|####2     | 11/26 [00:00<00:00, 26.86it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.78it/s] 69%|######9   | 18/26 [00:00<00:00, 30.36it/s] 85%|########4 | 22/26 [00:00<00:00, 29.25it/s] 96%|#########6| 25/26 [00:00<00:00, 27.51it/s]100%|##########| 26/26 [00:01<00:00, 25.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 402 tensor(2.6644e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 404 tensor(7.5360e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 458 tensor(-1.4804e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 441 tensor(3.3120e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 438 tensor(7.5045e-06, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9952 (6.9953)	zero_count 0.0000 (13.2210)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.14it/s] 27%|##6       | 7/26 [00:00<00:00, 36.06it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.06it/s] 46%|####6     | 12/26 [00:00<00:00, 41.66it/s] 65%|######5   | 17/26 [00:00<00:00, 42.85it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.85it/s] 85%|########4 | 22/26 [00:00<00:00, 44.79it/s]100%|##########| 26/26 [00:00<00:00, 38.34it/s]
Test: [   0/  26]	Loss 0.581 (0.581)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.581 (0.581)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.569 (0.574)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.569 (0.574)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.49 (  0.48)
Test: [  20/  26]	Loss 0.579 (0.576)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.579 (0.576)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.50 (  0.49)
Test: [  26/  26]	Loss 0.572 (0.576)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.572 (0.576)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.09it/s]
Test: [  0/  1]	Loss 1.787 (1.787)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.787 (1.787)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.787 (1.787)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.787 (1.787)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 27/  1]	epoch_time 0.0392 (0.0419)	validation_time 0.0004 (0.0006)	train_time 0.0387 (0.0412)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.42it/s] 15%|#5        | 4/26 [00:00<00:01, 17.97it/s] 31%|###       | 8/26 [00:00<00:00, 22.91it/s] 46%|####6     | 12/26 [00:00<00:00, 26.91it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.16it/s] 69%|######9   | 18/26 [00:00<00:00, 26.18it/s] 85%|########4 | 22/26 [00:00<00:00, 28.62it/s]100%|##########| 26/26 [00:00<00:00, 30.62it/s]100%|##########| 26/26 [00:01<00:00, 25.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 442 tensor(1.1501e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 438 tensor(3.7072e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 425 tensor(2.8308e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 410 tensor(7.4565e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9879 (6.9938)	zero_count 0.0000 (15.6780)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.11it/s] 23%|##3       | 6/26 [00:00<00:00, 29.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.47it/s] 42%|####2     | 11/26 [00:00<00:00, 36.71it/s] 62%|######1   | 16/26 [00:00<00:00, 40.96it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.96it/s] 81%|########  | 21/26 [00:00<00:00, 38.22it/s]100%|##########| 26/26 [00:00<00:00, 41.42it/s]100%|##########| 26/26 [00:00<00:00, 34.38it/s]
Test: [   0/  26]	Loss 0.582 (0.582)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.582 (0.582)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.569 (0.575)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.569 (0.575)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  20/  26]	Loss 0.579 (0.576)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.579 (0.576)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.50 (  0.48)
Test: [  26/  26]	Loss 0.573 (0.576)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.573 (0.576)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.18it/s]
Test: [  0/  1]	Loss 1.791 (1.791)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.791 (1.791)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.791 (1.791)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.791 (1.791)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 28/  1]	epoch_time 0.0402 (0.0419)	validation_time 0.0004 (0.0006)	train_time 0.0397 (0.0412)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.63it/s] 19%|#9        | 5/26 [00:00<00:01, 18.96it/s] 35%|###4      | 9/26 [00:00<00:00, 24.08it/s] 50%|#####     | 13/26 [00:00<00:00, 27.34it/s] 65%|######5   | 17/26 [00:00<00:00, 27.74it/s] 81%|########  | 21/26 [00:00<00:00, 30.60it/s] 96%|#########6| 25/26 [00:00<00:00, 33.09it/s]100%|##########| 26/26 [00:00<00:00, 26.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 408 tensor(5.6451e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9869 (6.9889)	zero_count 0.0000 (4.0170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.78it/s] 15%|#5        | 4/26 [00:00<00:01, 19.47it/s] 35%|###4      | 9/26 [00:00<00:00, 31.63it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.63it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.68it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.68it/s] 92%|#########2| 24/26 [00:00<00:00, 39.92it/s]100%|##########| 26/26 [00:00<00:00, 33.64it/s]
Test: [   0/  26]	Loss 0.581 (0.581)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.581 (0.581)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.569 (0.574)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.569 (0.574)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  20/  26]	Loss 0.579 (0.576)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.579 (0.576)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.50 (  0.48)
Test: [  26/  26]	Loss 0.572 (0.576)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.572 (0.576)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.18it/s]
Test: [  0/  1]	Loss 1.796 (1.796)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.796 (1.796)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.796 (1.796)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.796 (1.796)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 29/  1]	epoch_time 0.0435 (0.0419)	validation_time 0.0004 (0.0006)	train_time 0.0431 (0.0412)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.71it/s] 23%|##3       | 6/26 [00:00<00:00, 25.90it/s] 38%|###8      | 10/26 [00:00<00:00, 29.70it/s] 50%|#####     | 13/26 [00:00<00:00, 29.31it/s] 62%|######1   | 16/26 [00:00<00:00, 27.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.54it/s] 92%|#########2| 24/26 [00:00<00:00, 31.13it/s]100%|##########| 26/26 [00:00<00:00, 27.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 416 tensor(2.1818e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9882 (6.9881)	zero_count 0.0000 (3.7050)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.55it/s] 15%|#5        | 4/26 [00:00<00:01, 14.55it/s] 38%|###8      | 10/26 [00:00<00:00, 30.65it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.65it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.07it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 36.07it/s] 81%|########  | 21/26 [00:00<00:00, 42.73it/s]100%|##########| 26/26 [00:00<00:00, 34.68it/s]
Test: [   0/  26]	Loss 0.582 (0.582)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.582 (0.582)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.570 (0.575)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.570 (0.575)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.47)
Test: [  20/  26]	Loss 0.579 (0.576)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.579 (0.576)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.50 (  0.48)
Test: [  26/  26]	Loss 0.573 (0.576)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.573 (0.576)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.47it/s]
Test: [  0/  1]	Loss 1.799 (1.799)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.799 (1.799)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.799 (1.799)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.799 (1.799)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 30/  1]	epoch_time 0.0439 (0.0420)	validation_time 0.0003 (0.0006)	train_time 0.0436 (0.0413)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.50it/s] 19%|#9        | 5/26 [00:00<00:00, 21.59it/s] 35%|###4      | 9/26 [00:00<00:00, 27.81it/s] 50%|#####     | 13/26 [00:00<00:00, 31.39it/s] 65%|######5   | 17/26 [00:00<00:00, 33.67it/s] 81%|########  | 21/26 [00:00<00:00, 32.48it/s] 96%|#########6| 25/26 [00:00<00:00, 33.41it/s]100%|##########| 26/26 [00:00<00:00, 28.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 405 tensor(4.1999e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9898 (6.9881)	zero_count 0.0000 (4.1340)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.33it/s] 27%|##6       | 7/26 [00:00<00:00, 34.81it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.81it/s] 46%|####6     | 12/26 [00:00<00:00, 40.59it/s] 65%|######5   | 17/26 [00:00<00:00, 42.20it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.20it/s] 85%|########4 | 22/26 [00:00<00:00, 40.61it/s]100%|##########| 26/26 [00:00<00:00, 37.37it/s]
Test: [   0/  26]	Loss 0.582 (0.582)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.582 (0.582)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.571 (0.575)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.571 (0.575)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.47)
Test: [  20/  26]	Loss 0.579 (0.577)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.579 (0.577)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.50 (  0.48)
Test: [  26/  26]	Loss 0.573 (0.577)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.573 (0.577)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.56it/s]
Test: [  0/  1]	Loss 1.801 (1.801)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.801 (1.801)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.801 (1.801)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.801 (1.801)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 31/  1]	epoch_time 0.0394 (0.0419)	validation_time 0.0004 (0.0006)	train_time 0.0390 (0.0412)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.80it/s] 19%|#9        | 5/26 [00:00<00:01, 20.45it/s] 35%|###4      | 9/26 [00:00<00:00, 26.36it/s] 50%|#####     | 13/26 [00:00<00:00, 29.50it/s] 65%|######5   | 17/26 [00:00<00:00, 29.87it/s] 81%|########  | 21/26 [00:00<00:00, 29.16it/s] 92%|#########2| 24/26 [00:00<00:00, 28.06it/s]100%|##########| 26/26 [00:01<00:00, 25.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 410 tensor(-1.0442e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 405 tensor(1.7429e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9921 (6.9866)	zero_count 0.0000 (8.0730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.23it/s] 31%|###       | 8/26 [00:00<00:00, 36.92it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.92it/s] 50%|#####     | 13/26 [00:00<00:00, 40.98it/s] 69%|######9   | 18/26 [00:00<00:00, 42.87it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.87it/s] 88%|########8 | 23/26 [00:00<00:00, 44.32it/s]100%|##########| 26/26 [00:00<00:00, 37.38it/s]
Test: [   0/  26]	Loss 0.583 (0.583)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.583 (0.583)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.571 (0.576)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.571 (0.576)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.580 (0.577)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.580 (0.577)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.50 (  0.48)
Test: [  26/  26]	Loss 0.573 (0.577)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.573 (0.577)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.79it/s]
Test: [  0/  1]	Loss 1.803 (1.803)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.803 (1.803)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.803 (1.803)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.803 (1.803)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 32/  1]	epoch_time 0.0432 (0.0420)	validation_time 0.0003 (0.0006)	train_time 0.0429 (0.0413)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.70it/s] 19%|#9        | 5/26 [00:00<00:00, 24.09it/s] 35%|###4      | 9/26 [00:00<00:00, 29.24it/s] 50%|#####     | 13/26 [00:00<00:00, 30.40it/s] 65%|######5   | 17/26 [00:00<00:00, 32.19it/s] 81%|########  | 21/26 [00:00<00:00, 32.40it/s] 96%|#########6| 25/26 [00:00<00:00, 31.72it/s]100%|##########| 26/26 [00:00<00:00, 28.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 397 tensor(5.3135e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9929 (6.9849)	zero_count 0.0000 (4.4460)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.63it/s] 31%|###       | 8/26 [00:00<00:00, 37.19it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.19it/s] 50%|#####     | 13/26 [00:00<00:00, 40.84it/s] 69%|######9   | 18/26 [00:00<00:00, 43.33it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.33it/s] 88%|########8 | 23/26 [00:00<00:00, 40.89it/s]100%|##########| 26/26 [00:00<00:00, 37.92it/s]
Test: [   0/  26]	Loss 0.583 (0.583)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.583 (0.583)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.572 (0.576)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.572 (0.576)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.581 (0.578)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.581 (0.578)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.573 (0.578)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.573 (0.578)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.93it/s]
Test: [  0/  1]	Loss 1.805 (1.805)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.805 (1.805)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.805 (1.805)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.805 (1.805)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 33/  1]	epoch_time 0.0419 (0.0420)	validation_time 0.0004 (0.0006)	train_time 0.0414 (0.0413)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.75it/s] 19%|#9        | 5/26 [00:00<00:00, 22.77it/s] 35%|###4      | 9/26 [00:00<00:00, 27.90it/s] 50%|#####     | 13/26 [00:00<00:00, 30.09it/s] 65%|######5   | 17/26 [00:00<00:00, 31.13it/s] 81%|########  | 21/26 [00:00<00:00, 32.80it/s] 96%|#########6| 25/26 [00:00<00:00, 33.15it/s]100%|##########| 26/26 [00:00<00:00, 28.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 396 tensor(1.5554e-06, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9969 (6.9826)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.93it/s] 19%|#9        | 5/26 [00:00<00:00, 24.66it/s] 38%|###8      | 10/26 [00:00<00:00, 34.31it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.68it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.28it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.28it/s] 96%|#########6| 25/26 [00:00<00:00, 40.95it/s]100%|##########| 26/26 [00:00<00:00, 34.45it/s]
Test: [   0/  26]	Loss 0.584 (0.584)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.584 (0.584)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.573 (0.577)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.573 (0.577)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.581 (0.578)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.581 (0.578)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.573 (0.578)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.573 (0.578)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.53it/s]
Test: [  0/  1]	Loss 1.807 (1.807)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.807 (1.807)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.807 (1.807)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.807 (1.807)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 34/  1]	epoch_time 0.0388 (0.0419)	validation_time 0.0004 (0.0006)	train_time 0.0383 (0.0412)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.52it/s] 15%|#5        | 4/26 [00:00<00:01, 17.36it/s] 31%|###       | 8/26 [00:00<00:00, 24.57it/s] 46%|####6     | 12/26 [00:00<00:00, 28.11it/s] 62%|######1   | 16/26 [00:00<00:00, 29.83it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.38it/s] 92%|#########2| 24/26 [00:00<00:00, 32.48it/s]100%|##########| 26/26 [00:00<00:00, 26.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 408 tensor(2.5870e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 408 tensor(5.8293e-09, device='cuda:0')
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9953 (6.9801)	zero_count 0.0000 (4.4850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 15%|#5        | 4/26 [00:00<00:01, 17.12it/s] 35%|###4      | 9/26 [00:00<00:00, 29.39it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.39it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.64it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.64it/s] 92%|#########2| 24/26 [00:00<00:00, 38.52it/s]100%|##########| 26/26 [00:00<00:00, 32.55it/s]
Test: [   0/  26]	Loss 0.585 (0.585)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.585 (0.585)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.574 (0.577)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.574 (0.577)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.582 (0.579)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.582 (0.579)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.573 (0.579)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.573 (0.579)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.75it/s]
Test: [  0/  1]	Loss 1.809 (1.809)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.809 (1.809)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.809 (1.809)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.809 (1.809)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 35/  1]	epoch_time 0.0425 (0.0419)	validation_time 0.0004 (0.0006)	train_time 0.0421 (0.0412)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s] 19%|#9        | 5/26 [00:00<00:01, 19.08it/s] 35%|###4      | 9/26 [00:00<00:00, 25.32it/s] 50%|#####     | 13/26 [00:00<00:00, 28.56it/s] 65%|######5   | 17/26 [00:00<00:00, 30.59it/s] 81%|########  | 21/26 [00:00<00:00, 31.81it/s] 96%|#########6| 25/26 [00:00<00:00, 32.71it/s]100%|##########| 26/26 [00:00<00:00, 26.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 414 tensor(-1.0088e-06, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9915 (6.9771)	zero_count 0.0000 (4.0170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.46it/s] 19%|#9        | 5/26 [00:00<00:00, 24.66it/s] 38%|###8      | 10/26 [00:00<00:00, 34.31it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.04it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.96it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.96it/s] 96%|#########6| 25/26 [00:00<00:00, 41.80it/s]100%|##########| 26/26 [00:00<00:00, 35.02it/s]
Test: [   0/  26]	Loss 0.585 (0.585)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.585 (0.585)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.574 (0.577)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.574 (0.577)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.583 (0.579)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.583 (0.579)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.573 (0.579)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.573 (0.579)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.33it/s]
Test: [  0/  1]	Loss 1.811 (1.811)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.811 (1.811)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.811 (1.811)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.811 (1.811)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 36/  1]	epoch_time 0.0416 (0.0419)	validation_time 0.0004 (0.0006)	train_time 0.0412 (0.0412)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.90it/s] 19%|#9        | 5/26 [00:00<00:00, 24.98it/s] 35%|###4      | 9/26 [00:00<00:00, 29.41it/s] 50%|#####     | 13/26 [00:00<00:00, 31.20it/s] 65%|######5   | 17/26 [00:00<00:00, 32.34it/s] 81%|########  | 21/26 [00:00<00:00, 33.20it/s] 96%|#########6| 25/26 [00:00<00:00, 34.32it/s]100%|##########| 26/26 [00:00<00:00, 29.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9861 (6.9749)	zero_count 0.0000 (3.7830)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.65it/s] 27%|##6       | 7/26 [00:00<00:00, 34.31it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.31it/s] 50%|#####     | 13/26 [00:00<00:00, 40.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.32it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.32it/s] 96%|#########6| 25/26 [00:00<00:00, 47.17it/s]100%|##########| 26/26 [00:00<00:00, 39.46it/s]
Test: [   0/  26]	Loss 0.585 (0.585)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.585 (0.585)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.574 (0.577)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.574 (0.577)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.583 (0.579)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.583 (0.579)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.573 (0.579)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.573 (0.579)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.04it/s]
Test: [  0/  1]	Loss 1.812 (1.812)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.812 (1.812)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.812 (1.812)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.812 (1.812)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 37/  1]	epoch_time 0.0384 (0.0418)	validation_time 0.0004 (0.0006)	train_time 0.0380 (0.0412)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.48it/s] 15%|#5        | 4/26 [00:00<00:01, 17.42it/s] 31%|###       | 8/26 [00:00<00:00, 24.32it/s] 46%|####6     | 12/26 [00:00<00:00, 29.23it/s] 62%|######1   | 16/26 [00:00<00:00, 32.67it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.98it/s] 92%|#########2| 24/26 [00:00<00:00, 36.05it/s]100%|##########| 26/26 [00:00<00:00, 29.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 403 tensor(5.4329e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9754 (6.9717)	zero_count 0.0000 (4.2120)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.52it/s] 27%|##6       | 7/26 [00:00<00:00, 36.05it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.05it/s] 50%|#####     | 13/26 [00:00<00:00, 41.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.47it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.47it/s] 96%|#########6| 25/26 [00:00<00:00, 47.88it/s]100%|##########| 26/26 [00:00<00:00, 40.44it/s]
Test: [   0/  26]	Loss 0.584 (0.584)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.584 (0.584)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.573 (0.576)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.573 (0.576)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.583 (0.578)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.583 (0.578)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.572 (0.578)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.572 (0.578)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.22it/s]
Test: [  0/  1]	Loss 1.813 (1.813)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.813 (1.813)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.813 (1.813)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.813 (1.813)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 38/  1]	epoch_time 0.0359 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0354 (0.0410)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.72it/s] 19%|#9        | 5/26 [00:00<00:00, 25.11it/s] 35%|###4      | 9/26 [00:00<00:00, 31.10it/s] 50%|#####     | 13/26 [00:00<00:00, 34.25it/s] 65%|######5   | 17/26 [00:00<00:00, 35.87it/s] 81%|########  | 21/26 [00:00<00:00, 36.24it/s] 96%|#########6| 25/26 [00:00<00:00, 37.06it/s]100%|##########| 26/26 [00:00<00:00, 32.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9655 (6.9700)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.04it/s] 27%|##6       | 7/26 [00:00<00:00, 35.74it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.74it/s] 50%|#####     | 13/26 [00:00<00:00, 41.35it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.78it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.78it/s] 96%|#########6| 25/26 [00:00<00:00, 46.65it/s]100%|##########| 26/26 [00:00<00:00, 39.70it/s]
Test: [   0/  26]	Loss 0.582 (0.582)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.582 (0.582)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.571 (0.574)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.571 (0.574)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.582 (0.576)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.582 (0.576)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.571 (0.576)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.571 (0.576)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.09it/s]
Test: [  0/  1]	Loss 1.813 (1.813)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.813 (1.813)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.813 (1.813)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.813 (1.813)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 39/  1]	epoch_time 0.0356 (0.0415)	validation_time 0.0003 (0.0006)	train_time 0.0352 (0.0409)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.25it/s] 19%|#9        | 5/26 [00:00<00:01, 20.26it/s] 31%|###       | 8/26 [00:00<00:00, 23.75it/s] 46%|####6     | 12/26 [00:00<00:00, 28.89it/s] 62%|######1   | 16/26 [00:00<00:00, 32.00it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.00it/s] 92%|#########2| 24/26 [00:00<00:00, 35.62it/s]100%|##########| 26/26 [00:00<00:00, 28.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 398 tensor(7.2864e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9515 (6.9672)	zero_count 0.0000 (4.4070)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.49it/s] 31%|###       | 8/26 [00:00<00:00, 38.64it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.64it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 48.62it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 48.62it/s]100%|##########| 26/26 [00:00<00:00, 52.05it/s]100%|##########| 26/26 [00:00<00:00, 42.51it/s]
Test: [   0/  26]	Loss 0.580 (0.580)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.580 (0.580)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.568 (0.571)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.568 (0.571)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.580 (0.574)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.580 (0.574)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.569 (0.574)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.569 (0.574)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.30it/s]
Test: [  0/  1]	Loss 1.813 (1.813)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.813 (1.813)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.813 (1.813)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.813 (1.813)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 40/  1]	epoch_time 0.0364 (0.0414)	validation_time 0.0003 (0.0006)	train_time 0.0360 (0.0407)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.48it/s] 19%|#9        | 5/26 [00:00<00:01, 16.82it/s] 35%|###4      | 9/26 [00:00<00:00, 24.06it/s] 50%|#####     | 13/26 [00:00<00:00, 28.95it/s] 65%|######5   | 17/26 [00:00<00:00, 31.82it/s] 81%|########  | 21/26 [00:00<00:00, 33.90it/s] 96%|#########6| 25/26 [00:00<00:00, 35.14it/s]100%|##########| 26/26 [00:00<00:00, 27.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9460 (6.9657)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.05it/s] 35%|###4      | 9/26 [00:00<00:00, 40.55it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.55it/s] 58%|#####7    | 15/26 [00:00<00:00, 47.31it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 47.31it/s] 81%|########  | 21/26 [00:00<00:00, 47.48it/s]100%|##########| 26/26 [00:00<00:00, 42.56it/s]
Test: [   0/  26]	Loss 0.577 (0.577)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.577 (0.577)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.565 (0.568)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.565 (0.568)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.48)
Test: [  20/  26]	Loss 0.578 (0.571)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.578 (0.571)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.567 (0.571)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.567 (0.571)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.63it/s]
Test: [  0/  1]	Loss 1.816 (1.816)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.816 (1.816)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.816 (1.816)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.816 (1.816)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 41/  1]	epoch_time 0.0348 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0344 (0.0406)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.88it/s] 19%|#9        | 5/26 [00:00<00:00, 23.82it/s] 35%|###4      | 9/26 [00:00<00:00, 25.29it/s] 50%|#####     | 13/26 [00:00<00:00, 29.27it/s] 65%|######5   | 17/26 [00:00<00:00, 32.06it/s] 81%|########  | 21/26 [00:00<00:00, 33.33it/s] 96%|#########6| 25/26 [00:00<00:00, 34.69it/s]100%|##########| 26/26 [00:00<00:00, 28.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 406 tensor(9.7359e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.92 ( 24.92)	train_acc   0.52 (  0.50)	train_minacc   0.41 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9403 (6.9656)	zero_count 0.0000 (4.0950)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.38it/s] 27%|##6       | 7/26 [00:00<00:00, 29.67it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.67it/s] 46%|####6     | 12/26 [00:00<00:00, 36.88it/s] 65%|######5   | 17/26 [00:00<00:00, 40.62it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.62it/s] 88%|########8 | 23/26 [00:00<00:00, 46.71it/s]100%|##########| 26/26 [00:00<00:00, 37.13it/s]
Test: [   0/  26]	Loss 0.574 (0.574)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.574 (0.574)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.561 (0.565)	test_acc   0.50 (  0.51)	test_minacc   0.46 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.561 (0.565)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.49 (  0.48)
Test: [  20/  26]	Loss 0.576 (0.568)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.576 (0.568)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.564 (0.568)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.564 (0.568)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.67it/s]
Test: [  0/  1]	Loss 1.819 (1.819)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.819 (1.819)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.819 (1.819)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.819 (1.819)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 42/  1]	epoch_time 0.0364 (0.0411)	validation_time 0.0003 (0.0005)	train_time 0.0361 (0.0405)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000091791152, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.97it/s] 19%|#9        | 5/26 [00:00<00:01, 18.61it/s] 35%|###4      | 9/26 [00:00<00:00, 25.93it/s] 50%|#####     | 13/26 [00:00<00:00, 28.10it/s] 65%|######5   | 17/26 [00:00<00:00, 31.67it/s] 85%|########4 | 22/26 [00:00<00:00, 34.76it/s]100%|##########| 26/26 [00:00<00:00, 35.96it/s]100%|##########| 26/26 [00:00<00:00, 27.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 407 tensor(2.9265e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.93 ( 24.93)	train_acc   0.52 (  0.50)	train_minacc   0.41 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9432 (6.9656)	zero_count 0.0000 (4.0560)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.96it/s] 27%|##6       | 7/26 [00:00<00:00, 34.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.70it/s] 50%|#####     | 13/26 [00:00<00:00, 40.72it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.41it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.41it/s] 96%|#########6| 25/26 [00:00<00:00, 47.62it/s]100%|##########| 26/26 [00:00<00:00, 40.26it/s]
Test: [   0/  26]	Loss 0.572 (0.572)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.49 (  0.49)	Loss_d 0.572 (0.572)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.558 (0.564)	test_acc   0.50 (  0.51)	test_minacc   0.46 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.558 (0.564)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.50 (  0.49)
Test: [  20/  26]	Loss 0.574 (0.566)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.574 (0.566)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.563 (0.567)	test_acc   0.52 (  0.50)	test_minacc   0.41 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.563 (0.567)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.45 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 1.828 (1.828)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.828 (1.828)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.828 (1.828)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.828 (1.828)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 43/  1]	epoch_time 0.0367 (0.0410)	validation_time 0.0004 (0.0005)	train_time 0.0363 (0.0404)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.49980000898241994, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.60it/s] 19%|#9        | 5/26 [00:00<00:01, 20.04it/s] 35%|###4      | 9/26 [00:00<00:00, 27.36it/s] 50%|#####     | 13/26 [00:00<00:00, 29.21it/s] 65%|######5   | 17/26 [00:00<00:00, 29.59it/s] 81%|########  | 21/26 [00:00<00:00, 32.60it/s] 96%|#########6| 25/26 [00:00<00:00, 34.46it/s]100%|##########| 26/26 [00:00<00:00, 27.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 422 tensor(-1.4578e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 415 tensor(4.9564e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.93 ( 24.93)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9497 (6.9678)	zero_count 0.0000 (7.2150)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.20it/s] 35%|###4      | 9/26 [00:00<00:00, 40.38it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.38it/s] 58%|#####7    | 15/26 [00:00<00:00, 45.22it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 45.22it/s] 81%|########  | 21/26 [00:00<00:00, 48.74it/s]100%|##########| 26/26 [00:00<00:00, 42.78it/s]
Test: [   0/  26]	Loss 0.571 (0.571)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.49 (  0.49)	Loss_d 0.571 (0.571)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.558 (0.565)	test_acc   0.50 (  0.51)	test_minacc   0.46 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.558 (0.565)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.50 (  0.48)
Test: [  20/  26]	Loss 0.573 (0.567)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.573 (0.567)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.563 (0.567)	test_acc   0.52 (  0.50)	test_minacc   0.41 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.563 (0.567)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.45 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.86it/s]
Test: [  0/  1]	Loss 1.834 (1.834)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.834 (1.834)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.834 (1.834)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.834 (1.834)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 44/  1]	epoch_time 0.0368 (0.0409)	validation_time 0.0004 (0.0005)	train_time 0.0363 (0.0403)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.4997000113129616, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.69it/s] 23%|##3       | 6/26 [00:00<00:00, 26.67it/s] 38%|###8      | 10/26 [00:00<00:00, 31.67it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.59it/s] 69%|######9   | 18/26 [00:00<00:00, 31.84it/s] 85%|########4 | 22/26 [00:00<00:00, 32.71it/s]100%|##########| 26/26 [00:00<00:00, 34.64it/s]100%|##########| 26/26 [00:00<00:00, 30.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 391 tensor(1.4141e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.93 ( 24.93)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9600 (6.9692)	zero_count 0.0000 (4.6800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.89it/s] 23%|##3       | 6/26 [00:00<00:00, 28.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.18it/s] 42%|####2     | 11/26 [00:00<00:00, 36.60it/s] 65%|######5   | 17/26 [00:00<00:00, 41.38it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.38it/s] 88%|########8 | 23/26 [00:00<00:00, 45.99it/s]100%|##########| 26/26 [00:00<00:00, 37.04it/s]
Test: [   0/  26]	Loss 0.573 (0.573)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.573 (0.573)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.560 (0.568)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.560 (0.568)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.49 (  0.48)
Test: [  20/  26]	Loss 0.575 (0.569)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.575 (0.569)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.565 (0.570)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.565 (0.570)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.75it/s]
Test: [  0/  1]	Loss 1.841 (1.841)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.841 (1.841)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 1.841 (1.841)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.841 (1.841)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.33 (  0.33)
Overall Timing[ 45/  1]	epoch_time 0.0374 (0.0408)	validation_time 0.0003 (0.0005)	train_time 0.0371 (0.0402)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.4998000103533268, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.34it/s] 19%|#9        | 5/26 [00:00<00:01, 20.32it/s] 35%|###4      | 9/26 [00:00<00:00, 25.42it/s] 50%|#####     | 13/26 [00:00<00:00, 28.20it/s] 65%|######5   | 17/26 [00:00<00:00, 30.26it/s] 81%|########  | 21/26 [00:00<00:00, 29.32it/s] 96%|#########6| 25/26 [00:00<00:00, 31.10it/s]100%|##########| 26/26 [00:00<00:00, 26.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 378 tensor(-3.8178e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.93 ( 24.93)	train_acc   0.52 (  0.49)	train_minacc   0.43 (  0.52)	train_majacc   0.54 (  0.49)	train_corr   0.00 (  0.00)	l1 6.9881 (6.9692)	zero_count 0.0000 (5.1870)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.89it/s] 27%|##6       | 7/26 [00:00<00:00, 32.03it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.03it/s] 42%|####2     | 11/26 [00:00<00:00, 35.22it/s] 62%|######1   | 16/26 [00:00<00:00, 39.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.50it/s] 81%|########  | 21/26 [00:00<00:00, 42.80it/s]100%|##########| 26/26 [00:00<00:00, 37.07it/s]
Test: [   0/  26]	Loss 0.579 (0.579)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.579 (0.579)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.568 (0.575)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.568 (0.575)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.48 (  0.47)
Test: [  20/  26]	Loss 0.580 (0.576)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.580 (0.576)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.569 (0.576)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.569 (0.576)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.22it/s]
Test: [  0/  1]	Loss 1.830 (1.830)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.830 (1.830)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.830 (1.830)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.830 (1.830)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Overall Timing[ 46/  1]	epoch_time 0.0407 (0.0408)	validation_time 0.0004 (0.0005)	train_time 0.0402 (0.0402)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.98it/s] 15%|#5        | 4/26 [00:00<00:01, 19.54it/s] 31%|###       | 8/26 [00:00<00:00, 25.80it/s] 42%|####2     | 11/26 [00:00<00:00, 26.12it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.72it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.25it/s] 88%|########8 | 23/26 [00:00<00:00, 34.16it/s]100%|##########| 26/26 [00:00<00:00, 27.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 368 tensor(-6.9387e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 408 tensor(9.9856e-06, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  24.93 ( 24.93)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.51)	train_majacc   0.54 (  0.49)	train_corr   0.00 (  0.00)	l1 6.9966 (6.9721)	zero_count 0.0000 (5.5770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.10it/s] 27%|##6       | 7/26 [00:00<00:00, 34.85it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.85it/s] 46%|####6     | 12/26 [00:00<00:00, 39.86it/s] 65%|######5   | 17/26 [00:00<00:00, 42.44it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.44it/s] 88%|########8 | 23/26 [00:00<00:00, 45.61it/s]100%|##########| 26/26 [00:00<00:00, 39.30it/s]
Test: [   0/  26]	Loss 0.583 (0.583)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.583 (0.583)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.573 (0.578)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.573 (0.578)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.46)
Test: [  20/  26]	Loss 0.585 (0.581)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.585 (0.581)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.48 (  0.46)
Test: [  26/  26]	Loss 0.573 (0.581)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.573 (0.581)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.43 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.17it/s]
Test: [  0/  1]	Loss 1.805 (1.805)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.805 (1.805)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.805 (1.805)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.805 (1.805)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.31 (  0.31)
Overall Timing[ 47/  1]	epoch_time 0.0383 (0.0408)	validation_time 0.0004 (0.0005)	train_time 0.0379 (0.0402)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 19%|#9        | 5/26 [00:00<00:00, 22.04it/s] 35%|###4      | 9/26 [00:00<00:00, 28.01it/s] 50%|#####     | 13/26 [00:00<00:00, 30.61it/s] 65%|######5   | 17/26 [00:00<00:00, 32.61it/s] 81%|########  | 21/26 [00:00<00:00, 33.95it/s] 96%|#########6| 25/26 [00:00<00:00, 35.34it/s]100%|##########| 26/26 [00:00<00:00, 29.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.93 ( 24.93)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9740 (6.9774)	zero_count 0.0000 (4.0170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.61it/s] 23%|##3       | 6/26 [00:00<00:00, 32.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.21it/s] 42%|####2     | 11/26 [00:00<00:00, 39.94it/s] 65%|######5   | 17/26 [00:00<00:00, 43.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.33it/s] 88%|########8 | 23/26 [00:00<00:00, 46.65it/s]100%|##########| 26/26 [00:00<00:00, 38.02it/s]
Test: [   0/  26]	Loss 0.582 (0.582)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.582 (0.582)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.574 (0.577)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.574 (0.577)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.46 (  0.46)
Test: [  20/  26]	Loss 0.585 (0.580)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.585 (0.580)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.47 (  0.46)
Test: [  26/  26]	Loss 0.572 (0.580)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.572 (0.580)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.43 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.02it/s]
Test: [  0/  1]	Loss 1.787 (1.787)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.787 (1.787)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.787 (1.787)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.787 (1.787)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.31 (  0.31)
Overall Timing[ 48/  1]	epoch_time 0.0381 (0.0407)	validation_time 0.0003 (0.0005)	train_time 0.0378 (0.0401)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.65it/s] 15%|#5        | 4/26 [00:00<00:01, 17.30it/s] 31%|###       | 8/26 [00:00<00:00, 25.52it/s] 46%|####6     | 12/26 [00:00<00:00, 29.46it/s] 62%|######1   | 16/26 [00:00<00:00, 30.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.94it/s] 92%|#########2| 24/26 [00:00<00:00, 33.30it/s]100%|##########| 26/26 [00:00<00:00, 27.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm  24.93 ( 24.93)	train_acc   0.52 (  0.50)	train_minacc   0.43 (  0.50)	train_majacc   0.54 (  0.50)	train_corr   0.00 (  0.00)	l1 6.9703 (6.9752)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.72it/s] 27%|##6       | 7/26 [00:00<00:00, 35.41it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.41it/s] 46%|####6     | 12/26 [00:00<00:00, 41.22it/s] 65%|######5   | 17/26 [00:00<00:00, 41.88it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.88it/s] 88%|########8 | 23/26 [00:00<00:00, 46.25it/s]100%|##########| 26/26 [00:00<00:00, 39.09it/s]
Test: [   0/  26]	Loss 0.581 (0.581)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.49 (  0.49)	Loss_d 0.581 (0.581)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.572 (0.576)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.572 (0.576)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.584 (0.579)	test_acc   0.49 (  0.50)	test_minacc   0.56 (  0.51)	test_majacc   0.48 (  0.50)	Loss_d 0.584 (0.579)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.48 (  0.47)
Test: [  26/  26]	Loss 0.571 (0.579)	test_acc   0.52 (  0.50)	test_minacc   0.43 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.571 (0.579)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.44 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.78it/s]
Test: [  0/  1]	Loss 1.783 (1.783)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.783 (1.783)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 1.783 (1.783)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.783 (1.783)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Overall Timing[ 49/  1]	epoch_time 0.0378 (0.0407)	validation_time 0.0004 (0.0005)	train_time 0.0374 (0.0401)
record: (train_acc, test_acc) (0.8266000276207924, 0.628000020980835)
last accs (train_acc, test_acc) (0.5000000115036964, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.173 MB of 0.173 MB uploadedwandb: \ 0.173 MB of 0.173 MB uploadedwandb: | 0.173 MB of 0.173 MB uploadedwandb: / 0.196 MB of 0.204 MB uploaded (0.003 MB deduped)wandb: - 0.501 MB of 0.501 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                           global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/diagnostics/epoch_time_val █▂▂▂▂▃▂▂▂▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▂▂▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/diagnostics/train_time_val █▂▂▂▂▃▂▂▂▂▂▁▃▂▂▂▂▂▂▂▂▃▂▂▃▂▃▂▂▂▂▁▁▁▁▁▂▂▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/Loss_avg ▄▄▄▄▃▄▆▅▄▅▆█▂▂▂▁▃▃▅█▅▄▄▄▄▄▄▄▄▄▄▄▄▅▅▅▅▅▄▄
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/Loss_d_avg ▄▄▄▄▃▄▆▅▄▅▆█▂▂▂▁▃▃▅█▅▄▄▄▄▄▄▄▄▄▄▄▄▅▅▅▅▅▄▄
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/Loss_d_val ▄▄▄▄▃▄▆▅▄▅▆█▂▂▂▁▃▃▅█▅▄▄▄▄▄▄▄▄▄▄▄▄▅▅▅▅▅▄▄
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/Loss_val ▄▄▄▄▃▄▆▅▄▅▆█▂▂▂▁▃▃▅█▅▄▄▄▄▄▄▄▄▄▄▄▄▅▅▅▅▅▄▄
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_acc_avg ▁▁▁▂▄▃▃▄▆▆▇▅▇▆▆▇▇██▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_acc_d_avg ▁▁▁▂▄▃▃▄▆▆▇▅▇▆▆▇▇██▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_acc_d_val ▁▁▁▂▄▃▃▄▆▆▇▅▇▆▆▇▇██▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_acc_val ▁▁▁▂▄▃▃▄▆▆▇▅▇▆▆▇▇██▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_corr_d_avg ███▇▆▆▆▆▂▂▂▄▂▂▃▂▂▁▁▃▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_corr_d_val ███▇▆▆▆▆▂▂▂▄▂▂▃▂▂▁▁▃▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_majacc_avg ████▇██▇▆▆▆▇▆▅▇▇▇▅▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_majacc_d_avg ████▇██▇▆▆▆▇▆▅▇▇▇▅▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_majacc_d_val ████▇██▇▆▆▆▇▆▅▇▇▇▅▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_majacc_val ████▇██▇▆▆▆▇▆▅▇▇▇▅▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_minacc_avg ▁▁▁▂▄▃▃▄▆▆▇▅▇▇▆▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_minacc_d_avg ▁▁▁▂▄▃▃▄▆▆▇▅▇▇▆▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_minacc_d_val ▁▁▁▂▄▃▃▄▆▆▇▅▇▇▆▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_minacc_val ▁▁▁▂▄▃▃▄▆▆▇▅▇▇▆▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/Loss_val █▇▇▇▆▆▅▅▄▄▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/l1_avg █▁▁▁▃▃▃▂▃▅▆▇█▃▂▂▃▃▄▅▆▆▆▆▆▆▆▆▆▆▆▆▆▅▅▅▆▆▆▆
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/l1_val ▂▁▁▂▂▂▂▂▄▄▅▅▃▂▁▁▂▃▄█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇█████▇▇▇▇▇▇▇▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_acc_val ▆▆▆▆▇▇▇▇▇███▇▆▇▇▆▆▇▇▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_majacc_avg ▇█████▇▇▇▇▇▇▇▆▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_majacc_val ████▇▇██████▇▆▆▆▆▆▆▆▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_minacc_avg ▂▁▁▁▂▃▄▄▅▅▆▆▇███████▇▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_minacc_val ▁▁▂▂▃▃▄▄▅▆▆▆█▇▇█▇████▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_nll_avg █▅▄▄▃▃▃▂▂▂▁▁▁▃▃▃▃▂▂▃▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_nll_val ▇▆▅▅▄▄▃▃▂▂▁▂▂▄▃▃▃▄▃▂████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_penalty_avg █▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_penalty_val █▇▆▅▃▃▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/weight_norm_avg ▁▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇▇████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/weight_norm_val ▁▃▃▃▃▄▄▄▄▅▅▆▆▇▇▇▇▇▇▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂█▄▂▃▁▁▂▁▁▁▁▁▁▁▁▁▁▂▂▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                           global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/diagnostics/epoch_time_val 0.03784
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/diagnostics/train_time_val 0.03741
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/diagnostics/validation_time_val 0.00042
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/Loss_avg 1.78299
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/Loss_d_avg 1.78299
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/Loss_d_val 1.78299
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/Loss_val 1.78299
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_corr_d_avg 0.31755
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_corr_d_val 0.31755
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/Loss_avg 7e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/Loss_val 7e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/l1_avg 6.97516
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/l1_val 6.97034
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_acc_val 0.52
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_majacc_avg 0.49997
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_majacc_val 0.53883
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_minacc_avg 0.49836
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_minacc_val 0.43182
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_nll_avg 0.5789
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_nll_val 0.57004
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_penalty_avg 1e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/train_penalty_val 1e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/weight_norm_avg 24.93404
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/weight_norm_val 24.93428
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/93/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/5eht0kmc
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_153600-5eht0kmc/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_153840-jn8438z9
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/jn8438z9
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1152
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5976, 3, 32, 32) (6024, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:35,  1.40s/it] 23%|##3       | 6/26 [00:01<00:03,  5.17it/s] 42%|####2     | 11/26 [00:01<00:01, 10.05it/s] 62%|######1   | 16/26 [00:01<00:00, 15.22it/s] 81%|########  | 21/26 [00:01<00:00, 20.32it/s] 96%|#########6| 25/26 [00:01<00:00, 23.49it/s]100%|##########| 26/26 [00:02<00:00, 10.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.386 (0.583)	train_nll   0.39 (  0.58)	train_penalty   0.05 (  0.34)	weight_norm  20.89 ( 18.13)	train_acc   0.86 (  0.79)	train_minacc   0.00 (  0.07)	train_majacc   1.00 (  0.92)	train_corr   0.00 (  0.00)	l1 6.9262 (8.1670)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.45it/s] 27%|##6       | 7/26 [00:00<00:00, 36.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.53it/s] 46%|####6     | 12/26 [00:00<00:00, 39.21it/s] 65%|######5   | 17/26 [00:00<00:00, 39.18it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.18it/s] 85%|########4 | 22/26 [00:00<00:00, 41.97it/s]100%|##########| 26/26 [00:00<00:00, 35.95it/s]
Test: [   0/  26]	Loss 0.415 (0.415)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.415 (0.415)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.419 (0.414)	test_acc   0.85 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.419 (0.414)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.98)
Test: [  20/  26]	Loss 0.366 (0.413)	test_acc   0.87 (  0.85)	test_minacc   0.04 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.366 (0.413)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.04 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  26/  26]	Loss 0.383 (0.410)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.383 (0.410)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.51it/s]100%|##########| 1/1 [00:00<00:00,  2.51it/s]
Test: [  0/  1]	Loss 1.814 (1.814)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.814 (1.814)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.814 (1.814)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.814 (1.814)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0794 (0.0794)	validation_time 0.0067 (0.0067)	train_time 0.0651 (0.0651)
record: (train_acc, test_acc) (0.8482000233530999, 0.10300000756978989)
last accs (train_acc, test_acc) (0.8482000233530999, 0.10300000756978989)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.36it/s] 19%|#9        | 5/26 [00:00<00:01, 19.65it/s] 38%|###8      | 10/26 [00:00<00:00, 28.47it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.79it/s] 96%|#########6| 25/26 [00:00<00:00, 37.99it/s]100%|##########| 26/26 [00:00<00:00, 30.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.404 (0.405)	train_nll   0.40 (  0.41)	train_penalty   0.03 (  0.05)	weight_norm  22.00 ( 21.66)	train_acc   0.84 (  0.85)	train_minacc   0.03 (  0.02)	train_majacc   0.97 (  1.00)	train_corr   0.00 (  0.00)	l1 6.7595 (6.8143)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.55it/s] 27%|##6       | 7/26 [00:00<00:00, 34.40it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.40it/s] 50%|#####     | 13/26 [00:00<00:00, 40.88it/s] 69%|######9   | 18/26 [00:00<00:00, 40.34it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.34it/s] 88%|########8 | 23/26 [00:00<00:00, 43.02it/s]100%|##########| 26/26 [00:00<00:00, 38.02it/s]
Test: [   0/  26]	Loss 0.399 (0.399)	test_acc   0.84 (  0.84)	test_minacc   0.03 (  0.03)	test_majacc   0.98 (  0.98)	Loss_d 0.399 (0.399)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.406 (0.393)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.406 (0.393)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  20/  26]	Loss 0.355 (0.397)	test_acc   0.87 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.355 (0.397)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  26/  26]	Loss 0.393 (0.392)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.393 (0.392)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.98it/s]
Test: [  0/  1]	Loss 1.697 (1.697)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.697 (1.697)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.697 (1.697)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.697 (1.697)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0378 (0.0586)	validation_time 0.0003 (0.0035)	train_time 0.0374 (0.0513)
record: (train_acc, test_acc) (0.848900027871132, 0.11500000208616257)
last accs (train_acc, test_acc) (0.848900027871132, 0.11500000208616257)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.56it/s] 19%|#9        | 5/26 [00:00<00:00, 22.34it/s] 35%|###4      | 9/26 [00:00<00:00, 28.20it/s] 50%|#####     | 13/26 [00:00<00:00, 31.24it/s] 65%|######5   | 17/26 [00:00<00:00, 33.09it/s] 81%|########  | 21/26 [00:00<00:00, 34.75it/s] 96%|#########6| 25/26 [00:00<00:00, 35.82it/s]100%|##########| 26/26 [00:00<00:00, 29.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.399 (0.383)	train_nll   0.40 (  0.38)	train_penalty   0.04 (  0.05)	weight_norm  22.13 ( 22.08)	train_acc   0.84 (  0.85)	train_minacc   0.09 (  0.06)	train_majacc   0.96 (  0.99)	train_corr   0.00 (  0.00)	l1 6.9248 (6.8031)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.65it/s] 23%|##3       | 6/26 [00:00<00:00, 26.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.74it/s] 42%|####2     | 11/26 [00:00<00:00, 35.01it/s] 62%|######1   | 16/26 [00:00<00:00, 38.82it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.82it/s] 81%|########  | 21/26 [00:00<00:00, 41.73it/s]100%|##########| 26/26 [00:00<00:00, 43.81it/s]100%|##########| 26/26 [00:00<00:00, 34.97it/s]
Test: [   0/  26]	Loss 0.369 (0.369)	test_acc   0.85 (  0.85)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.369 (0.369)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.369 (0.367)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.369 (0.367)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  20/  26]	Loss 0.330 (0.369)	test_acc   0.87 (  0.85)	test_minacc   0.06 (  0.05)	test_majacc   1.00 (  0.99)	Loss_d 0.330 (0.369)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.06 (  0.05)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.96)
Test: [  26/  26]	Loss 0.371 (0.364)	test_acc   0.86 (  0.85)	test_minacc   0.03 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.371 (0.364)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.03 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.46it/s]
Test: [  0/  1]	Loss 1.791 (1.791)	test_acc   0.13 (  0.13)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 1.791 (1.791)	test_acc_d   0.13 (  0.13)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.791 (1.791)	test_acc   0.13 (  0.13)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 1.791 (1.791)	test_acc_d   0.13 (  0.13)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.92 (  0.92)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0407 (0.0526)	validation_time 0.0004 (0.0025)	train_time 0.0403 (0.0476)
record: (train_acc, test_acc) (0.852500025331974, 0.1300000101327896)
last accs (train_acc, test_acc) (0.852500025331974, 0.1300000101327896)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.44it/s] 23%|##3       | 6/26 [00:00<00:00, 26.20it/s] 38%|###8      | 10/26 [00:00<00:00, 30.04it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.16it/s] 69%|######9   | 18/26 [00:00<00:00, 32.86it/s] 85%|########4 | 22/26 [00:00<00:00, 34.00it/s]100%|##########| 26/26 [00:00<00:00, 34.71it/s]100%|##########| 26/26 [00:00<00:00, 29.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.358 (0.364)	train_nll   0.36 (  0.36)	train_penalty   0.03 (  0.04)	weight_norm  22.20 ( 22.17)	train_acc   0.85 (  0.85)	train_minacc   0.09 (  0.10)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 6.9630 (6.9200)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.05it/s] 23%|##3       | 6/26 [00:00<00:00, 32.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.06it/s] 42%|####2     | 11/26 [00:00<00:00, 38.75it/s] 65%|######5   | 17/26 [00:00<00:00, 40.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.79it/s] 85%|########4 | 22/26 [00:00<00:00, 43.06it/s]100%|##########| 26/26 [00:00<00:00, 36.19it/s]
Test: [   0/  26]	Loss 0.376 (0.376)	test_acc   0.84 (  0.84)	test_minacc   0.07 (  0.07)	test_majacc   0.98 (  0.98)	Loss_d 0.376 (0.376)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.359 (0.354)	test_acc   0.84 (  0.85)	test_minacc   0.07 (  0.08)	test_majacc   0.98 (  0.99)	Loss_d 0.359 (0.354)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.07 (  0.08)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.318 (0.351)	test_acc   0.87 (  0.85)	test_minacc   0.06 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 0.318 (0.351)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.06 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  26/  26]	Loss 0.350 (0.347)	test_acc   0.86 (  0.85)	test_minacc   0.06 (  0.08)	test_majacc   0.98 (  0.99)	Loss_d 0.350 (0.347)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.06 (  0.08)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.26it/s]
Test: [  0/  1]	Loss 1.793 (1.793)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.793 (1.793)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.89 (  0.89)
Test: [  1/  1]	Loss 1.793 (1.793)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   1.00 (  1.00)	Loss_d 1.793 (1.793)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.89 (  0.89)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0425 (0.0501)	validation_time 0.0003 (0.0020)	train_time 0.0421 (0.0462)
record: (train_acc, test_acc) (0.8543000275492668, 0.15300001204013824)
last accs (train_acc, test_acc) (0.8543000275492668, 0.15300001204013824)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.99it/s]  8%|7         | 2/26 [00:00<00:03,  6.81it/s] 19%|#9        | 5/26 [00:00<00:01, 14.98it/s] 35%|###4      | 9/26 [00:00<00:00, 22.44it/s] 50%|#####     | 13/26 [00:00<00:00, 26.70it/s] 65%|######5   | 17/26 [00:00<00:00, 29.57it/s] 81%|########  | 21/26 [00:00<00:00, 31.14it/s] 96%|#########6| 25/26 [00:00<00:00, 32.65it/s]100%|##########| 26/26 [00:01<00:00, 24.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.342 (0.345)	train_nll   0.34 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.26 ( 22.23)	train_acc   0.85 (  0.86)	train_minacc   0.18 (  0.17)	train_majacc   0.96 (  0.98)	train_corr   0.00 (  0.00)	l1 6.9000 (6.9789)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.62it/s] 31%|###       | 8/26 [00:00<00:00, 39.44it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.44it/s] 50%|#####     | 13/26 [00:00<00:00, 42.45it/s] 69%|######9   | 18/26 [00:00<00:00, 40.52it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.52it/s] 88%|########8 | 23/26 [00:00<00:00, 42.10it/s]100%|##########| 26/26 [00:00<00:00, 37.26it/s]
Test: [   0/  26]	Loss 0.358 (0.358)	test_acc   0.84 (  0.84)	test_minacc   0.10 (  0.10)	test_majacc   0.97 (  0.97)	Loss_d 0.358 (0.358)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.337 (0.333)	test_acc   0.85 (  0.85)	test_minacc   0.14 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 0.337 (0.333)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.14 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.303 (0.330)	test_acc   0.88 (  0.86)	test_minacc   0.19 (  0.17)	test_majacc   0.99 (  0.98)	Loss_d 0.303 (0.330)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.19 (  0.17)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.92)
Test: [  26/  26]	Loss 0.330 (0.327)	test_acc   0.86 (  0.86)	test_minacc   0.18 (  0.17)	test_majacc   0.97 (  0.98)	Loss_d 0.330 (0.327)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.18 (  0.17)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.92 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.39it/s]
Test: [  0/  1]	Loss 1.644 (1.644)	test_acc   0.18 (  0.18)	test_minacc   0.10 (  0.10)	test_majacc   0.97 (  0.97)	Loss_d 1.644 (1.644)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.644 (1.644)	test_acc   0.18 (  0.18)	test_minacc   0.10 (  0.10)	test_majacc   0.97 (  0.97)	Loss_d 1.644 (1.644)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.84 (  0.84)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0410 (0.0483)	validation_time 0.0004 (0.0016)	train_time 0.0406 (0.0451)
record: (train_acc, test_acc) (0.8591000224947929, 0.18300001323223114)
last accs (train_acc, test_acc) (0.8591000224947929, 0.18300001323223114)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.43it/s] 23%|##3       | 6/26 [00:00<00:00, 28.83it/s] 38%|###8      | 10/26 [00:00<00:00, 31.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.93it/s] 69%|######9   | 18/26 [00:00<00:00, 33.46it/s] 85%|########4 | 22/26 [00:00<00:00, 33.51it/s]100%|##########| 26/26 [00:00<00:00, 35.38it/s]100%|##########| 26/26 [00:00<00:00, 30.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.321 (0.326)	train_nll   0.32 (  0.33)	train_penalty   0.01 (  0.02)	weight_norm  22.34 ( 22.30)	train_acc   0.86 (  0.86)	train_minacc   0.32 (  0.26)	train_majacc   0.94 (  0.97)	train_corr   0.00 (  0.00)	l1 6.9584 (6.9814)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.15it/s] 27%|##6       | 7/26 [00:00<00:00, 32.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.58it/s] 46%|####6     | 12/26 [00:00<00:00, 38.31it/s] 65%|######5   | 17/26 [00:00<00:00, 41.60it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.60it/s] 85%|########4 | 22/26 [00:00<00:00, 42.98it/s]100%|##########| 26/26 [00:00<00:00, 36.67it/s]
Test: [   0/  26]	Loss 0.342 (0.342)	test_acc   0.84 (  0.84)	test_minacc   0.19 (  0.19)	test_majacc   0.96 (  0.96)	Loss_d 0.342 (0.342)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.318 (0.314)	test_acc   0.86 (  0.86)	test_minacc   0.24 (  0.24)	test_majacc   0.98 (  0.97)	Loss_d 0.318 (0.314)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.278 (0.313)	test_acc   0.89 (  0.86)	test_minacc   0.21 (  0.23)	test_majacc   1.00 (  0.98)	Loss_d 0.278 (0.313)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.21 (  0.23)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.93 (  0.91)
Test: [  26/  26]	Loss 0.300 (0.308)	test_acc   0.86 (  0.87)	test_minacc   0.24 (  0.24)	test_majacc   0.95 (  0.98)	Loss_d 0.300 (0.308)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.95 (  0.98)	test_corr_d   0.89 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.43it/s]
Test: [  0/  1]	Loss 1.757 (1.757)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 1.757 (1.757)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
Test: [  1/  1]	Loss 1.757 (1.757)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.98 (  0.98)	Loss_d 1.757 (1.757)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0398 (0.0469)	validation_time 0.0003 (0.0014)	train_time 0.0395 (0.0442)
record: (train_acc, test_acc) (0.8661000198721885, 0.19500000774860382)
last accs (train_acc, test_acc) (0.8661000198721885, 0.19500000774860382)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.07it/s] 12%|#1        | 3/26 [00:00<00:02,  7.81it/s] 27%|##6       | 7/26 [00:00<00:01, 16.50it/s] 42%|####2     | 11/26 [00:00<00:00, 22.71it/s] 62%|######1   | 16/26 [00:00<00:00, 28.49it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.51it/s] 92%|#########2| 24/26 [00:01<00:00, 32.11it/s]100%|##########| 26/26 [00:01<00:00, 22.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.312 (0.304)	train_nll   0.31 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.43 ( 22.38)	train_acc   0.84 (  0.87)	train_minacc   0.32 (  0.36)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 6.9479 (7.0804)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.11it/s] 27%|##6       | 7/26 [00:00<00:00, 34.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.11it/s] 46%|####6     | 12/26 [00:00<00:00, 40.05it/s] 65%|######5   | 17/26 [00:00<00:00, 41.04it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.04it/s] 85%|########4 | 22/26 [00:00<00:00, 43.30it/s]100%|##########| 26/26 [00:00<00:00, 37.49it/s]
Test: [   0/  26]	Loss 0.330 (0.330)	test_acc   0.86 (  0.86)	test_minacc   0.24 (  0.24)	test_majacc   0.97 (  0.97)	Loss_d 0.330 (0.330)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.287 (0.294)	test_acc   0.88 (  0.87)	test_minacc   0.29 (  0.26)	test_majacc   0.99 (  0.98)	Loss_d 0.287 (0.294)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.29 (  0.26)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.256 (0.290)	test_acc   0.89 (  0.87)	test_minacc   0.29 (  0.27)	test_majacc   0.99 (  0.98)	Loss_d 0.256 (0.290)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.29 (  0.27)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.93 (  0.91)
Test: [  26/  26]	Loss 0.283 (0.286)	test_acc   0.85 (  0.88)	test_minacc   0.18 (  0.28)	test_majacc   0.96 (  0.98)	Loss_d 0.283 (0.286)	test_acc_d   0.85 (  0.88)	test_minacc_d   0.18 (  0.28)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.91 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.73it/s]
Test: [  0/  1]	Loss 1.802 (1.802)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   1.00 (  1.00)	Loss_d 1.802 (1.802)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.81)
Test: [  1/  1]	Loss 1.802 (1.802)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   1.00 (  1.00)	Loss_d 1.802 (1.802)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.81)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0432 (0.0464)	validation_time 0.0004 (0.0013)	train_time 0.0427 (0.0440)
record: (train_acc, test_acc) (0.8757000249028206, 0.21700000762939453)
last accs (train_acc, test_acc) (0.8757000249028206, 0.21700000762939453)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.48it/s] 19%|#9        | 5/26 [00:00<00:00, 21.35it/s] 35%|###4      | 9/26 [00:00<00:00, 27.12it/s] 50%|#####     | 13/26 [00:00<00:00, 29.46it/s] 65%|######5   | 17/26 [00:00<00:00, 31.08it/s] 81%|########  | 21/26 [00:00<00:00, 32.01it/s] 96%|#########6| 25/26 [00:00<00:00, 33.76it/s]100%|##########| 26/26 [00:00<00:00, 28.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.287 (0.288)	train_nll   0.29 (  0.29)	train_penalty   0.00 (  0.01)	weight_norm  22.55 ( 22.49)	train_acc   0.88 (  0.88)	train_minacc   0.68 (  0.43)	train_majacc   0.91 (  0.96)	train_corr   0.00 (  0.00)	l1 7.1708 (7.1019)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.60it/s] 23%|##3       | 6/26 [00:00<00:00, 30.64it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.64it/s] 42%|####2     | 11/26 [00:00<00:00, 37.89it/s] 62%|######1   | 16/26 [00:00<00:00, 41.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.62it/s] 81%|########  | 21/26 [00:00<00:00, 43.52it/s]100%|##########| 26/26 [00:00<00:00, 44.87it/s]100%|##########| 26/26 [00:00<00:00, 36.76it/s]
Test: [   0/  26]	Loss 0.310 (0.310)	test_acc   0.87 (  0.87)	test_minacc   0.37 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 0.310 (0.310)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.263 (0.274)	test_acc   0.90 (  0.89)	test_minacc   0.46 (  0.46)	test_majacc   0.98 (  0.96)	Loss_d 0.263 (0.274)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.88 (  0.87)
Test: [  20/  26]	Loss 0.238 (0.266)	test_acc   0.90 (  0.89)	test_minacc   0.42 (  0.45)	test_majacc   0.98 (  0.96)	Loss_d 0.238 (0.266)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.42 (  0.45)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.89 (  0.87)
Test: [  26/  26]	Loss 0.230 (0.259)	test_acc   0.88 (  0.89)	test_minacc   0.50 (  0.46)	test_majacc   0.94 (  0.97)	Loss_d 0.230 (0.259)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.50 (  0.46)	test_majacc_d   0.94 (  0.97)	test_corr_d   0.86 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.63it/s]
Test: [  0/  1]	Loss 1.868 (1.868)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 1.868 (1.868)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.68 (  0.68)
Test: [  1/  1]	Loss 1.868 (1.868)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 1.868 (1.868)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.68 (  0.68)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0398 (0.0455)	validation_time 0.0004 (0.0012)	train_time 0.0394 (0.0434)
record: (train_acc, test_acc) (0.8897000252008438, 0.3020000159740448)
last accs (train_acc, test_acc) (0.8897000252008438, 0.3020000159740448)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 15%|#5        | 4/26 [00:00<00:01, 15.53it/s] 31%|###       | 8/26 [00:00<00:00, 23.70it/s] 46%|####6     | 12/26 [00:00<00:00, 28.16it/s] 62%|######1   | 16/26 [00:00<00:00, 30.83it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.26it/s] 92%|#########2| 24/26 [00:00<00:00, 33.35it/s]100%|##########| 26/26 [00:00<00:00, 26.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.251 (0.274)	train_nll   0.25 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  22.73 ( 22.64)	train_acc   0.88 (  0.88)	train_minacc   0.59 (  0.46)	train_majacc   0.93 (  0.95)	train_corr   0.00 (  0.00)	l1 7.1574 (7.1260)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.41it/s] 27%|##6       | 7/26 [00:00<00:00, 38.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 38.12it/s] 50%|#####     | 13/26 [00:00<00:00, 43.02it/s] 69%|######9   | 18/26 [00:00<00:00, 45.51it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.51it/s] 92%|#########2| 24/26 [00:00<00:00, 49.22it/s]100%|##########| 26/26 [00:00<00:00, 40.39it/s]
Test: [   0/  26]	Loss 0.312 (0.312)	test_acc   0.85 (  0.85)	test_minacc   0.46 (  0.46)	test_majacc   0.92 (  0.92)	Loss_d 0.312 (0.312)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.254 (0.284)	test_acc   0.89 (  0.88)	test_minacc   0.58 (  0.52)	test_majacc   0.95 (  0.94)	Loss_d 0.254 (0.284)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.252 (0.266)	test_acc   0.89 (  0.89)	test_minacc   0.54 (  0.56)	test_majacc   0.95 (  0.95)	Loss_d 0.252 (0.266)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.54 (  0.56)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.82)
Test: [  26/  26]	Loss 0.217 (0.259)	test_acc   0.90 (  0.89)	test_minacc   0.62 (  0.57)	test_majacc   0.95 (  0.95)	Loss_d 0.217 (0.259)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.84 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.51it/s]
Test: [  0/  1]	Loss 1.900 (1.900)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 1.900 (1.900)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 1.900 (1.900)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 1.900 (1.900)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.55 (  0.55)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0383 (0.0447)	validation_time 0.0003 (0.0011)	train_time 0.0379 (0.0428)
record: (train_acc, test_acc) (0.8914000190496445, 0.34800001978874207)
last accs (train_acc, test_acc) (0.8914000190496445, 0.34800001978874207)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.28it/s] 19%|#9        | 5/26 [00:00<00:01, 19.20it/s] 35%|###4      | 9/26 [00:00<00:00, 25.92it/s] 50%|#####     | 13/26 [00:00<00:00, 29.80it/s] 65%|######5   | 17/26 [00:00<00:00, 32.27it/s] 81%|########  | 21/26 [00:00<00:00, 33.85it/s] 96%|#########6| 25/26 [00:00<00:00, 34.69it/s]100%|##########| 26/26 [00:00<00:00, 27.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.214 (0.268)	train_nll   0.21 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  22.92 ( 22.83)	train_acc   0.90 (  0.89)	train_minacc   0.68 (  0.51)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 7.2606 (7.0379)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.78it/s] 27%|##6       | 7/26 [00:00<00:00, 21.77it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.77it/s] 46%|####6     | 12/26 [00:00<00:00, 29.81it/s] 65%|######5   | 17/26 [00:00<00:00, 35.32it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.32it/s] 85%|########4 | 22/26 [00:00<00:00, 39.15it/s]100%|##########| 26/26 [00:00<00:00, 30.63it/s]
Test: [   0/  26]	Loss 0.228 (0.228)	test_acc   0.90 (  0.90)	test_minacc   0.49 (  0.49)	test_majacc   0.98 (  0.98)	Loss_d 0.228 (0.228)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.240 (0.258)	test_acc   0.88 (  0.89)	test_minacc   0.39 (  0.41)	test_majacc   0.97 (  0.97)	Loss_d 0.240 (0.258)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.39 (  0.41)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  20/  26]	Loss 0.198 (0.250)	test_acc   0.92 (  0.89)	test_minacc   0.46 (  0.43)	test_majacc   0.99 (  0.97)	Loss_d 0.198 (0.250)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.46 (  0.43)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.89 (  0.87)
Test: [  26/  26]	Loss 0.172 (0.240)	test_acc   0.94 (  0.90)	test_minacc   0.68 (  0.46)	test_majacc   0.98 (  0.98)	Loss_d 0.172 (0.240)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.68 (  0.46)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.86 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.29it/s]
Test: [  0/  1]	Loss 2.211 (2.211)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 2.211 (2.211)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 2.211 (2.211)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 2.211 (2.211)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.66 (  0.66)
Overall Timing[  9/  1]	epoch_time 0.0391 (0.0442)	validation_time 0.0005 (0.0010)	train_time 0.0386 (0.0424)
record: (train_acc, test_acc) (0.8914000190496445, 0.34800001978874207)
last accs (train_acc, test_acc) (0.8973000190854072, 0.3020000159740448)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.31it/s] 19%|#9        | 5/26 [00:00<00:01, 19.06it/s] 35%|###4      | 9/26 [00:00<00:00, 25.19it/s] 50%|#####     | 13/26 [00:00<00:00, 28.65it/s] 65%|######5   | 17/26 [00:00<00:00, 30.89it/s] 81%|########  | 21/26 [00:00<00:00, 32.24it/s] 96%|#########6| 25/26 [00:00<00:00, 33.23it/s]100%|##########| 26/26 [00:00<00:00, 26.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.244 (0.253)	train_nll   0.24 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.14 ( 23.04)	train_acc   0.90 (  0.89)	train_minacc   0.71 (  0.54)	train_majacc   0.93 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5093 (7.1799)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.50it/s] 15%|#5        | 4/26 [00:00<00:01, 18.28it/s] 35%|###4      | 9/26 [00:00<00:00, 30.35it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.86it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.86it/s] 92%|#########2| 24/26 [00:00<00:00, 40.34it/s]100%|##########| 26/26 [00:00<00:00, 32.67it/s]
Test: [   0/  26]	Loss 0.228 (0.228)	test_acc   0.89 (  0.89)	test_minacc   0.54 (  0.54)	test_majacc   0.96 (  0.96)	Loss_d 0.228 (0.228)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.235 (0.239)	test_acc   0.90 (  0.90)	test_minacc   0.51 (  0.49)	test_majacc   0.97 (  0.97)	Loss_d 0.235 (0.239)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.51 (  0.49)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.87)
Test: [  20/  26]	Loss 0.192 (0.239)	test_acc   0.93 (  0.90)	test_minacc   0.50 (  0.48)	test_majacc   0.99 (  0.97)	Loss_d 0.192 (0.239)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.50 (  0.48)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.89 (  0.87)
Test: [  26/  26]	Loss 0.181 (0.229)	test_acc   0.93 (  0.90)	test_minacc   0.62 (  0.50)	test_majacc   0.98 (  0.97)	Loss_d 0.181 (0.229)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.62 (  0.50)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.86 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.52it/s]
Test: [  0/  1]	Loss 2.366 (2.366)	test_acc   0.32 (  0.32)	test_minacc   0.24 (  0.24)	test_majacc   0.98 (  0.98)	Loss_d 2.366 (2.366)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 2.366 (2.366)	test_acc   0.32 (  0.32)	test_minacc   0.24 (  0.24)	test_majacc   0.98 (  0.98)	Loss_d 2.366 (2.366)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.65 (  0.65)
Overall Timing[ 10/  1]	epoch_time 0.0394 (0.0437)	validation_time 0.0004 (0.0010)	train_time 0.0390 (0.0421)
record: (train_acc, test_acc) (0.8914000190496445, 0.34800001978874207)
last accs (train_acc, test_acc) (0.9024000288248062, 0.31700000166893005)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.99it/s] 23%|##3       | 6/26 [00:00<00:00, 26.70it/s] 38%|###8      | 10/26 [00:00<00:00, 31.00it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.45it/s] 69%|######9   | 18/26 [00:00<00:00, 34.74it/s] 85%|########4 | 22/26 [00:00<00:00, 35.44it/s]100%|##########| 26/26 [00:00<00:00, 36.03it/s]100%|##########| 26/26 [00:00<00:00, 30.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.215 (0.241)	train_nll   0.21 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  23.41 ( 23.28)	train_acc   0.91 (  0.90)	train_minacc   0.76 (  0.57)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 7.4858 (7.2816)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.33it/s] 27%|##6       | 7/26 [00:00<00:00, 31.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.14it/s] 46%|####6     | 12/26 [00:00<00:00, 37.00it/s] 65%|######5   | 17/26 [00:00<00:00, 40.56it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.56it/s] 85%|########4 | 22/26 [00:00<00:00, 42.92it/s]100%|##########| 26/26 [00:00<00:00, 35.01it/s]
Test: [   0/  26]	Loss 0.227 (0.227)	test_acc   0.90 (  0.90)	test_minacc   0.66 (  0.66)	test_majacc   0.94 (  0.94)	Loss_d 0.227 (0.227)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.234 (0.240)	test_acc   0.92 (  0.90)	test_minacc   0.66 (  0.63)	test_majacc   0.96 (  0.95)	Loss_d 0.234 (0.240)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.66 (  0.63)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.82 (  0.81)
Test: [  20/  26]	Loss 0.193 (0.234)	test_acc   0.94 (  0.90)	test_minacc   0.65 (  0.62)	test_majacc   0.98 (  0.96)	Loss_d 0.193 (0.234)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.65 (  0.62)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.85 (  0.81)
Test: [  26/  26]	Loss 0.153 (0.223)	test_acc   0.94 (  0.91)	test_minacc   0.79 (  0.64)	test_majacc   0.96 (  0.96)	Loss_d 0.153 (0.223)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.79 (  0.64)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.82it/s]
Test: [  0/  1]	Loss 2.241 (2.241)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.95 (  0.95)	Loss_d 2.241 (2.241)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 2.241 (2.241)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.95 (  0.95)	Loss_d 2.241 (2.241)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.50 (  0.50)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0393 (0.0434)	validation_time 0.0003 (0.0009)	train_time 0.0389 (0.0418)
record: (train_acc, test_acc) (0.9095000230073929, 0.40800002217292786)
last accs (train_acc, test_acc) (0.9095000230073929, 0.40800002217292786)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.33it/s] 15%|#5        | 4/26 [00:00<00:01, 16.09it/s] 31%|###       | 8/26 [00:00<00:00, 24.17it/s] 46%|####6     | 12/26 [00:00<00:00, 28.70it/s] 62%|######1   | 16/26 [00:00<00:00, 31.52it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.31it/s] 92%|#########2| 24/26 [00:00<00:00, 34.18it/s]100%|##########| 26/26 [00:00<00:00, 27.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.153 (0.226)	train_nll   0.15 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.71 ( 23.55)	train_acc   0.95 (  0.91)	train_minacc   0.76 (  0.60)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5335 (7.3005)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.95it/s] 23%|##3       | 6/26 [00:00<00:00, 33.30it/s]                                               23%|##3       | 6/26 [00:00<00:00, 33.30it/s] 42%|####2     | 11/26 [00:00<00:00, 39.70it/s] 62%|######1   | 16/26 [00:00<00:00, 43.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 43.65it/s] 81%|########  | 21/26 [00:00<00:00, 41.52it/s]100%|##########| 26/26 [00:00<00:00, 36.52it/s]
Test: [   0/  26]	Loss 0.217 (0.217)	test_acc   0.91 (  0.91)	test_minacc   0.66 (  0.66)	test_majacc   0.95 (  0.95)	Loss_d 0.217 (0.217)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.227 (0.250)	test_acc   0.92 (  0.90)	test_minacc   0.63 (  0.59)	test_majacc   0.97 (  0.96)	Loss_d 0.227 (0.250)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.63 (  0.59)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.81 (  0.80)
Test: [  20/  26]	Loss 0.154 (0.231)	test_acc   0.95 (  0.91)	test_minacc   0.81 (  0.62)	test_majacc   0.97 (  0.96)	Loss_d 0.154 (0.231)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.81 (  0.62)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.81 (  0.80)
Test: [  26/  26]	Loss 0.129 (0.220)	test_acc   0.96 (  0.91)	test_minacc   0.88 (  0.63)	test_majacc   0.98 (  0.96)	Loss_d 0.129 (0.220)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.88 (  0.63)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.79 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.63it/s]
Test: [  0/  1]	Loss 2.457 (2.457)	test_acc   0.41 (  0.41)	test_minacc   0.34 (  0.34)	test_majacc   0.98 (  0.98)	Loss_d 2.457 (2.457)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 2.457 (2.457)	test_acc   0.41 (  0.41)	test_minacc   0.34 (  0.34)	test_majacc   0.98 (  0.98)	Loss_d 2.457 (2.457)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.49 (  0.49)
Overall Timing[ 12/  1]	epoch_time 0.0388 (0.0430)	validation_time 0.0005 (0.0009)	train_time 0.0383 (0.0415)
record: (train_acc, test_acc) (0.9095000230073929, 0.40800002217292786)
last accs (train_acc, test_acc) (0.9112000215053558, 0.40700000524520874)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.48it/s] 19%|#9        | 5/26 [00:00<00:01, 19.31it/s] 35%|###4      | 9/26 [00:00<00:00, 25.73it/s] 50%|#####     | 13/26 [00:00<00:00, 29.06it/s] 65%|######5   | 17/26 [00:00<00:00, 30.90it/s] 81%|########  | 21/26 [00:00<00:00, 32.55it/s] 96%|#########6| 25/26 [00:00<00:00, 34.07it/s]100%|##########| 26/26 [00:00<00:00, 27.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.191 (0.221)	train_nll   0.19 (  0.22)	train_penalty   0.00 (  0.01)	weight_norm  24.09 ( 23.90)	train_acc   0.92 (  0.91)	train_minacc   0.79 (  0.63)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3212 (7.2318)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.72it/s] 23%|##3       | 6/26 [00:00<00:00, 28.23it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.23it/s] 42%|####2     | 11/26 [00:00<00:00, 36.22it/s] 65%|######5   | 17/26 [00:00<00:00, 41.92it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.92it/s] 85%|########4 | 22/26 [00:00<00:00, 40.21it/s]100%|##########| 26/26 [00:00<00:00, 36.09it/s]
Test: [   0/  26]	Loss 0.185 (0.185)	test_acc   0.92 (  0.92)	test_minacc   0.58 (  0.58)	test_majacc   0.98 (  0.98)	Loss_d 0.185 (0.185)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.259 (0.232)	test_acc   0.90 (  0.91)	test_minacc   0.54 (  0.57)	test_majacc   0.97 (  0.97)	Loss_d 0.259 (0.232)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.54 (  0.57)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.84 (  0.83)
Test: [  20/  26]	Loss 0.184 (0.225)	test_acc   0.93 (  0.91)	test_minacc   0.54 (  0.59)	test_majacc   0.99 (  0.97)	Loss_d 0.184 (0.225)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.54 (  0.59)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.87 (  0.83)
Test: [  26/  26]	Loss 0.141 (0.213)	test_acc   0.96 (  0.92)	test_minacc   0.82 (  0.61)	test_majacc   0.98 (  0.97)	Loss_d 0.141 (0.213)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.82 (  0.61)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.80 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.58it/s]
Test: [  0/  1]	Loss 2.456 (2.456)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 2.456 (2.456)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 2.456 (2.456)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 2.456 (2.456)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.62 (  0.62)
Overall Timing[ 13/  1]	epoch_time 0.0406 (0.0428)	validation_time 0.0003 (0.0008)	train_time 0.0402 (0.0414)
record: (train_acc, test_acc) (0.9095000230073929, 0.40800002217292786)
last accs (train_acc, test_acc) (0.9170000207424164, 0.3410000205039978)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.12it/s] 19%|#9        | 5/26 [00:00<00:00, 21.20it/s] 35%|###4      | 9/26 [00:00<00:00, 28.24it/s] 50%|#####     | 13/26 [00:00<00:00, 30.89it/s] 69%|######9   | 18/26 [00:00<00:00, 34.61it/s] 88%|########8 | 23/26 [00:00<00:00, 36.53it/s]100%|##########| 26/26 [00:00<00:00, 29.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.160 (0.193)	train_nll   0.16 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm  24.44 ( 24.26)	train_acc   0.93 (  0.92)	train_minacc   0.79 (  0.69)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5469 (7.5111)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.57it/s] 19%|#9        | 5/26 [00:00<00:00, 25.61it/s] 38%|###8      | 10/26 [00:00<00:00, 35.70it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.70it/s] 62%|######1   | 16/26 [00:00<00:00, 43.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 43.68it/s] 81%|########  | 21/26 [00:00<00:00, 40.59it/s]100%|##########| 26/26 [00:00<00:00, 35.62it/s]
Test: [   0/  26]	Loss 0.156 (0.156)	test_acc   0.93 (  0.93)	test_minacc   0.61 (  0.61)	test_majacc   0.99 (  0.99)	Loss_d 0.156 (0.156)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.216 (0.197)	test_acc   0.92 (  0.92)	test_minacc   0.54 (  0.55)	test_majacc   0.99 (  0.99)	Loss_d 0.216 (0.197)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.86 (  0.86)
Test: [  20/  26]	Loss 0.161 (0.188)	test_acc   0.94 (  0.92)	test_minacc   0.54 (  0.56)	test_majacc   1.00 (  0.99)	Loss_d 0.161 (0.188)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.54 (  0.56)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.88 (  0.85)
Test: [  26/  26]	Loss 0.108 (0.178)	test_acc   0.96 (  0.93)	test_minacc   0.76 (  0.58)	test_majacc   0.99 (  0.99)	Loss_d 0.108 (0.178)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.76 (  0.58)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.82 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.28it/s]
Test: [  0/  1]	Loss 2.675 (2.675)	test_acc   0.32 (  0.32)	test_minacc   0.24 (  0.24)	test_majacc   0.99 (  0.99)	Loss_d 2.675 (2.675)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 2.675 (2.675)	test_acc   0.32 (  0.32)	test_minacc   0.24 (  0.24)	test_majacc   0.99 (  0.99)	Loss_d 2.675 (2.675)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.65 (  0.65)
Overall Timing[ 14/  1]	epoch_time 0.0410 (0.0427)	validation_time 0.0006 (0.0008)	train_time 0.0403 (0.0414)
record: (train_acc, test_acc) (0.9095000230073929, 0.40800002217292786)
last accs (train_acc, test_acc) (0.927500018954277, 0.31800001859664917)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.45it/s] 19%|#9        | 5/26 [00:00<00:00, 23.95it/s] 35%|###4      | 9/26 [00:00<00:00, 29.44it/s] 50%|#####     | 13/26 [00:00<00:00, 31.95it/s] 65%|######5   | 17/26 [00:00<00:00, 33.40it/s] 81%|########  | 21/26 [00:00<00:00, 34.39it/s] 96%|#########6| 25/26 [00:00<00:00, 35.10it/s]100%|##########| 26/26 [00:00<00:00, 29.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.001 (0.070)	train_nll   0.30 (  0.23)	train_penalty   0.00 (  0.00)	weight_norm  24.75 ( 24.62)	train_acc   0.83 (  0.90)	train_minacc   0.68 (  0.72)	train_majacc   0.85 (  0.94)	train_corr   0.00 (  0.00)	l1 6.3595 (7.3415)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.36it/s] 31%|###       | 8/26 [00:00<00:00, 39.18it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.18it/s] 50%|#####     | 13/26 [00:00<00:00, 42.01it/s] 69%|######9   | 18/26 [00:00<00:00, 44.56it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.56it/s] 88%|########8 | 23/26 [00:00<00:00, 41.00it/s]100%|##########| 26/26 [00:00<00:00, 38.08it/s]
Test: [   0/  26]	Loss 0.336 (0.336)	test_acc   0.85 (  0.85)	test_minacc   0.71 (  0.71)	test_majacc   0.87 (  0.87)	Loss_d 0.336 (0.336)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.336 (0.298)	test_acc   0.85 (  0.87)	test_minacc   0.71 (  0.77)	test_majacc   0.88 (  0.88)	Loss_d 0.336 (0.298)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.71 (  0.77)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.66 (  0.65)
Test: [  20/  26]	Loss 0.322 (0.301)	test_acc   0.85 (  0.86)	test_minacc   0.73 (  0.77)	test_majacc   0.87 (  0.88)	Loss_d 0.322 (0.301)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.73 (  0.77)	test_majacc_d   0.87 (  0.88)	test_corr_d   0.67 (  0.66)
Test: [  26/  26]	Loss 0.305 (0.303)	test_acc   0.82 (  0.86)	test_minacc   0.68 (  0.76)	test_majacc   0.85 (  0.88)	Loss_d 0.305 (0.303)	test_acc_d   0.82 (  0.86)	test_minacc_d   0.68 (  0.76)	test_majacc_d   0.85 (  0.88)	test_corr_d   0.66 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.91it/s]
Test: [  0/  1]	Loss 1.579 (1.579)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.89 (  0.89)	Loss_d 1.579 (1.579)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 1.579 (1.579)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.89 (  0.89)	Loss_d 1.579 (1.579)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.43 (  0.43)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0388 (0.0425)	validation_time 0.0003 (0.0008)	train_time 0.0384 (0.0412)
record: (train_acc, test_acc) (0.8629000222086907, 0.4100000262260437)
last accs (train_acc, test_acc) (0.8629000222086907, 0.4100000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.16it/s] 15%|#5        | 4/26 [00:00<00:01, 18.66it/s] 31%|###       | 8/26 [00:00<00:00, 26.15it/s] 46%|####6     | 12/26 [00:00<00:00, 29.77it/s] 62%|######1   | 16/26 [00:00<00:00, 31.51it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.74it/s] 92%|#########2| 24/26 [00:00<00:00, 33.08it/s]100%|##########| 26/26 [00:00<00:00, 27.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.006 (0.004)	train_nll   0.43 (  0.36)	train_penalty   0.01 (  0.00)	weight_norm  24.83 ( 24.81)	train_acc   0.78 (  0.83)	train_minacc   0.74 (  0.78)	train_majacc   0.79 (  0.84)	train_corr   0.00 (  0.00)	l1 5.9496 (5.9343)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.98it/s] 19%|#9        | 5/26 [00:00<00:00, 24.66it/s]                                               19%|#9        | 5/26 [00:00<00:00, 24.66it/s] 42%|####2     | 11/26 [00:00<00:00, 38.08it/s] 62%|######1   | 16/26 [00:00<00:00, 41.57it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.57it/s] 81%|########  | 21/26 [00:00<00:00, 40.36it/s]100%|##########| 26/26 [00:00<00:00, 43.03it/s]100%|##########| 26/26 [00:00<00:00, 35.55it/s]
Test: [   0/  26]	Loss 0.429 (0.429)	test_acc   0.77 (  0.77)	test_minacc   0.63 (  0.63)	test_majacc   0.80 (  0.80)	Loss_d 0.429 (0.429)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.384 (0.372)	test_acc   0.82 (  0.82)	test_minacc   0.73 (  0.77)	test_majacc   0.84 (  0.83)	Loss_d 0.384 (0.372)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.73 (  0.77)	test_majacc_d   0.84 (  0.83)	test_corr_d   0.62 (  0.59)
Test: [  20/  26]	Loss 0.411 (0.386)	test_acc   0.79 (  0.81)	test_minacc   0.69 (  0.76)	test_majacc   0.81 (  0.82)	Loss_d 0.411 (0.386)	test_acc_d   0.79 (  0.81)	test_minacc_d   0.69 (  0.76)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.58 (  0.59)
Test: [  26/  26]	Loss 0.405 (0.384)	test_acc   0.80 (  0.81)	test_minacc   0.74 (  0.75)	test_majacc   0.81 (  0.82)	Loss_d 0.405 (0.384)	test_acc_d   0.80 (  0.81)	test_minacc_d   0.74 (  0.75)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.57 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.54it/s]
Test: [  0/  1]	Loss 1.333 (1.333)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.85 (  0.85)	Loss_d 1.333 (1.333)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.333 (1.333)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.85 (  0.85)	Loss_d 1.333 (1.333)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.21 (  0.21)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0417 (0.0424)	validation_time 0.0004 (0.0008)	train_time 0.0413 (0.0412)
record: (train_acc, test_acc) (0.8108000276684761, 0.534000039100647)
last accs (train_acc, test_acc) (0.8108000276684761, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.72it/s] 23%|##3       | 6/26 [00:00<00:00, 25.39it/s] 38%|###8      | 10/26 [00:00<00:00, 30.45it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.03it/s] 69%|######9   | 18/26 [00:00<00:00, 33.18it/s] 85%|########4 | 22/26 [00:00<00:00, 34.24it/s]100%|##########| 26/26 [00:00<00:00, 35.63it/s]100%|##########| 26/26 [00:00<00:00, 29.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.000 (0.003)	train_nll   0.40 (  0.36)	train_penalty   0.00 (  0.00)	weight_norm  24.85 ( 24.84)	train_acc   0.78 (  0.82)	train_minacc   0.82 (  0.76)	train_majacc   0.78 (  0.84)	train_corr   0.00 (  0.00)	l1 5.5820 (5.6774)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 19%|#9        | 5/26 [00:00<00:00, 25.13it/s] 38%|###8      | 10/26 [00:00<00:00, 34.94it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.94it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.03it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.66it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.66it/s] 96%|#########6| 25/26 [00:00<00:00, 39.98it/s]100%|##########| 26/26 [00:00<00:00, 34.22it/s]
Test: [   0/  26]	Loss 0.418 (0.418)	test_acc   0.80 (  0.80)	test_minacc   0.71 (  0.71)	test_majacc   0.82 (  0.82)	Loss_d 0.418 (0.418)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.413 (0.423)	test_acc   0.78 (  0.78)	test_minacc   0.76 (  0.78)	test_majacc   0.79 (  0.78)	Loss_d 0.413 (0.423)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.76 (  0.78)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.54 (  0.53)
Test: [  20/  26]	Loss 0.434 (0.424)	test_acc   0.77 (  0.78)	test_minacc   0.83 (  0.79)	test_majacc   0.76 (  0.78)	Loss_d 0.434 (0.424)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.83 (  0.79)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.52 (  0.53)
Test: [  26/  26]	Loss 0.421 (0.424)	test_acc   0.76 (  0.78)	test_minacc   0.79 (  0.79)	test_majacc   0.76 (  0.78)	Loss_d 0.421 (0.424)	test_acc_d   0.76 (  0.78)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.50 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.05it/s]
Test: [  0/  1]	Loss 1.195 (1.195)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.52)	test_majacc   0.82 (  0.82)	Loss_d 1.195 (1.195)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.195 (1.195)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.52)	test_majacc   0.82 (  0.82)	Loss_d 1.195 (1.195)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.13 (  0.13)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0386 (0.0422)	validation_time 0.0003 (0.0008)	train_time 0.0382 (0.0410)
record: (train_acc, test_acc) (0.7832000244855881, 0.5520000457763672)
last accs (train_acc, test_acc) (0.7832000244855881, 0.5520000457763672)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.93it/s]  8%|7         | 2/26 [00:00<00:02,  8.10it/s] 23%|##3       | 6/26 [00:00<00:01, 19.42it/s] 38%|###8      | 10/26 [00:00<00:00, 25.51it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.27it/s] 69%|######9   | 18/26 [00:00<00:00, 31.58it/s] 85%|########4 | 22/26 [00:00<00:00, 33.19it/s]100%|##########| 26/26 [00:00<00:00, 34.04it/s]100%|##########| 26/26 [00:00<00:00, 26.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.007 (0.004)	train_nll   0.30 (  0.37)	train_penalty   0.01 (  0.00)	weight_norm  24.87 ( 24.86)	train_acc   0.85 (  0.82)	train_minacc   0.79 (  0.77)	train_majacc   0.86 (  0.83)	train_corr   0.00 (  0.00)	l1 5.4614 (5.5762)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.97it/s] 12%|#1        | 3/26 [00:00<00:01, 14.41it/s] 31%|###       | 8/26 [00:00<00:00, 29.22it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.22it/s] 50%|#####     | 13/26 [00:00<00:00, 36.07it/s] 69%|######9   | 18/26 [00:00<00:00, 40.23it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.23it/s] 88%|########8 | 23/26 [00:00<00:00, 38.97it/s]100%|##########| 26/26 [00:00<00:00, 33.55it/s]
Test: [   0/  26]	Loss 0.310 (0.310)	test_acc   0.85 (  0.85)	test_minacc   0.73 (  0.73)	test_majacc   0.87 (  0.87)	Loss_d 0.310 (0.310)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.334 (0.322)	test_acc   0.84 (  0.85)	test_minacc   0.73 (  0.77)	test_majacc   0.85 (  0.86)	Loss_d 0.334 (0.322)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.73 (  0.77)	test_majacc_d   0.85 (  0.86)	test_corr_d   0.68 (  0.67)
Test: [  20/  26]	Loss 0.347 (0.326)	test_acc   0.83 (  0.85)	test_minacc   0.77 (  0.77)	test_majacc   0.84 (  0.86)	Loss_d 0.347 (0.326)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.84 (  0.86)	test_corr_d   0.68 (  0.68)
Test: [  26/  26]	Loss 0.307 (0.325)	test_acc   0.85 (  0.85)	test_minacc   0.76 (  0.76)	test_majacc   0.86 (  0.86)	Loss_d 0.307 (0.325)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.65 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.38it/s]
Test: [  0/  1]	Loss 1.335 (1.335)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.86 (  0.86)	Loss_d 1.335 (1.335)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 1.335 (1.335)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.86 (  0.86)	Loss_d 1.335 (1.335)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.34 (  0.34)
Overall Timing[ 18/  1]	epoch_time 0.0416 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0412 (0.0410)
record: (train_acc, test_acc) (0.7832000244855881, 0.5520000457763672)
last accs (train_acc, test_acc) (0.8451000230312348, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.93it/s] 19%|#9        | 5/26 [00:00<00:00, 22.43it/s] 35%|###4      | 9/26 [00:00<00:00, 29.42it/s] 50%|#####     | 13/26 [00:00<00:00, 33.28it/s] 65%|######5   | 17/26 [00:00<00:00, 33.61it/s] 81%|########  | 21/26 [00:00<00:00, 34.36it/s] 96%|#########6| 25/26 [00:00<00:00, 34.64it/s]100%|##########| 26/26 [00:00<00:00, 29.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.001)	train_nll   0.36 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  24.88 ( 24.88)	train_acc   0.82 (  0.83)	train_minacc   0.79 (  0.81)	train_majacc   0.82 (  0.83)	train_corr   0.00 (  0.00)	l1 5.8084 (5.7757)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.17it/s] 27%|##6       | 7/26 [00:00<00:00, 26.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.79it/s] 46%|####6     | 12/26 [00:00<00:00, 34.59it/s] 65%|######5   | 17/26 [00:00<00:00, 35.66it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.66it/s] 88%|########8 | 23/26 [00:00<00:00, 41.34it/s]100%|##########| 26/26 [00:00<00:00, 32.61it/s]
Test: [   0/  26]	Loss 0.336 (0.336)	test_acc   0.83 (  0.83)	test_minacc   0.85 (  0.85)	test_majacc   0.83 (  0.83)	Loss_d 0.336 (0.336)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.347 (0.336)	test_acc   0.82 (  0.83)	test_minacc   0.80 (  0.84)	test_majacc   0.82 (  0.83)	Loss_d 0.347 (0.336)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.80 (  0.84)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.61 (  0.60)
Test: [  20/  26]	Loss 0.372 (0.346)	test_acc   0.81 (  0.83)	test_minacc   0.79 (  0.82)	test_majacc   0.81 (  0.83)	Loss_d 0.372 (0.346)	test_acc_d   0.81 (  0.83)	test_minacc_d   0.79 (  0.82)	test_majacc_d   0.81 (  0.83)	test_corr_d   0.60 (  0.60)
Test: [  26/  26]	Loss 0.358 (0.347)	test_acc   0.81 (  0.82)	test_minacc   0.76 (  0.82)	test_majacc   0.82 (  0.83)	Loss_d 0.358 (0.347)	test_acc_d   0.81 (  0.82)	test_minacc_d   0.76 (  0.82)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.58 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.79it/s]
Test: [  0/  1]	Loss 1.320 (1.320)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.85 (  0.85)	Loss_d 1.320 (1.320)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.320 (1.320)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.85 (  0.85)	Loss_d 1.320 (1.320)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.21 (  0.21)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/94/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0405 (0.0421)	validation_time 0.0004 (0.0007)	train_time 0.0400 (0.0410)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.42it/s] 19%|#9        | 5/26 [00:00<00:01, 19.06it/s] 35%|###4      | 9/26 [00:00<00:00, 24.09it/s] 50%|#####     | 13/26 [00:00<00:00, 28.25it/s] 65%|######5   | 17/26 [00:00<00:00, 31.60it/s] 81%|########  | 21/26 [00:00<00:00, 33.91it/s] 96%|#########6| 25/26 [00:00<00:00, 35.73it/s]100%|##########| 26/26 [00:00<00:00, 28.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.35 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  24.89 ( 24.89)	train_acc   0.82 (  0.82)	train_minacc   0.76 (  0.82)	train_majacc   0.83 (  0.82)	train_corr   0.00 (  0.00)	l1 5.7643 (5.8188)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.71it/s] 27%|##6       | 7/26 [00:00<00:00, 35.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.60it/s] 46%|####6     | 12/26 [00:00<00:00, 37.18it/s] 65%|######5   | 17/26 [00:00<00:00, 40.31it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.31it/s] 85%|########4 | 22/26 [00:00<00:00, 41.90it/s]100%|##########| 26/26 [00:00<00:00, 36.93it/s]
Test: [   0/  26]	Loss 0.337 (0.337)	test_acc   0.82 (  0.82)	test_minacc   0.83 (  0.83)	test_majacc   0.82 (  0.82)	Loss_d 0.337 (0.337)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.334 (0.331)	test_acc   0.82 (  0.83)	test_minacc   0.80 (  0.83)	test_majacc   0.82 (  0.83)	Loss_d 0.334 (0.331)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.80 (  0.83)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.61 (  0.60)
Test: [  20/  26]	Loss 0.361 (0.340)	test_acc   0.80 (  0.83)	test_minacc   0.79 (  0.83)	test_majacc   0.80 (  0.83)	Loss_d 0.361 (0.340)	test_acc_d   0.80 (  0.83)	test_minacc_d   0.79 (  0.83)	test_majacc_d   0.80 (  0.83)	test_corr_d   0.61 (  0.61)
Test: [  26/  26]	Loss 0.351 (0.342)	test_acc   0.82 (  0.83)	test_minacc   0.76 (  0.82)	test_majacc   0.83 (  0.83)	Loss_d 0.351 (0.342)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.76 (  0.82)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.58 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.48it/s]
Test: [  0/  1]	Loss 1.320 (1.320)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.85 (  0.85)	Loss_d 1.320 (1.320)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 1.320 (1.320)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.85 (  0.85)	Loss_d 1.320 (1.320)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.22 (  0.22)
Overall Timing[ 20/  1]	epoch_time 0.0404 (0.0420)	validation_time 0.0004 (0.0007)	train_time 0.0400 (0.0409)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.8262000255584717, 0.5590000152587891)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.39it/s] 23%|##3       | 6/26 [00:00<00:00, 25.72it/s] 38%|###8      | 10/26 [00:00<00:00, 29.67it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.36it/s] 69%|######9   | 18/26 [00:00<00:00, 33.12it/s] 85%|########4 | 22/26 [00:00<00:00, 33.93it/s]100%|##########| 26/26 [00:00<00:00, 34.48it/s]100%|##########| 26/26 [00:00<00:00, 29.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.000 (0.000)	train_nll   0.34 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  24.89 ( 24.89)	train_acc   0.82 (  0.82)	train_minacc   0.74 (  0.82)	train_majacc   0.83 (  0.82)	train_corr   0.00 (  0.00)	l1 5.7425 (5.8450)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 27%|##6       | 7/26 [00:00<00:00, 33.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.32it/s] 46%|####6     | 12/26 [00:00<00:00, 39.32it/s] 65%|######5   | 17/26 [00:00<00:00, 36.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.69it/s] 85%|########4 | 22/26 [00:00<00:00, 40.10it/s]100%|##########| 26/26 [00:00<00:00, 34.43it/s]
Test: [   0/  26]	Loss 0.336 (0.336)	test_acc   0.83 (  0.83)	test_minacc   0.81 (  0.81)	test_majacc   0.83 (  0.83)	Loss_d 0.336 (0.336)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.317 (0.321)	test_acc   0.82 (  0.84)	test_minacc   0.80 (  0.82)	test_majacc   0.83 (  0.85)	Loss_d 0.317 (0.321)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.80 (  0.82)	test_majacc_d   0.83 (  0.85)	test_corr_d   0.63 (  0.63)
Test: [  20/  26]	Loss 0.349 (0.328)	test_acc   0.81 (  0.84)	test_minacc   0.79 (  0.82)	test_majacc   0.81 (  0.84)	Loss_d 0.349 (0.328)	test_acc_d   0.81 (  0.84)	test_minacc_d   0.79 (  0.82)	test_majacc_d   0.81 (  0.84)	test_corr_d   0.63 (  0.63)
Test: [  26/  26]	Loss 0.341 (0.331)	test_acc   0.82 (  0.83)	test_minacc   0.74 (  0.81)	test_majacc   0.83 (  0.84)	Loss_d 0.341 (0.331)	test_acc_d   0.82 (  0.83)	test_minacc_d   0.74 (  0.81)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.60 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.88it/s]
Test: [  0/  1]	Loss 1.354 (1.354)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.85 (  0.85)	Loss_d 1.354 (1.354)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 1.354 (1.354)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.85 (  0.85)	Loss_d 1.354 (1.354)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.26 (  0.26)
Overall Timing[ 21/  1]	epoch_time 0.0400 (0.0419)	validation_time 0.0003 (0.0007)	train_time 0.0396 (0.0409)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.8340000237226486, 0.534000039100647)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.84it/s] 23%|##3       | 6/26 [00:00<00:00, 25.74it/s] 38%|###8      | 10/26 [00:00<00:00, 29.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.99it/s] 69%|######9   | 18/26 [00:00<00:00, 33.15it/s] 85%|########4 | 22/26 [00:00<00:00, 34.16it/s]100%|##########| 26/26 [00:00<00:00, 34.81it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.000)	train_nll   0.34 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  24.89 ( 24.89)	train_acc   0.82 (  0.82)	train_minacc   0.74 (  0.81)	train_majacc   0.84 (  0.83)	train_corr   0.00 (  0.00)	l1 5.7466 (5.8685)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.16it/s] 27%|##6       | 7/26 [00:00<00:00, 27.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.13it/s] 46%|####6     | 12/26 [00:00<00:00, 35.27it/s] 65%|######5   | 17/26 [00:00<00:00, 39.02it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.02it/s] 85%|########4 | 22/26 [00:00<00:00, 40.85it/s]100%|##########| 26/26 [00:00<00:00, 33.74it/s]
Test: [   0/  26]	Loss 0.334 (0.334)	test_acc   0.83 (  0.83)	test_minacc   0.81 (  0.81)	test_majacc   0.84 (  0.84)	Loss_d 0.334 (0.334)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.300 (0.313)	test_acc   0.85 (  0.85)	test_minacc   0.80 (  0.81)	test_majacc   0.86 (  0.85)	Loss_d 0.300 (0.313)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.80 (  0.81)	test_majacc_d   0.86 (  0.85)	test_corr_d   0.65 (  0.64)
Test: [  20/  26]	Loss 0.341 (0.318)	test_acc   0.82 (  0.84)	test_minacc   0.79 (  0.81)	test_majacc   0.82 (  0.85)	Loss_d 0.341 (0.318)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.79 (  0.81)	test_majacc_d   0.82 (  0.85)	test_corr_d   0.64 (  0.64)
Test: [  26/  26]	Loss 0.338 (0.322)	test_acc   0.82 (  0.84)	test_minacc   0.74 (  0.80)	test_majacc   0.84 (  0.85)	Loss_d 0.338 (0.322)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.74 (  0.80)	test_majacc_d   0.84 (  0.85)	test_corr_d   0.62 (  0.64)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.24it/s]
Test: [  0/  1]	Loss 1.378 (1.378)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.85 (  0.85)	Loss_d 1.378 (1.378)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.378 (1.378)	test_acc   0.53 (  0.53)	test_minacc   0.49 (  0.49)	test_majacc   0.85 (  0.85)	Loss_d 1.378 (1.378)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.29 (  0.29)
Overall Timing[ 22/  1]	epoch_time 0.0413 (0.0419)	validation_time 0.0004 (0.0007)	train_time 0.0408 (0.0409)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.8391000259518623, 0.5270000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.77it/s] 19%|#9        | 5/26 [00:00<00:01, 15.50it/s] 31%|###       | 8/26 [00:00<00:00, 19.05it/s] 46%|####6     | 12/26 [00:00<00:00, 24.43it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.57it/s] 88%|########8 | 23/26 [00:00<00:00, 29.25it/s]100%|##########| 26/26 [00:01<00:00, 23.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 5.815060615539551
set z to 5.756910009384155
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 386 tensor(-0.0079, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 222 tensor(-0.0092, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 187 tensor(0.0132, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 181 tensor(0.0060, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 178 tensor(0.0017, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.002 (0.074)	train_nll   0.52 (  0.49)	train_penalty   0.00 (  0.07)	weight_norm  27.39 ( 25.59)	train_acc   0.80 (  0.76)	train_minacc   0.53 (  0.65)	train_majacc   0.84 (  0.78)	train_corr   0.00 (  0.00)	l1 6.8550 (7.1082)	zero_count 0.0000 (41.6520)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 23%|##3       | 6/26 [00:00<00:00, 27.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.49it/s] 42%|####2     | 11/26 [00:00<00:00, 35.25it/s] 62%|######1   | 16/26 [00:00<00:00, 40.12it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.12it/s] 81%|########  | 21/26 [00:00<00:00, 37.27it/s]100%|##########| 26/26 [00:00<00:00, 40.82it/s]100%|##########| 26/26 [00:00<00:00, 33.50it/s]
Test: [   0/  26]	Loss 0.572 (0.572)	test_acc   0.55 (  0.55)	test_minacc   0.44 (  0.44)	test_majacc   0.57 (  0.57)	Loss_d 0.572 (0.572)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.561 (0.593)	test_acc   0.54 (  0.57)	test_minacc   0.46 (  0.50)	test_majacc   0.55 (  0.58)	Loss_d 0.561 (0.593)	test_acc_d   0.54 (  0.57)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.55 (  0.58)	test_corr_d   0.52 (  0.52)
Test: [  20/  26]	Loss 0.590 (0.595)	test_acc   0.53 (  0.57)	test_minacc   0.40 (  0.47)	test_majacc   0.55 (  0.59)	Loss_d 0.590 (0.595)	test_acc_d   0.53 (  0.57)	test_minacc_d   0.40 (  0.47)	test_majacc_d   0.55 (  0.59)	test_corr_d   0.54 (  0.52)
Test: [  26/  26]	Loss 0.590 (0.590)	test_acc   0.52 (  0.57)	test_minacc   0.62 (  0.48)	test_majacc   0.50 (  0.59)	Loss_d 0.590 (0.590)	test_acc_d   0.52 (  0.57)	test_minacc_d   0.62 (  0.48)	test_majacc_d   0.50 (  0.59)	test_corr_d   0.55 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.15it/s]
Test: [  0/  1]	Loss 1.632 (1.632)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.632 (1.632)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 1.632 (1.632)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.632 (1.632)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.29 (  0.29)
Overall Timing[ 23/  1]	epoch_time 0.0413 (0.0419)	validation_time 0.0004 (0.0007)	train_time 0.0408 (0.0409)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.573100013911724, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.26it/s] 15%|#5        | 4/26 [00:00<00:01, 13.78it/s] 31%|###       | 8/26 [00:00<00:00, 21.00it/s] 46%|####6     | 12/26 [00:00<00:00, 25.26it/s] 62%|######1   | 16/26 [00:00<00:00, 29.00it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.20it/s] 92%|#########2| 24/26 [00:00<00:00, 30.93it/s]100%|##########| 26/26 [00:01<00:00, 24.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 177 tensor(0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 178 tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 184 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 190 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 231 tensor(-0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 326 tensor(-0.0003, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.004)	train_nll   0.64 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm  28.99 ( 28.49)	train_acc   0.50 (  0.70)	train_minacc   0.62 (  0.48)	train_majacc   0.49 (  0.74)	train_corr   0.00 (  0.00)	l1 5.7837 (6.0405)	zero_count 0.0000 (75.1920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.82it/s] 27%|##6       | 7/26 [00:00<00:00, 35.49it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.49it/s] 50%|#####     | 13/26 [00:00<00:00, 42.76it/s] 69%|######9   | 18/26 [00:00<00:00, 43.91it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.91it/s] 88%|########8 | 23/26 [00:00<00:00, 43.46it/s]100%|##########| 26/26 [00:00<00:00, 38.74it/s]
Test: [   0/  26]	Loss 0.652 (0.652)	test_acc   0.47 (  0.47)	test_minacc   0.47 (  0.47)	test_majacc   0.47 (  0.47)	Loss_d 0.652 (0.652)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.646 (0.653)	test_acc   0.48 (  0.50)	test_minacc   0.49 (  0.53)	test_majacc   0.48 (  0.50)	Loss_d 0.646 (0.653)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.49 (  0.53)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  20/  26]	Loss 0.650 (0.661)	test_acc   0.47 (  0.50)	test_minacc   0.38 (  0.49)	test_majacc   0.49 (  0.50)	Loss_d 0.650 (0.661)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.38 (  0.49)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  26/  26]	Loss 0.653 (0.658)	test_acc   0.50 (  0.50)	test_minacc   0.62 (  0.51)	test_majacc   0.49 (  0.50)	Loss_d 0.653 (0.658)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.62 (  0.51)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.48 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.49it/s]
Test: [  0/  1]	Loss 1.377 (1.377)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.377 (1.377)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 1.377 (1.377)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.377 (1.377)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.40 (  0.40)
Overall Timing[ 24/  1]	epoch_time 0.0433 (0.0419)	validation_time 0.0003 (0.0007)	train_time 0.0430 (0.0409)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.5000000106692314, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.94it/s] 19%|#9        | 5/26 [00:00<00:00, 24.83it/s] 35%|###4      | 9/26 [00:00<00:00, 28.50it/s] 50%|#####     | 13/26 [00:00<00:00, 30.81it/s] 65%|######5   | 17/26 [00:00<00:00, 31.98it/s] 81%|########  | 21/26 [00:00<00:00, 31.19it/s] 96%|#########6| 25/26 [00:00<00:00, 32.63it/s]100%|##########| 26/26 [00:00<00:00, 28.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 325 tensor(-9.0459e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 281 tensor(-0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 285 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 287 tensor(-0.0008, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 321 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.002)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.18 ( 29.11)	train_acc   0.35 (  0.52)	train_minacc   0.88 (  0.68)	train_majacc   0.27 (  0.49)	train_corr   0.00 (  0.00)	l1 5.7403 (5.7869)	zero_count 0.0000 (48.3990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.37it/s] 31%|###       | 8/26 [00:00<00:00, 39.60it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.60it/s] 50%|#####     | 13/26 [00:00<00:00, 37.71it/s] 69%|######9   | 18/26 [00:00<00:00, 41.34it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.34it/s] 88%|########8 | 23/26 [00:00<00:00, 43.66it/s]100%|##########| 26/26 [00:00<00:00, 37.37it/s]
Test: [   0/  26]	Loss 0.616 (0.616)	test_acc   0.37 (  0.37)	test_minacc   0.92 (  0.92)	test_majacc   0.27 (  0.27)	Loss_d 0.616 (0.616)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.27 (  0.27)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.684 (0.629)	test_acc   0.36 (  0.38)	test_minacc   0.86 (  0.89)	test_majacc   0.27 (  0.29)	Loss_d 0.684 (0.629)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.86 (  0.89)	test_majacc_d   0.27 (  0.29)	test_corr_d   0.36 (  0.37)
Test: [  20/  26]	Loss 0.618 (0.623)	test_acc   0.36 (  0.38)	test_minacc   0.81 (  0.88)	test_majacc   0.30 (  0.29)	Loss_d 0.618 (0.623)	test_acc_d   0.36 (  0.38)	test_minacc_d   0.81 (  0.88)	test_majacc_d   0.30 (  0.29)	test_corr_d   0.41 (  0.37)
Test: [  26/  26]	Loss 0.621 (0.620)	test_acc   0.35 (  0.38)	test_minacc   0.88 (  0.88)	test_majacc   0.27 (  0.29)	Loss_d 0.621 (0.620)	test_acc_d   0.35 (  0.38)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.27 (  0.29)	test_corr_d   0.34 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.19it/s]
Test: [  0/  1]	Loss 1.438 (1.438)	test_acc   0.73 (  0.73)	test_minacc   0.77 (  0.77)	test_majacc   0.38 (  0.38)	Loss_d 1.438 (1.438)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.438 (1.438)	test_acc   0.73 (  0.73)	test_minacc   0.77 (  0.77)	test_majacc   0.38 (  0.38)	Loss_d 1.438 (1.438)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.15 (  0.15)
Overall Timing[ 25/  1]	epoch_time 0.0407 (0.0419)	validation_time 0.0003 (0.0006)	train_time 0.0403 (0.0409)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.3791000076830387, 0.7310000061988831)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.74it/s] 19%|#9        | 5/26 [00:00<00:00, 23.26it/s] 35%|###4      | 9/26 [00:00<00:00, 29.76it/s] 50%|#####     | 13/26 [00:00<00:00, 30.25it/s] 65%|######5   | 17/26 [00:00<00:00, 30.34it/s] 81%|########  | 21/26 [00:00<00:00, 31.17it/s] 96%|#########6| 25/26 [00:00<00:00, 33.49it/s]100%|##########| 26/26 [00:00<00:00, 28.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 380 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 354 tensor(-0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 345 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.001)	train_nll   0.65 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  29.23 ( 29.21)	train_acc   0.48 (  0.46)	train_minacc   0.91 (  0.87)	train_majacc   0.41 (  0.38)	train_corr   0.00 (  0.00)	l1 5.7504 (5.7478)	zero_count 0.0000 (17.7060)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.93it/s] 31%|###       | 8/26 [00:00<00:00, 36.86it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.86it/s] 46%|####6     | 12/26 [00:00<00:00, 36.74it/s] 69%|######9   | 18/26 [00:00<00:00, 43.37it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.37it/s] 88%|########8 | 23/26 [00:00<00:00, 42.51it/s]100%|##########| 26/26 [00:00<00:00, 37.66it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.55 (  0.55)	test_minacc   0.88 (  0.88)	test_majacc   0.49 (  0.49)	Loss_d 0.634 (0.634)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.635 (0.635)	test_acc   0.51 (  0.53)	test_minacc   0.83 (  0.83)	test_majacc   0.45 (  0.47)	Loss_d 0.635 (0.635)	test_acc_d   0.51 (  0.53)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.26 (  0.26)
Test: [  20/  26]	Loss 0.632 (0.636)	test_acc   0.53 (  0.52)	test_minacc   0.77 (  0.82)	test_majacc   0.50 (  0.47)	Loss_d 0.632 (0.636)	test_acc_d   0.53 (  0.52)	test_minacc_d   0.77 (  0.82)	test_majacc_d   0.50 (  0.47)	test_corr_d   0.29 (  0.26)
Test: [  26/  26]	Loss 0.651 (0.636)	test_acc   0.51 (  0.52)	test_minacc   0.88 (  0.83)	test_majacc   0.45 (  0.47)	Loss_d 0.651 (0.636)	test_acc_d   0.51 (  0.52)	test_minacc_d   0.88 (  0.83)	test_majacc_d   0.45 (  0.47)	test_corr_d   0.20 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.73it/s]
Test: [  0/  1]	Loss 1.068 (1.068)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.50 (  0.50)	Loss_d 1.068 (1.068)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 1.068 (1.068)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.50 (  0.50)	Loss_d 1.068 (1.068)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.09 ( -0.09)
Overall Timing[ 26/  1]	epoch_time 0.0378 (0.0417)	validation_time 0.0005 (0.0006)	train_time 0.0373 (0.0408)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.5213000165820122, 0.612000048160553)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.46it/s] 23%|##3       | 6/26 [00:00<00:00, 26.38it/s] 38%|###8      | 10/26 [00:00<00:00, 30.24it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.93it/s] 69%|######9   | 18/26 [00:00<00:00, 33.20it/s] 85%|########4 | 22/26 [00:00<00:00, 34.11it/s]100%|##########| 26/26 [00:00<00:00, 34.60it/s]100%|##########| 26/26 [00:00<00:00, 29.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.23)	train_acc   0.48 (  0.49)	train_minacc   0.82 (  0.83)	train_majacc   0.42 (  0.43)	train_corr   0.00 (  0.00)	l1 5.7006 (5.7247)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.56it/s] 31%|###       | 8/26 [00:00<00:00, 38.61it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.61it/s] 50%|#####     | 13/26 [00:00<00:00, 37.25it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.68it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.68it/s] 96%|#########6| 25/26 [00:00<00:00, 45.18it/s]100%|##########| 26/26 [00:00<00:00, 38.78it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.43 (  0.43)	test_minacc   0.85 (  0.85)	test_majacc   0.36 (  0.36)	Loss_d 0.636 (0.636)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.36 (  0.36)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.635 (0.637)	test_acc   0.38 (  0.41)	test_minacc   0.83 (  0.85)	test_majacc   0.30 (  0.33)	Loss_d 0.635 (0.637)	test_acc_d   0.38 (  0.41)	test_minacc_d   0.83 (  0.85)	test_majacc_d   0.30 (  0.33)	test_corr_d   0.26 (  0.26)
Test: [  20/  26]	Loss 0.633 (0.637)	test_acc   0.41 (  0.41)	test_minacc   0.79 (  0.84)	test_majacc   0.36 (  0.33)	Loss_d 0.633 (0.637)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.79 (  0.84)	test_majacc_d   0.36 (  0.33)	test_corr_d   0.30 (  0.26)
Test: [  26/  26]	Loss 0.649 (0.637)	test_acc   0.48 (  0.41)	test_minacc   0.82 (  0.84)	test_majacc   0.42 (  0.34)	Loss_d 0.649 (0.637)	test_acc_d   0.48 (  0.41)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.42 (  0.34)	test_corr_d   0.23 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.79it/s]
Test: [  0/  1]	Loss 1.045 (1.045)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.48 (  0.48)	Loss_d 1.045 (1.045)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 1.045 (1.045)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.48 (  0.48)	Loss_d 1.045 (1.045)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 27/  1]	epoch_time 0.0408 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0404 (0.0408)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4139000053703785, 0.5649999976158142)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.90it/s] 19%|#9        | 5/26 [00:00<00:01, 19.83it/s] 31%|###       | 8/26 [00:00<00:00, 23.56it/s] 46%|####6     | 12/26 [00:00<00:00, 28.23it/s] 62%|######1   | 16/26 [00:00<00:00, 30.34it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.55it/s] 92%|#########2| 24/26 [00:00<00:00, 34.23it/s]100%|##########| 26/26 [00:00<00:00, 27.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.45 (  0.39)	train_minacc   0.76 (  0.81)	train_majacc   0.40 (  0.31)	train_corr   0.00 (  0.00)	l1 5.7256 (5.7283)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.58it/s] 15%|#5        | 4/26 [00:00<00:01, 17.99it/s] 35%|###4      | 9/26 [00:00<00:00, 29.91it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.91it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.12it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.01it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.01it/s] 92%|#########2| 24/26 [00:00<00:00, 39.44it/s]100%|##########| 26/26 [00:00<00:00, 32.79it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.41 (  0.41)	test_minacc   0.76 (  0.76)	test_majacc   0.34 (  0.34)	Loss_d 0.635 (0.635)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.34 (  0.34)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.634 (0.637)	test_acc   0.37 (  0.38)	test_minacc   0.81 (  0.81)	test_majacc   0.29 (  0.31)	Loss_d 0.634 (0.637)	test_acc_d   0.37 (  0.38)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.29 (  0.31)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.632 (0.637)	test_acc   0.37 (  0.38)	test_minacc   0.77 (  0.80)	test_majacc   0.31 (  0.31)	Loss_d 0.632 (0.637)	test_acc_d   0.37 (  0.38)	test_minacc_d   0.77 (  0.80)	test_majacc_d   0.31 (  0.31)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.649 (0.637)	test_acc   0.45 (  0.38)	test_minacc   0.76 (  0.80)	test_majacc   0.40 (  0.31)	Loss_d 0.649 (0.637)	test_acc_d   0.45 (  0.38)	test_minacc_d   0.76 (  0.80)	test_majacc_d   0.40 (  0.31)	test_corr_d   0.25 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.32it/s]
Test: [  0/  1]	Loss 1.060 (1.060)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.50 (  0.50)	Loss_d 1.060 (1.060)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 1.060 (1.060)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.50 (  0.50)	Loss_d 1.060 (1.060)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Overall Timing[ 28/  1]	epoch_time 0.0408 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0404 (0.0408)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.38440000715851785, 0.5390000343322754)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.67it/s] 23%|##3       | 6/26 [00:00<00:00, 26.95it/s] 38%|###8      | 10/26 [00:00<00:00, 30.95it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.74it/s] 69%|######9   | 18/26 [00:00<00:00, 31.82it/s] 85%|########4 | 22/26 [00:00<00:00, 33.35it/s]100%|##########| 26/26 [00:00<00:00, 34.03it/s]100%|##########| 26/26 [00:00<00:00, 29.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 426 tensor(-9.7393e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.40)	train_minacc   0.71 (  0.74)	train_majacc   0.45 (  0.34)	train_corr   0.00 (  0.00)	l1 5.7328 (5.7475)	zero_count 0.0000 (3.3150)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.48it/s] 23%|##3       | 6/26 [00:00<00:00, 32.38it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.38it/s] 42%|####2     | 11/26 [00:00<00:00, 38.59it/s] 62%|######1   | 16/26 [00:00<00:00, 42.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.50it/s] 81%|########  | 21/26 [00:00<00:00, 39.20it/s]100%|##########| 26/26 [00:00<00:00, 35.71it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.42 (  0.42)	test_minacc   0.69 (  0.69)	test_majacc   0.37 (  0.37)	Loss_d 0.635 (0.635)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.37 (  0.37)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.634 (0.637)	test_acc   0.38 (  0.41)	test_minacc   0.71 (  0.73)	test_majacc   0.32 (  0.35)	Loss_d 0.634 (0.637)	test_acc_d   0.38 (  0.41)	test_minacc_d   0.71 (  0.73)	test_majacc_d   0.32 (  0.35)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.632 (0.637)	test_acc   0.40 (  0.41)	test_minacc   0.67 (  0.71)	test_majacc   0.36 (  0.35)	Loss_d 0.632 (0.637)	test_acc_d   0.40 (  0.41)	test_minacc_d   0.67 (  0.71)	test_majacc_d   0.36 (  0.35)	test_corr_d   0.32 (  0.28)
Test: [  26/  26]	Loss 0.649 (0.637)	test_acc   0.48 (  0.41)	test_minacc   0.71 (  0.72)	test_majacc   0.45 (  0.36)	Loss_d 0.649 (0.637)	test_acc_d   0.48 (  0.41)	test_minacc_d   0.71 (  0.72)	test_majacc_d   0.45 (  0.36)	test_corr_d   0.26 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.77it/s]
Test: [  0/  1]	Loss 1.074 (1.074)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.074 (1.074)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.074 (1.074)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 1.074 (1.074)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 29/  1]	epoch_time 0.0416 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0412 (0.0408)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4104000059962273, 0.5100000500679016)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.30it/s] 23%|##3       | 6/26 [00:00<00:00, 26.44it/s] 38%|###8      | 10/26 [00:00<00:00, 29.68it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.40it/s] 69%|######9   | 18/26 [00:00<00:00, 30.00it/s] 85%|########4 | 22/26 [00:00<00:00, 31.67it/s]100%|##########| 26/26 [00:00<00:00, 32.75it/s]100%|##########| 26/26 [00:00<00:00, 28.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 429 tensor(-1.0489e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.41)	train_minacc   0.71 (  0.70)	train_majacc   0.44 (  0.36)	train_corr   0.00 (  0.00)	l1 5.7392 (5.7459)	zero_count 0.0000 (3.1980)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.53it/s] 23%|##3       | 6/26 [00:00<00:00, 30.96it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.96it/s] 42%|####2     | 11/26 [00:00<00:00, 38.39it/s] 62%|######1   | 16/26 [00:00<00:00, 42.42it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.42it/s] 81%|########  | 21/26 [00:00<00:00, 42.72it/s]100%|##########| 26/26 [00:00<00:00, 44.51it/s]100%|##########| 26/26 [00:00<00:00, 37.40it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.42 (  0.42)	test_minacc   0.63 (  0.63)	test_majacc   0.38 (  0.38)	Loss_d 0.636 (0.636)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.38 (  0.38)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.635 (0.638)	test_acc   0.38 (  0.41)	test_minacc   0.69 (  0.70)	test_majacc   0.33 (  0.36)	Loss_d 0.635 (0.638)	test_acc_d   0.38 (  0.41)	test_minacc_d   0.69 (  0.70)	test_majacc_d   0.33 (  0.36)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.633 (0.638)	test_acc   0.40 (  0.41)	test_minacc   0.63 (  0.68)	test_majacc   0.37 (  0.36)	Loss_d 0.633 (0.638)	test_acc_d   0.40 (  0.41)	test_minacc_d   0.63 (  0.68)	test_majacc_d   0.37 (  0.36)	test_corr_d   0.32 (  0.28)
Test: [  26/  26]	Loss 0.651 (0.638)	test_acc   0.48 (  0.41)	test_minacc   0.71 (  0.69)	test_majacc   0.44 (  0.37)	Loss_d 0.651 (0.638)	test_acc_d   0.48 (  0.41)	test_minacc_d   0.71 (  0.69)	test_majacc_d   0.44 (  0.37)	test_corr_d   0.25 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.83it/s]
Test: [  0/  1]	Loss 1.074 (1.074)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.074 (1.074)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.074 (1.074)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.074 (1.074)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 30/  1]	epoch_time 0.0422 (0.0417)	validation_time 0.0003 (0.0006)	train_time 0.0418 (0.0408)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4140000055730343, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.73it/s] 19%|#9        | 5/26 [00:00<00:01, 15.21it/s] 35%|###4      | 9/26 [00:00<00:00, 21.60it/s] 50%|#####     | 13/26 [00:00<00:00, 26.12it/s] 65%|######5   | 17/26 [00:00<00:00, 26.91it/s] 81%|########  | 21/26 [00:00<00:00, 29.45it/s] 96%|#########6| 25/26 [00:00<00:00, 31.49it/s]100%|##########| 26/26 [00:01<00:00, 24.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 427 tensor(-1.5837e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.41)	train_minacc   0.68 (  0.66)	train_majacc   0.44 (  0.37)	train_corr   0.00 (  0.00)	l1 5.7428 (5.7457)	zero_count 0.0000 (3.2760)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.11it/s] 27%|##6       | 7/26 [00:00<00:00, 31.05it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.05it/s] 46%|####6     | 12/26 [00:00<00:00, 37.89it/s] 65%|######5   | 17/26 [00:00<00:00, 37.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.98it/s] 85%|########4 | 22/26 [00:00<00:00, 41.52it/s]100%|##########| 26/26 [00:00<00:00, 34.73it/s]
Test: [   0/  26]	Loss 0.637 (0.637)	test_acc   0.42 (  0.42)	test_minacc   0.59 (  0.59)	test_majacc   0.39 (  0.39)	Loss_d 0.637 (0.637)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.636 (0.639)	test_acc   0.39 (  0.42)	test_minacc   0.64 (  0.67)	test_majacc   0.35 (  0.38)	Loss_d 0.636 (0.639)	test_acc_d   0.39 (  0.42)	test_minacc_d   0.64 (  0.67)	test_majacc_d   0.35 (  0.38)	test_corr_d   0.28 (  0.27)
Test: [  20/  26]	Loss 0.634 (0.639)	test_acc   0.41 (  0.41)	test_minacc   0.56 (  0.64)	test_majacc   0.38 (  0.37)	Loss_d 0.634 (0.639)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.56 (  0.64)	test_majacc_d   0.38 (  0.37)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.653 (0.639)	test_acc   0.48 (  0.42)	test_minacc   0.68 (  0.65)	test_majacc   0.44 (  0.38)	Loss_d 0.653 (0.639)	test_acc_d   0.48 (  0.42)	test_minacc_d   0.68 (  0.65)	test_majacc_d   0.44 (  0.38)	test_corr_d   0.25 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.91it/s]
Test: [  0/  1]	Loss 1.073 (1.073)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.073 (1.073)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.073 (1.073)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.073 (1.073)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 31/  1]	epoch_time 0.0380 (0.0416)	validation_time 0.0005 (0.0006)	train_time 0.0375 (0.0407)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4191000050604343, 0.503000020980835)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.36it/s] 19%|#9        | 5/26 [00:00<00:00, 22.91it/s] 35%|###4      | 9/26 [00:00<00:00, 28.18it/s] 50%|#####     | 13/26 [00:00<00:00, 31.14it/s] 65%|######5   | 17/26 [00:00<00:00, 32.64it/s] 81%|########  | 21/26 [00:00<00:00, 33.51it/s] 96%|#########6| 25/26 [00:00<00:00, 34.29it/s]100%|##########| 26/26 [00:00<00:00, 29.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.42)	train_minacc   0.68 (  0.64)	train_majacc   0.44 (  0.38)	train_corr   0.00 (  0.00)	l1 5.7460 (5.7470)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 27%|##6       | 7/26 [00:00<00:00, 33.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.68it/s] 46%|####6     | 12/26 [00:00<00:00, 40.10it/s] 65%|######5   | 17/26 [00:00<00:00, 42.84it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.84it/s] 85%|########4 | 22/26 [00:00<00:00, 41.24it/s]100%|##########| 26/26 [00:00<00:00, 37.28it/s]
Test: [   0/  26]	Loss 0.638 (0.638)	test_acc   0.42 (  0.42)	test_minacc   0.58 (  0.58)	test_majacc   0.39 (  0.39)	Loss_d 0.638 (0.638)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.39 (  0.39)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.636 (0.640)	test_acc   0.39 (  0.42)	test_minacc   0.63 (  0.65)	test_majacc   0.35 (  0.38)	Loss_d 0.636 (0.640)	test_acc_d   0.39 (  0.42)	test_minacc_d   0.63 (  0.65)	test_majacc_d   0.35 (  0.38)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.634 (0.640)	test_acc   0.41 (  0.42)	test_minacc   0.56 (  0.62)	test_majacc   0.39 (  0.38)	Loss_d 0.634 (0.640)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.56 (  0.62)	test_majacc_d   0.39 (  0.38)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.654 (0.640)	test_acc   0.48 (  0.42)	test_minacc   0.68 (  0.64)	test_majacc   0.44 (  0.38)	Loss_d 0.654 (0.640)	test_acc_d   0.48 (  0.42)	test_minacc_d   0.68 (  0.64)	test_majacc_d   0.44 (  0.38)	test_corr_d   0.24 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.67it/s]
Test: [  0/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 32/  1]	epoch_time 0.0393 (0.0415)	validation_time 0.0004 (0.0006)	train_time 0.0389 (0.0406)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4205000061392784, 0.5040000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s] 15%|#5        | 4/26 [00:00<00:01, 17.86it/s] 31%|###       | 8/26 [00:00<00:00, 25.00it/s] 46%|####6     | 12/26 [00:00<00:00, 29.02it/s] 62%|######1   | 16/26 [00:00<00:00, 31.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.01it/s] 92%|#########2| 24/26 [00:00<00:00, 32.29it/s]100%|##########| 26/26 [00:00<00:00, 27.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 415 tensor(-4.3047e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.42)	train_minacc   0.62 (  0.62)	train_majacc   0.45 (  0.39)	train_corr   0.00 (  0.00)	l1 5.7494 (5.7497)	zero_count 0.0000 (3.7440)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.79it/s] 15%|#5        | 4/26 [00:00<00:01, 18.07it/s] 38%|###8      | 10/26 [00:00<00:00, 35.79it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.79it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.52it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 37.52it/s] 81%|########  | 21/26 [00:00<00:00, 43.70it/s]100%|##########| 26/26 [00:00<00:00, 36.74it/s]
Test: [   0/  26]	Loss 0.638 (0.638)	test_acc   0.42 (  0.42)	test_minacc   0.53 (  0.53)	test_majacc   0.40 (  0.40)	Loss_d 0.638 (0.638)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.637 (0.641)	test_acc   0.41 (  0.43)	test_minacc   0.63 (  0.62)	test_majacc   0.37 (  0.39)	Loss_d 0.637 (0.641)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.63 (  0.62)	test_majacc_d   0.37 (  0.39)	test_corr_d   0.28 (  0.27)
Test: [  20/  26]	Loss 0.635 (0.640)	test_acc   0.42 (  0.42)	test_minacc   0.52 (  0.59)	test_majacc   0.40 (  0.39)	Loss_d 0.635 (0.640)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.52 (  0.59)	test_majacc_d   0.40 (  0.39)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.655 (0.640)	test_acc   0.48 (  0.43)	test_minacc   0.62 (  0.61)	test_majacc   0.45 (  0.40)	Loss_d 0.655 (0.640)	test_acc_d   0.48 (  0.43)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.45 (  0.40)	test_corr_d   0.24 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.47it/s]
Test: [  0/  1]	Loss 1.072 (1.072)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.072 (1.072)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.072 (1.072)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.072 (1.072)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 33/  1]	epoch_time 0.0395 (0.0414)	validation_time 0.0003 (0.0006)	train_time 0.0391 (0.0406)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.42990000557899477, 0.5020000338554382)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.53it/s] 19%|#9        | 5/26 [00:00<00:00, 21.10it/s] 35%|###4      | 9/26 [00:00<00:00, 27.16it/s] 50%|#####     | 13/26 [00:00<00:00, 29.67it/s] 65%|######5   | 17/26 [00:00<00:00, 28.41it/s] 81%|########  | 21/26 [00:00<00:00, 30.52it/s] 96%|#########6| 25/26 [00:00<00:00, 32.43it/s]100%|##########| 26/26 [00:00<00:00, 27.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 415 tensor(-1.7865e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.43)	train_minacc   0.62 (  0.60)	train_majacc   0.45 (  0.40)	train_corr   0.00 (  0.00)	l1 5.7501 (5.7501)	zero_count 0.0000 (3.7440)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.53it/s] 31%|###       | 8/26 [00:00<00:00, 38.80it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.80it/s] 54%|#####3    | 14/26 [00:00<00:00, 44.72it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.49it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.49it/s] 92%|#########2| 24/26 [00:00<00:00, 43.50it/s]100%|##########| 26/26 [00:00<00:00, 39.17it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.42 (  0.42)	test_minacc   0.49 (  0.49)	test_majacc   0.40 (  0.40)	Loss_d 0.639 (0.639)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.40 (  0.40)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.637 (0.641)	test_acc   0.42 (  0.43)	test_minacc   0.63 (  0.61)	test_majacc   0.38 (  0.40)	Loss_d 0.637 (0.641)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.63 (  0.61)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.635 (0.641)	test_acc   0.41 (  0.43)	test_minacc   0.44 (  0.58)	test_majacc   0.41 (  0.40)	Loss_d 0.635 (0.641)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.44 (  0.58)	test_majacc_d   0.41 (  0.40)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.655 (0.641)	test_acc   0.48 (  0.43)	test_minacc   0.62 (  0.60)	test_majacc   0.45 (  0.40)	Loss_d 0.655 (0.641)	test_acc_d   0.48 (  0.43)	test_minacc_d   0.62 (  0.60)	test_majacc_d   0.45 (  0.40)	test_corr_d   0.24 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.00it/s]
Test: [  0/  1]	Loss 1.072 (1.072)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.072 (1.072)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.072 (1.072)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.072 (1.072)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.03 (  0.03)
Overall Timing[ 34/  1]	epoch_time 0.0397 (0.0414)	validation_time 0.0004 (0.0006)	train_time 0.0393 (0.0406)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.432300004273653, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.47it/s]  8%|7         | 2/26 [00:00<00:02,  8.55it/s] 23%|##3       | 6/26 [00:00<00:00, 20.09it/s] 38%|###8      | 10/26 [00:00<00:00, 25.09it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.10it/s] 65%|######5   | 17/26 [00:00<00:00, 27.24it/s] 81%|########  | 21/26 [00:00<00:00, 29.24it/s] 96%|#########6| 25/26 [00:00<00:00, 31.05it/s]100%|##########| 26/26 [00:01<00:00, 25.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 410 tensor(-1.9799e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.43)	train_minacc   0.62 (  0.59)	train_majacc   0.46 (  0.40)	train_corr   0.00 (  0.00)	l1 5.7516 (5.7508)	zero_count 0.0000 (3.9390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  9.81it/s] 27%|##6       | 7/26 [00:00<00:00, 26.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.19it/s] 46%|####6     | 12/26 [00:00<00:00, 33.96it/s] 65%|######5   | 17/26 [00:00<00:00, 38.96it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.96it/s] 85%|########4 | 22/26 [00:00<00:00, 40.30it/s]100%|##########| 26/26 [00:00<00:00, 34.15it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.42 (  0.42)	test_minacc   0.47 (  0.47)	test_majacc   0.41 (  0.41)	Loss_d 0.639 (0.639)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.637 (0.642)	test_acc   0.42 (  0.43)	test_minacc   0.63 (  0.61)	test_majacc   0.38 (  0.40)	Loss_d 0.637 (0.642)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.63 (  0.61)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.636 (0.641)	test_acc   0.42 (  0.43)	test_minacc   0.44 (  0.57)	test_majacc   0.41 (  0.40)	Loss_d 0.636 (0.641)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.44 (  0.57)	test_majacc_d   0.41 (  0.40)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.656 (0.641)	test_acc   0.48 (  0.44)	test_minacc   0.62 (  0.59)	test_majacc   0.46 (  0.41)	Loss_d 0.656 (0.641)	test_acc_d   0.48 (  0.44)	test_minacc_d   0.62 (  0.59)	test_majacc_d   0.46 (  0.41)	test_corr_d   0.24 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.39it/s]
Test: [  0/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Overall Timing[ 35/  1]	epoch_time 0.0414 (0.0414)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0406)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.43540000545978547, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 19%|#9        | 5/26 [00:00<00:00, 23.66it/s] 35%|###4      | 9/26 [00:00<00:00, 28.82it/s] 50%|#####     | 13/26 [00:00<00:00, 31.20it/s] 65%|######5   | 17/26 [00:00<00:00, 29.29it/s] 81%|########  | 21/26 [00:00<00:00, 30.87it/s] 96%|#########6| 25/26 [00:00<00:00, 32.79it/s]100%|##########| 26/26 [00:00<00:00, 28.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 408 tensor(-1.8247e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.43)	train_minacc   0.62 (  0.59)	train_majacc   0.46 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7529 (5.7519)	zero_count 0.0000 (4.0170)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.85it/s] 15%|#5        | 4/26 [00:00<00:01, 18.82it/s] 38%|###8      | 10/26 [00:00<00:00, 30.03it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.03it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.19it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.19it/s] 96%|#########6| 25/26 [00:00<00:00, 40.91it/s]100%|##########| 26/26 [00:00<00:00, 32.92it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.42 (  0.42)	test_minacc   0.47 (  0.47)	test_majacc   0.41 (  0.41)	Loss_d 0.639 (0.639)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.638 (0.642)	test_acc   0.43 (  0.44)	test_minacc   0.63 (  0.60)	test_majacc   0.39 (  0.41)	Loss_d 0.638 (0.642)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.63 (  0.60)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.636 (0.641)	test_acc   0.42 (  0.43)	test_minacc   0.42 (  0.57)	test_majacc   0.41 (  0.41)	Loss_d 0.636 (0.641)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.42 (  0.57)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.656 (0.642)	test_acc   0.48 (  0.44)	test_minacc   0.62 (  0.58)	test_majacc   0.46 (  0.41)	Loss_d 0.656 (0.642)	test_acc_d   0.48 (  0.44)	test_minacc_d   0.62 (  0.58)	test_majacc_d   0.46 (  0.41)	test_corr_d   0.24 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.15it/s]
Test: [  0/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Overall Timing[ 36/  1]	epoch_time 0.0385 (0.0413)	validation_time 0.0003 (0.0006)	train_time 0.0382 (0.0405)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.43620000541210174, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.74it/s] 19%|#9        | 5/26 [00:00<00:01, 20.15it/s] 35%|###4      | 9/26 [00:00<00:00, 26.27it/s] 50%|#####     | 13/26 [00:00<00:00, 29.67it/s] 65%|######5   | 17/26 [00:00<00:00, 28.99it/s] 81%|########  | 21/26 [00:00<00:00, 28.89it/s] 96%|#########6| 25/26 [00:00<00:00, 31.53it/s]100%|##########| 26/26 [00:00<00:00, 26.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 404 tensor(-1.9835e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 407 tensor(-1.4936e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.44)	train_minacc   0.62 (  0.58)	train_majacc   0.46 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7540 (5.7530)	zero_count 0.0000 (8.2290)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.72it/s] 23%|##3       | 6/26 [00:00<00:00, 23.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.14it/s] 42%|####2     | 11/26 [00:00<00:00, 32.26it/s] 65%|######5   | 17/26 [00:00<00:00, 40.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.33it/s] 85%|########4 | 22/26 [00:00<00:00, 43.11it/s]100%|##########| 26/26 [00:00<00:00, 34.03it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.42 (  0.42)	test_minacc   0.47 (  0.47)	test_majacc   0.41 (  0.41)	Loss_d 0.640 (0.640)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.638 (0.642)	test_acc   0.43 (  0.44)	test_minacc   0.63 (  0.60)	test_majacc   0.40 (  0.41)	Loss_d 0.638 (0.642)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.63 (  0.60)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.636 (0.642)	test_acc   0.42 (  0.43)	test_minacc   0.42 (  0.56)	test_majacc   0.42 (  0.41)	Loss_d 0.636 (0.642)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.42 (  0.56)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.642)	test_acc   0.48 (  0.44)	test_minacc   0.62 (  0.58)	test_majacc   0.46 (  0.41)	Loss_d 0.657 (0.642)	test_acc_d   0.48 (  0.44)	test_minacc_d   0.62 (  0.58)	test_majacc_d   0.46 (  0.41)	test_corr_d   0.24 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.81it/s]
Test: [  0/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Overall Timing[ 37/  1]	epoch_time 0.0391 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0386 (0.0405)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4376000064909458, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 12%|#1        | 3/26 [00:00<00:01, 12.00it/s] 27%|##6       | 7/26 [00:00<00:00, 22.44it/s] 42%|####2     | 11/26 [00:00<00:00, 28.41it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.78it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.92it/s] 88%|########8 | 23/26 [00:00<00:00, 33.32it/s]100%|##########| 26/26 [00:00<00:00, 27.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 403 tensor(-1.4346e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.44)	train_minacc   0.62 (  0.57)	train_majacc   0.46 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7545 (5.7537)	zero_count 0.0000 (4.2120)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.16it/s] 27%|##6       | 7/26 [00:00<00:00, 29.94it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.94it/s] 46%|####6     | 12/26 [00:00<00:00, 36.46it/s] 65%|######5   | 17/26 [00:00<00:00, 40.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.58it/s] 85%|########4 | 22/26 [00:00<00:00, 39.60it/s]100%|##########| 26/26 [00:00<00:00, 34.83it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.43 (  0.43)	test_minacc   0.47 (  0.47)	test_majacc   0.42 (  0.42)	Loss_d 0.640 (0.640)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.638 (0.643)	test_acc   0.43 (  0.44)	test_minacc   0.61 (  0.59)	test_majacc   0.40 (  0.41)	Loss_d 0.638 (0.643)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.636 (0.642)	test_acc   0.42 (  0.43)	test_minacc   0.42 (  0.55)	test_majacc   0.42 (  0.41)	Loss_d 0.636 (0.642)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.42 (  0.55)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.642)	test_acc   0.48 (  0.44)	test_minacc   0.62 (  0.57)	test_majacc   0.46 (  0.41)	Loss_d 0.657 (0.642)	test_acc_d   0.48 (  0.44)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.46 (  0.41)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.68it/s]
Test: [  0/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Overall Timing[ 38/  1]	epoch_time 0.0404 (0.0412)	validation_time 0.0003 (0.0006)	train_time 0.0400 (0.0404)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4374000041782856, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.05it/s] 19%|#9        | 5/26 [00:00<00:00, 23.53it/s] 35%|###4      | 9/26 [00:00<00:00, 28.75it/s] 50%|#####     | 13/26 [00:00<00:00, 31.21it/s] 65%|######5   | 17/26 [00:00<00:00, 29.89it/s] 81%|########  | 21/26 [00:00<00:00, 31.78it/s] 96%|#########6| 25/26 [00:00<00:00, 33.05it/s]100%|##########| 26/26 [00:00<00:00, 28.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 396 tensor(-1.3578e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.48 (  0.44)	train_minacc   0.62 (  0.57)	train_majacc   0.46 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7553 (5.7541)	zero_count 0.0000 (4.4850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.04it/s] 19%|#9        | 5/26 [00:00<00:00, 21.37it/s] 38%|###8      | 10/26 [00:00<00:00, 31.91it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.91it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.08it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.70it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.70it/s] 96%|#########6| 25/26 [00:00<00:00, 40.70it/s]100%|##########| 26/26 [00:00<00:00, 32.74it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.43 (  0.43)	test_minacc   0.47 (  0.47)	test_majacc   0.42 (  0.42)	Loss_d 0.640 (0.640)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.43 (  0.44)	test_minacc   0.61 (  0.59)	test_majacc   0.40 (  0.41)	Loss_d 0.639 (0.643)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.42 (  0.43)	test_minacc   0.42 (  0.55)	test_majacc   0.42 (  0.41)	Loss_d 0.637 (0.642)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.42 (  0.55)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.642)	test_acc   0.49 (  0.44)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.42)	Loss_d 0.657 (0.642)	test_acc_d   0.49 (  0.44)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.42)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.68it/s]
Test: [  0/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Overall Timing[ 39/  1]	epoch_time 0.0397 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0392 (0.0404)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4377000045776367, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.41it/s] 23%|##3       | 6/26 [00:00<00:00, 27.72it/s] 38%|###8      | 10/26 [00:00<00:00, 31.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.40it/s] 69%|######9   | 18/26 [00:00<00:00, 30.89it/s] 85%|########4 | 22/26 [00:00<00:00, 32.49it/s]100%|##########| 26/26 [00:00<00:00, 33.93it/s]100%|##########| 26/26 [00:00<00:00, 29.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 394 tensor(-1.3374e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.49 (  0.44)	train_minacc   0.62 (  0.57)	train_majacc   0.47 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7562 (5.7547)	zero_count 0.0000 (4.5630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.04it/s] 31%|###       | 8/26 [00:00<00:00, 36.33it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.33it/s] 50%|#####     | 13/26 [00:00<00:00, 41.37it/s] 69%|######9   | 18/26 [00:00<00:00, 43.06it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.06it/s] 88%|########8 | 23/26 [00:00<00:00, 41.35it/s]100%|##########| 26/26 [00:00<00:00, 38.00it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.42 (  0.42)	test_minacc   0.46 (  0.46)	test_majacc   0.42 (  0.42)	Loss_d 0.640 (0.640)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.43 (  0.44)	test_minacc   0.61 (  0.58)	test_majacc   0.40 (  0.41)	Loss_d 0.639 (0.643)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.61 (  0.58)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.42 (  0.43)	test_minacc   0.42 (  0.55)	test_majacc   0.42 (  0.41)	Loss_d 0.637 (0.642)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.42 (  0.55)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.643)	test_acc   0.49 (  0.44)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.41)	Loss_d 0.657 (0.643)	test_acc_d   0.49 (  0.44)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.41)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.09it/s]
Test: [  0/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.071 (1.071)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.071 (1.071)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Overall Timing[ 40/  1]	epoch_time 0.0437 (0.0412)	validation_time 0.0003 (0.0006)	train_time 0.0433 (0.0405)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.43700000578165055, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 15%|#5        | 4/26 [00:00<00:01, 15.59it/s] 31%|###       | 8/26 [00:00<00:00, 23.59it/s] 46%|####6     | 12/26 [00:00<00:00, 27.94it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.03it/s] 88%|########8 | 23/26 [00:00<00:00, 29.92it/s]100%|##########| 26/26 [00:01<00:00, 25.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 389 tensor(-1.2602e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 390 tensor(-3.0208e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.49 (  0.44)	train_minacc   0.62 (  0.57)	train_majacc   0.47 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7566 (5.7553)	zero_count 0.0000 (9.4770)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.44it/s]  8%|7         | 2/26 [00:00<00:03,  7.89it/s] 31%|###       | 8/26 [00:00<00:00, 27.52it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.52it/s] 50%|#####     | 13/26 [00:00<00:00, 34.65it/s] 69%|######9   | 18/26 [00:00<00:00, 35.66it/s]                                                69%|######9   | 18/26 [00:00<00:00, 35.66it/s] 88%|########8 | 23/26 [00:00<00:00, 39.71it/s]100%|##########| 26/26 [00:00<00:00, 31.70it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.42 (  0.42)	test_minacc   0.46 (  0.46)	test_majacc   0.42 (  0.42)	Loss_d 0.640 (0.640)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.43 (  0.44)	test_minacc   0.59 (  0.58)	test_majacc   0.40 (  0.41)	Loss_d 0.639 (0.643)	test_acc_d   0.43 (  0.44)	test_minacc_d   0.59 (  0.58)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.42 (  0.43)	test_minacc   0.42 (  0.55)	test_majacc   0.42 (  0.41)	Loss_d 0.637 (0.642)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.42 (  0.55)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.643)	test_acc   0.49 (  0.44)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.42)	Loss_d 0.657 (0.643)	test_acc_d   0.49 (  0.44)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.42)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.38it/s]
Test: [  0/  1]	Loss 1.072 (1.072)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.072 (1.072)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.072 (1.072)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.072 (1.072)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Overall Timing[ 41/  1]	epoch_time 0.0432 (0.0413)	validation_time 0.0004 (0.0005)	train_time 0.0428 (0.0405)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.43760000458359716, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.15it/s] 19%|#9        | 5/26 [00:00<00:01, 18.30it/s] 35%|###4      | 9/26 [00:00<00:00, 24.84it/s] 50%|#####     | 13/26 [00:00<00:00, 27.21it/s] 62%|######1   | 16/26 [00:00<00:00, 26.98it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.18it/s] 88%|########8 | 23/26 [00:00<00:00, 30.58it/s]100%|##########| 26/26 [00:01<00:00, 25.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 388 tensor(-1.1234e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 393 tensor(1.0045e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.49 (  0.44)	train_minacc   0.62 (  0.57)	train_majacc   0.47 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7566 (5.7557)	zero_count 0.0000 (9.3990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.84it/s] 19%|#9        | 5/26 [00:00<00:00, 23.06it/s] 38%|###8      | 10/26 [00:00<00:00, 32.96it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.96it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.73it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.73it/s] 96%|#########6| 25/26 [00:00<00:00, 41.35it/s]100%|##########| 26/26 [00:00<00:00, 33.45it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.42 (  0.42)	test_minacc   0.46 (  0.46)	test_majacc   0.42 (  0.42)	Loss_d 0.640 (0.640)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.42 (  0.44)	test_minacc   0.56 (  0.58)	test_majacc   0.40 (  0.41)	Loss_d 0.639 (0.643)	test_acc_d   0.42 (  0.44)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.40 (  0.41)	test_corr_d   0.27 (  0.26)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.42 (  0.43)	test_minacc   0.42 (  0.55)	test_majacc   0.42 (  0.41)	Loss_d 0.637 (0.642)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.42 (  0.55)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.643)	test_acc   0.49 (  0.44)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.41)	Loss_d 0.657 (0.643)	test_acc_d   0.49 (  0.44)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.41)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.67it/s]
Test: [  0/  1]	Loss 1.072 (1.072)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.072 (1.072)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 1.072 (1.072)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.072 (1.072)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Overall Timing[ 42/  1]	epoch_time 0.0425 (0.0413)	validation_time 0.0006 (0.0006)	train_time 0.0418 (0.0406)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4366000046432018, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.46it/s] 19%|#9        | 5/26 [00:00<00:00, 23.23it/s] 35%|###4      | 9/26 [00:00<00:00, 28.64it/s] 50%|#####     | 13/26 [00:00<00:00, 28.59it/s] 65%|######5   | 17/26 [00:00<00:00, 30.84it/s] 81%|########  | 21/26 [00:00<00:00, 30.18it/s] 96%|#########6| 25/26 [00:00<00:00, 32.04it/s]100%|##########| 26/26 [00:00<00:00, 27.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 390 tensor(-1.4001e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 401 tensor(2.5230e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.49 (  0.44)	train_minacc   0.62 (  0.57)	train_majacc   0.47 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7571 (5.7560)	zero_count 0.0000 (9.0090)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 27%|##6       | 7/26 [00:00<00:00, 33.72it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.72it/s] 46%|####6     | 12/26 [00:00<00:00, 40.21it/s] 69%|######9   | 18/26 [00:00<00:00, 41.64it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.64it/s] 88%|########8 | 23/26 [00:00<00:00, 43.21it/s]100%|##########| 26/26 [00:00<00:00, 37.51it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.43 (  0.43)	test_minacc   0.47 (  0.47)	test_majacc   0.42 (  0.42)	Loss_d 0.640 (0.640)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.42 (  0.43)	test_minacc   0.56 (  0.58)	test_majacc   0.39 (  0.41)	Loss_d 0.639 (0.643)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.27 (  0.26)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.42 (  0.43)	test_minacc   0.42 (  0.55)	test_majacc   0.42 (  0.41)	Loss_d 0.637 (0.642)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.42 (  0.55)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.643)	test_acc   0.49 (  0.44)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.41)	Loss_d 0.657 (0.643)	test_acc_d   0.49 (  0.44)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.41)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.24it/s]
Test: [  0/  1]	Loss 1.073 (1.073)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.073 (1.073)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.073 (1.073)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.073 (1.073)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Overall Timing[ 43/  1]	epoch_time 0.0391 (0.0413)	validation_time 0.0003 (0.0005)	train_time 0.0387 (0.0405)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4352000047266483, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.50it/s] 19%|#9        | 5/26 [00:00<00:01, 19.19it/s] 35%|###4      | 9/26 [00:00<00:00, 25.28it/s] 50%|#####     | 13/26 [00:00<00:00, 28.72it/s] 65%|######5   | 17/26 [00:00<00:00, 28.96it/s] 81%|########  | 21/26 [00:00<00:00, 31.05it/s] 96%|#########6| 25/26 [00:00<00:00, 30.19it/s]100%|##########| 26/26 [00:01<00:00, 25.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 387 tensor(-9.8157e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 390 tensor(-2.7525e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 395 tensor(-1.5762e-06, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.49 (  0.43)	train_minacc   0.62 (  0.57)	train_majacc   0.47 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7573 (5.7563)	zero_count 0.0000 (9.5550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 23%|##3       | 6/26 [00:00<00:00, 27.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.06it/s] 42%|####2     | 11/26 [00:00<00:00, 34.73it/s] 62%|######1   | 16/26 [00:00<00:00, 39.83it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.83it/s] 81%|########  | 21/26 [00:00<00:00, 38.97it/s]100%|##########| 26/26 [00:00<00:00, 42.19it/s]100%|##########| 26/26 [00:00<00:00, 33.92it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.43 (  0.43)	test_minacc   0.47 (  0.47)	test_majacc   0.42 (  0.42)	Loss_d 0.640 (0.640)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.42 (  0.43)	test_minacc   0.56 (  0.58)	test_majacc   0.39 (  0.41)	Loss_d 0.639 (0.643)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.27 (  0.26)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.42 (  0.43)	test_minacc   0.42 (  0.55)	test_majacc   0.42 (  0.41)	Loss_d 0.637 (0.642)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.42 (  0.55)	test_majacc_d   0.42 (  0.41)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.643)	test_acc   0.49 (  0.44)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.41)	Loss_d 0.657 (0.643)	test_acc_d   0.49 (  0.44)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.41)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.51it/s]
Test: [  0/  1]	Loss 1.073 (1.073)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.073 (1.073)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.073 (1.073)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.073 (1.073)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Overall Timing[ 44/  1]	epoch_time 0.0417 (0.0413)	validation_time 0.0004 (0.0005)	train_time 0.0412 (0.0405)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.43530000588297846, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.07it/s] 19%|#9        | 5/26 [00:00<00:00, 23.36it/s] 35%|###4      | 9/26 [00:00<00:00, 27.39it/s] 50%|#####     | 13/26 [00:00<00:00, 29.80it/s] 62%|######1   | 16/26 [00:00<00:00, 29.40it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.91it/s] 92%|#########2| 24/26 [00:00<00:00, 32.01it/s]100%|##########| 26/26 [00:00<00:00, 27.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 386 tensor(-5.7676e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 388 tensor(-2.2334e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 389 tensor(-8.3997e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.24 ( 29.24)	train_acc   0.49 (  0.43)	train_minacc   0.62 (  0.57)	train_majacc   0.47 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7578 (5.7563)	zero_count 0.0000 (14.1960)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 34.80it/s] 35%|###4      | 9/26 [00:00<00:00, 39.52it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.52it/s] 58%|#####7    | 15/26 [00:00<00:00, 47.23it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 47.23it/s] 81%|########  | 21/26 [00:00<00:00, 46.45it/s]100%|##########| 26/26 [00:00<00:00, 41.76it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.43 (  0.43)	test_minacc   0.47 (  0.47)	test_majacc   0.42 (  0.42)	Loss_d 0.640 (0.640)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.42 (  0.42)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.42 (  0.43)	test_minacc   0.56 (  0.58)	test_majacc   0.39 (  0.41)	Loss_d 0.639 (0.643)	test_acc_d   0.42 (  0.43)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.39 (  0.41)	test_corr_d   0.27 (  0.26)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.41 (  0.43)	test_minacc   0.42 (  0.55)	test_majacc   0.41 (  0.41)	Loss_d 0.637 (0.642)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.42 (  0.55)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.643)	test_acc   0.49 (  0.43)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.41)	Loss_d 0.657 (0.643)	test_acc_d   0.49 (  0.43)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.41)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.82it/s]
Test: [  0/  1]	Loss 1.074 (1.074)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.074 (1.074)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.074 (1.074)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.074 (1.074)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Overall Timing[ 45/  1]	epoch_time 0.0413 (0.0413)	validation_time 0.0005 (0.0005)	train_time 0.0408 (0.0406)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.43370000597834585, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 19%|#9        | 5/26 [00:00<00:00, 22.12it/s] 35%|###4      | 9/26 [00:00<00:00, 28.79it/s] 50%|#####     | 13/26 [00:00<00:00, 32.38it/s] 65%|######5   | 17/26 [00:00<00:00, 31.71it/s] 81%|########  | 21/26 [00:00<00:00, 32.01it/s] 96%|#########6| 25/26 [00:00<00:00, 32.30it/s]100%|##########| 26/26 [00:00<00:00, 28.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 382 tensor(-6.0731e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 383 tensor(-1.8018e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 386 tensor(2.5752e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.25 ( 29.25)	train_acc   0.49 (  0.43)	train_minacc   0.62 (  0.57)	train_majacc   0.47 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7569 (5.7564)	zero_count 125.0000 (17.9060)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.41it/s] 35%|###4      | 9/26 [00:00<00:00, 41.73it/s]                                               35%|###4      | 9/26 [00:00<00:00, 41.73it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.20it/s] 77%|#######6  | 20/26 [00:00<00:00, 48.83it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 48.83it/s]100%|##########| 26/26 [00:00<00:00, 51.90it/s]100%|##########| 26/26 [00:00<00:00, 43.03it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.42 (  0.42)	test_minacc   0.47 (  0.47)	test_majacc   0.41 (  0.41)	Loss_d 0.640 (0.640)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.41 (  0.43)	test_minacc   0.58 (  0.59)	test_majacc   0.38 (  0.40)	Loss_d 0.639 (0.643)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.27 (  0.26)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.41 (  0.43)	test_minacc   0.42 (  0.55)	test_majacc   0.41 (  0.40)	Loss_d 0.637 (0.642)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.42 (  0.55)	test_majacc_d   0.41 (  0.40)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.643)	test_acc   0.49 (  0.43)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.41)	Loss_d 0.657 (0.643)	test_acc_d   0.49 (  0.43)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.41)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.27it/s]
Test: [  0/  1]	Loss 1.074 (1.074)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.074 (1.074)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.074 (1.074)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.074 (1.074)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Overall Timing[ 46/  1]	epoch_time 0.0378 (0.0412)	validation_time 0.0004 (0.0005)	train_time 0.0374 (0.0405)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.43210000491142275, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.98it/s] 19%|#9        | 5/26 [00:00<00:00, 21.66it/s] 35%|###4      | 9/26 [00:00<00:00, 28.20it/s] 50%|#####     | 13/26 [00:00<00:00, 31.47it/s] 65%|######5   | 17/26 [00:00<00:00, 30.84it/s] 81%|########  | 21/26 [00:00<00:00, 30.48it/s] 96%|#########6| 25/26 [00:00<00:00, 30.96it/s]100%|##########| 26/26 [00:00<00:00, 27.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 381 tensor(-7.4696e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 386 tensor(3.1050e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 385 tensor(-1.2712e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 386 tensor(-1.4662e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.25 ( 29.25)	train_acc   0.49 (  0.43)	train_minacc   0.62 (  0.57)	train_majacc   0.47 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7573 (5.7564)	zero_count 0.0000 (14.8590)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 23%|##3       | 6/26 [00:00<00:00, 27.48it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.48it/s] 42%|####2     | 11/26 [00:00<00:00, 35.57it/s] 65%|######5   | 17/26 [00:00<00:00, 40.07it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.07it/s] 88%|########8 | 23/26 [00:00<00:00, 44.68it/s]100%|##########| 26/26 [00:00<00:00, 35.86it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.42 (  0.42)	test_minacc   0.47 (  0.47)	test_majacc   0.41 (  0.41)	Loss_d 0.640 (0.640)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.41 (  0.43)	test_minacc   0.58 (  0.59)	test_majacc   0.38 (  0.40)	Loss_d 0.639 (0.643)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.27 (  0.26)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.41 (  0.43)	test_minacc   0.42 (  0.56)	test_majacc   0.41 (  0.40)	Loss_d 0.637 (0.642)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.42 (  0.56)	test_majacc_d   0.41 (  0.40)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.643)	test_acc   0.49 (  0.43)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.41)	Loss_d 0.657 (0.643)	test_acc_d   0.49 (  0.43)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.41)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.03it/s]
Test: [  0/  1]	Loss 1.075 (1.075)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.075 (1.075)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.075 (1.075)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.075 (1.075)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Overall Timing[ 47/  1]	epoch_time 0.0385 (0.0412)	validation_time 0.0004 (0.0005)	train_time 0.0380 (0.0404)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4312000061273575, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.75it/s] 19%|#9        | 5/26 [00:00<00:01, 20.08it/s] 35%|###4      | 9/26 [00:00<00:00, 25.97it/s] 50%|#####     | 13/26 [00:00<00:00, 26.69it/s] 69%|######9   | 18/26 [00:00<00:00, 29.65it/s] 85%|########4 | 22/26 [00:00<00:00, 31.88it/s]100%|##########| 26/26 [00:00<00:00, 32.26it/s]100%|##########| 26/26 [00:00<00:00, 26.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 383 tensor(-7.4642e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 392 tensor(7.7774e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 385 tensor(-1.7430e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 394 tensor(6.9654e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.25 ( 29.25)	train_acc   0.49 (  0.43)	train_minacc   0.62 (  0.57)	train_majacc   0.47 (  0.41)	train_corr   0.00 (  0.00)	l1 5.7577 (5.7566)	zero_count 0.0000 (19.4220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.44it/s] 31%|###       | 8/26 [00:00<00:00, 38.42it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.27it/s] 77%|#######6  | 20/26 [00:00<00:00, 48.92it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 48.92it/s]100%|##########| 26/26 [00:00<00:00, 50.98it/s]100%|##########| 26/26 [00:00<00:00, 41.54it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.42 (  0.42)	test_minacc   0.47 (  0.47)	test_majacc   0.41 (  0.41)	Loss_d 0.640 (0.640)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.41 (  0.43)	test_minacc   0.58 (  0.59)	test_majacc   0.38 (  0.40)	Loss_d 0.639 (0.643)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.27 (  0.26)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.41 (  0.43)	test_minacc   0.42 (  0.56)	test_majacc   0.41 (  0.40)	Loss_d 0.637 (0.642)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.42 (  0.56)	test_majacc_d   0.41 (  0.40)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.643)	test_acc   0.49 (  0.43)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.41)	Loss_d 0.657 (0.643)	test_acc_d   0.49 (  0.43)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.41)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.97it/s]
Test: [  0/  1]	Loss 1.076 (1.076)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.076 (1.076)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.076 (1.076)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.076 (1.076)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Overall Timing[ 48/  1]	epoch_time 0.0384 (0.0411)	validation_time 0.0004 (0.0005)	train_time 0.0380 (0.0404)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.43050000616908074, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.14it/s] 23%|##3       | 6/26 [00:00<00:00, 27.68it/s] 38%|###8      | 10/26 [00:00<00:00, 31.85it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.93it/s] 69%|######9   | 18/26 [00:00<00:00, 32.55it/s] 85%|########4 | 22/26 [00:00<00:00, 31.94it/s]100%|##########| 26/26 [00:00<00:00, 30.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 382 tensor(-5.8976e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 382 tensor(-1.6471e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 394 tensor(9.4764e-07, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm  29.25 ( 29.25)	train_acc   0.49 (  0.43)	train_minacc   0.62 (  0.57)	train_majacc   0.47 (  0.40)	train_corr   0.00 (  0.00)	l1 5.7579 (5.7567)	zero_count 0.0000 (14.6250)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 23%|##3       | 6/26 [00:00<00:00, 27.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.73it/s] 46%|####6     | 12/26 [00:00<00:00, 39.43it/s] 69%|######9   | 18/26 [00:00<00:00, 43.69it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.69it/s] 92%|#########2| 24/26 [00:00<00:00, 46.28it/s]100%|##########| 26/26 [00:00<00:00, 38.08it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.42 (  0.42)	test_minacc   0.47 (  0.47)	test_majacc   0.41 (  0.41)	Loss_d 0.640 (0.640)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.41 (  0.41)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.639 (0.643)	test_acc   0.41 (  0.43)	test_minacc   0.58 (  0.59)	test_majacc   0.38 (  0.40)	Loss_d 0.639 (0.643)	test_acc_d   0.41 (  0.43)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.38 (  0.40)	test_corr_d   0.27 (  0.26)
Test: [  20/  26]	Loss 0.637 (0.642)	test_acc   0.41 (  0.42)	test_minacc   0.44 (  0.56)	test_majacc   0.41 (  0.40)	Loss_d 0.637 (0.642)	test_acc_d   0.41 (  0.42)	test_minacc_d   0.44 (  0.56)	test_majacc_d   0.41 (  0.40)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.643)	test_acc   0.49 (  0.43)	test_minacc   0.62 (  0.57)	test_majacc   0.47 (  0.40)	Loss_d 0.657 (0.643)	test_acc_d   0.49 (  0.43)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.47 (  0.40)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.55it/s]
Test: [  0/  1]	Loss 1.076 (1.076)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.076 (1.076)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 1.076 (1.076)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.49 (  0.49)	Loss_d 1.076 (1.076)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.05 (  0.05)
Overall Timing[ 49/  1]	epoch_time 0.0369 (0.0410)	validation_time 0.0003 (0.0005)	train_time 0.0366 (0.0403)
record: (train_acc, test_acc) (0.82480002617836, 0.5640000104904175)
last accs (train_acc, test_acc) (0.4293000062406063, 0.49900001287460327)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.171 MB of 0.171 MB uploadedwandb: \ 0.171 MB of 0.171 MB uploadedwandb: | 0.171 MB of 0.171 MB uploadedwandb: / 0.193 MB of 0.206 MB uploaded (0.003 MB deduped)wandb: - 0.500 MB of 0.500 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                           global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/diagnostics/epoch_time_val █▁▂▂▁▂▁▁▁▁▁▂▁▂▁▂▂▂▂▂▂▁▂▂▂▁▁▁▂▁▁▂▂▂▂▁▂▁▁▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/diagnostics/train_time_val █▁▂▂▂▃▂▁▂▂▁▂▁▂▁▂▂▂▂▂▂▁▂▂▂▁▂▂▂▁▁▂▃▃▂▂▂▁▁▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/Loss_avg ▅▄▅▅▅▅▅▅█▇██▄▂▂▂▂▃▃▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/Loss_d_avg ▅▄▅▅▅▅▅▅█▇██▄▂▂▂▂▃▃▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/Loss_d_val ▅▄▅▅▅▅▅▅█▇██▄▂▂▂▂▃▃▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/Loss_val ▅▄▅▅▅▅▅▅█▇██▄▂▂▂▂▃▃▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_acc_avg ▁▁▁▂▂▂▃▄▃▄▄▄▄▆▆▅▆▆▆▅█▇▆▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_acc_d_avg ▁▁▁▂▂▂▃▄▃▄▄▄▄▆▆▅▆▆▆▅█▇▆▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_acc_d_val ▁▁▁▂▂▂▃▄▃▄▄▄▄▆▆▅▆▆▆▅█▇▆▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_acc_val ▁▁▁▂▂▂▃▄▃▄▄▄▄▆▆▅▆▆▆▅█▇▆▆▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_corr_d_avg ███▇▇▇▆▅▆▅▅▆▄▃▂▄▃▃▃▃▃▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_corr_d_val ███▇▇▇▆▅▆▅▅▆▄▃▂▄▃▃▃▃▃▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_majacc_avg ███████▇█▇██▇▆▆▆▆▆▆▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_majacc_d_avg ███████▇█▇██▇▆▆▆▆▆▆▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_majacc_d_val ███████▇█▇██▇▆▆▆▆▆▆▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_majacc_val ███████▇█▇██▇▆▆▆▆▆▆▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_minacc_avg ▁▁▁▂▂▂▃▄▃▄▄▃▄▆▆▅▆▆▅▆█▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_minacc_d_avg ▁▁▁▂▂▂▃▄▃▄▄▃▄▆▆▅▆▆▅▆█▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_minacc_d_val ▁▁▁▂▂▂▃▄▃▄▄▃▄▆▆▅▆▆▅▆█▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_minacc_val ▁▁▁▂▂▂▃▄▃▄▄▃▄▆▆▅▆▆▅▆█▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/Loss_avg █▆▆▅▅▅▄▄▄▄▄▄▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/Loss_val ███▇▇▆▆▅▅▅▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/l1_avg █▄▄▅▅▅▅▅▅▆▆▅▆▂▁▁▂▂▂▅▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/l1_val ▆▅▆▆▆▆▇▇███▇▄▃▁▁▂▂▂▆▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_acc_avg ▆▇▇▇▇▇███████▇▇▇▇▇▇▆▃▂▂▁▁▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_acc_val ▇▇▇▇▇▇▇▇▇███▇▆▆▇▇▆▇▆▁▂▂▂▃▂▂▂▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_majacc_avg ▇███████████▇▆▆▆▆▆▆▆▃▂▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_majacc_val ████▇▇▇▇▇▇█▇▇▆▆▇▆▆▆▆▁▂▂▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_minacc_avg ▁▁▁▂▃▄▄▅▅▅▆▆▇▇▇▇███▆▆███▇▆▆▆▆▆▆▆▆▆▅▅▅▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_minacc_val ▁▁▂▂▃▃▆▆▆▇▇▇▆▇▇▇▇▇▇▅██▇▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_nll_avg ▇▄▄▃▃▂▂▂▂▁▁▁▁▃▃▃▃▃▃▆████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_nll_val ▄▄▄▄▃▃▃▂▂▂▁▂▃▅▄▃▄▄▄▆▇███████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_penalty_avg █▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_penalty_val █▅▆▅▃▃▁▂▂▂▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/weight_norm_avg ▁▃▃▄▄▄▄▄▄▄▄▅▅▅▅▅▅▅▅▆████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/weight_norm_val ▁▂▂▂▂▂▂▃▃▃▃▄▄▄▄▄▄▄▄▆████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▇█▄▁▁▁▁▁▂▂▂▂▂▂▂▂▂▃▄▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁
wandb: 
wandb: Run summary:
wandb:                                                                           global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/diagnostics/epoch_time_val 0.03691
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/diagnostics/train_time_val 0.03658
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/diagnostics/validation_time_val 0.00032
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/Loss_avg 1.07631
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/Loss_d_avg 1.07631
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/Loss_d_val 1.07631
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/Loss_val 1.07631
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_acc_avg 0.499
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_acc_d_avg 0.499
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_acc_d_val 0.499
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_acc_val 0.499
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_corr_d_avg 0.0503
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_corr_d_val 0.0503
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_majacc_avg 0.49
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_majacc_d_avg 0.49
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_majacc_d_val 0.49
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_majacc_val 0.49
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/Loss_avg 7e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/Loss_val 7e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/l1_avg 5.75666
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/l1_val 5.75793
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_acc_avg 0.4298
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_acc_val 0.488
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_majacc_avg 0.40487
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_majacc_val 0.46759
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_minacc_avg 0.57407
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_minacc_val 0.61765
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_nll_avg 0.6424
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_nll_val 0.65685
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/weight_norm_avg 29.24551
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/weight_norm_val 29.24561
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/zero_count_avg 14.625
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/94/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/jn8438z9
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_153840-jn8438z9/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_154115-okaalms3
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/okaalms3
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1234
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6014, 3, 32, 32) (5986, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:36,  1.46s/it] 19%|#9        | 5/26 [00:01<00:05,  4.18it/s] 35%|###4      | 9/26 [00:01<00:02,  8.11it/s] 50%|#####     | 13/26 [00:01<00:01, 12.31it/s] 65%|######5   | 17/26 [00:01<00:00, 16.78it/s] 81%|########  | 21/26 [00:01<00:00, 21.13it/s] 96%|#########6| 25/26 [00:02<00:00, 24.71it/s]100%|##########| 26/26 [00:02<00:00, 10.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.468 (0.556)	train_nll   0.47 (  0.56)	train_penalty   0.11 (  0.25)	weight_norm  20.88 ( 18.09)	train_acc   0.83 (  0.80)	train_minacc   0.00 (  0.09)	train_majacc   1.00 (  0.93)	train_corr   0.00 (  0.00)	l1 7.9508 (7.8639)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.63it/s] 27%|##6       | 7/26 [00:00<00:00, 25.26it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.26it/s] 46%|####6     | 12/26 [00:00<00:00, 33.35it/s] 65%|######5   | 17/26 [00:00<00:00, 34.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.81it/s] 85%|########4 | 22/26 [00:00<00:00, 38.89it/s]100%|##########| 26/26 [00:00<00:00, 31.19it/s]
Test: [   0/  26]	Loss 0.438 (0.438)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.438 (0.438)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.397 (0.421)	test_acc   0.87 (  0.85)	test_minacc   0.04 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.397 (0.421)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.04 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.375 (0.425)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.375 (0.425)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.470 (0.426)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.470 (0.426)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]
Test: [  0/  1]	Loss 1.902 (1.902)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.902 (1.902)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.902 (1.902)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.902 (1.902)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0752 (0.0752)	validation_time 0.0068 (0.0068)	train_time 0.0644 (0.0644)
record: (train_acc, test_acc) (0.8454000234603882, 0.10900000482797623)
last accs (train_acc, test_acc) (0.8454000234603882, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.29it/s] 15%|#5        | 4/26 [00:00<00:01, 19.90it/s] 31%|###       | 8/26 [00:00<00:00, 26.95it/s] 46%|####6     | 12/26 [00:00<00:00, 30.70it/s] 62%|######1   | 16/26 [00:00<00:00, 32.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.76it/s] 92%|#########2| 24/26 [00:00<00:00, 34.73it/s]100%|##########| 26/26 [00:00<00:00, 29.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.440 (0.412)	train_nll   0.44 (  0.41)	train_penalty   0.09 (  0.06)	weight_norm  22.01 ( 21.66)	train_acc   0.82 (  0.85)	train_minacc   0.02 (  0.03)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 8.1729 (8.0025)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.14it/s] 23%|##3       | 6/26 [00:00<00:01, 17.58it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.58it/s] 42%|####2     | 11/26 [00:00<00:00, 26.76it/s] 62%|######1   | 16/26 [00:00<00:00, 32.86it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.86it/s] 81%|########  | 21/26 [00:00<00:00, 35.52it/s]100%|##########| 26/26 [00:00<00:00, 28.68it/s]
Test: [   0/  26]	Loss 0.396 (0.396)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.396 (0.396)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.358 (0.382)	test_acc   0.87 (  0.85)	test_minacc   0.04 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.358 (0.382)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.04 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.97)
Test: [  20/  26]	Loss 0.335 (0.389)	test_acc   0.87 (  0.85)	test_minacc   0.07 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.335 (0.389)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.07 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.424 (0.389)	test_acc   0.83 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.424 (0.389)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.62it/s]
Test: [  0/  1]	Loss 1.883 (1.883)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.883 (1.883)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.883 (1.883)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.883 (1.883)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0408 (0.0580)	validation_time 0.0006 (0.0037)	train_time 0.0401 (0.0523)
record: (train_acc, test_acc) (0.8492000209093093, 0.11000000685453415)
last accs (train_acc, test_acc) (0.8492000209093093, 0.11000000685453415)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.10it/s]  8%|7         | 2/26 [00:00<00:03,  7.91it/s] 23%|##3       | 6/26 [00:00<00:01, 18.81it/s] 38%|###8      | 10/26 [00:00<00:00, 24.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.72it/s] 69%|######9   | 18/26 [00:00<00:00, 30.83it/s] 85%|########4 | 22/26 [00:00<00:00, 32.31it/s]100%|##########| 26/26 [00:00<00:00, 33.38it/s]100%|##########| 26/26 [00:01<00:00, 25.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.371 (0.383)	train_nll   0.37 (  0.38)	train_penalty   0.05 (  0.05)	weight_norm  22.14 ( 22.10)	train_acc   0.84 (  0.85)	train_minacc   0.09 (  0.08)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 8.2377 (8.1129)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 15%|#5        | 4/26 [00:00<00:01, 14.70it/s] 38%|###8      | 10/26 [00:00<00:00, 30.15it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.15it/s] 62%|######1   | 16/26 [00:00<00:00, 36.91it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.91it/s] 85%|########4 | 22/26 [00:00<00:00, 41.26it/s]100%|##########| 26/26 [00:00<00:00, 33.73it/s]
Test: [   0/  26]	Loss 0.362 (0.362)	test_acc   0.84 (  0.84)	test_minacc   0.22 (  0.22)	test_majacc   0.95 (  0.95)	Loss_d 0.362 (0.362)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.334 (0.354)	test_acc   0.87 (  0.85)	test_minacc   0.26 (  0.22)	test_majacc   0.96 (  0.96)	Loss_d 0.334 (0.354)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.26 (  0.22)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  20/  26]	Loss 0.312 (0.358)	test_acc   0.88 (  0.85)	test_minacc   0.33 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 0.312 (0.358)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.33 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.335 (0.356)	test_acc   0.85 (  0.85)	test_minacc   0.35 (  0.24)	test_majacc   0.95 (  0.96)	Loss_d 0.335 (0.356)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.35 (  0.24)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.88 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.47it/s]
Test: [  0/  1]	Loss 1.740 (1.740)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 1.740 (1.740)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 1.740 (1.740)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 1.740 (1.740)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.76)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0409 (0.0523)	validation_time 0.0004 (0.0026)	train_time 0.0405 (0.0483)
record: (train_acc, test_acc) (0.8523000226020813, 0.2540000081062317)
last accs (train_acc, test_acc) (0.8523000226020813, 0.2540000081062317)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 19%|#9        | 5/26 [00:00<00:00, 23.79it/s] 35%|###4      | 9/26 [00:00<00:00, 29.86it/s] 50%|#####     | 13/26 [00:00<00:00, 32.44it/s] 65%|######5   | 17/26 [00:00<00:00, 33.96it/s] 81%|########  | 21/26 [00:00<00:00, 35.49it/s] 96%|#########6| 25/26 [00:00<00:00, 36.07it/s]100%|##########| 26/26 [00:00<00:00, 30.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.321 (0.366)	train_nll   0.32 (  0.37)	train_penalty   0.02 (  0.04)	weight_norm  22.21 ( 22.18)	train_acc   0.86 (  0.85)	train_minacc   0.23 (  0.16)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 8.1653 (8.0920)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.67it/s] 27%|##6       | 7/26 [00:00<00:00, 32.67it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.67it/s] 50%|#####     | 13/26 [00:00<00:00, 39.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.90it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.90it/s] 92%|#########2| 24/26 [00:00<00:00, 42.59it/s]100%|##########| 26/26 [00:00<00:00, 37.24it/s]
Test: [   0/  26]	Loss 0.320 (0.320)	test_acc   0.87 (  0.87)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 0.320 (0.320)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.327 (0.331)	test_acc   0.88 (  0.86)	test_minacc   0.31 (  0.23)	test_majacc   0.97 (  0.96)	Loss_d 0.327 (0.331)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.31 (  0.23)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.305 (0.338)	test_acc   0.87 (  0.86)	test_minacc   0.22 (  0.24)	test_majacc   0.97 (  0.97)	Loss_d 0.305 (0.338)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.22 (  0.24)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  26/  26]	Loss 0.305 (0.337)	test_acc   0.88 (  0.86)	test_minacc   0.44 (  0.25)	test_majacc   0.97 (  0.97)	Loss_d 0.305 (0.337)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.44 (  0.25)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.26it/s]
Test: [  0/  1]	Loss 1.690 (1.690)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 1.690 (1.690)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 1.690 (1.690)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 1.690 (1.690)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.76)
Overall Timing[  3/  1]	epoch_time 0.0389 (0.0489)	validation_time 0.0004 (0.0020)	train_time 0.0385 (0.0459)
record: (train_acc, test_acc) (0.8523000226020813, 0.2540000081062317)
last accs (train_acc, test_acc) (0.8596000211834908, 0.25300002098083496)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.59it/s] 19%|#9        | 5/26 [00:00<00:01, 17.39it/s] 35%|###4      | 9/26 [00:00<00:00, 24.23it/s] 50%|#####     | 13/26 [00:00<00:00, 27.89it/s] 65%|######5   | 17/26 [00:00<00:00, 29.90it/s] 81%|########  | 21/26 [00:00<00:00, 31.89it/s] 96%|#########6| 25/26 [00:00<00:00, 33.37it/s]100%|##########| 26/26 [00:00<00:00, 26.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.296 (0.338)	train_nll   0.30 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.27 ( 22.24)	train_acc   0.85 (  0.86)	train_minacc   0.19 (  0.24)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 8.1687 (8.0809)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.48it/s] 15%|#5        | 4/26 [00:00<00:01, 18.56it/s] 35%|###4      | 9/26 [00:00<00:00, 30.94it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.94it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.81it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.00it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.00it/s]100%|##########| 26/26 [00:00<00:00, 44.96it/s]100%|##########| 26/26 [00:00<00:00, 34.74it/s]
Test: [   0/  26]	Loss 0.320 (0.320)	test_acc   0.86 (  0.86)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 0.320 (0.320)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.288 (0.305)	test_acc   0.89 (  0.87)	test_minacc   0.35 (  0.27)	test_majacc   0.98 (  0.97)	Loss_d 0.288 (0.305)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.35 (  0.27)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.272 (0.312)	test_acc   0.87 (  0.87)	test_minacc   0.28 (  0.26)	test_majacc   0.97 (  0.97)	Loss_d 0.272 (0.312)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.28 (  0.26)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  26/  26]	Loss 0.278 (0.311)	test_acc   0.90 (  0.87)	test_minacc   0.49 (  0.26)	test_majacc   0.98 (  0.97)	Loss_d 0.278 (0.311)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.49 (  0.26)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.88 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.59it/s]
Test: [  0/  1]	Loss 1.727 (1.727)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 1.727 (1.727)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.75 (  0.75)
Test: [  1/  1]	Loss 1.727 (1.727)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.98 (  0.98)	Loss_d 1.727 (1.727)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.75 (  0.75)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0410 (0.0474)	validation_time 0.0003 (0.0017)	train_time 0.0407 (0.0448)
record: (train_acc, test_acc) (0.8676000247001648, 0.26100000739097595)
last accs (train_acc, test_acc) (0.8676000247001648, 0.26100000739097595)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.66it/s] 19%|#9        | 5/26 [00:00<00:01, 20.30it/s] 35%|###4      | 9/26 [00:00<00:00, 27.17it/s] 50%|#####     | 13/26 [00:00<00:00, 31.03it/s] 65%|######5   | 17/26 [00:00<00:00, 33.40it/s] 81%|########  | 21/26 [00:00<00:00, 33.92it/s] 96%|#########6| 25/26 [00:00<00:00, 34.64it/s]100%|##########| 26/26 [00:00<00:00, 28.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.294 (0.322)	train_nll   0.29 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.33 ( 22.30)	train_acc   0.85 (  0.86)	train_minacc   0.21 (  0.29)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 8.2443 (8.1247)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.56it/s] 27%|##6       | 7/26 [00:00<00:00, 35.98it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.98it/s] 46%|####6     | 12/26 [00:00<00:00, 40.84it/s] 65%|######5   | 17/26 [00:00<00:00, 42.70it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.70it/s] 88%|########8 | 23/26 [00:00<00:00, 43.35it/s]100%|##########| 26/26 [00:00<00:00, 38.91it/s]
Test: [   0/  26]	Loss 0.302 (0.302)	test_acc   0.87 (  0.87)	test_minacc   0.39 (  0.39)	test_majacc   0.96 (  0.96)	Loss_d 0.302 (0.302)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.264 (0.293)	test_acc   0.90 (  0.87)	test_minacc   0.44 (  0.32)	test_majacc   0.98 (  0.97)	Loss_d 0.264 (0.293)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.44 (  0.32)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  20/  26]	Loss 0.260 (0.299)	test_acc   0.88 (  0.87)	test_minacc   0.33 (  0.30)	test_majacc   0.97 (  0.97)	Loss_d 0.260 (0.299)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.33 (  0.30)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.263 (0.298)	test_acc   0.87 (  0.87)	test_minacc   0.37 (  0.30)	test_majacc   0.98 (  0.97)	Loss_d 0.263 (0.298)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.37 (  0.30)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.87 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.84it/s]
Test: [  0/  1]	Loss 1.717 (1.717)	test_acc   0.29 (  0.29)	test_minacc   0.21 (  0.21)	test_majacc   0.98 (  0.98)	Loss_d 1.717 (1.717)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.717 (1.717)	test_acc   0.29 (  0.29)	test_minacc   0.21 (  0.21)	test_majacc   0.98 (  0.98)	Loss_d 1.717 (1.717)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0390 (0.0460)	validation_time 0.0004 (0.0015)	train_time 0.0386 (0.0438)
record: (train_acc, test_acc) (0.8706000247597694, 0.2880000174045563)
last accs (train_acc, test_acc) (0.8706000247597694, 0.2880000174045563)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.75it/s] 19%|#9        | 5/26 [00:00<00:00, 23.97it/s] 35%|###4      | 9/26 [00:00<00:00, 28.64it/s] 50%|#####     | 13/26 [00:00<00:00, 30.80it/s] 65%|######5   | 17/26 [00:00<00:00, 31.33it/s] 81%|########  | 21/26 [00:00<00:00, 32.59it/s] 96%|#########6| 25/26 [00:00<00:00, 33.42it/s]100%|##########| 26/26 [00:00<00:00, 28.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.262 (0.306)	train_nll   0.26 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.40 ( 22.37)	train_acc   0.88 (  0.87)	train_minacc   0.37 (  0.37)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 8.1421 (8.1296)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.57it/s] 23%|##3       | 6/26 [00:00<00:00, 25.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.22it/s] 42%|####2     | 11/26 [00:00<00:00, 32.63it/s] 65%|######5   | 17/26 [00:00<00:00, 36.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.41it/s] 88%|########8 | 23/26 [00:00<00:00, 42.01it/s]100%|##########| 26/26 [00:00<00:00, 33.70it/s]
Test: [   0/  26]	Loss 0.286 (0.286)	test_acc   0.88 (  0.88)	test_minacc   0.42 (  0.42)	test_majacc   0.96 (  0.96)	Loss_d 0.286 (0.286)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.249 (0.283)	test_acc   0.91 (  0.88)	test_minacc   0.52 (  0.38)	test_majacc   0.97 (  0.96)	Loss_d 0.249 (0.283)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.52 (  0.38)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.87 (  0.88)
Test: [  20/  26]	Loss 0.244 (0.286)	test_acc   0.88 (  0.88)	test_minacc   0.39 (  0.37)	test_majacc   0.96 (  0.96)	Loss_d 0.244 (0.286)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.39 (  0.37)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.238 (0.285)	test_acc   0.90 (  0.88)	test_minacc   0.53 (  0.39)	test_majacc   0.98 (  0.97)	Loss_d 0.238 (0.285)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.53 (  0.39)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.85 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.23it/s]
Test: [  0/  1]	Loss 1.627 (1.627)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.97 (  0.97)	Loss_d 1.627 (1.627)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.63 (  0.63)
Test: [  1/  1]	Loss 1.627 (1.627)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.97 (  0.97)	Loss_d 1.627 (1.627)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.63 (  0.63)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0403 (0.0452)	validation_time 0.0003 (0.0013)	train_time 0.0400 (0.0432)
record: (train_acc, test_acc) (0.8782000175118446, 0.35600000619888306)
last accs (train_acc, test_acc) (0.8782000175118446, 0.35600000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.95it/s] 19%|#9        | 5/26 [00:00<00:00, 22.69it/s] 35%|###4      | 9/26 [00:00<00:00, 28.52it/s] 50%|#####     | 13/26 [00:00<00:00, 31.61it/s] 65%|######5   | 17/26 [00:00<00:00, 33.25it/s] 81%|########  | 21/26 [00:00<00:00, 34.29it/s] 96%|#########6| 25/26 [00:00<00:00, 34.45it/s]100%|##########| 26/26 [00:00<00:00, 29.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.237 (0.293)	train_nll   0.24 (  0.29)	train_penalty   0.00 (  0.02)	weight_norm  22.50 ( 22.45)	train_acc   0.90 (  0.87)	train_minacc   0.49 (  0.41)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 8.1750 (8.1842)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.12it/s] 27%|##6       | 7/26 [00:00<00:00, 34.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.18it/s] 46%|####6     | 12/26 [00:00<00:00, 39.40it/s] 65%|######5   | 17/26 [00:00<00:00, 39.30it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.30it/s] 85%|########4 | 22/26 [00:00<00:00, 41.60it/s]100%|##########| 26/26 [00:00<00:00, 36.62it/s]
Test: [   0/  26]	Loss 0.252 (0.252)	test_acc   0.89 (  0.89)	test_minacc   0.61 (  0.61)	test_majacc   0.95 (  0.95)	Loss_d 0.252 (0.252)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.221 (0.257)	test_acc   0.92 (  0.89)	test_minacc   0.67 (  0.56)	test_majacc   0.96 (  0.95)	Loss_d 0.221 (0.257)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.67 (  0.56)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.82 (  0.83)
Test: [  20/  26]	Loss 0.221 (0.262)	test_acc   0.89 (  0.89)	test_minacc   0.56 (  0.55)	test_majacc   0.94 (  0.95)	Loss_d 0.221 (0.262)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.84 (  0.83)
Test: [  26/  26]	Loss 0.206 (0.260)	test_acc   0.93 (  0.89)	test_minacc   0.72 (  0.56)	test_majacc   0.97 (  0.95)	Loss_d 0.206 (0.260)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.72 (  0.56)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.80 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.73it/s]
Test: [  0/  1]	Loss 1.556 (1.556)	test_acc   0.48 (  0.48)	test_minacc   0.42 (  0.42)	test_majacc   0.96 (  0.96)	Loss_d 1.556 (1.556)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 1.556 (1.556)	test_acc   0.48 (  0.48)	test_minacc   0.42 (  0.42)	test_majacc   0.96 (  0.96)	Loss_d 1.556 (1.556)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.41 (  0.41)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0386 (0.0444)	validation_time 0.0004 (0.0012)	train_time 0.0382 (0.0426)
record: (train_acc, test_acc) (0.8904000235199928, 0.47700002789497375)
last accs (train_acc, test_acc) (0.8904000235199928, 0.47700002789497375)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.75it/s] 27%|##6       | 7/26 [00:00<00:00, 33.13it/s] 42%|####2     | 11/26 [00:00<00:00, 34.73it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.42it/s] 88%|########8 | 23/26 [00:00<00:00, 35.82it/s]100%|##########| 26/26 [00:00<00:00, 32.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.207 (0.274)	train_nll   0.21 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  22.64 ( 22.57)	train_acc   0.93 (  0.89)	train_minacc   0.67 (  0.49)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.2287 (8.3602)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 15%|#5        | 4/26 [00:00<00:01, 16.11it/s] 35%|###4      | 9/26 [00:00<00:00, 28.19it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.19it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.75it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.75it/s] 92%|#########2| 24/26 [00:00<00:00, 38.86it/s]100%|##########| 26/26 [00:00<00:00, 31.50it/s]
Test: [   0/  26]	Loss 0.244 (0.244)	test_acc   0.90 (  0.90)	test_minacc   0.64 (  0.64)	test_majacc   0.95 (  0.95)	Loss_d 0.244 (0.244)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.204 (0.238)	test_acc   0.92 (  0.90)	test_minacc   0.67 (  0.59)	test_majacc   0.96 (  0.95)	Loss_d 0.204 (0.238)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.67 (  0.59)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.82 (  0.83)
Test: [  20/  26]	Loss 0.197 (0.239)	test_acc   0.91 (  0.90)	test_minacc   0.65 (  0.59)	test_majacc   0.95 (  0.96)	Loss_d 0.197 (0.239)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.65 (  0.59)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.83 (  0.83)
Test: [  26/  26]	Loss 0.175 (0.237)	test_acc   0.94 (  0.91)	test_minacc   0.74 (  0.60)	test_majacc   0.98 (  0.96)	Loss_d 0.175 (0.237)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.74 (  0.60)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.78 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.54it/s]
Test: [  0/  1]	Loss 1.615 (1.615)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.95 (  0.95)	Loss_d 1.615 (1.615)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 1.615 (1.615)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.95 (  0.95)	Loss_d 1.615 (1.615)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.41 (  0.41)
Overall Timing[  8/  1]	epoch_time 0.0431 (0.0442)	validation_time 0.0004 (0.0011)	train_time 0.0427 (0.0426)
record: (train_acc, test_acc) (0.8904000235199928, 0.47700002789497375)
last accs (train_acc, test_acc) (0.9057000209093093, 0.43700000643730164)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.85it/s] 23%|##3       | 6/26 [00:00<00:00, 28.87it/s] 38%|###8      | 10/26 [00:00<00:00, 31.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.86it/s] 69%|######9   | 18/26 [00:00<00:00, 33.35it/s] 85%|########4 | 22/26 [00:00<00:00, 33.99it/s]100%|##########| 26/26 [00:00<00:00, 35.33it/s]100%|##########| 26/26 [00:00<00:00, 30.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.210 (0.266)	train_nll   0.21 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  22.81 ( 22.72)	train_acc   0.92 (  0.89)	train_minacc   0.67 (  0.48)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 8.4401 (8.3691)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.19it/s] 23%|##3       | 6/26 [00:00<00:00, 26.12it/s] 38%|###8      | 10/26 [00:00<00:00, 31.49it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.50it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.50it/s] 96%|#########6| 25/26 [00:00<00:00, 38.07it/s]100%|##########| 26/26 [00:00<00:00, 32.44it/s]
Test: [   0/  26]	Loss 0.222 (0.222)	test_acc   0.92 (  0.92)	test_minacc   0.71 (  0.71)	test_majacc   0.95 (  0.95)	Loss_d 0.222 (0.222)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.178 (0.231)	test_acc   0.94 (  0.91)	test_minacc   0.69 (  0.64)	test_majacc   0.98 (  0.95)	Loss_d 0.178 (0.231)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.69 (  0.64)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.82 (  0.81)
Test: [  20/  26]	Loss 0.194 (0.228)	test_acc   0.91 (  0.91)	test_minacc   0.72 (  0.63)	test_majacc   0.94 (  0.96)	Loss_d 0.194 (0.228)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.72 (  0.63)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.80 (  0.81)
Test: [  26/  26]	Loss 0.174 (0.225)	test_acc   0.94 (  0.91)	test_minacc   0.77 (  0.64)	test_majacc   0.97 (  0.96)	Loss_d 0.174 (0.225)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.77 (  0.64)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.76 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.15it/s]
Test: [  0/  1]	Loss 1.681 (1.681)	test_acc   0.49 (  0.49)	test_minacc   0.43 (  0.43)	test_majacc   0.96 (  0.96)	Loss_d 1.681 (1.681)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.681 (1.681)	test_acc   0.49 (  0.49)	test_minacc   0.43 (  0.43)	test_majacc   0.96 (  0.96)	Loss_d 1.681 (1.681)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.31 (  0.31)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0397 (0.0438)	validation_time 0.0004 (0.0010)	train_time 0.0393 (0.0423)
record: (train_acc, test_acc) (0.9091000239849091, 0.48500001430511475)
last accs (train_acc, test_acc) (0.9091000239849091, 0.48500001430511475)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.62it/s] 19%|#9        | 5/26 [00:00<00:01, 17.95it/s] 35%|###4      | 9/26 [00:00<00:00, 24.90it/s] 50%|#####     | 13/26 [00:00<00:00, 28.64it/s] 65%|######5   | 17/26 [00:00<00:00, 30.97it/s] 81%|########  | 21/26 [00:00<00:00, 32.50it/s] 96%|#########6| 25/26 [00:00<00:00, 33.42it/s]100%|##########| 26/26 [00:00<00:00, 26.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.209 (0.266)	train_nll   0.21 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  23.01 ( 22.91)	train_acc   0.94 (  0.89)	train_minacc   0.65 (  0.49)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 8.4842 (8.4071)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 27%|##6       | 7/26 [00:00<00:00, 29.49it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.49it/s] 46%|####6     | 12/26 [00:00<00:00, 36.62it/s] 65%|######5   | 17/26 [00:00<00:00, 40.38it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.38it/s] 85%|########4 | 22/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 34.77it/s]
Test: [   0/  26]	Loss 0.220 (0.220)	test_acc   0.90 (  0.90)	test_minacc   0.61 (  0.61)	test_majacc   0.95 (  0.95)	Loss_d 0.220 (0.220)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.196 (0.224)	test_acc   0.92 (  0.90)	test_minacc   0.63 (  0.62)	test_majacc   0.97 (  0.95)	Loss_d 0.196 (0.224)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.63 (  0.62)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.83 (  0.81)
Test: [  20/  26]	Loss 0.163 (0.220)	test_acc   0.93 (  0.91)	test_minacc   0.72 (  0.62)	test_majacc   0.96 (  0.96)	Loss_d 0.163 (0.220)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.72 (  0.62)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.81)
Test: [  26/  26]	Loss 0.166 (0.217)	test_acc   0.95 (  0.91)	test_minacc   0.81 (  0.64)	test_majacc   0.98 (  0.96)	Loss_d 0.166 (0.217)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.81 (  0.64)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.75 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.45it/s]
Test: [  0/  1]	Loss 1.809 (1.809)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.93 (  0.93)	Loss_d 1.809 (1.809)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 1.809 (1.809)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.93 (  0.93)	Loss_d 1.809 (1.809)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
Overall Timing[ 10/  1]	epoch_time 0.0390 (0.0433)	validation_time 0.0005 (0.0010)	train_time 0.0385 (0.0419)
record: (train_acc, test_acc) (0.9091000239849091, 0.48500001430511475)
last accs (train_acc, test_acc) (0.9097000210881233, 0.45100003480911255)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.57it/s] 19%|#9        | 5/26 [00:00<00:00, 24.13it/s] 35%|###4      | 9/26 [00:00<00:00, 30.47it/s] 50%|#####     | 13/26 [00:00<00:00, 33.18it/s] 65%|######5   | 17/26 [00:00<00:00, 33.46it/s] 81%|########  | 21/26 [00:00<00:00, 34.28it/s] 96%|#########6| 25/26 [00:00<00:00, 34.90it/s]100%|##########| 26/26 [00:00<00:00, 30.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.240 (0.250)	train_nll   0.24 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.23 ( 23.11)	train_acc   0.89 (  0.89)	train_minacc   0.44 (  0.54)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 7.6859 (8.4815)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.88it/s] 27%|##6       | 7/26 [00:00<00:00, 36.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.96it/s] 46%|####6     | 12/26 [00:00<00:00, 39.25it/s] 65%|######5   | 17/26 [00:00<00:00, 42.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.37it/s] 85%|########4 | 22/26 [00:00<00:00, 43.99it/s]100%|##########| 26/26 [00:00<00:00, 37.77it/s]
Test: [   0/  26]	Loss 0.211 (0.211)	test_acc   0.91 (  0.91)	test_minacc   0.54 (  0.54)	test_majacc   0.98 (  0.98)	Loss_d 0.211 (0.211)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.196 (0.225)	test_acc   0.94 (  0.91)	test_minacc   0.63 (  0.56)	test_majacc   0.99 (  0.97)	Loss_d 0.196 (0.225)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.63 (  0.56)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.85 (  0.86)
Test: [  20/  26]	Loss 0.201 (0.225)	test_acc   0.91 (  0.91)	test_minacc   0.56 (  0.57)	test_majacc   0.97 (  0.97)	Loss_d 0.201 (0.225)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.56 (  0.57)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
Test: [  26/  26]	Loss 0.184 (0.221)	test_acc   0.95 (  0.91)	test_minacc   0.79 (  0.58)	test_majacc   0.99 (  0.97)	Loss_d 0.184 (0.221)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.79 (  0.58)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.82 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.36it/s]
Test: [  0/  1]	Loss 1.721 (1.721)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.99 (  0.99)	Loss_d 1.721 (1.721)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 1.721 (1.721)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.99 (  0.99)	Loss_d 1.721 (1.721)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.57 (  0.57)
Overall Timing[ 11/  1]	epoch_time 0.0378 (0.0429)	validation_time 0.0004 (0.0009)	train_time 0.0374 (0.0416)
record: (train_acc, test_acc) (0.9091000239849091, 0.48500001430511475)
last accs (train_acc, test_acc) (0.9139000183939934, 0.3800000250339508)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.40it/s] 19%|#9        | 5/26 [00:00<00:00, 25.49it/s] 35%|###4      | 9/26 [00:00<00:00, 30.34it/s] 50%|#####     | 13/26 [00:00<00:00, 32.49it/s] 65%|######5   | 17/26 [00:00<00:00, 33.62it/s] 81%|########  | 21/26 [00:00<00:00, 34.57it/s] 96%|#########6| 25/26 [00:00<00:00, 34.81it/s]100%|##########| 26/26 [00:00<00:00, 30.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.213 (0.233)	train_nll   0.21 (  0.23)	train_penalty   0.01 (  0.01)	weight_norm  23.49 ( 23.36)	train_acc   0.91 (  0.90)	train_minacc   0.53 (  0.60)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5001 (8.4027)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.91it/s] 35%|###4      | 9/26 [00:00<00:00, 36.38it/s]                                               35%|###4      | 9/26 [00:00<00:00, 36.38it/s] 54%|#####3    | 14/26 [00:00<00:00, 40.60it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.68it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.68it/s] 92%|#########2| 24/26 [00:00<00:00, 43.96it/s]100%|##########| 26/26 [00:00<00:00, 36.84it/s]
Test: [   0/  26]	Loss 0.227 (0.227)	test_acc   0.91 (  0.91)	test_minacc   0.58 (  0.58)	test_majacc   0.97 (  0.97)	Loss_d 0.227 (0.227)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.203 (0.220)	test_acc   0.93 (  0.91)	test_minacc   0.59 (  0.56)	test_majacc   0.98 (  0.97)	Loss_d 0.203 (0.220)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.86 (  0.86)
Test: [  20/  26]	Loss 0.194 (0.221)	test_acc   0.93 (  0.91)	test_minacc   0.69 (  0.58)	test_majacc   0.97 (  0.97)	Loss_d 0.194 (0.221)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.69 (  0.58)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  26/  26]	Loss 0.184 (0.219)	test_acc   0.94 (  0.92)	test_minacc   0.72 (  0.59)	test_majacc   0.99 (  0.97)	Loss_d 0.184 (0.219)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.72 (  0.59)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.80 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.13it/s]
Test: [  0/  1]	Loss 1.815 (1.815)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 1.815 (1.815)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 1.815 (1.815)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 1.815 (1.815)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.57 (  0.57)
Overall Timing[ 12/  1]	epoch_time 0.0389 (0.0426)	validation_time 0.0003 (0.0009)	train_time 0.0386 (0.0413)
record: (train_acc, test_acc) (0.9091000239849091, 0.48500001430511475)
last accs (train_acc, test_acc) (0.9152000205516815, 0.3680000305175781)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.12it/s] 19%|#9        | 5/26 [00:00<00:00, 23.80it/s] 35%|###4      | 9/26 [00:00<00:00, 29.33it/s] 50%|#####     | 13/26 [00:00<00:00, 32.01it/s] 65%|######5   | 17/26 [00:00<00:00, 33.52it/s] 81%|########  | 21/26 [00:00<00:00, 34.24it/s] 96%|#########6| 25/26 [00:00<00:00, 34.93it/s]100%|##########| 26/26 [00:00<00:00, 29.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.160 (0.211)	train_nll   0.16 (  0.21)	train_penalty   0.00 (  0.01)	weight_norm  23.76 ( 23.62)	train_acc   0.94 (  0.91)	train_minacc   0.70 (  0.65)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 8.2426 (8.3563)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.49it/s] 27%|##6       | 7/26 [00:00<00:00, 34.23it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.23it/s] 46%|####6     | 12/26 [00:00<00:00, 39.86it/s] 65%|######5   | 17/26 [00:00<00:00, 42.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.33it/s] 85%|########4 | 22/26 [00:00<00:00, 43.77it/s]100%|##########| 26/26 [00:00<00:00, 37.99it/s]
Test: [   0/  26]	Loss 0.188 (0.188)	test_acc   0.93 (  0.93)	test_minacc   0.69 (  0.69)	test_majacc   0.97 (  0.97)	Loss_d 0.188 (0.188)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.159 (0.200)	test_acc   0.95 (  0.92)	test_minacc   0.76 (  0.65)	test_majacc   0.98 (  0.97)	Loss_d 0.159 (0.200)	test_acc_d   0.95 (  0.92)	test_minacc_d   0.76 (  0.65)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.82 (  0.82)
Test: [  20/  26]	Loss 0.146 (0.192)	test_acc   0.94 (  0.92)	test_minacc   0.76 (  0.67)	test_majacc   0.97 (  0.97)	Loss_d 0.146 (0.192)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.76 (  0.67)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.81 (  0.81)
Test: [  26/  26]	Loss 0.123 (0.185)	test_acc   0.98 (  0.93)	test_minacc   0.91 (  0.69)	test_majacc   1.00 (  0.97)	Loss_d 0.123 (0.185)	test_acc_d   0.98 (  0.93)	test_minacc_d   0.91 (  0.69)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.75 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.44it/s]
Test: [  0/  1]	Loss 2.192 (2.192)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.92 (  0.92)	Loss_d 2.192 (2.192)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 2.192 (2.192)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.92 (  0.92)	Loss_d 2.192 (2.192)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.44 (  0.44)
Overall Timing[ 13/  1]	epoch_time 0.0386 (0.0423)	validation_time 0.0004 (0.0009)	train_time 0.0381 (0.0411)
record: (train_acc, test_acc) (0.9091000239849091, 0.48500001430511475)
last accs (train_acc, test_acc) (0.9275000210404396, 0.40300002694129944)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.03it/s] 23%|##3       | 6/26 [00:00<00:00, 27.37it/s] 38%|###8      | 10/26 [00:00<00:00, 30.65it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.21it/s] 69%|######9   | 18/26 [00:00<00:00, 32.92it/s] 85%|########4 | 22/26 [00:00<00:00, 33.96it/s]100%|##########| 26/26 [00:00<00:00, 34.81it/s]100%|##########| 26/26 [00:00<00:00, 30.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.170 (0.192)	train_nll   0.17 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm  24.05 ( 23.91)	train_acc   0.93 (  0.92)	train_minacc   0.70 (  0.69)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.6874 (8.2807)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 23%|##3       | 6/26 [00:00<00:00, 28.05it/s] 38%|###8      | 10/26 [00:00<00:00, 32.73it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.73it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.74it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 37.74it/s] 81%|########  | 21/26 [00:00<00:00, 38.44it/s]100%|##########| 26/26 [00:00<00:00, 33.73it/s]
Test: [   0/  26]	Loss 0.186 (0.186)	test_acc   0.94 (  0.94)	test_minacc   0.75 (  0.75)	test_majacc   0.97 (  0.97)	Loss_d 0.186 (0.186)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.181 (0.211)	test_acc   0.92 (  0.92)	test_minacc   0.74 (  0.68)	test_majacc   0.94 (  0.96)	Loss_d 0.181 (0.211)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.74 (  0.68)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.76 (  0.79)
Test: [  20/  26]	Loss 0.141 (0.197)	test_acc   0.95 (  0.92)	test_minacc   0.74 (  0.69)	test_majacc   0.98 (  0.96)	Loss_d 0.141 (0.197)	test_acc_d   0.95 (  0.92)	test_minacc_d   0.74 (  0.69)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.80 (  0.78)
Test: [  26/  26]	Loss 0.112 (0.185)	test_acc   0.98 (  0.93)	test_minacc   0.93 (  0.71)	test_majacc   0.99 (  0.96)	Loss_d 0.112 (0.185)	test_acc_d   0.98 (  0.93)	test_minacc_d   0.93 (  0.71)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.73 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.10it/s]
Test: [  0/  1]	Loss 2.415 (2.415)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 2.415 (2.415)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 2.415 (2.415)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 2.415 (2.415)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.35 (  0.35)
Overall Timing[ 14/  1]	epoch_time 0.0411 (0.0422)	validation_time 0.0004 (0.0008)	train_time 0.0406 (0.0411)
record: (train_acc, test_acc) (0.9091000239849091, 0.48500001430511475)
last accs (train_acc, test_acc) (0.9260000176429749, 0.45000001788139343)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.94it/s] 19%|#9        | 5/26 [00:00<00:01, 20.51it/s] 35%|###4      | 9/26 [00:00<00:00, 27.67it/s] 50%|#####     | 13/26 [00:00<00:00, 31.53it/s] 65%|######5   | 17/26 [00:00<00:00, 34.00it/s] 81%|########  | 21/26 [00:00<00:00, 35.31it/s] 96%|#########6| 25/26 [00:00<00:00, 36.47it/s]100%|##########| 26/26 [00:00<00:00, 29.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.002 (0.079)	train_nll   0.43 (  0.27)	train_penalty   0.00 (  0.00)	weight_norm  24.34 ( 24.22)	train_acc   0.84 (  0.89)	train_minacc   0.72 (  0.70)	train_majacc   0.86 (  0.93)	train_corr   0.00 (  0.00)	l1 6.9517 (7.9109)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.95it/s] 12%|#1        | 3/26 [00:00<00:01, 11.80it/s] 35%|###4      | 9/26 [00:00<00:00, 29.68it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.68it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.14it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.26it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.26it/s] 96%|#########6| 25/26 [00:00<00:00, 41.63it/s]100%|##########| 26/26 [00:00<00:00, 32.42it/s]
Test: [   0/  26]	Loss 0.400 (0.400)	test_acc   0.85 (  0.85)	test_minacc   0.66 (  0.66)	test_majacc   0.89 (  0.89)	Loss_d 0.400 (0.400)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.447 (0.415)	test_acc   0.84 (  0.85)	test_minacc   0.69 (  0.66)	test_majacc   0.87 (  0.88)	Loss_d 0.447 (0.415)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.69 (  0.66)	test_majacc_d   0.87 (  0.88)	test_corr_d   0.58 (  0.62)
Test: [  20/  26]	Loss 0.399 (0.403)	test_acc   0.86 (  0.85)	test_minacc   0.67 (  0.65)	test_majacc   0.89 (  0.89)	Loss_d 0.399 (0.403)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.67 (  0.65)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.63 (  0.63)
Test: [  26/  26]	Loss 0.414 (0.404)	test_acc   0.85 (  0.85)	test_minacc   0.74 (  0.66)	test_majacc   0.87 (  0.88)	Loss_d 0.414 (0.404)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.74 (  0.66)	test_majacc_d   0.87 (  0.88)	test_corr_d   0.54 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.50it/s]
Test: [  0/  1]	Loss 1.120 (1.120)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.88 (  0.88)	Loss_d 1.120 (1.120)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 1.120 (1.120)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.88 (  0.88)	Loss_d 1.120 (1.120)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.13 (  0.13)
Overall Timing[ 15/  1]	epoch_time 0.0376 (0.0419)	validation_time 0.0003 (0.0008)	train_time 0.0372 (0.0408)
record: (train_acc, test_acc) (0.9091000239849091, 0.48500001430511475)
last accs (train_acc, test_acc) (0.8488000309467316, 0.4830000102519989)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.60it/s] 19%|#9        | 5/26 [00:00<00:01, 17.72it/s] 35%|###4      | 9/26 [00:00<00:00, 24.68it/s] 50%|#####     | 13/26 [00:00<00:00, 28.63it/s] 65%|######5   | 17/26 [00:00<00:00, 31.45it/s] 81%|########  | 21/26 [00:00<00:00, 33.32it/s] 96%|#########6| 25/26 [00:00<00:00, 34.23it/s]100%|##########| 26/26 [00:00<00:00, 27.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.006 (0.002)	train_nll   0.36 (  0.42)	train_penalty   0.01 (  0.00)	weight_norm  24.40 ( 24.38)	train_acc   0.83 (  0.82)	train_minacc   0.86 (  0.79)	train_majacc   0.82 (  0.83)	train_corr   0.00 (  0.00)	l1 6.1054 (6.3916)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.44it/s] 23%|##3       | 6/26 [00:00<00:00, 28.98it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.98it/s] 42%|####2     | 11/26 [00:00<00:00, 36.49it/s] 62%|######1   | 16/26 [00:00<00:00, 40.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.62it/s] 81%|########  | 21/26 [00:00<00:00, 38.04it/s]100%|##########| 26/26 [00:00<00:00, 34.41it/s]
Test: [   0/  26]	Loss 0.396 (0.396)	test_acc   0.81 (  0.81)	test_minacc   0.78 (  0.78)	test_majacc   0.82 (  0.82)	Loss_d 0.396 (0.396)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.412 (0.402)	test_acc   0.80 (  0.81)	test_minacc   0.85 (  0.81)	test_majacc   0.79 (  0.81)	Loss_d 0.412 (0.402)	test_acc_d   0.80 (  0.81)	test_minacc_d   0.85 (  0.81)	test_majacc_d   0.79 (  0.81)	test_corr_d   0.52 (  0.54)
Test: [  20/  26]	Loss 0.390 (0.396)	test_acc   0.80 (  0.81)	test_minacc   0.83 (  0.79)	test_majacc   0.79 (  0.81)	Loss_d 0.390 (0.396)	test_acc_d   0.80 (  0.81)	test_minacc_d   0.83 (  0.79)	test_majacc_d   0.79 (  0.81)	test_corr_d   0.55 (  0.55)
Test: [  26/  26]	Loss 0.370 (0.398)	test_acc   0.82 (  0.81)	test_minacc   0.86 (  0.80)	test_majacc   0.81 (  0.81)	Loss_d 0.370 (0.398)	test_acc_d   0.82 (  0.81)	test_minacc_d   0.86 (  0.80)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.49 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.91it/s]
Test: [  0/  1]	Loss 0.960 (0.960)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.79 (  0.79)	Loss_d 0.960 (0.960)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.79 (  0.79)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.960 (0.960)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.79 (  0.79)	Loss_d 0.960 (0.960)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.79 (  0.79)	test_corr_d  -0.01 ( -0.01)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0405 (0.0418)	validation_time 0.0004 (0.0008)	train_time 0.0400 (0.0408)
record: (train_acc, test_acc) (0.8069000297784805, 0.593000054359436)
last accs (train_acc, test_acc) (0.8069000297784805, 0.593000054359436)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.10it/s] 19%|#9        | 5/26 [00:00<00:00, 21.94it/s] 35%|###4      | 9/26 [00:00<00:00, 27.85it/s] 50%|#####     | 13/26 [00:00<00:00, 30.44it/s] 65%|######5   | 17/26 [00:00<00:00, 32.54it/s] 81%|########  | 21/26 [00:00<00:00, 34.10it/s] 96%|#########6| 25/26 [00:00<00:00, 34.40it/s]100%|##########| 26/26 [00:00<00:00, 28.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.001 (0.001)	train_nll   0.46 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  24.41 ( 24.40)	train_acc   0.79 (  0.80)	train_minacc   0.84 (  0.79)	train_majacc   0.78 (  0.80)	train_corr   0.00 (  0.00)	l1 6.0401 (6.1254)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.55it/s] 27%|##6       | 7/26 [00:00<00:00, 35.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.83it/s] 46%|####6     | 12/26 [00:00<00:00, 40.38it/s] 65%|######5   | 17/26 [00:00<00:00, 42.88it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.88it/s] 85%|########4 | 22/26 [00:00<00:00, 44.28it/s]100%|##########| 26/26 [00:00<00:00, 38.29it/s]
Test: [   0/  26]	Loss 0.444 (0.444)	test_acc   0.81 (  0.81)	test_minacc   0.78 (  0.78)	test_majacc   0.82 (  0.82)	Loss_d 0.444 (0.444)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.459 (0.439)	test_acc   0.82 (  0.81)	test_minacc   0.81 (  0.80)	test_majacc   0.82 (  0.82)	Loss_d 0.459 (0.439)	test_acc_d   0.82 (  0.81)	test_minacc_d   0.81 (  0.80)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.50 (  0.53)
Test: [  20/  26]	Loss 0.413 (0.427)	test_acc   0.82 (  0.82)	test_minacc   0.76 (  0.78)	test_majacc   0.83 (  0.83)	Loss_d 0.413 (0.427)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.76 (  0.78)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.56 (  0.55)
Test: [  26/  26]	Loss 0.455 (0.430)	test_acc   0.80 (  0.82)	test_minacc   0.81 (  0.79)	test_majacc   0.80 (  0.82)	Loss_d 0.455 (0.430)	test_acc_d   0.80 (  0.82)	test_minacc_d   0.81 (  0.79)	test_majacc_d   0.80 (  0.82)	test_corr_d   0.46 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.59it/s]
Test: [  0/  1]	Loss 0.898 (0.898)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.83 (  0.83)	Loss_d 0.898 (0.898)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.83 (  0.83)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.898 (0.898)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.83 (  0.83)	Loss_d 0.898 (0.898)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.83 (  0.83)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 17/  1]	epoch_time 0.0397 (0.0417)	validation_time 0.0003 (0.0008)	train_time 0.0394 (0.0407)
record: (train_acc, test_acc) (0.8069000297784805, 0.593000054359436)
last accs (train_acc, test_acc) (0.8164000225663185, 0.5920000076293945)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.33it/s] 19%|#9        | 5/26 [00:00<00:00, 24.19it/s] 35%|###4      | 9/26 [00:00<00:00, 28.67it/s] 50%|#####     | 13/26 [00:00<00:00, 30.93it/s] 65%|######5   | 17/26 [00:00<00:00, 31.68it/s] 81%|########  | 21/26 [00:00<00:00, 33.14it/s] 96%|#########6| 25/26 [00:00<00:00, 33.98it/s]100%|##########| 26/26 [00:00<00:00, 29.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.001 (0.001)	train_nll   0.42 (  0.44)	train_penalty   0.00 (  0.00)	weight_norm  24.41 ( 24.41)	train_acc   0.80 (  0.81)	train_minacc   0.81 (  0.79)	train_majacc   0.80 (  0.81)	train_corr   0.00 (  0.00)	l1 5.9020 (6.0302)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.55it/s] 31%|###       | 8/26 [00:00<00:00, 35.26it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.26it/s] 50%|#####     | 13/26 [00:00<00:00, 39.61it/s] 69%|######9   | 18/26 [00:00<00:00, 42.08it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.08it/s] 88%|########8 | 23/26 [00:00<00:00, 39.80it/s]100%|##########| 26/26 [00:00<00:00, 36.83it/s]
Test: [   0/  26]	Loss 0.424 (0.424)	test_acc   0.81 (  0.81)	test_minacc   0.75 (  0.75)	test_majacc   0.82 (  0.82)	Loss_d 0.424 (0.424)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.437 (0.416)	test_acc   0.83 (  0.83)	test_minacc   0.78 (  0.79)	test_majacc   0.83 (  0.84)	Loss_d 0.437 (0.416)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.83 (  0.84)	test_corr_d   0.55 (  0.58)
Test: [  20/  26]	Loss 0.369 (0.406)	test_acc   0.86 (  0.83)	test_minacc   0.81 (  0.76)	test_majacc   0.87 (  0.85)	Loss_d 0.369 (0.406)	test_acc_d   0.86 (  0.83)	test_minacc_d   0.81 (  0.76)	test_majacc_d   0.87 (  0.85)	test_corr_d   0.61 (  0.59)
Test: [  26/  26]	Loss 0.427 (0.407)	test_acc   0.83 (  0.83)	test_minacc   0.79 (  0.78)	test_majacc   0.84 (  0.84)	Loss_d 0.427 (0.407)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.79 (  0.78)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.51 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.21it/s]
Test: [  0/  1]	Loss 0.906 (0.906)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.82 (  0.82)	Loss_d 0.906 (0.906)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.906 (0.906)	test_acc   0.58 (  0.58)	test_minacc   0.55 (  0.55)	test_majacc   0.82 (  0.82)	Loss_d 0.906 (0.906)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.02 (  0.02)
Overall Timing[ 18/  1]	epoch_time 0.0380 (0.0415)	validation_time 0.0006 (0.0007)	train_time 0.0374 (0.0405)
record: (train_acc, test_acc) (0.8069000297784805, 0.593000054359436)
last accs (train_acc, test_acc) (0.8339000228643417, 0.5770000219345093)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.06it/s] 19%|#9        | 5/26 [00:00<00:01, 16.19it/s] 35%|###4      | 9/26 [00:00<00:00, 23.22it/s] 50%|#####     | 13/26 [00:00<00:00, 27.44it/s] 65%|######5   | 17/26 [00:00<00:00, 30.21it/s] 81%|########  | 21/26 [00:00<00:00, 32.12it/s] 96%|#########6| 25/26 [00:00<00:00, 33.17it/s]100%|##########| 26/26 [00:01<00:00, 25.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.001 (0.001)	train_nll   0.43 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  24.41 ( 24.41)	train_acc   0.77 (  0.81)	train_minacc   0.79 (  0.66)	train_majacc   0.77 (  0.83)	train_corr   0.00 (  0.00)	l1 5.9498 (5.9095)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 23%|##3       | 6/26 [00:00<00:00, 22.56it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.56it/s] 42%|####2     | 11/26 [00:00<00:00, 31.52it/s] 62%|######1   | 16/26 [00:00<00:00, 36.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.63it/s] 81%|########  | 21/26 [00:00<00:00, 39.44it/s]100%|##########| 26/26 [00:00<00:00, 42.45it/s]100%|##########| 26/26 [00:00<00:00, 32.60it/s]
Test: [   0/  26]	Loss 0.414 (0.414)	test_acc   0.79 (  0.79)	test_minacc   0.73 (  0.73)	test_majacc   0.80 (  0.80)	Loss_d 0.414 (0.414)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.413 (0.382)	test_acc   0.79 (  0.81)	test_minacc   0.80 (  0.80)	test_majacc   0.79 (  0.81)	Loss_d 0.413 (0.382)	test_acc_d   0.79 (  0.81)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.79 (  0.81)	test_corr_d   0.54 (  0.56)
Test: [  20/  26]	Loss 0.330 (0.383)	test_acc   0.84 (  0.81)	test_minacc   0.85 (  0.78)	test_majacc   0.84 (  0.82)	Loss_d 0.330 (0.383)	test_acc_d   0.84 (  0.81)	test_minacc_d   0.85 (  0.78)	test_majacc_d   0.84 (  0.82)	test_corr_d   0.61 (  0.57)
Test: [  26/  26]	Loss 0.426 (0.383)	test_acc   0.76 (  0.81)	test_minacc   0.79 (  0.79)	test_majacc   0.76 (  0.81)	Loss_d 0.426 (0.383)	test_acc_d   0.76 (  0.81)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.76 (  0.81)	test_corr_d   0.48 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.74it/s]
Test: [  0/  1]	Loss 1.045 (1.045)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.83 (  0.83)	Loss_d 1.045 (1.045)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 1.045 (1.045)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.57)	test_majacc   0.83 (  0.83)	Loss_d 1.045 (1.045)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.01 (  0.01)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0393 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0389 (0.0405)
record: (train_acc, test_acc) (0.8093000264167786, 0.5980000495910645)
last accs (train_acc, test_acc) (0.8093000264167786, 0.5980000495910645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.09it/s] 19%|#9        | 5/26 [00:00<00:00, 23.32it/s] 35%|###4      | 9/26 [00:00<00:00, 29.01it/s] 50%|#####     | 13/26 [00:00<00:00, 31.44it/s] 65%|######5   | 17/26 [00:00<00:00, 32.76it/s] 81%|########  | 21/26 [00:00<00:00, 33.86it/s] 96%|#########6| 25/26 [00:00<00:00, 33.92it/s]100%|##########| 26/26 [00:00<00:00, 29.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.002 (0.002)	train_nll   0.36 (  0.39)	train_penalty   0.00 (  0.00)	weight_norm  24.41 ( 24.41)	train_acc   0.82 (  0.81)	train_minacc   0.84 (  0.75)	train_majacc   0.82 (  0.82)	train_corr   0.00 (  0.00)	l1 5.7698 (5.8071)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.07it/s] 27%|##6       | 7/26 [00:00<00:00, 23.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.34it/s] 46%|####6     | 12/26 [00:00<00:00, 31.03it/s] 65%|######5   | 17/26 [00:00<00:00, 36.40it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.40it/s] 85%|########4 | 22/26 [00:00<00:00, 36.81it/s]100%|##########| 26/26 [00:00<00:00, 31.62it/s]
Test: [   0/  26]	Loss 0.347 (0.347)	test_acc   0.83 (  0.83)	test_minacc   0.81 (  0.81)	test_majacc   0.83 (  0.83)	Loss_d 0.347 (0.347)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.81 (  0.81)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.369 (0.340)	test_acc   0.82 (  0.84)	test_minacc   0.80 (  0.84)	test_majacc   0.82 (  0.84)	Loss_d 0.369 (0.340)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.80 (  0.84)	test_majacc_d   0.82 (  0.84)	test_corr_d   0.58 (  0.59)
Test: [  20/  26]	Loss 0.309 (0.346)	test_acc   0.86 (  0.84)	test_minacc   0.85 (  0.82)	test_majacc   0.86 (  0.84)	Loss_d 0.309 (0.346)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.86 (  0.84)	test_corr_d   0.65 (  0.60)
Test: [  26/  26]	Loss 0.342 (0.345)	test_acc   0.83 (  0.84)	test_minacc   0.86 (  0.83)	test_majacc   0.82 (  0.84)	Loss_d 0.342 (0.345)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.86 (  0.83)	test_majacc_d   0.82 (  0.84)	test_corr_d   0.54 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.38it/s]
Test: [  0/  1]	Loss 1.014 (1.014)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.62)	test_majacc   0.86 (  0.86)	Loss_d 1.014 (1.014)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.86 (  0.86)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 1.014 (1.014)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.62)	test_majacc   0.86 (  0.86)	Loss_d 1.014 (1.014)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.86 (  0.86)	test_corr_d  -0.03 ( -0.03)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/95/checkpoints/model_best.pth
Overall Timing[ 20/  1]	epoch_time 0.0394 (0.0413)	validation_time 0.0004 (0.0007)	train_time 0.0389 (0.0404)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.78it/s] 12%|#1        | 3/26 [00:00<00:02, 10.91it/s] 27%|##6       | 7/26 [00:00<00:00, 20.51it/s] 42%|####2     | 11/26 [00:00<00:00, 25.84it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.30it/s] 88%|########8 | 23/26 [00:00<00:00, 32.75it/s]100%|##########| 26/26 [00:01<00:00, 25.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.003)	train_nll   0.36 (  0.35)	train_penalty   0.00 (  0.00)	weight_norm  24.42 ( 24.41)	train_acc   0.83 (  0.84)	train_minacc   0.79 (  0.83)	train_majacc   0.84 (  0.84)	train_corr   0.00 (  0.00)	l1 6.3960 (5.9874)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.92it/s] 19%|#9        | 5/26 [00:00<00:00, 23.72it/s] 38%|###8      | 10/26 [00:00<00:00, 32.01it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.01it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.82it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.56it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.56it/s] 96%|#########6| 25/26 [00:00<00:00, 41.14it/s]100%|##########| 26/26 [00:00<00:00, 34.13it/s]
Test: [   0/  26]	Loss 0.418 (0.418)	test_acc   0.82 (  0.82)	test_minacc   0.83 (  0.83)	test_majacc   0.81 (  0.81)	Loss_d 0.418 (0.418)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.354 (0.384)	test_acc   0.83 (  0.82)	test_minacc   0.74 (  0.81)	test_majacc   0.84 (  0.82)	Loss_d 0.354 (0.384)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.74 (  0.81)	test_majacc_d   0.84 (  0.82)	test_corr_d   0.59 (  0.55)
Test: [  20/  26]	Loss 0.312 (0.383)	test_acc   0.85 (  0.82)	test_minacc   0.78 (  0.79)	test_majacc   0.87 (  0.83)	Loss_d 0.312 (0.383)	test_acc_d   0.85 (  0.82)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.87 (  0.83)	test_corr_d   0.62 (  0.56)
Test: [  26/  26]	Loss 0.356 (0.381)	test_acc   0.83 (  0.82)	test_minacc   0.79 (  0.79)	test_majacc   0.84 (  0.83)	Loss_d 0.356 (0.381)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.84 (  0.83)	test_corr_d   0.50 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.22it/s]
Test: [  0/  1]	Loss 1.102 (1.102)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.76 (  0.76)	Loss_d 1.102 (1.102)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 1.102 (1.102)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.76 (  0.76)	Loss_d 1.102 (1.102)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.76 (  0.76)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 21/  1]	epoch_time 0.0400 (0.0413)	validation_time 0.0003 (0.0007)	train_time 0.0396 (0.0404)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.8214000224471092, 0.6070000529289246)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.70it/s] 23%|##3       | 6/26 [00:00<00:00, 25.87it/s] 38%|###8      | 10/26 [00:00<00:00, 29.31it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.97it/s] 69%|######9   | 18/26 [00:00<00:00, 31.67it/s] 85%|########4 | 22/26 [00:00<00:00, 33.18it/s]100%|##########| 26/26 [00:00<00:00, 34.59it/s]100%|##########| 26/26 [00:00<00:00, 29.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.001 (0.004)	train_nll   0.33 (  0.34)	train_penalty   0.00 (  0.00)	weight_norm  24.43 ( 24.42)	train_acc   0.88 (  0.84)	train_minacc   0.81 (  0.77)	train_majacc   0.89 (  0.86)	train_corr   0.00 (  0.00)	l1 6.2568 (6.1040)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.41it/s] 31%|###       | 8/26 [00:00<00:00, 39.84it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.84it/s] 50%|#####     | 13/26 [00:00<00:00, 38.22it/s] 69%|######9   | 18/26 [00:00<00:00, 41.72it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.72it/s] 88%|########8 | 23/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 37.53it/s]
Test: [   0/  26]	Loss 0.390 (0.390)	test_acc   0.83 (  0.83)	test_minacc   0.75 (  0.75)	test_majacc   0.84 (  0.84)	Loss_d 0.390 (0.390)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.402 (0.425)	test_acc   0.83 (  0.81)	test_minacc   0.72 (  0.70)	test_majacc   0.85 (  0.83)	Loss_d 0.402 (0.425)	test_acc_d   0.83 (  0.81)	test_minacc_d   0.72 (  0.70)	test_majacc_d   0.85 (  0.83)	test_corr_d   0.63 (  0.59)
Test: [  20/  26]	Loss 0.384 (0.415)	test_acc   0.83 (  0.81)	test_minacc   0.65 (  0.68)	test_majacc   0.86 (  0.83)	Loss_d 0.384 (0.415)	test_acc_d   0.83 (  0.81)	test_minacc_d   0.65 (  0.68)	test_majacc_d   0.86 (  0.83)	test_corr_d   0.62 (  0.60)
Test: [  26/  26]	Loss 0.360 (0.413)	test_acc   0.87 (  0.81)	test_minacc   0.81 (  0.69)	test_majacc   0.88 (  0.83)	Loss_d 0.360 (0.413)	test_acc_d   0.87 (  0.81)	test_minacc_d   0.81 (  0.69)	test_majacc_d   0.88 (  0.83)	test_corr_d   0.56 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.52it/s]
Test: [  0/  1]	Loss 1.099 (1.099)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.81 (  0.81)	Loss_d 1.099 (1.099)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.81 (  0.81)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 1.099 (1.099)	test_acc   0.57 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.81 (  0.81)	Loss_d 1.099 (1.099)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.81 (  0.81)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 22/  1]	epoch_time 0.0380 (0.0411)	validation_time 0.0004 (0.0007)	train_time 0.0375 (0.0402)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.8128000268340111, 0.5660000443458557)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 12%|#1        | 3/26 [00:00<00:01, 12.78it/s] 27%|##6       | 7/26 [00:00<00:00, 22.23it/s] 42%|####2     | 11/26 [00:00<00:00, 27.11it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.97it/s] 69%|######9   | 18/26 [00:00<00:00, 28.12it/s] 85%|########4 | 22/26 [00:00<00:00, 30.62it/s]100%|##########| 26/26 [00:00<00:00, 31.26it/s]100%|##########| 26/26 [00:01<00:00, 25.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.417667388916016
set z to 6.353490715026855
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 390 tensor(-0.0141, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 259 tensor(-0.0232, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 171 tensor(0.0051, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 150 tensor(0.0022, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.006 (0.246)	train_nll   0.45 (  0.53)	train_penalty   0.01 (  0.25)	weight_norm  27.27 ( 24.93)	train_acc   0.86 (  0.77)	train_minacc   0.51 (  0.65)	train_majacc   0.93 (  0.79)	train_corr   0.00 (  0.00)	l1 9.2925 (7.5383)	zero_count 0.0000 (27.8070)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.42it/s] 27%|##6       | 7/26 [00:00<00:00, 24.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.54it/s] 46%|####6     | 12/26 [00:00<00:00, 32.54it/s] 65%|######5   | 17/26 [00:00<00:00, 37.24it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.24it/s] 85%|########4 | 22/26 [00:00<00:00, 38.06it/s]100%|##########| 26/26 [00:00<00:00, 31.83it/s]
Test: [   0/  26]	Loss 0.647 (0.647)	test_acc   0.50 (  0.50)	test_minacc   0.59 (  0.59)	test_majacc   0.49 (  0.49)	Loss_d 0.647 (0.647)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.607 (0.615)	test_acc   0.50 (  0.49)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.49)	Loss_d 0.607 (0.615)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.63 (  0.66)
Test: [  20/  26]	Loss 0.523 (0.608)	test_acc   0.52 (  0.50)	test_minacc   0.50 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.523 (0.608)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.64 (  0.66)
Test: [  26/  26]	Loss 0.614 (0.600)	test_acc   0.51 (  0.50)	test_minacc   0.60 (  0.53)	test_majacc   0.49 (  0.50)	Loss_d 0.614 (0.600)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.60 (  0.53)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.63 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.44it/s]
Test: [  0/  1]	Loss 2.410 (2.410)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 2.410 (2.410)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 2.410 (2.410)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 2.410 (2.410)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.35 (  0.35)
Overall Timing[ 23/  1]	epoch_time 0.0404 (0.0411)	validation_time 0.0004 (0.0007)	train_time 0.0400 (0.0402)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.5014000131189823, 0.5010000467300415)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 19%|#9        | 5/26 [00:00<00:01, 18.55it/s] 35%|###4      | 9/26 [00:00<00:00, 24.53it/s] 50%|#####     | 13/26 [00:00<00:00, 27.65it/s] 65%|######5   | 17/26 [00:00<00:00, 29.67it/s] 81%|########  | 21/26 [00:00<00:00, 31.66it/s] 96%|#########6| 25/26 [00:00<00:00, 32.26it/s]100%|##########| 26/26 [00:00<00:00, 26.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 144 tensor(0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 132 tensor(0.0020, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 125 tensor(0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 122 tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 119 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 118 tensor(5.1975e-05, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.007)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.01)	weight_norm  31.60 ( 30.19)	train_acc   0.75 (  0.70)	train_minacc   0.72 (  0.58)	train_majacc   0.75 (  0.71)	train_corr   0.00 (  0.00)	l1 6.8247 (7.2672)	zero_count 0.0000 (88.6860)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 23%|##3       | 6/26 [00:00<00:00, 30.60it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.60it/s] 42%|####2     | 11/26 [00:00<00:00, 36.92it/s] 62%|######1   | 16/26 [00:00<00:00, 41.62it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.62it/s] 81%|########  | 21/26 [00:00<00:00, 39.76it/s]100%|##########| 26/26 [00:00<00:00, 42.20it/s]100%|##########| 26/26 [00:00<00:00, 35.07it/s]
Test: [   0/  26]	Loss 0.579 (0.579)	test_acc   0.76 (  0.76)	test_minacc   0.54 (  0.54)	test_majacc   0.80 (  0.80)	Loss_d 0.579 (0.579)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.641 (0.587)	test_acc   0.73 (  0.75)	test_minacc   0.63 (  0.59)	test_majacc   0.74 (  0.78)	Loss_d 0.641 (0.587)	test_acc_d   0.73 (  0.75)	test_minacc_d   0.63 (  0.59)	test_majacc_d   0.74 (  0.78)	test_corr_d   0.43 (  0.48)
Test: [  20/  26]	Loss 0.576 (0.586)	test_acc   0.82 (  0.75)	test_minacc   0.50 (  0.55)	test_majacc   0.88 (  0.79)	Loss_d 0.576 (0.586)	test_acc_d   0.82 (  0.75)	test_minacc_d   0.50 (  0.55)	test_majacc_d   0.88 (  0.79)	test_corr_d   0.45 (  0.47)
Test: [  26/  26]	Loss 0.613 (0.586)	test_acc   0.72 (  0.75)	test_minacc   0.67 (  0.57)	test_majacc   0.73 (  0.78)	Loss_d 0.613 (0.586)	test_acc_d   0.72 (  0.75)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.73 (  0.78)	test_corr_d   0.39 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.45it/s]
Test: [  0/  1]	Loss 1.185 (1.185)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.79 (  0.79)	Loss_d 1.185 (1.185)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 1.185 (1.185)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.79 (  0.79)	Loss_d 1.185 (1.185)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.12 (  0.12)
Overall Timing[ 24/  1]	epoch_time 0.0410 (0.0411)	validation_time 0.0003 (0.0007)	train_time 0.0406 (0.0402)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.752600028038025, 0.5390000343322754)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.27it/s] 15%|#5        | 4/26 [00:00<00:01, 13.48it/s] 31%|###       | 8/26 [00:00<00:00, 21.00it/s] 46%|####6     | 12/26 [00:00<00:00, 25.33it/s] 62%|######1   | 16/26 [00:00<00:00, 27.60it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.21it/s] 92%|#########2| 24/26 [00:00<00:00, 31.16it/s]100%|##########| 26/26 [00:01<00:00, 24.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 118 tensor(3.1295e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 117 tensor(-4.5340e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 121 tensor(-6.8665e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 123 tensor(-6.9049e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 133 tensor(-3.1756e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 202 tensor(8.4952e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 202 tensor(4.2046e-07, device='cuda:0')
Epoch: [25][  26/  26]	Loss 0.001 (0.001)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.02 ( 31.89)	train_acc   0.73 (  0.76)	train_minacc   0.72 (  0.60)	train_majacc   0.73 (  0.79)	train_corr   0.00 (  0.00)	l1 6.3868 (6.4572)	zero_count 0.0000 (91.1040)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.66it/s] 27%|##6       | 7/26 [00:00<00:00, 28.71it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.71it/s] 46%|####6     | 12/26 [00:00<00:00, 36.58it/s] 65%|######5   | 17/26 [00:00<00:00, 39.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.79it/s] 85%|########4 | 22/26 [00:00<00:00, 42.14it/s]100%|##########| 26/26 [00:00<00:00, 34.67it/s]
Test: [   0/  26]	Loss 0.559 (0.559)	test_acc   0.77 (  0.77)	test_minacc   0.63 (  0.63)	test_majacc   0.79 (  0.79)	Loss_d 0.559 (0.559)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.591 (0.563)	test_acc   0.75 (  0.77)	test_minacc   0.67 (  0.64)	test_majacc   0.77 (  0.79)	Loss_d 0.591 (0.563)	test_acc_d   0.75 (  0.77)	test_minacc_d   0.67 (  0.64)	test_majacc_d   0.77 (  0.79)	test_corr_d   0.47 (  0.50)
Test: [  20/  26]	Loss 0.563 (0.567)	test_acc   0.75 (  0.75)	test_minacc   0.70 (  0.61)	test_majacc   0.76 (  0.78)	Loss_d 0.563 (0.567)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.70 (  0.61)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.50 (  0.49)
Test: [  26/  26]	Loss 0.575 (0.566)	test_acc   0.73 (  0.75)	test_minacc   0.72 (  0.61)	test_majacc   0.73 (  0.78)	Loss_d 0.575 (0.566)	test_acc_d   0.73 (  0.75)	test_minacc_d   0.72 (  0.61)	test_majacc_d   0.73 (  0.78)	test_corr_d   0.41 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.56it/s]
Test: [  0/  1]	Loss 1.243 (1.243)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.80 (  0.80)	Loss_d 1.243 (1.243)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 1.243 (1.243)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.80 (  0.80)	Loss_d 1.243 (1.243)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.23 (  0.23)
Overall Timing[ 25/  1]	epoch_time 0.0407 (0.0411)	validation_time 0.0007 (0.0007)	train_time 0.0400 (0.0402)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.75180002617836, 0.5200000405311584)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.96it/s] 19%|#9        | 5/26 [00:00<00:00, 21.32it/s] 35%|###4      | 9/26 [00:00<00:00, 26.91it/s] 50%|#####     | 13/26 [00:00<00:00, 29.41it/s] 65%|######5   | 17/26 [00:00<00:00, 30.67it/s] 81%|########  | 21/26 [00:00<00:00, 31.71it/s] 96%|#########6| 25/26 [00:00<00:00, 32.23it/s]100%|##########| 26/26 [00:00<00:00, 27.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 196 tensor(6.3693e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 203 tensor(7.8856e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 254 tensor(-4.7521e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 250 tensor(-8.4432e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 241 tensor(-1.1751e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 241 tensor(-1.3320e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.05 ( 32.04)	train_acc   0.72 (  0.74)	train_minacc   0.77 (  0.61)	train_majacc   0.71 (  0.76)	train_corr   0.00 (  0.00)	l1 6.3535 (6.3680)	zero_count 270.0000 (63.3000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.30it/s] 27%|##6       | 7/26 [00:00<00:00, 33.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.70it/s] 54%|#####3    | 14/26 [00:00<00:00, 46.98it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.64it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.64it/s] 96%|#########6| 25/26 [00:00<00:00, 45.94it/s]100%|##########| 26/26 [00:00<00:00, 39.67it/s]
Test: [   0/  26]	Loss 0.558 (0.558)	test_acc   0.77 (  0.77)	test_minacc   0.64 (  0.64)	test_majacc   0.79 (  0.79)	Loss_d 0.558 (0.558)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.577 (0.561)	test_acc   0.75 (  0.76)	test_minacc   0.67 (  0.65)	test_majacc   0.76 (  0.78)	Loss_d 0.577 (0.561)	test_acc_d   0.75 (  0.76)	test_minacc_d   0.67 (  0.65)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.47 (  0.49)
Test: [  20/  26]	Loss 0.561 (0.564)	test_acc   0.73 (  0.74)	test_minacc   0.69 (  0.62)	test_majacc   0.74 (  0.76)	Loss_d 0.561 (0.564)	test_acc_d   0.73 (  0.74)	test_minacc_d   0.69 (  0.62)	test_majacc_d   0.74 (  0.76)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.576 (0.564)	test_acc   0.72 (  0.74)	test_minacc   0.77 (  0.62)	test_majacc   0.71 (  0.76)	Loss_d 0.576 (0.564)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.77 (  0.62)	test_majacc_d   0.71 (  0.76)	test_corr_d   0.40 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.93it/s]
Test: [  0/  1]	Loss 1.220 (1.220)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.52)	test_majacc   0.79 (  0.79)	Loss_d 1.220 (1.220)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 1.220 (1.220)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.52)	test_majacc   0.79 (  0.79)	Loss_d 1.220 (1.220)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.20 (  0.20)
Overall Timing[ 26/  1]	epoch_time 0.0404 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0400 (0.0402)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7404000310897827, 0.5450000166893005)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.08it/s] 15%|#5        | 4/26 [00:00<00:01, 19.08it/s] 31%|###       | 8/26 [00:00<00:00, 26.33it/s] 42%|####2     | 11/26 [00:00<00:00, 27.11it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.78it/s] 69%|######9   | 18/26 [00:00<00:00, 30.87it/s] 85%|########4 | 22/26 [00:00<00:00, 32.15it/s]100%|##########| 26/26 [00:00<00:00, 31.77it/s]100%|##########| 26/26 [00:00<00:00, 26.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 280 tensor(4.0927e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 275 tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 242 tensor(2.7345e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
rho, theta 278 tensor(-8.9474e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
rho, theta 264 tensor(-3.0723e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
rho, theta 263 tensor(-3.3650e-06, device='cuda:0')
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.05)	train_acc   0.72 (  0.73)	train_minacc   0.72 (  0.61)	train_majacc   0.71 (  0.75)	train_corr   0.00 (  0.00)	l1 6.3554 (6.3632)	zero_count 0.0000 (57.9540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.35it/s] 35%|###4      | 9/26 [00:00<00:00, 40.79it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.79it/s] 58%|#####7    | 15/26 [00:00<00:00, 45.59it/s] 77%|#######6  | 20/26 [00:00<00:00, 42.32it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 42.32it/s] 96%|#########6| 25/26 [00:00<00:00, 44.22it/s]100%|##########| 26/26 [00:00<00:00, 39.46it/s]
Test: [   0/  26]	Loss 0.557 (0.557)	test_acc   0.76 (  0.76)	test_minacc   0.61 (  0.61)	test_majacc   0.79 (  0.79)	Loss_d 0.557 (0.557)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.570 (0.561)	test_acc   0.74 (  0.75)	test_minacc   0.67 (  0.64)	test_majacc   0.75 (  0.77)	Loss_d 0.570 (0.561)	test_acc_d   0.74 (  0.75)	test_minacc_d   0.67 (  0.64)	test_majacc_d   0.75 (  0.77)	test_corr_d   0.48 (  0.49)
Test: [  20/  26]	Loss 0.557 (0.562)	test_acc   0.73 (  0.73)	test_minacc   0.69 (  0.60)	test_majacc   0.74 (  0.75)	Loss_d 0.557 (0.562)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.69 (  0.60)	test_majacc_d   0.74 (  0.75)	test_corr_d   0.49 (  0.49)
Test: [  26/  26]	Loss 0.579 (0.563)	test_acc   0.72 (  0.73)	test_minacc   0.72 (  0.60)	test_majacc   0.71 (  0.75)	Loss_d 0.579 (0.563)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.72 (  0.60)	test_majacc_d   0.71 (  0.75)	test_corr_d   0.41 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.79it/s]
Test: [  0/  1]	Loss 1.243 (1.243)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.80 (  0.80)	Loss_d 1.243 (1.243)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.243 (1.243)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.80 (  0.80)	Loss_d 1.243 (1.243)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.21 (  0.21)
Overall Timing[ 27/  1]	epoch_time 0.0400 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0396 (0.0402)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7320000311732292, 0.5410000085830688)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.28it/s] 15%|#5        | 4/26 [00:00<00:01, 13.41it/s] 31%|###       | 8/26 [00:00<00:00, 19.45it/s] 46%|####6     | 12/26 [00:00<00:00, 24.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.17it/s] 88%|########8 | 23/26 [00:00<00:00, 29.62it/s]100%|##########| 26/26 [00:01<00:00, 24.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
rho, theta 306 tensor(1.4942e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
rho, theta 362 tensor(8.2744e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 304 tensor(8.5121e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
rho, theta 307 tensor(-9.7623e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 290 tensor(-1.5968e-05, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.70 (  0.72)	train_minacc   0.70 (  0.61)	train_majacc   0.70 (  0.74)	train_corr   0.00 (  0.00)	l1 6.3580 (6.3608)	zero_count 0.0000 (39.5070)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.92it/s] 31%|###       | 8/26 [00:00<00:00, 38.35it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.35it/s] 50%|#####     | 13/26 [00:00<00:00, 39.51it/s] 69%|######9   | 18/26 [00:00<00:00, 41.55it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.55it/s] 92%|#########2| 24/26 [00:00<00:00, 46.39it/s]100%|##########| 26/26 [00:00<00:00, 39.70it/s]
Test: [   0/  26]	Loss 0.559 (0.559)	test_acc   0.75 (  0.75)	test_minacc   0.58 (  0.58)	test_majacc   0.78 (  0.78)	Loss_d 0.559 (0.559)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.569 (0.563)	test_acc   0.73 (  0.74)	test_minacc   0.67 (  0.64)	test_majacc   0.74 (  0.76)	Loss_d 0.569 (0.563)	test_acc_d   0.73 (  0.74)	test_minacc_d   0.67 (  0.64)	test_majacc_d   0.74 (  0.76)	test_corr_d   0.48 (  0.49)
Test: [  20/  26]	Loss 0.558 (0.564)	test_acc   0.72 (  0.72)	test_minacc   0.65 (  0.60)	test_majacc   0.73 (  0.74)	Loss_d 0.558 (0.564)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.65 (  0.60)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.579 (0.565)	test_acc   0.70 (  0.72)	test_minacc   0.70 (  0.60)	test_majacc   0.70 (  0.74)	Loss_d 0.579 (0.565)	test_acc_d   0.70 (  0.72)	test_minacc_d   0.70 (  0.60)	test_majacc_d   0.70 (  0.74)	test_corr_d   0.41 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.58it/s]
Test: [  0/  1]	Loss 1.257 (1.257)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.78 (  0.78)	Loss_d 1.257 (1.257)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.257 (1.257)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.78 (  0.78)	Loss_d 1.257 (1.257)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.21 (  0.21)
Overall Timing[ 28/  1]	epoch_time 0.0418 (0.0410)	validation_time 0.0003 (0.0006)	train_time 0.0415 (0.0402)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7225000312328339, 0.5330000519752502)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.59it/s] 15%|#5        | 4/26 [00:00<00:01, 17.04it/s] 27%|##6       | 7/26 [00:00<00:00, 21.06it/s] 42%|####2     | 11/26 [00:00<00:00, 26.43it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.72it/s] 65%|######5   | 17/26 [00:00<00:00, 26.68it/s] 81%|########  | 21/26 [00:00<00:00, 29.75it/s] 92%|#########2| 24/26 [00:00<00:00, 29.44it/s]100%|##########| 26/26 [00:01<00:00, 25.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 277 tensor(-2.8524e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 336 tensor(1.9100e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
rho, theta 380 tensor(6.5971e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 369 tensor(-4.3740e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 316 tensor(-5.1133e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 274 tensor(-2.7516e-05, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.70 (  0.72)	train_minacc   0.70 (  0.60)	train_majacc   0.70 (  0.74)	train_corr   0.00 (  0.00)	l1 6.3631 (6.3577)	zero_count 0.0000 (42.8220)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.31it/s] 27%|##6       | 7/26 [00:00<00:00, 23.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.83it/s] 46%|####6     | 12/26 [00:00<00:00, 32.16it/s] 65%|######5   | 17/26 [00:00<00:00, 34.32it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.32it/s] 85%|########4 | 22/26 [00:00<00:00, 38.70it/s]100%|##########| 26/26 [00:00<00:00, 31.19it/s]
Test: [   0/  26]	Loss 0.559 (0.559)	test_acc   0.74 (  0.74)	test_minacc   0.58 (  0.58)	test_majacc   0.77 (  0.77)	Loss_d 0.559 (0.559)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.567 (0.563)	test_acc   0.73 (  0.74)	test_minacc   0.67 (  0.64)	test_majacc   0.74 (  0.75)	Loss_d 0.567 (0.563)	test_acc_d   0.73 (  0.74)	test_minacc_d   0.67 (  0.64)	test_majacc_d   0.74 (  0.75)	test_corr_d   0.48 (  0.49)
Test: [  20/  26]	Loss 0.557 (0.564)	test_acc   0.72 (  0.72)	test_minacc   0.65 (  0.60)	test_majacc   0.73 (  0.74)	Loss_d 0.557 (0.564)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.65 (  0.60)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.577 (0.564)	test_acc   0.70 (  0.72)	test_minacc   0.70 (  0.60)	test_majacc   0.71 (  0.74)	Loss_d 0.577 (0.564)	test_acc_d   0.70 (  0.72)	test_minacc_d   0.70 (  0.60)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.41 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.21it/s]
Test: [  0/  1]	Loss 1.262 (1.262)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.78 (  0.78)	Loss_d 1.262 (1.262)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.262 (1.262)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.78 (  0.78)	Loss_d 1.262 (1.262)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.21 (  0.21)
Overall Timing[ 29/  1]	epoch_time 0.0424 (0.0411)	validation_time 0.0004 (0.0006)	train_time 0.0420 (0.0403)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7191000304818154, 0.531000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.55it/s] 19%|#9        | 5/26 [00:00<00:01, 19.30it/s] 31%|###       | 8/26 [00:00<00:00, 23.07it/s] 42%|####2     | 11/26 [00:00<00:00, 24.35it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.46it/s] 69%|######9   | 18/26 [00:00<00:00, 28.22it/s] 85%|########4 | 22/26 [00:00<00:00, 30.69it/s]100%|##########| 26/26 [00:00<00:00, 30.85it/s]100%|##########| 26/26 [00:01<00:00, 25.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 269 tensor(-3.8518e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 289 tensor(5.9506e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 388 tensor(6.7525e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 359 tensor(3.1442e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 316 tensor(-7.5904e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.70 (  0.71)	train_minacc   0.70 (  0.60)	train_majacc   0.70 (  0.73)	train_corr   0.00 (  0.00)	l1 6.3555 (6.3568)	zero_count 0.0000 (38.0640)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.71it/s] 27%|##6       | 7/26 [00:00<00:00, 26.72it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.72it/s] 46%|####6     | 12/26 [00:00<00:00, 32.91it/s] 65%|######5   | 17/26 [00:00<00:00, 37.22it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.22it/s] 85%|########4 | 22/26 [00:00<00:00, 41.07it/s]100%|##########| 26/26 [00:00<00:00, 33.20it/s]
Test: [   0/  26]	Loss 0.560 (0.560)	test_acc   0.74 (  0.74)	test_minacc   0.58 (  0.58)	test_majacc   0.77 (  0.77)	Loss_d 0.560 (0.560)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.568 (0.565)	test_acc   0.72 (  0.73)	test_minacc   0.67 (  0.63)	test_majacc   0.73 (  0.75)	Loss_d 0.568 (0.565)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.67 (  0.63)	test_majacc_d   0.73 (  0.75)	test_corr_d   0.48 (  0.49)
Test: [  20/  26]	Loss 0.558 (0.565)	test_acc   0.72 (  0.71)	test_minacc   0.65 (  0.60)	test_majacc   0.73 (  0.74)	Loss_d 0.558 (0.565)	test_acc_d   0.72 (  0.71)	test_minacc_d   0.65 (  0.60)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.578 (0.565)	test_acc   0.69 (  0.71)	test_minacc   0.70 (  0.60)	test_majacc   0.69 (  0.73)	Loss_d 0.578 (0.565)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.70 (  0.60)	test_majacc_d   0.69 (  0.73)	test_corr_d   0.41 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.53it/s]
Test: [  0/  1]	Loss 1.267 (1.267)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.78 (  0.78)	Loss_d 1.267 (1.267)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.267 (1.267)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.78 (  0.78)	Loss_d 1.267 (1.267)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.21 (  0.21)
Overall Timing[ 30/  1]	epoch_time 0.0430 (0.0411)	validation_time 0.0004 (0.0006)	train_time 0.0426 (0.0404)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7147000345587731, 0.531000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.99it/s] 19%|#9        | 5/26 [00:00<00:00, 22.55it/s] 35%|###4      | 9/26 [00:00<00:00, 28.57it/s] 46%|####6     | 12/26 [00:00<00:00, 27.89it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.50it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.27it/s] 88%|########8 | 23/26 [00:00<00:00, 32.09it/s]100%|##########| 26/26 [00:00<00:00, 28.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 292 tensor(-2.9831e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 424 tensor(3.5878e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 370 tensor(3.9993e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 317 tensor(-6.4476e-05, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.68 (  0.71)	train_minacc   0.70 (  0.60)	train_majacc   0.68 (  0.73)	train_corr   0.00 (  0.00)	l1 6.3528 (6.3557)	zero_count 0.0000 (25.0380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.64it/s] 31%|###       | 8/26 [00:00<00:00, 37.21it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.21it/s] 50%|#####     | 13/26 [00:00<00:00, 41.01it/s] 69%|######9   | 18/26 [00:00<00:00, 42.31it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.31it/s] 88%|########8 | 23/26 [00:00<00:00, 40.79it/s]100%|##########| 26/26 [00:00<00:00, 38.08it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.74 (  0.74)	test_minacc   0.58 (  0.58)	test_majacc   0.77 (  0.77)	Loss_d 0.561 (0.561)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.569 (0.565)	test_acc   0.72 (  0.73)	test_minacc   0.67 (  0.62)	test_majacc   0.72 (  0.75)	Loss_d 0.569 (0.565)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.67 (  0.62)	test_majacc_d   0.72 (  0.75)	test_corr_d   0.48 (  0.48)
Test: [  20/  26]	Loss 0.558 (0.565)	test_acc   0.72 (  0.71)	test_minacc   0.65 (  0.59)	test_majacc   0.73 (  0.73)	Loss_d 0.558 (0.565)	test_acc_d   0.72 (  0.71)	test_minacc_d   0.65 (  0.59)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.577 (0.566)	test_acc   0.68 (  0.71)	test_minacc   0.70 (  0.60)	test_majacc   0.68 (  0.73)	Loss_d 0.577 (0.566)	test_acc_d   0.68 (  0.71)	test_minacc_d   0.70 (  0.60)	test_majacc_d   0.68 (  0.73)	test_corr_d   0.41 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.76it/s]
Test: [  0/  1]	Loss 1.271 (1.271)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.78 (  0.78)	Loss_d 1.271 (1.271)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.271 (1.271)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.78 (  0.78)	Loss_d 1.271 (1.271)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.21 (  0.21)
Overall Timing[ 31/  1]	epoch_time 0.0379 (0.0410)	validation_time 0.0003 (0.0006)	train_time 0.0376 (0.0403)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.712300042629242, 0.5290000438690186)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.60it/s] 19%|#9        | 5/26 [00:00<00:00, 22.46it/s] 35%|###4      | 9/26 [00:00<00:00, 23.74it/s] 50%|#####     | 13/26 [00:00<00:00, 27.47it/s] 62%|######1   | 16/26 [00:00<00:00, 26.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.62it/s] 88%|########8 | 23/26 [00:00<00:00, 29.18it/s]100%|##########| 26/26 [00:00<00:00, 26.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 287 tensor(-7.4522e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 429 tensor(1.6311e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 392 tensor(4.5427e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 377 tensor(3.0603e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 336 tensor(-5.4164e-05, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.68 (  0.71)	train_minacc   0.70 (  0.59)	train_majacc   0.68 (  0.73)	train_corr   0.00 (  0.00)	l1 6.3506 (6.3559)	zero_count 0.0000 (29.3670)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.92it/s] 23%|##3       | 6/26 [00:00<00:00, 32.67it/s] 38%|###8      | 10/26 [00:00<00:00, 35.77it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.77it/s] 58%|#####7    | 15/26 [00:00<00:00, 40.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 43.37it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 43.37it/s] 96%|#########6| 25/26 [00:00<00:00, 41.46it/s]100%|##########| 26/26 [00:00<00:00, 36.18it/s]
Test: [   0/  26]	Loss 0.562 (0.562)	test_acc   0.73 (  0.73)	test_minacc   0.58 (  0.58)	test_majacc   0.76 (  0.76)	Loss_d 0.562 (0.562)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.570 (0.566)	test_acc   0.72 (  0.72)	test_minacc   0.67 (  0.62)	test_majacc   0.72 (  0.74)	Loss_d 0.570 (0.566)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.67 (  0.62)	test_majacc_d   0.72 (  0.74)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.558 (0.565)	test_acc   0.71 (  0.71)	test_minacc   0.65 (  0.59)	test_majacc   0.72 (  0.73)	Loss_d 0.558 (0.565)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.65 (  0.59)	test_majacc_d   0.72 (  0.73)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.577 (0.566)	test_acc   0.68 (  0.71)	test_minacc   0.70 (  0.59)	test_majacc   0.68 (  0.73)	Loss_d 0.577 (0.566)	test_acc_d   0.68 (  0.71)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.68 (  0.73)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.94it/s]
Test: [  0/  1]	Loss 1.272 (1.272)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.272 (1.272)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.272 (1.272)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.272 (1.272)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Overall Timing[ 32/  1]	epoch_time 0.0452 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0448 (0.0404)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7102000369429589, 0.5290000438690186)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:10,  2.47it/s] 15%|#5        | 4/26 [00:00<00:02,  9.30it/s] 31%|###       | 8/26 [00:00<00:01, 15.70it/s] 46%|####6     | 12/26 [00:00<00:00, 21.21it/s] 58%|#####7    | 15/26 [00:00<00:00, 22.70it/s] 69%|######9   | 18/26 [00:00<00:00, 24.17it/s] 85%|########4 | 22/26 [00:01<00:00, 27.61it/s]100%|##########| 26/26 [00:01<00:00, 30.13it/s]100%|##########| 26/26 [00:01<00:00, 20.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 293 tensor(-1.0737e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 355 tensor(1.6555e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 423 tensor(4.4499e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 377 tensor(2.2139e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.69 (  0.71)	train_minacc   0.70 (  0.59)	train_majacc   0.69 (  0.73)	train_corr   0.00 (  0.00)	l1 6.3474 (6.3563)	zero_count 0.0000 (30.0690)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.19it/s] 19%|#9        | 5/26 [00:00<00:01, 21.00it/s]                                               19%|#9        | 5/26 [00:00<00:01, 21.00it/s] 42%|####2     | 11/26 [00:00<00:00, 32.96it/s] 65%|######5   | 17/26 [00:00<00:00, 40.42it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.42it/s] 85%|########4 | 22/26 [00:00<00:00, 40.78it/s]100%|##########| 26/26 [00:00<00:00, 34.34it/s]
Test: [   0/  26]	Loss 0.561 (0.561)	test_acc   0.73 (  0.73)	test_minacc   0.58 (  0.58)	test_majacc   0.76 (  0.76)	Loss_d 0.561 (0.561)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.570 (0.565)	test_acc   0.71 (  0.72)	test_minacc   0.67 (  0.62)	test_majacc   0.72 (  0.74)	Loss_d 0.570 (0.565)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.67 (  0.62)	test_majacc_d   0.72 (  0.74)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.557 (0.565)	test_acc   0.71 (  0.71)	test_minacc   0.61 (  0.59)	test_majacc   0.72 (  0.73)	Loss_d 0.557 (0.565)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.72 (  0.73)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.575 (0.565)	test_acc   0.69 (  0.71)	test_minacc   0.70 (  0.59)	test_majacc   0.69 (  0.73)	Loss_d 0.575 (0.565)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.69 (  0.73)	test_corr_d   0.41 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.87it/s]
Test: [  0/  1]	Loss 1.272 (1.272)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.272 (1.272)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.272 (1.272)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.272 (1.272)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Overall Timing[ 33/  1]	epoch_time 0.0429 (0.0412)	validation_time 0.0003 (0.0006)	train_time 0.0426 (0.0405)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7098000327348709, 0.527999997138977)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.06it/s] 15%|#5        | 4/26 [00:00<00:01, 19.06it/s] 27%|##6       | 7/26 [00:00<00:00, 23.07it/s] 42%|####2     | 11/26 [00:00<00:00, 27.93it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.50it/s] 65%|######5   | 17/26 [00:00<00:00, 26.05it/s] 81%|########  | 21/26 [00:00<00:00, 28.43it/s] 92%|#########2| 24/26 [00:00<00:00, 28.07it/s]100%|##########| 26/26 [00:01<00:00, 25.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 330 tensor(-5.9400e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 301 tensor(-4.8236e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 449 tensor(3.1803e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 398 tensor(2.5082e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 391 tensor(1.8915e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.70 (  0.71)	train_minacc   0.72 (  0.59)	train_majacc   0.69 (  0.73)	train_corr   0.00 (  0.00)	l1 6.3476 (6.3559)	zero_count 0.0000 (26.7540)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.75it/s] 27%|##6       | 7/26 [00:00<00:00, 36.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.46it/s] 46%|####6     | 12/26 [00:00<00:00, 41.43it/s] 65%|######5   | 17/26 [00:00<00:00, 39.00it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.00it/s] 85%|########4 | 22/26 [00:00<00:00, 41.57it/s]100%|##########| 26/26 [00:00<00:00, 36.64it/s]
Test: [   0/  26]	Loss 0.563 (0.563)	test_acc   0.73 (  0.73)	test_minacc   0.56 (  0.56)	test_majacc   0.76 (  0.76)	Loss_d 0.563 (0.563)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.571 (0.566)	test_acc   0.71 (  0.72)	test_minacc   0.67 (  0.62)	test_majacc   0.72 (  0.74)	Loss_d 0.571 (0.566)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.67 (  0.62)	test_majacc_d   0.72 (  0.74)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.557 (0.566)	test_acc   0.71 (  0.71)	test_minacc   0.61 (  0.59)	test_majacc   0.72 (  0.73)	Loss_d 0.557 (0.566)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.72 (  0.73)	test_corr_d   0.49 (  0.48)
Test: [  26/  26]	Loss 0.575 (0.566)	test_acc   0.70 (  0.71)	test_minacc   0.72 (  0.59)	test_majacc   0.69 (  0.73)	Loss_d 0.575 (0.566)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.72 (  0.59)	test_majacc_d   0.69 (  0.73)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.85it/s]
Test: [  0/  1]	Loss 1.273 (1.273)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.273 (1.273)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.273 (1.273)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.273 (1.273)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Overall Timing[ 34/  1]	epoch_time 0.0422 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0418 (0.0405)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7077000330686569, 0.5270000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.15it/s] 23%|##3       | 6/26 [00:00<00:00, 24.79it/s] 38%|###8      | 10/26 [00:00<00:00, 28.77it/s] 50%|#####     | 13/26 [00:00<00:00, 27.37it/s] 62%|######1   | 16/26 [00:00<00:00, 27.21it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.11it/s] 92%|#########2| 24/26 [00:00<00:00, 29.64it/s]100%|##########| 26/26 [00:00<00:00, 26.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 323 tensor(-5.5095e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 462 tensor(2.8228e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 420 tensor(1.8558e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 393 tensor(4.8628e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.70 (  0.71)	train_minacc   0.72 (  0.59)	train_majacc   0.69 (  0.73)	train_corr   0.00 (  0.00)	l1 6.3482 (6.3551)	zero_count 0.0000 (17.3940)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.71it/s] 27%|##6       | 7/26 [00:00<00:00, 34.76it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.76it/s] 46%|####6     | 12/26 [00:00<00:00, 40.67it/s] 65%|######5   | 17/26 [00:00<00:00, 39.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.12it/s] 85%|########4 | 22/26 [00:00<00:00, 42.15it/s]100%|##########| 26/26 [00:00<00:00, 35.93it/s]
Test: [   0/  26]	Loss 0.563 (0.563)	test_acc   0.73 (  0.73)	test_minacc   0.56 (  0.56)	test_majacc   0.76 (  0.76)	Loss_d 0.563 (0.563)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.571 (0.567)	test_acc   0.71 (  0.72)	test_minacc   0.67 (  0.62)	test_majacc   0.72 (  0.74)	Loss_d 0.571 (0.567)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.67 (  0.62)	test_majacc_d   0.72 (  0.74)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.557 (0.566)	test_acc   0.71 (  0.71)	test_minacc   0.61 (  0.59)	test_majacc   0.72 (  0.73)	Loss_d 0.557 (0.566)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.72 (  0.73)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.575 (0.567)	test_acc   0.69 (  0.71)	test_minacc   0.70 (  0.59)	test_majacc   0.69 (  0.73)	Loss_d 0.575 (0.567)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.69 (  0.73)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.64it/s]
Test: [  0/  1]	Loss 1.277 (1.277)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.277 (1.277)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.277 (1.277)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.277 (1.277)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Overall Timing[ 35/  1]	epoch_time 0.0428 (0.0413)	validation_time 0.0004 (0.0006)	train_time 0.0424 (0.0406)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7073000293970108, 0.5240000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.46it/s] 19%|#9        | 5/26 [00:00<00:01, 17.24it/s] 35%|###4      | 9/26 [00:00<00:00, 23.71it/s] 46%|####6     | 12/26 [00:00<00:00, 24.50it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.65it/s] 85%|########4 | 22/26 [00:00<00:00, 27.56it/s]100%|##########| 26/26 [00:01<00:00, 24.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 312 tensor(-5.1896e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 473 tensor(8.9130e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 444 tensor(2.6557e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 385 tensor(1.7841e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.69 (  0.71)	train_minacc   0.70 (  0.59)	train_majacc   0.69 (  0.73)	train_corr   0.00 (  0.00)	l1 6.3492 (6.3550)	zero_count 0.0000 (16.7700)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.71it/s] 27%|##6       | 7/26 [00:00<00:00, 29.91it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.91it/s] 46%|####6     | 12/26 [00:00<00:00, 36.83it/s] 69%|######9   | 18/26 [00:00<00:00, 44.11it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.11it/s] 88%|########8 | 23/26 [00:00<00:00, 42.05it/s]100%|##########| 26/26 [00:00<00:00, 37.61it/s]
Test: [   0/  26]	Loss 0.563 (0.563)	test_acc   0.72 (  0.72)	test_minacc   0.56 (  0.56)	test_majacc   0.75 (  0.75)	Loss_d 0.563 (0.563)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.572 (0.567)	test_acc   0.71 (  0.72)	test_minacc   0.65 (  0.62)	test_majacc   0.72 (  0.73)	Loss_d 0.572 (0.567)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.65 (  0.62)	test_majacc_d   0.72 (  0.73)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.558 (0.567)	test_acc   0.71 (  0.70)	test_minacc   0.61 (  0.59)	test_majacc   0.72 (  0.72)	Loss_d 0.558 (0.567)	test_acc_d   0.71 (  0.70)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.575 (0.567)	test_acc   0.69 (  0.71)	test_minacc   0.70 (  0.59)	test_majacc   0.69 (  0.72)	Loss_d 0.575 (0.567)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.54it/s]
Test: [  0/  1]	Loss 1.279 (1.279)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.279 (1.279)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.279 (1.279)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.279 (1.279)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Overall Timing[ 36/  1]	epoch_time 0.0415 (0.0413)	validation_time 0.0007 (0.0006)	train_time 0.0408 (0.0406)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7050000283718109, 0.5240000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.48it/s] 15%|#5        | 4/26 [00:00<00:01, 20.28it/s] 31%|###       | 8/26 [00:00<00:00, 27.29it/s] 42%|####2     | 11/26 [00:00<00:00, 27.18it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.42it/s] 69%|######9   | 18/26 [00:00<00:00, 29.25it/s] 81%|########  | 21/26 [00:00<00:00, 28.11it/s] 92%|#########2| 24/26 [00:00<00:00, 27.78it/s]100%|##########| 26/26 [00:01<00:00, 25.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 358 tensor(-4.7601e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 312 tensor(-5.6992e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 466 tensor(2.2454e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 428 tensor(2.2406e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 419 tensor(1.4055e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.69 (  0.71)	train_minacc   0.70 (  0.59)	train_majacc   0.69 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3518 (6.3554)	zero_count 0.0000 (22.3080)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.91it/s] 19%|#9        | 5/26 [00:00<00:00, 23.49it/s] 38%|###8      | 10/26 [00:00<00:00, 34.07it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.07it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.44it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.30it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.30it/s] 96%|#########6| 25/26 [00:00<00:00, 41.10it/s]100%|##########| 26/26 [00:00<00:00, 34.05it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.72 (  0.72)	test_minacc   0.56 (  0.56)	test_majacc   0.75 (  0.75)	Loss_d 0.564 (0.564)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.573 (0.568)	test_acc   0.70 (  0.72)	test_minacc   0.65 (  0.62)	test_majacc   0.71 (  0.73)	Loss_d 0.573 (0.568)	test_acc_d   0.70 (  0.72)	test_minacc_d   0.65 (  0.62)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.558 (0.567)	test_acc   0.71 (  0.70)	test_minacc   0.61 (  0.59)	test_majacc   0.72 (  0.72)	Loss_d 0.558 (0.567)	test_acc_d   0.71 (  0.70)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.575 (0.568)	test_acc   0.69 (  0.70)	test_minacc   0.70 (  0.59)	test_majacc   0.69 (  0.72)	Loss_d 0.575 (0.568)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.87it/s]
Test: [  0/  1]	Loss 1.279 (1.279)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.279 (1.279)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.279 (1.279)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.279 (1.279)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Overall Timing[ 37/  1]	epoch_time 0.0421 (0.0413)	validation_time 0.0003 (0.0006)	train_time 0.0417 (0.0406)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7039000319242478, 0.5250000357627869)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.34it/s] 23%|##3       | 6/26 [00:00<00:00, 25.60it/s] 35%|###4      | 9/26 [00:00<00:00, 26.25it/s] 50%|#####     | 13/26 [00:00<00:00, 26.80it/s] 65%|######5   | 17/26 [00:00<00:00, 29.74it/s] 81%|########  | 21/26 [00:00<00:00, 28.73it/s] 92%|#########2| 24/26 [00:00<00:00, 28.93it/s]100%|##########| 26/26 [00:00<00:00, 26.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 351 tensor(-4.4048e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 480 tensor(1.8504e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 455 tensor(1.5557e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 423 tensor(8.3323e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.69 (  0.70)	train_minacc   0.70 (  0.59)	train_majacc   0.69 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3512 (6.3548)	zero_count 0.0000 (13.0650)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.87it/s] 27%|##6       | 7/26 [00:00<00:00, 34.64it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.64it/s] 46%|####6     | 12/26 [00:00<00:00, 40.45it/s] 65%|######5   | 17/26 [00:00<00:00, 42.28it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.28it/s] 85%|########4 | 22/26 [00:00<00:00, 41.03it/s]100%|##########| 26/26 [00:00<00:00, 37.51it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.72 (  0.72)	test_minacc   0.56 (  0.56)	test_majacc   0.75 (  0.75)	Loss_d 0.564 (0.564)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.573 (0.568)	test_acc   0.70 (  0.72)	test_minacc   0.65 (  0.62)	test_majacc   0.71 (  0.73)	Loss_d 0.573 (0.568)	test_acc_d   0.70 (  0.72)	test_minacc_d   0.65 (  0.62)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.558 (0.567)	test_acc   0.70 (  0.70)	test_minacc   0.59 (  0.59)	test_majacc   0.72 (  0.72)	Loss_d 0.558 (0.567)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.575 (0.567)	test_acc   0.69 (  0.70)	test_minacc   0.70 (  0.59)	test_majacc   0.69 (  0.72)	Loss_d 0.575 (0.567)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.13it/s]
Test: [  0/  1]	Loss 1.282 (1.282)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.282 (1.282)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.282 (1.282)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.77 (  0.77)	Loss_d 1.282 (1.282)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.21 (  0.21)
Overall Timing[ 38/  1]	epoch_time 0.0415 (0.0413)	validation_time 0.0004 (0.0006)	train_time 0.0411 (0.0406)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7031000282764435, 0.5240000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.90it/s] 19%|#9        | 5/26 [00:00<00:01, 15.66it/s] 31%|###       | 8/26 [00:00<00:00, 19.70it/s] 46%|####6     | 12/26 [00:00<00:00, 21.95it/s] 62%|######1   | 16/26 [00:00<00:00, 26.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.30it/s] 85%|########4 | 22/26 [00:00<00:00, 25.68it/s]100%|##########| 26/26 [00:01<00:00, 28.79it/s]100%|##########| 26/26 [00:01<00:00, 22.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 349 tensor(-4.2272e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 488 tensor(7.1662e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 488 tensor(1.7115e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 426 tensor(1.6070e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.69 (  0.70)	train_minacc   0.70 (  0.59)	train_majacc   0.69 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3524 (6.3542)	zero_count 0.0000 (11.4270)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.94it/s] 27%|##6       | 7/26 [00:00<00:00, 32.51it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.51it/s] 50%|#####     | 13/26 [00:00<00:00, 39.72it/s] 69%|######9   | 18/26 [00:00<00:00, 43.13it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.13it/s] 88%|########8 | 23/26 [00:00<00:00, 43.65it/s]100%|##########| 26/26 [00:00<00:00, 37.20it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.72 (  0.72)	test_minacc   0.56 (  0.56)	test_majacc   0.75 (  0.75)	Loss_d 0.564 (0.564)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.573 (0.568)	test_acc   0.70 (  0.71)	test_minacc   0.65 (  0.62)	test_majacc   0.71 (  0.73)	Loss_d 0.573 (0.568)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.65 (  0.62)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.558 (0.567)	test_acc   0.69 (  0.70)	test_minacc   0.57 (  0.59)	test_majacc   0.71 (  0.72)	Loss_d 0.558 (0.567)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.575 (0.568)	test_acc   0.69 (  0.70)	test_minacc   0.70 (  0.59)	test_majacc   0.69 (  0.72)	Loss_d 0.575 (0.568)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.78it/s]
Test: [  0/  1]	Loss 1.283 (1.283)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.76 (  0.76)	Loss_d 1.283 (1.283)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.283 (1.283)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.76 (  0.76)	Loss_d 1.283 (1.283)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.21 (  0.21)
Overall Timing[ 39/  1]	epoch_time 0.0408 (0.0413)	validation_time 0.0006 (0.0006)	train_time 0.0401 (0.0406)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7013000330328941, 0.5230000019073486)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 19%|#9        | 5/26 [00:00<00:00, 24.86it/s] 35%|###4      | 9/26 [00:00<00:00, 30.38it/s] 50%|#####     | 13/26 [00:00<00:00, 33.22it/s] 65%|######5   | 17/26 [00:00<00:00, 34.23it/s] 81%|########  | 21/26 [00:00<00:00, 32.59it/s] 96%|#########6| 25/26 [00:00<00:00, 33.69it/s]100%|##########| 26/26 [00:00<00:00, 29.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 390 tensor(8.8148e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.68 (  0.70)	train_minacc   0.70 (  0.59)	train_majacc   0.68 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3501 (6.3518)	zero_count 0.0000 (4.7190)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.30it/s] 27%|##6       | 7/26 [00:00<00:00, 32.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.70it/s] 46%|####6     | 12/26 [00:00<00:00, 39.31it/s] 65%|######5   | 17/26 [00:00<00:00, 40.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.33it/s] 85%|########4 | 22/26 [00:00<00:00, 42.29it/s]100%|##########| 26/26 [00:00<00:00, 36.74it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.72 (  0.72)	test_minacc   0.56 (  0.56)	test_majacc   0.74 (  0.74)	Loss_d 0.564 (0.564)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.573 (0.568)	test_acc   0.70 (  0.71)	test_minacc   0.65 (  0.62)	test_majacc   0.71 (  0.73)	Loss_d 0.573 (0.568)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.65 (  0.62)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.558 (0.567)	test_acc   0.69 (  0.70)	test_minacc   0.57 (  0.59)	test_majacc   0.71 (  0.72)	Loss_d 0.558 (0.567)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.574 (0.567)	test_acc   0.68 (  0.70)	test_minacc   0.70 (  0.59)	test_majacc   0.68 (  0.72)	Loss_d 0.574 (0.567)	test_acc_d   0.68 (  0.70)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.68 (  0.72)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.52it/s]
Test: [  0/  1]	Loss 1.285 (1.285)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.76 (  0.76)	Loss_d 1.285 (1.285)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.285 (1.285)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.76 (  0.76)	Loss_d 1.285 (1.285)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.21 (  0.21)
Overall Timing[ 40/  1]	epoch_time 0.0393 (0.0413)	validation_time 0.0004 (0.0006)	train_time 0.0389 (0.0406)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7013000316619873, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.06it/s] 19%|#9        | 5/26 [00:00<00:00, 23.22it/s] 35%|###4      | 9/26 [00:00<00:00, 29.74it/s] 50%|#####     | 13/26 [00:00<00:00, 29.55it/s] 65%|######5   | 17/26 [00:00<00:00, 31.38it/s] 81%|########  | 21/26 [00:00<00:00, 31.40it/s] 96%|#########6| 25/26 [00:00<00:00, 33.63it/s]100%|##########| 26/26 [00:00<00:00, 28.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 379 tensor(2.8899e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.58 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.69 (  0.70)	train_minacc   0.70 (  0.59)	train_majacc   0.69 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3519 (6.3512)	zero_count 0.0000 (5.1480)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.70it/s] 27%|##6       | 7/26 [00:00<00:00, 34.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.68it/s] 50%|#####     | 13/26 [00:00<00:00, 41.27it/s] 69%|######9   | 18/26 [00:00<00:00, 40.62it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.62it/s] 88%|########8 | 23/26 [00:00<00:00, 42.43it/s]100%|##########| 26/26 [00:00<00:00, 37.59it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.71 (  0.71)	test_minacc   0.56 (  0.56)	test_majacc   0.74 (  0.74)	Loss_d 0.564 (0.564)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.574 (0.568)	test_acc   0.70 (  0.71)	test_minacc   0.65 (  0.62)	test_majacc   0.71 (  0.73)	Loss_d 0.574 (0.568)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.65 (  0.62)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.558 (0.568)	test_acc   0.69 (  0.70)	test_minacc   0.57 (  0.59)	test_majacc   0.71 (  0.72)	Loss_d 0.558 (0.568)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.575 (0.568)	test_acc   0.69 (  0.70)	test_minacc   0.70 (  0.59)	test_majacc   0.69 (  0.72)	Loss_d 0.575 (0.568)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.67it/s]
Test: [  0/  1]	Loss 1.286 (1.286)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.76 (  0.76)	Loss_d 1.286 (1.286)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.286 (1.286)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.76 (  0.76)	Loss_d 1.286 (1.286)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.21 (  0.21)
Overall Timing[ 41/  1]	epoch_time 0.0394 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0390 (0.0405)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.6997000377774238, 0.5220000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 19%|#9        | 5/26 [00:00<00:00, 23.33it/s] 35%|###4      | 9/26 [00:00<00:00, 28.14it/s] 50%|#####     | 13/26 [00:00<00:00, 30.79it/s] 65%|######5   | 17/26 [00:00<00:00, 32.32it/s] 81%|########  | 21/26 [00:00<00:00, 30.94it/s] 96%|#########6| 25/26 [00:00<00:00, 30.20it/s]100%|##########| 26/26 [00:00<00:00, 27.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 395 tensor(-1.4209e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 389 tensor(3.6680e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.69 (  0.70)	train_minacc   0.70 (  0.59)	train_majacc   0.69 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3524 (6.3521)	zero_count 0.0000 (9.2820)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.59it/s] 27%|##6       | 7/26 [00:00<00:00, 27.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.79it/s] 46%|####6     | 12/26 [00:00<00:00, 35.46it/s] 65%|######5   | 17/26 [00:00<00:00, 36.06it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.06it/s] 85%|########4 | 22/26 [00:00<00:00, 39.70it/s]100%|##########| 26/26 [00:00<00:00, 33.41it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.71 (  0.71)	test_minacc   0.58 (  0.58)	test_majacc   0.74 (  0.74)	Loss_d 0.564 (0.564)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.574 (0.569)	test_acc   0.70 (  0.71)	test_minacc   0.65 (  0.62)	test_majacc   0.71 (  0.73)	Loss_d 0.574 (0.569)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.65 (  0.62)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.46 (  0.47)
Test: [  20/  26]	Loss 0.558 (0.568)	test_acc   0.69 (  0.70)	test_minacc   0.57 (  0.59)	test_majacc   0.71 (  0.72)	Loss_d 0.558 (0.568)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.574 (0.568)	test_acc   0.69 (  0.70)	test_minacc   0.70 (  0.59)	test_majacc   0.69 (  0.72)	Loss_d 0.574 (0.568)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.85it/s]
Test: [  0/  1]	Loss 1.287 (1.287)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 1.287 (1.287)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.287 (1.287)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 1.287 (1.287)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.21 (  0.21)
Overall Timing[ 42/  1]	epoch_time 0.0418 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0414 (0.0406)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.6992000343203545, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 19%|#9        | 5/26 [00:00<00:00, 22.72it/s] 31%|###       | 8/26 [00:00<00:00, 25.11it/s] 46%|####6     | 12/26 [00:00<00:00, 29.02it/s] 62%|######1   | 16/26 [00:00<00:00, 30.49it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.20it/s] 92%|#########2| 24/26 [00:00<00:00, 29.37it/s]100%|##########| 26/26 [00:00<00:00, 26.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 358 tensor(-4.7580e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 329 tensor(-5.9084e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 486 tensor(1.0648e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 446 tensor(3.3828e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 420 tensor(6.4866e-06, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.69 (  0.70)	train_minacc   0.70 (  0.59)	train_majacc   0.69 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3571 (6.3544)	zero_count 0.0000 (16.5750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 23%|##3       | 6/26 [00:00<00:00, 27.87it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.87it/s] 42%|####2     | 11/26 [00:00<00:00, 35.67it/s] 62%|######1   | 16/26 [00:00<00:00, 40.23it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.23it/s] 81%|########  | 21/26 [00:00<00:00, 39.47it/s]100%|##########| 26/26 [00:00<00:00, 42.41it/s]100%|##########| 26/26 [00:00<00:00, 34.02it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.71 (  0.71)	test_minacc   0.58 (  0.58)	test_majacc   0.74 (  0.74)	Loss_d 0.564 (0.564)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.574 (0.569)	test_acc   0.70 (  0.71)	test_minacc   0.65 (  0.61)	test_majacc   0.71 (  0.72)	Loss_d 0.574 (0.569)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.65 (  0.61)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.46 (  0.47)
Test: [  20/  26]	Loss 0.559 (0.568)	test_acc   0.69 (  0.70)	test_minacc   0.57 (  0.59)	test_majacc   0.71 (  0.72)	Loss_d 0.559 (0.568)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.575 (0.569)	test_acc   0.69 (  0.70)	test_minacc   0.70 (  0.59)	test_majacc   0.69 (  0.72)	Loss_d 0.575 (0.569)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.70it/s]
Test: [  0/  1]	Loss 1.289 (1.289)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.75 (  0.75)	Loss_d 1.289 (1.289)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.289 (1.289)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.75 (  0.75)	Loss_d 1.289 (1.289)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.21 (  0.21)
Overall Timing[ 43/  1]	epoch_time 0.0425 (0.0413)	validation_time 0.0003 (0.0006)	train_time 0.0421 (0.0406)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.6982000390291214, 0.5200000405311584)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 19%|#9        | 5/26 [00:00<00:01, 20.04it/s] 35%|###4      | 9/26 [00:00<00:00, 26.88it/s] 50%|#####     | 13/26 [00:00<00:00, 31.18it/s] 65%|######5   | 17/26 [00:00<00:00, 32.94it/s] 81%|########  | 21/26 [00:00<00:00, 33.89it/s] 96%|#########6| 25/26 [00:00<00:00, 31.76it/s]100%|##########| 26/26 [00:00<00:00, 27.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 395 tensor(7.2838e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.68 (  0.70)	train_minacc   0.70 (  0.59)	train_majacc   0.68 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3546 (6.3509)	zero_count 0.0000 (8.0730)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.48it/s] 31%|###       | 8/26 [00:00<00:00, 37.06it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.06it/s] 50%|#####     | 13/26 [00:00<00:00, 41.25it/s] 69%|######9   | 18/26 [00:00<00:00, 43.88it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.88it/s] 88%|########8 | 23/26 [00:00<00:00, 40.18it/s]100%|##########| 26/26 [00:00<00:00, 38.70it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.71 (  0.71)	test_minacc   0.58 (  0.58)	test_majacc   0.74 (  0.74)	Loss_d 0.564 (0.564)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.575 (0.569)	test_acc   0.70 (  0.71)	test_minacc   0.65 (  0.61)	test_majacc   0.71 (  0.73)	Loss_d 0.575 (0.569)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.65 (  0.61)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.46 (  0.47)
Test: [  20/  26]	Loss 0.559 (0.568)	test_acc   0.69 (  0.70)	test_minacc   0.57 (  0.58)	test_majacc   0.71 (  0.72)	Loss_d 0.559 (0.568)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.574 (0.569)	test_acc   0.69 (  0.70)	test_minacc   0.70 (  0.59)	test_majacc   0.69 (  0.72)	Loss_d 0.574 (0.569)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.59it/s]
Test: [  0/  1]	Loss 1.289 (1.289)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 1.289 (1.289)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.289 (1.289)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 1.289 (1.289)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.21 (  0.21)
Overall Timing[ 44/  1]	epoch_time 0.0403 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0399 (0.0406)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.6974000297784805, 0.5210000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.00it/s] 19%|#9        | 5/26 [00:00<00:00, 22.74it/s] 35%|###4      | 9/26 [00:00<00:00, 27.31it/s] 50%|#####     | 13/26 [00:00<00:00, 30.16it/s] 65%|######5   | 17/26 [00:00<00:00, 31.82it/s] 81%|########  | 21/26 [00:00<00:00, 33.29it/s] 96%|#########6| 25/26 [00:00<00:00, 34.43it/s]100%|##########| 26/26 [00:00<00:00, 28.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 382 tensor(8.0353e-06, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 382 tensor(2.1165e-08, device='cuda:0')
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.68 (  0.70)	train_minacc   0.70 (  0.59)	train_majacc   0.68 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3584 (6.3503)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.85it/s] 27%|##6       | 7/26 [00:00<00:00, 35.59it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.59it/s] 46%|####6     | 12/26 [00:00<00:00, 40.86it/s] 65%|######5   | 17/26 [00:00<00:00, 43.47it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.47it/s] 85%|########4 | 22/26 [00:00<00:00, 41.36it/s]100%|##########| 26/26 [00:00<00:00, 38.14it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.71 (  0.71)	test_minacc   0.58 (  0.58)	test_majacc   0.73 (  0.73)	Loss_d 0.564 (0.564)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.575 (0.569)	test_acc   0.69 (  0.71)	test_minacc   0.65 (  0.61)	test_majacc   0.70 (  0.72)	Loss_d 0.575 (0.569)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.65 (  0.61)	test_majacc_d   0.70 (  0.72)	test_corr_d   0.46 (  0.47)
Test: [  20/  26]	Loss 0.559 (0.569)	test_acc   0.69 (  0.70)	test_minacc   0.57 (  0.58)	test_majacc   0.71 (  0.71)	Loss_d 0.559 (0.569)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.574 (0.569)	test_acc   0.68 (  0.70)	test_minacc   0.67 (  0.59)	test_majacc   0.68 (  0.71)	Loss_d 0.574 (0.569)	test_acc_d   0.68 (  0.70)	test_minacc_d   0.67 (  0.59)	test_majacc_d   0.68 (  0.71)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.25it/s]
Test: [  0/  1]	Loss 1.291 (1.291)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.74 (  0.74)	Loss_d 1.291 (1.291)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.291 (1.291)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.74 (  0.74)	Loss_d 1.291 (1.291)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Overall Timing[ 45/  1]	epoch_time 0.0400 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0395 (0.0405)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.695900037586689, 0.5220000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.00it/s] 15%|#5        | 4/26 [00:00<00:01, 19.56it/s] 31%|###       | 8/26 [00:00<00:00, 26.82it/s] 46%|####6     | 12/26 [00:00<00:00, 30.35it/s] 62%|######1   | 16/26 [00:00<00:00, 32.61it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.12it/s] 96%|#########6| 25/26 [00:00<00:00, 33.74it/s]100%|##########| 26/26 [00:00<00:00, 28.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 377 tensor(7.2510e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.68 (  0.70)	train_minacc   0.67 (  0.58)	train_majacc   0.68 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3535 (6.3500)	zero_count 134.0000 (8.3810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.93it/s] 31%|###       | 8/26 [00:00<00:00, 37.41it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.41it/s] 50%|#####     | 13/26 [00:00<00:00, 38.12it/s] 69%|######9   | 18/26 [00:00<00:00, 41.76it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.76it/s] 88%|########8 | 23/26 [00:00<00:00, 41.99it/s]100%|##########| 26/26 [00:00<00:00, 37.24it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.71 (  0.71)	test_minacc   0.58 (  0.58)	test_majacc   0.74 (  0.74)	Loss_d 0.564 (0.564)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.575 (0.569)	test_acc   0.70 (  0.71)	test_minacc   0.65 (  0.61)	test_majacc   0.71 (  0.72)	Loss_d 0.575 (0.569)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.65 (  0.61)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.46 (  0.47)
Test: [  20/  26]	Loss 0.560 (0.569)	test_acc   0.69 (  0.70)	test_minacc   0.57 (  0.59)	test_majacc   0.71 (  0.71)	Loss_d 0.560 (0.569)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.574 (0.569)	test_acc   0.68 (  0.70)	test_minacc   0.67 (  0.59)	test_majacc   0.68 (  0.71)	Loss_d 0.574 (0.569)	test_acc_d   0.68 (  0.70)	test_minacc_d   0.67 (  0.59)	test_majacc_d   0.68 (  0.71)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.84it/s]
Test: [  0/  1]	Loss 1.292 (1.292)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.74 (  0.74)	Loss_d 1.292 (1.292)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.292 (1.292)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.74 (  0.74)	Loss_d 1.292 (1.292)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Overall Timing[ 46/  1]	epoch_time 0.0411 (0.0412)	validation_time 0.0005 (0.0006)	train_time 0.0406 (0.0405)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.6956000294685364, 0.5200000405311584)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.97it/s] 19%|#9        | 5/26 [00:00<00:01, 19.46it/s] 35%|###4      | 9/26 [00:00<00:00, 25.86it/s] 50%|#####     | 13/26 [00:00<00:00, 29.53it/s] 65%|######5   | 17/26 [00:00<00:00, 31.84it/s] 81%|########  | 21/26 [00:00<00:00, 33.48it/s] 96%|#########6| 25/26 [00:00<00:00, 31.63it/s]100%|##########| 26/26 [00:00<00:00, 27.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 396 tensor(1.8305e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 366 tensor(8.1036e-06, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.68 (  0.70)	train_minacc   0.67 (  0.59)	train_majacc   0.68 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3563 (6.3502)	zero_count 0.0000 (4.4850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.36it/s] 23%|##3       | 6/26 [00:00<00:00, 30.62it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.62it/s] 42%|####2     | 11/26 [00:00<00:00, 37.70it/s] 62%|######1   | 16/26 [00:00<00:00, 41.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.65it/s] 81%|########  | 21/26 [00:00<00:00, 39.41it/s]100%|##########| 26/26 [00:00<00:00, 42.32it/s]100%|##########| 26/26 [00:00<00:00, 35.75it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.71 (  0.71)	test_minacc   0.58 (  0.58)	test_majacc   0.74 (  0.74)	Loss_d 0.564 (0.564)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.576 (0.569)	test_acc   0.70 (  0.71)	test_minacc   0.69 (  0.62)	test_majacc   0.70 (  0.72)	Loss_d 0.576 (0.569)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.69 (  0.62)	test_majacc_d   0.70 (  0.72)	test_corr_d   0.46 (  0.47)
Test: [  20/  26]	Loss 0.560 (0.569)	test_acc   0.69 (  0.69)	test_minacc   0.57 (  0.59)	test_majacc   0.71 (  0.71)	Loss_d 0.560 (0.569)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.574 (0.569)	test_acc   0.68 (  0.70)	test_minacc   0.67 (  0.59)	test_majacc   0.68 (  0.71)	Loss_d 0.574 (0.569)	test_acc_d   0.68 (  0.70)	test_minacc_d   0.67 (  0.59)	test_majacc_d   0.68 (  0.71)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.71it/s]
Test: [  0/  1]	Loss 1.293 (1.293)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.74 (  0.74)	Loss_d 1.293 (1.293)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.293 (1.293)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.74 (  0.74)	Loss_d 1.293 (1.293)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Overall Timing[ 47/  1]	epoch_time 0.0405 (0.0412)	validation_time 0.0003 (0.0005)	train_time 0.0401 (0.0405)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.6952000318169593, 0.5240000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.62it/s] 23%|##3       | 6/26 [00:00<00:00, 23.66it/s] 38%|###8      | 10/26 [00:00<00:00, 27.82it/s] 50%|#####     | 13/26 [00:00<00:00, 27.15it/s] 65%|######5   | 17/26 [00:00<00:00, 30.03it/s] 81%|########  | 21/26 [00:00<00:00, 29.60it/s] 96%|#########6| 25/26 [00:00<00:00, 28.88it/s]100%|##########| 26/26 [00:00<00:00, 26.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 372 tensor(-7.5010e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 335 tensor(-1.2917e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 490 tensor(2.2517e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 475 tensor(3.1259e-05, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.69 (  0.70)	train_minacc   0.67 (  0.58)	train_majacc   0.69 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3643 (6.3527)	zero_count 0.0000 (18.7590)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.62it/s] 23%|##3       | 6/26 [00:00<00:00, 29.56it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.56it/s] 46%|####6     | 12/26 [00:00<00:00, 41.36it/s] 65%|######5   | 17/26 [00:00<00:00, 42.26it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.26it/s] 88%|########8 | 23/26 [00:00<00:00, 47.34it/s]100%|##########| 26/26 [00:00<00:00, 38.46it/s]
Test: [   0/  26]	Loss 0.562 (0.562)	test_acc   0.72 (  0.72)	test_minacc   0.58 (  0.58)	test_majacc   0.74 (  0.74)	Loss_d 0.562 (0.562)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.574 (0.567)	test_acc   0.70 (  0.71)	test_minacc   0.67 (  0.61)	test_majacc   0.71 (  0.73)	Loss_d 0.574 (0.567)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.67 (  0.61)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.47 (  0.48)
Test: [  20/  26]	Loss 0.558 (0.567)	test_acc   0.69 (  0.70)	test_minacc   0.57 (  0.58)	test_majacc   0.71 (  0.72)	Loss_d 0.558 (0.567)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.572 (0.567)	test_acc   0.69 (  0.70)	test_minacc   0.67 (  0.59)	test_majacc   0.69 (  0.72)	Loss_d 0.572 (0.567)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.67 (  0.59)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.85it/s]
Test: [  0/  1]	Loss 1.295 (1.295)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 1.295 (1.295)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.295 (1.295)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 1.295 (1.295)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.21 (  0.21)
Overall Timing[ 48/  1]	epoch_time 0.0413 (0.0412)	validation_time 0.0004 (0.0005)	train_time 0.0408 (0.0405)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.7000000319480896, 0.5240000486373901)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.92it/s] 15%|#5        | 4/26 [00:00<00:01, 18.75it/s] 31%|###       | 8/26 [00:00<00:00, 26.71it/s] 46%|####6     | 12/26 [00:00<00:00, 30.65it/s] 62%|######1   | 16/26 [00:00<00:00, 32.30it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.02it/s] 92%|#########2| 24/26 [00:00<00:00, 35.49it/s]100%|##########| 26/26 [00:00<00:00, 29.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 452 tensor(1.9197e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 397 tensor(1.5352e-05, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.57 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm  32.06 ( 32.06)	train_acc   0.68 (  0.70)	train_minacc   0.67 (  0.59)	train_majacc   0.69 (  0.72)	train_corr   0.00 (  0.00)	l1 6.3581 (6.3515)	zero_count 0.0000 (3.7050)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.46it/s] 31%|###       | 8/26 [00:00<00:00, 40.21it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.21it/s] 50%|#####     | 13/26 [00:00<00:00, 40.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.58it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.58it/s] 96%|#########6| 25/26 [00:00<00:00, 45.89it/s]100%|##########| 26/26 [00:00<00:00, 40.74it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.71 (  0.71)	test_minacc   0.58 (  0.58)	test_majacc   0.74 (  0.74)	Loss_d 0.564 (0.564)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.574 (0.568)	test_acc   0.69 (  0.71)	test_minacc   0.67 (  0.62)	test_majacc   0.70 (  0.72)	Loss_d 0.574 (0.568)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.67 (  0.62)	test_majacc_d   0.70 (  0.72)	test_corr_d   0.46 (  0.47)
Test: [  20/  26]	Loss 0.561 (0.569)	test_acc   0.69 (  0.70)	test_minacc   0.57 (  0.58)	test_majacc   0.71 (  0.71)	Loss_d 0.561 (0.569)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.575 (0.569)	test_acc   0.68 (  0.70)	test_minacc   0.67 (  0.59)	test_majacc   0.68 (  0.71)	Loss_d 0.575 (0.569)	test_acc_d   0.68 (  0.70)	test_minacc_d   0.67 (  0.59)	test_majacc_d   0.68 (  0.71)	test_corr_d   0.41 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.14it/s]
Test: [  0/  1]	Loss 1.296 (1.296)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.74 (  0.74)	Loss_d 1.296 (1.296)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 1.296 (1.296)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.74 (  0.74)	Loss_d 1.296 (1.296)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Overall Timing[ 49/  1]	epoch_time 0.0391 (0.0411)	validation_time 0.0003 (0.0005)	train_time 0.0388 (0.0405)
record: (train_acc, test_acc) (0.839700022637844, 0.6410000324249268)
last accs (train_acc, test_acc) (0.6956000341176987, 0.5220000147819519)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.173 MB of 0.173 MB uploadedwandb: \ 0.173 MB of 0.173 MB uploadedwandb: | 0.196 MB of 0.204 MB uploaded (0.003 MB deduped)wandb: / 0.503 MB of 0.503 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                           global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/diagnostics/epoch_time_val █▂▂▁▁▂▁▂▁▁▁▁▁▂▁▁▁▁▁▂▂▂▁▂▂▁▂▂▂▂▂▂▁▁▂▂▁▂▂▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/diagnostics/train_time_val █▂▂▁▁▂▁▂▁▁▁▁▁▂▂▁▁▂▁▂▂▂▂▂▂▁▃▂▂▂▂▂▁▁▂▂▂▂▂▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/Loss_avg ▆▆▅▅▅▄▄▄▅▅▅▇▂▁▁▁▂▂▂█▃▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/Loss_d_avg ▆▆▅▅▅▄▄▄▅▅▅▇▂▁▁▁▂▂▂█▃▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/Loss_d_val ▆▆▅▅▅▄▄▄▅▅▅▇▂▁▁▁▂▂▂█▃▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/Loss_val ▆▆▅▅▅▄▄▄▅▅▅▇▂▁▁▁▂▂▂█▃▂▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_acc_avg ▁▁▃▃▃▄▆▅▆▅▄▅▆▇▇▇██▇▆▆▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_acc_d_avg ▁▁▃▃▃▄▆▅▆▅▄▅▆▇▇▇██▇▆▆▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_acc_d_val ▁▁▃▃▃▄▆▅▆▅▄▅▆▇▇▇██▇▆▆▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_acc_val ▁▁▃▃▃▄▆▅▆▅▄▅▆▇▇▇██▇▆▆▇▇▇▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_corr_d_avg ██▇▇▆▆▄▄▄▅▅▄▂▁▁▂▁▁▁▄▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_corr_d_val ██▇▇▆▆▄▄▄▅▅▄▂▁▁▂▁▁▁▄▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_majacc_avg ██████▇▇▇█▇▇▆▅▆▅▆▅▅▁▅▅▅▅▅▅▅▅▅▅▅▅▅▅▄▄▄▄▄▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_majacc_d_avg ██████▇▇▇█▇▇▆▅▆▅▆▅▅▁▅▅▅▅▅▅▅▅▅▅▅▅▅▅▄▄▄▄▄▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_majacc_d_val ██████▇▇▇█▇▇▆▅▆▅▆▅▅▁▅▅▅▅▅▅▅▅▅▅▅▅▅▅▄▄▄▄▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_majacc_val ██████▇▇▇█▇▇▆▅▆▅▆▅▅▁▅▅▅▅▅▅▅▅▅▅▅▅▅▅▄▄▄▄▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_minacc_avg ▁▁▃▃▃▄▆▅▅▄▄▅▆▇▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_minacc_d_avg ▁▁▃▃▃▄▆▅▅▄▄▅▆▇▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_minacc_d_val ▁▁▃▃▃▄▆▅▅▄▄▅▆▇▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_minacc_val ▁▁▃▃▃▄▆▅▅▄▄▅▆▇▇▇██▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/Loss_avg █▆▆▆▅▅▅▄▄▄▄▄▂▁▁▁▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/Loss_val ██▇▆▅▅▅▄▄▅▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/l1_avg ▆▇▇▇▇▇▇█████▇▃▂▂▁▁▂▆▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/l1_val ▅▆▆▆▆▆▆▆▆▅▄▆▃▂▂▁▁▂▂█▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_acc_avg ▄▆▆▆▆▇▇▇▇▇██▇▅▄▅▅▆▆▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_acc_val ▅▅▅▆▆▆▇██▇▇█▅▅▄▄▅▅▆▆▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_majacc_avg ▇███▇▇▇▇▇▇▇▇▆▄▃▃▃▄▅▃▃▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_majacc_val ████████████▅▄▃▄▄▄▆▇▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_minacc_avg ▁▁▁▂▃▄▄▅▅▅▆▆▇███▇█▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_minacc_val ▁▁▂▃▃▄▅▆▆▅▅▇▇████▇█▅▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_nll_avg █▅▄▄▃▃▃▂▂▂▁▁▂▅▅▅▄▄▃▇████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_nll_val ▆▆▅▄▃▃▂▂▂▂▂▁▅▄▆▅▄▄▄▆████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_penalty_avg █▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_penalty_val █▇▄▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/weight_norm_avg ▁▃▃▃▃▃▃▃▃▄▄▄▄▄▄▄▄▄▄▄████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/weight_norm_val ▁▂▂▂▂▂▂▂▂▂▃▃▃▃▃▃▃▃▃▅████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃█▆▅▄▄▃▃▃▂▂▃▂▁▁▂▂▁▂▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▄▁▁
wandb: 
wandb: Run summary:
wandb:                                                                           global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/diagnostics/epoch_time_val 0.03909
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/diagnostics/train_time_val 0.03876
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/diagnostics/validation_time_val 0.00031
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/Loss_avg 1.29586
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/Loss_d_avg 1.29586
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/Loss_d_val 1.29586
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/Loss_val 1.29586
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_acc_avg 0.522
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_acc_d_avg 0.522
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_acc_d_val 0.522
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_acc_val 0.522
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_corr_d_avg 0.20603
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_corr_d_val 0.20603
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_majacc_avg 0.74
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_majacc_d_avg 0.74
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_majacc_d_val 0.74
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_majacc_val 0.74
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_minacc_avg 0.49778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_minacc_d_avg 0.49778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_minacc_d_val 0.49778
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/test/test_minacc_val 0.49778
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/Loss_avg 6e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/Loss_val 7e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/l1_avg 6.35153
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/l1_val 6.3581
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_acc_avg 0.7019
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_acc_val 0.684
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_majacc_avg 0.72196
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_majacc_val 0.68599
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_minacc_avg 0.58612
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_minacc_val 0.67442
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_nll_avg 0.56587
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_nll_val 0.57488
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/train_penalty_val 1e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/weight_norm_avg 32.05616
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/weight_norm_val 32.05589
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/zero_count_avg 3.705
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/95/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/okaalms3
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_154115-okaalms3/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_154354-g4zxfifl
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/g4zxfifl
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1212
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5980, 3, 32, 32) (6020, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:36,  1.45s/it] 19%|#9        | 5/26 [00:01<00:05,  4.19it/s] 35%|###4      | 9/26 [00:01<00:02,  8.20it/s] 50%|#####     | 13/26 [00:01<00:01, 12.41it/s] 65%|######5   | 17/26 [00:01<00:00, 16.60it/s] 81%|########  | 21/26 [00:01<00:00, 20.60it/s] 96%|#########6| 25/26 [00:02<00:00, 24.12it/s]100%|##########| 26/26 [00:02<00:00, 10.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.448 (0.510)	train_nll   0.45 (  0.51)	train_penalty   0.08 (  0.22)	weight_norm  20.94 ( 18.19)	train_acc   0.84 (  0.81)	train_minacc   0.00 (  0.07)	train_majacc   1.00 (  0.94)	train_corr   0.00 (  0.00)	l1 7.4649 (7.9100)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 34.90it/s] 35%|###4      | 9/26 [00:00<00:00, 41.08it/s]                                               35%|###4      | 9/26 [00:00<00:00, 41.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 44.55it/s] 77%|#######6  | 20/26 [00:00<00:00, 45.55it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 45.55it/s] 96%|#########6| 25/26 [00:00<00:00, 45.77it/s]100%|##########| 26/26 [00:00<00:00, 40.98it/s]
Test: [   0/  26]	Loss 0.339 (0.339)	test_acc   0.88 (  0.88)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.339 (0.339)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.416 (0.411)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.416 (0.411)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.399 (0.408)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.399 (0.408)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.448 (0.409)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.448 (0.409)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.51it/s]100%|##########| 1/1 [00:00<00:00,  2.51it/s]
Test: [  0/  1]	Loss 1.765 (1.765)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.765 (1.765)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.765 (1.765)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.765 (1.765)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0764 (0.0764)	validation_time 0.0067 (0.0067)	train_time 0.0647 (0.0647)
record: (train_acc, test_acc) (0.8486000245213509, 0.10500000417232513)
last accs (train_acc, test_acc) (0.8486000245213509, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.81it/s] 19%|#9        | 5/26 [00:00<00:00, 23.47it/s] 35%|###4      | 9/26 [00:00<00:00, 28.82it/s] 50%|#####     | 13/26 [00:00<00:00, 31.74it/s] 65%|######5   | 17/26 [00:00<00:00, 33.30it/s] 81%|########  | 21/26 [00:00<00:00, 34.42it/s] 96%|#########6| 25/26 [00:00<00:00, 35.28it/s]100%|##########| 26/26 [00:00<00:00, 29.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.423 (0.408)	train_nll   0.42 (  0.41)	train_penalty   0.06 (  0.06)	weight_norm  22.04 ( 21.70)	train_acc   0.82 (  0.85)	train_minacc   0.02 (  0.03)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 7.6365 (7.5688)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.23it/s] 31%|###       | 8/26 [00:00<00:00, 37.91it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.91it/s] 50%|#####     | 13/26 [00:00<00:00, 41.80it/s] 69%|######9   | 18/26 [00:00<00:00, 43.15it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.15it/s] 88%|########8 | 23/26 [00:00<00:00, 40.55it/s]100%|##########| 26/26 [00:00<00:00, 38.34it/s]
Test: [   0/  26]	Loss 0.335 (0.335)	test_acc   0.88 (  0.88)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.335 (0.335)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.374 (0.388)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.374 (0.388)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.375 (0.384)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.375 (0.384)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.96)
Test: [  26/  26]	Loss 0.417 (0.385)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.417 (0.385)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.18it/s]
Test: [  0/  1]	Loss 1.824 (1.824)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.824 (1.824)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.824 (1.824)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.824 (1.824)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0391 (0.0578)	validation_time 0.0007 (0.0037)	train_time 0.0385 (0.0516)
record: (train_acc, test_acc) (0.849900024652481, 0.11700000613927841)
last accs (train_acc, test_acc) (0.849900024652481, 0.11700000613927841)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.80it/s] 15%|#5        | 4/26 [00:00<00:01, 17.55it/s] 31%|###       | 8/26 [00:00<00:00, 25.42it/s] 46%|####6     | 12/26 [00:00<00:00, 29.39it/s] 62%|######1   | 16/26 [00:00<00:00, 31.71it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.97it/s] 92%|#########2| 24/26 [00:00<00:00, 33.97it/s]100%|##########| 26/26 [00:00<00:00, 28.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.418 (0.393)	train_nll   0.42 (  0.39)	train_penalty   0.06 (  0.05)	weight_norm  22.17 ( 22.12)	train_acc   0.82 (  0.85)	train_minacc   0.02 (  0.07)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 7.5610 (7.5343)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.74it/s] 31%|###       | 8/26 [00:00<00:00, 38.63it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.63it/s] 50%|#####     | 13/26 [00:00<00:00, 37.96it/s] 69%|######9   | 18/26 [00:00<00:00, 41.42it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.42it/s] 88%|########8 | 23/26 [00:00<00:00, 42.83it/s]100%|##########| 26/26 [00:00<00:00, 37.74it/s]
Test: [   0/  26]	Loss 0.314 (0.314)	test_acc   0.88 (  0.88)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.314 (0.314)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.358 (0.374)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.06)	test_majacc   1.00 (  0.99)	Loss_d 0.358 (0.374)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.06)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.96)
Test: [  20/  26]	Loss 0.366 (0.369)	test_acc   0.85 (  0.85)	test_minacc   0.04 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.366 (0.369)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.04 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.96)
Test: [  26/  26]	Loss 0.400 (0.370)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.05)	test_majacc   1.00 (  0.99)	Loss_d 0.400 (0.370)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.05)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.30it/s]
Test: [  0/  1]	Loss 1.821 (1.821)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.821 (1.821)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.821 (1.821)	test_acc   0.12 (  0.12)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 1.821 (1.821)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0425 (0.0527)	validation_time 0.0006 (0.0027)	train_time 0.0419 (0.0483)
record: (train_acc, test_acc) (0.8509000255465508, 0.12300000339746475)
last accs (train_acc, test_acc) (0.8509000255465508, 0.12300000339746475)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 19%|#9        | 5/26 [00:00<00:01, 18.71it/s] 31%|###       | 8/26 [00:00<00:00, 22.51it/s] 46%|####6     | 12/26 [00:00<00:00, 27.72it/s] 62%|######1   | 16/26 [00:00<00:00, 30.71it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.37it/s] 92%|#########2| 24/26 [00:00<00:00, 33.52it/s]100%|##########| 26/26 [00:00<00:00, 27.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.382 (0.380)	train_nll   0.38 (  0.38)	train_penalty   0.03 (  0.05)	weight_norm  22.24 ( 22.20)	train_acc   0.84 (  0.85)	train_minacc   0.24 (  0.13)	train_majacc   0.96 (  0.98)	train_corr   0.00 (  0.00)	l1 7.3336 (7.3186)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.23it/s] 27%|##6       | 7/26 [00:00<00:00, 26.98it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.98it/s] 42%|####2     | 11/26 [00:00<00:00, 31.19it/s] 65%|######5   | 17/26 [00:00<00:00, 36.95it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.95it/s] 88%|########8 | 23/26 [00:00<00:00, 42.55it/s]100%|##########| 26/26 [00:00<00:00, 33.78it/s]
Test: [   0/  26]	Loss 0.314 (0.314)	test_acc   0.87 (  0.87)	test_minacc   0.24 (  0.24)	test_majacc   0.95 (  0.95)	Loss_d 0.314 (0.314)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.344 (0.355)	test_acc   0.85 (  0.84)	test_minacc   0.34 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 0.344 (0.355)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.34 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.85 (  0.86)
Test: [  20/  26]	Loss 0.341 (0.350)	test_acc   0.84 (  0.85)	test_minacc   0.19 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 0.341 (0.350)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.19 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.87)
Test: [  26/  26]	Loss 0.364 (0.351)	test_acc   0.84 (  0.85)	test_minacc   0.34 (  0.29)	test_majacc   0.94 (  0.95)	Loss_d 0.364 (0.351)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.34 (  0.29)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.87 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.93it/s]
Test: [  0/  1]	Loss 1.570 (1.570)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 1.570 (1.570)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.68 (  0.68)
Test: [  1/  1]	Loss 1.570 (1.570)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 1.570 (1.570)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.68 (  0.68)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0409 (0.0497)	validation_time 0.0004 (0.0021)	train_time 0.0405 (0.0464)
record: (train_acc, test_acc) (0.848100021481514, 0.3020000159740448)
last accs (train_acc, test_acc) (0.848100021481514, 0.3020000159740448)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.72it/s] 23%|##3       | 6/26 [00:00<00:00, 22.87it/s] 38%|###8      | 10/26 [00:00<00:00, 28.09it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.79it/s] 69%|######9   | 18/26 [00:00<00:00, 32.62it/s] 85%|########4 | 22/26 [00:00<00:00, 34.03it/s]100%|##########| 26/26 [00:00<00:00, 35.15it/s]100%|##########| 26/26 [00:00<00:00, 29.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.376 (0.359)	train_nll   0.38 (  0.36)	train_penalty   0.04 (  0.03)	weight_norm  22.33 ( 22.28)	train_acc   0.83 (  0.85)	train_minacc   0.10 (  0.17)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 6.7536 (6.9293)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.72it/s] 23%|##3       | 6/26 [00:00<00:00, 32.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.58it/s] 42%|####2     | 11/26 [00:00<00:00, 39.12it/s] 62%|######1   | 16/26 [00:00<00:00, 37.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.41it/s] 81%|########  | 21/26 [00:00<00:00, 39.48it/s]100%|##########| 26/26 [00:00<00:00, 42.47it/s]100%|##########| 26/26 [00:00<00:00, 35.71it/s]
Test: [   0/  26]	Loss 0.296 (0.296)	test_acc   0.88 (  0.88)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 0.296 (0.296)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.324 (0.339)	test_acc   0.86 (  0.86)	test_minacc   0.33 (  0.26)	test_majacc   0.95 (  0.97)	Loss_d 0.324 (0.339)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.33 (  0.26)	test_majacc_d   0.95 (  0.97)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.323 (0.338)	test_acc   0.86 (  0.86)	test_minacc   0.19 (  0.24)	test_majacc   0.98 (  0.97)	Loss_d 0.323 (0.338)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.19 (  0.24)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.89)
Test: [  26/  26]	Loss 0.356 (0.339)	test_acc   0.86 (  0.86)	test_minacc   0.29 (  0.24)	test_majacc   0.97 (  0.97)	Loss_d 0.356 (0.339)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.29 (  0.24)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.10it/s]
Test: [  0/  1]	Loss 1.595 (1.595)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 1.595 (1.595)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 1.595 (1.595)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 1.595 (1.595)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.79 (  0.79)
Overall Timing[  4/  1]	epoch_time 0.0413 (0.0480)	validation_time 0.0003 (0.0017)	train_time 0.0410 (0.0453)
record: (train_acc, test_acc) (0.848100021481514, 0.3020000159740448)
last accs (train_acc, test_acc) (0.8598000260591507, 0.21900001168251038)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.15it/s] 19%|#9        | 5/26 [00:00<00:01, 18.73it/s] 35%|###4      | 9/26 [00:00<00:00, 25.58it/s] 50%|#####     | 13/26 [00:00<00:00, 29.14it/s] 65%|######5   | 17/26 [00:00<00:00, 31.07it/s] 81%|########  | 21/26 [00:00<00:00, 32.74it/s] 96%|#########6| 25/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:00<00:00, 27.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.355 (0.339)	train_nll   0.35 (  0.34)	train_penalty   0.05 (  0.03)	weight_norm  22.45 ( 22.39)	train_acc   0.85 (  0.86)	train_minacc   0.12 (  0.22)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 6.8101 (6.8302)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 23%|##3       | 6/26 [00:00<00:00, 26.07it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.07it/s] 42%|####2     | 11/26 [00:00<00:00, 34.17it/s] 62%|######1   | 16/26 [00:00<00:00, 37.40it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.40it/s] 81%|########  | 21/26 [00:00<00:00, 40.75it/s]100%|##########| 26/26 [00:00<00:00, 35.13it/s]
Test: [   0/  26]	Loss 0.266 (0.266)	test_acc   0.89 (  0.89)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 0.266 (0.266)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.297 (0.304)	test_acc   0.88 (  0.87)	test_minacc   0.40 (  0.30)	test_majacc   0.97 (  0.97)	Loss_d 0.297 (0.304)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.40 (  0.30)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.284 (0.302)	test_acc   0.88 (  0.87)	test_minacc   0.35 (  0.31)	test_majacc   0.97 (  0.97)	Loss_d 0.284 (0.302)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.35 (  0.31)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.326 (0.304)	test_acc   0.85 (  0.87)	test_minacc   0.17 (  0.29)	test_majacc   0.98 (  0.97)	Loss_d 0.326 (0.304)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.17 (  0.29)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.04it/s]
Test: [  0/  1]	Loss 1.750 (1.750)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   1.00 (  1.00)	Loss_d 1.750 (1.750)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 1.750 (1.750)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   1.00 (  1.00)	Loss_d 1.750 (1.750)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Overall Timing[  5/  1]	epoch_time 0.0421 (0.0470)	validation_time 0.0004 (0.0015)	train_time 0.0416 (0.0447)
record: (train_acc, test_acc) (0.848100021481514, 0.3020000159740448)
last accs (train_acc, test_acc) (0.8713000237941741, 0.27000001072883606)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.16it/s] 19%|#9        | 5/26 [00:00<00:00, 22.25it/s] 35%|###4      | 9/26 [00:00<00:00, 27.62it/s] 50%|#####     | 13/26 [00:00<00:00, 30.30it/s] 65%|######5   | 17/26 [00:00<00:00, 31.98it/s] 81%|########  | 21/26 [00:00<00:00, 33.39it/s] 96%|#########6| 25/26 [00:00<00:00, 34.46it/s]100%|##########| 26/26 [00:00<00:00, 29.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.321 (0.318)	train_nll   0.32 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.57 ( 22.51)	train_acc   0.85 (  0.87)	train_minacc   0.29 (  0.30)	train_majacc   0.96 (  0.97)	train_corr   0.00 (  0.00)	l1 6.8790 (6.8609)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.65it/s] 27%|##6       | 7/26 [00:00<00:00, 31.45it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.45it/s] 46%|####6     | 12/26 [00:00<00:00, 37.45it/s] 65%|######5   | 17/26 [00:00<00:00, 41.15it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.15it/s] 85%|########4 | 22/26 [00:00<00:00, 42.14it/s]100%|##########| 26/26 [00:00<00:00, 36.98it/s]
Test: [   0/  26]	Loss 0.274 (0.274)	test_acc   0.88 (  0.88)	test_minacc   0.53 (  0.53)	test_majacc   0.93 (  0.93)	Loss_d 0.274 (0.274)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.272 (0.290)	test_acc   0.89 (  0.87)	test_minacc   0.52 (  0.52)	test_majacc   0.95 (  0.94)	Loss_d 0.272 (0.290)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.266 (0.286)	test_acc   0.89 (  0.88)	test_minacc   0.67 (  0.54)	test_majacc   0.93 (  0.94)	Loss_d 0.266 (0.286)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.67 (  0.54)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.82 (  0.82)
Test: [  26/  26]	Loss 0.290 (0.286)	test_acc   0.88 (  0.88)	test_minacc   0.56 (  0.54)	test_majacc   0.94 (  0.94)	Loss_d 0.290 (0.286)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.61it/s]
Test: [  0/  1]	Loss 1.615 (1.615)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 1.615 (1.615)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 1.615 (1.615)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 1.615 (1.615)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.54 (  0.54)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0422 (0.0464)	validation_time 0.0004 (0.0014)	train_time 0.0418 (0.0443)
record: (train_acc, test_acc) (0.8803000187873841, 0.38200002908706665)
last accs (train_acc, test_acc) (0.8803000187873841, 0.38200002908706665)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.73it/s] 19%|#9        | 5/26 [00:00<00:01, 19.94it/s] 35%|###4      | 9/26 [00:00<00:00, 26.80it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.39it/s] 88%|########8 | 23/26 [00:00<00:00, 36.17it/s]100%|##########| 26/26 [00:00<00:00, 29.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.288 (0.303)	train_nll   0.29 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.73 ( 22.65)	train_acc   0.86 (  0.87)	train_minacc   0.37 (  0.35)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.1411 (6.9007)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 19%|#9        | 5/26 [00:00<00:00, 22.67it/s]                                               19%|#9        | 5/26 [00:00<00:00, 22.67it/s] 42%|####2     | 11/26 [00:00<00:00, 34.45it/s] 65%|######5   | 17/26 [00:00<00:00, 40.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.37it/s] 85%|########4 | 22/26 [00:00<00:00, 43.12it/s]100%|##########| 26/26 [00:00<00:00, 35.01it/s]
Test: [   0/  26]	Loss 0.257 (0.257)	test_acc   0.88 (  0.88)	test_minacc   0.58 (  0.58)	test_majacc   0.92 (  0.92)	Loss_d 0.257 (0.257)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.242 (0.266)	test_acc   0.90 (  0.89)	test_minacc   0.67 (  0.58)	test_majacc   0.94 (  0.94)	Loss_d 0.242 (0.266)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.67 (  0.58)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.81)
Test: [  20/  26]	Loss 0.254 (0.268)	test_acc   0.90 (  0.89)	test_minacc   0.63 (  0.59)	test_majacc   0.94 (  0.94)	Loss_d 0.254 (0.268)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.63 (  0.59)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.81 (  0.80)
Test: [  26/  26]	Loss 0.236 (0.268)	test_acc   0.89 (  0.89)	test_minacc   0.63 (  0.58)	test_majacc   0.94 (  0.94)	Loss_d 0.236 (0.268)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.63 (  0.58)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.81 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.78it/s]
Test: [  0/  1]	Loss 1.801 (1.801)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.96 (  0.96)	Loss_d 1.801 (1.801)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 1.801 (1.801)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.96 (  0.96)	Loss_d 1.801 (1.801)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.52 (  0.52)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0360 (0.0451)	validation_time 0.0006 (0.0013)	train_time 0.0354 (0.0432)
record: (train_acc, test_acc) (0.8885000232458115, 0.39000001549720764)
last accs (train_acc, test_acc) (0.8885000232458115, 0.39000001549720764)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.87it/s] 19%|#9        | 5/26 [00:00<00:01, 16.44it/s] 38%|###8      | 10/26 [00:00<00:00, 26.18it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.64it/s] 88%|########8 | 23/26 [00:00<00:00, 34.88it/s]100%|##########| 26/26 [00:00<00:00, 27.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.283 (0.280)	train_nll   0.28 (  0.28)	train_penalty   0.02 (  0.01)	weight_norm  22.94 ( 22.83)	train_acc   0.88 (  0.88)	train_minacc   0.41 (  0.46)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.2374 (7.1019)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 19%|#9        | 5/26 [00:00<00:01, 19.08it/s]                                               19%|#9        | 5/26 [00:00<00:01, 19.08it/s] 42%|####2     | 11/26 [00:00<00:00, 31.04it/s] 65%|######5   | 17/26 [00:00<00:00, 37.62it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.62it/s] 88%|########8 | 23/26 [00:00<00:00, 43.28it/s]100%|##########| 26/26 [00:00<00:00, 33.19it/s]
Test: [   0/  26]	Loss 0.211 (0.211)	test_acc   0.93 (  0.93)	test_minacc   0.64 (  0.64)	test_majacc   0.96 (  0.96)	Loss_d 0.211 (0.211)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.237 (0.246)	test_acc   0.91 (  0.90)	test_minacc   0.59 (  0.55)	test_majacc   0.96 (  0.96)	Loss_d 0.237 (0.246)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  20/  26]	Loss 0.219 (0.246)	test_acc   0.92 (  0.90)	test_minacc   0.60 (  0.56)	test_majacc   0.97 (  0.96)	Loss_d 0.219 (0.246)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.60 (  0.56)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  26/  26]	Loss 0.229 (0.246)	test_acc   0.90 (  0.90)	test_minacc   0.56 (  0.55)	test_majacc   0.97 (  0.96)	Loss_d 0.229 (0.246)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.84 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.02it/s]
Test: [  0/  1]	Loss 2.030 (2.030)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 2.030 (2.030)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.65 (  0.65)
Test: [  1/  1]	Loss 2.030 (2.030)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 2.030 (2.030)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.65 (  0.65)
Overall Timing[  8/  1]	epoch_time 0.0422 (0.0447)	validation_time 0.0004 (0.0012)	train_time 0.0418 (0.0430)
record: (train_acc, test_acc) (0.8885000232458115, 0.39000001549720764)
last accs (train_acc, test_acc) (0.899800021827221, 0.3400000035762787)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.01it/s] 19%|#9        | 5/26 [00:00<00:00, 22.05it/s] 35%|###4      | 9/26 [00:00<00:00, 28.08it/s] 50%|#####     | 13/26 [00:00<00:00, 31.26it/s] 65%|######5   | 17/26 [00:00<00:00, 33.18it/s] 81%|########  | 21/26 [00:00<00:00, 34.55it/s] 96%|#########6| 25/26 [00:00<00:00, 35.34it/s]100%|##########| 26/26 [00:00<00:00, 29.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.286 (0.268)	train_nll   0.29 (  0.27)	train_penalty   0.02 (  0.01)	weight_norm  23.20 ( 23.07)	train_acc   0.87 (  0.89)	train_minacc   0.46 (  0.51)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 7.2300 (7.2939)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.52it/s] 27%|##6       | 7/26 [00:00<00:00, 36.69it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.69it/s] 46%|####6     | 12/26 [00:00<00:00, 41.69it/s] 65%|######5   | 17/26 [00:00<00:00, 39.71it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.71it/s] 85%|########4 | 22/26 [00:00<00:00, 42.49it/s]100%|##########| 26/26 [00:00<00:00, 37.81it/s]
Test: [   0/  26]	Loss 0.193 (0.193)	test_acc   0.92 (  0.92)	test_minacc   0.71 (  0.71)	test_majacc   0.95 (  0.95)	Loss_d 0.193 (0.193)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.232 (0.234)	test_acc   0.91 (  0.90)	test_minacc   0.57 (  0.60)	test_majacc   0.97 (  0.96)	Loss_d 0.232 (0.234)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.57 (  0.60)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.85 (  0.84)
Test: [  20/  26]	Loss 0.221 (0.236)	test_acc   0.92 (  0.90)	test_minacc   0.61 (  0.60)	test_majacc   0.97 (  0.96)	Loss_d 0.221 (0.236)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.61 (  0.60)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.85 (  0.84)
Test: [  26/  26]	Loss 0.237 (0.236)	test_acc   0.91 (  0.91)	test_minacc   0.68 (  0.60)	test_majacc   0.96 (  0.96)	Loss_d 0.237 (0.236)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.68 (  0.60)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.07it/s]
Test: [  0/  1]	Loss 1.985 (1.985)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.98 (  0.98)	Loss_d 1.985 (1.985)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 1.985 (1.985)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.98 (  0.98)	Loss_d 1.985 (1.985)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.62 (  0.62)
Overall Timing[  9/  1]	epoch_time 0.0364 (0.0439)	validation_time 0.0004 (0.0011)	train_time 0.0360 (0.0423)
record: (train_acc, test_acc) (0.8885000232458115, 0.39000001549720764)
last accs (train_acc, test_acc) (0.9057000197768211, 0.34300002455711365)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.08it/s] 19%|#9        | 5/26 [00:00<00:01, 19.06it/s] 35%|###4      | 9/26 [00:00<00:00, 26.19it/s] 50%|#####     | 13/26 [00:00<00:00, 29.81it/s] 65%|######5   | 17/26 [00:00<00:00, 29.77it/s] 81%|########  | 21/26 [00:00<00:00, 32.16it/s] 96%|#########6| 25/26 [00:00<00:00, 34.03it/s]100%|##########| 26/26 [00:00<00:00, 27.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.300 (0.252)	train_nll   0.30 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.54 ( 23.36)	train_acc   0.89 (  0.89)	train_minacc   0.54 (  0.53)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3367 (7.6756)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.17it/s] 15%|#5        | 4/26 [00:00<00:01, 15.33it/s] 35%|###4      | 9/26 [00:00<00:00, 27.56it/s]                                               35%|###4      | 9/26 [00:00<00:00, 27.56it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.89it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 34.89it/s] 92%|#########2| 24/26 [00:00<00:00, 38.85it/s]100%|##########| 26/26 [00:00<00:00, 30.86it/s]
Test: [   0/  26]	Loss 0.215 (0.215)	test_acc   0.91 (  0.91)	test_minacc   0.67 (  0.67)	test_majacc   0.94 (  0.94)	Loss_d 0.215 (0.215)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.245 (0.244)	test_acc   0.91 (  0.90)	test_minacc   0.62 (  0.62)	test_majacc   0.96 (  0.95)	Loss_d 0.245 (0.244)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.233 (0.242)	test_acc   0.92 (  0.90)	test_minacc   0.72 (  0.64)	test_majacc   0.96 (  0.95)	Loss_d 0.233 (0.242)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.72 (  0.64)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.82 (  0.82)
Test: [  26/  26]	Loss 0.258 (0.244)	test_acc   0.89 (  0.90)	test_minacc   0.59 (  0.63)	test_majacc   0.95 (  0.95)	Loss_d 0.258 (0.244)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.59 (  0.63)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.30it/s]
Test: [  0/  1]	Loss 1.801 (1.801)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 1.801 (1.801)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 1.801 (1.801)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 1.801 (1.801)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.56 (  0.56)
Overall Timing[ 10/  1]	epoch_time 0.0382 (0.0434)	validation_time 0.0003 (0.0010)	train_time 0.0378 (0.0419)
record: (train_acc, test_acc) (0.8885000232458115, 0.39000001549720764)
last accs (train_acc, test_acc) (0.9014000166654587, 0.37400001287460327)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.42it/s] 23%|##3       | 6/26 [00:00<00:00, 26.45it/s] 38%|###8      | 10/26 [00:00<00:00, 30.29it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.12it/s] 69%|######9   | 18/26 [00:00<00:00, 33.30it/s] 85%|########4 | 22/26 [00:00<00:00, 34.12it/s]100%|##########| 26/26 [00:00<00:00, 35.46it/s]100%|##########| 26/26 [00:00<00:00, 30.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.265 (0.237)	train_nll   0.27 (  0.24)	train_penalty   0.02 (  0.01)	weight_norm  23.90 ( 23.72)	train_acc   0.90 (  0.90)	train_minacc   0.51 (  0.59)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3608 (7.8157)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.48it/s] 27%|##6       | 7/26 [00:00<00:00, 34.73it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.73it/s] 46%|####6     | 12/26 [00:00<00:00, 40.42it/s] 65%|######5   | 17/26 [00:00<00:00, 38.57it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.57it/s] 85%|########4 | 22/26 [00:00<00:00, 41.48it/s]100%|##########| 26/26 [00:00<00:00, 36.23it/s]
Test: [   0/  26]	Loss 0.210 (0.210)	test_acc   0.89 (  0.89)	test_minacc   0.47 (  0.47)	test_majacc   0.95 (  0.95)	Loss_d 0.210 (0.210)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.244 (0.235)	test_acc   0.90 (  0.90)	test_minacc   0.52 (  0.54)	test_majacc   0.97 (  0.97)	Loss_d 0.244 (0.235)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.52 (  0.54)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  20/  26]	Loss 0.195 (0.231)	test_acc   0.94 (  0.90)	test_minacc   0.67 (  0.57)	test_majacc   0.98 (  0.96)	Loss_d 0.195 (0.231)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  26/  26]	Loss 0.221 (0.229)	test_acc   0.91 (  0.90)	test_minacc   0.59 (  0.56)	test_majacc   0.98 (  0.97)	Loss_d 0.221 (0.229)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.85 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.28it/s]
Test: [  0/  1]	Loss 2.051 (2.051)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.98 (  0.98)	Loss_d 2.051 (2.051)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 2.051 (2.051)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.98 (  0.98)	Loss_d 2.051 (2.051)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.60 (  0.60)
Overall Timing[ 11/  1]	epoch_time 0.0393 (0.0430)	validation_time 0.0005 (0.0010)	train_time 0.0388 (0.0416)
record: (train_acc, test_acc) (0.8885000232458115, 0.39000001549720764)
last accs (train_acc, test_acc) (0.9045000151991844, 0.3630000054836273)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.01it/s] 19%|#9        | 5/26 [00:00<00:00, 23.51it/s] 35%|###4      | 9/26 [00:00<00:00, 27.70it/s] 50%|#####     | 13/26 [00:00<00:00, 29.44it/s] 65%|######5   | 17/26 [00:00<00:00, 30.60it/s] 81%|########  | 21/26 [00:00<00:00, 32.36it/s] 96%|#########6| 25/26 [00:00<00:00, 33.48it/s]100%|##########| 26/26 [00:00<00:00, 28.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.218 (0.222)	train_nll   0.22 (  0.22)	train_penalty   0.00 (  0.01)	weight_norm  24.27 ( 24.09)	train_acc   0.92 (  0.91)	train_minacc   0.59 (  0.61)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0026 (7.7047)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.74it/s] 23%|##3       | 6/26 [00:00<00:00, 27.64it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.64it/s] 42%|####2     | 11/26 [00:00<00:00, 35.47it/s] 62%|######1   | 16/26 [00:00<00:00, 40.34it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.34it/s] 81%|########  | 21/26 [00:00<00:00, 41.58it/s]100%|##########| 26/26 [00:00<00:00, 43.54it/s]100%|##########| 26/26 [00:00<00:00, 35.46it/s]
Test: [   0/  26]	Loss 0.191 (0.191)	test_acc   0.93 (  0.93)	test_minacc   0.62 (  0.62)	test_majacc   0.97 (  0.97)	Loss_d 0.191 (0.191)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.226 (0.211)	test_acc   0.92 (  0.91)	test_minacc   0.66 (  0.62)	test_majacc   0.96 (  0.97)	Loss_d 0.226 (0.211)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.66 (  0.62)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.82 (  0.82)
Test: [  20/  26]	Loss 0.165 (0.202)	test_acc   0.95 (  0.92)	test_minacc   0.77 (  0.65)	test_majacc   0.98 (  0.97)	Loss_d 0.165 (0.202)	test_acc_d   0.95 (  0.92)	test_minacc_d   0.77 (  0.65)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.79 (  0.81)
Test: [  26/  26]	Loss 0.183 (0.198)	test_acc   0.92 (  0.92)	test_minacc   0.68 (  0.66)	test_majacc   0.97 (  0.97)	Loss_d 0.183 (0.198)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.68 (  0.66)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.82 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.11it/s]
Test: [  0/  1]	Loss 2.275 (2.275)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 2.275 (2.275)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 2.275 (2.275)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 2.275 (2.275)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.54 (  0.54)
Overall Timing[ 12/  1]	epoch_time 0.0413 (0.0429)	validation_time 0.0005 (0.0009)	train_time 0.0408 (0.0416)
record: (train_acc, test_acc) (0.8885000232458115, 0.39000001549720764)
last accs (train_acc, test_acc) (0.9206000156998634, 0.35600000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.01it/s] 15%|#5        | 4/26 [00:00<00:02, 10.60it/s] 31%|###       | 8/26 [00:00<00:01, 17.76it/s] 46%|####6     | 12/26 [00:00<00:00, 23.27it/s] 62%|######1   | 16/26 [00:00<00:00, 27.50it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.05it/s] 92%|#########2| 24/26 [00:01<00:00, 31.05it/s]100%|##########| 26/26 [00:01<00:00, 22.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.198 (0.194)	train_nll   0.20 (  0.19)	train_penalty   0.00 (  0.01)	weight_norm  24.70 ( 24.49)	train_acc   0.91 (  0.92)	train_minacc   0.76 (  0.68)	train_majacc   0.94 (  0.97)	train_corr   0.00 (  0.00)	l1 8.6954 (8.3000)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 23%|##3       | 6/26 [00:00<00:00, 30.26it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.26it/s] 42%|####2     | 11/26 [00:00<00:00, 37.53it/s] 62%|######1   | 16/26 [00:00<00:00, 41.91it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.91it/s] 81%|########  | 21/26 [00:00<00:00, 39.36it/s]100%|##########| 26/26 [00:00<00:00, 35.75it/s]
Test: [   0/  26]	Loss 0.182 (0.182)	test_acc   0.93 (  0.93)	test_minacc   0.71 (  0.71)	test_majacc   0.96 (  0.96)	Loss_d 0.182 (0.182)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.198 (0.192)	test_acc   0.91 (  0.92)	test_minacc   0.60 (  0.71)	test_majacc   0.97 (  0.96)	Loss_d 0.198 (0.192)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.60 (  0.71)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.79 (  0.77)
Test: [  20/  26]	Loss 0.139 (0.177)	test_acc   0.94 (  0.93)	test_minacc   0.86 (  0.76)	test_majacc   0.96 (  0.96)	Loss_d 0.139 (0.177)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.86 (  0.76)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.73 (  0.76)
Test: [  26/  26]	Loss 0.128 (0.170)	test_acc   0.95 (  0.93)	test_minacc   0.78 (  0.76)	test_majacc   0.99 (  0.96)	Loss_d 0.128 (0.170)	test_acc_d   0.95 (  0.93)	test_minacc_d   0.78 (  0.76)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.78 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.83it/s]
Test: [  0/  1]	Loss 2.608 (2.608)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 2.608 (2.608)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 2.608 (2.608)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 2.608 (2.608)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.41 (  0.41)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0411 (0.0428)	validation_time 0.0003 (0.0009)	train_time 0.0407 (0.0415)
record: (train_acc, test_acc) (0.933100014925003, 0.4140000343322754)
last accs (train_acc, test_acc) (0.933100014925003, 0.4140000343322754)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.36it/s] 19%|#9        | 5/26 [00:00<00:01, 20.03it/s] 35%|###4      | 9/26 [00:00<00:00, 26.37it/s] 50%|#####     | 13/26 [00:00<00:00, 29.22it/s] 65%|######5   | 17/26 [00:00<00:00, 30.97it/s] 81%|########  | 21/26 [00:00<00:00, 32.84it/s] 96%|#########6| 25/26 [00:00<00:00, 34.71it/s]100%|##########| 26/26 [00:00<00:00, 28.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.109 (0.177)	train_nll   0.11 (  0.18)	train_penalty   0.00 (  0.00)	weight_norm  25.18 ( 24.94)	train_acc   0.95 (  0.93)	train_minacc   0.85 (  0.72)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 9.6282 (8.5086)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.46it/s] 19%|#9        | 5/26 [00:00<00:01, 17.68it/s] 38%|###8      | 10/26 [00:00<00:00, 28.44it/s]                                                38%|###8      | 10/26 [00:00<00:00, 28.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.24it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.37it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.37it/s] 96%|#########6| 25/26 [00:00<00:00, 39.14it/s]100%|##########| 26/26 [00:00<00:00, 30.12it/s]
Test: [   0/  26]	Loss 0.197 (0.197)	test_acc   0.93 (  0.93)	test_minacc   0.84 (  0.84)	test_majacc   0.94 (  0.94)	Loss_d 0.197 (0.197)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.169 (0.170)	test_acc   0.92 (  0.93)	test_minacc   0.71 (  0.80)	test_majacc   0.96 (  0.96)	Loss_d 0.169 (0.170)	test_acc_d   0.92 (  0.93)	test_minacc_d   0.71 (  0.80)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.75 (  0.72)
Test: [  20/  26]	Loss 0.107 (0.159)	test_acc   0.95 (  0.94)	test_minacc   0.93 (  0.84)	test_majacc   0.95 (  0.95)	Loss_d 0.107 (0.159)	test_acc_d   0.95 (  0.94)	test_minacc_d   0.93 (  0.84)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.70 (  0.71)
Test: [  26/  26]	Loss 0.057 (0.148)	test_acc   0.99 (  0.94)	test_minacc   0.95 (  0.85)	test_majacc   1.00 (  0.96)	Loss_d 0.057 (0.148)	test_acc_d   0.99 (  0.94)	test_minacc_d   0.95 (  0.85)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.72 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.07it/s]
Test: [  0/  1]	Loss 2.930 (2.930)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 2.930 (2.930)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 2.930 (2.930)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 2.930 (2.930)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.33 (  0.33)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0388 (0.0425)	validation_time 0.0004 (0.0009)	train_time 0.0384 (0.0413)
record: (train_acc, test_acc) (0.9409000206589698, 0.4320000112056732)
last accs (train_acc, test_acc) (0.9409000206589698, 0.4320000112056732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 10.84it/s] 23%|##3       | 6/26 [00:00<00:00, 21.84it/s] 38%|###8      | 10/26 [00:00<00:00, 27.22it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.46it/s] 69%|######9   | 18/26 [00:00<00:00, 31.51it/s] 85%|########4 | 22/26 [00:00<00:00, 33.29it/s]100%|##########| 26/26 [00:00<00:00, 34.99it/s]100%|##########| 26/26 [00:00<00:00, 28.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.004 (0.073)	train_nll   0.37 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  25.62 ( 25.43)	train_acc   0.80 (  0.90)	train_minacc   0.90 (  0.70)	train_majacc   0.78 (  0.93)	train_corr   0.00 (  0.00)	l1 5.9890 (7.8582)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 23%|##3       | 6/26 [00:00<00:00, 25.86it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.86it/s] 46%|####6     | 12/26 [00:00<00:00, 35.94it/s] 65%|######5   | 17/26 [00:00<00:00, 37.30it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.30it/s] 85%|########4 | 22/26 [00:00<00:00, 40.71it/s]100%|##########| 26/26 [00:00<00:00, 33.66it/s]
Test: [   0/  26]	Loss 0.460 (0.460)	test_acc   0.75 (  0.75)	test_minacc   0.89 (  0.89)	test_majacc   0.73 (  0.73)	Loss_d 0.460 (0.460)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.477 (0.438)	test_acc   0.72 (  0.77)	test_minacc   0.84 (  0.91)	test_majacc   0.70 (  0.74)	Loss_d 0.477 (0.438)	test_acc_d   0.72 (  0.77)	test_minacc_d   0.84 (  0.91)	test_majacc_d   0.70 (  0.74)	test_corr_d   0.39 (  0.39)
Test: [  20/  26]	Loss 0.491 (0.452)	test_acc   0.74 (  0.76)	test_minacc   0.93 (  0.90)	test_majacc   0.71 (  0.74)	Loss_d 0.491 (0.452)	test_acc_d   0.74 (  0.76)	test_minacc_d   0.93 (  0.90)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.36 (  0.39)
Test: [  26/  26]	Loss 0.405 (0.455)	test_acc   0.79 (  0.76)	test_minacc   0.90 (  0.90)	test_majacc   0.77 (  0.74)	Loss_d 0.405 (0.455)	test_acc_d   0.79 (  0.76)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.77 (  0.74)	test_corr_d   0.42 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.80it/s]
Test: [  0/  1]	Loss 1.008 (1.008)	test_acc   0.65 (  0.65)	test_minacc   0.64 (  0.64)	test_majacc   0.68 (  0.68)	Loss_d 1.008 (1.008)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.19 ( -0.19)
Test: [  1/  1]	Loss 1.008 (1.008)	test_acc   0.65 (  0.65)	test_minacc   0.64 (  0.64)	test_majacc   0.68 (  0.68)	Loss_d 1.008 (1.008)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.19 ( -0.19)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0388 (0.0423)	validation_time 0.0003 (0.0008)	train_time 0.0384 (0.0411)
record: (train_acc, test_acc) (0.7642000277042389, 0.6450000405311584)
last accs (train_acc, test_acc) (0.7642000277042389, 0.6450000405311584)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 19%|#9        | 5/26 [00:00<00:00, 21.46it/s] 35%|###4      | 9/26 [00:00<00:00, 27.69it/s] 50%|#####     | 13/26 [00:00<00:00, 31.06it/s] 65%|######5   | 17/26 [00:00<00:00, 33.13it/s] 81%|########  | 21/26 [00:00<00:00, 34.21it/s] 96%|#########6| 25/26 [00:00<00:00, 35.15it/s]100%|##########| 26/26 [00:00<00:00, 29.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.002 (0.002)	train_nll   0.46 (  0.46)	train_penalty   0.00 (  0.00)	weight_norm  25.72 ( 25.69)	train_acc   0.77 (  0.76)	train_minacc   0.76 (  0.87)	train_majacc   0.77 (  0.74)	train_corr   0.00 (  0.00)	l1 4.9680 (5.3273)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.45it/s] 27%|##6       | 7/26 [00:00<00:00, 34.77it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.77it/s] 46%|####6     | 12/26 [00:00<00:00, 39.66it/s] 65%|######5   | 17/26 [00:00<00:00, 38.86it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.86it/s] 85%|########4 | 22/26 [00:00<00:00, 41.72it/s]100%|##########| 26/26 [00:00<00:00, 36.61it/s]
Test: [   0/  26]	Loss 0.418 (0.418)	test_acc   0.80 (  0.80)	test_minacc   0.87 (  0.87)	test_majacc   0.79 (  0.79)	Loss_d 0.418 (0.418)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.487 (0.448)	test_acc   0.71 (  0.76)	test_minacc   0.76 (  0.87)	test_majacc   0.70 (  0.74)	Loss_d 0.487 (0.448)	test_acc_d   0.71 (  0.76)	test_minacc_d   0.76 (  0.87)	test_majacc_d   0.70 (  0.74)	test_corr_d   0.45 (  0.46)
Test: [  20/  26]	Loss 0.478 (0.456)	test_acc   0.75 (  0.76)	test_minacc   0.82 (  0.86)	test_majacc   0.74 (  0.74)	Loss_d 0.478 (0.456)	test_acc_d   0.75 (  0.76)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.45 (  0.46)
Test: [  26/  26]	Loss 0.460 (0.460)	test_acc   0.76 (  0.75)	test_minacc   0.76 (  0.84)	test_majacc   0.76 (  0.74)	Loss_d 0.460 (0.460)	test_acc_d   0.76 (  0.75)	test_minacc_d   0.76 (  0.84)	test_majacc_d   0.76 (  0.74)	test_corr_d   0.50 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.82it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.65 (  0.65)	test_minacc   0.64 (  0.64)	test_majacc   0.71 (  0.71)	Loss_d 0.931 (0.931)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.71 (  0.71)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.65 (  0.65)	test_minacc   0.64 (  0.64)	test_majacc   0.71 (  0.71)	Loss_d 0.931 (0.931)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.71 (  0.71)	test_corr_d  -0.09 ( -0.09)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0412 (0.0422)	validation_time 0.0004 (0.0008)	train_time 0.0407 (0.0411)
record: (train_acc, test_acc) (0.7541000283360482, 0.6470000147819519)
last accs (train_acc, test_acc) (0.7541000283360482, 0.6470000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.48it/s] 19%|#9        | 5/26 [00:00<00:00, 23.83it/s] 35%|###4      | 9/26 [00:00<00:00, 29.12it/s] 50%|#####     | 13/26 [00:00<00:00, 32.06it/s] 65%|######5   | 17/26 [00:00<00:00, 33.79it/s] 81%|########  | 21/26 [00:00<00:00, 35.08it/s] 96%|#########6| 25/26 [00:00<00:00, 35.82it/s]100%|##########| 26/26 [00:00<00:00, 30.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.002 (0.002)	train_nll   0.56 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  25.74 ( 25.73)	train_acc   0.68 (  0.72)	train_minacc   0.76 (  0.85)	train_majacc   0.67 (  0.70)	train_corr   0.00 (  0.00)	l1 5.1325 (5.0520)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.43it/s] 23%|##3       | 6/26 [00:00<00:00, 24.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.77it/s] 42%|####2     | 11/26 [00:00<00:00, 33.06it/s] 62%|######1   | 16/26 [00:00<00:00, 35.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.59it/s] 81%|########  | 21/26 [00:00<00:00, 36.99it/s]100%|##########| 26/26 [00:00<00:00, 40.50it/s]100%|##########| 26/26 [00:00<00:00, 31.92it/s]
Test: [   0/  26]	Loss 0.513 (0.513)	test_acc   0.70 (  0.70)	test_minacc   0.89 (  0.89)	test_majacc   0.68 (  0.68)	Loss_d 0.513 (0.513)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.535 (0.514)	test_acc   0.67 (  0.70)	test_minacc   0.79 (  0.89)	test_majacc   0.65 (  0.67)	Loss_d 0.535 (0.514)	test_acc_d   0.67 (  0.70)	test_minacc_d   0.79 (  0.89)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.36 (  0.35)
Test: [  20/  26]	Loss 0.536 (0.526)	test_acc   0.72 (  0.70)	test_minacc   0.88 (  0.88)	test_majacc   0.69 (  0.66)	Loss_d 0.536 (0.526)	test_acc_d   0.72 (  0.70)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.69 (  0.66)	test_corr_d   0.35 (  0.35)
Test: [  26/  26]	Loss 0.554 (0.530)	test_acc   0.68 (  0.69)	test_minacc   0.73 (  0.87)	test_majacc   0.67 (  0.66)	Loss_d 0.554 (0.530)	test_acc_d   0.68 (  0.69)	test_minacc_d   0.73 (  0.87)	test_majacc_d   0.67 (  0.66)	test_corr_d   0.37 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.62it/s]
Test: [  0/  1]	Loss 0.905 (0.905)	test_acc   0.67 (  0.67)	test_minacc   0.68 (  0.68)	test_majacc   0.64 (  0.64)	Loss_d 0.905 (0.905)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 0.905 (0.905)	test_acc   0.67 (  0.67)	test_minacc   0.68 (  0.68)	test_majacc   0.64 (  0.64)	Loss_d 0.905 (0.905)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.17 ( -0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/96/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0404 (0.0421)	validation_time 0.0003 (0.0008)	train_time 0.0400 (0.0410)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.11it/s] 19%|#9        | 5/26 [00:00<00:01, 20.61it/s] 35%|###4      | 9/26 [00:00<00:00, 27.27it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.85it/s] 69%|######9   | 18/26 [00:00<00:00, 34.91it/s] 85%|########4 | 22/26 [00:00<00:00, 35.76it/s]100%|##########| 26/26 [00:00<00:00, 36.67it/s]100%|##########| 26/26 [00:00<00:00, 29.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.001)	train_nll   0.48 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  25.74 ( 25.74)	train_acc   0.76 (  0.70)	train_minacc   0.76 (  0.87)	train_majacc   0.76 (  0.67)	train_corr   0.00 (  0.00)	l1 4.9778 (5.0858)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.61it/s] 31%|###       | 8/26 [00:00<00:00, 38.37it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.37it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.14it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.14it/s] 92%|#########2| 24/26 [00:00<00:00, 45.89it/s]100%|##########| 26/26 [00:00<00:00, 39.70it/s]
Test: [   0/  26]	Loss 0.456 (0.456)	test_acc   0.74 (  0.74)	test_minacc   0.82 (  0.82)	test_majacc   0.73 (  0.73)	Loss_d 0.456 (0.456)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.467 (0.458)	test_acc   0.72 (  0.74)	test_minacc   0.79 (  0.85)	test_majacc   0.71 (  0.72)	Loss_d 0.467 (0.458)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.79 (  0.85)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.46 (  0.44)
Test: [  20/  26]	Loss 0.484 (0.468)	test_acc   0.74 (  0.74)	test_minacc   0.82 (  0.84)	test_majacc   0.72 (  0.72)	Loss_d 0.484 (0.468)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.44 (  0.44)
Test: [  26/  26]	Loss 0.480 (0.471)	test_acc   0.74 (  0.73)	test_minacc   0.76 (  0.83)	test_majacc   0.74 (  0.72)	Loss_d 0.480 (0.471)	test_acc_d   0.74 (  0.73)	test_minacc_d   0.76 (  0.83)	test_majacc_d   0.74 (  0.72)	test_corr_d   0.47 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.13it/s]
Test: [  0/  1]	Loss 0.971 (0.971)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.69 (  0.69)	Loss_d 0.971 (0.971)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.971 (0.971)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.69 (  0.69)	Loss_d 0.971 (0.971)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 18/  1]	epoch_time 0.0382 (0.0419)	validation_time 0.0005 (0.0008)	train_time 0.0377 (0.0409)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.7334000275731086, 0.6390000581741333)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.81it/s] 15%|#5        | 4/26 [00:00<00:01, 18.32it/s] 31%|###       | 8/26 [00:00<00:00, 25.95it/s] 46%|####6     | 12/26 [00:00<00:00, 29.66it/s] 62%|######1   | 16/26 [00:00<00:00, 31.98it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.72it/s] 92%|#########2| 24/26 [00:00<00:00, 34.55it/s]100%|##########| 26/26 [00:00<00:00, 28.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.001 (0.000)	train_nll   0.48 (  0.48)	train_penalty   0.00 (  0.00)	weight_norm  25.74 ( 25.74)	train_acc   0.74 (  0.73)	train_minacc   0.71 (  0.83)	train_majacc   0.75 (  0.71)	train_corr   0.00 (  0.00)	l1 4.8996 (5.0565)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.15it/s] 27%|##6       | 7/26 [00:00<00:00, 36.63it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.63it/s] 46%|####6     | 12/26 [00:00<00:00, 41.30it/s] 65%|######5   | 17/26 [00:00<00:00, 39.39it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.39it/s] 85%|########4 | 22/26 [00:00<00:00, 42.45it/s]100%|##########| 26/26 [00:00<00:00, 36.99it/s]
Test: [   0/  26]	Loss 0.463 (0.463)	test_acc   0.73 (  0.73)	test_minacc   0.82 (  0.82)	test_majacc   0.72 (  0.72)	Loss_d 0.463 (0.463)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.461 (0.454)	test_acc   0.72 (  0.75)	test_minacc   0.79 (  0.87)	test_majacc   0.70 (  0.72)	Loss_d 0.461 (0.454)	test_acc_d   0.72 (  0.75)	test_minacc_d   0.79 (  0.87)	test_majacc_d   0.70 (  0.72)	test_corr_d   0.48 (  0.46)
Test: [  20/  26]	Loss 0.484 (0.463)	test_acc   0.73 (  0.74)	test_minacc   0.84 (  0.86)	test_majacc   0.71 (  0.72)	Loss_d 0.484 (0.463)	test_acc_d   0.73 (  0.74)	test_minacc_d   0.84 (  0.86)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.44 (  0.45)
Test: [  26/  26]	Loss 0.481 (0.467)	test_acc   0.74 (  0.73)	test_minacc   0.71 (  0.85)	test_majacc   0.74 (  0.71)	Loss_d 0.481 (0.467)	test_acc_d   0.74 (  0.73)	test_minacc_d   0.71 (  0.85)	test_majacc_d   0.74 (  0.71)	test_corr_d   0.47 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.58it/s]
Test: [  0/  1]	Loss 0.957 (0.957)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.68 (  0.68)	Loss_d 0.957 (0.957)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.957 (0.957)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.68 (  0.68)	Loss_d 0.957 (0.957)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 19/  1]	epoch_time 0.0365 (0.0416)	validation_time 0.0005 (0.0007)	train_time 0.0360 (0.0406)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.7346000285744667, 0.6430000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 19%|#9        | 5/26 [00:00<00:01, 20.57it/s] 35%|###4      | 9/26 [00:00<00:00, 27.29it/s] 50%|#####     | 13/26 [00:00<00:00, 30.88it/s] 65%|######5   | 17/26 [00:00<00:00, 32.83it/s] 81%|########  | 21/26 [00:00<00:00, 34.19it/s] 96%|#########6| 25/26 [00:00<00:00, 34.98it/s]100%|##########| 26/26 [00:00<00:00, 28.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.49)	train_penalty   0.00 (  0.00)	weight_norm  25.75 ( 25.75)	train_acc   0.72 (  0.72)	train_minacc   0.76 (  0.85)	train_majacc   0.71 (  0.69)	train_corr   0.00 (  0.00)	l1 5.0707 (5.1742)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.36it/s] 27%|##6       | 7/26 [00:00<00:00, 29.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.82it/s] 46%|####6     | 12/26 [00:00<00:00, 36.62it/s] 65%|######5   | 17/26 [00:00<00:00, 40.16it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.16it/s] 85%|########4 | 22/26 [00:00<00:00, 39.03it/s]100%|##########| 26/26 [00:00<00:00, 35.45it/s]
Test: [   0/  26]	Loss 0.491 (0.491)	test_acc   0.71 (  0.71)	test_minacc   0.82 (  0.82)	test_majacc   0.70 (  0.70)	Loss_d 0.491 (0.491)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.463 (0.470)	test_acc   0.73 (  0.74)	test_minacc   0.83 (  0.88)	test_majacc   0.71 (  0.71)	Loss_d 0.463 (0.470)	test_acc_d   0.73 (  0.74)	test_minacc_d   0.83 (  0.88)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.48 (  0.44)
Test: [  20/  26]	Loss 0.500 (0.477)	test_acc   0.73 (  0.73)	test_minacc   0.86 (  0.87)	test_majacc   0.71 (  0.71)	Loss_d 0.500 (0.477)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.86 (  0.87)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.43 (  0.43)
Test: [  26/  26]	Loss 0.514 (0.482)	test_acc   0.72 (  0.73)	test_minacc   0.76 (  0.86)	test_majacc   0.71 (  0.70)	Loss_d 0.514 (0.482)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.76 (  0.86)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.44 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.78it/s]
Test: [  0/  1]	Loss 1.003 (1.003)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.66 (  0.66)	Loss_d 1.003 (1.003)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 1.003 (1.003)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.66 (  0.66)	Loss_d 1.003 (1.003)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 20/  1]	epoch_time 0.0379 (0.0415)	validation_time 0.0004 (0.0007)	train_time 0.0375 (0.0405)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.7270000291466713, 0.64000004529953)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.82it/s] 19%|#9        | 5/26 [00:00<00:00, 26.08it/s] 35%|###4      | 9/26 [00:00<00:00, 30.87it/s] 50%|#####     | 13/26 [00:00<00:00, 32.98it/s] 65%|######5   | 17/26 [00:00<00:00, 34.23it/s] 81%|########  | 21/26 [00:00<00:00, 35.07it/s] 96%|#########6| 25/26 [00:00<00:00, 35.53it/s]100%|##########| 26/26 [00:00<00:00, 30.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.001)	train_nll   0.49 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  25.75 ( 25.75)	train_acc   0.74 (  0.71)	train_minacc   0.71 (  0.86)	train_majacc   0.74 (  0.68)	train_corr   0.00 (  0.00)	l1 4.9391 (5.2813)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 39.80it/s] 35%|###4      | 9/26 [00:00<00:00, 45.42it/s]                                               35%|###4      | 9/26 [00:00<00:00, 45.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.76it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.76it/s] 92%|#########2| 24/26 [00:00<00:00, 46.21it/s]100%|##########| 26/26 [00:00<00:00, 39.97it/s]
Test: [   0/  26]	Loss 0.469 (0.469)	test_acc   0.74 (  0.74)	test_minacc   0.80 (  0.80)	test_majacc   0.73 (  0.73)	Loss_d 0.469 (0.469)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.440 (0.450)	test_acc   0.77 (  0.76)	test_minacc   0.76 (  0.84)	test_majacc   0.77 (  0.75)	Loss_d 0.440 (0.450)	test_acc_d   0.77 (  0.76)	test_minacc_d   0.76 (  0.84)	test_majacc_d   0.77 (  0.75)	test_corr_d   0.53 (  0.49)
Test: [  20/  26]	Loss 0.475 (0.451)	test_acc   0.75 (  0.76)	test_minacc   0.82 (  0.84)	test_majacc   0.74 (  0.75)	Loss_d 0.475 (0.451)	test_acc_d   0.75 (  0.76)	test_minacc_d   0.82 (  0.84)	test_majacc_d   0.74 (  0.75)	test_corr_d   0.49 (  0.50)
Test: [  26/  26]	Loss 0.490 (0.456)	test_acc   0.73 (  0.76)	test_minacc   0.71 (  0.83)	test_majacc   0.74 (  0.75)	Loss_d 0.490 (0.456)	test_acc_d   0.73 (  0.76)	test_minacc_d   0.71 (  0.83)	test_majacc_d   0.74 (  0.75)	test_corr_d   0.50 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.45it/s]
Test: [  0/  1]	Loss 1.049 (1.049)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.69 (  0.69)	Loss_d 1.049 (1.049)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 1.049 (1.049)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.69 (  0.69)	Loss_d 1.049 (1.049)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.02 (  0.02)
Overall Timing[ 21/  1]	epoch_time 0.0398 (0.0414)	validation_time 0.0003 (0.0007)	train_time 0.0394 (0.0404)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.7569000316858292, 0.6110000014305115)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.29it/s] 19%|#9        | 5/26 [00:00<00:01, 20.54it/s] 35%|###4      | 9/26 [00:00<00:00, 26.93it/s] 50%|#####     | 13/26 [00:00<00:00, 30.41it/s] 65%|######5   | 17/26 [00:00<00:00, 32.71it/s] 81%|########  | 21/26 [00:00<00:00, 34.36it/s] 96%|#########6| 25/26 [00:00<00:00, 35.72it/s]100%|##########| 26/26 [00:00<00:00, 29.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.000 (0.001)	train_nll   0.53 (  0.48)	train_penalty   0.00 (  0.00)	weight_norm  25.76 ( 25.76)	train_acc   0.70 (  0.74)	train_minacc   0.80 (  0.80)	train_majacc   0.68 (  0.72)	train_corr   0.00 (  0.00)	l1 5.0869 (5.2766)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.20it/s] 23%|##3       | 6/26 [00:00<00:00, 31.98it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.98it/s] 42%|####2     | 11/26 [00:00<00:00, 38.22it/s] 62%|######1   | 16/26 [00:00<00:00, 41.29it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.29it/s] 81%|########  | 21/26 [00:00<00:00, 38.95it/s]100%|##########| 26/26 [00:00<00:00, 41.74it/s]100%|##########| 26/26 [00:00<00:00, 35.56it/s]
Test: [   0/  26]	Loss 0.527 (0.527)	test_acc   0.67 (  0.67)	test_minacc   0.87 (  0.87)	test_majacc   0.64 (  0.64)	Loss_d 0.527 (0.527)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.477 (0.501)	test_acc   0.72 (  0.72)	test_minacc   0.81 (  0.89)	test_majacc   0.71 (  0.69)	Loss_d 0.477 (0.501)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.81 (  0.89)	test_majacc_d   0.71 (  0.69)	test_corr_d   0.50 (  0.45)
Test: [  20/  26]	Loss 0.516 (0.496)	test_acc   0.72 (  0.72)	test_minacc   0.86 (  0.89)	test_majacc   0.69 (  0.69)	Loss_d 0.516 (0.496)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.86 (  0.89)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.45 (  0.46)
Test: [  26/  26]	Loss 0.539 (0.501)	test_acc   0.69 (  0.72)	test_minacc   0.80 (  0.88)	test_majacc   0.67 (  0.69)	Loss_d 0.539 (0.501)	test_acc_d   0.69 (  0.72)	test_minacc_d   0.80 (  0.88)	test_majacc_d   0.67 (  0.69)	test_corr_d   0.45 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.93it/s]
Test: [  0/  1]	Loss 1.095 (1.095)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.65 (  0.65)	Loss_d 1.095 (1.095)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 1.095 (1.095)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.65 (  0.65)	Loss_d 1.095 (1.095)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.01 (  0.01)
Overall Timing[ 22/  1]	epoch_time 0.0383 (0.0413)	validation_time 0.0006 (0.0007)	train_time 0.0376 (0.0403)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.7176000299453735, 0.6410000324249268)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.12it/s] 15%|#5        | 4/26 [00:00<00:01, 17.70it/s] 31%|###       | 8/26 [00:00<00:00, 25.37it/s] 46%|####6     | 12/26 [00:00<00:00, 29.51it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.99it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.53it/s] 88%|########8 | 23/26 [00:00<00:00, 30.82it/s]100%|##########| 26/26 [00:00<00:00, 27.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 5.078787803649902
set z to 5.027999925613403
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 414 tensor(-0.0032, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 209 tensor(-0.0135, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 135 tensor(0.0219, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 128 tensor(0.0088, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.008 (0.031)	train_nll   0.37 (  0.53)	train_penalty   0.01 (  0.03)	weight_norm  26.48 ( 25.89)	train_acc   0.89 (  0.67)	train_minacc   0.39 (  0.70)	train_majacc   0.99 (  0.66)	train_corr   0.00 (  0.00)	l1 7.0873 (6.0776)	zero_count 0.0000 (30.2250)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.95it/s] 19%|#9        | 5/26 [00:00<00:00, 26.06it/s]                                               19%|#9        | 5/26 [00:00<00:00, 26.06it/s] 42%|####2     | 11/26 [00:00<00:00, 38.60it/s] 62%|######1   | 16/26 [00:00<00:00, 42.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.06it/s] 81%|########  | 21/26 [00:00<00:00, 42.40it/s]100%|##########| 26/26 [00:00<00:00, 44.43it/s]100%|##########| 26/26 [00:00<00:00, 36.59it/s]
Test: [   0/  26]	Loss 0.431 (0.431)	test_acc   0.91 (  0.91)	test_minacc   0.53 (  0.53)	test_majacc   0.95 (  0.95)	Loss_d 0.431 (0.431)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.457 (0.446)	test_acc   0.86 (  0.86)	test_minacc   0.36 (  0.39)	test_majacc   0.95 (  0.94)	Loss_d 0.457 (0.446)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.36 (  0.39)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.80 (  0.76)
Test: [  20/  26]	Loss 0.469 (0.452)	test_acc   0.85 (  0.86)	test_minacc   0.44 (  0.41)	test_majacc   0.92 (  0.94)	Loss_d 0.469 (0.452)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.44 (  0.41)	test_majacc_d   0.92 (  0.94)	test_corr_d   0.77 (  0.77)
Test: [  26/  26]	Loss 0.457 (0.453)	test_acc   0.86 (  0.85)	test_minacc   0.39 (  0.40)	test_majacc   0.95 (  0.94)	Loss_d 0.457 (0.453)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.39 (  0.40)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.75 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.78it/s]
Test: [  0/  1]	Loss 2.701 (2.701)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.89 (  0.89)	Loss_d 2.701 (2.701)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 2.701 (2.701)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.89 (  0.89)	Loss_d 2.701 (2.701)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.47 (  0.47)
Overall Timing[ 23/  1]	epoch_time 0.0396 (0.0412)	validation_time 0.0004 (0.0007)	train_time 0.0392 (0.0403)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.8547000227570534, 0.3370000123977661)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.41it/s] 23%|##3       | 6/26 [00:00<00:00, 24.43it/s] 38%|###8      | 10/26 [00:00<00:00, 28.08it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.10it/s] 69%|######9   | 18/26 [00:00<00:00, 31.13it/s] 85%|########4 | 22/26 [00:00<00:00, 31.91it/s]100%|##########| 26/26 [00:00<00:00, 33.59it/s]100%|##########| 26/26 [00:00<00:00, 28.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 125 tensor(0.0046, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 121 tensor(0.0082, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 119 tensor(0.0048, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 117 tensor(0.0022, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 118 tensor(0.0013, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 157 tensor(0.0008, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.000 (0.002)	train_nll   0.49 (  0.47)	train_penalty   0.00 (  0.00)	weight_norm  27.43 ( 27.13)	train_acc   0.50 (  0.80)	train_minacc   0.44 (  0.53)	train_majacc   0.51 (  0.85)	train_corr   0.00 (  0.00)	l1 5.1908 (5.4900)	zero_count 0.0000 (91.1820)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 27%|##6       | 7/26 [00:00<00:00, 32.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.13it/s] 46%|####6     | 12/26 [00:00<00:00, 38.73it/s] 65%|######5   | 17/26 [00:00<00:00, 37.66it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.66it/s] 85%|########4 | 22/26 [00:00<00:00, 40.32it/s]100%|##########| 26/26 [00:00<00:00, 35.39it/s]
Test: [   0/  26]	Loss 0.479 (0.479)	test_acc   0.54 (  0.54)	test_minacc   0.60 (  0.60)	test_majacc   0.53 (  0.53)	Loss_d 0.479 (0.479)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.472 (0.478)	test_acc   0.50 (  0.52)	test_minacc   0.45 (  0.48)	test_majacc   0.51 (  0.53)	Loss_d 0.472 (0.478)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.51 (  0.53)	test_corr_d   0.68 (  0.65)
Test: [  20/  26]	Loss 0.485 (0.482)	test_acc   0.54 (  0.52)	test_minacc   0.54 (  0.49)	test_majacc   0.53 (  0.52)	Loss_d 0.485 (0.482)	test_acc_d   0.54 (  0.52)	test_minacc_d   0.54 (  0.49)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.68 (  0.66)
Test: [  26/  26]	Loss 0.483 (0.482)	test_acc   0.54 (  0.52)	test_minacc   0.44 (  0.48)	test_majacc   0.56 (  0.53)	Loss_d 0.483 (0.482)	test_acc_d   0.54 (  0.52)	test_minacc_d   0.44 (  0.48)	test_majacc_d   0.56 (  0.53)	test_corr_d   0.65 (  0.66)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.16it/s]
Test: [  0/  1]	Loss 2.367 (2.367)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.53 (  0.53)	Loss_d 2.367 (2.367)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 2.367 (2.367)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.53 (  0.53)	Loss_d 2.367 (2.367)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.34 (  0.34)
Overall Timing[ 24/  1]	epoch_time 0.0458 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0453 (0.0405)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5202000154554844, 0.492000013589859)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 19%|#9        | 5/26 [00:00<00:00, 22.25it/s] 31%|###       | 8/26 [00:00<00:00, 24.79it/s] 42%|####2     | 11/26 [00:00<00:00, 25.83it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.05it/s] 69%|######9   | 18/26 [00:00<00:00, 29.25it/s] 81%|########  | 21/26 [00:00<00:00, 28.72it/s] 96%|#########6| 25/26 [00:00<00:00, 31.37it/s]100%|##########| 26/26 [00:01<00:00, 25.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 193 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 204 tensor(0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 195 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 194 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 261 tensor(-1.1237e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 371 tensor(-7.6258e-05, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.000)	train_nll   0.49 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  27.51 ( 27.49)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0304 (5.0745)	zero_count 0.0000 (72.6180)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.88it/s] 31%|###       | 8/26 [00:00<00:00, 40.26it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.26it/s] 50%|#####     | 13/26 [00:00<00:00, 39.16it/s] 69%|######9   | 18/26 [00:00<00:00, 42.11it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.11it/s] 88%|########8 | 23/26 [00:00<00:00, 43.05it/s]100%|##########| 26/26 [00:00<00:00, 38.16it/s]
Test: [   0/  26]	Loss 0.510 (0.510)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.510 (0.510)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.494 (0.498)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.494 (0.498)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.62)
Test: [  20/  26]	Loss 0.496 (0.500)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.496 (0.500)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.63)
Test: [  26/  26]	Loss 0.496 (0.500)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.496 (0.500)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.09it/s]
Test: [  0/  1]	Loss 2.239 (2.239)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.239 (2.239)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 2.239 (2.239)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.239 (2.239)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 25/  1]	epoch_time 0.0493 (0.0417)	validation_time 0.0004 (0.0007)	train_time 0.0489 (0.0408)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.61it/s] 19%|#9        | 5/26 [00:00<00:01, 20.13it/s] 35%|###4      | 9/26 [00:00<00:00, 26.03it/s] 50%|#####     | 13/26 [00:00<00:00, 28.78it/s] 65%|######5   | 17/26 [00:00<00:00, 30.59it/s] 81%|########  | 21/26 [00:00<00:00, 32.91it/s] 96%|#########6| 25/26 [00:00<00:00, 34.14it/s]100%|##########| 26/26 [00:00<00:00, 28.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 267 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 253 tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 254 tensor(7.9159e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0084 (5.0411)	zero_count 0.0000 (35.0610)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.14it/s] 31%|###       | 8/26 [00:00<00:00, 37.58it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.58it/s] 50%|#####     | 13/26 [00:00<00:00, 41.33it/s] 69%|######9   | 18/26 [00:00<00:00, 43.81it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.81it/s] 88%|########8 | 23/26 [00:00<00:00, 40.84it/s]100%|##########| 26/26 [00:00<00:00, 39.10it/s]
Test: [   0/  26]	Loss 0.518 (0.518)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.518 (0.518)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.502 (0.505)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.502 (0.505)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.63 (  0.61)
Test: [  20/  26]	Loss 0.502 (0.507)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.502 (0.507)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.64 (  0.62)
Test: [  26/  26]	Loss 0.505 (0.507)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.505 (0.507)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.98it/s]
Test: [  0/  1]	Loss 2.192 (2.192)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.192 (2.192)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 2.192 (2.192)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.192 (2.192)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 26/  1]	epoch_time 0.0444 (0.0418)	validation_time 0.0004 (0.0007)	train_time 0.0441 (0.0409)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.43it/s] 23%|##3       | 6/26 [00:00<00:00, 27.64it/s] 35%|###4      | 9/26 [00:00<00:00, 27.87it/s] 50%|#####     | 13/26 [00:00<00:00, 31.11it/s] 65%|######5   | 17/26 [00:00<00:00, 30.65it/s] 81%|########  | 21/26 [00:00<00:00, 32.41it/s] 96%|#########6| 25/26 [00:00<00:00, 33.32it/s]100%|##########| 26/26 [00:00<00:00, 29.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
rho, theta 273 tensor(2.0958e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
rho, theta 270 tensor(3.3190e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0148 (5.0211)	zero_count 0.0000 (18.6810)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.65it/s] 23%|##3       | 6/26 [00:00<00:00, 29.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.21it/s] 42%|####2     | 11/26 [00:00<00:00, 36.02it/s] 62%|######1   | 16/26 [00:00<00:00, 40.61it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.61it/s] 81%|########  | 21/26 [00:00<00:00, 38.31it/s]100%|##########| 26/26 [00:00<00:00, 41.64it/s]100%|##########| 26/26 [00:00<00:00, 34.67it/s]
Test: [   0/  26]	Loss 0.519 (0.519)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.519 (0.519)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.505 (0.509)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.505 (0.509)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.63 (  0.61)
Test: [  20/  26]	Loss 0.505 (0.510)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.505 (0.510)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.64 (  0.62)
Test: [  26/  26]	Loss 0.508 (0.510)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.508 (0.510)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.33it/s]
Test: [  0/  1]	Loss 2.205 (2.205)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.205 (2.205)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 2.205 (2.205)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.205 (2.205)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 27/  1]	epoch_time 0.0403 (0.0417)	validation_time 0.0007 (0.0007)	train_time 0.0396 (0.0409)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.87it/s] 19%|#9        | 5/26 [00:00<00:00, 21.70it/s] 35%|###4      | 9/26 [00:00<00:00, 27.74it/s] 50%|#####     | 13/26 [00:00<00:00, 30.34it/s] 65%|######5   | 17/26 [00:00<00:00, 31.90it/s] 81%|########  | 21/26 [00:00<00:00, 31.62it/s] 96%|#########6| 25/26 [00:00<00:00, 32.71it/s]100%|##########| 26/26 [00:00<00:00, 28.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
rho, theta 271 tensor(2.0784e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0153 (5.0201)	zero_count 0.0000 (9.3600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 27%|##6       | 7/26 [00:00<00:00, 32.52it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.52it/s] 46%|####6     | 12/26 [00:00<00:00, 36.43it/s] 65%|######5   | 17/26 [00:00<00:00, 40.02it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.02it/s] 85%|########4 | 22/26 [00:00<00:00, 41.89it/s]100%|##########| 26/26 [00:00<00:00, 33.85it/s]
Test: [   0/  26]	Loss 0.520 (0.520)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.520 (0.520)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.505 (0.509)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.505 (0.509)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.63 (  0.61)
Test: [  20/  26]	Loss 0.506 (0.510)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.506 (0.510)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.64 (  0.62)
Test: [  26/  26]	Loss 0.508 (0.510)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.508 (0.510)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.91it/s]
Test: [  0/  1]	Loss 2.213 (2.213)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.213 (2.213)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 2.213 (2.213)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.213 (2.213)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 28/  1]	epoch_time 0.0407 (0.0417)	validation_time 0.0004 (0.0007)	train_time 0.0403 (0.0408)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.08it/s] 19%|#9        | 5/26 [00:00<00:01, 16.46it/s] 35%|###4      | 9/26 [00:00<00:00, 23.07it/s] 50%|#####     | 13/26 [00:00<00:00, 27.10it/s] 65%|######5   | 17/26 [00:00<00:00, 28.85it/s] 81%|########  | 21/26 [00:00<00:00, 31.40it/s] 96%|#########6| 25/26 [00:00<00:00, 32.87it/s]100%|##########| 26/26 [00:01<00:00, 25.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 266 tensor(2.7253e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0164 (5.0186)	zero_count 0.0000 (9.5550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.69it/s] 27%|##6       | 7/26 [00:00<00:00, 30.45it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.45it/s] 46%|####6     | 12/26 [00:00<00:00, 37.63it/s] 65%|######5   | 17/26 [00:00<00:00, 41.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.10it/s] 85%|########4 | 22/26 [00:00<00:00, 38.76it/s]100%|##########| 26/26 [00:00<00:00, 36.13it/s]
Test: [   0/  26]	Loss 0.520 (0.520)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.520 (0.520)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.505 (0.509)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.505 (0.509)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.63 (  0.61)
Test: [  20/  26]	Loss 0.506 (0.511)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.506 (0.511)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.64 (  0.62)
Test: [  26/  26]	Loss 0.509 (0.510)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.510)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.93it/s]
Test: [  0/  1]	Loss 2.221 (2.221)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.221 (2.221)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 2.221 (2.221)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.221 (2.221)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 29/  1]	epoch_time 0.0405 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0402 (0.0408)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.96it/s] 19%|#9        | 5/26 [00:00<00:01, 18.27it/s] 35%|###4      | 9/26 [00:00<00:00, 24.81it/s] 50%|#####     | 13/26 [00:00<00:00, 28.62it/s] 65%|######5   | 17/26 [00:00<00:00, 29.14it/s] 81%|########  | 21/26 [00:00<00:00, 31.45it/s] 96%|#########6| 25/26 [00:00<00:00, 33.04it/s]100%|##########| 26/26 [00:00<00:00, 26.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 269 tensor(1.4494e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0179 (5.0175)	zero_count 0.0000 (9.4380)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.18it/s] 27%|##6       | 7/26 [00:00<00:00, 32.74it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.74it/s] 46%|####6     | 12/26 [00:00<00:00, 35.66it/s] 65%|######5   | 17/26 [00:00<00:00, 39.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.33it/s] 85%|########4 | 22/26 [00:00<00:00, 41.90it/s]100%|##########| 26/26 [00:00<00:00, 35.41it/s]
Test: [   0/  26]	Loss 0.520 (0.520)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.520 (0.520)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.506 (0.510)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.506 (0.510)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.506 (0.511)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.506 (0.511)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.64 (  0.62)
Test: [  26/  26]	Loss 0.509 (0.511)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.511)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.13it/s]
Test: [  0/  1]	Loss 2.230 (2.230)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.230 (2.230)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 2.230 (2.230)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.230 (2.230)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 30/  1]	epoch_time 0.0425 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0421 (0.0409)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.70it/s] 19%|#9        | 5/26 [00:00<00:00, 24.04it/s] 35%|###4      | 9/26 [00:00<00:00, 28.78it/s] 50%|#####     | 13/26 [00:00<00:00, 30.91it/s] 65%|######5   | 17/26 [00:00<00:00, 32.31it/s] 81%|########  | 21/26 [00:00<00:00, 31.20it/s] 96%|#########6| 25/26 [00:00<00:00, 32.11it/s]100%|##########| 26/26 [00:00<00:00, 28.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 266 tensor(1.7252e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0194 (5.0172)	zero_count 0.0000 (9.5550)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.88it/s] 23%|##3       | 6/26 [00:00<00:00, 24.80it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.80it/s] 42%|####2     | 11/26 [00:00<00:00, 32.95it/s] 62%|######1   | 16/26 [00:00<00:00, 36.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.55it/s] 81%|########  | 21/26 [00:00<00:00, 39.81it/s]100%|##########| 26/26 [00:00<00:00, 42.32it/s]100%|##########| 26/26 [00:00<00:00, 33.05it/s]
Test: [   0/  26]	Loss 0.520 (0.520)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.520 (0.520)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.506 (0.510)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.506 (0.510)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.507 (0.511)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.507 (0.511)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.509 (0.511)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.511)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.10it/s]
Test: [  0/  1]	Loss 2.238 (2.238)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.238 (2.238)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 2.238 (2.238)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.238 (2.238)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 31/  1]	epoch_time 0.0388 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0384 (0.0408)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 19%|#9        | 5/26 [00:00<00:00, 22.61it/s] 35%|###4      | 9/26 [00:00<00:00, 26.80it/s] 50%|#####     | 13/26 [00:00<00:00, 29.33it/s] 65%|######5   | 17/26 [00:00<00:00, 30.03it/s] 81%|########  | 21/26 [00:00<00:00, 30.34it/s] 96%|#########6| 25/26 [00:00<00:00, 32.56it/s]100%|##########| 26/26 [00:00<00:00, 27.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 262 tensor(1.9195e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0216 (5.0161)	zero_count 0.0000 (9.7110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.19it/s] 23%|##3       | 6/26 [00:00<00:00, 31.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.10it/s] 42%|####2     | 11/26 [00:00<00:00, 38.35it/s] 62%|######1   | 16/26 [00:00<00:00, 41.70it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.70it/s] 81%|########  | 21/26 [00:00<00:00, 42.22it/s]100%|##########| 26/26 [00:00<00:00, 44.42it/s]100%|##########| 26/26 [00:00<00:00, 36.37it/s]
Test: [   0/  26]	Loss 0.520 (0.520)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.520 (0.520)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.506 (0.510)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.506 (0.510)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.507 (0.511)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.507 (0.511)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.509 (0.511)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.511)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.26it/s]
Test: [  0/  1]	Loss 2.246 (2.246)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.246 (2.246)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 2.246 (2.246)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.246 (2.246)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 32/  1]	epoch_time 0.0389 (0.0415)	validation_time 0.0003 (0.0006)	train_time 0.0386 (0.0407)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.29it/s] 19%|#9        | 5/26 [00:00<00:00, 22.39it/s] 35%|###4      | 9/26 [00:00<00:00, 27.99it/s] 50%|#####     | 13/26 [00:00<00:00, 31.26it/s] 65%|######5   | 17/26 [00:00<00:00, 33.19it/s] 81%|########  | 21/26 [00:00<00:00, 32.00it/s] 96%|#########6| 25/26 [00:00<00:00, 31.92it/s]100%|##########| 26/26 [00:00<00:00, 28.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 295 tensor(4.9005e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 268 tensor(1.3710e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0218 (5.0153)	zero_count 0.0000 (17.9010)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.20it/s] 19%|#9        | 5/26 [00:00<00:00, 25.19it/s] 38%|###8      | 10/26 [00:00<00:00, 34.92it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.92it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.09it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.73it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.73it/s] 96%|#########6| 25/26 [00:00<00:00, 41.49it/s]100%|##########| 26/26 [00:00<00:00, 34.74it/s]
Test: [   0/  26]	Loss 0.520 (0.520)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.520 (0.520)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.507 (0.510)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.507 (0.510)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.507 (0.511)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.507 (0.511)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.509 (0.511)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.511)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.05it/s]
Test: [  0/  1]	Loss 2.253 (2.253)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.253 (2.253)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.253 (2.253)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.253 (2.253)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Overall Timing[ 33/  1]	epoch_time 0.0378 (0.0414)	validation_time 0.0004 (0.0006)	train_time 0.0374 (0.0406)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 19%|#9        | 5/26 [00:00<00:00, 21.84it/s] 35%|###4      | 9/26 [00:00<00:00, 28.11it/s] 50%|#####     | 13/26 [00:00<00:00, 31.60it/s] 65%|######5   | 17/26 [00:00<00:00, 33.40it/s] 81%|########  | 21/26 [00:00<00:00, 34.54it/s] 96%|#########6| 25/26 [00:00<00:00, 32.78it/s]100%|##########| 26/26 [00:00<00:00, 28.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 261 tensor(3.3095e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0219 (5.0136)	zero_count 0.0000 (9.7500)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 23%|##3       | 6/26 [00:00<00:00, 28.64it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.64it/s] 42%|####2     | 11/26 [00:00<00:00, 36.58it/s] 62%|######1   | 16/26 [00:00<00:00, 40.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.50it/s] 81%|########  | 21/26 [00:00<00:00, 39.45it/s]100%|##########| 26/26 [00:00<00:00, 42.48it/s]100%|##########| 26/26 [00:00<00:00, 34.85it/s]
Test: [   0/  26]	Loss 0.520 (0.520)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.520 (0.520)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.507 (0.511)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.507 (0.511)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.507 (0.512)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.507 (0.512)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.509 (0.512)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.512)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.85it/s]
Test: [  0/  1]	Loss 2.260 (2.260)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.260 (2.260)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.260 (2.260)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.260 (2.260)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Overall Timing[ 34/  1]	epoch_time 0.0388 (0.0413)	validation_time 0.0003 (0.0006)	train_time 0.0384 (0.0406)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.61it/s] 19%|#9        | 5/26 [00:00<00:00, 22.77it/s] 35%|###4      | 9/26 [00:00<00:00, 28.71it/s] 50%|#####     | 13/26 [00:00<00:00, 31.78it/s] 65%|######5   | 17/26 [00:00<00:00, 33.36it/s] 81%|########  | 21/26 [00:00<00:00, 32.72it/s] 96%|#########6| 25/26 [00:00<00:00, 33.55it/s]100%|##########| 26/26 [00:00<00:00, 28.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 262 tensor(1.9840e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0246 (5.0115)	zero_count 0.0000 (9.7110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.42it/s] 12%|#1        | 3/26 [00:00<00:01, 13.64it/s] 31%|###       | 8/26 [00:00<00:00, 28.64it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.64it/s] 50%|#####     | 13/26 [00:00<00:00, 35.44it/s] 69%|######9   | 18/26 [00:00<00:00, 40.06it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.06it/s] 88%|########8 | 23/26 [00:00<00:00, 42.48it/s]100%|##########| 26/26 [00:00<00:00, 33.58it/s]
Test: [   0/  26]	Loss 0.520 (0.520)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.520 (0.520)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.508 (0.511)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.508 (0.511)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.508 (0.512)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.508 (0.512)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.509 (0.512)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.512)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.27it/s]
Test: [  0/  1]	Loss 2.266 (2.266)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.266 (2.266)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.266 (2.266)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.266 (2.266)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Overall Timing[ 35/  1]	epoch_time 0.0409 (0.0413)	validation_time 0.0004 (0.0006)	train_time 0.0405 (0.0406)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.81it/s] 19%|#9        | 5/26 [00:00<00:01, 15.95it/s] 35%|###4      | 9/26 [00:00<00:00, 23.02it/s] 50%|#####     | 13/26 [00:00<00:00, 27.56it/s] 65%|######5   | 17/26 [00:00<00:00, 30.56it/s] 81%|########  | 21/26 [00:00<00:00, 28.80it/s] 96%|#########6| 25/26 [00:00<00:00, 29.37it/s]100%|##########| 26/26 [00:01<00:00, 24.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 336 tensor(2.0418e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0280 (5.0111)	zero_count 175.0000 (4.3750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.95it/s] 31%|###       | 8/26 [00:00<00:00, 32.04it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.04it/s] 50%|#####     | 13/26 [00:00<00:00, 38.30it/s] 69%|######9   | 18/26 [00:00<00:00, 41.83it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.83it/s] 88%|########8 | 23/26 [00:00<00:00, 43.36it/s]100%|##########| 26/26 [00:00<00:00, 36.36it/s]
Test: [   0/  26]	Loss 0.520 (0.520)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.520 (0.520)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.508 (0.511)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.508 (0.511)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.508 (0.513)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.508 (0.513)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.509 (0.512)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.512)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.22it/s]
Test: [  0/  1]	Loss 2.272 (2.272)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.272 (2.272)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.272 (2.272)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.272 (2.272)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Overall Timing[ 36/  1]	epoch_time 0.0387 (0.0412)	validation_time 0.0003 (0.0006)	train_time 0.0383 (0.0405)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.16it/s] 19%|#9        | 5/26 [00:00<00:00, 23.45it/s] 35%|###4      | 9/26 [00:00<00:00, 27.42it/s] 50%|#####     | 13/26 [00:00<00:00, 30.35it/s] 65%|######5   | 17/26 [00:00<00:00, 31.91it/s] 81%|########  | 21/26 [00:00<00:00, 32.88it/s] 96%|#########6| 25/26 [00:00<00:00, 32.34it/s]100%|##########| 26/26 [00:00<00:00, 28.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 260 tensor(2.9071e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0263 (5.0109)	zero_count 0.0000 (9.7890)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 23%|##3       | 6/26 [00:00<00:00, 28.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.97it/s] 42%|####2     | 11/26 [00:00<00:00, 36.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.28it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.46it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.46it/s] 96%|#########6| 25/26 [00:00<00:00, 39.63it/s]100%|##########| 26/26 [00:00<00:00, 34.47it/s]
Test: [   0/  26]	Loss 0.519 (0.519)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.519 (0.519)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.508 (0.511)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.508 (0.511)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.508 (0.513)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.508 (0.513)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.63)
Test: [  26/  26]	Loss 0.509 (0.512)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.512)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.41it/s]
Test: [  0/  1]	Loss 2.278 (2.278)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.278 (2.278)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.278 (2.278)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.278 (2.278)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Overall Timing[ 37/  1]	epoch_time 0.0389 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0385 (0.0404)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 19%|#9        | 5/26 [00:00<00:00, 23.91it/s] 35%|###4      | 9/26 [00:00<00:00, 28.91it/s] 50%|#####     | 13/26 [00:00<00:00, 29.81it/s] 65%|######5   | 17/26 [00:00<00:00, 31.17it/s] 81%|########  | 21/26 [00:00<00:00, 32.34it/s] 96%|#########6| 25/26 [00:00<00:00, 31.29it/s]100%|##########| 26/26 [00:00<00:00, 27.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 254 tensor(3.2988e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0274 (5.0090)	zero_count 0.0000 (10.0230)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.09it/s] 23%|##3       | 6/26 [00:00<00:00, 28.85it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.85it/s] 42%|####2     | 11/26 [00:00<00:00, 36.64it/s] 62%|######1   | 16/26 [00:00<00:00, 37.67it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.67it/s] 81%|########  | 21/26 [00:00<00:00, 40.44it/s]100%|##########| 26/26 [00:00<00:00, 43.01it/s]100%|##########| 26/26 [00:00<00:00, 35.94it/s]
Test: [   0/  26]	Loss 0.520 (0.520)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.520 (0.520)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.509 (0.512)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.509 (0.512)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.62)
Test: [  20/  26]	Loss 0.508 (0.513)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.508 (0.513)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.63)
Test: [  26/  26]	Loss 0.509 (0.513)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.513)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.94it/s]
Test: [  0/  1]	Loss 2.283 (2.283)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.283 (2.283)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.283 (2.283)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.283 (2.283)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Overall Timing[ 38/  1]	epoch_time 0.0401 (0.0412)	validation_time 0.0005 (0.0006)	train_time 0.0396 (0.0404)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 16.33it/s] 27%|##6       | 7/26 [00:00<00:00, 23.97it/s] 42%|####2     | 11/26 [00:00<00:00, 28.98it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.66it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.72it/s] 88%|########8 | 23/26 [00:00<00:00, 32.73it/s]100%|##########| 26/26 [00:00<00:00, 29.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 281 tensor(3.7031e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 262 tensor(8.8333e-06, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0355 (5.0082)	zero_count 0.0000 (8.9700)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.89it/s] 27%|##6       | 7/26 [00:00<00:00, 33.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.36it/s] 46%|####6     | 12/26 [00:00<00:00, 38.92it/s] 65%|######5   | 17/26 [00:00<00:00, 42.21it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.21it/s] 85%|########4 | 22/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 37.62it/s]
Test: [   0/  26]	Loss 0.519 (0.519)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.519 (0.519)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.509 (0.512)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.509 (0.512)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.62)
Test: [  20/  26]	Loss 0.508 (0.514)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.508 (0.514)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.63)
Test: [  26/  26]	Loss 0.509 (0.513)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.513)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.76it/s]
Test: [  0/  1]	Loss 2.289 (2.289)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.289 (2.289)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.289 (2.289)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.289 (2.289)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Overall Timing[ 39/  1]	epoch_time 0.0423 (0.0412)	validation_time 0.0003 (0.0006)	train_time 0.0419 (0.0405)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 19%|#9        | 5/26 [00:00<00:01, 18.33it/s] 35%|###4      | 9/26 [00:00<00:00, 24.73it/s] 50%|#####     | 13/26 [00:00<00:00, 28.19it/s] 65%|######5   | 17/26 [00:00<00:00, 30.11it/s] 81%|########  | 21/26 [00:00<00:00, 32.10it/s] 96%|#########6| 25/26 [00:00<00:00, 32.95it/s]100%|##########| 26/26 [00:00<00:00, 26.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 249 tensor(2.9400e-05, device='cuda:0')
final projection at end of training
dim_v 512
rho, theta 248 tensor(1.1107e-07, device='cuda:0')
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0384 (5.0086)	zero_count 0.0000 (9.7110)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 27%|##6       | 7/26 [00:00<00:00, 35.80it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.80it/s] 46%|####6     | 12/26 [00:00<00:00, 37.46it/s] 62%|######1   | 16/26 [00:00<00:00, 37.85it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.85it/s] 81%|########  | 21/26 [00:00<00:00, 39.90it/s]100%|##########| 26/26 [00:00<00:00, 36.06it/s]
Test: [   0/  26]	Loss 0.519 (0.519)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.519 (0.519)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.509 (0.512)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.509 (0.512)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.62)
Test: [  20/  26]	Loss 0.509 (0.514)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.509 (0.514)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.63)
Test: [  26/  26]	Loss 0.509 (0.513)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.513)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.12it/s]
Test: [  0/  1]	Loss 2.294 (2.294)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.294 (2.294)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.294 (2.294)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.294 (2.294)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Overall Timing[ 40/  1]	epoch_time 0.0417 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0412 (0.0405)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.27it/s] 19%|#9        | 5/26 [00:00<00:00, 24.82it/s] 35%|###4      | 9/26 [00:00<00:00, 27.86it/s] 50%|#####     | 13/26 [00:00<00:00, 30.58it/s] 65%|######5   | 17/26 [00:00<00:00, 32.16it/s] 81%|########  | 21/26 [00:00<00:00, 33.49it/s] 96%|#########6| 25/26 [00:00<00:00, 32.35it/s]100%|##########| 26/26 [00:00<00:00, 29.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 243 tensor(3.7666e-05, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 246 tensor(4.9904e-06, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0280 (5.0081)	zero_count 268.0000 (16.9570)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.08it/s] 31%|###       | 8/26 [00:00<00:00, 29.24it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.24it/s] 50%|#####     | 13/26 [00:00<00:00, 36.09it/s] 69%|######9   | 18/26 [00:00<00:00, 40.38it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.38it/s] 88%|########8 | 23/26 [00:00<00:00, 42.51it/s]100%|##########| 26/26 [00:00<00:00, 35.60it/s]
Test: [   0/  26]	Loss 0.519 (0.519)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.519 (0.519)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.509 (0.512)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.509 (0.512)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.65 (  0.62)
Test: [  20/  26]	Loss 0.509 (0.514)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.509 (0.514)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.63)
Test: [  26/  26]	Loss 0.509 (0.513)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.513)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.11it/s]
Test: [  0/  1]	Loss 2.300 (2.300)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.300 (2.300)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.300 (2.300)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.300 (2.300)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.37)
Overall Timing[ 41/  1]	epoch_time 0.0430 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0405)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.48it/s] 15%|#5        | 4/26 [00:00<00:01, 17.52it/s] 31%|###       | 8/26 [00:00<00:00, 24.37it/s] 46%|####6     | 12/26 [00:00<00:00, 28.47it/s] 62%|######1   | 16/26 [00:00<00:00, 30.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.82it/s] 92%|#########2| 24/26 [00:00<00:00, 32.25it/s]100%|##########| 26/26 [00:00<00:00, 27.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 299 tensor(2.5876e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 253 tensor(4.2974e-05, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0373 (5.0074)	zero_count 0.0000 (18.6030)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.84it/s] 31%|###       | 8/26 [00:00<00:00, 39.58it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.58it/s] 50%|#####     | 13/26 [00:00<00:00, 41.55it/s] 69%|######9   | 18/26 [00:00<00:00, 43.77it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.77it/s] 88%|########8 | 23/26 [00:00<00:00, 41.53it/s]100%|##########| 26/26 [00:00<00:00, 38.51it/s]
Test: [   0/  26]	Loss 0.518 (0.518)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.518 (0.518)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.509 (0.511)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.509 (0.511)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.65 (  0.62)
Test: [  20/  26]	Loss 0.509 (0.514)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.509 (0.514)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.509 (0.513)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.509 (0.513)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.08it/s]
Test: [  0/  1]	Loss 2.304 (2.304)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.304 (2.304)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 2.304 (2.304)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.304 (2.304)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 42/  1]	epoch_time 0.0414 (0.0412)	validation_time 0.0003 (0.0006)	train_time 0.0410 (0.0405)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 19%|#9        | 5/26 [00:00<00:01, 20.02it/s] 35%|###4      | 9/26 [00:00<00:00, 26.19it/s] 50%|#####     | 13/26 [00:00<00:00, 29.75it/s] 65%|######5   | 17/26 [00:00<00:00, 31.83it/s] 81%|########  | 21/26 [00:00<00:00, 33.32it/s] 96%|#########6| 25/26 [00:00<00:00, 29.56it/s]100%|##########| 26/26 [00:00<00:00, 26.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 238 tensor(4.4110e-05, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0345 (5.0072)	zero_count 0.0000 (10.0620)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.78it/s] 27%|##6       | 7/26 [00:00<00:00, 31.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.46it/s] 46%|####6     | 12/26 [00:00<00:00, 37.51it/s] 65%|######5   | 17/26 [00:00<00:00, 41.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.12it/s] 85%|########4 | 22/26 [00:00<00:00, 39.25it/s]100%|##########| 26/26 [00:00<00:00, 36.22it/s]
Test: [   0/  26]	Loss 0.517 (0.517)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.517 (0.517)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.509 (0.511)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.509 (0.511)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.65 (  0.62)
Test: [  20/  26]	Loss 0.510 (0.514)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.510 (0.514)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.508 (0.514)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.508 (0.514)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.74it/s]
Test: [  0/  1]	Loss 2.308 (2.308)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.308 (2.308)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 2.308 (2.308)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.308 (2.308)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 43/  1]	epoch_time 0.0387 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0383 (0.0405)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.29it/s] 15%|#5        | 4/26 [00:00<00:01, 13.92it/s] 31%|###       | 8/26 [00:00<00:00, 21.66it/s] 46%|####6     | 12/26 [00:00<00:00, 27.13it/s] 62%|######1   | 16/26 [00:00<00:00, 29.67it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.42it/s] 92%|#########2| 24/26 [00:00<00:00, 32.64it/s]100%|##########| 26/26 [00:01<00:00, 25.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 246 tensor(3.6711e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 244 tensor(1.7987e-05, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.51 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0275 (5.0057)	zero_count 0.0000 (20.9820)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.72it/s] 27%|##6       | 7/26 [00:00<00:00, 35.06it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.06it/s] 46%|####6     | 12/26 [00:00<00:00, 40.78it/s] 65%|######5   | 17/26 [00:00<00:00, 42.56it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.56it/s] 85%|########4 | 22/26 [00:00<00:00, 41.77it/s]100%|##########| 26/26 [00:00<00:00, 37.81it/s]
Test: [   0/  26]	Loss 0.517 (0.517)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.517 (0.517)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.509 (0.510)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.509 (0.510)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.65 (  0.62)
Test: [  20/  26]	Loss 0.511 (0.514)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.511 (0.514)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.64 (  0.62)
Test: [  26/  26]	Loss 0.508 (0.514)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.508 (0.514)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.59it/s]
Test: [  0/  1]	Loss 2.312 (2.312)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.312 (2.312)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 2.312 (2.312)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.312 (2.312)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 44/  1]	epoch_time 0.0421 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0418 (0.0405)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.31it/s] 19%|#9        | 5/26 [00:00<00:00, 22.84it/s] 38%|###8      | 10/26 [00:00<00:00, 30.99it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.53it/s] 69%|######9   | 18/26 [00:00<00:00, 33.64it/s] 85%|########4 | 22/26 [00:00<00:00, 34.57it/s]100%|##########| 26/26 [00:00<00:00, 33.05it/s]100%|##########| 26/26 [00:00<00:00, 29.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 249 tensor(4.3930e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 367 tensor(-7.9702e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.50 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0211 (5.0066)	zero_count 0.0000 (20.6310)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.60it/s] 23%|##3       | 6/26 [00:00<00:00, 31.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.00it/s] 42%|####2     | 11/26 [00:00<00:00, 37.59it/s] 62%|######1   | 16/26 [00:00<00:00, 41.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.63it/s] 81%|########  | 21/26 [00:00<00:00, 39.49it/s]100%|##########| 26/26 [00:00<00:00, 42.54it/s]100%|##########| 26/26 [00:00<00:00, 35.80it/s]
Test: [   0/  26]	Loss 0.516 (0.516)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.516 (0.516)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.508 (0.509)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.508 (0.509)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.65 (  0.62)
Test: [  20/  26]	Loss 0.511 (0.514)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.511 (0.514)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.64 (  0.62)
Test: [  26/  26]	Loss 0.507 (0.513)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.507 (0.513)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 53.91it/s]
Test: [  0/  1]	Loss 2.315 (2.315)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.315 (2.315)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 2.315 (2.315)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.315 (2.315)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.36 (  0.36)
Overall Timing[ 45/  1]	epoch_time 0.0388 (0.0411)	validation_time 0.0005 (0.0006)	train_time 0.0383 (0.0405)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.18it/s] 19%|#9        | 5/26 [00:00<00:01, 20.64it/s] 35%|###4      | 9/26 [00:00<00:00, 27.23it/s] 50%|#####     | 13/26 [00:00<00:00, 30.84it/s] 65%|######5   | 17/26 [00:00<00:00, 32.97it/s] 81%|########  | 21/26 [00:00<00:00, 34.36it/s] 96%|#########6| 25/26 [00:00<00:00, 35.22it/s]100%|##########| 26/26 [00:00<00:00, 29.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 243 tensor(5.8854e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.50 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0121 (5.0121)	zero_count 0.0000 (16.0680)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 19%|#9        | 5/26 [00:00<00:00, 24.71it/s] 38%|###8      | 10/26 [00:00<00:00, 34.95it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.80it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.80it/s] 96%|#########6| 25/26 [00:00<00:00, 41.46it/s]100%|##########| 26/26 [00:00<00:00, 34.82it/s]
Test: [   0/  26]	Loss 0.512 (0.512)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.512 (0.512)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.504 (0.505)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.504 (0.505)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.65 (  0.62)
Test: [  20/  26]	Loss 0.511 (0.511)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.511 (0.511)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.64 (  0.62)
Test: [  26/  26]	Loss 0.503 (0.511)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.503 (0.511)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.92it/s]
Test: [  0/  1]	Loss 2.313 (2.313)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.313 (2.313)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 2.313 (2.313)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.313 (2.313)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.35 (  0.35)
Overall Timing[ 46/  1]	epoch_time 0.0371 (0.0411)	validation_time 0.0003 (0.0006)	train_time 0.0367 (0.0404)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 15%|#5        | 4/26 [00:00<00:01, 17.15it/s] 31%|###       | 8/26 [00:00<00:00, 24.21it/s] 46%|####6     | 12/26 [00:00<00:00, 28.53it/s] 62%|######1   | 16/26 [00:00<00:00, 31.28it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.98it/s] 92%|#########2| 24/26 [00:00<00:00, 34.41it/s]100%|##########| 26/26 [00:00<00:00, 27.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 228 tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.50 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.50)	train_minacc   0.44 (  0.50)	train_majacc   0.51 (  0.50)	train_corr   0.00 (  0.00)	l1 5.0008 (5.0093)	zero_count 0.0000 (11.0370)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.52it/s] 23%|##3       | 6/26 [00:00<00:00, 30.72it/s] 38%|###8      | 10/26 [00:00<00:00, 34.74it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.74it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.43it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.09it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.09it/s] 96%|#########6| 25/26 [00:00<00:00, 41.15it/s]100%|##########| 26/26 [00:00<00:00, 35.31it/s]
Test: [   0/  26]	Loss 0.510 (0.510)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.510 (0.510)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.499 (0.501)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.499 (0.501)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.65 (  0.62)
Test: [  20/  26]	Loss 0.511 (0.508)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.511 (0.508)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.63 (  0.62)
Test: [  26/  26]	Loss 0.499 (0.508)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.499 (0.508)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.96it/s]
Test: [  0/  1]	Loss 2.300 (2.300)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.300 (2.300)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 2.300 (2.300)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.300 (2.300)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.34)
Overall Timing[ 47/  1]	epoch_time 0.0398 (0.0410)	validation_time 0.0006 (0.0006)	train_time 0.0392 (0.0404)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.62it/s] 23%|##3       | 6/26 [00:00<00:00, 26.67it/s] 35%|###4      | 9/26 [00:00<00:00, 26.86it/s] 50%|#####     | 13/26 [00:00<00:00, 29.90it/s] 65%|######5   | 17/26 [00:00<00:00, 32.31it/s] 81%|########  | 21/26 [00:00<00:00, 33.45it/s] 96%|#########6| 25/26 [00:00<00:00, 34.37it/s]100%|##########| 26/26 [00:00<00:00, 29.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 224 tensor(9.3865e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 370 tensor(-1.7968e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.49 (  0.50)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.50 (  0.54)	train_minacc   0.44 (  0.55)	train_majacc   0.51 (  0.54)	train_corr   0.00 (  0.00)	l1 4.9957 (5.0142)	zero_count 0.0000 (16.6920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.83it/s] 31%|###       | 8/26 [00:00<00:00, 40.05it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.05it/s] 50%|#####     | 13/26 [00:00<00:00, 38.79it/s] 69%|######9   | 18/26 [00:00<00:00, 40.95it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.95it/s] 88%|########8 | 23/26 [00:00<00:00, 42.47it/s]100%|##########| 26/26 [00:00<00:00, 38.13it/s]
Test: [   0/  26]	Loss 0.507 (0.507)	test_acc   0.50 (  0.50)	test_minacc   0.64 (  0.64)	test_majacc   0.48 (  0.48)	Loss_d 0.507 (0.507)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.490 (0.494)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.490 (0.494)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.64 (  0.61)
Test: [  20/  26]	Loss 0.508 (0.502)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.508 (0.502)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.63 (  0.62)
Test: [  26/  26]	Loss 0.492 (0.502)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.492 (0.502)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.62 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.46it/s]
Test: [  0/  1]	Loss 2.270 (2.270)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.270 (2.270)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 2.270 (2.270)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.270 (2.270)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.32 (  0.32)
Overall Timing[ 48/  1]	epoch_time 0.0408 (0.0410)	validation_time 0.0005 (0.0006)	train_time 0.0403 (0.0404)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5000000116229057, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.31it/s] 19%|#9        | 5/26 [00:00<00:01, 18.43it/s] 31%|###       | 8/26 [00:00<00:00, 22.16it/s] 46%|####6     | 12/26 [00:00<00:00, 25.48it/s] 62%|######1   | 16/26 [00:00<00:00, 28.71it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.03it/s] 92%|#########2| 24/26 [00:00<00:00, 29.63it/s]100%|##########| 26/26 [00:01<00:00, 25.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 229 tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 358 tensor(-0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 353 tensor(-3.3769e-05, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.49 (  0.51)	train_penalty   0.00 (  0.00)	weight_norm  27.52 ( 27.52)	train_acc   0.51 (  0.55)	train_minacc   0.59 (  0.55)	train_majacc   0.50 (  0.55)	train_corr   0.00 (  0.00)	l1 5.0329 (5.0169)	zero_count 0.0000 (16.9650)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.19it/s] 31%|###       | 8/26 [00:00<00:00, 39.35it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.35it/s] 50%|#####     | 13/26 [00:00<00:00, 42.79it/s] 69%|######9   | 18/26 [00:00<00:00, 45.10it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.10it/s] 88%|########8 | 23/26 [00:00<00:00, 43.69it/s]100%|##########| 26/26 [00:00<00:00, 40.06it/s]
Test: [   0/  26]	Loss 0.512 (0.512)	test_acc   0.51 (  0.51)	test_minacc   0.64 (  0.64)	test_majacc   0.49 (  0.49)	Loss_d 0.512 (0.512)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.483 (0.490)	test_acc   0.49 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.49 (  0.51)	Loss_d 0.483 (0.490)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.63 (  0.61)
Test: [  20/  26]	Loss 0.509 (0.496)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.509 (0.496)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.63 (  0.61)
Test: [  26/  26]	Loss 0.489 (0.497)	test_acc   0.50 (  0.50)	test_minacc   0.44 (  0.51)	test_majacc   0.51 (  0.50)	Loss_d 0.489 (0.497)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.61 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.53it/s]
Test: [  0/  1]	Loss 2.246 (2.246)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.246 (2.246)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 2.246 (2.246)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 2.246 (2.246)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.31 (  0.31)
Overall Timing[ 49/  1]	epoch_time 0.0403 (0.0410)	validation_time 0.0003 (0.0005)	train_time 0.0400 (0.0404)
record: (train_acc, test_acc) (0.6932000342607498, 0.6720000505447388)
last accs (train_acc, test_acc) (0.5032000108063222, 0.5)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.173 MB of 0.173 MB uploadedwandb: \ 0.173 MB of 0.173 MB uploadedwandb: | 0.196 MB of 0.196 MB uploaded (0.003 MB deduped)wandb: / 0.199 MB of 0.500 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                           global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/diagnostics/epoch_time_val █▂▂▂▂▂▁▂▁▂▂▂▁▂▂▁▁▂▁▂▃▂▂▂▂▁▂▁▂▁▂▂▂▂▂▁▁▁▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/diagnostics/train_time_val █▂▃▂▂▃▁▃▂▂▂▂▂▂▂▂▂▂▂▂▄▃▂▂▃▂▂▁▂▂▂▂▂▃▂▂▂▁▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/Loss_avg ▄▅▅▄▄▄▄▅▄▅▆█▁▁▁▁▁▂▂█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/Loss_d_avg ▄▅▅▄▄▄▄▅▄▅▆█▁▁▁▁▁▂▂█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/Loss_d_val ▄▅▅▄▄▄▄▅▄▅▆█▁▁▁▁▁▂▂█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/Loss_val ▄▅▅▄▄▄▄▅▄▅▆█▁▁▁▁▁▂▂█▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_acc_avg ▁▁▁▃▃▄▅▄▄▄▄▅█████▇█▄▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_acc_d_avg ▁▁▁▃▃▄▅▄▄▄▄▅█████▇█▄▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_acc_d_val ▁▁▁▃▃▄▅▄▄▄▄▅█████▇█▄▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_acc_val ▁▁▁▃▃▄▅▄▄▄▄▅█████▇█▄▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_corr_d_avg ███▆▇▅▅▆▆▆▅▅▁▂▁▂▂▂▂▅▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_corr_d_val ███▆▇▅▅▆▆▆▅▅▁▂▁▂▂▂▂▅▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_majacc_avg █████▇▇█▇█▇▇▄▄▃▄▃▄▃▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_majacc_d_avg █████▇▇█▇█▇▇▄▄▃▄▃▄▃▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_majacc_d_val █████▇▇█▇█▇▇▄▄▃▄▃▄▃▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_majacc_val █████▇▇█▇█▇▇▄▄▃▄▃▄▃▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_minacc_avg ▁▁▁▃▃▄▄▄▄▄▄▅█████▇█▄▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_minacc_d_avg ▁▁▁▃▃▄▄▄▄▄▄▅█████▇█▄▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_minacc_d_val ▁▁▁▃▃▄▄▄▄▄▄▅█████▇█▄▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_minacc_val ▁▁▁▃▃▄▄▄▄▄▄▅█████▇█▄▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/Loss_avg █▇▆▆▆▅▅▅▄▄▄▄▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/Loss_val ███▇▇▆▅▅▆▅▄▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/l1_avg ▇▆▆▆▅▅▅▅▇▇▇█▇▂▁▁▁▂▂▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/l1_val ▆▆▆▅▄▅▅▅▅▆▇█▃▁▁▁▁▁▁▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇█████▅▅▄▅▄▅▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_acc_val ▇▆▆▇▇▇▇▇████▆▆▄▅▅▅▄█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_majacc_avg ▇██████▇█▇██▇▄▄▃▄▄▄▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_majacc_val ███▇█▇▇█▇██▇▅▅▃▅▄▄▄█▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_minacc_avg ▁▁▁▂▃▃▄▅▅▆▆▆▇█████▇▇▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_minacc_val ▁▁▁▃▂▃▄▄▅▅▆▇█▇▇▇▇▆▇▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_nll_avg █▅▅▅▄▄▃▃▂▂▂▁▂▆▇█▇█▇█▇████████████████▇▇█
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_nll_val ▆▅▅▅▄▃▃▃▃▂▁▁▄▆█▆▇▇▇▄▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_penalty_avg █▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_penalty_val █▆▆▄▅▃▂▃▂▂▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/weight_norm_avg ▁▄▄▄▄▄▄▄▅▅▅▆▆▇▇▇▇▇▇▇████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/weight_norm_val ▁▂▂▂▃▃▃▃▄▄▅▅▆▆▆▆▆▆▆▇████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▄█▄▃▂▂▂▂▃▂▁▂▂▂▃▃▂▃▃▂▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▆▁▁▁█▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                           global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/diagnostics/epoch_time_val 0.04035
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/diagnostics/train_time_val 0.04
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/diagnostics/validation_time_val 0.00033
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/Loss_avg 2.24583
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/Loss_d_avg 2.24583
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/Loss_d_val 2.24583
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/Loss_val 2.24583
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_acc_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_acc_d_avg 0.5
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_acc_d_val 0.5
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_acc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_corr_d_avg 0.30608
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_corr_d_val 0.30608
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_minacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_minacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_minacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/test/test_minacc_val 0.5
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/Loss_avg 0.00013
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/Loss_val 0.00041
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/l1_avg 5.01694
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/l1_val 5.03291
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_acc_avg 0.552
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_acc_val 0.512
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_majacc_avg 0.55218
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_majacc_val 0.49761
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_minacc_avg 0.54912
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_minacc_val 0.58537
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_nll_avg 0.50828
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_nll_val 0.48757
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_penalty_avg 8e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/train_penalty_val 0.00036
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/weight_norm_avg 27.52308
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/weight_norm_val 27.52484
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/zero_count_avg 16.965
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/96/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/g4zxfifl
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_154354-g4zxfifl/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_154640-ubpg65ij
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/ubpg65ij
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=400, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=True, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=5, fraction_z=0.99)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Linear(in_features=512, out_features=1, bias=True)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.bias
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1237
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6007, 3, 32, 32) (5993, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:40,  1.61s/it] 19%|#9        | 5/26 [00:01<00:05,  3.78it/s] 35%|###4      | 9/26 [00:01<00:02,  7.47it/s] 50%|#####     | 13/26 [00:01<00:01, 11.52it/s] 65%|######5   | 17/26 [00:02<00:00, 15.83it/s] 85%|########4 | 22/26 [00:02<00:00, 21.21it/s]100%|##########| 26/26 [00:02<00:00, 15.30it/s]100%|##########| 26/26 [00:02<00:00,  9.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [0][  26/  26]	Loss 0.448 (0.597)	train_nll   0.45 (  0.60)	train_penalty   0.08 (  0.42)	weight_norm  20.81 ( 18.10)	train_acc   0.84 (  0.80)	train_minacc   0.00 (  0.07)	train_majacc   1.00 (  0.93)	train_corr   0.00 (  0.00)	l1 6.8248 (7.3529)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.63it/s] 23%|##3       | 6/26 [00:00<00:00, 29.89it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.89it/s] 42%|####2     | 11/26 [00:00<00:00, 38.11it/s] 62%|######1   | 16/26 [00:00<00:00, 37.02it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.02it/s] 81%|########  | 21/26 [00:00<00:00, 38.14it/s]100%|##########| 26/26 [00:00<00:00, 35.75it/s]
Test: [   0/  26]	Loss 0.407 (0.407)	test_acc   0.86 (  0.86)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.407 (0.407)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.450 (0.433)	test_acc   0.83 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.450 (0.433)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  20/  26]	Loss 0.370 (0.425)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.370 (0.425)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.99)
Test: [  26/  26]	Loss 0.435 (0.423)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.435 (0.423)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]
Test: [  0/  1]	Loss 1.895 (1.895)	test_acc   0.10 (  0.10)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.895 (1.895)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.895 (1.895)	test_acc   0.10 (  0.10)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.895 (1.895)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0773 (0.0773)	validation_time 0.0070 (0.0070)	train_time 0.0671 (0.0671)
record: (train_acc, test_acc) (0.8465000258088112, 0.10400000214576721)
last accs (train_acc, test_acc) (0.8465000258088112, 0.10400000214576721)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.23it/s] 19%|#9        | 5/26 [00:00<00:01, 14.56it/s] 35%|###4      | 9/26 [00:00<00:00, 22.02it/s] 50%|#####     | 13/26 [00:00<00:00, 27.11it/s] 65%|######5   | 17/26 [00:00<00:00, 30.11it/s] 81%|########  | 21/26 [00:00<00:00, 32.16it/s] 96%|#########6| 25/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:01<00:00, 25.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [1][  26/  26]	Loss 0.424 (0.419)	train_nll   0.42 (  0.42)	train_penalty   0.07 (  0.06)	weight_norm  21.89 ( 21.56)	train_acc   0.83 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.9844 (6.8797)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.63it/s] 23%|##3       | 6/26 [00:00<00:00, 31.21it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.21it/s] 42%|####2     | 11/26 [00:00<00:00, 39.31it/s] 65%|######5   | 17/26 [00:00<00:00, 46.07it/s]                                                65%|######5   | 17/26 [00:00<00:00, 46.07it/s] 85%|########4 | 22/26 [00:00<00:00, 45.97it/s]100%|##########| 26/26 [00:00<00:00, 40.50it/s]
Test: [   0/  26]	Loss 0.397 (0.397)	test_acc   0.86 (  0.86)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.397 (0.397)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.446 (0.424)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  0.99)	Loss_d 0.446 (0.424)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.367 (0.415)	test_acc   0.87 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.367 (0.415)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.98)
Test: [  26/  26]	Loss 0.420 (0.413)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.420 (0.413)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.48it/s]
Test: [  0/  1]	Loss 1.882 (1.882)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.882 (1.882)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.882 (1.882)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.882 (1.882)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0422 (0.0597)	validation_time 0.0004 (0.0037)	train_time 0.0417 (0.0544)
record: (train_acc, test_acc) (0.8466000187397004, 0.11000000685453415)
last accs (train_acc, test_acc) (0.8466000187397004, 0.11000000685453415)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.68it/s] 19%|#9        | 5/26 [00:00<00:00, 21.48it/s] 35%|###4      | 9/26 [00:00<00:00, 27.82it/s] 50%|#####     | 13/26 [00:00<00:00, 31.19it/s] 65%|######5   | 17/26 [00:00<00:00, 33.31it/s] 81%|########  | 21/26 [00:00<00:00, 34.40it/s] 96%|#########6| 25/26 [00:00<00:00, 35.24it/s]100%|##########| 26/26 [00:00<00:00, 29.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [2][  26/  26]	Loss 0.404 (0.411)	train_nll   0.40 (  0.41)	train_penalty   0.06 (  0.06)	weight_norm  22.01 ( 21.97)	train_acc   0.84 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.9086 (6.8340)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 23%|##3       | 6/26 [00:00<00:00, 26.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.00it/s] 46%|####6     | 12/26 [00:00<00:00, 38.70it/s] 65%|######5   | 17/26 [00:00<00:00, 40.59it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.59it/s] 88%|########8 | 23/26 [00:00<00:00, 44.96it/s]100%|##########| 26/26 [00:00<00:00, 36.66it/s]
Test: [   0/  26]	Loss 0.385 (0.385)	test_acc   0.86 (  0.86)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.385 (0.385)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.440 (0.409)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.440 (0.409)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
Test: [  20/  26]	Loss 0.360 (0.400)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.360 (0.400)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
Test: [  26/  26]	Loss 0.399 (0.399)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.399 (0.399)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.64it/s]
Test: [  0/  1]	Loss 1.882 (1.882)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.882 (1.882)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.882 (1.882)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.882 (1.882)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Overall Timing[  2/  1]	epoch_time 0.0374 (0.0523)	validation_time 0.0003 (0.0026)	train_time 0.0370 (0.0486)
record: (train_acc, test_acc) (0.8466000187397004, 0.11000000685453415)
last accs (train_acc, test_acc) (0.8489000233411789, 0.10400000214576721)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.69it/s] 15%|#5        | 4/26 [00:00<00:01, 13.81it/s] 31%|###       | 8/26 [00:00<00:00, 22.89it/s] 46%|####6     | 12/26 [00:00<00:00, 28.33it/s] 62%|######1   | 16/26 [00:00<00:00, 31.96it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.35it/s] 92%|#########2| 24/26 [00:00<00:00, 35.87it/s]100%|##########| 26/26 [00:00<00:00, 27.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [3][  26/  26]	Loss 0.388 (0.398)	train_nll   0.39 (  0.40)	train_penalty   0.06 (  0.05)	weight_norm  22.04 ( 22.02)	train_acc   0.84 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.9464 (6.7944)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.58it/s] 27%|##6       | 7/26 [00:00<00:00, 33.72it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.72it/s] 46%|####6     | 12/26 [00:00<00:00, 40.01it/s] 65%|######5   | 17/26 [00:00<00:00, 42.04it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.04it/s] 85%|########4 | 22/26 [00:00<00:00, 43.62it/s]100%|##########| 26/26 [00:00<00:00, 36.88it/s]
Test: [   0/  26]	Loss 0.375 (0.375)	test_acc   0.86 (  0.86)	test_minacc   0.04 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.375 (0.375)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.04 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.412 (0.382)	test_acc   0.83 (  0.84)	test_minacc   0.03 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.412 (0.382)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.03 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.341 (0.374)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.341 (0.374)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.371 (0.372)	test_acc   0.84 (  0.85)	test_minacc   0.07 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.371 (0.372)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.07 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.72it/s]
Test: [  0/  1]	Loss 1.832 (1.832)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.832 (1.832)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.832 (1.832)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.832 (1.832)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0382 (0.0487)	validation_time 0.0004 (0.0020)	train_time 0.0377 (0.0459)
record: (train_acc, test_acc) (0.8485000224113465, 0.14000000059604645)
last accs (train_acc, test_acc) (0.8485000224113465, 0.14000000059604645)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.51it/s] 19%|#9        | 5/26 [00:00<00:00, 24.22it/s] 35%|###4      | 9/26 [00:00<00:00, 29.92it/s] 50%|#####     | 13/26 [00:00<00:00, 32.67it/s] 65%|######5   | 17/26 [00:00<00:00, 34.55it/s] 81%|########  | 21/26 [00:00<00:00, 35.83it/s]100%|##########| 26/26 [00:00<00:00, 37.70it/s]100%|##########| 26/26 [00:00<00:00, 31.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [4][  26/  26]	Loss 0.377 (0.382)	train_nll   0.38 (  0.38)	train_penalty   0.05 (  0.04)	weight_norm  22.10 ( 22.07)	train_acc   0.84 (  0.85)	train_minacc   0.05 (  0.05)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.1119 (6.7938)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.35it/s] 31%|###       | 8/26 [00:00<00:00, 39.69it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.69it/s] 50%|#####     | 13/26 [00:00<00:00, 42.72it/s] 69%|######9   | 18/26 [00:00<00:00, 41.24it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.24it/s] 88%|########8 | 23/26 [00:00<00:00, 42.79it/s]100%|##########| 26/26 [00:00<00:00, 38.94it/s]
Test: [   0/  26]	Loss 0.367 (0.367)	test_acc   0.86 (  0.86)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.367 (0.367)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.417 (0.377)	test_acc   0.84 (  0.85)	test_minacc   0.05 (  0.05)	test_majacc   1.00 (  0.99)	Loss_d 0.417 (0.377)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.05 (  0.05)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  20/  26]	Loss 0.326 (0.371)	test_acc   0.87 (  0.85)	test_minacc   0.06 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.326 (0.371)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.06 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.95)
Test: [  26/  26]	Loss 0.369 (0.368)	test_acc   0.84 (  0.85)	test_minacc   0.05 (  0.05)	test_majacc   1.00 (  0.99)	Loss_d 0.369 (0.368)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.05 (  0.05)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.26it/s]
Test: [  0/  1]	Loss 1.937 (1.937)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.937 (1.937)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.937 (1.937)	test_acc   0.14 (  0.14)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 1.937 (1.937)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
Overall Timing[  4/  1]	epoch_time 0.0385 (0.0467)	validation_time 0.0005 (0.0017)	train_time 0.0380 (0.0443)
record: (train_acc, test_acc) (0.8485000224113465, 0.14000000059604645)
last accs (train_acc, test_acc) (0.8491000247001648, 0.13900001347064972)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.23it/s] 19%|#9        | 5/26 [00:00<00:01, 20.95it/s] 35%|###4      | 9/26 [00:00<00:00, 27.38it/s] 50%|#####     | 13/26 [00:00<00:00, 30.86it/s] 65%|######5   | 17/26 [00:00<00:00, 32.55it/s] 81%|########  | 21/26 [00:00<00:00, 34.16it/s] 96%|#########6| 25/26 [00:00<00:00, 35.19it/s]100%|##########| 26/26 [00:00<00:00, 28.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [5][  26/  26]	Loss 0.335 (0.364)	train_nll   0.33 (  0.36)	train_penalty   0.03 (  0.04)	weight_norm  22.18 ( 22.14)	train_acc   0.86 (  0.85)	train_minacc   0.15 (  0.10)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 7.1725 (6.9005)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.92it/s] 23%|##3       | 6/26 [00:00<00:00, 22.76it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.76it/s] 42%|####2     | 11/26 [00:00<00:00, 31.58it/s] 62%|######1   | 16/26 [00:00<00:00, 37.07it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.07it/s] 81%|########  | 21/26 [00:00<00:00, 37.02it/s]100%|##########| 26/26 [00:00<00:00, 40.51it/s]100%|##########| 26/26 [00:00<00:00, 31.65it/s]
Test: [   0/  26]	Loss 0.338 (0.338)	test_acc   0.86 (  0.86)	test_minacc   0.13 (  0.13)	test_majacc   0.98 (  0.98)	Loss_d 0.338 (0.338)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.368 (0.342)	test_acc   0.83 (  0.85)	test_minacc   0.06 (  0.11)	test_majacc   0.98 (  0.99)	Loss_d 0.368 (0.342)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.06 (  0.11)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.295 (0.337)	test_acc   0.87 (  0.85)	test_minacc   0.10 (  0.11)	test_majacc   0.98 (  0.99)	Loss_d 0.295 (0.337)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.10 (  0.11)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.316 (0.334)	test_acc   0.86 (  0.86)	test_minacc   0.20 (  0.12)	test_majacc   0.99 (  0.99)	Loss_d 0.316 (0.334)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.20 (  0.12)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.91 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.60it/s]
Test: [  0/  1]	Loss 1.867 (1.867)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 1.867 (1.867)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
Test: [  1/  1]	Loss 1.867 (1.867)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 1.867 (1.867)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.84 (  0.84)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0402 (0.0456)	validation_time 0.0006 (0.0015)	train_time 0.0396 (0.0435)
record: (train_acc, test_acc) (0.8562000261545182, 0.19700001180171967)
last accs (train_acc, test_acc) (0.8562000261545182, 0.19700001180171967)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.16it/s] 19%|#9        | 5/26 [00:00<00:00, 23.63it/s] 35%|###4      | 9/26 [00:00<00:00, 29.08it/s] 50%|#####     | 13/26 [00:00<00:00, 31.99it/s] 69%|######9   | 18/26 [00:00<00:00, 35.54it/s] 88%|########8 | 23/26 [00:00<00:00, 37.17it/s]100%|##########| 26/26 [00:00<00:00, 31.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [6][  26/  26]	Loss 0.325 (0.343)	train_nll   0.33 (  0.34)	train_penalty   0.03 (  0.03)	weight_norm  22.27 ( 22.23)	train_acc   0.85 (  0.85)	train_minacc   0.15 (  0.18)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 7.1195 (6.9370)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.77it/s] 23%|##3       | 6/26 [00:00<00:00, 22.59it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.59it/s] 42%|####2     | 11/26 [00:00<00:00, 31.73it/s] 62%|######1   | 16/26 [00:00<00:00, 37.45it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.45it/s] 81%|########  | 21/26 [00:00<00:00, 37.12it/s]100%|##########| 26/26 [00:00<00:00, 31.94it/s]
Test: [   0/  26]	Loss 0.327 (0.327)	test_acc   0.87 (  0.87)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 0.327 (0.327)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.350 (0.320)	test_acc   0.84 (  0.85)	test_minacc   0.08 (  0.09)	test_majacc   0.98 (  0.99)	Loss_d 0.350 (0.320)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.08 (  0.09)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.93 (  0.94)
Test: [  20/  26]	Loss 0.278 (0.319)	test_acc   0.87 (  0.86)	test_minacc   0.10 (  0.10)	test_majacc   0.98 (  0.99)	Loss_d 0.278 (0.319)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.93)
Test: [  26/  26]	Loss 0.303 (0.317)	test_acc   0.85 (  0.86)	test_minacc   0.15 (  0.10)	test_majacc   0.99 (  0.99)	Loss_d 0.303 (0.317)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.15 (  0.10)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.91 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.40it/s]
Test: [  0/  1]	Loss 1.846 (1.846)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 1.846 (1.846)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.83 (  0.83)
Test: [  1/  1]	Loss 1.846 (1.846)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 1.846 (1.846)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.83 (  0.83)
Overall Timing[  6/  1]	epoch_time 0.0414 (0.0450)	validation_time 0.0004 (0.0014)	train_time 0.0410 (0.0432)
record: (train_acc, test_acc) (0.8562000261545182, 0.19700001180171967)
last accs (train_acc, test_acc) (0.8562000202536583, 0.19700001180171967)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.10it/s] 19%|#9        | 5/26 [00:00<00:00, 21.89it/s] 35%|###4      | 9/26 [00:00<00:00, 27.58it/s] 50%|#####     | 13/26 [00:00<00:00, 30.74it/s] 65%|######5   | 17/26 [00:00<00:00, 32.18it/s] 81%|########  | 21/26 [00:00<00:00, 33.65it/s] 96%|#########6| 25/26 [00:00<00:00, 34.81it/s]100%|##########| 26/26 [00:00<00:00, 29.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [7][  26/  26]	Loss 0.299 (0.324)	train_nll   0.30 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.37 ( 22.33)	train_acc   0.86 (  0.86)	train_minacc   0.34 (  0.31)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.1226 (6.9974)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.46it/s] 23%|##3       | 6/26 [00:00<00:00, 29.61it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.61it/s] 42%|####2     | 11/26 [00:00<00:00, 37.36it/s] 62%|######1   | 16/26 [00:00<00:00, 42.02it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.02it/s] 81%|########  | 21/26 [00:00<00:00, 39.36it/s]100%|##########| 26/26 [00:00<00:00, 42.26it/s]100%|##########| 26/26 [00:00<00:00, 35.65it/s]
Test: [   0/  26]	Loss 0.324 (0.324)	test_acc   0.87 (  0.87)	test_minacc   0.20 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 0.324 (0.324)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.20 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.324 (0.315)	test_acc   0.84 (  0.85)	test_minacc   0.12 (  0.14)	test_majacc   0.98 (  0.99)	Loss_d 0.324 (0.315)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.12 (  0.14)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.263 (0.313)	test_acc   0.87 (  0.86)	test_minacc   0.14 (  0.15)	test_majacc   0.98 (  0.99)	Loss_d 0.263 (0.313)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.14 (  0.15)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.288 (0.312)	test_acc   0.86 (  0.86)	test_minacc   0.29 (  0.16)	test_majacc   0.97 (  0.99)	Loss_d 0.288 (0.312)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.29 (  0.16)	test_majacc_d   0.97 (  0.99)	test_corr_d   0.91 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.83it/s]
Test: [  0/  1]	Loss 2.002 (2.002)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   1.00 (  1.00)	Loss_d 2.002 (2.002)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.82 (  0.82)
Test: [  1/  1]	Loss 2.002 (2.002)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   1.00 (  1.00)	Loss_d 2.002 (2.002)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.82 (  0.82)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0387 (0.0442)	validation_time 0.0008 (0.0013)	train_time 0.0378 (0.0425)
record: (train_acc, test_acc) (0.860500015437603, 0.23000000417232513)
last accs (train_acc, test_acc) (0.860500015437603, 0.23000000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.18it/s] 19%|#9        | 5/26 [00:00<00:00, 23.80it/s] 35%|###4      | 9/26 [00:00<00:00, 28.54it/s] 50%|#####     | 13/26 [00:00<00:00, 30.33it/s] 65%|######5   | 17/26 [00:00<00:00, 31.90it/s] 81%|########  | 21/26 [00:00<00:00, 33.47it/s] 96%|#########6| 25/26 [00:00<00:00, 34.48it/s]100%|##########| 26/26 [00:00<00:00, 29.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [8][  26/  26]	Loss 0.304 (0.311)	train_nll   0.30 (  0.31)	train_penalty   0.02 (  0.02)	weight_norm  22.51 ( 22.44)	train_acc   0.86 (  0.86)	train_minacc   0.37 (  0.34)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.1560 (6.9296)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.91it/s] 27%|##6       | 7/26 [00:00<00:00, 33.98it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.98it/s] 46%|####6     | 12/26 [00:00<00:00, 39.90it/s] 65%|######5   | 17/26 [00:00<00:00, 42.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.33it/s] 85%|########4 | 22/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 37.61it/s]
Test: [   0/  26]	Loss 0.305 (0.305)	test_acc   0.88 (  0.88)	test_minacc   0.29 (  0.29)	test_majacc   0.97 (  0.97)	Loss_d 0.305 (0.305)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.317 (0.304)	test_acc   0.85 (  0.86)	test_minacc   0.23 (  0.21)	test_majacc   0.98 (  0.98)	Loss_d 0.317 (0.304)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.23 (  0.21)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.268 (0.303)	test_acc   0.88 (  0.86)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.268 (0.303)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.295 (0.302)	test_acc   0.86 (  0.87)	test_minacc   0.27 (  0.23)	test_majacc   0.97 (  0.98)	Loss_d 0.295 (0.302)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.27 (  0.23)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.90 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.77it/s]
Test: [  0/  1]	Loss 1.933 (1.933)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   1.00 (  1.00)	Loss_d 1.933 (1.933)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.933 (1.933)	test_acc   0.24 (  0.24)	test_minacc   0.16 (  0.16)	test_majacc   1.00 (  1.00)	Loss_d 1.933 (1.933)	test_acc_d   0.24 (  0.24)	test_minacc_d   0.16 (  0.16)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0374 (0.0435)	validation_time 0.0004 (0.0012)	train_time 0.0370 (0.0419)
record: (train_acc, test_acc) (0.8650000280737877, 0.24000000953674316)
last accs (train_acc, test_acc) (0.8650000280737877, 0.24000000953674316)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.94it/s] 23%|##3       | 6/26 [00:00<00:00, 28.27it/s] 38%|###8      | 10/26 [00:00<00:00, 32.20it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.79it/s] 69%|######9   | 18/26 [00:00<00:00, 33.65it/s] 85%|########4 | 22/26 [00:00<00:00, 34.22it/s]100%|##########| 26/26 [00:00<00:00, 34.66it/s]100%|##########| 26/26 [00:00<00:00, 30.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [9][  26/  26]	Loss 0.279 (0.297)	train_nll   0.28 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.66 ( 22.59)	train_acc   0.87 (  0.87)	train_minacc   0.46 (  0.44)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 6.8241 (7.0657)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 23%|##3       | 6/26 [00:00<00:00, 30.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.29it/s] 42%|####2     | 11/26 [00:00<00:00, 37.93it/s] 62%|######1   | 16/26 [00:00<00:00, 41.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.68it/s] 81%|########  | 21/26 [00:00<00:00, 40.02it/s]100%|##########| 26/26 [00:00<00:00, 42.95it/s]100%|##########| 26/26 [00:00<00:00, 35.64it/s]
Test: [   0/  26]	Loss 0.279 (0.279)	test_acc   0.88 (  0.88)	test_minacc   0.29 (  0.29)	test_majacc   0.98 (  0.98)	Loss_d 0.279 (0.279)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.269 (0.281)	test_acc   0.87 (  0.87)	test_minacc   0.30 (  0.26)	test_majacc   0.98 (  0.98)	Loss_d 0.269 (0.281)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.30 (  0.26)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  20/  26]	Loss 0.242 (0.278)	test_acc   0.88 (  0.87)	test_minacc   0.24 (  0.26)	test_majacc   0.98 (  0.98)	Loss_d 0.242 (0.278)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.24 (  0.26)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.92)
Test: [  26/  26]	Loss 0.260 (0.276)	test_acc   0.87 (  0.87)	test_minacc   0.37 (  0.27)	test_majacc   0.97 (  0.98)	Loss_d 0.260 (0.276)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.37 (  0.27)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.88 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.27it/s]
Test: [  0/  1]	Loss 1.754 (1.754)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.99 (  0.99)	Loss_d 1.754 (1.754)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
Test: [  1/  1]	Loss 1.754 (1.754)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.99 (  0.99)	Loss_d 1.754 (1.754)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0418 (0.0433)	validation_time 0.0004 (0.0011)	train_time 0.0414 (0.0418)
record: (train_acc, test_acc) (0.8740000222325325, 0.30400002002716064)
last accs (train_acc, test_acc) (0.8740000222325325, 0.30400002002716064)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 19%|#9        | 5/26 [00:00<00:00, 23.93it/s] 35%|###4      | 9/26 [00:00<00:00, 29.75it/s] 50%|#####     | 13/26 [00:00<00:00, 32.33it/s] 65%|######5   | 17/26 [00:00<00:00, 33.55it/s] 81%|########  | 21/26 [00:00<00:00, 34.49it/s] 96%|#########6| 25/26 [00:00<00:00, 34.60it/s]100%|##########| 26/26 [00:00<00:00, 29.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [10][  26/  26]	Loss 0.301 (0.298)	train_nll   0.30 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.85 ( 22.75)	train_acc   0.87 (  0.87)	train_minacc   0.63 (  0.42)	train_majacc   0.92 (  0.95)	train_corr   0.00 (  0.00)	l1 6.7041 (7.0008)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.15it/s] 27%|##6       | 7/26 [00:00<00:00, 35.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.20it/s] 50%|#####     | 13/26 [00:00<00:00, 41.72it/s] 69%|######9   | 18/26 [00:00<00:00, 43.64it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.64it/s] 88%|########8 | 23/26 [00:00<00:00, 44.63it/s]100%|##########| 26/26 [00:00<00:00, 38.10it/s]
Test: [   0/  26]	Loss 0.279 (0.279)	test_acc   0.89 (  0.89)	test_minacc   0.42 (  0.42)	test_majacc   0.96 (  0.96)	Loss_d 0.279 (0.279)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.271 (0.276)	test_acc   0.86 (  0.88)	test_minacc   0.42 (  0.45)	test_majacc   0.94 (  0.96)	Loss_d 0.271 (0.276)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.42 (  0.45)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.86 (  0.87)
Test: [  20/  26]	Loss 0.249 (0.272)	test_acc   0.91 (  0.89)	test_minacc   0.50 (  0.46)	test_majacc   0.97 (  0.96)	Loss_d 0.249 (0.272)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.50 (  0.46)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.87)
Test: [  26/  26]	Loss 0.265 (0.271)	test_acc   0.90 (  0.89)	test_minacc   0.66 (  0.47)	test_majacc   0.95 (  0.96)	Loss_d 0.265 (0.271)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.66 (  0.47)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.83 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.44it/s]
Test: [  0/  1]	Loss 1.545 (1.545)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.98 (  0.98)	Loss_d 1.545 (1.545)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 1.545 (1.545)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.98 (  0.98)	Loss_d 1.545 (1.545)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.59 (  0.59)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0393 (0.0429)	validation_time 0.0004 (0.0011)	train_time 0.0388 (0.0416)
record: (train_acc, test_acc) (0.8856000240445137, 0.38700002431869507)
last accs (train_acc, test_acc) (0.8856000240445137, 0.38700002431869507)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.32it/s] 19%|#9        | 5/26 [00:00<00:00, 24.96it/s] 35%|###4      | 9/26 [00:00<00:00, 30.35it/s] 50%|#####     | 13/26 [00:00<00:00, 32.53it/s] 65%|######5   | 17/26 [00:00<00:00, 34.00it/s] 81%|########  | 21/26 [00:00<00:00, 35.11it/s] 96%|#########6| 25/26 [00:00<00:00, 35.58it/s]100%|##########| 26/26 [00:00<00:00, 30.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [11][  26/  26]	Loss 0.268 (0.278)	train_nll   0.27 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  23.05 ( 22.96)	train_acc   0.89 (  0.88)	train_minacc   0.56 (  0.46)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3801 (7.1092)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.89it/s] 23%|##3       | 6/26 [00:00<00:00, 23.30it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.30it/s] 42%|####2     | 11/26 [00:00<00:00, 32.45it/s] 62%|######1   | 16/26 [00:00<00:00, 37.92it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.92it/s] 81%|########  | 21/26 [00:00<00:00, 37.32it/s]100%|##########| 26/26 [00:00<00:00, 40.84it/s]100%|##########| 26/26 [00:00<00:00, 32.26it/s]
Test: [   0/  26]	Loss 0.270 (0.270)	test_acc   0.89 (  0.89)	test_minacc   0.49 (  0.49)	test_majacc   0.96 (  0.96)	Loss_d 0.270 (0.270)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.243 (0.266)	test_acc   0.88 (  0.89)	test_minacc   0.53 (  0.49)	test_majacc   0.95 (  0.96)	Loss_d 0.243 (0.266)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.85 (  0.86)
Test: [  20/  26]	Loss 0.239 (0.261)	test_acc   0.90 (  0.89)	test_minacc   0.44 (  0.50)	test_majacc   0.97 (  0.96)	Loss_d 0.239 (0.261)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.86)
Test: [  26/  26]	Loss 0.234 (0.258)	test_acc   0.92 (  0.89)	test_minacc   0.68 (  0.51)	test_majacc   0.96 (  0.96)	Loss_d 0.234 (0.258)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.68 (  0.51)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.63it/s]
Test: [  0/  1]	Loss 1.710 (1.710)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.92 (  0.92)	Loss_d 1.710 (1.710)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 1.710 (1.710)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.92 (  0.92)	Loss_d 1.710 (1.710)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.55 (  0.55)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[ 11/  1]	epoch_time 0.0405 (0.0427)	validation_time 0.0004 (0.0010)	train_time 0.0401 (0.0414)
record: (train_acc, test_acc) (0.8924000254273414, 0.4010000228881836)
last accs (train_acc, test_acc) (0.8924000254273414, 0.4010000228881836)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.69it/s] 19%|#9        | 5/26 [00:00<00:01, 15.61it/s] 35%|###4      | 9/26 [00:00<00:00, 22.63it/s] 50%|#####     | 13/26 [00:00<00:00, 27.10it/s] 65%|######5   | 17/26 [00:00<00:00, 30.18it/s] 81%|########  | 21/26 [00:00<00:00, 32.50it/s] 96%|#########6| 25/26 [00:00<00:00, 33.93it/s]100%|##########| 26/26 [00:01<00:00, 25.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [12][  26/  26]	Loss 0.259 (0.258)	train_nll   0.26 (  0.26)	train_penalty   0.01 (  0.01)	weight_norm  23.27 ( 23.16)	train_acc   0.88 (  0.89)	train_minacc   0.54 (  0.53)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 7.5839 (7.5472)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.31it/s] 23%|##3       | 6/26 [00:00<00:00, 32.31it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.31it/s] 42%|####2     | 11/26 [00:00<00:00, 38.54it/s] 62%|######1   | 16/26 [00:00<00:00, 41.66it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.66it/s] 85%|########4 | 22/26 [00:00<00:00, 45.60it/s]100%|##########| 26/26 [00:00<00:00, 39.02it/s]
Test: [   0/  26]	Loss 0.247 (0.247)	test_acc   0.89 (  0.89)	test_minacc   0.51 (  0.51)	test_majacc   0.95 (  0.95)	Loss_d 0.247 (0.247)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.229 (0.247)	test_acc   0.90 (  0.89)	test_minacc   0.55 (  0.51)	test_majacc   0.97 (  0.96)	Loss_d 0.229 (0.247)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  20/  26]	Loss 0.201 (0.237)	test_acc   0.93 (  0.90)	test_minacc   0.58 (  0.53)	test_majacc   0.98 (  0.97)	Loss_d 0.201 (0.237)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.58 (  0.53)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.88 (  0.86)
Test: [  26/  26]	Loss 0.220 (0.234)	test_acc   0.92 (  0.90)	test_minacc   0.68 (  0.54)	test_majacc   0.96 (  0.97)	Loss_d 0.220 (0.234)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.68 (  0.54)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.82 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.53it/s]
Test: [  0/  1]	Loss 1.820 (1.820)	test_acc   0.41 (  0.41)	test_minacc   0.34 (  0.34)	test_majacc   0.98 (  0.98)	Loss_d 1.820 (1.820)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 1.820 (1.820)	test_acc   0.41 (  0.41)	test_minacc   0.34 (  0.34)	test_majacc   0.98 (  0.98)	Loss_d 1.820 (1.820)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.54 (  0.54)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0364 (0.0423)	validation_time 0.0003 (0.0010)	train_time 0.0361 (0.0410)
record: (train_acc, test_acc) (0.9034000247716903, 0.40700000524520874)
last accs (train_acc, test_acc) (0.9034000247716903, 0.40700000524520874)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.84it/s] 23%|##3       | 6/26 [00:00<00:00, 26.64it/s] 38%|###8      | 10/26 [00:00<00:00, 29.97it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.37it/s] 69%|######9   | 18/26 [00:00<00:00, 32.55it/s] 85%|########4 | 22/26 [00:00<00:00, 33.89it/s]100%|##########| 26/26 [00:00<00:00, 34.48it/s]100%|##########| 26/26 [00:00<00:00, 29.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [13][  26/  26]	Loss 0.268 (0.250)	train_nll   0.27 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.54 ( 23.40)	train_acc   0.89 (  0.89)	train_minacc   0.51 (  0.57)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.7438 (7.8244)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 23%|##3       | 6/26 [00:00<00:00, 26.09it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.09it/s] 42%|####2     | 11/26 [00:00<00:00, 34.33it/s] 62%|######1   | 16/26 [00:00<00:00, 37.64it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.64it/s] 81%|########  | 21/26 [00:00<00:00, 38.17it/s]100%|##########| 26/26 [00:00<00:00, 41.45it/s]100%|##########| 26/26 [00:00<00:00, 33.21it/s]
Test: [   0/  26]	Loss 0.259 (0.259)	test_acc   0.89 (  0.89)	test_minacc   0.47 (  0.47)	test_majacc   0.96 (  0.96)	Loss_d 0.259 (0.259)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.294 (0.262)	test_acc   0.86 (  0.88)	test_minacc   0.45 (  0.49)	test_majacc   0.94 (  0.96)	Loss_d 0.294 (0.262)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.45 (  0.49)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.85 (  0.85)
Test: [  20/  26]	Loss 0.210 (0.249)	test_acc   0.91 (  0.89)	test_minacc   0.50 (  0.50)	test_majacc   0.97 (  0.96)	Loss_d 0.210 (0.249)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.86)
Test: [  26/  26]	Loss 0.208 (0.241)	test_acc   0.93 (  0.90)	test_minacc   0.80 (  0.53)	test_majacc   0.96 (  0.96)	Loss_d 0.208 (0.241)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.80 (  0.53)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.82 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.10it/s]
Test: [  0/  1]	Loss 1.905 (1.905)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 1.905 (1.905)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 1.905 (1.905)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 1.905 (1.905)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.57 (  0.57)
Overall Timing[ 13/  1]	epoch_time 0.0402 (0.0421)	validation_time 0.0003 (0.0009)	train_time 0.0398 (0.0410)
record: (train_acc, test_acc) (0.9034000247716903, 0.40700000524520874)
last accs (train_acc, test_acc) (0.8994000220298767, 0.37300002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.96it/s] 19%|#9        | 5/26 [00:00<00:00, 23.08it/s] 35%|###4      | 9/26 [00:00<00:00, 27.95it/s] 50%|#####     | 13/26 [00:00<00:00, 30.62it/s] 65%|######5   | 17/26 [00:00<00:00, 32.57it/s] 81%|########  | 21/26 [00:00<00:00, 33.64it/s] 96%|#########6| 25/26 [00:00<00:00, 34.74it/s]100%|##########| 26/26 [00:00<00:00, 29.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 400
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 400
penalty weights 0.0
final projection at end of training
dim_v 512
Epoch: [14][  26/  26]	Loss 0.208 (0.253)	train_nll   0.21 (  0.25)	train_penalty   0.00 (  0.01)	weight_norm  23.90 ( 23.73)	train_acc   0.90 (  0.89)	train_minacc   0.63 (  0.55)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 7.6666 (7.4588)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.32it/s] 27%|##6       | 7/26 [00:00<00:00, 32.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.09it/s] 46%|####6     | 12/26 [00:00<00:00, 38.73it/s] 65%|######5   | 17/26 [00:00<00:00, 41.62it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.62it/s] 85%|########4 | 22/26 [00:00<00:00, 39.78it/s]100%|##########| 26/26 [00:00<00:00, 36.26it/s]
Test: [   0/  26]	Loss 0.226 (0.226)	test_acc   0.91 (  0.91)	test_minacc   0.64 (  0.64)	test_majacc   0.95 (  0.95)	Loss_d 0.226 (0.226)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.244 (0.238)	test_acc   0.91 (  0.90)	test_minacc   0.58 (  0.59)	test_majacc   0.97 (  0.96)	Loss_d 0.244 (0.238)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.84 (  0.83)
Test: [  20/  26]	Loss 0.188 (0.222)	test_acc   0.93 (  0.91)	test_minacc   0.64 (  0.61)	test_majacc   0.97 (  0.96)	Loss_d 0.188 (0.222)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.64 (  0.61)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.87 (  0.83)
Test: [  26/  26]	Loss 0.165 (0.216)	test_acc   0.92 (  0.91)	test_minacc   0.76 (  0.63)	test_majacc   0.95 (  0.96)	Loss_d 0.165 (0.216)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.76 (  0.63)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.78 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.80it/s]
Test: [  0/  1]	Loss 2.029 (2.029)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 2.029 (2.029)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 2.029 (2.029)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 2.029 (2.029)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.52 (  0.52)
Overall Timing[ 14/  1]	epoch_time 0.0376 (0.0418)	validation_time 0.0006 (0.0009)	train_time 0.0371 (0.0407)
record: (train_acc, test_acc) (0.9034000247716903, 0.40700000524520874)
last accs (train_acc, test_acc) (0.9109000230431556, 0.40400001406669617)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 19%|#9        | 5/26 [00:00<00:00, 22.96it/s] 35%|###4      | 9/26 [00:00<00:00, 28.95it/s] 50%|#####     | 13/26 [00:00<00:00, 31.81it/s] 65%|######5   | 17/26 [00:00<00:00, 33.83it/s] 81%|########  | 21/26 [00:00<00:00, 34.89it/s] 96%|#########6| 25/26 [00:00<00:00, 35.83it/s]100%|##########| 26/26 [00:00<00:00, 29.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 400
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [15][  26/  26]	Loss 0.001 (0.092)	train_nll   0.47 (  0.28)	train_penalty   0.00 (  0.01)	weight_norm  24.17 ( 24.05)	train_acc   0.77 (  0.88)	train_minacc   0.90 (  0.69)	train_majacc   0.75 (  0.91)	train_corr   0.00 (  0.00)	l1 6.4760 (7.6211)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.78it/s] 27%|##6       | 7/26 [00:00<00:00, 37.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.92it/s] 46%|####6     | 12/26 [00:00<00:00, 43.14it/s] 65%|######5   | 17/26 [00:00<00:00, 44.40it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.40it/s] 88%|########8 | 23/26 [00:00<00:00, 49.17it/s]100%|##########| 26/26 [00:00<00:00, 40.74it/s]
Test: [   0/  26]	Loss 0.508 (0.508)	test_acc   0.77 (  0.77)	test_minacc   0.82 (  0.82)	test_majacc   0.76 (  0.76)	Loss_d 0.508 (0.508)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.446 (0.443)	test_acc   0.79 (  0.80)	test_minacc   0.95 (  0.92)	test_majacc   0.76 (  0.78)	Loss_d 0.446 (0.443)	test_acc_d   0.79 (  0.80)	test_minacc_d   0.95 (  0.92)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.38 (  0.42)
Test: [  20/  26]	Loss 0.453 (0.448)	test_acc   0.81 (  0.80)	test_minacc   0.88 (  0.91)	test_majacc   0.79 (  0.78)	Loss_d 0.453 (0.448)	test_acc_d   0.81 (  0.80)	test_minacc_d   0.88 (  0.91)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.50 (  0.43)
Test: [  26/  26]	Loss 0.480 (0.453)	test_acc   0.77 (  0.79)	test_minacc   0.90 (  0.90)	test_majacc   0.75 (  0.78)	Loss_d 0.480 (0.453)	test_acc_d   0.77 (  0.79)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.75 (  0.78)	test_corr_d   0.36 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.88it/s]
Test: [  0/  1]	Loss 0.745 (0.745)	test_acc   0.73 (  0.73)	test_minacc   0.72 (  0.72)	test_majacc   0.82 (  0.82)	Loss_d 0.745 (0.745)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.82 (  0.82)	test_corr_d  -0.27 ( -0.27)
Test: [  1/  1]	Loss 0.745 (0.745)	test_acc   0.73 (  0.73)	test_minacc   0.72 (  0.72)	test_majacc   0.82 (  0.82)	Loss_d 0.745 (0.745)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.82 (  0.82)	test_corr_d  -0.27 ( -0.27)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/97/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0391 (0.0416)	validation_time 0.0004 (0.0009)	train_time 0.0386 (0.0406)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.90it/s] 19%|#9        | 5/26 [00:00<00:01, 17.84it/s] 35%|###4      | 9/26 [00:00<00:00, 24.24it/s] 50%|#####     | 13/26 [00:00<00:00, 27.44it/s] 65%|######5   | 17/26 [00:00<00:00, 29.49it/s] 81%|########  | 21/26 [00:00<00:00, 31.39it/s] 96%|#########6| 25/26 [00:00<00:00, 32.80it/s]100%|##########| 26/26 [00:00<00:00, 26.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [16][  26/  26]	Loss 0.000 (0.002)	train_nll   0.46 (  0.47)	train_penalty   0.00 (  0.00)	weight_norm  24.22 ( 24.21)	train_acc   0.74 (  0.78)	train_minacc   0.90 (  0.90)	train_majacc   0.71 (  0.75)	train_corr   0.00 (  0.00)	l1 5.8767 (5.9358)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.53it/s] 27%|##6       | 7/26 [00:00<00:00, 27.84it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.84it/s] 46%|####6     | 12/26 [00:00<00:00, 34.41it/s] 65%|######5   | 17/26 [00:00<00:00, 37.09it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.09it/s] 88%|########8 | 23/26 [00:00<00:00, 42.55it/s]100%|##########| 26/26 [00:00<00:00, 33.42it/s]
Test: [   0/  26]	Loss 0.489 (0.489)	test_acc   0.74 (  0.74)	test_minacc   0.82 (  0.82)	test_majacc   0.72 (  0.72)	Loss_d 0.489 (0.489)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.484 (0.463)	test_acc   0.73 (  0.76)	test_minacc   0.94 (  0.92)	test_majacc   0.69 (  0.73)	Loss_d 0.484 (0.463)	test_acc_d   0.73 (  0.76)	test_minacc_d   0.94 (  0.92)	test_majacc_d   0.69 (  0.73)	test_corr_d   0.32 (  0.36)
Test: [  20/  26]	Loss 0.478 (0.467)	test_acc   0.74 (  0.76)	test_minacc   0.86 (  0.90)	test_majacc   0.72 (  0.74)	Loss_d 0.478 (0.467)	test_acc_d   0.74 (  0.76)	test_minacc_d   0.86 (  0.90)	test_majacc_d   0.72 (  0.74)	test_corr_d   0.44 (  0.38)
Test: [  26/  26]	Loss 0.476 (0.471)	test_acc   0.74 (  0.76)	test_minacc   0.90 (  0.90)	test_majacc   0.70 (  0.73)	Loss_d 0.476 (0.471)	test_acc_d   0.74 (  0.76)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.70 (  0.73)	test_corr_d   0.35 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.87it/s]
Test: [  0/  1]	Loss 0.728 (0.728)	test_acc   0.72 (  0.72)	test_minacc   0.71 (  0.71)	test_majacc   0.81 (  0.81)	Loss_d 0.728 (0.728)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.81 (  0.81)	test_corr_d  -0.24 ( -0.24)
Test: [  1/  1]	Loss 0.728 (0.728)	test_acc   0.72 (  0.72)	test_minacc   0.71 (  0.71)	test_majacc   0.81 (  0.81)	Loss_d 0.728 (0.728)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.81 (  0.81)	test_corr_d  -0.24 ( -0.24)
Overall Timing[ 16/  1]	epoch_time 0.0414 (0.0416)	validation_time 0.0004 (0.0008)	train_time 0.0409 (0.0406)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.7590000340938569, 0.7230000495910645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.29it/s] 19%|#9        | 5/26 [00:00<00:01, 16.84it/s] 35%|###4      | 9/26 [00:00<00:00, 23.80it/s] 50%|#####     | 13/26 [00:00<00:00, 28.03it/s] 65%|######5   | 17/26 [00:00<00:00, 30.74it/s] 81%|########  | 21/26 [00:00<00:00, 32.68it/s] 96%|#########6| 25/26 [00:00<00:00, 34.19it/s]100%|##########| 26/26 [00:00<00:00, 26.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [17][  26/  26]	Loss 0.001 (0.001)	train_nll   0.42 (  0.44)	train_penalty   0.00 (  0.00)	weight_norm  24.24 ( 24.23)	train_acc   0.79 (  0.77)	train_minacc   0.88 (  0.88)	train_majacc   0.78 (  0.75)	train_corr   0.00 (  0.00)	l1 5.8933 (5.9485)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.62it/s] 27%|##6       | 7/26 [00:00<00:00, 30.86it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.86it/s] 46%|####6     | 12/26 [00:00<00:00, 37.64it/s] 65%|######5   | 17/26 [00:00<00:00, 41.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.37it/s] 85%|########4 | 22/26 [00:00<00:00, 40.20it/s]100%|##########| 26/26 [00:00<00:00, 36.36it/s]
Test: [   0/  26]	Loss 0.416 (0.416)	test_acc   0.80 (  0.80)	test_minacc   0.78 (  0.78)	test_majacc   0.81 (  0.81)	Loss_d 0.416 (0.416)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.405 (0.403)	test_acc   0.78 (  0.79)	test_minacc   0.92 (  0.89)	test_majacc   0.75 (  0.77)	Loss_d 0.405 (0.403)	test_acc_d   0.78 (  0.79)	test_minacc_d   0.92 (  0.89)	test_majacc_d   0.75 (  0.77)	test_corr_d   0.47 (  0.49)
Test: [  20/  26]	Loss 0.419 (0.407)	test_acc   0.79 (  0.79)	test_minacc   0.84 (  0.87)	test_majacc   0.79 (  0.77)	Loss_d 0.419 (0.407)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.84 (  0.87)	test_majacc_d   0.79 (  0.77)	test_corr_d   0.55 (  0.50)
Test: [  26/  26]	Loss 0.418 (0.411)	test_acc   0.78 (  0.78)	test_minacc   0.88 (  0.87)	test_majacc   0.77 (  0.77)	Loss_d 0.418 (0.411)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.88 (  0.87)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.48 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.03it/s]
Test: [  0/  1]	Loss 0.885 (0.885)	test_acc   0.69 (  0.69)	test_minacc   0.67 (  0.67)	test_majacc   0.85 (  0.85)	Loss_d 0.885 (0.885)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.85 (  0.85)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.885 (0.885)	test_acc   0.69 (  0.69)	test_minacc   0.67 (  0.67)	test_majacc   0.85 (  0.85)	Loss_d 0.885 (0.885)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.85 (  0.85)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 17/  1]	epoch_time 0.0387 (0.0415)	validation_time 0.0004 (0.0008)	train_time 0.0382 (0.0405)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.7840000274777412, 0.6880000233650208)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.06it/s] 23%|##3       | 6/26 [00:00<00:00, 27.23it/s] 38%|###8      | 10/26 [00:00<00:00, 30.71it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.39it/s] 69%|######9   | 18/26 [00:00<00:00, 33.48it/s] 85%|########4 | 22/26 [00:00<00:00, 34.58it/s]100%|##########| 26/26 [00:00<00:00, 35.62it/s]100%|##########| 26/26 [00:00<00:00, 30.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [18][  26/  26]	Loss 0.000 (0.000)	train_nll   0.43 (  0.43)	train_penalty   0.00 (  0.00)	weight_norm  24.24 ( 24.24)	train_acc   0.75 (  0.77)	train_minacc   0.83 (  0.87)	train_majacc   0.73 (  0.75)	train_corr   0.00 (  0.00)	l1 5.9900 (6.0072)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.83it/s] 23%|##3       | 6/26 [00:00<00:01, 19.92it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.92it/s] 42%|####2     | 11/26 [00:00<00:00, 29.17it/s] 62%|######1   | 16/26 [00:00<00:00, 35.39it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.39it/s] 81%|########  | 21/26 [00:00<00:00, 35.63it/s]100%|##########| 26/26 [00:00<00:00, 39.44it/s]100%|##########| 26/26 [00:00<00:00, 29.52it/s]
Test: [   0/  26]	Loss 0.431 (0.431)	test_acc   0.78 (  0.78)	test_minacc   0.78 (  0.78)	test_majacc   0.78 (  0.78)	Loss_d 0.431 (0.431)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.395 (0.404)	test_acc   0.79 (  0.79)	test_minacc   0.92 (  0.89)	test_majacc   0.77 (  0.77)	Loss_d 0.395 (0.404)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.92 (  0.89)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.48 (  0.49)
Test: [  20/  26]	Loss 0.424 (0.409)	test_acc   0.78 (  0.78)	test_minacc   0.84 (  0.87)	test_majacc   0.78 (  0.77)	Loss_d 0.424 (0.409)	test_acc_d   0.78 (  0.78)	test_minacc_d   0.84 (  0.87)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.54 (  0.50)
Test: [  26/  26]	Loss 0.433 (0.412)	test_acc   0.75 (  0.78)	test_minacc   0.85 (  0.86)	test_majacc   0.73 (  0.77)	Loss_d 0.433 (0.412)	test_acc_d   0.75 (  0.78)	test_minacc_d   0.85 (  0.86)	test_majacc_d   0.73 (  0.77)	test_corr_d   0.46 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.53it/s]
Test: [  0/  1]	Loss 0.928 (0.928)	test_acc   0.68 (  0.68)	test_minacc   0.66 (  0.66)	test_majacc   0.83 (  0.83)	Loss_d 0.928 (0.928)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.83 (  0.83)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.928 (0.928)	test_acc   0.68 (  0.68)	test_minacc   0.66 (  0.66)	test_majacc   0.83 (  0.83)	Loss_d 0.928 (0.928)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.83 (  0.83)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 18/  1]	epoch_time 0.0409 (0.0414)	validation_time 0.0003 (0.0008)	train_time 0.0406 (0.0405)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.7812000204920768, 0.6790000200271606)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.14it/s] 19%|#9        | 5/26 [00:00<00:00, 22.77it/s] 35%|###4      | 9/26 [00:00<00:00, 27.64it/s] 50%|#####     | 13/26 [00:00<00:00, 30.44it/s] 65%|######5   | 17/26 [00:00<00:00, 32.07it/s] 81%|########  | 21/26 [00:00<00:00, 33.32it/s] 96%|#########6| 25/26 [00:00<00:00, 33.98it/s]100%|##########| 26/26 [00:00<00:00, 28.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [19][  26/  26]	Loss 0.000 (0.000)	train_nll   0.42 (  0.42)	train_penalty   0.00 (  0.00)	weight_norm  24.24 ( 24.24)	train_acc   0.76 (  0.78)	train_minacc   0.85 (  0.87)	train_majacc   0.75 (  0.76)	train_corr   0.00 (  0.00)	l1 6.0721 (6.0337)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.45it/s] 27%|##6       | 7/26 [00:00<00:00, 21.05it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.05it/s] 50%|#####     | 13/26 [00:00<00:00, 29.60it/s] 69%|######9   | 18/26 [00:00<00:00, 35.12it/s]                                                69%|######9   | 18/26 [00:00<00:00, 35.12it/s] 88%|########8 | 23/26 [00:00<00:00, 39.08it/s]100%|##########| 26/26 [00:00<00:00, 29.82it/s]
Test: [   0/  26]	Loss 0.431 (0.431)	test_acc   0.79 (  0.79)	test_minacc   0.78 (  0.78)	test_majacc   0.79 (  0.79)	Loss_d 0.431 (0.431)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.385 (0.403)	test_acc   0.79 (  0.79)	test_minacc   0.92 (  0.89)	test_majacc   0.77 (  0.77)	Loss_d 0.385 (0.403)	test_acc_d   0.79 (  0.79)	test_minacc_d   0.92 (  0.89)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.48 (  0.49)
Test: [  20/  26]	Loss 0.427 (0.406)	test_acc   0.77 (  0.78)	test_minacc   0.84 (  0.88)	test_majacc   0.76 (  0.77)	Loss_d 0.427 (0.406)	test_acc_d   0.77 (  0.78)	test_minacc_d   0.84 (  0.88)	test_majacc_d   0.76 (  0.77)	test_corr_d   0.54 (  0.50)
Test: [  26/  26]	Loss 0.424 (0.409)	test_acc   0.76 (  0.78)	test_minacc   0.85 (  0.87)	test_majacc   0.75 (  0.77)	Loss_d 0.424 (0.409)	test_acc_d   0.76 (  0.78)	test_minacc_d   0.85 (  0.87)	test_majacc_d   0.75 (  0.77)	test_corr_d   0.47 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.54it/s]
Test: [  0/  1]	Loss 0.962 (0.962)	test_acc   0.68 (  0.68)	test_minacc   0.66 (  0.66)	test_majacc   0.84 (  0.84)	Loss_d 0.962 (0.962)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.84 (  0.84)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.962 (0.962)	test_acc   0.68 (  0.68)	test_minacc   0.66 (  0.66)	test_majacc   0.84 (  0.84)	Loss_d 0.962 (0.962)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.84 (  0.84)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 19/  1]	epoch_time 0.0401 (0.0414)	validation_time 0.0004 (0.0008)	train_time 0.0397 (0.0404)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.7814000199437141, 0.6820000410079956)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.91it/s] 15%|#5        | 4/26 [00:00<00:01, 18.69it/s] 31%|###       | 8/26 [00:00<00:00, 25.10it/s] 46%|####6     | 12/26 [00:00<00:00, 28.49it/s] 62%|######1   | 16/26 [00:00<00:00, 30.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.62it/s] 92%|#########2| 24/26 [00:00<00:00, 33.87it/s]100%|##########| 26/26 [00:00<00:00, 28.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [20][  26/  26]	Loss 0.002 (0.001)	train_nll   0.36 (  0.41)	train_penalty   0.00 (  0.00)	weight_norm  24.24 ( 24.24)	train_acc   0.81 (  0.78)	train_minacc   0.88 (  0.88)	train_majacc   0.80 (  0.77)	train_corr   0.00 (  0.00)	l1 5.9770 (6.1241)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.23it/s] 31%|###       | 8/26 [00:00<00:00, 35.73it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.73it/s] 50%|#####     | 13/26 [00:00<00:00, 40.23it/s] 69%|######9   | 18/26 [00:00<00:00, 41.90it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.90it/s] 88%|########8 | 23/26 [00:00<00:00, 43.54it/s]100%|##########| 26/26 [00:00<00:00, 38.17it/s]
Test: [   0/  26]	Loss 0.378 (0.378)	test_acc   0.80 (  0.80)	test_minacc   0.75 (  0.75)	test_majacc   0.81 (  0.81)	Loss_d 0.378 (0.378)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.354 (0.360)	test_acc   0.82 (  0.81)	test_minacc   0.91 (  0.87)	test_majacc   0.80 (  0.80)	Loss_d 0.354 (0.360)	test_acc_d   0.82 (  0.81)	test_minacc_d   0.91 (  0.87)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.55 (  0.56)
Test: [  20/  26]	Loss 0.379 (0.358)	test_acc   0.81 (  0.81)	test_minacc   0.82 (  0.86)	test_majacc   0.81 (  0.80)	Loss_d 0.379 (0.358)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.81 (  0.80)	test_corr_d   0.61 (  0.58)
Test: [  26/  26]	Loss 0.370 (0.363)	test_acc   0.81 (  0.81)	test_minacc   0.90 (  0.86)	test_majacc   0.79 (  0.80)	Loss_d 0.370 (0.363)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.90 (  0.86)	test_majacc_d   0.79 (  0.80)	test_corr_d   0.55 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.90it/s]
Test: [  0/  1]	Loss 1.009 (1.009)	test_acc   0.68 (  0.68)	test_minacc   0.66 (  0.66)	test_majacc   0.88 (  0.88)	Loss_d 1.009 (1.009)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 1.009 (1.009)	test_acc   0.68 (  0.68)	test_minacc   0.66 (  0.66)	test_majacc   0.88 (  0.88)	Loss_d 1.009 (1.009)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.03 (  0.03)
Overall Timing[ 20/  1]	epoch_time 0.0399 (0.0413)	validation_time 0.0004 (0.0007)	train_time 0.0395 (0.0404)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.8096000270843506, 0.6800000071525574)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.97it/s] 27%|##6       | 7/26 [00:00<00:00, 30.52it/s] 42%|####2     | 11/26 [00:00<00:00, 32.56it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.83it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.69it/s] 88%|########8 | 23/26 [00:00<00:00, 33.79it/s]100%|##########| 26/26 [00:00<00:00, 30.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [21][  26/  26]	Loss 0.001 (0.000)	train_nll   0.37 (  0.38)	train_penalty   0.00 (  0.00)	weight_norm  24.25 ( 24.25)	train_acc   0.80 (  0.79)	train_minacc   0.88 (  0.86)	train_majacc   0.79 (  0.78)	train_corr   0.00 (  0.00)	l1 6.0971 (6.3537)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.14it/s] 23%|##3       | 6/26 [00:00<00:00, 30.25it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.25it/s] 42%|####2     | 11/26 [00:00<00:00, 37.27it/s] 62%|######1   | 16/26 [00:00<00:00, 41.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.08it/s] 81%|########  | 21/26 [00:00<00:00, 39.52it/s]100%|##########| 26/26 [00:00<00:00, 42.68it/s]100%|##########| 26/26 [00:00<00:00, 35.61it/s]
Test: [   0/  26]	Loss 0.356 (0.356)	test_acc   0.81 (  0.81)	test_minacc   0.71 (  0.71)	test_majacc   0.83 (  0.83)	Loss_d 0.356 (0.356)	test_acc_d   0.81 (  0.81)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.319 (0.332)	test_acc   0.84 (  0.83)	test_minacc   0.91 (  0.86)	test_majacc   0.83 (  0.83)	Loss_d 0.319 (0.332)	test_acc_d   0.84 (  0.83)	test_minacc_d   0.91 (  0.86)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.60 (  0.61)
Test: [  20/  26]	Loss 0.361 (0.332)	test_acc   0.80 (  0.83)	test_minacc   0.82 (  0.86)	test_majacc   0.80 (  0.83)	Loss_d 0.361 (0.332)	test_acc_d   0.80 (  0.83)	test_minacc_d   0.82 (  0.86)	test_majacc_d   0.80 (  0.83)	test_corr_d   0.63 (  0.62)
Test: [  26/  26]	Loss 0.363 (0.337)	test_acc   0.80 (  0.83)	test_minacc   0.88 (  0.85)	test_majacc   0.79 (  0.82)	Loss_d 0.363 (0.337)	test_acc_d   0.80 (  0.83)	test_minacc_d   0.88 (  0.85)	test_majacc_d   0.79 (  0.82)	test_corr_d   0.57 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.66it/s]
Test: [  0/  1]	Loss 1.098 (1.098)	test_acc   0.65 (  0.65)	test_minacc   0.63 (  0.63)	test_majacc   0.87 (  0.87)	Loss_d 1.098 (1.098)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 1.098 (1.098)	test_acc   0.65 (  0.65)	test_minacc   0.63 (  0.63)	test_majacc   0.87 (  0.87)	Loss_d 1.098 (1.098)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.08 (  0.08)
Overall Timing[ 21/  1]	epoch_time 0.0386 (0.0412)	validation_time 0.0004 (0.0007)	train_time 0.0382 (0.0403)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.8273000221252441, 0.6510000228881836)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.06it/s] 19%|#9        | 5/26 [00:00<00:01, 18.76it/s] 35%|###4      | 9/26 [00:00<00:00, 24.90it/s] 50%|#####     | 13/26 [00:00<00:00, 28.74it/s] 65%|######5   | 17/26 [00:00<00:00, 31.16it/s] 81%|########  | 21/26 [00:00<00:00, 32.84it/s] 96%|#########6| 25/26 [00:00<00:00, 33.95it/s]100%|##########| 26/26 [00:00<00:00, 27.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 400
penalty weights 10000.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 400
penalty weights 10000.0
final projection at end of training
dim_v 512
Epoch: [22][  26/  26]	Loss 0.001 (0.001)	train_nll   0.36 (  0.37)	train_penalty   0.00 (  0.00)	weight_norm  24.26 ( 24.26)	train_acc   0.82 (  0.80)	train_minacc   0.88 (  0.85)	train_majacc   0.80 (  0.79)	train_corr   0.00 (  0.00)	l1 6.1682 (6.3874)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.72it/s] 31%|###       | 8/26 [00:00<00:00, 40.51it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.51it/s] 50%|#####     | 13/26 [00:00<00:00, 42.64it/s] 69%|######9   | 18/26 [00:00<00:00, 44.95it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.95it/s] 88%|########8 | 23/26 [00:00<00:00, 41.26it/s]100%|##########| 26/26 [00:00<00:00, 39.20it/s]
Test: [   0/  26]	Loss 0.379 (0.379)	test_acc   0.80 (  0.80)	test_minacc   0.75 (  0.75)	test_majacc   0.81 (  0.81)	Loss_d 0.379 (0.379)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.62 (  0.62)
Test: [  10/  26]	Loss 0.326 (0.345)	test_acc   0.83 (  0.82)	test_minacc   0.91 (  0.86)	test_majacc   0.82 (  0.81)	Loss_d 0.326 (0.345)	test_acc_d   0.83 (  0.82)	test_minacc_d   0.91 (  0.86)	test_majacc_d   0.82 (  0.81)	test_corr_d   0.60 (  0.60)
Test: [  20/  26]	Loss 0.358 (0.336)	test_acc   0.81 (  0.83)	test_minacc   0.80 (  0.86)	test_majacc   0.81 (  0.82)	Loss_d 0.358 (0.336)	test_acc_d   0.81 (  0.83)	test_minacc_d   0.80 (  0.86)	test_majacc_d   0.81 (  0.82)	test_corr_d   0.65 (  0.62)
Test: [  26/  26]	Loss 0.363 (0.342)	test_acc   0.82 (  0.82)	test_minacc   0.90 (  0.85)	test_majacc   0.80 (  0.82)	Loss_d 0.363 (0.342)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.90 (  0.85)	test_majacc_d   0.80 (  0.82)	test_corr_d   0.57 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 31.89it/s]
Test: [  0/  1]	Loss 1.106 (1.106)	test_acc   0.66 (  0.66)	test_minacc   0.64 (  0.64)	test_majacc   0.85 (  0.85)	Loss_d 1.106 (1.106)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 1.106 (1.106)	test_acc   0.66 (  0.66)	test_minacc   0.64 (  0.64)	test_majacc   0.85 (  0.85)	Loss_d 1.106 (1.106)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.09 (  0.09)
Overall Timing[ 22/  1]	epoch_time 0.0391 (0.0411)	validation_time 0.0007 (0.0007)	train_time 0.0384 (0.0402)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.8218000267744064, 0.6620000600814819)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.71it/s] 19%|#9        | 5/26 [00:00<00:01, 15.51it/s] 31%|###       | 8/26 [00:00<00:00, 19.25it/s] 46%|####6     | 12/26 [00:00<00:00, 25.35it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.45it/s] 88%|########8 | 23/26 [00:00<00:00, 29.79it/s]100%|##########| 26/26 [00:01<00:00, 24.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 400
penalty weights 10000.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 400
penalty weights 10000.0
l1 at pgd_anneal_iters 6.176602840423584
set z to 6.114836812019348
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 400
penalty weights 10000.0
args.step pgd_anneal_iters 601 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 400
penalty weights 10000.0
args.step pgd_anneal_iters 602 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 400
penalty weights 10000.0
args.step pgd_anneal_iters 603 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 400
penalty weights 10000.0
args.step pgd_anneal_iters 604 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 400
penalty weights 10000.0
args.step pgd_anneal_iters 605 600
dim_v 512
rho, theta 373 tensor(-0.0093, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 400
penalty weights 10000.0
args.step pgd_anneal_iters 606 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 400
penalty weights 10000.0
args.step pgd_anneal_iters 607 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 400
penalty weights 10000.0
args.step pgd_anneal_iters 608 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 400
penalty weights 10000.0
args.step pgd_anneal_iters 609 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 400
penalty weights 10000.0
args.step pgd_anneal_iters 610 600
dim_v 512
rho, theta 253 tensor(-0.0173, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 400
penalty weights 10000.0
args.step pgd_anneal_iters 611 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 400
penalty weights 10000.0
args.step pgd_anneal_iters 612 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 400
penalty weights 10000.0
args.step pgd_anneal_iters 613 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 400
penalty weights 10000.0
args.step pgd_anneal_iters 614 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 400
penalty weights 10000.0
args.step pgd_anneal_iters 615 600
dim_v 512
rho, theta 203 tensor(-0.0048, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 400
penalty weights 10000.0
args.step pgd_anneal_iters 616 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 400
penalty weights 10000.0
args.step pgd_anneal_iters 617 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 400
penalty weights 10000.0
args.step pgd_anneal_iters 618 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 400
penalty weights 10000.0
args.step pgd_anneal_iters 619 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 400
penalty weights 10000.0
args.step pgd_anneal_iters 620 600
dim_v 512
rho, theta 190 tensor(-0.0060, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 400
penalty weights 10000.0
args.step pgd_anneal_iters 621 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 400
penalty weights 10000.0
args.step pgd_anneal_iters 622 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 400
penalty weights 10000.0
args.step pgd_anneal_iters 623 600
final projection at end of training
dim_v 512
rho, theta 184 tensor(-0.0026, device='cuda:0')
Epoch: [23][  26/  26]	Loss 0.007 (0.273)	train_nll   0.66 (  0.66)	train_penalty   0.01 (  0.27)	weight_norm  33.88 ( 27.05)	train_acc   0.60 (  0.69)	train_minacc   0.83 (  0.60)	train_majacc   0.55 (  0.70)	train_corr   0.00 (  0.00)	l1 7.2618 (7.3793)	zero_count 0.0000 (39.9750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.68it/s] 31%|###       | 8/26 [00:00<00:00, 40.02it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.02it/s] 50%|#####     | 13/26 [00:00<00:00, 43.25it/s] 69%|######9   | 18/26 [00:00<00:00, 45.21it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.21it/s] 88%|########8 | 23/26 [00:00<00:00, 40.16it/s]100%|##########| 26/26 [00:00<00:00, 38.67it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.47 (  0.47)	test_minacc   0.62 (  0.62)	test_majacc   0.45 (  0.45)	Loss_d 0.686 (0.686)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.644 (0.679)	test_acc   0.53 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.53 (  0.50)	Loss_d 0.644 (0.679)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.29 (  0.33)
Test: [  20/  26]	Loss 0.639 (0.672)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.639 (0.672)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.37 (  0.34)
Test: [  26/  26]	Loss 0.678 (0.669)	test_acc   0.49 (  0.50)	test_minacc   0.46 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.678 (0.669)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.34 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.45it/s]
Test: [  0/  1]	Loss 1.180 (1.180)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.180 (1.180)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 1.180 (1.180)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 1.180 (1.180)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 23/  1]	epoch_time 0.0418 (0.0411)	validation_time 0.0004 (0.0007)	train_time 0.0414 (0.0402)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5000000090003014, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.10it/s] 23%|##3       | 6/26 [00:00<00:00, 24.94it/s] 35%|###4      | 9/26 [00:00<00:00, 26.82it/s] 50%|#####     | 13/26 [00:00<00:00, 28.60it/s] 65%|######5   | 17/26 [00:00<00:00, 30.12it/s] 81%|########  | 21/26 [00:00<00:00, 31.93it/s] 96%|#########6| 25/26 [00:00<00:00, 31.79it/s]100%|##########| 26/26 [00:00<00:00, 27.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 400
penalty weights 10000.0
args.step pgd_anneal_iters 624 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 400
penalty weights 10000.0
args.step pgd_anneal_iters 625 600
dim_v 512
rho, theta 179 tensor(-0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 400
penalty weights 10000.0
args.step pgd_anneal_iters 626 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 400
penalty weights 10000.0
args.step pgd_anneal_iters 627 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 400
penalty weights 10000.0
args.step pgd_anneal_iters 628 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 400
penalty weights 10000.0
args.step pgd_anneal_iters 629 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 400
penalty weights 10000.0
args.step pgd_anneal_iters 630 600
dim_v 512
rho, theta 172 tensor(-0.0026, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 400
penalty weights 10000.0
args.step pgd_anneal_iters 631 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 400
penalty weights 10000.0
args.step pgd_anneal_iters 632 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 400
penalty weights 10000.0
args.step pgd_anneal_iters 633 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 400
penalty weights 10000.0
args.step pgd_anneal_iters 634 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 400
penalty weights 10000.0
args.step pgd_anneal_iters 635 600
dim_v 512
rho, theta 170 tensor(-0.0018, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 400
penalty weights 10000.0
args.step pgd_anneal_iters 636 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 400
penalty weights 10000.0
args.step pgd_anneal_iters 637 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 400
penalty weights 10000.0
args.step pgd_anneal_iters 638 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 400
penalty weights 10000.0
args.step pgd_anneal_iters 639 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 400
penalty weights 10000.0
args.step pgd_anneal_iters 640 600
dim_v 512
rho, theta 171 tensor(-0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 400
penalty weights 10000.0
args.step pgd_anneal_iters 641 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 400
penalty weights 10000.0
args.step pgd_anneal_iters 642 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 400
penalty weights 10000.0
args.step pgd_anneal_iters 643 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 400
penalty weights 10000.0
args.step pgd_anneal_iters 644 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 400
penalty weights 10000.0
args.step pgd_anneal_iters 645 600
dim_v 512
rho, theta 171 tensor(-0.0008, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 400
penalty weights 10000.0
args.step pgd_anneal_iters 646 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 400
penalty weights 10000.0
args.step pgd_anneal_iters 647 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 400
penalty weights 10000.0
args.step pgd_anneal_iters 648 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 400
penalty weights 10000.0
args.step pgd_anneal_iters 649 600
final projection at end of training
dim_v 512
rho, theta 176 tensor(-0.0004, device='cuda:0')
Epoch: [24][  26/  26]	Loss 0.001 (0.004)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm  39.36 ( 37.71)	train_acc   0.68 (  0.70)	train_minacc   0.22 (  0.41)	train_majacc   0.78 (  0.75)	train_corr   0.00 (  0.00)	l1 6.2719 (6.4658)	zero_count 0.0000 (78.7410)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.84it/s] 35%|###4      | 9/26 [00:00<00:00, 41.21it/s]                                               35%|###4      | 9/26 [00:00<00:00, 41.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.72it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.83it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.83it/s] 92%|#########2| 24/26 [00:00<00:00, 44.03it/s]100%|##########| 26/26 [00:00<00:00, 38.49it/s]
Test: [   0/  26]	Loss 0.620 (0.620)	test_acc   0.61 (  0.61)	test_minacc   0.38 (  0.38)	test_majacc   0.65 (  0.65)	Loss_d 0.620 (0.620)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.632 (0.642)	test_acc   0.69 (  0.65)	test_minacc   0.42 (  0.37)	test_majacc   0.75 (  0.71)	Loss_d 0.632 (0.642)	test_acc_d   0.69 (  0.65)	test_minacc_d   0.42 (  0.37)	test_majacc_d   0.75 (  0.71)	test_corr_d   0.35 (  0.36)
Test: [  20/  26]	Loss 0.624 (0.638)	test_acc   0.66 (  0.66)	test_minacc   0.36 (  0.36)	test_majacc   0.71 (  0.71)	Loss_d 0.624 (0.638)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.38 (  0.37)
Test: [  26/  26]	Loss 0.641 (0.639)	test_acc   0.60 (  0.66)	test_minacc   0.24 (  0.35)	test_majacc   0.67 (  0.71)	Loss_d 0.641 (0.639)	test_acc_d   0.60 (  0.66)	test_minacc_d   0.24 (  0.35)	test_majacc_d   0.67 (  0.71)	test_corr_d   0.38 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.70it/s]
Test: [  0/  1]	Loss 1.028 (1.028)	test_acc   0.41 (  0.41)	test_minacc   0.39 (  0.39)	test_majacc   0.66 (  0.66)	Loss_d 1.028 (1.028)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 1.028 (1.028)	test_acc   0.41 (  0.41)	test_minacc   0.39 (  0.39)	test_majacc   0.66 (  0.66)	Loss_d 1.028 (1.028)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.24 (  0.24)
Overall Timing[ 24/  1]	epoch_time 0.0449 (0.0413)	validation_time 0.0004 (0.0007)	train_time 0.0445 (0.0404)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.657700018286705, 0.4140000343322754)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 19%|#9        | 5/26 [00:00<00:01, 18.37it/s] 35%|###4      | 9/26 [00:00<00:00, 24.50it/s] 50%|#####     | 13/26 [00:00<00:00, 26.47it/s] 62%|######1   | 16/26 [00:00<00:00, 27.29it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.62it/s] 92%|#########2| 24/26 [00:00<00:00, 29.98it/s]100%|##########| 26/26 [00:01<00:00, 24.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 400
penalty weights 10000.0
args.step pgd_anneal_iters 650 600
dim_v 512
rho, theta 179 tensor(-7.7475e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 400
penalty weights 10000.0
args.step pgd_anneal_iters 651 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 400
penalty weights 10000.0
args.step pgd_anneal_iters 652 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 400
penalty weights 10000.0
args.step pgd_anneal_iters 653 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 400
penalty weights 10000.0
args.step pgd_anneal_iters 654 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 400
penalty weights 10000.0
args.step pgd_anneal_iters 655 600
dim_v 512
rho, theta 186 tensor(-0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 400
penalty weights 10000.0
args.step pgd_anneal_iters 656 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 400
penalty weights 10000.0
args.step pgd_anneal_iters 657 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 400
penalty weights 10000.0
args.step pgd_anneal_iters 658 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 400
penalty weights 10000.0
args.step pgd_anneal_iters 659 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 400
penalty weights 10000.0
args.step pgd_anneal_iters 660 600
dim_v 512
rho, theta 201 tensor(-0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 400
penalty weights 10000.0
args.step pgd_anneal_iters 661 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 400
penalty weights 10000.0
args.step pgd_anneal_iters 662 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 400
penalty weights 10000.0
args.step pgd_anneal_iters 663 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 400
penalty weights 10000.0
args.step pgd_anneal_iters 664 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 400
penalty weights 10000.0
args.step pgd_anneal_iters 665 600
dim_v 512
rho, theta 225 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 400
penalty weights 10000.0
args.step pgd_anneal_iters 666 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 400
penalty weights 10000.0
args.step pgd_anneal_iters 667 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 400
penalty weights 10000.0
args.step pgd_anneal_iters 668 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 400
penalty weights 10000.0
args.step pgd_anneal_iters 669 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 400
penalty weights 10000.0
args.step pgd_anneal_iters 670 600
dim_v 512
rho, theta 240 tensor(-0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 400
penalty weights 10000.0
args.step pgd_anneal_iters 671 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 400
penalty weights 10000.0
args.step pgd_anneal_iters 672 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 400
penalty weights 10000.0
args.step pgd_anneal_iters 673 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 400
penalty weights 10000.0
args.step pgd_anneal_iters 674 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 400
penalty weights 10000.0
args.step pgd_anneal_iters 675 600
dim_v 512
rho, theta 252 tensor(-0.0001, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [25][  26/  26]	Loss 0.000 (0.001)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.78 ( 39.66)	train_acc   0.53 (  0.55)	train_minacc   0.34 (  0.43)	train_majacc   0.56 (  0.58)	train_corr   0.00 (  0.00)	l1 6.1469 (6.1447)	zero_count 0.0000 (72.5010)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.30it/s] 31%|###       | 8/26 [00:00<00:00, 33.14it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.14it/s] 50%|#####     | 13/26 [00:00<00:00, 38.12it/s] 69%|######9   | 18/26 [00:00<00:00, 42.22it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.22it/s] 88%|########8 | 23/26 [00:00<00:00, 43.56it/s]100%|##########| 26/26 [00:00<00:00, 35.74it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.53 (  0.53)	test_minacc   0.45 (  0.45)	test_majacc   0.54 (  0.54)	Loss_d 0.639 (0.639)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.649 (0.651)	test_acc   0.57 (  0.55)	test_minacc   0.45 (  0.44)	test_majacc   0.59 (  0.57)	Loss_d 0.649 (0.651)	test_acc_d   0.57 (  0.55)	test_minacc_d   0.45 (  0.44)	test_majacc_d   0.59 (  0.57)	test_corr_d   0.31 (  0.33)
Test: [  20/  26]	Loss 0.646 (0.649)	test_acc   0.54 (  0.55)	test_minacc   0.38 (  0.43)	test_majacc   0.56 (  0.57)	Loss_d 0.646 (0.649)	test_acc_d   0.54 (  0.55)	test_minacc_d   0.38 (  0.43)	test_majacc_d   0.56 (  0.57)	test_corr_d   0.34 (  0.34)
Test: [  26/  26]	Loss 0.650 (0.648)	test_acc   0.52 (  0.55)	test_minacc   0.34 (  0.42)	test_majacc   0.56 (  0.57)	Loss_d 0.650 (0.648)	test_acc_d   0.52 (  0.55)	test_minacc_d   0.34 (  0.42)	test_majacc_d   0.56 (  0.57)	test_corr_d   0.32 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.17it/s]
Test: [  0/  1]	Loss 0.986 (0.986)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.53 (  0.53)	Loss_d 0.986 (0.986)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 0.986 (0.986)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.53 (  0.53)	Loss_d 0.986 (0.986)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.33 (  0.33)
Overall Timing[ 25/  1]	epoch_time 0.0443 (0.0414)	validation_time 0.0005 (0.0007)	train_time 0.0438 (0.0405)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5490000155568123, 0.4750000238418579)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 19%|#9        | 5/26 [00:00<00:01, 20.48it/s] 35%|###4      | 9/26 [00:00<00:00, 26.78it/s] 46%|####6     | 12/26 [00:00<00:00, 27.12it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.06it/s] 88%|########8 | 23/26 [00:00<00:00, 30.28it/s]100%|##########| 26/26 [00:01<00:00, 25.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 400
penalty weights 10000.0
args.step pgd_anneal_iters 676 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 400
penalty weights 10000.0
args.step pgd_anneal_iters 677 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 400
penalty weights 10000.0
args.step pgd_anneal_iters 678 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 400
penalty weights 10000.0
args.step pgd_anneal_iters 679 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 400
penalty weights 10000.0
args.step pgd_anneal_iters 680 600
dim_v 512
rho, theta 292 tensor(-5.7051e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 400
penalty weights 10000.0
args.step pgd_anneal_iters 681 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 400
penalty weights 10000.0
args.step pgd_anneal_iters 682 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 400
penalty weights 10000.0
args.step pgd_anneal_iters 683 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 400
penalty weights 10000.0
args.step pgd_anneal_iters 684 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 400
penalty weights 10000.0
args.step pgd_anneal_iters 685 600
dim_v 512
rho, theta 292 tensor(-3.2441e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 400
penalty weights 10000.0
args.step pgd_anneal_iters 686 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 400
penalty weights 10000.0
args.step pgd_anneal_iters 687 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 400
penalty weights 10000.0
args.step pgd_anneal_iters 688 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 400
penalty weights 10000.0
args.step pgd_anneal_iters 689 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 400
penalty weights 10000.0
args.step pgd_anneal_iters 690 600
dim_v 512
rho, theta 291 tensor(-1.0252e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 400
penalty weights 10000.0
args.step pgd_anneal_iters 691 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 400
penalty weights 10000.0
args.step pgd_anneal_iters 692 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 400
penalty weights 10000.0
args.step pgd_anneal_iters 693 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 400
penalty weights 10000.0
args.step pgd_anneal_iters 694 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 400
penalty weights 10000.0
args.step pgd_anneal_iters 695 600
dim_v 512
rho, theta 288 tensor(-1.1119e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 400
penalty weights 10000.0
args.step pgd_anneal_iters 696 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 400
penalty weights 10000.0
args.step pgd_anneal_iters 697 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 400
penalty weights 10000.0
args.step pgd_anneal_iters 698 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 400
penalty weights 10000.0
args.step pgd_anneal_iters 699 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 400
penalty weights 10000.0
args.step pgd_anneal_iters 700 600
dim_v 512
rho, theta 286 tensor(-6.9366e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 400
penalty weights 10000.0
args.step pgd_anneal_iters 701 600
final projection at end of training
dim_v 512
rho, theta 293 tensor(-2.5042e-06, device='cuda:0')
Epoch: [26][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm  39.81 ( 39.80)	train_acc   0.49 (  0.53)	train_minacc   0.41 (  0.46)	train_majacc   0.50 (  0.55)	train_corr   0.00 (  0.00)	l1 6.1148 (6.1213)	zero_count 225.0000 (50.0850)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.24it/s] 23%|##3       | 6/26 [00:00<00:00, 32.02it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.02it/s] 42%|####2     | 11/26 [00:00<00:00, 38.66it/s] 62%|######1   | 16/26 [00:00<00:00, 41.79it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.79it/s] 81%|########  | 21/26 [00:00<00:00, 39.06it/s]100%|##########| 26/26 [00:00<00:00, 35.93it/s]
Test: [   0/  26]	Loss 0.653 (0.653)	test_acc   0.48 (  0.48)	test_minacc   0.58 (  0.58)	test_majacc   0.46 (  0.46)	Loss_d 0.653 (0.653)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.657 (0.660)	test_acc   0.54 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.657 (0.660)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.23 (  0.24)
Test: [  20/  26]	Loss 0.660 (0.659)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.660 (0.659)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.25 (  0.25)
Test: [  26/  26]	Loss 0.659 (0.659)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.659 (0.659)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.54it/s]
Test: [  0/  1]	Loss 0.951 (0.951)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.951 (0.951)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.951 (0.951)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.951 (0.951)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.15 (  0.15)
Overall Timing[ 26/  1]	epoch_time 0.0420 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0416 (0.0406)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5090000079274177, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.79it/s] 15%|#5        | 4/26 [00:00<00:01, 14.77it/s] 31%|###       | 8/26 [00:00<00:00, 23.38it/s] 46%|####6     | 12/26 [00:00<00:00, 28.05it/s] 62%|######1   | 16/26 [00:00<00:00, 31.52it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.91it/s] 92%|#########2| 24/26 [00:00<00:00, 33.82it/s]100%|##########| 26/26 [00:00<00:00, 27.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 400
penalty weights 10000.0
args.step pgd_anneal_iters 702 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 400
penalty weights 10000.0
args.step pgd_anneal_iters 703 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 400
penalty weights 10000.0
args.step pgd_anneal_iters 704 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 400
penalty weights 10000.0
args.step pgd_anneal_iters 705 600
dim_v 512
rho, theta 297 tensor(-9.6840e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 400
penalty weights 10000.0
args.step pgd_anneal_iters 706 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 400
penalty weights 10000.0
args.step pgd_anneal_iters 707 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 400
penalty weights 10000.0
args.step pgd_anneal_iters 708 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 400
penalty weights 10000.0
args.step pgd_anneal_iters 709 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 400
penalty weights 10000.0
args.step pgd_anneal_iters 710 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 400
penalty weights 10000.0
args.step pgd_anneal_iters 711 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 400
penalty weights 10000.0
args.step pgd_anneal_iters 712 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 400
penalty weights 10000.0
args.step pgd_anneal_iters 713 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 400
penalty weights 10000.0
args.step pgd_anneal_iters 714 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 400
penalty weights 10000.0
args.step pgd_anneal_iters 715 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 400
penalty weights 10000.0
args.step pgd_anneal_iters 716 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 400
penalty weights 10000.0
args.step pgd_anneal_iters 717 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 400
penalty weights 10000.0
args.step pgd_anneal_iters 718 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 400
penalty weights 10000.0
args.step pgd_anneal_iters 719 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 400
penalty weights 10000.0
args.step pgd_anneal_iters 720 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 400
penalty weights 10000.0
args.step pgd_anneal_iters 721 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 400
penalty weights 10000.0
args.step pgd_anneal_iters 722 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 400
penalty weights 10000.0
args.step pgd_anneal_iters 723 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 400
penalty weights 10000.0
args.step pgd_anneal_iters 724 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 400
penalty weights 10000.0
args.step pgd_anneal_iters 725 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 400
penalty weights 10000.0
args.step pgd_anneal_iters 726 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 400
penalty weights 10000.0
args.step pgd_anneal_iters 727 600
final projection at end of training
dim_v 512
Epoch: [27][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.44 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1114 (6.1128)	zero_count 0.0000 (16.8480)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.32it/s] 31%|###       | 8/26 [00:00<00:00, 39.62it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.62it/s] 50%|#####     | 13/26 [00:00<00:00, 42.15it/s] 69%|######9   | 18/26 [00:00<00:00, 42.78it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.78it/s] 88%|########8 | 23/26 [00:00<00:00, 41.48it/s]100%|##########| 26/26 [00:00<00:00, 38.34it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.655 (0.655)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.659 (0.660)	test_acc   0.54 (  0.52)	test_minacc   0.52 (  0.51)	test_majacc   0.54 (  0.52)	Loss_d 0.659 (0.660)	test_acc_d   0.54 (  0.52)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.23 (  0.24)
Test: [  20/  26]	Loss 0.663 (0.660)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.52 (  0.51)	Loss_d 0.663 (0.660)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.52 (  0.51)	test_corr_d   0.24 (  0.25)
Test: [  26/  26]	Loss 0.661 (0.659)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.52)	Loss_d 0.661 (0.659)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.55it/s]
Test: [  0/  1]	Loss 0.936 (0.936)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.936 (0.936)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.936 (0.936)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.936 (0.936)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 27/  1]	epoch_time 0.0415 (0.0414)	validation_time 0.0005 (0.0007)	train_time 0.0410 (0.0406)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.511900011241436, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.50it/s] 19%|#9        | 5/26 [00:00<00:00, 22.75it/s] 35%|###4      | 9/26 [00:00<00:00, 28.59it/s] 50%|#####     | 13/26 [00:00<00:00, 28.82it/s] 65%|######5   | 17/26 [00:00<00:00, 31.45it/s] 81%|########  | 21/26 [00:00<00:00, 33.16it/s] 96%|#########6| 25/26 [00:00<00:00, 33.72it/s]100%|##########| 26/26 [00:00<00:00, 28.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 400
penalty weights 10000.0
args.step pgd_anneal_iters 728 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 400
penalty weights 10000.0
args.step pgd_anneal_iters 729 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 400
penalty weights 10000.0
args.step pgd_anneal_iters 730 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 400
penalty weights 10000.0
args.step pgd_anneal_iters 731 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 400
penalty weights 10000.0
args.step pgd_anneal_iters 732 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 400
penalty weights 10000.0
args.step pgd_anneal_iters 733 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 400
penalty weights 10000.0
args.step pgd_anneal_iters 734 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 400
penalty weights 10000.0
args.step pgd_anneal_iters 735 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 400
penalty weights 10000.0
args.step pgd_anneal_iters 736 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 400
penalty weights 10000.0
args.step pgd_anneal_iters 737 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 400
penalty weights 10000.0
args.step pgd_anneal_iters 738 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 400
penalty weights 10000.0
args.step pgd_anneal_iters 739 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 400
penalty weights 10000.0
args.step pgd_anneal_iters 740 600
dim_v 512
rho, theta 402 tensor(-8.7326e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 400
penalty weights 10000.0
args.step pgd_anneal_iters 741 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 400
penalty weights 10000.0
args.step pgd_anneal_iters 742 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 400
penalty weights 10000.0
args.step pgd_anneal_iters 743 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 400
penalty weights 10000.0
args.step pgd_anneal_iters 744 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 400
penalty weights 10000.0
args.step pgd_anneal_iters 745 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 400
penalty weights 10000.0
args.step pgd_anneal_iters 746 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 400
penalty weights 10000.0
args.step pgd_anneal_iters 747 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 400
penalty weights 10000.0
args.step pgd_anneal_iters 748 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 400
penalty weights 10000.0
args.step pgd_anneal_iters 749 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 400
penalty weights 10000.0
args.step pgd_anneal_iters 750 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 400
penalty weights 10000.0
args.step pgd_anneal_iters 751 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 400
penalty weights 10000.0
args.step pgd_anneal_iters 752 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 400
penalty weights 10000.0
args.step pgd_anneal_iters 753 600
final projection at end of training
dim_v 512
rho, theta 386 tensor(-1.3679e-05, device='cuda:0')
Epoch: [28][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.44 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1153 (6.1142)	zero_count 0.0000 (4.2510)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.71it/s] 31%|###       | 8/26 [00:00<00:00, 37.01it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.01it/s] 50%|#####     | 13/26 [00:00<00:00, 41.36it/s] 69%|######9   | 18/26 [00:00<00:00, 43.33it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.33it/s] 88%|########8 | 23/26 [00:00<00:00, 41.92it/s]100%|##########| 26/26 [00:00<00:00, 38.07it/s]
Test: [   0/  26]	Loss 0.658 (0.658)	test_acc   0.49 (  0.49)	test_minacc   0.58 (  0.58)	test_majacc   0.47 (  0.47)	Loss_d 0.658 (0.658)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.660 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.52 (  0.52)	test_majacc   0.54 (  0.51)	Loss_d 0.660 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.22 (  0.24)
Test: [  20/  26]	Loss 0.666 (0.662)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.666 (0.662)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.23 (  0.24)
Test: [  26/  26]	Loss 0.663 (0.661)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.50)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.661)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.23 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.24it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.931 (0.931)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.931 (0.931)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 28/  1]	epoch_time 0.0400 (0.0414)	validation_time 0.0003 (0.0007)	train_time 0.0396 (0.0406)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5067000115513801, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.79it/s] 23%|##3       | 6/26 [00:00<00:00, 24.32it/s] 35%|###4      | 9/26 [00:00<00:00, 25.45it/s] 50%|#####     | 13/26 [00:00<00:00, 29.44it/s] 65%|######5   | 17/26 [00:00<00:00, 28.06it/s] 81%|########  | 21/26 [00:00<00:00, 30.06it/s] 96%|#########6| 25/26 [00:00<00:00, 29.44it/s]100%|##########| 26/26 [00:00<00:00, 26.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 400
penalty weights 10000.0
args.step pgd_anneal_iters 754 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 400
penalty weights 10000.0
args.step pgd_anneal_iters 755 600
dim_v 512
rho, theta 390 tensor(-2.2915e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 400
penalty weights 10000.0
args.step pgd_anneal_iters 756 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 400
penalty weights 10000.0
args.step pgd_anneal_iters 757 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 400
penalty weights 10000.0
args.step pgd_anneal_iters 758 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 400
penalty weights 10000.0
args.step pgd_anneal_iters 759 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 400
penalty weights 10000.0
args.step pgd_anneal_iters 760 600
dim_v 512
rho, theta 381 tensor(-4.2266e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 400
penalty weights 10000.0
args.step pgd_anneal_iters 761 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 400
penalty weights 10000.0
args.step pgd_anneal_iters 762 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 400
penalty weights 10000.0
args.step pgd_anneal_iters 763 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 400
penalty weights 10000.0
args.step pgd_anneal_iters 764 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 400
penalty weights 10000.0
args.step pgd_anneal_iters 765 600
dim_v 512
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 400
penalty weights 10000.0
args.step pgd_anneal_iters 766 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 400
penalty weights 10000.0
args.step pgd_anneal_iters 767 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 400
penalty weights 10000.0
args.step pgd_anneal_iters 768 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 400
penalty weights 10000.0
args.step pgd_anneal_iters 769 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 400
penalty weights 10000.0
args.step pgd_anneal_iters 770 600
dim_v 512
rho, theta 403 tensor(-9.6359e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 400
penalty weights 10000.0
args.step pgd_anneal_iters 771 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 400
penalty weights 10000.0
args.step pgd_anneal_iters 772 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 400
penalty weights 10000.0
args.step pgd_anneal_iters 773 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 400
penalty weights 10000.0
args.step pgd_anneal_iters 774 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 400
penalty weights 10000.0
args.step pgd_anneal_iters 775 600
dim_v 512
rho, theta 377 tensor(-3.6179e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 400
penalty weights 10000.0
args.step pgd_anneal_iters 776 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 400
penalty weights 10000.0
args.step pgd_anneal_iters 777 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 400
penalty weights 10000.0
args.step pgd_anneal_iters 778 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 400
penalty weights 10000.0
args.step pgd_anneal_iters 779 600
final projection at end of training
dim_v 512
rho, theta 377 tensor(-1.0470e-06, device='cuda:0')
Epoch: [29][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.44 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1164 (6.1150)	zero_count 0.0000 (24.1020)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.95it/s] 23%|##3       | 6/26 [00:00<00:00, 25.04it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.04it/s] 42%|####2     | 11/26 [00:00<00:00, 33.18it/s] 62%|######1   | 16/26 [00:00<00:00, 38.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.41it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.41it/s] 96%|#########6| 25/26 [00:00<00:00, 42.03it/s]100%|##########| 26/26 [00:00<00:00, 34.29it/s]
Test: [   0/  26]	Loss 0.658 (0.658)	test_acc   0.49 (  0.49)	test_minacc   0.58 (  0.58)	test_majacc   0.47 (  0.47)	Loss_d 0.658 (0.658)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.661 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.661 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.667 (0.662)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.667 (0.662)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.24)
Test: [  26/  26]	Loss 0.663 (0.661)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.661)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.23 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.54it/s]
Test: [  0/  1]	Loss 0.930 (0.930)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.930 (0.930)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.930 (0.930)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.930 (0.930)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 29/  1]	epoch_time 0.0423 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0418 (0.0406)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5071000092029572, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.48it/s] 23%|##3       | 6/26 [00:00<00:00, 24.40it/s] 38%|###8      | 10/26 [00:00<00:00, 29.38it/s] 50%|#####     | 13/26 [00:00<00:00, 28.55it/s] 62%|######1   | 16/26 [00:00<00:00, 27.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.09it/s] 92%|#########2| 24/26 [00:00<00:00, 29.72it/s]100%|##########| 26/26 [00:00<00:00, 26.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 400
penalty weights 10000.0
args.step pgd_anneal_iters 780 600
dim_v 512
rho, theta 378 tensor(-7.9766e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 400
penalty weights 10000.0
args.step pgd_anneal_iters 781 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 400
penalty weights 10000.0
args.step pgd_anneal_iters 782 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 400
penalty weights 10000.0
args.step pgd_anneal_iters 783 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 400
penalty weights 10000.0
args.step pgd_anneal_iters 784 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 400
penalty weights 10000.0
args.step pgd_anneal_iters 785 600
dim_v 512
rho, theta 366 tensor(-2.0815e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 400
penalty weights 10000.0
args.step pgd_anneal_iters 786 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 400
penalty weights 10000.0
args.step pgd_anneal_iters 787 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 400
penalty weights 10000.0
args.step pgd_anneal_iters 788 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 400
penalty weights 10000.0
args.step pgd_anneal_iters 789 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 400
penalty weights 10000.0
args.step pgd_anneal_iters 790 600
dim_v 512
rho, theta 400 tensor(-4.6637e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 400
penalty weights 10000.0
args.step pgd_anneal_iters 791 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 400
penalty weights 10000.0
args.step pgd_anneal_iters 792 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 400
penalty weights 10000.0
args.step pgd_anneal_iters 793 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 400
penalty weights 10000.0
args.step pgd_anneal_iters 794 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 400
penalty weights 10000.0
args.step pgd_anneal_iters 795 600
dim_v 512
rho, theta 402 tensor(-3.5153e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 400
penalty weights 10000.0
args.step pgd_anneal_iters 796 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 400
penalty weights 10000.0
args.step pgd_anneal_iters 797 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 400
penalty weights 10000.0
args.step pgd_anneal_iters 798 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 400
penalty weights 10000.0
args.step pgd_anneal_iters 799 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 400
penalty weights 10000.0
args.step pgd_anneal_iters 800 600
dim_v 512
rho, theta 371 tensor(-3.3058e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 400
penalty weights 10000.0
args.step pgd_anneal_iters 801 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 400
penalty weights 10000.0
args.step pgd_anneal_iters 802 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 400
penalty weights 10000.0
args.step pgd_anneal_iters 803 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 400
penalty weights 10000.0
args.step pgd_anneal_iters 804 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 400
penalty weights 10000.0
args.step pgd_anneal_iters 805 600
dim_v 512
rho, theta 367 tensor(-9.0444e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [30][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.44 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1168 (6.1151)	zero_count 0.0000 (30.1080)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.11it/s] 23%|##3       | 6/26 [00:00<00:01, 16.90it/s]                                               23%|##3       | 6/26 [00:00<00:01, 16.90it/s] 42%|####2     | 11/26 [00:00<00:00, 26.38it/s] 62%|######1   | 16/26 [00:00<00:00, 32.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.76it/s] 81%|########  | 21/26 [00:00<00:00, 34.92it/s]100%|##########| 26/26 [00:00<00:00, 37.83it/s]100%|##########| 26/26 [00:00<00:00, 27.50it/s]
Test: [   0/  26]	Loss 0.658 (0.658)	test_acc   0.49 (  0.49)	test_minacc   0.58 (  0.58)	test_majacc   0.47 (  0.47)	Loss_d 0.658 (0.658)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.661 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.661 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.667 (0.662)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.667 (0.662)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.24)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.23 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.18it/s]
Test: [  0/  1]	Loss 0.930 (0.930)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.930 (0.930)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.930 (0.930)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.930 (0.930)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 30/  1]	epoch_time 0.0423 (0.0414)	validation_time 0.0005 (0.0006)	train_time 0.0418 (0.0406)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5081000114679337, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.05it/s] 19%|#9        | 5/26 [00:00<00:01, 19.52it/s] 35%|###4      | 9/26 [00:00<00:00, 26.10it/s] 46%|####6     | 12/26 [00:00<00:00, 26.40it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.45it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.58it/s] 85%|########4 | 22/26 [00:00<00:00, 29.32it/s] 96%|#########6| 25/26 [00:00<00:00, 28.42it/s]100%|##########| 26/26 [00:01<00:00, 25.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 400
penalty weights 10000.0
args.step pgd_anneal_iters 806 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 400
penalty weights 10000.0
args.step pgd_anneal_iters 807 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 400
penalty weights 10000.0
args.step pgd_anneal_iters 808 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 400
penalty weights 10000.0
args.step pgd_anneal_iters 809 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 400
penalty weights 10000.0
args.step pgd_anneal_iters 810 600
dim_v 512
rho, theta 362 tensor(-1.7077e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 400
penalty weights 10000.0
args.step pgd_anneal_iters 811 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 400
penalty weights 10000.0
args.step pgd_anneal_iters 812 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 400
penalty weights 10000.0
args.step pgd_anneal_iters 813 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 400
penalty weights 10000.0
args.step pgd_anneal_iters 814 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 400
penalty weights 10000.0
args.step pgd_anneal_iters 815 600
dim_v 512
rho, theta 376 tensor(-3.7590e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 400
penalty weights 10000.0
args.step pgd_anneal_iters 816 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 400
penalty weights 10000.0
args.step pgd_anneal_iters 817 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 400
penalty weights 10000.0
args.step pgd_anneal_iters 818 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 400
penalty weights 10000.0
args.step pgd_anneal_iters 819 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 400
penalty weights 10000.0
args.step pgd_anneal_iters 820 600
dim_v 512
rho, theta 406 tensor(-3.1363e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 400
penalty weights 10000.0
args.step pgd_anneal_iters 821 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 400
penalty weights 10000.0
args.step pgd_anneal_iters 822 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 400
penalty weights 10000.0
args.step pgd_anneal_iters 823 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 400
penalty weights 10000.0
args.step pgd_anneal_iters 824 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 400
penalty weights 10000.0
args.step pgd_anneal_iters 825 600
dim_v 512
rho, theta 380 tensor(-2.8473e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 400
penalty weights 10000.0
args.step pgd_anneal_iters 826 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 400
penalty weights 10000.0
args.step pgd_anneal_iters 827 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 400
penalty weights 10000.0
args.step pgd_anneal_iters 828 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 400
penalty weights 10000.0
args.step pgd_anneal_iters 829 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 400
penalty weights 10000.0
args.step pgd_anneal_iters 830 600
dim_v 512
rho, theta 367 tensor(-5.1960e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 400
penalty weights 10000.0
args.step pgd_anneal_iters 831 600
final projection at end of training
dim_v 512
rho, theta 368 tensor(-2.2873e-07, device='cuda:0')
Epoch: [31][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.44 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1148 (6.1152)	zero_count 144.0000 (29.4960)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 23%|##3       | 6/26 [00:00<00:00, 29.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.72it/s] 42%|####2     | 11/26 [00:00<00:00, 37.76it/s] 62%|######1   | 16/26 [00:00<00:00, 40.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.59it/s] 81%|########  | 21/26 [00:00<00:00, 39.57it/s]100%|##########| 26/26 [00:00<00:00, 42.43it/s]100%|##########| 26/26 [00:00<00:00, 34.84it/s]
Test: [   0/  26]	Loss 0.658 (0.658)	test_acc   0.49 (  0.49)	test_minacc   0.58 (  0.58)	test_majacc   0.47 (  0.47)	Loss_d 0.658 (0.658)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.661 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.53 (  0.51)	Loss_d 0.661 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.668 (0.662)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.668 (0.662)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.22 (  0.24)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.23 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.02it/s]
Test: [  0/  1]	Loss 0.930 (0.930)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.930 (0.930)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.930 (0.930)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.930 (0.930)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 31/  1]	epoch_time 0.0428 (0.0415)	validation_time 0.0004 (0.0006)	train_time 0.0423 (0.0407)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5091000090837479, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.76it/s] 15%|#5        | 4/26 [00:00<00:01, 18.63it/s] 31%|###       | 8/26 [00:00<00:00, 27.28it/s] 46%|####6     | 12/26 [00:00<00:00, 29.54it/s] 62%|######1   | 16/26 [00:00<00:00, 29.87it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.73it/s] 92%|#########2| 24/26 [00:00<00:00, 29.81it/s]100%|##########| 26/26 [00:00<00:00, 26.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 400
penalty weights 10000.0
args.step pgd_anneal_iters 832 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 400
penalty weights 10000.0
args.step pgd_anneal_iters 833 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 400
penalty weights 10000.0
args.step pgd_anneal_iters 834 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 400
penalty weights 10000.0
args.step pgd_anneal_iters 835 600
dim_v 512
rho, theta 362 tensor(-1.0982e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 400
penalty weights 10000.0
args.step pgd_anneal_iters 836 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 400
penalty weights 10000.0
args.step pgd_anneal_iters 837 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 400
penalty weights 10000.0
args.step pgd_anneal_iters 838 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 400
penalty weights 10000.0
args.step pgd_anneal_iters 839 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 400
penalty weights 10000.0
args.step pgd_anneal_iters 840 600
dim_v 512
rho, theta 358 tensor(-2.8159e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 400
penalty weights 10000.0
args.step pgd_anneal_iters 841 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 400
penalty weights 10000.0
args.step pgd_anneal_iters 842 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 400
penalty weights 10000.0
args.step pgd_anneal_iters 843 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 400
penalty weights 10000.0
args.step pgd_anneal_iters 844 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 400
penalty weights 10000.0
args.step pgd_anneal_iters 845 600
dim_v 512
rho, theta 406 tensor(-2.7298e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 400
penalty weights 10000.0
args.step pgd_anneal_iters 846 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 400
penalty weights 10000.0
args.step pgd_anneal_iters 847 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 400
penalty weights 10000.0
args.step pgd_anneal_iters 848 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 400
penalty weights 10000.0
args.step pgd_anneal_iters 849 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 400
penalty weights 10000.0
args.step pgd_anneal_iters 850 600
dim_v 512
rho, theta 391 tensor(-2.6348e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 400
penalty weights 10000.0
args.step pgd_anneal_iters 851 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 400
penalty weights 10000.0
args.step pgd_anneal_iters 852 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 400
penalty weights 10000.0
args.step pgd_anneal_iters 853 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 400
penalty weights 10000.0
args.step pgd_anneal_iters 854 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 400
penalty weights 10000.0
args.step pgd_anneal_iters 855 600
dim_v 512
rho, theta 364 tensor(-1.2215e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 400
penalty weights 10000.0
args.step pgd_anneal_iters 856 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 400
penalty weights 10000.0
args.step pgd_anneal_iters 857 600
final projection at end of training
dim_v 512
rho, theta 366 tensor(1.0394e-08, device='cuda:0')
Epoch: [32][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.44 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1155 (6.1151)	zero_count 0.0000 (31.8630)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.78it/s] 31%|###       | 8/26 [00:00<00:00, 38.29it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.29it/s] 50%|#####     | 13/26 [00:00<00:00, 41.52it/s] 69%|######9   | 18/26 [00:00<00:00, 43.59it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.59it/s] 88%|########8 | 23/26 [00:00<00:00, 42.41it/s]100%|##########| 26/26 [00:00<00:00, 39.16it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.49 (  0.49)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.661 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.52 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.661 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.668 (0.662)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.668 (0.662)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.21 (  0.24)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.23 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.20it/s]
Test: [  0/  1]	Loss 0.930 (0.930)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.930 (0.930)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.930 (0.930)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.930 (0.930)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 32/  1]	epoch_time 0.0392 (0.0414)	validation_time 0.0004 (0.0006)	train_time 0.0388 (0.0406)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5087000125944614, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 15%|#5        | 4/26 [00:00<00:01, 16.08it/s] 31%|###       | 8/26 [00:00<00:00, 21.92it/s] 46%|####6     | 12/26 [00:00<00:00, 26.59it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.50it/s] 69%|######9   | 18/26 [00:00<00:00, 26.78it/s] 85%|########4 | 22/26 [00:00<00:00, 29.81it/s]100%|##########| 26/26 [00:00<00:00, 29.92it/s]100%|##########| 26/26 [00:01<00:00, 24.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 400
penalty weights 10000.0
args.step pgd_anneal_iters 858 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 400
penalty weights 10000.0
args.step pgd_anneal_iters 859 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 400
penalty weights 10000.0
args.step pgd_anneal_iters 860 600
dim_v 512
rho, theta 363 tensor(-9.6677e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 400
penalty weights 10000.0
args.step pgd_anneal_iters 861 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 400
penalty weights 10000.0
args.step pgd_anneal_iters 862 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 400
penalty weights 10000.0
args.step pgd_anneal_iters 863 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 400
penalty weights 10000.0
args.step pgd_anneal_iters 864 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 400
penalty weights 10000.0
args.step pgd_anneal_iters 865 600
dim_v 512
rho, theta 354 tensor(-1.6924e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 400
penalty weights 10000.0
args.step pgd_anneal_iters 866 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 400
penalty weights 10000.0
args.step pgd_anneal_iters 867 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 400
penalty weights 10000.0
args.step pgd_anneal_iters 868 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 400
penalty weights 10000.0
args.step pgd_anneal_iters 869 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 400
penalty weights 10000.0
args.step pgd_anneal_iters 870 600
dim_v 512
rho, theta 397 tensor(-2.6094e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 400
penalty weights 10000.0
args.step pgd_anneal_iters 871 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 400
penalty weights 10000.0
args.step pgd_anneal_iters 872 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 400
penalty weights 10000.0
args.step pgd_anneal_iters 873 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 400
penalty weights 10000.0
args.step pgd_anneal_iters 874 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 400
penalty weights 10000.0
args.step pgd_anneal_iters 875 600
dim_v 512
rho, theta 384 tensor(-2.1080e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 400
penalty weights 10000.0
args.step pgd_anneal_iters 876 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 400
penalty weights 10000.0
args.step pgd_anneal_iters 877 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 400
penalty weights 10000.0
args.step pgd_anneal_iters 878 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 400
penalty weights 10000.0
args.step pgd_anneal_iters 879 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 400
penalty weights 10000.0
args.step pgd_anneal_iters 880 600
dim_v 512
rho, theta 360 tensor(-2.1781e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 400
penalty weights 10000.0
args.step pgd_anneal_iters 881 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 400
penalty weights 10000.0
args.step pgd_anneal_iters 882 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 400
penalty weights 10000.0
args.step pgd_anneal_iters 883 600
final projection at end of training
dim_v 512
rho, theta 369 tensor(5.0519e-07, device='cuda:0')
Epoch: [33][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.44 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1162 (6.1152)	zero_count 0.0000 (32.7990)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.02it/s] 23%|##3       | 6/26 [00:00<00:00, 28.46it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.46it/s] 42%|####2     | 11/26 [00:00<00:00, 36.29it/s] 62%|######1   | 16/26 [00:00<00:00, 41.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.11it/s] 81%|########  | 21/26 [00:00<00:00, 38.74it/s]100%|##########| 26/26 [00:00<00:00, 42.01it/s]100%|##########| 26/26 [00:00<00:00, 34.72it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.49 (  0.49)	test_minacc   0.56 (  0.56)	test_majacc   0.48 (  0.48)	Loss_d 0.659 (0.659)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.662 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.52)	Loss_d 0.662 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.668 (0.662)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.668 (0.662)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.21 (  0.24)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.23 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.45it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.931 (0.931)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.931 (0.931)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 33/  1]	epoch_time 0.0401 (0.0414)	validation_time 0.0003 (0.0006)	train_time 0.0398 (0.0406)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5091000079214573, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 15%|#5        | 4/26 [00:00<00:01, 19.47it/s] 27%|##6       | 7/26 [00:00<00:00, 23.37it/s] 42%|####2     | 11/26 [00:00<00:00, 27.98it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.57it/s] 65%|######5   | 17/26 [00:00<00:00, 27.09it/s] 81%|########  | 21/26 [00:00<00:00, 29.80it/s] 92%|#########2| 24/26 [00:00<00:00, 29.24it/s]100%|##########| 26/26 [00:01<00:00, 25.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 400
penalty weights 10000.0
args.step pgd_anneal_iters 884 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 400
penalty weights 10000.0
args.step pgd_anneal_iters 885 600
dim_v 512
rho, theta 364 tensor(-6.9893e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 400
penalty weights 10000.0
args.step pgd_anneal_iters 886 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 400
penalty weights 10000.0
args.step pgd_anneal_iters 887 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 400
penalty weights 10000.0
args.step pgd_anneal_iters 888 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 400
penalty weights 10000.0
args.step pgd_anneal_iters 889 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 400
penalty weights 10000.0
args.step pgd_anneal_iters 890 600
dim_v 512
rho, theta 353 tensor(-1.0668e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 400
penalty weights 10000.0
args.step pgd_anneal_iters 891 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 400
penalty weights 10000.0
args.step pgd_anneal_iters 892 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 400
penalty weights 10000.0
args.step pgd_anneal_iters 893 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 400
penalty weights 10000.0
args.step pgd_anneal_iters 894 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 400
penalty weights 10000.0
args.step pgd_anneal_iters 895 600
dim_v 512
rho, theta 385 tensor(-2.5015e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 400
penalty weights 10000.0
args.step pgd_anneal_iters 896 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 400
penalty weights 10000.0
args.step pgd_anneal_iters 897 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 400
penalty weights 10000.0
args.step pgd_anneal_iters 898 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 400
penalty weights 10000.0
args.step pgd_anneal_iters 899 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 400
penalty weights 10000.0
args.step pgd_anneal_iters 900 600
dim_v 512
rho, theta 394 tensor(-1.8675e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 400
penalty weights 10000.0
args.step pgd_anneal_iters 901 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 400
penalty weights 10000.0
args.step pgd_anneal_iters 902 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 400
penalty weights 10000.0
args.step pgd_anneal_iters 903 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 400
penalty weights 10000.0
args.step pgd_anneal_iters 904 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 400
penalty weights 10000.0
args.step pgd_anneal_iters 905 600
dim_v 512
rho, theta 367 tensor(-2.2391e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 400
penalty weights 10000.0
args.step pgd_anneal_iters 906 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 400
penalty weights 10000.0
args.step pgd_anneal_iters 907 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 400
penalty weights 10000.0
args.step pgd_anneal_iters 908 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 400
penalty weights 10000.0
args.step pgd_anneal_iters 909 600
final projection at end of training
dim_v 512
rho, theta 366 tensor(4.4825e-07, device='cuda:0')
Epoch: [34][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.44 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1164 (6.1152)	zero_count 0.0000 (32.5260)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.46it/s] 19%|#9        | 5/26 [00:00<00:00, 22.43it/s] 38%|###8      | 10/26 [00:00<00:00, 33.05it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.05it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.75it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.75it/s] 96%|#########6| 25/26 [00:00<00:00, 41.63it/s]100%|##########| 26/26 [00:00<00:00, 34.08it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.662 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.52)	Loss_d 0.662 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.669 (0.662)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.669 (0.662)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.21 (  0.24)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.23 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 53.61it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.931 (0.931)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.931 (0.931)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 34/  1]	epoch_time 0.0457 (0.0415)	validation_time 0.0005 (0.0006)	train_time 0.0452 (0.0407)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5092000090777874, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.62it/s] 19%|#9        | 5/26 [00:00<00:00, 22.34it/s] 31%|###       | 8/26 [00:00<00:00, 24.62it/s] 42%|####2     | 11/26 [00:00<00:00, 25.75it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.44it/s] 69%|######9   | 18/26 [00:00<00:00, 28.65it/s] 81%|########  | 21/26 [00:00<00:00, 28.40it/s] 96%|#########6| 25/26 [00:00<00:00, 31.02it/s]100%|##########| 26/26 [00:01<00:00, 25.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 400
penalty weights 10000.0
args.step pgd_anneal_iters 910 600
dim_v 512
rho, theta 364 tensor(-3.4489e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 400
penalty weights 10000.0
args.step pgd_anneal_iters 911 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 400
penalty weights 10000.0
args.step pgd_anneal_iters 912 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 400
penalty weights 10000.0
args.step pgd_anneal_iters 913 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 400
penalty weights 10000.0
args.step pgd_anneal_iters 914 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 400
penalty weights 10000.0
args.step pgd_anneal_iters 915 600
dim_v 512
rho, theta 355 tensor(-4.7416e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 400
penalty weights 10000.0
args.step pgd_anneal_iters 916 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 400
penalty weights 10000.0
args.step pgd_anneal_iters 917 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 400
penalty weights 10000.0
args.step pgd_anneal_iters 918 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 400
penalty weights 10000.0
args.step pgd_anneal_iters 919 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 400
penalty weights 10000.0
args.step pgd_anneal_iters 920 600
dim_v 512
rho, theta 379 tensor(-2.4846e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 400
penalty weights 10000.0
args.step pgd_anneal_iters 921 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 400
penalty weights 10000.0
args.step pgd_anneal_iters 922 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 400
penalty weights 10000.0
args.step pgd_anneal_iters 923 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 400
penalty weights 10000.0
args.step pgd_anneal_iters 924 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 400
penalty weights 10000.0
args.step pgd_anneal_iters 925 600
dim_v 512
rho, theta 398 tensor(-1.7735e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 400
penalty weights 10000.0
args.step pgd_anneal_iters 926 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 400
penalty weights 10000.0
args.step pgd_anneal_iters 927 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 400
penalty weights 10000.0
args.step pgd_anneal_iters 928 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 400
penalty weights 10000.0
args.step pgd_anneal_iters 929 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 400
penalty weights 10000.0
args.step pgd_anneal_iters 930 600
dim_v 512
rho, theta 379 tensor(-2.1433e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 400
penalty weights 10000.0
args.step pgd_anneal_iters 931 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 400
penalty weights 10000.0
args.step pgd_anneal_iters 932 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 400
penalty weights 10000.0
args.step pgd_anneal_iters 933 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 400
penalty weights 10000.0
args.step pgd_anneal_iters 934 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 400
penalty weights 10000.0
args.step pgd_anneal_iters 935 600
dim_v 512
rho, theta 365 tensor(5.8628e-08, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [35][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.44 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1164 (6.1152)	zero_count 0.0000 (32.1750)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.66it/s] 27%|##6       | 7/26 [00:00<00:00, 34.25it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.25it/s] 46%|####6     | 12/26 [00:00<00:00, 38.72it/s] 65%|######5   | 17/26 [00:00<00:00, 38.78it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.78it/s] 85%|########4 | 22/26 [00:00<00:00, 42.00it/s]100%|##########| 26/26 [00:00<00:00, 36.32it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.49 (  0.49)	test_minacc   0.56 (  0.56)	test_majacc   0.48 (  0.48)	Loss_d 0.659 (0.659)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.662 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.52)	Loss_d 0.662 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.669 (0.662)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.669 (0.662)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.23 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.64it/s]
Test: [  0/  1]	Loss 0.931 (0.931)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.931 (0.931)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.931 (0.931)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.931 (0.931)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 35/  1]	epoch_time 0.0446 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0441 (0.0408)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5094000067412853, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.12it/s] 19%|#9        | 5/26 [00:00<00:01, 19.83it/s] 35%|###4      | 9/26 [00:00<00:00, 26.23it/s] 46%|####6     | 12/26 [00:00<00:00, 26.94it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.86it/s] 88%|########8 | 23/26 [00:00<00:00, 29.40it/s]100%|##########| 26/26 [00:00<00:00, 29.11it/s]100%|##########| 26/26 [00:01<00:00, 25.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 400
penalty weights 10000.0
args.step pgd_anneal_iters 936 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 400
penalty weights 10000.0
args.step pgd_anneal_iters 937 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 400
penalty weights 10000.0
args.step pgd_anneal_iters 938 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 400
penalty weights 10000.0
args.step pgd_anneal_iters 939 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 400
penalty weights 10000.0
args.step pgd_anneal_iters 940 600
dim_v 512
rho, theta 352 tensor(-4.2686e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 400
penalty weights 10000.0
args.step pgd_anneal_iters 941 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 400
penalty weights 10000.0
args.step pgd_anneal_iters 942 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 400
penalty weights 10000.0
args.step pgd_anneal_iters 943 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 400
penalty weights 10000.0
args.step pgd_anneal_iters 944 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 400
penalty weights 10000.0
args.step pgd_anneal_iters 945 600
dim_v 512
rho, theta 359 tensor(-2.1497e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 400
penalty weights 10000.0
args.step pgd_anneal_iters 946 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 400
penalty weights 10000.0
args.step pgd_anneal_iters 947 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 400
penalty weights 10000.0
args.step pgd_anneal_iters 948 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 400
penalty weights 10000.0
args.step pgd_anneal_iters 949 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 400
penalty weights 10000.0
args.step pgd_anneal_iters 950 600
dim_v 512
rho, theta 396 tensor(-1.7560e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 400
penalty weights 10000.0
args.step pgd_anneal_iters 951 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 400
penalty weights 10000.0
args.step pgd_anneal_iters 952 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 400
penalty weights 10000.0
args.step pgd_anneal_iters 953 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 400
penalty weights 10000.0
args.step pgd_anneal_iters 954 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 400
penalty weights 10000.0
args.step pgd_anneal_iters 955 600
dim_v 512
rho, theta 383 tensor(-1.7136e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 400
penalty weights 10000.0
args.step pgd_anneal_iters 956 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 400
penalty weights 10000.0
args.step pgd_anneal_iters 957 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 400
penalty weights 10000.0
args.step pgd_anneal_iters 958 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 400
penalty weights 10000.0
args.step pgd_anneal_iters 959 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 400
penalty weights 10000.0
args.step pgd_anneal_iters 960 600
dim_v 512
rho, theta 368 tensor(-5.0268e-07, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 400
penalty weights 10000.0
args.step pgd_anneal_iters 961 600
final projection at end of training
dim_v 512
rho, theta 365 tensor(4.9508e-08, device='cuda:0')
Epoch: [36][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.44 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1148 (6.1152)	zero_count 143.0000 (30.8360)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.69it/s] 23%|##3       | 6/26 [00:00<00:00, 29.52it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.52it/s] 42%|####2     | 11/26 [00:00<00:00, 37.01it/s] 62%|######1   | 16/26 [00:00<00:00, 41.71it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.71it/s] 81%|########  | 21/26 [00:00<00:00, 40.90it/s]100%|##########| 26/26 [00:00<00:00, 35.95it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.49 (  0.49)	test_minacc   0.56 (  0.56)	test_majacc   0.48 (  0.48)	Loss_d 0.659 (0.659)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.662 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.52)	Loss_d 0.662 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.669 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.669 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.44 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.44 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.20it/s]
Test: [  0/  1]	Loss 0.932 (0.932)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.932 (0.932)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.932 (0.932)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.932 (0.932)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 36/  1]	epoch_time 0.0412 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0408 (0.0408)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5098000090420246, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.50it/s] 15%|#5        | 4/26 [00:00<00:01, 18.47it/s] 31%|###       | 8/26 [00:00<00:00, 26.05it/s] 42%|####2     | 11/26 [00:00<00:00, 25.93it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.12it/s] 69%|######9   | 18/26 [00:00<00:00, 29.02it/s] 81%|########  | 21/26 [00:00<00:00, 28.34it/s] 92%|#########2| 24/26 [00:00<00:00, 27.73it/s]100%|##########| 26/26 [00:01<00:00, 25.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 400
penalty weights 10000.0
args.step pgd_anneal_iters 962 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 400
penalty weights 10000.0
args.step pgd_anneal_iters 963 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 400
penalty weights 10000.0
args.step pgd_anneal_iters 964 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 400
penalty weights 10000.0
args.step pgd_anneal_iters 965 600
dim_v 512
rho, theta 355 tensor(-1.9288e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 400
penalty weights 10000.0
args.step pgd_anneal_iters 966 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 400
penalty weights 10000.0
args.step pgd_anneal_iters 967 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 400
penalty weights 10000.0
args.step pgd_anneal_iters 968 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 400
penalty weights 10000.0
args.step pgd_anneal_iters 969 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 400
penalty weights 10000.0
args.step pgd_anneal_iters 970 600
dim_v 512
rho, theta 350 tensor(-1.5745e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 400
penalty weights 10000.0
args.step pgd_anneal_iters 971 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 400
penalty weights 10000.0
args.step pgd_anneal_iters 972 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 400
penalty weights 10000.0
args.step pgd_anneal_iters 973 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 400
penalty weights 10000.0
args.step pgd_anneal_iters 974 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 400
penalty weights 10000.0
args.step pgd_anneal_iters 975 600
dim_v 512
rho, theta 407 tensor(-1.7274e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 400
penalty weights 10000.0
args.step pgd_anneal_iters 976 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 400
penalty weights 10000.0
args.step pgd_anneal_iters 977 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 400
penalty weights 10000.0
args.step pgd_anneal_iters 978 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 400
penalty weights 10000.0
args.step pgd_anneal_iters 979 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 400
penalty weights 10000.0
args.step pgd_anneal_iters 980 600
dim_v 512
rho, theta 390 tensor(-1.5500e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 400
penalty weights 10000.0
args.step pgd_anneal_iters 981 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 400
penalty weights 10000.0
args.step pgd_anneal_iters 982 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 400
penalty weights 10000.0
args.step pgd_anneal_iters 983 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 400
penalty weights 10000.0
args.step pgd_anneal_iters 984 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 400
penalty weights 10000.0
args.step pgd_anneal_iters 985 600
dim_v 512
rho, theta 371 tensor(-1.4536e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 400
penalty weights 10000.0
args.step pgd_anneal_iters 986 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 400
penalty weights 10000.0
args.step pgd_anneal_iters 987 600
final projection at end of training
dim_v 512
rho, theta 368 tensor(3.0497e-07, device='cuda:0')
Epoch: [37][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1154 (6.1151)	zero_count 0.0000 (32.2920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.91it/s] 23%|##3       | 6/26 [00:00<00:01, 19.44it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.44it/s] 42%|####2     | 11/26 [00:00<00:00, 28.60it/s] 62%|######1   | 16/26 [00:00<00:00, 34.70it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.70it/s] 81%|########  | 21/26 [00:00<00:00, 38.19it/s]100%|##########| 26/26 [00:00<00:00, 41.52it/s]100%|##########| 26/26 [00:00<00:00, 30.36it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.49 (  0.49)	test_minacc   0.56 (  0.56)	test_majacc   0.48 (  0.48)	Loss_d 0.659 (0.659)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.662 (0.662)	test_acc   0.53 (  0.52)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.52)	Loss_d 0.662 (0.662)	test_acc_d   0.53 (  0.52)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.669 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.669 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.35it/s]
Test: [  0/  1]	Loss 0.932 (0.932)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.932 (0.932)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.932 (0.932)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.932 (0.932)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 37/  1]	epoch_time 0.0421 (0.0416)	validation_time 0.0003 (0.0006)	train_time 0.0418 (0.0409)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5098000130653382, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.80it/s] 15%|#5        | 4/26 [00:00<00:01, 17.21it/s] 31%|###       | 8/26 [00:00<00:00, 23.02it/s] 46%|####6     | 12/26 [00:00<00:00, 27.50it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.19it/s] 69%|######9   | 18/26 [00:00<00:00, 27.41it/s] 85%|########4 | 22/26 [00:00<00:00, 30.49it/s]100%|##########| 26/26 [00:00<00:00, 30.26it/s]100%|##########| 26/26 [00:01<00:00, 25.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 400
penalty weights 10000.0
args.step pgd_anneal_iters 988 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 400
penalty weights 10000.0
args.step pgd_anneal_iters 989 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 400
penalty weights 10000.0
args.step pgd_anneal_iters 990 600
dim_v 512
rho, theta 356 tensor(-3.3793e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 400
penalty weights 10000.0
args.step pgd_anneal_iters 991 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 400
penalty weights 10000.0
args.step pgd_anneal_iters 992 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 400
penalty weights 10000.0
args.step pgd_anneal_iters 993 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 400
penalty weights 10000.0
args.step pgd_anneal_iters 994 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 400
penalty weights 10000.0
args.step pgd_anneal_iters 995 600
dim_v 512
rho, theta 346 tensor(-7.6404e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 400
penalty weights 10000.0
args.step pgd_anneal_iters 996 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 400
penalty weights 10000.0
args.step pgd_anneal_iters 997 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 400
penalty weights 10000.0
args.step pgd_anneal_iters 998 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 400
penalty weights 10000.0
args.step pgd_anneal_iters 999 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 400
penalty weights 10000.0
args.step pgd_anneal_iters 1000 600
dim_v 512
rho, theta 398 tensor(-1.8739e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 400
penalty weights 10000.0
args.step pgd_anneal_iters 1001 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 400
penalty weights 10000.0
args.step pgd_anneal_iters 1002 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 400
penalty weights 10000.0
args.step pgd_anneal_iters 1003 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 400
penalty weights 10000.0
args.step pgd_anneal_iters 1004 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 400
penalty weights 10000.0
args.step pgd_anneal_iters 1005 600
dim_v 512
rho, theta 386 tensor(-1.3381e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 400
penalty weights 10000.0
args.step pgd_anneal_iters 1006 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 400
penalty weights 10000.0
args.step pgd_anneal_iters 1007 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 400
penalty weights 10000.0
args.step pgd_anneal_iters 1008 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 400
penalty weights 10000.0
args.step pgd_anneal_iters 1009 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 400
penalty weights 10000.0
args.step pgd_anneal_iters 1010 600
dim_v 512
rho, theta 372 tensor(-1.7706e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 400
penalty weights 10000.0
args.step pgd_anneal_iters 1011 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 400
penalty weights 10000.0
args.step pgd_anneal_iters 1012 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 400
penalty weights 10000.0
args.step pgd_anneal_iters 1013 600
final projection at end of training
dim_v 512
rho, theta 366 tensor(4.2357e-07, device='cuda:0')
Epoch: [38][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1158 (6.1152)	zero_count 0.0000 (32.7600)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.49it/s] 23%|##3       | 6/26 [00:00<00:00, 30.60it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.60it/s] 42%|####2     | 11/26 [00:00<00:00, 37.43it/s] 62%|######1   | 16/26 [00:00<00:00, 41.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.53it/s] 81%|########  | 21/26 [00:00<00:00, 39.38it/s]100%|##########| 26/26 [00:00<00:00, 42.18it/s]100%|##########| 26/26 [00:00<00:00, 35.50it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.49 (  0.49)	test_minacc   0.56 (  0.56)	test_majacc   0.48 (  0.48)	Loss_d 0.659 (0.659)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.662 (0.662)	test_acc   0.54 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.52)	Loss_d 0.662 (0.662)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.670 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.670 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.79it/s]
Test: [  0/  1]	Loss 0.932 (0.932)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.932 (0.932)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.932 (0.932)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.932 (0.932)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 38/  1]	epoch_time 0.0421 (0.0416)	validation_time 0.0003 (0.0006)	train_time 0.0418 (0.0409)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5094000154137611, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.75it/s] 15%|#5        | 4/26 [00:00<00:01, 18.22it/s] 27%|##6       | 7/26 [00:00<00:00, 22.34it/s] 42%|####2     | 11/26 [00:00<00:00, 27.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.39it/s] 65%|######5   | 17/26 [00:00<00:00, 27.03it/s] 81%|########  | 21/26 [00:00<00:00, 30.30it/s] 96%|#########6| 25/26 [00:00<00:00, 30.08it/s]100%|##########| 26/26 [00:01<00:00, 25.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 400
penalty weights 10000.0
args.step pgd_anneal_iters 1014 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 400
penalty weights 10000.0
args.step pgd_anneal_iters 1015 600
dim_v 512
rho, theta 362 tensor(-2.6272e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 400
penalty weights 10000.0
args.step pgd_anneal_iters 1016 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 400
penalty weights 10000.0
args.step pgd_anneal_iters 1017 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 400
penalty weights 10000.0
args.step pgd_anneal_iters 1018 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 400
penalty weights 10000.0
args.step pgd_anneal_iters 1019 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 400
penalty weights 10000.0
args.step pgd_anneal_iters 1020 600
dim_v 512
rho, theta 346 tensor(-3.5866e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 400
penalty weights 10000.0
args.step pgd_anneal_iters 1021 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 400
penalty weights 10000.0
args.step pgd_anneal_iters 1022 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 400
penalty weights 10000.0
args.step pgd_anneal_iters 1023 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 400
penalty weights 10000.0
args.step pgd_anneal_iters 1024 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 400
penalty weights 10000.0
args.step pgd_anneal_iters 1025 600
dim_v 512
rho, theta 378 tensor(-1.8558e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 400
penalty weights 10000.0
args.step pgd_anneal_iters 1026 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 400
penalty weights 10000.0
args.step pgd_anneal_iters 1027 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 400
penalty weights 10000.0
args.step pgd_anneal_iters 1028 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 400
penalty weights 10000.0
args.step pgd_anneal_iters 1029 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 400
penalty weights 10000.0
args.step pgd_anneal_iters 1030 600
dim_v 512
rho, theta 403 tensor(-1.1213e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 400
penalty weights 10000.0
args.step pgd_anneal_iters 1031 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 400
penalty weights 10000.0
args.step pgd_anneal_iters 1032 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 400
penalty weights 10000.0
args.step pgd_anneal_iters 1033 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 400
penalty weights 10000.0
args.step pgd_anneal_iters 1034 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 400
penalty weights 10000.0
args.step pgd_anneal_iters 1035 600
dim_v 512
rho, theta 383 tensor(-1.7198e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 400
penalty weights 10000.0
args.step pgd_anneal_iters 1036 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 400
penalty weights 10000.0
args.step pgd_anneal_iters 1037 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 400
penalty weights 10000.0
args.step pgd_anneal_iters 1038 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 400
penalty weights 10000.0
args.step pgd_anneal_iters 1039 600
final projection at end of training
dim_v 512
rho, theta 370 tensor(4.8840e-08, device='cuda:0')
Epoch: [39][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1158 (6.1152)	zero_count 0.0000 (32.2920)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.19it/s] 27%|##6       | 7/26 [00:00<00:00, 35.48it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.48it/s] 46%|####6     | 12/26 [00:00<00:00, 40.45it/s] 65%|######5   | 17/26 [00:00<00:00, 43.52it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.52it/s] 85%|########4 | 22/26 [00:00<00:00, 41.12it/s]100%|##########| 26/26 [00:00<00:00, 38.32it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.49 (  0.49)	test_minacc   0.56 (  0.56)	test_majacc   0.48 (  0.48)	Loss_d 0.659 (0.659)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.662 (0.662)	test_acc   0.54 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.52)	Loss_d 0.662 (0.662)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.670 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.670 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.65it/s]
Test: [  0/  1]	Loss 0.932 (0.932)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.932 (0.932)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.932 (0.932)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.932 (0.932)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 39/  1]	epoch_time 0.0428 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0424 (0.0409)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5097000142335891, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.37it/s] 19%|#9        | 5/26 [00:00<00:01, 19.37it/s] 31%|###       | 8/26 [00:00<00:00, 23.04it/s] 42%|####2     | 11/26 [00:00<00:00, 25.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.33it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.80it/s] 88%|########8 | 23/26 [00:00<00:00, 29.12it/s]100%|##########| 26/26 [00:00<00:00, 28.80it/s]100%|##########| 26/26 [00:01<00:00, 24.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 400
penalty weights 10000.0
args.step pgd_anneal_iters 1040 600
dim_v 512
rho, theta 364 tensor(-1.4370e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 400
penalty weights 10000.0
args.step pgd_anneal_iters 1041 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 400
penalty weights 10000.0
args.step pgd_anneal_iters 1042 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 400
penalty weights 10000.0
args.step pgd_anneal_iters 1043 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 400
penalty weights 10000.0
args.step pgd_anneal_iters 1044 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 400
penalty weights 10000.0
args.step pgd_anneal_iters 1045 600
dim_v 512
rho, theta 350 tensor(1.4944e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 400
penalty weights 10000.0
args.step pgd_anneal_iters 1046 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 400
penalty weights 10000.0
args.step pgd_anneal_iters 1047 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 400
penalty weights 10000.0
args.step pgd_anneal_iters 1048 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 400
penalty weights 10000.0
args.step pgd_anneal_iters 1049 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 400
penalty weights 10000.0
args.step pgd_anneal_iters 1050 600
dim_v 512
rho, theta 369 tensor(-1.8378e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 400
penalty weights 10000.0
args.step pgd_anneal_iters 1051 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 400
penalty weights 10000.0
args.step pgd_anneal_iters 1052 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 400
penalty weights 10000.0
args.step pgd_anneal_iters 1053 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 400
penalty weights 10000.0
args.step pgd_anneal_iters 1054 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 400
penalty weights 10000.0
args.step pgd_anneal_iters 1055 600
dim_v 512
rho, theta 405 tensor(-1.2203e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 400
penalty weights 10000.0
args.step pgd_anneal_iters 1056 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 400
penalty weights 10000.0
args.step pgd_anneal_iters 1057 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 400
penalty weights 10000.0
args.step pgd_anneal_iters 1058 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 400
penalty weights 10000.0
args.step pgd_anneal_iters 1059 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 400
penalty weights 10000.0
args.step pgd_anneal_iters 1060 600
dim_v 512
rho, theta 384 tensor(-1.4540e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 400
penalty weights 10000.0
args.step pgd_anneal_iters 1061 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 400
penalty weights 10000.0
args.step pgd_anneal_iters 1062 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 400
penalty weights 10000.0
args.step pgd_anneal_iters 1063 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 400
penalty weights 10000.0
args.step pgd_anneal_iters 1064 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 400
penalty weights 10000.0
args.step pgd_anneal_iters 1065 600
dim_v 512
rho, theta 376 tensor(-5.3628e-07, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [40][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1156 (6.1151)	zero_count 0.0000 (32.0970)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.27it/s] 27%|##6       | 7/26 [00:00<00:00, 33.88it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.88it/s] 42%|####2     | 11/26 [00:00<00:00, 36.48it/s] 65%|######5   | 17/26 [00:00<00:00, 43.05it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.05it/s] 85%|########4 | 22/26 [00:00<00:00, 39.90it/s]100%|##########| 26/26 [00:00<00:00, 37.19it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.49 (  0.49)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.662 (0.662)	test_acc   0.54 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.52)	Loss_d 0.662 (0.662)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.670 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.670 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.62it/s]
Test: [  0/  1]	Loss 0.932 (0.932)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.932 (0.932)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.932 (0.932)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.932 (0.932)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 40/  1]	epoch_time 0.0418 (0.0416)	validation_time 0.0003 (0.0006)	train_time 0.0415 (0.0409)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5095000130832196, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.84it/s] 19%|#9        | 5/26 [00:00<00:01, 20.27it/s] 35%|###4      | 9/26 [00:00<00:00, 26.96it/s] 46%|####6     | 12/26 [00:00<00:00, 27.83it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.85it/s] 88%|########8 | 23/26 [00:00<00:00, 29.83it/s]100%|##########| 26/26 [00:00<00:00, 26.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 400
penalty weights 10000.0
args.step pgd_anneal_iters 1066 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 400
penalty weights 10000.0
args.step pgd_anneal_iters 1067 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 400
penalty weights 10000.0
args.step pgd_anneal_iters 1068 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 400
penalty weights 10000.0
args.step pgd_anneal_iters 1069 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 400
penalty weights 10000.0
args.step pgd_anneal_iters 1070 600
dim_v 512
rho, theta 351 tensor(1.7204e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 400
penalty weights 10000.0
args.step pgd_anneal_iters 1071 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 400
penalty weights 10000.0
args.step pgd_anneal_iters 1072 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 400
penalty weights 10000.0
args.step pgd_anneal_iters 1073 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 400
penalty weights 10000.0
args.step pgd_anneal_iters 1074 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 400
penalty weights 10000.0
args.step pgd_anneal_iters 1075 600
dim_v 512
rho, theta 359 tensor(-1.5007e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 400
penalty weights 10000.0
args.step pgd_anneal_iters 1076 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 400
penalty weights 10000.0
args.step pgd_anneal_iters 1077 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 400
penalty weights 10000.0
args.step pgd_anneal_iters 1078 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 400
penalty weights 10000.0
args.step pgd_anneal_iters 1079 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 400
penalty weights 10000.0
args.step pgd_anneal_iters 1080 600
dim_v 512
rho, theta 404 tensor(-1.3881e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 400
penalty weights 10000.0
args.step pgd_anneal_iters 1081 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 400
penalty weights 10000.0
args.step pgd_anneal_iters 1082 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 400
penalty weights 10000.0
args.step pgd_anneal_iters 1083 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 400
penalty weights 10000.0
args.step pgd_anneal_iters 1084 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 400
penalty weights 10000.0
args.step pgd_anneal_iters 1085 600
dim_v 512
rho, theta 386 tensor(-9.8448e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 400
penalty weights 10000.0
args.step pgd_anneal_iters 1086 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 400
penalty weights 10000.0
args.step pgd_anneal_iters 1087 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 400
penalty weights 10000.0
args.step pgd_anneal_iters 1088 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 400
penalty weights 10000.0
args.step pgd_anneal_iters 1089 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 400
penalty weights 10000.0
args.step pgd_anneal_iters 1090 600
dim_v 512
rho, theta 388 tensor(-1.2491e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 400
penalty weights 10000.0
args.step pgd_anneal_iters 1091 600
final projection at end of training
dim_v 512
rho, theta 378 tensor(1.2581e-07, device='cuda:0')
Epoch: [41][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1148 (6.1151)	zero_count 123.0000 (29.5560)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.37it/s] 23%|##3       | 6/26 [00:00<00:00, 26.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.68it/s] 42%|####2     | 11/26 [00:00<00:00, 34.71it/s] 62%|######1   | 16/26 [00:00<00:00, 39.12it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.12it/s] 81%|########  | 21/26 [00:00<00:00, 37.86it/s]100%|##########| 26/26 [00:00<00:00, 40.97it/s]100%|##########| 26/26 [00:00<00:00, 33.54it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.49 (  0.49)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.662 (0.662)	test_acc   0.54 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.52)	Loss_d 0.662 (0.662)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.52)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.670 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.670 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.67it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 41/  1]	epoch_time 0.0427 (0.0416)	validation_time 0.0006 (0.0006)	train_time 0.0421 (0.0410)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5097000130712986, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.92it/s] 15%|#5        | 4/26 [00:00<00:01, 17.72it/s] 31%|###       | 8/26 [00:00<00:00, 25.65it/s] 42%|####2     | 11/26 [00:00<00:00, 26.16it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.58it/s] 69%|######9   | 18/26 [00:00<00:00, 29.76it/s] 81%|########  | 21/26 [00:00<00:00, 28.69it/s] 92%|#########2| 24/26 [00:00<00:00, 28.46it/s]100%|##########| 26/26 [00:01<00:00, 25.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 400
penalty weights 10000.0
args.step pgd_anneal_iters 1092 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 400
penalty weights 10000.0
args.step pgd_anneal_iters 1093 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 400
penalty weights 10000.0
args.step pgd_anneal_iters 1094 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 400
penalty weights 10000.0
args.step pgd_anneal_iters 1095 600
dim_v 512
rho, theta 352 tensor(2.9178e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 400
penalty weights 10000.0
args.step pgd_anneal_iters 1096 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 400
penalty weights 10000.0
args.step pgd_anneal_iters 1097 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 400
penalty weights 10000.0
args.step pgd_anneal_iters 1098 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 400
penalty weights 10000.0
args.step pgd_anneal_iters 1099 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 400
penalty weights 10000.0
args.step pgd_anneal_iters 1100 600
dim_v 512
rho, theta 355 tensor(-9.9386e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 400
penalty weights 10000.0
args.step pgd_anneal_iters 1101 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 400
penalty weights 10000.0
args.step pgd_anneal_iters 1102 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 400
penalty weights 10000.0
args.step pgd_anneal_iters 1103 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 400
penalty weights 10000.0
args.step pgd_anneal_iters 1104 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 400
penalty weights 10000.0
args.step pgd_anneal_iters 1105 600
dim_v 512
rho, theta 407 tensor(-1.4504e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 400
penalty weights 10000.0
args.step pgd_anneal_iters 1106 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 400
penalty weights 10000.0
args.step pgd_anneal_iters 1107 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 400
penalty weights 10000.0
args.step pgd_anneal_iters 1108 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 400
penalty weights 10000.0
args.step pgd_anneal_iters 1109 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 400
penalty weights 10000.0
args.step pgd_anneal_iters 1110 600
dim_v 512
rho, theta 387 tensor(-8.7010e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 400
penalty weights 10000.0
args.step pgd_anneal_iters 1111 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 400
penalty weights 10000.0
args.step pgd_anneal_iters 1112 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 400
penalty weights 10000.0
args.step pgd_anneal_iters 1113 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 400
penalty weights 10000.0
args.step pgd_anneal_iters 1114 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 400
penalty weights 10000.0
args.step pgd_anneal_iters 1115 600
dim_v 512
rho, theta 388 tensor(-1.6843e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 400
penalty weights 10000.0
args.step pgd_anneal_iters 1116 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 400
penalty weights 10000.0
args.step pgd_anneal_iters 1117 600
final projection at end of training
dim_v 512
rho, theta 380 tensor(9.7620e-08, device='cuda:0')
Epoch: [42][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1152 (6.1151)	zero_count 0.0000 (31.1610)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.33it/s] 27%|##6       | 7/26 [00:00<00:00, 32.03it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.03it/s] 46%|####6     | 12/26 [00:00<00:00, 38.10it/s] 65%|######5   | 17/26 [00:00<00:00, 40.89it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.89it/s] 85%|########4 | 22/26 [00:00<00:00, 42.84it/s]100%|##########| 26/26 [00:00<00:00, 36.20it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.662 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.662 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.670 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.670 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.662)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.95it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 42/  1]	epoch_time 0.0414 (0.0416)	validation_time 0.0006 (0.0006)	train_time 0.0408 (0.0410)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5090000131130219, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.90it/s] 12%|#1        | 3/26 [00:00<00:01, 12.38it/s] 27%|##6       | 7/26 [00:00<00:00, 22.34it/s] 38%|###8      | 10/26 [00:00<00:00, 24.33it/s] 50%|#####     | 13/26 [00:00<00:00, 24.96it/s] 65%|######5   | 17/26 [00:00<00:00, 28.43it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.66it/s] 88%|########8 | 23/26 [00:00<00:00, 27.28it/s]100%|##########| 26/26 [00:01<00:00, 24.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 400
penalty weights 10000.0
args.step pgd_anneal_iters 1118 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 400
penalty weights 10000.0
args.step pgd_anneal_iters 1119 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 400
penalty weights 10000.0
args.step pgd_anneal_iters 1120 600
dim_v 512
rho, theta 359 tensor(1.5895e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 400
penalty weights 10000.0
args.step pgd_anneal_iters 1121 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 400
penalty weights 10000.0
args.step pgd_anneal_iters 1122 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 400
penalty weights 10000.0
args.step pgd_anneal_iters 1123 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 400
penalty weights 10000.0
args.step pgd_anneal_iters 1124 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 400
penalty weights 10000.0
args.step pgd_anneal_iters 1125 600
dim_v 512
rho, theta 350 tensor(-3.2061e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 400
penalty weights 10000.0
args.step pgd_anneal_iters 1126 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 400
penalty weights 10000.0
args.step pgd_anneal_iters 1127 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 400
penalty weights 10000.0
args.step pgd_anneal_iters 1128 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 400
penalty weights 10000.0
args.step pgd_anneal_iters 1129 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 400
penalty weights 10000.0
args.step pgd_anneal_iters 1130 600
dim_v 512
rho, theta 401 tensor(-1.5823e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 400
penalty weights 10000.0
args.step pgd_anneal_iters 1131 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 400
penalty weights 10000.0
args.step pgd_anneal_iters 1132 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 400
penalty weights 10000.0
args.step pgd_anneal_iters 1133 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 400
penalty weights 10000.0
args.step pgd_anneal_iters 1134 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 400
penalty weights 10000.0
args.step pgd_anneal_iters 1135 600
dim_v 512
rho, theta 387 tensor(-8.6027e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 400
penalty weights 10000.0
args.step pgd_anneal_iters 1136 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 400
penalty weights 10000.0
args.step pgd_anneal_iters 1137 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 400
penalty weights 10000.0
args.step pgd_anneal_iters 1138 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 400
penalty weights 10000.0
args.step pgd_anneal_iters 1139 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 400
penalty weights 10000.0
args.step pgd_anneal_iters 1140 600
dim_v 512
rho, theta 375 tensor(-1.3240e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 400
penalty weights 10000.0
args.step pgd_anneal_iters 1141 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 400
penalty weights 10000.0
args.step pgd_anneal_iters 1142 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 400
penalty weights 10000.0
args.step pgd_anneal_iters 1143 600
final projection at end of training
dim_v 512
rho, theta 377 tensor(-6.0551e-08, device='cuda:0')
Epoch: [43][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1154 (6.1152)	zero_count 0.0000 (31.7460)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.44it/s] 31%|###       | 8/26 [00:00<00:00, 37.83it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.83it/s] 54%|#####3    | 14/26 [00:00<00:00, 44.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.69it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.69it/s] 92%|#########2| 24/26 [00:00<00:00, 43.34it/s]100%|##########| 26/26 [00:00<00:00, 39.72it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.663 (0.662)	test_acc   0.53 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.663 (0.662)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.671 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.671 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.20 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.663)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.663)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 26.79it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 43/  1]	epoch_time 0.0413 (0.0416)	validation_time 0.0008 (0.0006)	train_time 0.0405 (0.0410)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5082000131607056, 0.5)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.25it/s] 15%|#5        | 4/26 [00:00<00:01, 16.86it/s] 27%|##6       | 7/26 [00:00<00:00, 21.50it/s] 42%|####2     | 11/26 [00:00<00:00, 27.12it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.61it/s] 65%|######5   | 17/26 [00:00<00:00, 27.43it/s] 81%|########  | 21/26 [00:00<00:00, 30.34it/s] 96%|#########6| 25/26 [00:00<00:00, 30.05it/s]100%|##########| 26/26 [00:01<00:00, 25.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 400
penalty weights 10000.0
args.step pgd_anneal_iters 1144 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 400
penalty weights 10000.0
args.step pgd_anneal_iters 1145 600
dim_v 512
rho, theta 360 tensor(1.3209e-09, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 400
penalty weights 10000.0
args.step pgd_anneal_iters 1146 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 400
penalty weights 10000.0
args.step pgd_anneal_iters 1147 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 400
penalty weights 10000.0
args.step pgd_anneal_iters 1148 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 400
penalty weights 10000.0
args.step pgd_anneal_iters 1149 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 400
penalty weights 10000.0
args.step pgd_anneal_iters 1150 600
dim_v 512
rho, theta 351 tensor(1.0837e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 400
penalty weights 10000.0
args.step pgd_anneal_iters 1151 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 400
penalty weights 10000.0
args.step pgd_anneal_iters 1152 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 400
penalty weights 10000.0
args.step pgd_anneal_iters 1153 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 400
penalty weights 10000.0
args.step pgd_anneal_iters 1154 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 400
penalty weights 10000.0
args.step pgd_anneal_iters 1155 600
dim_v 512
rho, theta 380 tensor(-1.4017e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 400
penalty weights 10000.0
args.step pgd_anneal_iters 1156 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 400
penalty weights 10000.0
args.step pgd_anneal_iters 1157 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 400
penalty weights 10000.0
args.step pgd_anneal_iters 1158 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 400
penalty weights 10000.0
args.step pgd_anneal_iters 1159 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 400
penalty weights 10000.0
args.step pgd_anneal_iters 1160 600
dim_v 512
rho, theta 397 tensor(-8.3267e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 400
penalty weights 10000.0
args.step pgd_anneal_iters 1161 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 400
penalty weights 10000.0
args.step pgd_anneal_iters 1162 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 400
penalty weights 10000.0
args.step pgd_anneal_iters 1163 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 400
penalty weights 10000.0
args.step pgd_anneal_iters 1164 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 400
penalty weights 10000.0
args.step pgd_anneal_iters 1165 600
dim_v 512
rho, theta 380 tensor(-1.2190e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 400
penalty weights 10000.0
args.step pgd_anneal_iters 1166 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 400
penalty weights 10000.0
args.step pgd_anneal_iters 1167 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 400
penalty weights 10000.0
args.step pgd_anneal_iters 1168 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 400
penalty weights 10000.0
args.step pgd_anneal_iters 1169 600
final projection at end of training
dim_v 512
rho, theta 381 tensor(-5.4799e-07, device='cuda:0')
Epoch: [44][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1152 (6.1152)	zero_count 0.0000 (31.9800)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 23%|##3       | 6/26 [00:00<00:00, 25.79it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.79it/s] 42%|####2     | 11/26 [00:00<00:00, 32.22it/s] 62%|######1   | 16/26 [00:00<00:00, 37.61it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.61it/s] 81%|########  | 21/26 [00:00<00:00, 40.47it/s]100%|##########| 26/26 [00:00<00:00, 42.89it/s]100%|##########| 26/26 [00:00<00:00, 33.41it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.663 (0.663)	test_acc   0.53 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.663 (0.663)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.671 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.671 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.19 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.663)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.663)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.73it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 44/  1]	epoch_time 0.0408 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0403 (0.0409)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5082000085115432, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.34it/s] 19%|#9        | 5/26 [00:00<00:00, 22.53it/s] 31%|###       | 8/26 [00:00<00:00, 24.88it/s] 42%|####2     | 11/26 [00:00<00:00, 25.76it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.49it/s] 69%|######9   | 18/26 [00:00<00:00, 28.83it/s] 81%|########  | 21/26 [00:00<00:00, 28.38it/s] 96%|#########6| 25/26 [00:00<00:00, 31.00it/s]100%|##########| 26/26 [00:01<00:00, 25.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 400
penalty weights 10000.0
args.step pgd_anneal_iters 1170 600
dim_v 512
rho, theta 370 tensor(-2.9561e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 400
penalty weights 10000.0
args.step pgd_anneal_iters 1171 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 400
penalty weights 10000.0
args.step pgd_anneal_iters 1172 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 400
penalty weights 10000.0
args.step pgd_anneal_iters 1173 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 400
penalty weights 10000.0
args.step pgd_anneal_iters 1174 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 400
penalty weights 10000.0
args.step pgd_anneal_iters 1175 600
dim_v 512
rho, theta 351 tensor(5.3509e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 400
penalty weights 10000.0
args.step pgd_anneal_iters 1176 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 400
penalty weights 10000.0
args.step pgd_anneal_iters 1177 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 400
penalty weights 10000.0
args.step pgd_anneal_iters 1178 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 400
penalty weights 10000.0
args.step pgd_anneal_iters 1179 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 400
penalty weights 10000.0
args.step pgd_anneal_iters 1180 600
dim_v 512
rho, theta 375 tensor(-1.3506e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 400
penalty weights 10000.0
args.step pgd_anneal_iters 1181 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 400
penalty weights 10000.0
args.step pgd_anneal_iters 1182 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 400
penalty weights 10000.0
args.step pgd_anneal_iters 1183 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 400
penalty weights 10000.0
args.step pgd_anneal_iters 1184 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 400
penalty weights 10000.0
args.step pgd_anneal_iters 1185 600
dim_v 512
rho, theta 404 tensor(-1.0926e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 400
penalty weights 10000.0
args.step pgd_anneal_iters 1186 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 400
penalty weights 10000.0
args.step pgd_anneal_iters 1187 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 400
penalty weights 10000.0
args.step pgd_anneal_iters 1188 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 400
penalty weights 10000.0
args.step pgd_anneal_iters 1189 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 400
penalty weights 10000.0
args.step pgd_anneal_iters 1190 600
dim_v 512
rho, theta 384 tensor(-9.3881e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 400
penalty weights 10000.0
args.step pgd_anneal_iters 1191 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 400
penalty weights 10000.0
args.step pgd_anneal_iters 1192 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 400
penalty weights 10000.0
args.step pgd_anneal_iters 1193 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 400
penalty weights 10000.0
args.step pgd_anneal_iters 1194 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 400
penalty weights 10000.0
args.step pgd_anneal_iters 1195 600
dim_v 512
rho, theta 388 tensor(-1.0395e-06, device='cuda:0')
final projection at end of training
dim_v 512
Epoch: [45][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1151 (6.1151)	zero_count 0.0000 (31.2390)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 15.66it/s] 31%|###       | 8/26 [00:00<00:00, 29.77it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.77it/s] 50%|#####     | 13/26 [00:00<00:00, 36.53it/s] 69%|######9   | 18/26 [00:00<00:00, 40.50it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.50it/s] 88%|########8 | 23/26 [00:00<00:00, 39.22it/s]100%|##########| 26/26 [00:00<00:00, 35.06it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.663 (0.663)	test_acc   0.53 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.663 (0.663)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.671 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.671 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.19 (  0.23)
Test: [  26/  26]	Loss 0.663 (0.663)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.663 (0.663)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.47it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 45/  1]	epoch_time 0.0409 (0.0416)	validation_time 0.0003 (0.0006)	train_time 0.0405 (0.0409)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.507600008547306, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.11it/s] 19%|#9        | 5/26 [00:00<00:01, 19.66it/s] 35%|###4      | 9/26 [00:00<00:00, 25.96it/s] 46%|####6     | 12/26 [00:00<00:00, 26.54it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.50it/s] 85%|########4 | 22/26 [00:00<00:00, 28.41it/s] 96%|#########6| 25/26 [00:00<00:00, 27.52it/s]100%|##########| 26/26 [00:01<00:00, 24.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 400
penalty weights 10000.0
args.step pgd_anneal_iters 1196 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 400
penalty weights 10000.0
args.step pgd_anneal_iters 1197 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 400
penalty weights 10000.0
args.step pgd_anneal_iters 1198 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 400
penalty weights 10000.0
args.step pgd_anneal_iters 1199 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 400
penalty weights 10000.0
args.step pgd_anneal_iters 1200 600
dim_v 512
rho, theta 354 tensor(4.9967e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 400
penalty weights 10000.0
args.step pgd_anneal_iters 1201 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 400
penalty weights 10000.0
args.step pgd_anneal_iters 1202 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 400
penalty weights 10000.0
args.step pgd_anneal_iters 1203 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 400
penalty weights 10000.0
args.step pgd_anneal_iters 1204 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 400
penalty weights 10000.0
args.step pgd_anneal_iters 1205 600
dim_v 512
rho, theta 365 tensor(-1.0279e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 400
penalty weights 10000.0
args.step pgd_anneal_iters 1206 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 400
penalty weights 10000.0
args.step pgd_anneal_iters 1207 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 400
penalty weights 10000.0
args.step pgd_anneal_iters 1208 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 400
penalty weights 10000.0
args.step pgd_anneal_iters 1209 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 400
penalty weights 10000.0
args.step pgd_anneal_iters 1210 600
dim_v 512
rho, theta 407 tensor(-1.3394e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 400
penalty weights 10000.0
args.step pgd_anneal_iters 1211 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 400
penalty weights 10000.0
args.step pgd_anneal_iters 1212 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 400
penalty weights 10000.0
args.step pgd_anneal_iters 1213 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 400
penalty weights 10000.0
args.step pgd_anneal_iters 1214 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 400
penalty weights 10000.0
args.step pgd_anneal_iters 1215 600
dim_v 512
rho, theta 386 tensor(-5.3475e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 400
penalty weights 10000.0
args.step pgd_anneal_iters 1216 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 400
penalty weights 10000.0
args.step pgd_anneal_iters 1217 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 400
penalty weights 10000.0
args.step pgd_anneal_iters 1218 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 400
penalty weights 10000.0
args.step pgd_anneal_iters 1219 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 400
penalty weights 10000.0
args.step pgd_anneal_iters 1220 600
dim_v 512
rho, theta 401 tensor(-1.5598e-06, device='cuda:0')
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 400
penalty weights 10000.0
args.step pgd_anneal_iters 1221 600
final projection at end of training
dim_v 512
rho, theta 389 tensor(4.5238e-08, device='cuda:0')
Epoch: [46][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1148 (6.1151)	zero_count 110.0000 (28.2950)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.45it/s] 27%|##6       | 7/26 [00:00<00:00, 37.74it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.74it/s] 50%|#####     | 13/26 [00:00<00:00, 43.66it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.80it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.80it/s] 92%|#########2| 24/26 [00:00<00:00, 44.72it/s]100%|##########| 26/26 [00:00<00:00, 40.03it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.663 (0.663)	test_acc   0.53 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.663 (0.663)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.671 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.671 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.19 (  0.23)
Test: [  26/  26]	Loss 0.664 (0.663)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.664 (0.663)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.61it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 46/  1]	epoch_time 0.0401 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0397 (0.0409)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5066000109314919, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.29it/s] 15%|#5        | 4/26 [00:00<00:01, 16.55it/s] 31%|###       | 8/26 [00:00<00:00, 24.44it/s] 42%|####2     | 11/26 [00:00<00:00, 25.56it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.29it/s] 69%|######9   | 18/26 [00:00<00:00, 29.12it/s] 81%|########  | 21/26 [00:00<00:00, 28.55it/s] 92%|#########2| 24/26 [00:00<00:00, 27.59it/s]100%|##########| 26/26 [00:01<00:00, 24.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 400
penalty weights 10000.0
args.step pgd_anneal_iters 1222 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 400
penalty weights 10000.0
args.step pgd_anneal_iters 1223 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 400
penalty weights 10000.0
args.step pgd_anneal_iters 1224 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 400
penalty weights 10000.0
args.step pgd_anneal_iters 1225 600
dim_v 512
rho, theta 358 tensor(5.2067e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 400
penalty weights 10000.0
args.step pgd_anneal_iters 1226 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 400
penalty weights 10000.0
args.step pgd_anneal_iters 1227 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 400
penalty weights 10000.0
args.step pgd_anneal_iters 1228 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 400
penalty weights 10000.0
args.step pgd_anneal_iters 1229 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 400
penalty weights 10000.0
args.step pgd_anneal_iters 1230 600
dim_v 512
rho, theta 360 tensor(-6.2874e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 400
penalty weights 10000.0
args.step pgd_anneal_iters 1231 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 400
penalty weights 10000.0
args.step pgd_anneal_iters 1232 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 400
penalty weights 10000.0
args.step pgd_anneal_iters 1233 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 400
penalty weights 10000.0
args.step pgd_anneal_iters 1234 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 400
penalty weights 10000.0
args.step pgd_anneal_iters 1235 600
dim_v 512
rho, theta 416 tensor(-1.3585e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 400
penalty weights 10000.0
args.step pgd_anneal_iters 1236 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 400
penalty weights 10000.0
args.step pgd_anneal_iters 1237 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 400
penalty weights 10000.0
args.step pgd_anneal_iters 1238 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 400
penalty weights 10000.0
args.step pgd_anneal_iters 1239 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 400
penalty weights 10000.0
args.step pgd_anneal_iters 1240 600
dim_v 512
rho, theta 385 tensor(-5.0896e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 400
penalty weights 10000.0
args.step pgd_anneal_iters 1241 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 400
penalty weights 10000.0
args.step pgd_anneal_iters 1242 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 400
penalty weights 10000.0
args.step pgd_anneal_iters 1243 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 400
penalty weights 10000.0
args.step pgd_anneal_iters 1244 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 400
penalty weights 10000.0
args.step pgd_anneal_iters 1245 600
dim_v 512
rho, theta 385 tensor(-1.5899e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 400
penalty weights 10000.0
args.step pgd_anneal_iters 1246 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 400
penalty weights 10000.0
args.step pgd_anneal_iters 1247 600
final projection at end of training
dim_v 512
rho, theta 392 tensor(-1.3711e-07, device='cuda:0')
Epoch: [47][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.49 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1150 (6.1151)	zero_count 0.0000 (30.1470)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.48it/s] 31%|###       | 8/26 [00:00<00:00, 33.46it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.46it/s] 50%|#####     | 13/26 [00:00<00:00, 38.75it/s] 69%|######9   | 18/26 [00:00<00:00, 41.74it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.74it/s] 88%|########8 | 23/26 [00:00<00:00, 40.30it/s]100%|##########| 26/26 [00:00<00:00, 36.91it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.663 (0.663)	test_acc   0.53 (  0.51)	test_minacc   0.50 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.663 (0.663)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.21 (  0.23)
Test: [  20/  26]	Loss 0.671 (0.663)	test_acc   0.50 (  0.51)	test_minacc   0.48 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.671 (0.663)	test_acc_d   0.50 (  0.51)	test_minacc_d   0.48 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.19 (  0.23)
Test: [  26/  26]	Loss 0.664 (0.663)	test_acc   0.49 (  0.51)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.664 (0.663)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.66it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 47/  1]	epoch_time 0.0393 (0.0415)	validation_time 0.0004 (0.0006)	train_time 0.0389 (0.0409)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5057000121474267, 0.49900001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.25it/s] 15%|#5        | 4/26 [00:00<00:01, 12.94it/s] 31%|###       | 8/26 [00:00<00:00, 18.96it/s] 46%|####6     | 12/26 [00:00<00:00, 23.85it/s] 58%|#####7    | 15/26 [00:00<00:00, 23.87it/s] 69%|######9   | 18/26 [00:00<00:00, 24.92it/s] 85%|########4 | 22/26 [00:00<00:00, 28.51it/s] 96%|#########6| 25/26 [00:01<00:00, 28.08it/s]100%|##########| 26/26 [00:01<00:00, 23.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 400
penalty weights 10000.0
args.step pgd_anneal_iters 1248 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 400
penalty weights 10000.0
args.step pgd_anneal_iters 1249 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 400
penalty weights 10000.0
args.step pgd_anneal_iters 1250 600
dim_v 512
rho, theta 364 tensor(1.8028e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 400
penalty weights 10000.0
args.step pgd_anneal_iters 1251 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 400
penalty weights 10000.0
args.step pgd_anneal_iters 1252 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 400
penalty weights 10000.0
args.step pgd_anneal_iters 1253 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 400
penalty weights 10000.0
args.step pgd_anneal_iters 1254 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 400
penalty weights 10000.0
args.step pgd_anneal_iters 1255 600
dim_v 512
rho, theta 355 tensor(-8.8402e-08, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 400
penalty weights 10000.0
args.step pgd_anneal_iters 1256 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 400
penalty weights 10000.0
args.step pgd_anneal_iters 1257 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 400
penalty weights 10000.0
args.step pgd_anneal_iters 1258 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 400
penalty weights 10000.0
args.step pgd_anneal_iters 1259 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 400
penalty weights 10000.0
args.step pgd_anneal_iters 1260 600
dim_v 512
rho, theta 391 tensor(-1.3356e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 400
penalty weights 10000.0
args.step pgd_anneal_iters 1261 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 400
penalty weights 10000.0
args.step pgd_anneal_iters 1262 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 400
penalty weights 10000.0
args.step pgd_anneal_iters 1263 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 400
penalty weights 10000.0
args.step pgd_anneal_iters 1264 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 400
penalty weights 10000.0
args.step pgd_anneal_iters 1265 600
dim_v 512
rho, theta 388 tensor(-6.7787e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 400
penalty weights 10000.0
args.step pgd_anneal_iters 1266 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 400
penalty weights 10000.0
args.step pgd_anneal_iters 1267 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 400
penalty weights 10000.0
args.step pgd_anneal_iters 1268 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 400
penalty weights 10000.0
args.step pgd_anneal_iters 1269 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 400
penalty weights 10000.0
args.step pgd_anneal_iters 1270 600
dim_v 512
rho, theta 376 tensor(-9.2838e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 400
penalty weights 10000.0
args.step pgd_anneal_iters 1271 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 400
penalty weights 10000.0
args.step pgd_anneal_iters 1272 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 400
penalty weights 10000.0
args.step pgd_anneal_iters 1273 600
final projection at end of training
dim_v 512
rho, theta 389 tensor(-3.7780e-07, device='cuda:0')
Epoch: [48][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.48 (  0.51)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1151 (6.1152)	zero_count 0.0000 (31.2000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.21it/s] 23%|##3       | 6/26 [00:00<00:00, 30.19it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.19it/s] 42%|####2     | 11/26 [00:00<00:00, 36.89it/s] 65%|######5   | 17/26 [00:00<00:00, 38.78it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.78it/s] 85%|########4 | 22/26 [00:00<00:00, 41.44it/s]100%|##########| 26/26 [00:00<00:00, 35.38it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.663 (0.663)	test_acc   0.53 (  0.51)	test_minacc   0.48 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.663 (0.663)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.48 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.21 (  0.22)
Test: [  20/  26]	Loss 0.672 (0.663)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.672 (0.663)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.19 (  0.23)
Test: [  26/  26]	Loss 0.664 (0.663)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.664 (0.663)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.65it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 48/  1]	epoch_time 0.0459 (0.0416)	validation_time 0.0003 (0.0006)	train_time 0.0455 (0.0410)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5049000131487846, 0.49800002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.99it/s] 23%|##3       | 6/26 [00:00<00:00, 22.90it/s] 35%|###4      | 9/26 [00:00<00:00, 24.45it/s] 46%|####6     | 12/26 [00:00<00:00, 25.90it/s] 62%|######1   | 16/26 [00:00<00:00, 29.74it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.28it/s] 92%|#########2| 24/26 [00:00<00:00, 29.67it/s]100%|##########| 26/26 [00:00<00:00, 26.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 400
penalty weights 10000.0
args.step pgd_anneal_iters 1274 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 400
penalty weights 10000.0
args.step pgd_anneal_iters 1275 600
dim_v 512
rho, theta 367 tensor(1.4772e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 400
penalty weights 10000.0
args.step pgd_anneal_iters 1276 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 400
penalty weights 10000.0
args.step pgd_anneal_iters 1277 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 400
penalty weights 10000.0
args.step pgd_anneal_iters 1278 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 400
penalty weights 10000.0
args.step pgd_anneal_iters 1279 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 400
penalty weights 10000.0
args.step pgd_anneal_iters 1280 600
dim_v 512
rho, theta 356 tensor(2.2306e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 400
penalty weights 10000.0
args.step pgd_anneal_iters 1281 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 400
penalty weights 10000.0
args.step pgd_anneal_iters 1282 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 400
penalty weights 10000.0
args.step pgd_anneal_iters 1283 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 400
penalty weights 10000.0
args.step pgd_anneal_iters 1284 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 400
penalty weights 10000.0
args.step pgd_anneal_iters 1285 600
dim_v 512
rho, theta 370 tensor(-9.8195e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 400
penalty weights 10000.0
args.step pgd_anneal_iters 1286 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 400
penalty weights 10000.0
args.step pgd_anneal_iters 1287 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 400
penalty weights 10000.0
args.step pgd_anneal_iters 1288 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 400
penalty weights 10000.0
args.step pgd_anneal_iters 1289 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 400
penalty weights 10000.0
args.step pgd_anneal_iters 1290 600
dim_v 512
rho, theta 398 tensor(-8.2461e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 400
penalty weights 10000.0
args.step pgd_anneal_iters 1291 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 400
penalty weights 10000.0
args.step pgd_anneal_iters 1292 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 400
penalty weights 10000.0
args.step pgd_anneal_iters 1293 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 400
penalty weights 10000.0
args.step pgd_anneal_iters 1294 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 400
penalty weights 10000.0
args.step pgd_anneal_iters 1295 600
dim_v 512
rho, theta 376 tensor(-7.3865e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 400
penalty weights 10000.0
args.step pgd_anneal_iters 1296 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 400
penalty weights 10000.0
args.step pgd_anneal_iters 1297 600
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 400
penalty weights 10000.0
args.step pgd_anneal_iters 1298 600
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 400
penalty weights 10000.0
args.step pgd_anneal_iters 1299 600
final projection at end of training
dim_v 512
rho, theta 400 tensor(-8.8471e-07, device='cuda:0')
Epoch: [49][  26/  26]	Loss 0.000 (0.000)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm  39.82 ( 39.82)	train_acc   0.48 (  0.50)	train_minacc   0.41 (  0.49)	train_majacc   0.50 (  0.51)	train_corr   0.00 (  0.00)	l1 6.1150 (6.1152)	zero_count 0.0000 (31.5900)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.79it/s] 27%|##6       | 7/26 [00:00<00:00, 28.47it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.47it/s] 46%|####6     | 12/26 [00:00<00:00, 35.71it/s] 65%|######5   | 17/26 [00:00<00:00, 35.78it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.78it/s] 85%|########4 | 22/26 [00:00<00:00, 39.70it/s]100%|##########| 26/26 [00:00<00:00, 32.99it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.48 (  0.48)	test_minacc   0.56 (  0.56)	test_majacc   0.47 (  0.47)	Loss_d 0.659 (0.659)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.663 (0.663)	test_acc   0.53 (  0.51)	test_minacc   0.48 (  0.51)	test_majacc   0.53 (  0.51)	Loss_d 0.663 (0.663)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.48 (  0.51)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.21 (  0.22)
Test: [  20/  26]	Loss 0.672 (0.663)	test_acc   0.49 (  0.50)	test_minacc   0.48 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.672 (0.663)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.23)
Test: [  26/  26]	Loss 0.664 (0.663)	test_acc   0.48 (  0.50)	test_minacc   0.41 (  0.49)	test_majacc   0.50 (  0.51)	Loss_d 0.664 (0.663)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.22 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.35it/s]
Test: [  0/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.933 (0.933)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.933 (0.933)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.20 (  0.20)
Overall Timing[ 49/  1]	epoch_time 0.0427 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0423 (0.0410)
record: (train_acc, test_acc) (0.7948000273704529, 0.7260000109672546)
last accs (train_acc, test_acc) (0.5041000108718872, 0.49800002574920654)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.171 MB of 0.171 MB uploadedwandb: \ 0.171 MB of 0.171 MB uploadedwandb: | 0.171 MB of 0.171 MB uploadedwandb: / 0.193 MB of 0.202 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                           global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/diagnostics/epoch_time_val █▂▁▁▂▂▁▁▁▂▁▂▁▂▁▂▂▁▁▂▂▂▂▂▂▂▁▂▂▂▂▂▂▂▂▂▂▂▁▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/diagnostics/train_time_val █▂▁▁▂▂▁▁▂▂▁▂▂▂▁▂▂▁▂▂▃▂▂▂▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/diagnostics/validation_time_val █▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/Loss_avg ▇▇▇▇▇▇██▅▆▇▇▁▁▂▂▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/Loss_d_avg ▇▇▇▇▇▇██▅▆▇▇▁▁▂▂▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/Loss_d_val ▇▇▇▇▇▇██▅▆▇▇▁▁▂▂▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/Loss_val ▇▇▇▇▇▇██▅▆▇▇▁▁▂▂▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_acc_avg ▁▁▁▁▂▂▂▃▄▄▄▄███▇▇▇▇▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_acc_d_avg ▁▁▁▁▂▂▂▃▄▄▄▄███▇▇▇▇▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_acc_d_val ▁▁▁▁▂▂▂▃▄▄▄▄███▇▇▇▇▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_acc_val ▁▁▁▁▂▂▂▃▄▄▄▄███▇▇▇▇▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_corr_d_avg ████▇▇▇▇▆▆▆▆▁▁▂▂▃▃▃▂▄▃▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_corr_d_val ████▇▇▇▇▆▆▆▆▁▁▂▂▃▃▃▂▄▃▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_majacc_avg █████████▇█▇▅▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_majacc_d_avg █████████▇█▇▅▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_majacc_d_val █████████▇█▇▅▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_majacc_val █████████▇█▇▅▅▆▆▆▆▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_minacc_avg ▁▁▁▁▂▂▂▂▄▄▄▄███▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_minacc_d_avg ▁▁▁▁▂▂▂▂▄▄▄▄███▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_minacc_d_val ▁▁▁▁▂▂▂▂▄▄▄▄███▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_minacc_val ▁▁▁▁▂▂▂▂▄▄▄▄███▇▇▇▇▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▂▁▁▁▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/Loss_val ██▇▇▆▆▆▆▆▅▅▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/l1_avg ▆▄▄▄▅▅▅▅▅▅▇█▇▁▁▁▂▃▃▆▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/l1_val ▅▅▅▅▆▆▆▆▄▇▇█▃▁▁▁▁▂▂▆▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_acc_avg ▆▇▇▇▇▇▇▇█████▆▆▆▆▆▆▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_acc_val ▇▇▇▇▇▇██████▆▅▆▆▇▇▇▃▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_majacc_avg ▇█████▇▇▇▇▇▇▇▅▄▅▅▅▅▄▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_majacc_val ██████▇▇▇▇▇▇▄▄▅▄▅▅▅▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_minacc_avg ▁▁▁▁▂▂▃▄▄▅▅▅▆██████▆▄▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_minacc_val ▁▁▁▁▂▂▄▄▆▅▅▅███▇███▇▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_nll_avg ▇▄▄▄▃▃▂▂▂▁▁▁▂▅▄▄▄▃▃█████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_nll_val ▄▄▄▃▂▂▂▂▂▁▁▁▅▅▄▄▃▃▃█████████████████████
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_penalty_avg █▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_penalty_val █▇▆▆▄▃▃▃▂▂▂▂▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/weight_norm_avg ▁▂▂▂▂▂▂▂▃▃▃▃▃▃▃▃▃▃▃▄████████████████████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/weight_norm_val ▁▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▆████████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▅█▆▃▁▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▁▅▁▁▁▅▁▁▁▅▁▁▁▄▁▁
wandb: 
wandb: Run summary:
wandb:                                                                           global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/diagnostics/epoch_time_val 0.04273
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/diagnostics/train_time_val 0.04229
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/diagnostics/validation_time_val 0.00043
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/Loss_avg 0.93308
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/Loss_d_avg 0.93308
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/Loss_d_val 0.93308
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/Loss_val 0.93308
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_acc_avg 0.498
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_acc_d_avg 0.498
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_acc_d_val 0.498
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_acc_val 0.498
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_corr_d_avg 0.20143
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_corr_d_val 0.20143
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_minacc_avg 0.49778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_minacc_d_avg 0.49778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_minacc_d_val 0.49778
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/test/test_minacc_val 0.49778
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/Loss_avg 7e-05
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/Loss_val 7e-05
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/l1_avg 6.11516
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/l1_val 6.11496
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_acc_avg 0.5049
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_acc_val 0.484
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_majacc_avg 0.5074
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_majacc_val 0.49761
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_minacc_avg 0.49277
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_minacc_val 0.41463
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_nll_avg 0.66314
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_nll_val 0.66373
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_penalty_avg 0.0
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/weight_norm_avg 39.82362
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/weight_norm_val 39.82364
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/zero_count_avg 31.59
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/97/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/ubpg65ij
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_154640-ubpg65ij/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
