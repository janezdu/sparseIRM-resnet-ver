hello
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_190908-f8vnvhs3
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/f8vnvhs3
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=240000, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Conv2d(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1207
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5999, 3, 32, 32) (6001, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:42,  1.69s/it] 19%|#9        | 5/26 [00:01<00:05,  3.63it/s] 35%|###4      | 9/26 [00:01<00:02,  7.21it/s] 50%|#####     | 13/26 [00:02<00:01, 11.17it/s] 65%|######5   | 17/26 [00:02<00:00, 15.28it/s] 81%|########  | 21/26 [00:02<00:00, 19.35it/s] 96%|#########6| 25/26 [00:02<00:00, 22.83it/s]100%|##########| 26/26 [00:02<00:00,  9.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 240000
penalty weights 0.0
Epoch: [0][  26/  26]	Loss 0.425 (0.519)	train_nll   0.42 (  0.52)	train_penalty   0.05 (  0.18)	weight_norm  20.98 ( 18.19)	train_acc   0.84 (  0.81)	train_minacc   0.03 (  0.07)	train_majacc   0.99 (  0.94)	train_corr   0.00 (  0.00)	l1 7.0602 (8.2227)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 27%|##6       | 7/26 [00:00<00:00, 30.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.36it/s] 46%|####6     | 12/26 [00:00<00:00, 36.47it/s] 65%|######5   | 17/26 [00:00<00:00, 38.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.94it/s] 88%|########8 | 23/26 [00:00<00:00, 44.12it/s]100%|##########| 26/26 [00:00<00:00, 36.24it/s]
Test: [   0/  26]	Loss 0.437 (0.437)	test_acc   0.83 (  0.83)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.437 (0.437)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.405 (0.422)	test_acc   0.85 (  0.84)	test_minacc   0.05 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.405 (0.422)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.05 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.392 (0.413)	test_acc   0.87 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.392 (0.413)	test_acc_d   0.87 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.418 (0.409)	test_acc   0.84 (  0.85)	test_minacc   0.03 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.418 (0.409)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.03 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.49it/s]100%|##########| 1/1 [00:00<00:00,  2.49it/s]
Test: [  0/  1]	Loss 1.620 (1.620)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.620 (1.620)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.620 (1.620)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.620 (1.620)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/112/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0861 (0.0861)	validation_time 0.0068 (0.0068)	train_time 0.0757 (0.0757)
record: (train_acc, test_acc) (0.8460000204443932, 0.1120000034570694)
last accs (train_acc, test_acc) (0.8460000204443932, 0.1120000034570694)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.11it/s] 23%|##3       | 6/26 [00:00<00:00, 23.99it/s] 38%|###8      | 10/26 [00:00<00:00, 28.32it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.89it/s] 69%|######9   | 18/26 [00:00<00:00, 32.25it/s] 85%|########4 | 22/26 [00:00<00:00, 33.29it/s]100%|##########| 26/26 [00:00<00:00, 34.52it/s]100%|##########| 26/26 [00:00<00:00, 28.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 240000
penalty weights 0.0
Epoch: [1][  26/  26]	Loss 0.415 (0.413)	train_nll   0.41 (  0.41)	train_penalty   0.04 (  0.06)	weight_norm  22.11 ( 21.76)	train_acc   0.84 (  0.85)	train_minacc   0.03 (  0.03)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 6.6190 (6.8603)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02,  9.52it/s] 27%|##6       | 7/26 [00:00<00:00, 24.31it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.31it/s] 46%|####6     | 12/26 [00:00<00:00, 32.76it/s] 65%|######5   | 17/26 [00:00<00:00, 37.43it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.43it/s] 85%|########4 | 22/26 [00:00<00:00, 38.03it/s]100%|##########| 26/26 [00:00<00:00, 33.09it/s]
Test: [   0/  26]	Loss 0.411 (0.411)	test_acc   0.83 (  0.83)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.411 (0.411)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.389 (0.404)	test_acc   0.85 (  0.84)	test_minacc   0.05 (  0.02)	test_majacc   0.99 (  1.00)	Loss_d 0.389 (0.404)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.05 (  0.02)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.380 (0.394)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.380 (0.394)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  26/  26]	Loss 0.404 (0.391)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.404 (0.391)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.26it/s]
Test: [  0/  1]	Loss 1.537 (1.537)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.537 (1.537)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Test: [  1/  1]	Loss 1.537 (1.537)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.537 (1.537)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.92 (  0.92)
Overall Timing[  1/  1]	epoch_time 0.0416 (0.0638)	validation_time 0.0005 (0.0036)	train_time 0.0411 (0.0584)
record: (train_acc, test_acc) (0.8460000204443932, 0.1120000034570694)
last accs (train_acc, test_acc) (0.8477000298500061, 0.11000000685453415)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.83it/s] 12%|#1        | 3/26 [00:00<00:01, 11.99it/s] 27%|##6       | 7/26 [00:00<00:00, 21.46it/s] 42%|####2     | 11/26 [00:00<00:00, 26.10it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.61it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.52it/s] 88%|########8 | 23/26 [00:00<00:00, 32.38it/s]100%|##########| 26/26 [00:00<00:00, 26.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 240000
penalty weights 0.0
Epoch: [2][  26/  26]	Loss 0.389 (0.393)	train_nll   0.39 (  0.39)	train_penalty   0.03 (  0.05)	weight_norm  22.24 ( 22.19)	train_acc   0.82 (  0.85)	train_minacc   0.08 (  0.05)	train_majacc   0.94 (  0.99)	train_corr   0.00 (  0.00)	l1 6.3861 (6.4865)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.92it/s] 23%|##3       | 6/26 [00:00<00:00, 23.19it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.19it/s] 42%|####2     | 11/26 [00:00<00:00, 32.12it/s] 62%|######1   | 16/26 [00:00<00:00, 37.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.47it/s] 81%|########  | 21/26 [00:00<00:00, 37.06it/s]100%|##########| 26/26 [00:00<00:00, 40.56it/s]100%|##########| 26/26 [00:00<00:00, 31.92it/s]
Test: [   0/  26]	Loss 0.374 (0.374)	test_acc   0.84 (  0.84)	test_minacc   0.17 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 0.374 (0.374)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.344 (0.366)	test_acc   0.86 (  0.85)	test_minacc   0.17 (  0.14)	test_majacc   0.98 (  0.98)	Loss_d 0.344 (0.366)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.17 (  0.14)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.91)
Test: [  20/  26]	Loss 0.332 (0.359)	test_acc   0.87 (  0.85)	test_minacc   0.26 (  0.16)	test_majacc   0.96 (  0.97)	Loss_d 0.332 (0.359)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.26 (  0.16)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.90 (  0.91)
Test: [  26/  26]	Loss 0.352 (0.354)	test_acc   0.84 (  0.85)	test_minacc   0.05 (  0.16)	test_majacc   0.98 (  0.98)	Loss_d 0.352 (0.354)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.05 (  0.16)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.84it/s]
Test: [  0/  1]	Loss 1.533 (1.533)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.96 (  0.96)	Loss_d 1.533 (1.533)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.533 (1.533)	test_acc   0.21 (  0.21)	test_minacc   0.13 (  0.13)	test_majacc   0.96 (  0.96)	Loss_d 1.533 (1.533)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.13 (  0.13)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/112/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0411 (0.0563)	validation_time 0.0003 (0.0025)	train_time 0.0407 (0.0525)
record: (train_acc, test_acc) (0.8525000258684158, 0.21400001645088196)
last accs (train_acc, test_acc) (0.8525000258684158, 0.21400001645088196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.96it/s] 15%|#5        | 4/26 [00:00<00:01, 14.83it/s] 31%|###       | 8/26 [00:00<00:00, 22.22it/s] 46%|####6     | 12/26 [00:00<00:00, 27.07it/s] 62%|######1   | 16/26 [00:00<00:00, 30.30it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.25it/s] 92%|#########2| 24/26 [00:00<00:00, 33.92it/s]100%|##########| 26/26 [00:00<00:00, 26.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 240000
penalty weights 0.0
Epoch: [3][  26/  26]	Loss 0.364 (0.373)	train_nll   0.36 (  0.37)	train_penalty   0.02 (  0.04)	weight_norm  22.30 ( 22.27)	train_acc   0.82 (  0.85)	train_minacc   0.16 (  0.13)	train_majacc   0.94 (  0.97)	train_corr   0.00 (  0.00)	l1 6.2019 (6.3330)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.70it/s] 19%|#9        | 5/26 [00:00<00:00, 23.46it/s] 38%|###8      | 10/26 [00:00<00:00, 33.90it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.90it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.18it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.22it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.22it/s] 96%|#########6| 25/26 [00:00<00:00, 41.52it/s]100%|##########| 26/26 [00:00<00:00, 33.43it/s]
Test: [   0/  26]	Loss 0.380 (0.380)	test_acc   0.85 (  0.85)	test_minacc   0.23 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 0.380 (0.380)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.350 (0.369)	test_acc   0.85 (  0.84)	test_minacc   0.25 (  0.23)	test_majacc   0.95 (  0.96)	Loss_d 0.350 (0.369)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.25 (  0.23)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.341 (0.356)	test_acc   0.88 (  0.85)	test_minacc   0.36 (  0.26)	test_majacc   0.96 (  0.95)	Loss_d 0.341 (0.356)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.36 (  0.26)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.87 (  0.88)
Test: [  26/  26]	Loss 0.349 (0.352)	test_acc   0.84 (  0.85)	test_minacc   0.22 (  0.26)	test_majacc   0.95 (  0.95)	Loss_d 0.349 (0.352)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.22 (  0.26)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.89 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.67it/s]
Test: [  0/  1]	Loss 1.474 (1.474)	test_acc   0.29 (  0.29)	test_minacc   0.21 (  0.21)	test_majacc   0.94 (  0.94)	Loss_d 1.474 (1.474)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.72 (  0.72)
Test: [  1/  1]	Loss 1.474 (1.474)	test_acc   0.29 (  0.29)	test_minacc   0.21 (  0.21)	test_majacc   0.94 (  0.94)	Loss_d 1.474 (1.474)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.72 (  0.72)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/112/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0393 (0.0520)	validation_time 0.0004 (0.0020)	train_time 0.0389 (0.0491)
record: (train_acc, test_acc) (0.8498000202178955, 0.2850000262260437)
last accs (train_acc, test_acc) (0.8498000202178955, 0.2850000262260437)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.94it/s] 19%|#9        | 5/26 [00:00<00:00, 21.49it/s] 35%|###4      | 9/26 [00:00<00:00, 27.67it/s] 50%|#####     | 13/26 [00:00<00:00, 30.85it/s] 65%|######5   | 17/26 [00:00<00:00, 32.73it/s] 81%|########  | 21/26 [00:00<00:00, 33.84it/s] 96%|#########6| 25/26 [00:00<00:00, 35.20it/s]100%|##########| 26/26 [00:00<00:00, 29.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 240000
penalty weights 0.0
Epoch: [4][  26/  26]	Loss 0.331 (0.345)	train_nll   0.33 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.36 ( 22.33)	train_acc   0.85 (  0.85)	train_minacc   0.32 (  0.22)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 6.1770 (6.2783)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.16it/s] 31%|###       | 8/26 [00:00<00:00, 36.86it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.86it/s] 50%|#####     | 13/26 [00:00<00:00, 40.61it/s] 69%|######9   | 18/26 [00:00<00:00, 42.64it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.64it/s] 88%|########8 | 23/26 [00:00<00:00, 40.75it/s]100%|##########| 26/26 [00:00<00:00, 38.74it/s]
Test: [   0/  26]	Loss 0.347 (0.347)	test_acc   0.86 (  0.86)	test_minacc   0.32 (  0.32)	test_majacc   0.98 (  0.98)	Loss_d 0.347 (0.347)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.300 (0.330)	test_acc   0.86 (  0.86)	test_minacc   0.37 (  0.35)	test_majacc   0.95 (  0.96)	Loss_d 0.300 (0.330)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.37 (  0.35)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.87 (  0.88)
Test: [  20/  26]	Loss 0.317 (0.317)	test_acc   0.86 (  0.87)	test_minacc   0.38 (  0.36)	test_majacc   0.94 (  0.96)	Loss_d 0.317 (0.317)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.38 (  0.36)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.86 (  0.87)
Test: [  26/  26]	Loss 0.315 (0.313)	test_acc   0.86 (  0.87)	test_minacc   0.32 (  0.37)	test_majacc   0.95 (  0.96)	Loss_d 0.315 (0.313)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.32 (  0.37)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.87 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.03it/s]
Test: [  0/  1]	Loss 1.554 (1.554)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 1.554 (1.554)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 1.554 (1.554)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 1.554 (1.554)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.61 (  0.61)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/112/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0463 (0.0509)	validation_time 0.0003 (0.0017)	train_time 0.0459 (0.0485)
record: (train_acc, test_acc) (0.867900021970272, 0.3330000042915344)
last accs (train_acc, test_acc) (0.867900021970272, 0.3330000042915344)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.58it/s] 15%|#5        | 4/26 [00:00<00:01, 18.02it/s] 31%|###       | 8/26 [00:00<00:00, 24.72it/s] 46%|####6     | 12/26 [00:00<00:00, 27.94it/s] 62%|######1   | 16/26 [00:00<00:00, 29.61it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.44it/s] 92%|#########2| 24/26 [00:00<00:00, 33.17it/s]100%|##########| 26/26 [00:00<00:00, 27.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 240000
penalty weights 0.0
Epoch: [5][  26/  26]	Loss 0.292 (0.318)	train_nll   0.29 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.43 ( 22.39)	train_acc   0.87 (  0.86)	train_minacc   0.35 (  0.28)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.2762 (6.1845)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.90it/s] 27%|##6       | 7/26 [00:00<00:00, 28.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.68it/s] 46%|####6     | 12/26 [00:00<00:00, 34.88it/s] 65%|######5   | 17/26 [00:00<00:00, 35.38it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.38it/s] 85%|########4 | 22/26 [00:00<00:00, 39.26it/s]100%|##########| 26/26 [00:00<00:00, 33.00it/s]
Test: [   0/  26]	Loss 0.316 (0.316)	test_acc   0.86 (  0.86)	test_minacc   0.35 (  0.35)	test_majacc   0.96 (  0.96)	Loss_d 0.316 (0.316)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.266 (0.299)	test_acc   0.88 (  0.87)	test_minacc   0.44 (  0.38)	test_majacc   0.96 (  0.97)	Loss_d 0.266 (0.299)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.44 (  0.38)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.87 (  0.88)
Test: [  20/  26]	Loss 0.284 (0.291)	test_acc   0.87 (  0.88)	test_minacc   0.42 (  0.40)	test_majacc   0.94 (  0.96)	Loss_d 0.284 (0.291)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.42 (  0.40)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  26/  26]	Loss 0.272 (0.286)	test_acc   0.88 (  0.88)	test_minacc   0.41 (  0.41)	test_majacc   0.97 (  0.96)	Loss_d 0.272 (0.286)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.48it/s]
Test: [  0/  1]	Loss 1.616 (1.616)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 1.616 (1.616)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.63 (  0.63)
Test: [  1/  1]	Loss 1.616 (1.616)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 1.616 (1.616)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.63 (  0.63)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/112/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0404 (0.0491)	validation_time 0.0004 (0.0015)	train_time 0.0400 (0.0471)
record: (train_acc, test_acc) (0.8773000249862671, 0.35200002789497375)
last accs (train_acc, test_acc) (0.8773000249862671, 0.35200002789497375)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 15%|#5        | 4/26 [00:00<00:01, 16.84it/s] 31%|###       | 8/26 [00:00<00:00, 24.39it/s] 46%|####6     | 12/26 [00:00<00:00, 28.29it/s] 62%|######1   | 16/26 [00:00<00:00, 30.28it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.60it/s] 92%|#########2| 24/26 [00:00<00:00, 33.02it/s]100%|##########| 26/26 [00:00<00:00, 27.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 240000
penalty weights 0.0
Epoch: [6][  26/  26]	Loss 0.267 (0.303)	train_nll   0.27 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.53 ( 22.48)	train_acc   0.86 (  0.87)	train_minacc   0.35 (  0.35)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 6.2267 (6.3061)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.64it/s] 27%|##6       | 7/26 [00:00<00:00, 32.40it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.40it/s] 46%|####6     | 12/26 [00:00<00:00, 38.38it/s] 65%|######5   | 17/26 [00:00<00:00, 40.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.41it/s] 85%|########4 | 22/26 [00:00<00:00, 42.68it/s]100%|##########| 26/26 [00:00<00:00, 37.07it/s]
Test: [   0/  26]	Loss 0.310 (0.310)	test_acc   0.87 (  0.87)	test_minacc   0.48 (  0.48)	test_majacc   0.95 (  0.95)	Loss_d 0.310 (0.310)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.275 (0.294)	test_acc   0.89 (  0.88)	test_minacc   0.47 (  0.47)	test_majacc   0.97 (  0.96)	Loss_d 0.275 (0.294)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  20/  26]	Loss 0.279 (0.283)	test_acc   0.88 (  0.88)	test_minacc   0.53 (  0.49)	test_majacc   0.94 (  0.95)	Loss_d 0.279 (0.283)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.85 (  0.86)
Test: [  26/  26]	Loss 0.249 (0.279)	test_acc   0.88 (  0.88)	test_minacc   0.46 (  0.49)	test_majacc   0.95 (  0.95)	Loss_d 0.249 (0.279)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.44it/s]
Test: [  0/  1]	Loss 1.647 (1.647)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.93 (  0.93)	Loss_d 1.647 (1.647)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 1.647 (1.647)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.93 (  0.93)	Loss_d 1.647 (1.647)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.62 (  0.62)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/112/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0394 (0.0477)	validation_time 0.0004 (0.0013)	train_time 0.0390 (0.0459)
record: (train_acc, test_acc) (0.8834000290632248, 0.37300002574920654)
last accs (train_acc, test_acc) (0.8834000290632248, 0.37300002574920654)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.51it/s] 19%|#9        | 5/26 [00:00<00:00, 22.04it/s] 35%|###4      | 9/26 [00:00<00:00, 27.45it/s] 50%|#####     | 13/26 [00:00<00:00, 30.51it/s] 65%|######5   | 17/26 [00:00<00:00, 32.42it/s] 81%|########  | 21/26 [00:00<00:00, 33.54it/s] 96%|#########6| 25/26 [00:00<00:00, 34.43it/s]100%|##########| 26/26 [00:00<00:00, 29.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 240000
penalty weights 0.0
Epoch: [7][  26/  26]	Loss 0.257 (0.283)	train_nll   0.26 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.69 ( 22.61)	train_acc   0.88 (  0.87)	train_minacc   0.51 (  0.44)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 6.4575 (6.4556)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.12it/s] 23%|##3       | 6/26 [00:00<00:01, 17.23it/s]                                               23%|##3       | 6/26 [00:00<00:01, 17.23it/s] 42%|####2     | 11/26 [00:00<00:00, 26.48it/s] 62%|######1   | 16/26 [00:00<00:00, 33.35it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.35it/s] 81%|########  | 21/26 [00:00<00:00, 34.38it/s]100%|##########| 26/26 [00:00<00:00, 38.61it/s]100%|##########| 26/26 [00:00<00:00, 28.02it/s]
Test: [   0/  26]	Loss 0.296 (0.296)	test_acc   0.89 (  0.89)	test_minacc   0.52 (  0.52)	test_majacc   0.97 (  0.97)	Loss_d 0.296 (0.296)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.266 (0.277)	test_acc   0.89 (  0.89)	test_minacc   0.53 (  0.51)	test_majacc   0.96 (  0.96)	Loss_d 0.266 (0.277)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.85)
Test: [  20/  26]	Loss 0.266 (0.268)	test_acc   0.87 (  0.89)	test_minacc   0.45 (  0.53)	test_majacc   0.93 (  0.95)	Loss_d 0.266 (0.268)	test_acc_d   0.87 (  0.89)	test_minacc_d   0.45 (  0.53)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.85 (  0.85)
Test: [  26/  26]	Loss 0.221 (0.263)	test_acc   0.90 (  0.89)	test_minacc   0.54 (  0.54)	test_majacc   0.96 (  0.95)	Loss_d 0.221 (0.263)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.86 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.36it/s]
Test: [  0/  1]	Loss 1.727 (1.727)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 1.727 (1.727)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 1.727 (1.727)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 1.727 (1.727)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Overall Timing[  7/  1]	epoch_time 0.0402 (0.0468)	validation_time 0.0003 (0.0012)	train_time 0.0399 (0.0452)
record: (train_acc, test_acc) (0.8834000290632248, 0.37300002574920654)
last accs (train_acc, test_acc) (0.8914000176787377, 0.37300002574920654)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.50it/s] 19%|#9        | 5/26 [00:00<00:01, 19.92it/s] 35%|###4      | 9/26 [00:00<00:00, 25.92it/s] 50%|#####     | 13/26 [00:00<00:00, 29.21it/s] 65%|######5   | 17/26 [00:00<00:00, 31.56it/s] 81%|########  | 21/26 [00:00<00:00, 32.86it/s] 96%|#########6| 25/26 [00:00<00:00, 33.51it/s]100%|##########| 26/26 [00:00<00:00, 27.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 240000
penalty weights 0.0
Epoch: [8][  26/  26]	Loss 0.269 (0.279)	train_nll   0.27 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.88 ( 22.77)	train_acc   0.88 (  0.88)	train_minacc   0.54 (  0.46)	train_majacc   0.94 (  0.95)	train_corr   0.00 (  0.00)	l1 6.1088 (6.4359)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.31it/s] 23%|##3       | 6/26 [00:00<00:00, 26.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.43it/s] 42%|####2     | 11/26 [00:00<00:00, 34.00it/s] 62%|######1   | 16/26 [00:00<00:00, 39.34it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.34it/s] 81%|########  | 21/26 [00:00<00:00, 38.61it/s]100%|##########| 26/26 [00:00<00:00, 41.61it/s]100%|##########| 26/26 [00:00<00:00, 34.02it/s]
Test: [   0/  26]	Loss 0.305 (0.305)	test_acc   0.87 (  0.87)	test_minacc   0.52 (  0.52)	test_majacc   0.94 (  0.94)	Loss_d 0.305 (0.305)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.294 (0.298)	test_acc   0.86 (  0.87)	test_minacc   0.58 (  0.52)	test_majacc   0.91 (  0.93)	Loss_d 0.294 (0.298)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.58 (  0.52)	test_majacc_d   0.91 (  0.93)	test_corr_d   0.80 (  0.82)
Test: [  20/  26]	Loss 0.295 (0.290)	test_acc   0.86 (  0.87)	test_minacc   0.55 (  0.56)	test_majacc   0.91 (  0.93)	Loss_d 0.295 (0.290)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.91 (  0.93)	test_corr_d   0.81 (  0.81)
Test: [  26/  26]	Loss 0.251 (0.287)	test_acc   0.88 (  0.87)	test_minacc   0.65 (  0.57)	test_majacc   0.92 (  0.93)	Loss_d 0.251 (0.287)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.65 (  0.57)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.81 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.09it/s]
Test: [  0/  1]	Loss 1.591 (1.591)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 1.591 (1.591)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 1.591 (1.591)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 1.591 (1.591)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.53 (  0.53)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/112/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0387 (0.0459)	validation_time 0.0004 (0.0011)	train_time 0.0383 (0.0444)
record: (train_acc, test_acc) (0.8716000264883041, 0.41700002551078796)
last accs (train_acc, test_acc) (0.8716000264883041, 0.41700002551078796)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.95it/s] 12%|#1        | 3/26 [00:00<00:01, 12.75it/s] 27%|##6       | 7/26 [00:00<00:00, 22.20it/s] 42%|####2     | 11/26 [00:00<00:00, 27.23it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.01it/s] 88%|########8 | 23/26 [00:00<00:00, 33.37it/s]100%|##########| 26/26 [00:00<00:00, 27.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 240000
penalty weights 0.0
Epoch: [9][  26/  26]	Loss 0.234 (0.266)	train_nll   0.23 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.10 ( 23.00)	train_acc   0.90 (  0.89)	train_minacc   0.59 (  0.50)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 6.3940 (6.4394)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.13it/s] 35%|###4      | 9/26 [00:00<00:00, 38.68it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.68it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.31it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.31it/s] 92%|#########2| 24/26 [00:00<00:00, 41.73it/s]100%|##########| 26/26 [00:00<00:00, 38.50it/s]
Test: [   0/  26]	Loss 0.279 (0.279)	test_acc   0.89 (  0.89)	test_minacc   0.59 (  0.59)	test_majacc   0.95 (  0.95)	Loss_d 0.279 (0.279)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.249 (0.259)	test_acc   0.90 (  0.89)	test_minacc   0.68 (  0.62)	test_majacc   0.94 (  0.94)	Loss_d 0.249 (0.259)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.68 (  0.62)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.79 (  0.79)
Test: [  20/  26]	Loss 0.234 (0.249)	test_acc   0.89 (  0.89)	test_minacc   0.62 (  0.66)	test_majacc   0.93 (  0.94)	Loss_d 0.234 (0.249)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.62 (  0.66)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.78 (  0.78)
Test: [  26/  26]	Loss 0.201 (0.244)	test_acc   0.93 (  0.90)	test_minacc   0.76 (  0.67)	test_majacc   0.96 (  0.94)	Loss_d 0.201 (0.244)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.76 (  0.67)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.81 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.23it/s]
Test: [  0/  1]	Loss 1.715 (1.715)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.89 (  0.89)	Loss_d 1.715 (1.715)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 1.715 (1.715)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.89 (  0.89)	Loss_d 1.715 (1.715)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.39 (  0.39)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/112/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0401 (0.0453)	validation_time 0.0004 (0.0010)	train_time 0.0397 (0.0439)
record: (train_acc, test_acc) (0.8965000196695327, 0.45100003480911255)
last accs (train_acc, test_acc) (0.8965000196695327, 0.45100003480911255)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 19%|#9        | 5/26 [00:00<00:01, 17.60it/s] 35%|###4      | 9/26 [00:00<00:00, 24.29it/s] 50%|#####     | 13/26 [00:00<00:00, 28.38it/s] 65%|######5   | 17/26 [00:00<00:00, 30.87it/s] 81%|########  | 21/26 [00:00<00:00, 32.48it/s] 96%|#########6| 25/26 [00:00<00:00, 33.67it/s]100%|##########| 26/26 [00:00<00:00, 26.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 240000
penalty weights 0.0
Epoch: [10][  26/  26]	Loss 0.176 (0.256)	train_nll   0.18 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  23.33 ( 23.22)	train_acc   0.92 (  0.89)	train_minacc   0.65 (  0.53)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.6930 (6.3212)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.93it/s] 31%|###       | 8/26 [00:00<00:00, 38.67it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.67it/s] 50%|#####     | 13/26 [00:00<00:00, 37.99it/s] 69%|######9   | 18/26 [00:00<00:00, 41.36it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.36it/s] 88%|########8 | 23/26 [00:00<00:00, 42.83it/s]100%|##########| 26/26 [00:00<00:00, 37.69it/s]
Test: [   0/  26]	Loss 0.260 (0.260)	test_acc   0.90 (  0.90)	test_minacc   0.65 (  0.65)	test_majacc   0.95 (  0.95)	Loss_d 0.260 (0.260)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.212 (0.227)	test_acc   0.90 (  0.90)	test_minacc   0.75 (  0.69)	test_majacc   0.93 (  0.94)	Loss_d 0.212 (0.227)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.75 (  0.69)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.79 (  0.79)
Test: [  20/  26]	Loss 0.197 (0.221)	test_acc   0.91 (  0.91)	test_minacc   0.68 (  0.71)	test_majacc   0.95 (  0.94)	Loss_d 0.197 (0.221)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.68 (  0.71)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.80 (  0.79)
Test: [  26/  26]	Loss 0.144 (0.215)	test_acc   0.95 (  0.91)	test_minacc   0.84 (  0.72)	test_majacc   0.97 (  0.94)	Loss_d 0.144 (0.215)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.84 (  0.72)	test_majacc_d   0.97 (  0.94)	test_corr_d   0.81 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.11it/s]
Test: [  0/  1]	Loss 2.013 (2.013)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 2.013 (2.013)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 2.013 (2.013)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 2.013 (2.013)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.43 (  0.43)
Overall Timing[ 10/  1]	epoch_time 0.0411 (0.0449)	validation_time 0.0004 (0.0010)	train_time 0.0407 (0.0436)
record: (train_acc, test_acc) (0.8965000196695327, 0.45100003480911255)
last accs (train_acc, test_acc) (0.9086000176668168, 0.45000001788139343)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 12%|#1        | 3/26 [00:00<00:01, 11.85it/s] 27%|##6       | 7/26 [00:00<00:00, 21.26it/s] 42%|####2     | 11/26 [00:00<00:00, 26.21it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.34it/s] 88%|########8 | 23/26 [00:00<00:00, 32.71it/s]100%|##########| 26/26 [00:00<00:00, 26.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 240000
penalty weights 0.0
Epoch: [11][  26/  26]	Loss 0.152 (0.233)	train_nll   0.15 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.60 ( 23.46)	train_acc   0.95 (  0.90)	train_minacc   0.76 (  0.62)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 7.1975 (6.6728)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.07it/s] 27%|##6       | 7/26 [00:00<00:00, 33.49it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.49it/s] 46%|####6     | 12/26 [00:00<00:00, 39.97it/s] 65%|######5   | 17/26 [00:00<00:00, 40.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.58it/s] 85%|########4 | 22/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 37.27it/s]
Test: [   0/  26]	Loss 0.261 (0.261)	test_acc   0.89 (  0.89)	test_minacc   0.62 (  0.62)	test_majacc   0.95 (  0.95)	Loss_d 0.261 (0.261)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.194 (0.227)	test_acc   0.91 (  0.90)	test_minacc   0.71 (  0.71)	test_majacc   0.95 (  0.94)	Loss_d 0.194 (0.227)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.77 (  0.76)
Test: [  20/  26]	Loss 0.191 (0.226)	test_acc   0.93 (  0.90)	test_minacc   0.74 (  0.71)	test_majacc   0.96 (  0.94)	Loss_d 0.191 (0.226)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.74 (  0.71)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.79 (  0.76)
Test: [  26/  26]	Loss 0.098 (0.214)	test_acc   0.98 (  0.91)	test_minacc   0.89 (  0.73)	test_majacc   0.99 (  0.94)	Loss_d 0.098 (0.214)	test_acc_d   0.98 (  0.91)	test_minacc_d   0.89 (  0.73)	test_majacc_d   0.99 (  0.94)	test_corr_d   0.78 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.42it/s]
Test: [  0/  1]	Loss 2.409 (2.409)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.92 (  0.92)	Loss_d 2.409 (2.409)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 2.409 (2.409)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.92 (  0.92)	Loss_d 2.409 (2.409)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.43 (  0.43)
Overall Timing[ 11/  1]	epoch_time 0.0385 (0.0444)	validation_time 0.0004 (0.0009)	train_time 0.0381 (0.0432)
record: (train_acc, test_acc) (0.8965000196695327, 0.45100003480911255)
last accs (train_acc, test_acc) (0.9101000221967697, 0.42500001192092896)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.12it/s] 19%|#9        | 5/26 [00:00<00:01, 20.37it/s] 35%|###4      | 9/26 [00:00<00:00, 26.42it/s] 50%|#####     | 13/26 [00:00<00:00, 29.97it/s] 65%|######5   | 17/26 [00:00<00:00, 31.55it/s] 81%|########  | 21/26 [00:00<00:00, 32.95it/s] 96%|#########6| 25/26 [00:00<00:00, 33.24it/s]100%|##########| 26/26 [00:00<00:00, 27.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 240000
penalty weights 0.0
Epoch: [12][  26/  26]	Loss 0.162 (0.229)	train_nll   0.16 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.96 ( 23.78)	train_acc   0.94 (  0.91)	train_minacc   0.76 (  0.64)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.8147 (6.8138)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.63it/s] 15%|#5        | 4/26 [00:00<00:01, 19.59it/s] 38%|###8      | 10/26 [00:00<00:00, 33.46it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.46it/s] 62%|######1   | 16/26 [00:00<00:00, 39.56it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.56it/s] 81%|########  | 21/26 [00:00<00:00, 41.65it/s]100%|##########| 26/26 [00:00<00:00, 43.23it/s]100%|##########| 26/26 [00:00<00:00, 34.70it/s]
Test: [   0/  26]	Loss 0.242 (0.242)	test_acc   0.91 (  0.91)	test_minacc   0.67 (  0.67)	test_majacc   0.96 (  0.96)	Loss_d 0.242 (0.242)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.217 (0.239)	test_acc   0.89 (  0.90)	test_minacc   0.66 (  0.64)	test_majacc   0.94 (  0.94)	Loss_d 0.217 (0.239)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.66 (  0.64)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.80)
Test: [  20/  26]	Loss 0.216 (0.237)	test_acc   0.91 (  0.90)	test_minacc   0.64 (  0.66)	test_majacc   0.95 (  0.94)	Loss_d 0.216 (0.237)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.64 (  0.66)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.81 (  0.80)
Test: [  26/  26]	Loss 0.120 (0.224)	test_acc   0.96 (  0.91)	test_minacc   0.81 (  0.68)	test_majacc   0.98 (  0.95)	Loss_d 0.120 (0.224)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.81 (  0.68)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.83 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.09it/s]
Test: [  0/  1]	Loss 2.296 (2.296)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.91 (  0.91)	Loss_d 2.296 (2.296)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 2.296 (2.296)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.91 (  0.91)	Loss_d 2.296 (2.296)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.51 (  0.51)
Overall Timing[ 12/  1]	epoch_time 0.0425 (0.0443)	validation_time 0.0005 (0.0009)	train_time 0.0420 (0.0431)
record: (train_acc, test_acc) (0.8965000196695327, 0.45100003480911255)
last accs (train_acc, test_acc) (0.906700024843216, 0.398000031709671)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 19%|#9        | 5/26 [00:00<00:00, 21.02it/s] 35%|###4      | 9/26 [00:00<00:00, 27.43it/s] 50%|#####     | 13/26 [00:00<00:00, 29.77it/s] 65%|######5   | 17/26 [00:00<00:00, 30.38it/s] 81%|########  | 21/26 [00:00<00:00, 32.02it/s] 96%|#########6| 25/26 [00:00<00:00, 33.04it/s]100%|##########| 26/26 [00:00<00:00, 27.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 240000
penalty weights 0.0
Epoch: [13][  26/  26]	Loss 0.151 (0.217)	train_nll   0.15 (  0.22)	train_penalty   0.00 (  0.01)	weight_norm  24.29 ( 24.13)	train_acc   0.92 (  0.91)	train_minacc   0.78 (  0.64)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 6.8995 (6.8422)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.49it/s] 31%|###       | 8/26 [00:00<00:00, 32.70it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.70it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.96it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.96it/s] 92%|#########2| 24/26 [00:00<00:00, 45.07it/s]100%|##########| 26/26 [00:00<00:00, 38.86it/s]
Test: [   0/  26]	Loss 0.220 (0.220)	test_acc   0.92 (  0.92)	test_minacc   0.73 (  0.73)	test_majacc   0.95 (  0.95)	Loss_d 0.220 (0.220)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.166 (0.203)	test_acc   0.93 (  0.92)	test_minacc   0.85 (  0.75)	test_majacc   0.95 (  0.95)	Loss_d 0.166 (0.203)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.85 (  0.75)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.75 (  0.77)
Test: [  20/  26]	Loss 0.167 (0.194)	test_acc   0.92 (  0.92)	test_minacc   0.79 (  0.78)	test_majacc   0.94 (  0.95)	Loss_d 0.167 (0.194)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.79 (  0.78)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.77 (  0.76)
Test: [  26/  26]	Loss 0.120 (0.185)	test_acc   0.96 (  0.92)	test_minacc   0.92 (  0.79)	test_majacc   0.97 (  0.95)	Loss_d 0.120 (0.185)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.92 (  0.79)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.78 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.07it/s]
Test: [  0/  1]	Loss 2.208 (2.208)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.90 (  0.90)	Loss_d 2.208 (2.208)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 2.208 (2.208)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.90 (  0.90)	Loss_d 2.208 (2.208)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.41 (  0.41)
Overall Timing[ 13/  1]	epoch_time 0.0398 (0.0439)	validation_time 0.0004 (0.0008)	train_time 0.0394 (0.0428)
record: (train_acc, test_acc) (0.8965000196695327, 0.45100003480911255)
last accs (train_acc, test_acc) (0.924800021648407, 0.4320000112056732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.91it/s] 15%|#5        | 4/26 [00:00<00:01, 12.88it/s] 31%|###       | 8/26 [00:00<00:00, 20.61it/s] 46%|####6     | 12/26 [00:00<00:00, 25.32it/s] 62%|######1   | 16/26 [00:00<00:00, 28.19it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.93it/s] 92%|#########2| 24/26 [00:00<00:00, 31.67it/s]100%|##########| 26/26 [00:01<00:00, 24.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 240000
penalty weights 0.0
Epoch: [14][  26/  26]	Loss 0.176 (0.207)	train_nll   0.18 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm  24.67 ( 24.48)	train_acc   0.94 (  0.91)	train_minacc   0.76 (  0.66)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0950 (7.4038)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.59it/s] 23%|##3       | 6/26 [00:00<00:00, 26.36it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.36it/s] 42%|####2     | 11/26 [00:00<00:00, 34.31it/s] 62%|######1   | 16/26 [00:00<00:00, 37.57it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.57it/s] 81%|########  | 21/26 [00:00<00:00, 40.75it/s]100%|##########| 26/26 [00:00<00:00, 42.73it/s]100%|##########| 26/26 [00:00<00:00, 34.73it/s]
Test: [   0/  26]	Loss 0.211 (0.211)	test_acc   0.93 (  0.93)	test_minacc   0.77 (  0.77)	test_majacc   0.96 (  0.96)	Loss_d 0.211 (0.211)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.171 (0.203)	test_acc   0.94 (  0.92)	test_minacc   0.81 (  0.71)	test_majacc   0.96 (  0.95)	Loss_d 0.171 (0.203)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.81 (  0.71)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.78 (  0.79)
Test: [  20/  26]	Loss 0.174 (0.198)	test_acc   0.93 (  0.92)	test_minacc   0.74 (  0.72)	test_majacc   0.96 (  0.95)	Loss_d 0.174 (0.198)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.74 (  0.72)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.78 (  0.78)
Test: [  26/  26]	Loss 0.129 (0.189)	test_acc   0.96 (  0.92)	test_minacc   0.84 (  0.74)	test_majacc   0.98 (  0.96)	Loss_d 0.129 (0.189)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.84 (  0.74)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.81 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.70it/s]
Test: [  0/  1]	Loss 2.310 (2.310)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.95 (  0.95)	Loss_d 2.310 (2.310)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 2.310 (2.310)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.95 (  0.95)	Loss_d 2.310 (2.310)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.47 (  0.47)
Overall Timing[ 14/  1]	epoch_time 0.0396 (0.0437)	validation_time 0.0004 (0.0008)	train_time 0.0392 (0.0426)
record: (train_acc, test_acc) (0.8965000196695327, 0.45100003480911255)
last accs (train_acc, test_acc) (0.9233000205755234, 0.4150000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.00it/s] 19%|#9        | 5/26 [00:00<00:01, 16.10it/s] 35%|###4      | 9/26 [00:00<00:00, 23.07it/s] 50%|#####     | 13/26 [00:00<00:00, 27.40it/s] 65%|######5   | 17/26 [00:00<00:00, 30.28it/s] 81%|########  | 21/26 [00:00<00:00, 32.31it/s] 96%|#########6| 25/26 [00:00<00:00, 33.45it/s]100%|##########| 26/26 [00:01<00:00, 25.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 240000
penalty weights 0.0
Epoch: [15][  26/  26]	Loss 0.109 (0.191)	train_nll   0.11 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm  25.09 ( 24.88)	train_acc   0.96 (  0.92)	train_minacc   0.86 (  0.69)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.1674 (7.1437)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 23%|##3       | 6/26 [00:00<00:00, 29.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.82it/s] 46%|####6     | 12/26 [00:00<00:00, 41.49it/s] 65%|######5   | 17/26 [00:00<00:00, 42.60it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.60it/s] 85%|########4 | 22/26 [00:00<00:00, 41.23it/s]100%|##########| 26/26 [00:00<00:00, 37.54it/s]
Test: [   0/  26]	Loss 0.161 (0.161)	test_acc   0.95 (  0.95)	test_minacc   0.83 (  0.83)	test_majacc   0.98 (  0.98)	Loss_d 0.161 (0.161)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.131 (0.152)	test_acc   0.96 (  0.94)	test_minacc   0.92 (  0.83)	test_majacc   0.97 (  0.96)	Loss_d 0.131 (0.152)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.92 (  0.83)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.75 (  0.76)
Test: [  20/  26]	Loss 0.146 (0.151)	test_acc   0.94 (  0.94)	test_minacc   0.87 (  0.84)	test_majacc   0.95 (  0.96)	Loss_d 0.146 (0.151)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.87 (  0.84)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.74 (  0.75)
Test: [  26/  26]	Loss 0.079 (0.142)	test_acc   0.98 (  0.95)	test_minacc   0.95 (  0.85)	test_majacc   0.99 (  0.96)	Loss_d 0.079 (0.142)	test_acc_d   0.98 (  0.95)	test_minacc_d   0.95 (  0.85)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.76 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.48it/s]
Test: [  0/  1]	Loss 2.464 (2.464)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 2.464 (2.464)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 2.464 (2.464)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 2.464 (2.464)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.40 (  0.40)
Overall Timing[ 15/  1]	epoch_time 0.0388 (0.0434)	validation_time 0.0004 (0.0008)	train_time 0.0384 (0.0423)
record: (train_acc, test_acc) (0.8965000196695327, 0.45100003480911255)
last accs (train_acc, test_acc) (0.9472000187039376, 0.42100003361701965)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.51it/s] 23%|##3       | 6/26 [00:00<00:00, 28.22it/s] 38%|###8      | 10/26 [00:00<00:00, 32.00it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.77it/s] 69%|######9   | 18/26 [00:00<00:00, 33.21it/s] 85%|########4 | 22/26 [00:00<00:00, 34.55it/s]100%|##########| 26/26 [00:00<00:00, 34.54it/s]100%|##########| 26/26 [00:00<00:00, 30.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 240000
penalty weights 0.0
Epoch: [16][  26/  26]	Loss 0.117 (0.153)	train_nll   0.12 (  0.15)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.29)	train_acc   0.97 (  0.94)	train_minacc   0.92 (  0.77)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 7.6231 (8.0475)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.29it/s] 27%|##6       | 7/26 [00:00<00:00, 34.22it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.22it/s] 46%|####6     | 12/26 [00:00<00:00, 40.32it/s] 65%|######5   | 17/26 [00:00<00:00, 42.51it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.51it/s] 85%|########4 | 22/26 [00:00<00:00, 40.83it/s]100%|##########| 26/26 [00:00<00:00, 37.89it/s]
Test: [   0/  26]	Loss 0.159 (0.159)	test_acc   0.93 (  0.93)	test_minacc   0.79 (  0.79)	test_majacc   0.96 (  0.96)	Loss_d 0.159 (0.159)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.129 (0.164)	test_acc   0.96 (  0.93)	test_minacc   0.85 (  0.82)	test_majacc   0.98 (  0.96)	Loss_d 0.129 (0.164)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.74 (  0.72)
Test: [  20/  26]	Loss 0.160 (0.162)	test_acc   0.94 (  0.93)	test_minacc   0.91 (  0.83)	test_majacc   0.94 (  0.95)	Loss_d 0.160 (0.162)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.91 (  0.83)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.079 (0.154)	test_acc   0.98 (  0.94)	test_minacc   0.89 (  0.84)	test_majacc   1.00 (  0.96)	Loss_d 0.079 (0.154)	test_acc_d   0.98 (  0.94)	test_minacc_d   0.89 (  0.84)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.76 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.02it/s]
Test: [  0/  1]	Loss 2.447 (2.447)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 2.447 (2.447)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.447 (2.447)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 2.447 (2.447)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.37 (  0.37)
Overall Timing[ 16/  1]	epoch_time 0.0396 (0.0431)	validation_time 0.0004 (0.0008)	train_time 0.0392 (0.0421)
record: (train_acc, test_acc) (0.8965000196695327, 0.45100003480911255)
last accs (train_acc, test_acc) (0.9385000180602073, 0.4310000240802765)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 19%|#9        | 5/26 [00:00<00:01, 19.18it/s] 35%|###4      | 9/26 [00:00<00:00, 25.31it/s] 50%|#####     | 13/26 [00:00<00:00, 28.66it/s] 65%|######5   | 17/26 [00:00<00:00, 30.77it/s] 81%|########  | 21/26 [00:00<00:00, 32.78it/s] 96%|#########6| 25/26 [00:00<00:00, 33.11it/s]100%|##########| 26/26 [00:00<00:00, 27.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 240000
penalty weights 0.0
Epoch: [17][  26/  26]	Loss 0.078 (0.136)	train_nll   0.08 (  0.14)	train_penalty   0.00 (  0.00)	weight_norm  26.01 ( 25.76)	train_acc   0.97 (  0.94)	train_minacc   0.92 (  0.77)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 8.9622 (8.7832)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.22it/s] 31%|###       | 8/26 [00:00<00:00, 37.28it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.28it/s] 50%|#####     | 13/26 [00:00<00:00, 39.69it/s] 69%|######9   | 18/26 [00:00<00:00, 40.22it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.22it/s] 88%|########8 | 23/26 [00:00<00:00, 42.42it/s]100%|##########| 26/26 [00:00<00:00, 38.22it/s]
Test: [   0/  26]	Loss 0.135 (0.135)	test_acc   0.95 (  0.95)	test_minacc   0.83 (  0.83)	test_majacc   0.97 (  0.97)	Loss_d 0.135 (0.135)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.123 (0.126)	test_acc   0.95 (  0.95)	test_minacc   0.90 (  0.88)	test_majacc   0.96 (  0.96)	Loss_d 0.123 (0.126)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.90 (  0.88)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Test: [  20/  26]	Loss 0.118 (0.119)	test_acc   0.95 (  0.95)	test_minacc   0.96 (  0.89)	test_majacc   0.95 (  0.96)	Loss_d 0.118 (0.119)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.96 (  0.89)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.70 (  0.71)
Test: [  26/  26]	Loss 0.056 (0.112)	test_acc   0.99 (  0.96)	test_minacc   0.97 (  0.90)	test_majacc   1.00 (  0.97)	Loss_d 0.056 (0.112)	test_acc_d   0.99 (  0.96)	test_minacc_d   0.97 (  0.90)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.73 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.11it/s]
Test: [  0/  1]	Loss 2.902 (2.902)	test_acc   0.45 (  0.45)	test_minacc   0.39 (  0.39)	test_majacc   0.93 (  0.93)	Loss_d 2.902 (2.902)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 2.902 (2.902)	test_acc   0.45 (  0.45)	test_minacc   0.39 (  0.39)	test_majacc   0.93 (  0.93)	Loss_d 2.902 (2.902)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.34 (  0.34)
Overall Timing[ 17/  1]	epoch_time 0.0397 (0.0429)	validation_time 0.0004 (0.0007)	train_time 0.0393 (0.0420)
record: (train_acc, test_acc) (0.8965000196695327, 0.45100003480911255)
last accs (train_acc, test_acc) (0.9560000176429748, 0.44700002670288086)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.93it/s] 23%|##3       | 6/26 [00:00<00:00, 25.16it/s] 38%|###8      | 10/26 [00:00<00:00, 29.64it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.19it/s] 69%|######9   | 18/26 [00:00<00:00, 33.83it/s] 85%|########4 | 22/26 [00:00<00:00, 34.54it/s]100%|##########| 26/26 [00:00<00:00, 35.82it/s]100%|##########| 26/26 [00:00<00:00, 30.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 240000
penalty weights 0.0
Epoch: [18][  26/  26]	Loss 0.134 (0.121)	train_nll   0.13 (  0.12)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.29)	train_acc   0.94 (  0.95)	train_minacc   0.78 (  0.82)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 9.3731 (9.0836)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 23%|##3       | 6/26 [00:00<00:00, 26.94it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.94it/s] 42%|####2     | 11/26 [00:00<00:00, 35.66it/s] 65%|######5   | 17/26 [00:00<00:00, 39.21it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.21it/s] 88%|########8 | 23/26 [00:00<00:00, 44.22it/s]100%|##########| 26/26 [00:00<00:00, 36.00it/s]
Test: [   0/  26]	Loss 0.159 (0.159)	test_acc   0.94 (  0.94)	test_minacc   0.80 (  0.80)	test_majacc   0.96 (  0.96)	Loss_d 0.159 (0.159)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.112 (0.118)	test_acc   0.96 (  0.95)	test_minacc   0.90 (  0.86)	test_majacc   0.97 (  0.97)	Loss_d 0.112 (0.118)	test_acc_d   0.96 (  0.95)	test_minacc_d   0.90 (  0.86)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.71 (  0.72)
Test: [  20/  26]	Loss 0.062 (0.111)	test_acc   0.98 (  0.96)	test_minacc   0.98 (  0.87)	test_majacc   0.98 (  0.97)	Loss_d 0.062 (0.111)	test_acc_d   0.98 (  0.96)	test_minacc_d   0.98 (  0.87)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.73 (  0.72)
Test: [  26/  26]	Loss 0.029 (0.103)	test_acc   1.00 (  0.96)	test_minacc   1.00 (  0.88)	test_majacc   1.00 (  0.98)	Loss_d 0.029 (0.103)	test_acc_d   1.00 (  0.96)	test_minacc_d   1.00 (  0.88)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.74 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.90it/s]
Test: [  0/  1]	Loss 2.975 (2.975)	test_acc   0.48 (  0.48)	test_minacc   0.42 (  0.42)	test_majacc   0.93 (  0.93)	Loss_d 2.975 (2.975)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 2.975 (2.975)	test_acc   0.48 (  0.48)	test_minacc   0.42 (  0.42)	test_majacc   0.93 (  0.93)	Loss_d 2.975 (2.975)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.27 (  0.27)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/112/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0399 (0.0428)	validation_time 0.0004 (0.0007)	train_time 0.0395 (0.0418)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.74it/s] 19%|#9        | 5/26 [00:00<00:00, 21.79it/s] 35%|###4      | 9/26 [00:00<00:00, 27.99it/s] 50%|#####     | 13/26 [00:00<00:00, 31.25it/s] 65%|######5   | 17/26 [00:00<00:00, 33.25it/s] 81%|########  | 21/26 [00:00<00:00, 34.13it/s] 96%|#########6| 25/26 [00:00<00:00, 34.92it/s]100%|##########| 26/26 [00:00<00:00, 29.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 240000
penalty weights 0.0
Epoch: [19][  26/  26]	Loss 0.052 (0.113)	train_nll   0.05 (  0.11)	train_penalty   0.00 (  0.00)	weight_norm  27.13 ( 26.86)	train_acc   0.98 (  0.96)	train_minacc   0.86 (  0.83)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 9.3980 (8.9201)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.35it/s] 19%|#9        | 5/26 [00:00<00:00, 25.51it/s] 38%|###8      | 10/26 [00:00<00:00, 35.45it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.45it/s] 58%|#####7    | 15/26 [00:00<00:00, 40.55it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.72it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.72it/s] 96%|#########6| 25/26 [00:00<00:00, 41.35it/s]100%|##########| 26/26 [00:00<00:00, 35.24it/s]
Test: [   0/  26]	Loss 0.100 (0.100)	test_acc   0.96 (  0.96)	test_minacc   0.82 (  0.82)	test_majacc   0.98 (  0.98)	Loss_d 0.100 (0.100)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.059 (0.079)	test_acc   0.97 (  0.97)	test_minacc   0.90 (  0.88)	test_majacc   0.98 (  0.99)	Loss_d 0.059 (0.079)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.90 (  0.88)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.72 (  0.73)
Test: [  20/  26]	Loss 0.055 (0.070)	test_acc   0.98 (  0.97)	test_minacc   0.92 (  0.90)	test_majacc   0.99 (  0.99)	Loss_d 0.055 (0.070)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.92 (  0.90)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.72)
Test: [  26/  26]	Loss 0.019 (0.064)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  0.99)	Loss_d 0.019 (0.064)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.95it/s]
Test: [  0/  1]	Loss 3.450 (3.450)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.92 (  0.92)	Loss_d 3.450 (3.450)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 3.450 (3.450)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.92 (  0.92)	Loss_d 3.450 (3.450)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.38 (  0.38)
Overall Timing[ 19/  1]	epoch_time 0.0371 (0.0425)	validation_time 0.0004 (0.0007)	train_time 0.0366 (0.0416)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9758000223636627, 0.42000001668930054)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.85it/s] 12%|#1        | 3/26 [00:00<00:01, 13.15it/s] 27%|##6       | 7/26 [00:00<00:00, 21.98it/s] 42%|####2     | 11/26 [00:00<00:00, 26.65it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.66it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.95it/s] 88%|########8 | 23/26 [00:00<00:00, 33.66it/s]100%|##########| 26/26 [00:00<00:00, 27.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 240000
penalty weights 0.0
Epoch: [20][  26/  26]	Loss 0.034 (0.087)	train_nll   0.03 (  0.09)	train_penalty   0.00 (  0.00)	weight_norm  27.61 ( 27.38)	train_acc   0.99 (  0.97)	train_minacc   0.92 (  0.88)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 9.6978 (9.6848)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  2.89it/s] 23%|##3       | 6/26 [00:00<00:01, 15.64it/s]                                               23%|##3       | 6/26 [00:00<00:01, 15.64it/s] 42%|####2     | 11/26 [00:00<00:00, 24.63it/s] 62%|######1   | 16/26 [00:00<00:00, 31.36it/s]                                                62%|######1   | 16/26 [00:00<00:00, 31.36it/s] 81%|########  | 21/26 [00:00<00:00, 35.59it/s]100%|##########| 26/26 [00:00<00:00, 39.46it/s]100%|##########| 26/26 [00:00<00:00, 27.45it/s]
Test: [   0/  26]	Loss 0.121 (0.121)	test_acc   0.95 (  0.95)	test_minacc   0.70 (  0.70)	test_majacc   1.00 (  1.00)	Loss_d 0.121 (0.121)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.70 (  0.70)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.087 (0.113)	test_acc   0.97 (  0.96)	test_minacc   0.85 (  0.74)	test_majacc   0.99 (  0.99)	Loss_d 0.087 (0.113)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.85 (  0.74)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.79)
Test: [  20/  26]	Loss 0.049 (0.090)	test_acc   0.98 (  0.96)	test_minacc   0.83 (  0.79)	test_majacc   1.00 (  1.00)	Loss_d 0.049 (0.090)	test_acc_d   0.98 (  0.96)	test_minacc_d   0.83 (  0.79)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.79 (  0.78)
Test: [  26/  26]	Loss 0.020 (0.080)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.82)	test_majacc   1.00 (  1.00)	Loss_d 0.020 (0.080)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.82)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.02it/s]
Test: [  0/  1]	Loss 3.950 (3.950)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 3.950 (3.950)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 3.950 (3.950)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 3.950 (3.950)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.53 (  0.53)
Overall Timing[ 20/  1]	epoch_time 0.0391 (0.0423)	validation_time 0.0003 (0.0007)	train_time 0.0387 (0.0415)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9694000250697136, 0.34700000286102295)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.48it/s] 19%|#9        | 5/26 [00:00<00:00, 22.30it/s] 35%|###4      | 9/26 [00:00<00:00, 27.51it/s] 50%|#####     | 13/26 [00:00<00:00, 30.38it/s] 65%|######5   | 17/26 [00:00<00:00, 32.45it/s] 81%|########  | 21/26 [00:00<00:00, 33.76it/s] 96%|#########6| 25/26 [00:00<00:00, 34.03it/s]100%|##########| 26/26 [00:00<00:00, 29.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 240000
penalty weights 0.0
Epoch: [21][  26/  26]	Loss 0.030 (0.078)	train_nll   0.03 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  28.06 ( 27.85)	train_acc   0.99 (  0.97)	train_minacc   0.97 (  0.89)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 10.1034 (9.8805)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 23%|##3       | 6/26 [00:00<00:00, 24.56it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.56it/s] 42%|####2     | 11/26 [00:00<00:00, 33.10it/s] 62%|######1   | 16/26 [00:00<00:00, 38.22it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.22it/s] 81%|########  | 21/26 [00:00<00:00, 37.75it/s]100%|##########| 26/26 [00:00<00:00, 40.98it/s]100%|##########| 26/26 [00:00<00:00, 32.47it/s]
Test: [   0/  26]	Loss 0.055 (0.055)	test_acc   0.98 (  0.98)	test_minacc   0.97 (  0.97)	test_majacc   0.98 (  0.98)	Loss_d 0.055 (0.055)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.098 (0.098)	test_acc   0.96 (  0.96)	test_minacc   0.88 (  0.83)	test_majacc   0.98 (  0.99)	Loss_d 0.098 (0.098)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.88 (  0.83)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.73 (  0.75)
Test: [  20/  26]	Loss 0.035 (0.079)	test_acc   0.98 (  0.97)	test_minacc   0.92 (  0.86)	test_majacc   0.99 (  0.99)	Loss_d 0.035 (0.079)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.92 (  0.86)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.74)
Test: [  26/  26]	Loss 0.015 (0.070)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.88)	test_majacc   1.00 (  0.99)	Loss_d 0.015 (0.070)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.88)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.27it/s]
Test: [  0/  1]	Loss 3.923 (3.923)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 3.923 (3.923)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 3.923 (3.923)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 3.923 (3.923)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.42 (  0.42)
Overall Timing[ 21/  1]	epoch_time 0.0449 (0.0424)	validation_time 0.0004 (0.0007)	train_time 0.0444 (0.0416)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9739000236392021, 0.4000000059604645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 19%|#9        | 5/26 [00:00<00:00, 21.59it/s] 35%|###4      | 9/26 [00:00<00:00, 27.29it/s] 50%|#####     | 13/26 [00:00<00:00, 30.12it/s] 65%|######5   | 17/26 [00:00<00:00, 31.87it/s] 81%|########  | 21/26 [00:00<00:00, 32.34it/s] 96%|#########6| 25/26 [00:00<00:00, 33.08it/s]100%|##########| 26/26 [00:00<00:00, 28.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 240000
penalty weights 0.0
Epoch: [22][  26/  26]	Loss 0.049 (0.074)	train_nll   0.05 (  0.07)	train_penalty   0.00 (  0.00)	weight_norm  28.52 ( 28.28)	train_acc   0.98 (  0.97)	train_minacc   0.95 (  0.90)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 10.3596 (10.4315)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.83it/s] 31%|###       | 8/26 [00:00<00:00, 38.92it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.92it/s] 50%|#####     | 13/26 [00:00<00:00, 41.53it/s] 69%|######9   | 18/26 [00:00<00:00, 40.43it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.43it/s] 88%|########8 | 23/26 [00:00<00:00, 42.26it/s]100%|##########| 26/26 [00:00<00:00, 39.28it/s]
Test: [   0/  26]	Loss 0.051 (0.051)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.051 (0.051)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.099 (0.100)	test_acc   0.96 (  0.96)	test_minacc   0.92 (  0.88)	test_majacc   0.97 (  0.98)	Loss_d 0.099 (0.100)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.92 (  0.88)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.69 (  0.72)
Test: [  20/  26]	Loss 0.060 (0.093)	test_acc   0.97 (  0.97)	test_minacc   0.89 (  0.90)	test_majacc   0.99 (  0.98)	Loss_d 0.060 (0.093)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.89 (  0.90)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.75 (  0.72)
Test: [  26/  26]	Loss 0.020 (0.082)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.91)	test_majacc   1.00 (  0.98)	Loss_d 0.020 (0.082)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.91)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.72 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.70it/s]
Test: [  0/  1]	Loss 3.751 (3.751)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.93 (  0.93)	Loss_d 3.751 (3.751)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 3.751 (3.751)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.93 (  0.93)	Loss_d 3.751 (3.751)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.34 (  0.34)
Overall Timing[ 22/  1]	epoch_time 0.0384 (0.0423)	validation_time 0.0004 (0.0007)	train_time 0.0380 (0.0414)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9699000238776206, 0.4360000193119049)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.24it/s] 15%|#5        | 4/26 [00:00<00:01, 15.87it/s] 31%|###       | 8/26 [00:00<00:00, 23.42it/s] 46%|####6     | 12/26 [00:00<00:00, 27.73it/s] 62%|######1   | 16/26 [00:00<00:00, 29.89it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.36it/s] 92%|#########2| 24/26 [00:00<00:00, 31.93it/s]100%|##########| 26/26 [00:00<00:00, 26.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 240000
penalty weights 0.0
l1 at pgd_anneal_iters 10.393108367919922
set z to 9.873452949523925
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 240000
penalty weights 0.0
Epoch: [23][  26/  26]	Loss 0.019 (0.058)	train_nll   0.02 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm  28.96 ( 28.74)	train_acc   0.99 (  0.98)	train_minacc   0.95 (  0.92)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 11.1714 (10.7631)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.87it/s] 23%|##3       | 6/26 [00:00<00:00, 29.45it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.45it/s] 42%|####2     | 11/26 [00:00<00:00, 36.03it/s] 62%|######1   | 16/26 [00:00<00:00, 40.29it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.29it/s] 81%|########  | 21/26 [00:00<00:00, 42.45it/s]100%|##########| 26/26 [00:00<00:00, 44.48it/s]100%|##########| 26/26 [00:00<00:00, 36.04it/s]
Test: [   0/  26]	Loss 0.086 (0.086)	test_acc   0.96 (  0.96)	test_minacc   0.80 (  0.80)	test_majacc   0.99 (  0.99)	Loss_d 0.086 (0.086)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.085 (0.103)	test_acc   0.96 (  0.96)	test_minacc   0.81 (  0.80)	test_majacc   0.98 (  0.99)	Loss_d 0.085 (0.103)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.81 (  0.80)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.75 (  0.76)
Test: [  20/  26]	Loss 0.081 (0.095)	test_acc   0.97 (  0.96)	test_minacc   0.79 (  0.82)	test_majacc   1.00 (  0.99)	Loss_d 0.081 (0.095)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.79 (  0.82)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.79 (  0.75)
Test: [  26/  26]	Loss 0.008 (0.082)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.84)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.082)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.84)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.96it/s]
Test: [  0/  1]	Loss 4.578 (4.578)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 4.578 (4.578)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.46 (  0.46)
Test: [  1/  1]	Loss 4.578 (4.578)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 4.578 (4.578)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.46 (  0.46)
Overall Timing[ 23/  1]	epoch_time 0.0384 (0.0421)	validation_time 0.0004 (0.0006)	train_time 0.0380 (0.0413)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9695000169277191, 0.3800000250339508)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.87it/s] 23%|##3       | 6/26 [00:00<00:00, 27.62it/s] 38%|###8      | 10/26 [00:00<00:00, 31.88it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.03it/s] 69%|######9   | 18/26 [00:00<00:00, 33.35it/s] 85%|########4 | 22/26 [00:00<00:00, 33.88it/s]100%|##########| 26/26 [00:00<00:00, 34.20it/s]100%|##########| 26/26 [00:00<00:00, 30.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 240000
penalty weights 0.0
Epoch: [24][  26/  26]	Loss 0.032 (0.059)	train_nll   0.03 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm  29.42 ( 29.21)	train_acc   0.99 (  0.98)	train_minacc   0.92 (  0.92)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 11.0014 (11.0124)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.82it/s] 31%|###       | 8/26 [00:00<00:00, 36.87it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.87it/s] 50%|#####     | 13/26 [00:00<00:00, 40.93it/s] 69%|######9   | 18/26 [00:00<00:00, 43.43it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.43it/s] 88%|########8 | 23/26 [00:00<00:00, 43.37it/s]100%|##########| 26/26 [00:00<00:00, 39.56it/s]
Test: [   0/  26]	Loss 0.030 (0.030)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.030 (0.030)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.075 (0.052)	test_acc   0.97 (  0.98)	test_minacc   0.90 (  0.92)	test_majacc   0.99 (  0.99)	Loss_d 0.075 (0.052)	test_acc_d   0.97 (  0.98)	test_minacc_d   0.90 (  0.92)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.72)
Test: [  20/  26]	Loss 0.020 (0.044)	test_acc   0.99 (  0.98)	test_minacc   0.96 (  0.94)	test_majacc   1.00 (  0.99)	Loss_d 0.020 (0.044)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.96 (  0.94)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.75 (  0.72)
Test: [  26/  26]	Loss 0.006 (0.038)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.006 (0.038)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.43it/s]
Test: [  0/  1]	Loss 4.538 (4.538)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 4.538 (4.538)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 4.538 (4.538)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 4.538 (4.538)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.44 (  0.44)
Overall Timing[ 24/  1]	epoch_time 0.0447 (0.0422)	validation_time 0.0004 (0.0006)	train_time 0.0443 (0.0414)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9860000287294388, 0.39000001549720764)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.55it/s] 15%|#5        | 4/26 [00:00<00:01, 17.43it/s] 31%|###       | 8/26 [00:00<00:00, 24.61it/s] 46%|####6     | 12/26 [00:00<00:00, 28.53it/s] 62%|######1   | 16/26 [00:00<00:00, 31.01it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.99it/s] 92%|#########2| 24/26 [00:00<00:00, 34.47it/s]100%|##########| 26/26 [00:00<00:00, 28.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 240000
penalty weights 0.0
Epoch: [25][  26/  26]	Loss 0.030 (0.048)	train_nll   0.03 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm  29.80 ( 29.62)	train_acc   0.99 (  0.98)	train_minacc   0.92 (  0.94)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 11.2559 (11.2512)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.10it/s] 23%|##3       | 6/26 [00:00<00:00, 31.70it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.70it/s] 42%|####2     | 11/26 [00:00<00:00, 38.13it/s] 62%|######1   | 16/26 [00:00<00:00, 41.99it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.99it/s] 81%|########  | 21/26 [00:00<00:00, 39.30it/s]100%|##########| 26/26 [00:00<00:00, 42.31it/s]100%|##########| 26/26 [00:00<00:00, 35.95it/s]
Test: [   0/  26]	Loss 0.056 (0.056)	test_acc   0.98 (  0.98)	test_minacc   0.95 (  0.95)	test_majacc   0.98 (  0.98)	Loss_d 0.056 (0.056)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.069 (0.055)	test_acc   0.98 (  0.98)	test_minacc   0.88 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.069 (0.055)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.88 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.020 (0.052)	test_acc   0.99 (  0.98)	test_minacc   0.96 (  0.94)	test_majacc   1.00 (  0.99)	Loss_d 0.020 (0.052)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.96 (  0.94)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.75 (  0.71)
Test: [  26/  26]	Loss 0.008 (0.045)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.045)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.18it/s]
Test: [  0/  1]	Loss 4.402 (4.402)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 4.402 (4.402)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 4.402 (4.402)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 4.402 (4.402)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.39 (  0.39)
Overall Timing[ 25/  1]	epoch_time 0.0391 (0.0421)	validation_time 0.0003 (0.0006)	train_time 0.0387 (0.0413)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9843000253438949, 0.40300002694129944)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.71it/s] 23%|##3       | 6/26 [00:00<00:00, 25.34it/s] 38%|###8      | 10/26 [00:00<00:00, 29.56it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.62it/s] 69%|######9   | 18/26 [00:00<00:00, 32.57it/s] 85%|########4 | 22/26 [00:00<00:00, 33.20it/s]100%|##########| 26/26 [00:00<00:00, 33.67it/s]100%|##########| 26/26 [00:00<00:00, 29.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 240000
penalty weights 0.0
Epoch: [26][  26/  26]	Loss 0.034 (0.042)	train_nll   0.03 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  30.15 ( 29.98)	train_acc   0.99 (  0.98)	train_minacc   0.97 (  0.94)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 11.9148 (11.6885)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.48it/s] 23%|##3       | 6/26 [00:00<00:00, 27.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.20it/s] 42%|####2     | 11/26 [00:00<00:00, 34.82it/s] 62%|######1   | 16/26 [00:00<00:00, 40.20it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.20it/s] 81%|########  | 21/26 [00:00<00:00, 38.81it/s]100%|##########| 26/26 [00:00<00:00, 41.89it/s]100%|##########| 26/26 [00:00<00:00, 34.63it/s]
Test: [   0/  26]	Loss 0.042 (0.042)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.042 (0.042)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.040 (0.041)	test_acc   0.98 (  0.98)	test_minacc   0.93 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.040 (0.041)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.93 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.70)
Test: [  20/  26]	Loss 0.010 (0.035)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.010 (0.035)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.005 (0.030)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.005 (0.030)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.94it/s]
Test: [  0/  1]	Loss 4.468 (4.468)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 4.468 (4.468)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 4.468 (4.468)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 4.468 (4.468)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.33 (  0.33)
Overall Timing[ 26/  1]	epoch_time 0.0425 (0.0421)	validation_time 0.0005 (0.0006)	train_time 0.0420 (0.0413)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9886000308990478, 0.43800002336502075)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.93it/s] 19%|#9        | 5/26 [00:00<00:00, 24.76it/s] 35%|###4      | 9/26 [00:00<00:00, 30.18it/s] 50%|#####     | 13/26 [00:00<00:00, 32.46it/s] 65%|######5   | 17/26 [00:00<00:00, 34.85it/s] 81%|########  | 21/26 [00:00<00:00, 36.47it/s] 96%|#########6| 25/26 [00:00<00:00, 36.98it/s]100%|##########| 26/26 [00:00<00:00, 31.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 240000
penalty weights 0.0
Epoch: [27][  26/  26]	Loss 0.021 (0.035)	train_nll   0.02 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  30.51 ( 30.33)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.4325 (12.1422)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.09it/s] 15%|#5        | 4/26 [00:00<00:01, 15.09it/s] 38%|###8      | 10/26 [00:00<00:00, 30.14it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.14it/s] 62%|######1   | 16/26 [00:00<00:00, 39.05it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.05it/s] 81%|########  | 21/26 [00:00<00:00, 39.38it/s]100%|##########| 26/26 [00:00<00:00, 42.25it/s]100%|##########| 26/26 [00:00<00:00, 32.19it/s]
Test: [   0/  26]	Loss 0.057 (0.057)	test_acc   0.98 (  0.98)	test_minacc   0.95 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.057 (0.057)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.064 (0.048)	test_acc   0.98 (  0.98)	test_minacc   0.86 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.064 (0.048)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.86 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.72)
Test: [  20/  26]	Loss 0.007 (0.039)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.039)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.73)
Test: [  26/  26]	Loss 0.005 (0.033)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.033)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.68it/s]
Test: [  0/  1]	Loss 5.061 (5.061)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 5.061 (5.061)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 5.061 (5.061)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 5.061 (5.061)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.37 (  0.37)
Overall Timing[ 27/  1]	epoch_time 0.0402 (0.0420)	validation_time 0.0004 (0.0006)	train_time 0.0398 (0.0413)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9893000320196151, 0.42000001668930054)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.26it/s] 15%|#5        | 4/26 [00:00<00:01, 14.60it/s] 31%|###       | 8/26 [00:00<00:00, 22.59it/s] 46%|####6     | 12/26 [00:00<00:00, 27.46it/s] 62%|######1   | 16/26 [00:00<00:00, 30.23it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.45it/s] 92%|#########2| 24/26 [00:00<00:00, 32.57it/s]100%|##########| 26/26 [00:00<00:00, 26.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 240000
penalty weights 0.0
Epoch: [28][  26/  26]	Loss 0.007 (0.032)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  30.84 ( 30.68)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.6144 (12.4459)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.84it/s] 27%|##6       | 7/26 [00:00<00:00, 29.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.60it/s] 46%|####6     | 12/26 [00:00<00:00, 36.10it/s] 65%|######5   | 17/26 [00:00<00:00, 39.57it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.57it/s] 85%|########4 | 22/26 [00:00<00:00, 38.41it/s]100%|##########| 26/26 [00:00<00:00, 34.70it/s]
Test: [   0/  26]	Loss 0.034 (0.034)	test_acc   0.98 (  0.98)	test_minacc   0.94 (  0.94)	test_majacc   0.99 (  0.99)	Loss_d 0.034 (0.034)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.064 (0.037)	test_acc   0.98 (  0.99)	test_minacc   0.90 (  0.94)	test_majacc   0.99 (  0.99)	Loss_d 0.064 (0.037)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.90 (  0.94)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.012 (0.030)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   0.99 (  1.00)	Loss_d 0.012 (0.030)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  26/  26]	Loss 0.004 (0.026)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.026)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.96it/s]
Test: [  0/  1]	Loss 5.003 (5.003)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.95 (  0.95)	Loss_d 5.003 (5.003)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 5.003 (5.003)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.95 (  0.95)	Loss_d 5.003 (5.003)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.36 (  0.36)
Overall Timing[ 28/  1]	epoch_time 0.0411 (0.0420)	validation_time 0.0004 (0.0006)	train_time 0.0407 (0.0413)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9897000319957733, 0.4150000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.54it/s] 15%|#5        | 4/26 [00:00<00:01, 13.20it/s] 31%|###       | 8/26 [00:00<00:00, 21.85it/s] 46%|####6     | 12/26 [00:00<00:00, 26.35it/s] 62%|######1   | 16/26 [00:00<00:00, 29.22it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.35it/s] 92%|#########2| 24/26 [00:00<00:00, 32.75it/s]100%|##########| 26/26 [00:00<00:00, 26.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 240000
penalty weights 0.0
Epoch: [29][  26/  26]	Loss 0.019 (0.025)	train_nll   0.02 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  31.15 ( 31.00)	train_acc   0.99 (  0.99)	train_minacc   0.97 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.1833 (12.8192)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.65it/s] 27%|##6       | 7/26 [00:00<00:00, 35.13it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.13it/s] 46%|####6     | 12/26 [00:00<00:00, 40.15it/s] 65%|######5   | 17/26 [00:00<00:00, 38.44it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.44it/s] 85%|########4 | 22/26 [00:00<00:00, 41.39it/s]100%|##########| 26/26 [00:00<00:00, 36.32it/s]
Test: [   0/  26]	Loss 0.032 (0.032)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.032 (0.032)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.029 (0.030)	test_acc   0.99 (  0.99)	test_minacc   0.93 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.029 (0.030)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.93 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.004 (0.026)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.026)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.72)
Test: [  26/  26]	Loss 0.002 (0.022)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.022)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.12it/s]
Test: [  0/  1]	Loss 5.624 (5.624)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.95 (  0.95)	Loss_d 5.624 (5.624)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 5.624 (5.624)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.95 (  0.95)	Loss_d 5.624 (5.624)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.41 (  0.41)
Overall Timing[ 29/  1]	epoch_time 0.0401 (0.0419)	validation_time 0.0004 (0.0006)	train_time 0.0397 (0.0412)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9922000330090522, 0.4020000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.36it/s] 19%|#9        | 5/26 [00:00<00:00, 21.17it/s] 35%|###4      | 9/26 [00:00<00:00, 26.82it/s] 50%|#####     | 13/26 [00:00<00:00, 29.20it/s] 65%|######5   | 17/26 [00:00<00:00, 31.31it/s] 81%|########  | 21/26 [00:00<00:00, 32.84it/s] 96%|#########6| 25/26 [00:00<00:00, 34.42it/s]100%|##########| 26/26 [00:00<00:00, 28.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 240000
penalty weights 0.0
Epoch: [30][  26/  26]	Loss 0.021 (0.026)	train_nll   0.02 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  31.45 ( 31.30)	train_acc   1.00 (  0.99)	train_minacc   0.97 (  0.97)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.3485 (13.3040)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.46it/s] 23%|##3       | 6/26 [00:00<00:00, 28.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.72it/s] 42%|####2     | 11/26 [00:00<00:00, 36.56it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.67it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 37.67it/s] 81%|########  | 21/26 [00:00<00:00, 41.46it/s]100%|##########| 26/26 [00:00<00:00, 36.09it/s]
Test: [   0/  26]	Loss 0.040 (0.040)	test_acc   0.98 (  0.98)	test_minacc   0.92 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.040 (0.040)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.92 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.050 (0.052)	test_acc   0.98 (  0.98)	test_minacc   0.90 (  0.90)	test_majacc   1.00 (  1.00)	Loss_d 0.050 (0.052)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.90 (  0.90)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.73)
Test: [  20/  26]	Loss 0.020 (0.049)	test_acc   0.99 (  0.98)	test_minacc   0.96 (  0.90)	test_majacc   1.00 (  1.00)	Loss_d 0.020 (0.049)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.96 (  0.90)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.73)
Test: [  26/  26]	Loss 0.006 (0.041)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.041)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.69it/s]
Test: [  0/  1]	Loss 5.657 (5.657)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.97 (  0.97)	Loss_d 5.657 (5.657)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 5.657 (5.657)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.97 (  0.97)	Loss_d 5.657 (5.657)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.43 (  0.43)
Overall Timing[ 30/  1]	epoch_time 0.0397 (0.0419)	validation_time 0.0003 (0.0006)	train_time 0.0393 (0.0411)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9852000264525413, 0.3890000283718109)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.34it/s] 19%|#9        | 5/26 [00:00<00:01, 17.29it/s] 35%|###4      | 9/26 [00:00<00:00, 23.71it/s] 50%|#####     | 13/26 [00:00<00:00, 27.92it/s] 65%|######5   | 17/26 [00:00<00:00, 30.75it/s] 81%|########  | 21/26 [00:00<00:00, 33.25it/s] 96%|#########6| 25/26 [00:00<00:00, 34.71it/s]100%|##########| 26/26 [00:00<00:00, 26.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 240000
penalty weights 0.0
Epoch: [31][  26/  26]	Loss 0.033 (0.029)	train_nll   0.03 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  31.79 ( 31.63)	train_acc   0.98 (  0.99)	train_minacc   0.89 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.1964 (13.1968)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.29it/s] 23%|##3       | 6/26 [00:00<00:00, 26.42it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.42it/s] 42%|####2     | 11/26 [00:00<00:00, 34.02it/s] 65%|######5   | 17/26 [00:00<00:00, 38.39it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.39it/s] 88%|########8 | 23/26 [00:00<00:00, 41.77it/s]100%|##########| 26/26 [00:00<00:00, 35.22it/s]
Test: [   0/  26]	Loss 0.010 (0.010)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.014 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.014 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  20/  26]	Loss 0.011 (0.019)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.72)
Test: [  26/  26]	Loss 0.003 (0.017)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.017)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.04it/s]
Test: [  0/  1]	Loss 5.516 (5.516)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 5.516 (5.516)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 5.516 (5.516)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 5.516 (5.516)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.42 (  0.42)
Overall Timing[ 31/  1]	epoch_time 0.0387 (0.0418)	validation_time 0.0004 (0.0006)	train_time 0.0383 (0.0411)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9940000305771828, 0.4000000059604645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.75it/s] 23%|##3       | 6/26 [00:00<00:00, 28.31it/s] 38%|###8      | 10/26 [00:00<00:00, 31.52it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.82it/s] 69%|######9   | 18/26 [00:00<00:00, 33.62it/s] 85%|########4 | 22/26 [00:00<00:00, 34.57it/s]100%|##########| 26/26 [00:00<00:00, 34.79it/s]100%|##########| 26/26 [00:00<00:00, 30.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 240000
penalty weights 0.0
Epoch: [32][  26/  26]	Loss 0.010 (0.015)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  32.04 ( 31.93)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.9850 (13.5586)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 23%|##3       | 6/26 [00:00<00:00, 26.55it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.55it/s] 42%|####2     | 11/26 [00:00<00:00, 33.86it/s] 62%|######1   | 16/26 [00:00<00:00, 38.67it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.67it/s] 81%|########  | 21/26 [00:00<00:00, 39.95it/s]100%|##########| 26/26 [00:00<00:00, 42.87it/s]100%|##########| 26/26 [00:00<00:00, 33.89it/s]
Test: [   0/  26]	Loss 0.021 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.021 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.019 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.019 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  20/  26]	Loss 0.007 (0.021)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.58it/s]
Test: [  0/  1]	Loss 5.859 (5.859)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.96 (  0.96)	Loss_d 5.859 (5.859)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 5.859 (5.859)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.96 (  0.96)	Loss_d 5.859 (5.859)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.38 (  0.38)
Overall Timing[ 32/  1]	epoch_time 0.0433 (0.0418)	validation_time 0.0005 (0.0006)	train_time 0.0428 (0.0411)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.993700036406517, 0.40800002217292786)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.25it/s] 19%|#9        | 5/26 [00:00<00:01, 18.91it/s] 35%|###4      | 9/26 [00:00<00:00, 25.40it/s] 50%|#####     | 13/26 [00:00<00:00, 29.02it/s] 65%|######5   | 17/26 [00:00<00:00, 31.44it/s] 81%|########  | 21/26 [00:00<00:00, 32.89it/s] 96%|#########6| 25/26 [00:00<00:00, 32.96it/s]100%|##########| 26/26 [00:00<00:00, 27.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 240000
penalty weights 0.0
Epoch: [33][  26/  26]	Loss 0.001 (0.020)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.28 ( 32.16)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.7676 (13.9697)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.17it/s] 15%|#5        | 4/26 [00:00<00:01, 19.58it/s] 35%|###4      | 9/26 [00:00<00:00, 31.72it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.72it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.25it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.25it/s] 92%|#########2| 24/26 [00:00<00:00, 40.53it/s]100%|##########| 26/26 [00:00<00:00, 34.23it/s]
Test: [   0/  26]	Loss 0.002 (0.002)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.002)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.030 (0.016)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.030 (0.016)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  20/  26]	Loss 0.005 (0.013)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.013)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.08it/s]
Test: [  0/  1]	Loss 5.371 (5.371)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.95 (  0.95)	Loss_d 5.371 (5.371)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 5.371 (5.371)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.95 (  0.95)	Loss_d 5.371 (5.371)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.33 (  0.33)
Overall Timing[ 33/  1]	epoch_time 0.0414 (0.0418)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0411)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9964000257849693, 0.43800002336502075)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.57it/s] 19%|#9        | 5/26 [00:00<00:01, 17.71it/s] 35%|###4      | 9/26 [00:00<00:00, 24.54it/s] 50%|#####     | 13/26 [00:00<00:00, 28.68it/s] 65%|######5   | 17/26 [00:00<00:00, 31.43it/s] 81%|########  | 21/26 [00:00<00:00, 33.04it/s] 96%|#########6| 25/26 [00:00<00:00, 34.02it/s]100%|##########| 26/26 [00:00<00:00, 27.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 240000
penalty weights 0.0
Epoch: [34][  26/  26]	Loss 0.005 (0.018)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.55 ( 32.43)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.3976 (13.4786)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.56it/s] 23%|##3       | 6/26 [00:00<00:00, 28.64it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.64it/s] 42%|####2     | 11/26 [00:00<00:00, 35.83it/s] 62%|######1   | 16/26 [00:00<00:00, 40.46it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.46it/s] 81%|########  | 21/26 [00:00<00:00, 38.73it/s]100%|##########| 26/26 [00:00<00:00, 41.88it/s]100%|##########| 26/26 [00:00<00:00, 34.77it/s]
Test: [   0/  26]	Loss 0.017 (0.017)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.017 (0.017)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.022 (0.031)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.022 (0.031)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  20/  26]	Loss 0.011 (0.028)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.028)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.73)
Test: [  26/  26]	Loss 0.003 (0.024)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.024)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.31it/s]
Test: [  0/  1]	Loss 5.650 (5.650)	test_acc   0.40 (  0.40)	test_minacc   0.33 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 5.650 (5.650)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 5.650 (5.650)	test_acc   0.40 (  0.40)	test_minacc   0.33 (  0.33)	test_majacc   0.95 (  0.95)	Loss_d 5.650 (5.650)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.43 (  0.43)
Overall Timing[ 34/  1]	epoch_time 0.0396 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0392 (0.0410)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.991100034236908, 0.39500001072883606)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.38it/s] 19%|#9        | 5/26 [00:00<00:00, 23.17it/s] 35%|###4      | 9/26 [00:00<00:00, 28.65it/s] 50%|#####     | 13/26 [00:00<00:00, 30.17it/s] 65%|######5   | 17/26 [00:00<00:00, 31.46it/s] 81%|########  | 21/26 [00:00<00:00, 32.52it/s] 96%|#########6| 25/26 [00:00<00:00, 33.49it/s]100%|##########| 26/26 [00:00<00:00, 28.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 240000
penalty weights 0.0
Epoch: [35][  26/  26]	Loss 0.014 (0.014)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  32.76 ( 32.66)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.1185 (13.7683)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.26it/s] 31%|###       | 8/26 [00:00<00:00, 37.36it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.36it/s] 50%|#####     | 13/26 [00:00<00:00, 38.50it/s] 69%|######9   | 18/26 [00:00<00:00, 41.92it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.92it/s] 88%|########8 | 23/26 [00:00<00:00, 42.03it/s]100%|##########| 26/26 [00:00<00:00, 37.53it/s]
Test: [   0/  26]	Loss 0.011 (0.011)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.011)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.021 (0.029)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.021 (0.029)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
Test: [  20/  26]	Loss 0.011 (0.024)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.024)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.72)
Test: [  26/  26]	Loss 0.002 (0.020)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.020)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.07it/s]
Test: [  0/  1]	Loss 6.197 (6.197)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 6.197 (6.197)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 6.197 (6.197)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 6.197 (6.197)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.45 (  0.45)
Overall Timing[ 35/  1]	epoch_time 0.0392 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0388 (0.0410)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9928000329732894, 0.3710000216960907)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.65it/s] 23%|##3       | 6/26 [00:00<00:00, 27.02it/s] 38%|###8      | 10/26 [00:00<00:00, 31.23it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.96it/s] 69%|######9   | 18/26 [00:00<00:00, 34.19it/s] 85%|########4 | 22/26 [00:00<00:00, 35.12it/s]100%|##########| 26/26 [00:00<00:00, 35.47it/s]100%|##########| 26/26 [00:00<00:00, 30.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 240000
penalty weights 0.0
Epoch: [36][  26/  26]	Loss 0.009 (0.017)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.01 ( 32.88)	train_acc   1.00 (  0.99)	train_minacc   0.97 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.0379 (14.1378)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 25.25it/s] 35%|###4      | 9/26 [00:00<00:00, 35.45it/s]                                               35%|###4      | 9/26 [00:00<00:00, 35.45it/s] 54%|#####3    | 14/26 [00:00<00:00, 41.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.26it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.26it/s] 92%|#########2| 24/26 [00:00<00:00, 40.38it/s]100%|##########| 26/26 [00:00<00:00, 37.33it/s]
Test: [   0/  26]	Loss 0.005 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.008 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  20/  26]	Loss 0.005 (0.022)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.022)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.72)
Test: [  26/  26]	Loss 0.002 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.51it/s]
Test: [  0/  1]	Loss 6.182 (6.182)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 6.182 (6.182)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 6.182 (6.182)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 6.182 (6.182)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.44 (  0.44)
Overall Timing[ 36/  1]	epoch_time 0.0429 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0425 (0.0410)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.993500036418438, 0.3850000202655792)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.79it/s] 15%|#5        | 4/26 [00:00<00:01, 17.37it/s] 31%|###       | 8/26 [00:00<00:00, 25.24it/s] 46%|####6     | 12/26 [00:00<00:00, 29.74it/s] 62%|######1   | 16/26 [00:00<00:00, 32.84it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.46it/s] 92%|#########2| 24/26 [00:00<00:00, 33.97it/s]100%|##########| 26/26 [00:00<00:00, 28.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 240000
penalty weights 0.0
Epoch: [37][  26/  26]	Loss 0.005 (0.019)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.31 ( 33.16)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.8744 (14.0699)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.23it/s] 23%|##3       | 6/26 [00:00<00:00, 32.02it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.02it/s] 42%|####2     | 11/26 [00:00<00:00, 38.48it/s] 62%|######1   | 16/26 [00:00<00:00, 41.76it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.76it/s] 81%|########  | 21/26 [00:00<00:00, 39.64it/s]100%|##########| 26/26 [00:00<00:00, 41.64it/s]100%|##########| 26/26 [00:00<00:00, 35.11it/s]
Test: [   0/  26]	Loss 0.031 (0.031)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.031 (0.031)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.065 (0.041)	test_acc   0.98 (  0.99)	test_minacc   0.86 (  0.91)	test_majacc   1.00 (  1.00)	Loss_d 0.065 (0.041)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.86 (  0.91)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.73)
Test: [  20/  26]	Loss 0.028 (0.042)	test_acc   0.99 (  0.99)	test_minacc   0.92 (  0.91)	test_majacc   1.00 (  1.00)	Loss_d 0.028 (0.042)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.92 (  0.91)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.77 (  0.74)
Test: [  26/  26]	Loss 0.004 (0.037)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.037)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.19it/s]
Test: [  0/  1]	Loss 6.284 (6.284)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 6.284 (6.284)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 6.284 (6.284)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 6.284 (6.284)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.50 (  0.50)
Overall Timing[ 37/  1]	epoch_time 0.0401 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0397 (0.0410)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9871000344753266, 0.3490000069141388)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.61it/s] 19%|#9        | 5/26 [00:00<00:01, 20.95it/s] 35%|###4      | 9/26 [00:00<00:00, 26.53it/s] 50%|#####     | 13/26 [00:00<00:00, 29.88it/s] 65%|######5   | 17/26 [00:00<00:00, 32.10it/s] 81%|########  | 21/26 [00:00<00:00, 33.15it/s] 96%|#########6| 25/26 [00:00<00:00, 33.93it/s]100%|##########| 26/26 [00:00<00:00, 28.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 240000
penalty weights 0.0
Epoch: [38][  26/  26]	Loss 0.034 (0.023)	train_nll   0.03 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.69 ( 33.51)	train_acc   0.99 (  0.99)	train_minacc   0.97 (  0.97)	train_majacc   0.99 (  1.00)	train_corr   0.00 (  0.00)	l1 13.6965 (13.7234)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.10it/s] 15%|#5        | 4/26 [00:00<00:01, 19.42it/s] 31%|###       | 8/26 [00:00<00:00, 28.15it/s]                                               31%|###       | 8/26 [00:00<00:00, 28.15it/s] 50%|#####     | 13/26 [00:00<00:00, 35.12it/s] 69%|######9   | 18/26 [00:00<00:00, 35.71it/s]                                                69%|######9   | 18/26 [00:00<00:00, 35.71it/s] 88%|########8 | 23/26 [00:00<00:00, 38.86it/s]100%|##########| 26/26 [00:00<00:00, 33.16it/s]
Test: [   0/  26]	Loss 0.034 (0.034)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.034 (0.034)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.007 (0.033)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.033)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  20/  26]	Loss 0.006 (0.029)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.029)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.72)
Test: [  26/  26]	Loss 0.006 (0.025)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.025)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.35it/s]
Test: [  0/  1]	Loss 5.836 (5.836)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 5.836 (5.836)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 5.836 (5.836)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 5.836 (5.836)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
Overall Timing[ 38/  1]	epoch_time 0.0387 (0.0416)	validation_time 0.0004 (0.0005)	train_time 0.0383 (0.0409)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9914000377058982, 0.4010000228881836)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 30.71it/s] 31%|###       | 8/26 [00:00<00:00, 32.11it/s] 46%|####6     | 12/26 [00:00<00:00, 32.92it/s] 62%|######1   | 16/26 [00:00<00:00, 33.63it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.30it/s] 92%|#########2| 24/26 [00:00<00:00, 35.15it/s]100%|##########| 26/26 [00:00<00:00, 32.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 240000
penalty weights 0.0
Epoch: [39][  26/  26]	Loss 0.005 (0.019)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.05 ( 33.89)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.7123 (13.6096)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.24it/s] 27%|##6       | 7/26 [00:00<00:00, 33.75it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.75it/s] 46%|####6     | 12/26 [00:00<00:00, 38.80it/s] 65%|######5   | 17/26 [00:00<00:00, 42.61it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.61it/s] 85%|########4 | 22/26 [00:00<00:00, 40.55it/s]100%|##########| 26/26 [00:00<00:00, 37.45it/s]
Test: [   0/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.028 (0.014)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.028 (0.014)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.013)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.013)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 39.60it/s]
Test: [  0/  1]	Loss 5.749 (5.749)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.95 (  0.95)	Loss_d 5.749 (5.749)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 5.749 (5.749)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.95 (  0.95)	Loss_d 5.749 (5.749)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.38 (  0.38)
Overall Timing[ 39/  1]	epoch_time 0.0444 (0.0417)	validation_time 0.0006 (0.0005)	train_time 0.0438 (0.0410)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9959000293016433, 0.4100000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.85it/s] 12%|#1        | 3/26 [00:00<00:01, 13.01it/s] 27%|##6       | 7/26 [00:00<00:00, 22.26it/s] 42%|####2     | 11/26 [00:00<00:00, 26.80it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.56it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.83it/s] 88%|########8 | 23/26 [00:00<00:00, 31.96it/s]100%|##########| 26/26 [00:00<00:00, 26.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 240000
penalty weights 0.0
Epoch: [40][  26/  26]	Loss 0.006 (0.022)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.37 ( 34.20)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.5849 (13.9738)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.74it/s]  8%|7         | 2/26 [00:00<00:02,  8.03it/s] 27%|##6       | 7/26 [00:00<00:00, 24.27it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.27it/s] 46%|####6     | 12/26 [00:00<00:00, 32.87it/s] 65%|######5   | 17/26 [00:00<00:00, 37.75it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.75it/s] 85%|########4 | 22/26 [00:00<00:00, 37.29it/s]100%|##########| 26/26 [00:00<00:00, 31.42it/s]
Test: [   0/  26]	Loss 0.053 (0.053)	test_acc   0.98 (  0.98)	test_minacc   0.97 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.053 (0.053)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.059 (0.033)	test_acc   0.98 (  0.99)	test_minacc   0.90 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.059 (0.033)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.90 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  20/  26]	Loss 0.020 (0.035)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.020 (0.035)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.72)
Test: [  26/  26]	Loss 0.003 (0.032)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.032)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.41it/s]
Test: [  0/  1]	Loss 5.612 (5.612)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.91 (  0.91)	Loss_d 5.612 (5.612)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 5.612 (5.612)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.91 (  0.91)	Loss_d 5.612 (5.612)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.38 (  0.38)
Overall Timing[ 40/  1]	epoch_time 0.0396 (0.0416)	validation_time 0.0003 (0.0005)	train_time 0.0392 (0.0410)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9884000425338745, 0.4020000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.05it/s] 23%|##3       | 6/26 [00:00<00:00, 26.34it/s] 38%|###8      | 10/26 [00:00<00:00, 29.26it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.15it/s] 69%|######9   | 18/26 [00:00<00:00, 32.65it/s] 85%|########4 | 22/26 [00:00<00:00, 33.56it/s]100%|##########| 26/26 [00:00<00:00, 34.32it/s]100%|##########| 26/26 [00:00<00:00, 29.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 240000
penalty weights 0.0
Epoch: [41][  26/  26]	Loss 0.006 (0.024)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.84 ( 34.63)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.1427 (13.0637)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.84it/s] 31%|###       | 8/26 [00:00<00:00, 37.53it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.53it/s] 50%|#####     | 13/26 [00:00<00:00, 41.39it/s] 69%|######9   | 18/26 [00:00<00:00, 43.69it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.69it/s] 88%|########8 | 23/26 [00:00<00:00, 40.98it/s]100%|##########| 26/26 [00:00<00:00, 38.93it/s]
Test: [   0/  26]	Loss 0.021 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.021 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.018 (0.015)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.018 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  20/  26]	Loss 0.006 (0.015)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.015)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.013)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.013)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.60it/s]
Test: [  0/  1]	Loss 5.263 (5.263)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.93 (  0.93)	Loss_d 5.263 (5.263)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 5.263 (5.263)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.93 (  0.93)	Loss_d 5.263 (5.263)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.33 (  0.33)
Overall Timing[ 41/  1]	epoch_time 0.0416 (0.0416)	validation_time 0.0006 (0.0005)	train_time 0.0410 (0.0410)
record: (train_acc, test_acc) (0.960900017440319, 0.4750000238418579)
last accs (train_acc, test_acc) (0.9958000281453132, 0.4360000193119049)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.31it/s] 19%|#9        | 5/26 [00:00<00:00, 21.62it/s] 35%|###4      | 9/26 [00:00<00:00, 27.49it/s] 50%|#####     | 13/26 [00:00<00:00, 29.88it/s] 65%|######5   | 17/26 [00:00<00:00, 31.62it/s] 81%|########  | 21/26 [00:00<00:00, 32.70it/s] 96%|#########6| 25/26 [00:00<00:00, 33.15it/s]100%|##########| 26/26 [00:00<00:00, 28.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 240000
penalty weights 0.0
Epoch: [42][  26/  26]	Loss 0.003 (0.011)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.08 ( 34.97)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.2576 (13.7568)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:03,  6.86it/s] 31%|###       | 8/26 [00:00<00:00, 23.49it/s]                                               31%|###       | 8/26 [00:00<00:00, 23.49it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.75it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.13it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.13it/s]100%|##########| 26/26 [00:00<00:00, 44.36it/s]100%|##########| 26/26 [00:00<00:00, 33.00it/s]
Test: [   0/  26]	Loss 0.021 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.021 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.034 (0.015)	test_acc   0.99 (  1.00)	test_minacc   0.95 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.034 (0.015)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.95 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.69)
Test: [  20/  26]	Loss 0.004 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.65it/s]
Test: [  0/  1]	Loss 5.555 (5.555)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.93 (  0.93)	Loss_d 5.555 (5.555)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 5.555 (5.555)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.93 (  0.93)	Loss_d 5.555 (5.555)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.24 (  0.24)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/112/checkpoints/model_best.pth
Overall Timing[ 42/  1]	epoch_time 0.0415 (0.0416)	validation_time 0.0004 (0.0005)	train_time 0.0411 (0.0410)
record: (train_acc, test_acc) (0.9969000222682953, 0.4780000150203705)
last accs (train_acc, test_acc) (0.9969000222682953, 0.4780000150203705)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.42it/s] 19%|#9        | 5/26 [00:00<00:00, 22.46it/s] 35%|###4      | 9/26 [00:00<00:00, 28.08it/s] 50%|#####     | 13/26 [00:00<00:00, 30.39it/s] 65%|######5   | 17/26 [00:00<00:00, 32.54it/s] 81%|########  | 21/26 [00:00<00:00, 33.19it/s] 96%|#########6| 25/26 [00:00<00:00, 33.54it/s]100%|##########| 26/26 [00:00<00:00, 28.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 240000
penalty weights 0.0
Epoch: [43][  26/  26]	Loss 0.020 (0.013)	train_nll   0.02 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.32 ( 35.18)	train_acc   1.00 (  1.00)	train_minacc   0.97 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.5036 (14.4781)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.05it/s] 27%|##6       | 7/26 [00:00<00:00, 30.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.93it/s] 46%|####6     | 12/26 [00:00<00:00, 35.81it/s] 65%|######5   | 17/26 [00:00<00:00, 39.95it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.95it/s] 85%|########4 | 22/26 [00:00<00:00, 39.30it/s]100%|##########| 26/26 [00:00<00:00, 35.29it/s]
Test: [   0/  26]	Loss 0.033 (0.033)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.033 (0.033)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.007 (0.017)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.017)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.69)
Test: [  20/  26]	Loss 0.003 (0.015)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.015)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.002 (0.013)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.013)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.42it/s]
Test: [  0/  1]	Loss 5.461 (5.461)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.92 (  0.92)	Loss_d 5.461 (5.461)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 5.461 (5.461)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.92 (  0.92)	Loss_d 5.461 (5.461)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.26 (  0.26)
Overall Timing[ 43/  1]	epoch_time 0.0444 (0.0417)	validation_time 0.0004 (0.0005)	train_time 0.0440 (0.0410)
record: (train_acc, test_acc) (0.9969000222682953, 0.4780000150203705)
last accs (train_acc, test_acc) (0.9951000316739083, 0.45900002121925354)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 19%|#9        | 5/26 [00:00<00:00, 22.31it/s] 35%|###4      | 9/26 [00:00<00:00, 27.06it/s] 50%|#####     | 13/26 [00:00<00:00, 29.60it/s] 65%|######5   | 17/26 [00:00<00:00, 30.72it/s] 81%|########  | 21/26 [00:00<00:00, 31.84it/s] 96%|#########6| 25/26 [00:00<00:00, 32.60it/s]100%|##########| 26/26 [00:00<00:00, 27.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 240000
penalty weights 0.0
Epoch: [44][  26/  26]	Loss 0.013 (0.015)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.61 ( 35.47)	train_acc   1.00 (  0.99)	train_minacc   0.97 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.1987 (14.4148)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.06it/s] 15%|#5        | 4/26 [00:00<00:01, 11.89it/s] 35%|###4      | 9/26 [00:00<00:00, 23.34it/s]                                               35%|###4      | 9/26 [00:00<00:00, 23.34it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.33it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.33it/s] 92%|#########2| 24/26 [00:00<00:00, 35.76it/s]100%|##########| 26/26 [00:00<00:00, 28.62it/s]
Test: [   0/  26]	Loss 0.012 (0.012)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.012 (0.012)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.012 (0.018)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.012 (0.018)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.69)
Test: [  20/  26]	Loss 0.009 (0.016)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   0.99 (  0.99)	Loss_d 0.009 (0.016)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.69)
Test: [  26/  26]	Loss 0.001 (0.014)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.001 (0.014)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.99it/s]
Test: [  0/  1]	Loss 5.327 (5.327)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.92 (  0.92)	Loss_d 5.327 (5.327)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 5.327 (5.327)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.92 (  0.92)	Loss_d 5.327 (5.327)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.31 (  0.31)
Overall Timing[ 44/  1]	epoch_time 0.0434 (0.0417)	validation_time 0.0005 (0.0005)	train_time 0.0430 (0.0411)
record: (train_acc, test_acc) (0.9969000222682953, 0.4780000150203705)
last accs (train_acc, test_acc) (0.9940000329017639, 0.4400000274181366)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.83it/s] 19%|#9        | 5/26 [00:00<00:00, 23.58it/s] 35%|###4      | 9/26 [00:00<00:00, 28.23it/s] 50%|#####     | 13/26 [00:00<00:00, 30.98it/s] 65%|######5   | 17/26 [00:00<00:00, 32.46it/s] 81%|########  | 21/26 [00:00<00:00, 33.82it/s] 96%|#########6| 25/26 [00:00<00:00, 34.51it/s]100%|##########| 26/26 [00:00<00:00, 29.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 240000
penalty weights 0.0
Epoch: [45][  26/  26]	Loss 0.004 (0.011)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.84 ( 35.74)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.6579 (14.3495)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.47it/s] 23%|##3       | 6/26 [00:00<00:00, 29.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.47it/s] 42%|####2     | 11/26 [00:00<00:00, 36.93it/s] 65%|######5   | 17/26 [00:00<00:00, 40.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.77it/s] 85%|########4 | 22/26 [00:00<00:00, 42.93it/s]100%|##########| 26/26 [00:00<00:00, 36.23it/s]
Test: [   0/  26]	Loss 0.002 (0.002)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.002)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.002 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.69)
Test: [  20/  26]	Loss 0.004 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.000 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 55.36it/s]
Test: [  0/  1]	Loss 5.799 (5.799)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 5.799 (5.799)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 5.799 (5.799)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.94 (  0.94)	Loss_d 5.799 (5.799)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.35 (  0.35)
Overall Timing[ 45/  1]	epoch_time 0.0392 (0.0416)	validation_time 0.0004 (0.0005)	train_time 0.0387 (0.0410)
record: (train_acc, test_acc) (0.9969000222682953, 0.4780000150203705)
last accs (train_acc, test_acc) (0.9988000116944313, 0.41600000858306885)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.73it/s] 23%|##3       | 6/26 [00:00<00:00, 25.92it/s] 38%|###8      | 10/26 [00:00<00:00, 30.11it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.27it/s] 69%|######9   | 18/26 [00:00<00:00, 33.42it/s] 85%|########4 | 22/26 [00:00<00:00, 34.21it/s]100%|##########| 26/26 [00:00<00:00, 34.82it/s]100%|##########| 26/26 [00:00<00:00, 30.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 240000
penalty weights 0.0
Epoch: [46][  26/  26]	Loss 0.002 (0.008)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.01 ( 35.93)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.0873 (14.8894)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.32it/s] 31%|###       | 8/26 [00:00<00:00, 38.90it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.90it/s] 50%|#####     | 13/26 [00:00<00:00, 37.50it/s] 69%|######9   | 18/26 [00:00<00:00, 41.01it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.01it/s] 88%|########8 | 23/26 [00:00<00:00, 41.84it/s]100%|##########| 26/26 [00:00<00:00, 36.54it/s]
Test: [   0/  26]	Loss 0.007 (0.007)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.007)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.002 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.69)
Test: [  20/  26]	Loss 0.001 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.50it/s]
Test: [  0/  1]	Loss 6.253 (6.253)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 6.253 (6.253)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 6.253 (6.253)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 6.253 (6.253)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
Overall Timing[ 46/  1]	epoch_time 0.0399 (0.0416)	validation_time 0.0004 (0.0005)	train_time 0.0395 (0.0410)
record: (train_acc, test_acc) (0.9969000222682953, 0.4780000150203705)
last accs (train_acc, test_acc) (0.9988000140190124, 0.39900001883506775)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 19%|#9        | 5/26 [00:00<00:00, 21.45it/s] 35%|###4      | 9/26 [00:00<00:00, 27.24it/s] 50%|#####     | 13/26 [00:00<00:00, 29.06it/s] 65%|######5   | 17/26 [00:00<00:00, 30.71it/s] 81%|########  | 21/26 [00:00<00:00, 32.38it/s] 96%|#########6| 25/26 [00:00<00:00, 33.79it/s]100%|##########| 26/26 [00:00<00:00, 28.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 240000
penalty weights 0.0
Epoch: [47][  26/  26]	Loss 0.000 (0.005)	train_nll   0.00 (  0.00)	train_penalty   0.00 (  0.00)	weight_norm  36.14 ( 36.08)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.6741 (15.3556)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.95it/s] 23%|##3       | 6/26 [00:00<00:00, 30.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.49it/s] 42%|####2     | 11/26 [00:00<00:00, 37.62it/s] 62%|######1   | 16/26 [00:00<00:00, 41.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.55it/s] 81%|########  | 21/26 [00:00<00:00, 39.53it/s]100%|##########| 26/26 [00:00<00:00, 42.18it/s]100%|##########| 26/26 [00:00<00:00, 35.39it/s]
Test: [   0/  26]	Loss 0.001 (0.001)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.001)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.001 (0.001)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.001)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.69)
Test: [  20/  26]	Loss 0.000 (0.002)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.002)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.000 (0.001)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.001)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.09it/s]
Test: [  0/  1]	Loss 6.388 (6.388)	test_acc   0.45 (  0.45)	test_minacc   0.39 (  0.39)	test_majacc   0.94 (  0.94)	Loss_d 6.388 (6.388)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 6.388 (6.388)	test_acc   0.45 (  0.45)	test_minacc   0.39 (  0.39)	test_majacc   0.94 (  0.94)	Loss_d 6.388 (6.388)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.30 (  0.30)
Overall Timing[ 47/  1]	epoch_time 0.0426 (0.0416)	validation_time 0.0004 (0.0005)	train_time 0.0422 (0.0410)
record: (train_acc, test_acc) (0.9969000222682953, 0.4780000150203705)
last accs (train_acc, test_acc) (0.9999000011682511, 0.445000022649765)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.96it/s] 19%|#9        | 5/26 [00:00<00:01, 17.94it/s] 35%|###4      | 9/26 [00:00<00:00, 24.44it/s] 50%|#####     | 13/26 [00:00<00:00, 28.11it/s] 65%|######5   | 17/26 [00:00<00:00, 30.60it/s] 81%|########  | 21/26 [00:00<00:00, 32.77it/s] 96%|#########6| 25/26 [00:00<00:00, 34.75it/s]100%|##########| 26/26 [00:00<00:00, 27.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 240000
penalty weights 0.0
Epoch: [48][  26/  26]	Loss 0.001 (0.005)	train_nll   0.00 (  0.00)	train_penalty   0.00 (  0.00)	weight_norm  36.27 ( 36.21)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  1.00)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.0308 (15.8988)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.44it/s] 27%|##6       | 7/26 [00:00<00:00, 32.04it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.04it/s] 46%|####6     | 12/26 [00:00<00:00, 38.60it/s] 65%|######5   | 17/26 [00:00<00:00, 41.82it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.82it/s] 85%|########4 | 22/26 [00:00<00:00, 41.91it/s]100%|##########| 26/26 [00:00<00:00, 37.18it/s]
Test: [   0/  26]	Loss 0.012 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.000 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.69)
Test: [  20/  26]	Loss 0.000 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.000 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.37it/s]
Test: [  0/  1]	Loss 6.638 (6.638)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 6.638 (6.638)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 6.638 (6.638)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 6.638 (6.638)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.33 (  0.33)
Overall Timing[ 48/  1]	epoch_time 0.0403 (0.0416)	validation_time 0.0004 (0.0005)	train_time 0.0398 (0.0410)
record: (train_acc, test_acc) (0.9969000222682953, 0.4780000150203705)
last accs (train_acc, test_acc) (0.9989000128507615, 0.43400001525878906)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.51it/s] 23%|##3       | 6/26 [00:00<00:00, 26.59it/s] 38%|###8      | 10/26 [00:00<00:00, 30.30it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.53it/s] 69%|######9   | 18/26 [00:00<00:00, 33.68it/s] 85%|########4 | 22/26 [00:00<00:00, 33.91it/s]100%|##########| 26/26 [00:00<00:00, 33.36it/s]100%|##########| 26/26 [00:00<00:00, 29.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 240000
penalty weights 0.0
Epoch: [49][  26/  26]	Loss 0.002 (0.008)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.43 ( 36.35)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.4545 (15.7228)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.24it/s] 23%|##3       | 6/26 [00:00<00:00, 21.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.16it/s] 42%|####2     | 11/26 [00:00<00:00, 30.40it/s] 62%|######1   | 16/26 [00:00<00:00, 35.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.95it/s] 81%|########  | 21/26 [00:00<00:00, 36.26it/s]100%|##########| 26/26 [00:00<00:00, 39.69it/s]100%|##########| 26/26 [00:00<00:00, 30.37it/s]
Test: [   0/  26]	Loss 0.009 (0.009)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.009 (0.009)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.004 (0.004)	test_acc   0.99 (  1.00)	test_minacc   0.97 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.004)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.97 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.69)
Test: [  20/  26]	Loss 0.001 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.69)
Test: [  26/  26]	Loss 0.000 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.20it/s]
Test: [  0/  1]	Loss 6.151 (6.151)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 6.151 (6.151)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 6.151 (6.151)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 6.151 (6.151)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.31 (  0.31)
Overall Timing[ 49/  1]	epoch_time 0.0393 (0.0416)	validation_time 0.0003 (0.0005)	train_time 0.0390 (0.0409)
record: (train_acc, test_acc) (0.9969000222682953, 0.4780000150203705)
last accs (train_acc, test_acc) (0.9988000116944313, 0.43300002813339233)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.170 MB of 0.170 MB uploadedwandb: \ 0.170 MB of 0.170 MB uploadedwandb: | 0.170 MB of 0.170 MB uploadedwandb: / 0.037 MB of 0.470 MB uploaded (0.003 MB deduped)wandb: - 0.470 MB of 0.470 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/diagnostics/epoch_time_val █▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▂▁▁▁▂▁▁▁▁▂▁▁▂▁▁▁▁▁▂▁▁▂▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/diagnostics/train_time_val █▂▂▁▁▁▁▁▂▁▂▁▁▁▁▁▁▂▁▁▁▂▁▂▁▁▂▂▁▂▁▁▁▂▂▂▁▁▂▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/Loss_avg ▁▁▁▁▁▁▁▁▂▂▂▂▂▂▃▃▅▄▄▅▅▅▆▆▇▇▇▇███▇▇▆▇▇▇███
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/Loss_d_avg ▁▁▁▁▁▁▁▁▂▂▂▂▂▂▃▃▅▄▄▅▅▅▆▆▇▇▇▇███▇▇▆▇▇▇███
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/Loss_d_val ▁▁▁▁▁▁▁▁▂▂▂▂▂▂▃▃▅▄▄▅▅▅▆▆▇▇▇▇███▇▇▆▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/Loss_val ▁▁▁▁▁▁▁▁▂▂▂▂▂▂▃▃▅▄▄▅▅▅▆▆▇▇▇▇███▇▇▆▇▇▇███
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_acc_avg ▁▁▃▄▆▆▆▇▇▇▆▇▇▇▇█▆▇▇▆▇▇▇▇▆▇▇▇▆▆▆▇▇▇██▇▆▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_acc_d_avg ▁▁▃▄▆▆▆▇▇▇▆▇▇▇▇█▆▇▇▆▇▇▇▇▆▇▇▇▆▆▆▇▇▇██▇▆▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_acc_d_val ▁▁▃▄▆▆▆▇▇▇▆▇▇▇▇█▆▇▇▆▇▇▇▇▆▇▇▇▆▆▆▇▇▇██▇▆▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_acc_val ▁▁▃▄▆▆▆▇▇▇▆▇▇▇▇█▆▇▇▆▇▇▇▇▆▇▇▇▆▆▆▇▇▇██▇▆▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_corr_d_avg ██▇▆▅▅▅▄▃▃▄▃▃▂▂▁▄▃▂▃▃▂▂▂▃▃▂▂▃▃▄▂▂▂▁▁▂▃▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_corr_d_val ██▇▆▅▅▅▄▃▃▄▃▃▂▂▁▄▃▂▃▃▂▂▂▃▃▂▂▃▃▄▂▂▂▁▁▂▃▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_majacc_avg ██▆▄▄▃▄▄▂▃▂▁▁▃▃▃▆▃▃▃▆▄▄▅▆▆▆▅▆▆▄▃▂▃▃▃▄▃▄▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_majacc_d_avg ██▆▄▄▃▄▄▂▃▂▁▁▃▃▃▆▃▃▃▆▄▄▅▆▆▆▅▆▆▄▃▂▃▃▃▄▃▄▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_majacc_d_val ██▆▄▄▃▄▄▂▃▂▁▁▃▃▃▆▃▃▃▆▄▄▅▆▆▆▅▆▆▄▃▂▃▃▃▄▃▄▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_majacc_val ██▆▄▄▃▄▄▂▃▂▁▁▃▃▃▆▃▃▃▆▄▄▅▆▆▆▅▆▆▄▃▂▃▃▃▄▃▄▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_minacc_avg ▁▁▃▄▆▆▆▇█▇▇▇▇▇▇█▅▇▇▆▇▇▇▇▆▆▇▇▆▆▆▇▇▇██▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_minacc_d_avg ▁▁▃▄▆▆▆▇█▇▇▇▇▇▇█▅▇▇▆▇▇▇▇▆▆▇▇▆▆▆▇▇▇██▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_minacc_d_val ▁▁▃▄▆▆▆▇█▇▇▇▇▇▇█▅▇▇▆▇▇▇▇▆▆▇▇▆▆▆▇▇▇██▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_minacc_val ▁▁▃▄▆▆▆▇█▇▇▇▇▇▇█▅▇▇▆▇▇▇▇▆▆▇▇▆▆▆▇▇▇██▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/Loss_avg █▇▆▆▅▅▅▅▄▄▄▄▄▃▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/Loss_val ██▇▇▆▅▅▅▄▃▄▃▃▃▂▃▂▁▂▁▁▂▁▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/l1_avg ▂▁▁▁▁▁▁▁▁▁▁▁▂▂▃▃▄▄▄▄▅▅▅▆▆▆▆▇▇▇▇▇▇▆▇▇▇▇██
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/l1_val ▂▁▁▁▁▁▁▁▁▂▂▂▂▂▃▃▄▄▄▅▅▅▆▆▆▆▇▇▇▇▇▇▆▆▇▇▇███
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_acc_avg ▁▂▂▃▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇▇▇▇██████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_acc_val ▂▂▁▁▃▃▃▄▅▆▆▅▆▇▇▆██▇██████▇██████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_majacc_avg ▁▇▇▅▄▃▂▃▂▃▃▃▄▅▅▅▆▆▆▇▇▇▇▇▇▇██████▇███████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_majacc_val ▆▅▂▁▃▂▁▂▅▆▄▂▅▆▆▅█▇▇██▇▇██▇▇█▇██▇█▇██▇███
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_minacc_avg ▁▁▁▂▃▃▄▄▅▅▅▅▆▆▆▇▇▇▇▇████████████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_minacc_val ▁▁▁▂▃▃▄▅▅▆▆▆▇▇▇▆▇███▇████▇██████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_nll_avg █▇▆▆▅▅▅▅▄▄▄▄▄▃▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_nll_val ██▇▇▆▅▅▅▄▃▄▃▃▃▂▃▂▁▂▁▁▂▁▁▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_penalty_avg █▃▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_penalty_val █▇▄▃▃▂▂▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/weight_norm_avg ▁▂▃▃▃▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇▇█████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/weight_norm_val ▁▂▂▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/diagnostics/epoch_time_val 0.03932
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/diagnostics/train_time_val 0.03898
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/diagnostics/validation_time_val 0.00032
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/Loss_avg 6.15097
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/Loss_d_avg 6.15097
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/Loss_d_val 6.15097
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/Loss_val 6.15097
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_acc_avg 0.433
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_acc_d_avg 0.433
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_acc_d_val 0.433
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_acc_val 0.433
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_corr_d_avg 0.30675
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_corr_d_val 0.30675
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_majacc_avg 0.91
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_majacc_d_avg 0.91
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_majacc_d_val 0.91
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_majacc_val 0.91
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_minacc_avg 0.38
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_minacc_d_avg 0.38
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_minacc_d_val 0.38
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/test/test_minacc_val 0.38
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/Loss_avg 0.00806
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/Loss_val 0.00192
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/l1_avg 15.72284
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/l1_val 15.45446
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_acc_avg 0.9976
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_acc_val 1.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_majacc_avg 0.99847
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_majacc_val 1.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_minacc_avg 0.99259
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_minacc_val 1.0
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_nll_avg 0.00806
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_nll_val 0.00192
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_penalty_avg 0.00012
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/train_penalty_val 1e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/weight_norm_avg 36.34641
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/weight_norm_val 36.42584
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/112/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/f8vnvhs3
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_190908-f8vnvhs3/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_191159-25o591ks
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/25o591ks
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=240000, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Conv2d(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1259
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6019, 3, 32, 32) (5981, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:41,  1.64s/it] 19%|#9        | 5/26 [00:01<00:05,  3.74it/s] 35%|###4      | 9/26 [00:01<00:02,  7.41it/s] 50%|#####     | 13/26 [00:01<00:01, 11.39it/s] 65%|######5   | 17/26 [00:02<00:00, 15.57it/s] 81%|########  | 21/26 [00:02<00:00, 19.76it/s] 96%|#########6| 25/26 [00:02<00:00, 23.62it/s]100%|##########| 26/26 [00:02<00:00,  9.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 240000
penalty weights 0.0
Epoch: [0][  26/  26]	Loss 0.456 (0.512)	train_nll   0.46 (  0.51)	train_penalty   0.06 (  0.16)	weight_norm  20.85 ( 18.09)	train_acc   0.82 (  0.81)	train_minacc   0.02 (  0.07)	train_majacc   0.98 (  0.94)	train_corr   0.00 (  0.00)	l1 7.4733 (8.2036)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.89it/s] 27%|##6       | 7/26 [00:00<00:00, 25.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.79it/s] 46%|####6     | 12/26 [00:00<00:00, 33.50it/s] 65%|######5   | 17/26 [00:00<00:00, 35.19it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.19it/s] 85%|########4 | 22/26 [00:00<00:00, 38.96it/s]100%|##########| 26/26 [00:00<00:00, 31.73it/s]
Test: [   0/  26]	Loss 0.457 (0.457)	test_acc   0.82 (  0.82)	test_minacc   0.00 (  0.00)	test_majacc   0.98 (  0.98)	Loss_d 0.457 (0.457)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.406 (0.429)	test_acc   0.85 (  0.84)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.406 (0.429)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  20/  26]	Loss 0.425 (0.421)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.425 (0.421)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.97)
Test: [  26/  26]	Loss 0.454 (0.417)	test_acc   0.82 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.98 (  0.99)	Loss_d 0.454 (0.417)	test_acc_d   0.82 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.96 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]
Test: [  0/  1]	Loss 1.721 (1.721)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.721 (1.721)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.721 (1.721)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.721 (1.721)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0798 (0.0798)	validation_time 0.0068 (0.0068)	train_time 0.0681 (0.0681)
record: (train_acc, test_acc) (0.8443000256419182, 0.10900000482797623)
last accs (train_acc, test_acc) (0.8443000256419182, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.44it/s] 27%|##6       | 7/26 [00:00<00:00, 31.32it/s] 42%|####2     | 11/26 [00:00<00:00, 33.05it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.65it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.71it/s] 88%|########8 | 23/26 [00:00<00:00, 34.49it/s]100%|##########| 26/26 [00:00<00:00, 31.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 240000
penalty weights 0.0
Epoch: [1][  26/  26]	Loss 0.433 (0.416)	train_nll   0.43 (  0.42)	train_penalty   0.06 (  0.06)	weight_norm  21.97 ( 21.62)	train_acc   0.84 (  0.84)	train_minacc   0.02 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.5445 (7.5131)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.65it/s] 23%|##3       | 6/26 [00:00<00:00, 32.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.91it/s] 42%|####2     | 11/26 [00:00<00:00, 38.80it/s] 62%|######1   | 16/26 [00:00<00:00, 42.95it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.95it/s] 81%|########  | 21/26 [00:00<00:00, 44.30it/s]100%|##########| 26/26 [00:00<00:00, 45.77it/s]100%|##########| 26/26 [00:00<00:00, 38.04it/s]
Test: [   0/  26]	Loss 0.444 (0.444)	test_acc   0.82 (  0.82)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.444 (0.444)	test_acc_d   0.82 (  0.82)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.396 (0.416)	test_acc   0.85 (  0.84)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.396 (0.416)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.410 (0.409)	test_acc   0.84 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.410 (0.409)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.427 (0.404)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.427 (0.404)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.85it/s]
Test: [  0/  1]	Loss 1.749 (1.749)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.749 (1.749)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 1.749 (1.749)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.749 (1.749)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Overall Timing[  1/  1]	epoch_time 0.0378 (0.0588)	validation_time 0.0004 (0.0036)	train_time 0.0374 (0.0527)
record: (train_acc, test_acc) (0.8443000256419182, 0.10900000482797623)
last accs (train_acc, test_acc) (0.8471000211238862, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.46it/s] 12%|#1        | 3/26 [00:00<00:01, 13.06it/s] 27%|##6       | 7/26 [00:00<00:00, 23.04it/s] 42%|####2     | 11/26 [00:00<00:00, 28.16it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.19it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.82it/s] 88%|########8 | 23/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:00<00:00, 27.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 240000
penalty weights 0.0
Epoch: [2][  26/  26]	Loss 0.412 (0.407)	train_nll   0.41 (  0.41)	train_penalty   0.06 (  0.06)	weight_norm  22.08 ( 22.04)	train_acc   0.84 (  0.85)	train_minacc   0.02 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.4368 (7.5045)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.93it/s] 27%|##6       | 7/26 [00:00<00:00, 23.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.34it/s] 50%|#####     | 13/26 [00:00<00:00, 32.59it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.68it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.68it/s] 92%|#########2| 24/26 [00:00<00:00, 39.04it/s]100%|##########| 26/26 [00:00<00:00, 31.22it/s]
Test: [   0/  26]	Loss 0.432 (0.432)	test_acc   0.83 (  0.83)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.432 (0.432)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.385 (0.406)	test_acc   0.86 (  0.84)	test_minacc   0.05 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.385 (0.406)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.05 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
Test: [  20/  26]	Loss 0.398 (0.399)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.398 (0.399)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.405 (0.394)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.405 (0.394)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.78it/s]
Test: [  0/  1]	Loss 1.766 (1.766)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.766 (1.766)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.766 (1.766)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.766 (1.766)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  2/  1]	epoch_time 0.0379 (0.0518)	validation_time 0.0004 (0.0025)	train_time 0.0375 (0.0476)
record: (train_acc, test_acc) (0.8443000256419182, 0.10900000482797623)
last accs (train_acc, test_acc) (0.8488000221848487, 0.10500000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.29it/s] 12%|#1        | 3/26 [00:00<00:02, 11.19it/s] 27%|##6       | 7/26 [00:00<00:00, 20.74it/s] 42%|####2     | 11/26 [00:00<00:00, 26.53it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.08it/s] 88%|########8 | 23/26 [00:00<00:00, 33.34it/s]100%|##########| 26/26 [00:00<00:00, 26.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 240000
penalty weights 0.0
Epoch: [3][  26/  26]	Loss 0.396 (0.394)	train_nll   0.40 (  0.39)	train_penalty   0.06 (  0.05)	weight_norm  22.12 ( 22.10)	train_acc   0.84 (  0.85)	train_minacc   0.02 (  0.03)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.4276 (7.4136)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.98it/s] 19%|#9        | 5/26 [00:00<00:00, 25.20it/s] 38%|###8      | 10/26 [00:00<00:00, 34.80it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.80it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.53it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.53it/s] 96%|#########6| 25/26 [00:00<00:00, 41.26it/s]100%|##########| 26/26 [00:00<00:00, 34.53it/s]
Test: [   0/  26]	Loss 0.419 (0.419)	test_acc   0.83 (  0.83)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.419 (0.419)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.365 (0.384)	test_acc   0.85 (  0.84)	test_minacc   0.05 (  0.03)	test_majacc   0.99 (  1.00)	Loss_d 0.365 (0.384)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.05 (  0.03)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.96 (  0.97)
Test: [  20/  26]	Loss 0.364 (0.375)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   0.99 (  1.00)	Loss_d 0.364 (0.375)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.96 (  0.97)
Test: [  26/  26]	Loss 0.377 (0.368)	test_acc   0.84 (  0.85)	test_minacc   0.05 (  0.03)	test_majacc   0.99 (  1.00)	Loss_d 0.377 (0.368)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.05 (  0.03)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.95 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.81it/s]
Test: [  0/  1]	Loss 1.884 (1.884)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.884 (1.884)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.884 (1.884)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.884 (1.884)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0388 (0.0486)	validation_time 0.0003 (0.0020)	train_time 0.0384 (0.0453)
record: (train_acc, test_acc) (0.8503000186085701, 0.11100000888109207)
last accs (train_acc, test_acc) (0.8503000186085701, 0.11100000888109207)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.47it/s] 19%|#9        | 5/26 [00:00<00:01, 17.36it/s] 35%|###4      | 9/26 [00:00<00:00, 24.33it/s] 50%|#####     | 13/26 [00:00<00:00, 28.19it/s] 65%|######5   | 17/26 [00:00<00:00, 30.95it/s] 81%|########  | 21/26 [00:00<00:00, 32.41it/s] 96%|#########6| 25/26 [00:00<00:00, 33.75it/s]100%|##########| 26/26 [00:00<00:00, 26.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 240000
penalty weights 0.0
Epoch: [4][  26/  26]	Loss 0.360 (0.369)	train_nll   0.36 (  0.37)	train_penalty   0.03 (  0.04)	weight_norm  22.18 ( 22.15)	train_acc   0.83 (  0.85)	train_minacc   0.02 (  0.09)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 7.3557 (7.3470)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.88it/s] 27%|##6       | 7/26 [00:00<00:00, 27.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.79it/s] 46%|####6     | 12/26 [00:00<00:00, 34.40it/s] 69%|######9   | 18/26 [00:00<00:00, 38.67it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.67it/s] 88%|########8 | 23/26 [00:00<00:00, 40.28it/s]100%|##########| 26/26 [00:00<00:00, 34.93it/s]
Test: [   0/  26]	Loss 0.379 (0.379)	test_acc   0.84 (  0.84)	test_minacc   0.06 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.379 (0.379)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.347 (0.355)	test_acc   0.85 (  0.84)	test_minacc   0.07 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.347 (0.355)	test_acc_d   0.85 (  0.84)	test_minacc_d   0.07 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  20/  26]	Loss 0.335 (0.348)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.335 (0.348)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.95)
Test: [  26/  26]	Loss 0.337 (0.339)	test_acc   0.84 (  0.85)	test_minacc   0.07 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.337 (0.339)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.07 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.95)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.03it/s]
Test: [  0/  1]	Loss 1.893 (1.893)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.893 (1.893)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.893 (1.893)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.893 (1.893)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0414 (0.0471)	validation_time 0.0004 (0.0017)	train_time 0.0409 (0.0445)
record: (train_acc, test_acc) (0.8528000242710113, 0.11500000208616257)
last accs (train_acc, test_acc) (0.8528000242710113, 0.11500000208616257)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.50it/s] 23%|##3       | 6/26 [00:00<00:00, 25.63it/s] 38%|###8      | 10/26 [00:00<00:00, 29.38it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.23it/s] 69%|######9   | 18/26 [00:00<00:00, 31.93it/s] 85%|########4 | 22/26 [00:00<00:00, 33.15it/s]100%|##########| 26/26 [00:00<00:00, 34.07it/s]100%|##########| 26/26 [00:00<00:00, 29.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 240000
penalty weights 0.0
Epoch: [5][  26/  26]	Loss 0.324 (0.349)	train_nll   0.32 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.24 ( 22.21)	train_acc   0.83 (  0.85)	train_minacc   0.17 (  0.14)	train_majacc   0.96 (  0.98)	train_corr   0.00 (  0.00)	l1 7.4675 (7.1998)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.69it/s] 27%|##6       | 7/26 [00:00<00:00, 31.62it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.62it/s] 46%|####6     | 12/26 [00:00<00:00, 38.03it/s] 65%|######5   | 17/26 [00:00<00:00, 40.93it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.93it/s] 85%|########4 | 22/26 [00:00<00:00, 39.85it/s]100%|##########| 26/26 [00:00<00:00, 35.99it/s]
Test: [   0/  26]	Loss 0.375 (0.375)	test_acc   0.84 (  0.84)	test_minacc   0.15 (  0.15)	test_majacc   0.98 (  0.98)	Loss_d 0.375 (0.375)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.342 (0.337)	test_acc   0.86 (  0.85)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.97)	Loss_d 0.342 (0.337)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.303 (0.330)	test_acc   0.86 (  0.86)	test_minacc   0.28 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 0.303 (0.330)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.28 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.91)
Test: [  26/  26]	Loss 0.302 (0.319)	test_acc   0.83 (  0.86)	test_minacc   0.17 (  0.24)	test_majacc   0.96 (  0.97)	Loss_d 0.302 (0.319)	test_acc_d   0.83 (  0.86)	test_minacc_d   0.17 (  0.24)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.89 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.29it/s]
Test: [  0/  1]	Loss 1.926 (1.926)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   1.00 (  1.00)	Loss_d 1.926 (1.926)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.85 (  0.85)
Test: [  1/  1]	Loss 1.926 (1.926)	test_acc   0.18 (  0.18)	test_minacc   0.09 (  0.09)	test_majacc   1.00 (  1.00)	Loss_d 1.926 (1.926)	test_acc_d   0.18 (  0.18)	test_minacc_d   0.09 (  0.09)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.85 (  0.85)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0448 (0.0467)	validation_time 0.0004 (0.0015)	train_time 0.0443 (0.0444)
record: (train_acc, test_acc) (0.8627000259160995, 0.17800000309944153)
last accs (train_acc, test_acc) (0.8627000259160995, 0.17800000309944153)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.27it/s] 12%|#1        | 3/26 [00:00<00:01, 13.33it/s] 27%|##6       | 7/26 [00:00<00:00, 23.42it/s] 42%|####2     | 11/26 [00:00<00:00, 28.35it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.81it/s] 88%|########8 | 23/26 [00:00<00:00, 34.20it/s]100%|##########| 26/26 [00:00<00:00, 27.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 240000
penalty weights 0.0
Epoch: [6][  26/  26]	Loss 0.304 (0.332)	train_nll   0.30 (  0.33)	train_penalty   0.01 (  0.02)	weight_norm  22.31 ( 22.27)	train_acc   0.83 (  0.85)	train_minacc   0.17 (  0.21)	train_majacc   0.96 (  0.97)	train_corr   0.00 (  0.00)	l1 7.4810 (7.2886)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.61it/s] 15%|#5        | 4/26 [00:00<00:01, 16.07it/s] 38%|###8      | 10/26 [00:00<00:00, 32.38it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.38it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.39it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.68it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.68it/s] 96%|#########6| 25/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 32.89it/s]
Test: [   0/  26]	Loss 0.336 (0.336)	test_acc   0.85 (  0.85)	test_minacc   0.26 (  0.26)	test_majacc   0.97 (  0.97)	Loss_d 0.336 (0.336)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.337 (0.321)	test_acc   0.85 (  0.86)	test_minacc   0.25 (  0.31)	test_majacc   0.95 (  0.96)	Loss_d 0.337 (0.321)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.25 (  0.31)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.297 (0.317)	test_acc   0.88 (  0.86)	test_minacc   0.45 (  0.31)	test_majacc   0.95 (  0.96)	Loss_d 0.297 (0.317)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.45 (  0.31)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.86 (  0.89)
Test: [  26/  26]	Loss 0.279 (0.308)	test_acc   0.84 (  0.87)	test_minacc   0.24 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 0.279 (0.308)	test_acc_d   0.84 (  0.87)	test_minacc_d   0.24 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.96it/s]
Test: [  0/  1]	Loss 1.873 (1.873)	test_acc   0.20 (  0.20)	test_minacc   0.12 (  0.12)	test_majacc   0.99 (  0.99)	Loss_d 1.873 (1.873)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.873 (1.873)	test_acc   0.20 (  0.20)	test_minacc   0.12 (  0.12)	test_majacc   0.99 (  0.99)	Loss_d 1.873 (1.873)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0405 (0.0458)	validation_time 0.0005 (0.0013)	train_time 0.0400 (0.0438)
record: (train_acc, test_acc) (0.8657000190615654, 0.203000009059906)
last accs (train_acc, test_acc) (0.8657000190615654, 0.203000009059906)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.26it/s] 19%|#9        | 5/26 [00:00<00:01, 13.87it/s] 35%|###4      | 9/26 [00:00<00:00, 20.01it/s] 50%|#####     | 13/26 [00:00<00:00, 24.07it/s] 65%|######5   | 17/26 [00:00<00:00, 26.62it/s] 81%|########  | 21/26 [00:00<00:00, 28.53it/s] 96%|#########6| 25/26 [00:01<00:00, 30.37it/s]100%|##########| 26/26 [00:01<00:00, 22.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 240000
penalty weights 0.0
Epoch: [7][  26/  26]	Loss 0.292 (0.322)	train_nll   0.29 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.38 ( 22.34)	train_acc   0.85 (  0.86)	train_minacc   0.29 (  0.26)	train_majacc   0.96 (  0.97)	train_corr   0.00 (  0.00)	l1 7.4650 (7.3178)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:14,  1.75it/s] 23%|##3       | 6/26 [00:00<00:01, 11.34it/s]                                               23%|##3       | 6/26 [00:00<00:01, 11.34it/s] 42%|####2     | 11/26 [00:00<00:00, 19.38it/s] 62%|######1   | 16/26 [00:00<00:00, 26.36it/s]                                                62%|######1   | 16/26 [00:01<00:00, 26.36it/s] 81%|########  | 21/26 [00:01<00:00, 29.27it/s]100%|##########| 26/26 [00:01<00:00, 21.96it/s]
Test: [   0/  26]	Loss 0.320 (0.320)	test_acc   0.85 (  0.85)	test_minacc   0.27 (  0.27)	test_majacc   0.97 (  0.97)	Loss_d 0.320 (0.320)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.329 (0.308)	test_acc   0.86 (  0.86)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 0.329 (0.308)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.291 (0.307)	test_acc   0.87 (  0.86)	test_minacc   0.41 (  0.32)	test_majacc   0.95 (  0.96)	Loss_d 0.291 (0.307)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.41 (  0.32)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.87 (  0.89)
Test: [  26/  26]	Loss 0.261 (0.297)	test_acc   0.87 (  0.87)	test_minacc   0.37 (  0.32)	test_majacc   0.97 (  0.96)	Loss_d 0.261 (0.297)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.37 (  0.32)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.86 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.39it/s]
Test: [  0/  1]	Loss 1.910 (1.910)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 1.910 (1.910)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  1/  1]	Loss 1.910 (1.910)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.99 (  0.99)	Loss_d 1.910 (1.910)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0479 (0.0461)	validation_time 0.0004 (0.0012)	train_time 0.0474 (0.0443)
record: (train_acc, test_acc) (0.8682000225782395, 0.23200000822544098)
last accs (train_acc, test_acc) (0.8682000225782395, 0.23200000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.74it/s] 19%|#9        | 5/26 [00:00<00:00, 23.91it/s] 35%|###4      | 9/26 [00:00<00:00, 29.85it/s] 50%|#####     | 13/26 [00:00<00:00, 32.85it/s] 65%|######5   | 17/26 [00:00<00:00, 34.40it/s] 81%|########  | 21/26 [00:00<00:00, 35.21it/s] 96%|#########6| 25/26 [00:00<00:00, 35.05it/s]100%|##########| 26/26 [00:00<00:00, 30.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 240000
penalty weights 0.0
Epoch: [8][  26/  26]	Loss 0.265 (0.310)	train_nll   0.26 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.47 ( 22.43)	train_acc   0.87 (  0.86)	train_minacc   0.37 (  0.31)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.6115 (7.4371)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.97it/s] 23%|##3       | 6/26 [00:00<00:00, 30.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.24it/s] 42%|####2     | 11/26 [00:00<00:00, 37.33it/s] 62%|######1   | 16/26 [00:00<00:00, 41.23it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.23it/s] 81%|########  | 21/26 [00:00<00:00, 38.67it/s]100%|##########| 26/26 [00:00<00:00, 41.65it/s]100%|##########| 26/26 [00:00<00:00, 34.60it/s]
Test: [   0/  26]	Loss 0.314 (0.314)	test_acc   0.84 (  0.84)	test_minacc   0.30 (  0.30)	test_majacc   0.95 (  0.95)	Loss_d 0.314 (0.314)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.295 (0.283)	test_acc   0.86 (  0.88)	test_minacc   0.39 (  0.42)	test_majacc   0.95 (  0.96)	Loss_d 0.295 (0.283)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.39 (  0.42)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.86 (  0.87)
Test: [  20/  26]	Loss 0.275 (0.282)	test_acc   0.87 (  0.88)	test_minacc   0.48 (  0.43)	test_majacc   0.94 (  0.96)	Loss_d 0.275 (0.282)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.48 (  0.43)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.84 (  0.87)
Test: [  26/  26]	Loss 0.233 (0.274)	test_acc   0.89 (  0.88)	test_minacc   0.51 (  0.44)	test_majacc   0.96 (  0.96)	Loss_d 0.233 (0.274)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.51 (  0.44)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.08it/s]
Test: [  0/  1]	Loss 1.896 (1.896)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.99 (  0.99)	Loss_d 1.896 (1.896)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.75)
Test: [  1/  1]	Loss 1.896 (1.896)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.99 (  0.99)	Loss_d 1.896 (1.896)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.75)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0415 (0.0456)	validation_time 0.0004 (0.0011)	train_time 0.0411 (0.0439)
record: (train_acc, test_acc) (0.8804000250101089, 0.24900001287460327)
last accs (train_acc, test_acc) (0.8804000250101089, 0.24900001287460327)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.17it/s] 23%|##3       | 6/26 [00:00<00:00, 25.85it/s] 38%|###8      | 10/26 [00:00<00:00, 30.40it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.31it/s] 69%|######9   | 18/26 [00:00<00:00, 34.95it/s] 85%|########4 | 22/26 [00:00<00:00, 36.51it/s]100%|##########| 26/26 [00:00<00:00, 36.48it/s]100%|##########| 26/26 [00:00<00:00, 31.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 240000
penalty weights 0.0
Epoch: [9][  26/  26]	Loss 0.263 (0.294)	train_nll   0.26 (  0.29)	train_penalty   0.01 (  0.02)	weight_norm  22.58 ( 22.53)	train_acc   0.86 (  0.87)	train_minacc   0.32 (  0.38)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.6522 (7.5102)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.99it/s] 23%|##3       | 6/26 [00:00<00:00, 23.31it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.31it/s] 42%|####2     | 11/26 [00:00<00:00, 32.16it/s] 62%|######1   | 16/26 [00:00<00:00, 37.23it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.23it/s] 81%|########  | 21/26 [00:00<00:00, 37.47it/s]100%|##########| 26/26 [00:00<00:00, 40.94it/s]100%|##########| 26/26 [00:00<00:00, 31.72it/s]
Test: [   0/  26]	Loss 0.297 (0.297)	test_acc   0.87 (  0.87)	test_minacc   0.47 (  0.47)	test_majacc   0.95 (  0.95)	Loss_d 0.297 (0.297)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.279 (0.272)	test_acc   0.88 (  0.88)	test_minacc   0.56 (  0.51)	test_majacc   0.94 (  0.95)	Loss_d 0.279 (0.272)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.56 (  0.51)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.84 (  0.85)
Test: [  20/  26]	Loss 0.259 (0.270)	test_acc   0.87 (  0.88)	test_minacc   0.52 (  0.50)	test_majacc   0.93 (  0.95)	Loss_d 0.259 (0.270)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.52 (  0.50)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.82 (  0.85)
Test: [  26/  26]	Loss 0.218 (0.262)	test_acc   0.91 (  0.89)	test_minacc   0.68 (  0.52)	test_majacc   0.95 (  0.95)	Loss_d 0.218 (0.262)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.68 (  0.52)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.72it/s]
Test: [  0/  1]	Loss 1.917 (1.917)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.99 (  0.99)	Loss_d 1.917 (1.917)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.70)
Test: [  1/  1]	Loss 1.917 (1.917)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.99 (  0.99)	Loss_d 1.917 (1.917)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.70)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0440 (0.0454)	validation_time 0.0005 (0.0010)	train_time 0.0435 (0.0439)
record: (train_acc, test_acc) (0.8853000172972679, 0.30800002813339233)
last accs (train_acc, test_acc) (0.8853000172972679, 0.30800002813339233)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.03it/s] 15%|#5        | 4/26 [00:00<00:01, 17.12it/s] 31%|###       | 8/26 [00:00<00:00, 25.43it/s] 46%|####6     | 12/26 [00:00<00:00, 30.29it/s] 62%|######1   | 16/26 [00:00<00:00, 32.98it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.64it/s] 92%|#########2| 24/26 [00:00<00:00, 35.47it/s]100%|##########| 26/26 [00:00<00:00, 28.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 240000
penalty weights 0.0
Epoch: [10][  26/  26]	Loss 0.242 (0.284)	train_nll   0.24 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.71 ( 22.65)	train_acc   0.87 (  0.87)	train_minacc   0.32 (  0.43)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.4855 (7.6211)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:01, 18.91it/s] 35%|###4      | 9/26 [00:00<00:00, 30.54it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.66it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.66it/s] 92%|#########2| 24/26 [00:00<00:00, 38.63it/s]100%|##########| 26/26 [00:00<00:00, 33.70it/s]
Test: [   0/  26]	Loss 0.302 (0.302)	test_acc   0.87 (  0.87)	test_minacc   0.35 (  0.35)	test_majacc   0.97 (  0.97)	Loss_d 0.302 (0.302)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.302 (0.267)	test_acc   0.87 (  0.88)	test_minacc   0.42 (  0.44)	test_majacc   0.95 (  0.96)	Loss_d 0.302 (0.267)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.42 (  0.44)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.86 (  0.87)
Test: [  20/  26]	Loss 0.258 (0.266)	test_acc   0.88 (  0.88)	test_minacc   0.52 (  0.45)	test_majacc   0.95 (  0.96)	Loss_d 0.258 (0.266)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.52 (  0.45)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.85 (  0.87)
Test: [  26/  26]	Loss 0.198 (0.257)	test_acc   0.92 (  0.89)	test_minacc   0.63 (  0.46)	test_majacc   0.97 (  0.96)	Loss_d 0.198 (0.257)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.63 (  0.46)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.85 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.35it/s]
Test: [  0/  1]	Loss 2.013 (2.013)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.96 (  0.96)	Loss_d 2.013 (2.013)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 2.013 (2.013)	test_acc   0.25 (  0.25)	test_minacc   0.17 (  0.17)	test_majacc   0.96 (  0.96)	Loss_d 2.013 (2.013)	test_acc_d   0.25 (  0.25)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.76 (  0.76)
Overall Timing[ 10/  1]	epoch_time 0.0423 (0.0451)	validation_time 0.0004 (0.0010)	train_time 0.0419 (0.0437)
record: (train_acc, test_acc) (0.8853000172972679, 0.30800002813339233)
last accs (train_acc, test_acc) (0.8860000304579735, 0.24500000476837158)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.78it/s] 19%|#9        | 5/26 [00:00<00:00, 22.80it/s] 35%|###4      | 9/26 [00:00<00:00, 28.06it/s] 50%|#####     | 13/26 [00:00<00:00, 30.15it/s] 65%|######5   | 17/26 [00:00<00:00, 31.57it/s] 81%|########  | 21/26 [00:00<00:00, 32.80it/s] 96%|#########6| 25/26 [00:00<00:00, 33.45it/s]100%|##########| 26/26 [00:00<00:00, 28.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 240000
penalty weights 0.0
Epoch: [11][  26/  26]	Loss 0.237 (0.273)	train_nll   0.24 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  22.87 ( 22.79)	train_acc   0.89 (  0.88)	train_minacc   0.44 (  0.47)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.6940 (7.6968)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.76it/s] 23%|##3       | 6/26 [00:00<00:00, 27.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.74it/s] 42%|####2     | 11/26 [00:00<00:00, 35.34it/s] 62%|######1   | 16/26 [00:00<00:00, 39.86it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.86it/s] 81%|########  | 21/26 [00:00<00:00, 38.87it/s]100%|##########| 26/26 [00:00<00:00, 41.90it/s]100%|##########| 26/26 [00:00<00:00, 33.99it/s]
Test: [   0/  26]	Loss 0.297 (0.297)	test_acc   0.89 (  0.89)	test_minacc   0.47 (  0.47)	test_majacc   0.98 (  0.98)	Loss_d 0.297 (0.297)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.294 (0.274)	test_acc   0.87 (  0.89)	test_minacc   0.42 (  0.49)	test_majacc   0.95 (  0.96)	Loss_d 0.294 (0.274)	test_acc_d   0.87 (  0.89)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.85 (  0.86)
Test: [  20/  26]	Loss 0.251 (0.275)	test_acc   0.89 (  0.88)	test_minacc   0.53 (  0.48)	test_majacc   0.95 (  0.96)	Loss_d 0.251 (0.275)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.53 (  0.48)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.85 (  0.86)
Test: [  26/  26]	Loss 0.189 (0.264)	test_acc   0.93 (  0.89)	test_minacc   0.66 (  0.50)	test_majacc   0.98 (  0.96)	Loss_d 0.189 (0.264)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.66 (  0.50)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.85 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.08it/s]
Test: [  0/  1]	Loss 2.132 (2.132)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.95 (  0.95)	Loss_d 2.132 (2.132)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Test: [  1/  1]	Loss 2.132 (2.132)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.95 (  0.95)	Loss_d 2.132 (2.132)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Overall Timing[ 11/  1]	epoch_time 0.0440 (0.0450)	validation_time 0.0003 (0.0009)	train_time 0.0436 (0.0437)
record: (train_acc, test_acc) (0.8853000172972679, 0.30800002813339233)
last accs (train_acc, test_acc) (0.8895000247359276, 0.26900002360343933)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.30it/s] 27%|##6       | 7/26 [00:00<00:00, 29.04it/s] 42%|####2     | 11/26 [00:00<00:00, 31.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.34it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.77it/s] 88%|########8 | 23/26 [00:00<00:00, 34.55it/s]100%|##########| 26/26 [00:00<00:00, 30.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 240000
penalty weights 0.0
Epoch: [12][  26/  26]	Loss 0.252 (0.269)	train_nll   0.25 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.06 ( 22.97)	train_acc   0.87 (  0.88)	train_minacc   0.37 (  0.51)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.2906 (7.7394)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.65it/s] 23%|##3       | 6/26 [00:00<00:00, 31.05it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.05it/s] 42%|####2     | 11/26 [00:00<00:00, 37.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.78it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 37.78it/s] 81%|########  | 21/26 [00:00<00:00, 40.04it/s]100%|##########| 26/26 [00:00<00:00, 42.92it/s]100%|##########| 26/26 [00:00<00:00, 35.19it/s]
Test: [   0/  26]	Loss 0.293 (0.293)	test_acc   0.87 (  0.87)	test_minacc   0.33 (  0.33)	test_majacc   0.98 (  0.98)	Loss_d 0.293 (0.293)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.272 (0.263)	test_acc   0.88 (  0.89)	test_minacc   0.42 (  0.45)	test_majacc   0.96 (  0.97)	Loss_d 0.272 (0.263)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.42 (  0.45)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.87 (  0.88)
Test: [  20/  26]	Loss 0.259 (0.260)	test_acc   0.88 (  0.89)	test_minacc   0.48 (  0.46)	test_majacc   0.95 (  0.96)	Loss_d 0.259 (0.260)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.48 (  0.46)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.86 (  0.87)
Test: [  26/  26]	Loss 0.213 (0.253)	test_acc   0.92 (  0.89)	test_minacc   0.59 (  0.48)	test_majacc   0.98 (  0.96)	Loss_d 0.213 (0.253)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.59 (  0.48)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.86 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.17it/s]
Test: [  0/  1]	Loss 2.074 (2.074)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.96 (  0.96)	Loss_d 2.074 (2.074)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Test: [  1/  1]	Loss 2.074 (2.074)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.96 (  0.96)	Loss_d 2.074 (2.074)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Overall Timing[ 12/  1]	epoch_time 0.0411 (0.0447)	validation_time 0.0004 (0.0009)	train_time 0.0407 (0.0434)
record: (train_acc, test_acc) (0.8853000172972679, 0.30800002813339233)
last accs (train_acc, test_acc) (0.8902000209093094, 0.23000000417232513)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.35it/s] 19%|#9        | 5/26 [00:00<00:01, 19.48it/s] 35%|###4      | 9/26 [00:00<00:00, 26.24it/s] 50%|#####     | 13/26 [00:00<00:00, 29.64it/s] 65%|######5   | 17/26 [00:00<00:00, 31.22it/s] 81%|########  | 21/26 [00:00<00:00, 33.15it/s] 96%|#########6| 25/26 [00:00<00:00, 34.33it/s]100%|##########| 26/26 [00:00<00:00, 27.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 240000
penalty weights 0.0
Epoch: [13][  26/  26]	Loss 0.226 (0.253)	train_nll   0.23 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.27 ( 23.16)	train_acc   0.89 (  0.89)	train_minacc   0.54 (  0.53)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 6.9992 (7.8875)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.65it/s] 19%|#9        | 5/26 [00:00<00:01, 18.68it/s] 38%|###8      | 10/26 [00:00<00:00, 29.13it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.13it/s] 62%|######1   | 16/26 [00:00<00:00, 39.05it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.05it/s] 81%|########  | 21/26 [00:00<00:00, 38.72it/s]100%|##########| 26/26 [00:00<00:00, 31.67it/s]
Test: [   0/  26]	Loss 0.253 (0.253)	test_acc   0.90 (  0.90)	test_minacc   0.59 (  0.59)	test_majacc   0.96 (  0.96)	Loss_d 0.253 (0.253)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.248 (0.248)	test_acc   0.90 (  0.89)	test_minacc   0.63 (  0.58)	test_majacc   0.95 (  0.95)	Loss_d 0.248 (0.248)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.63 (  0.58)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.83)
Test: [  20/  26]	Loss 0.267 (0.245)	test_acc   0.87 (  0.89)	test_minacc   0.60 (  0.58)	test_majacc   0.92 (  0.95)	Loss_d 0.267 (0.245)	test_acc_d   0.87 (  0.89)	test_minacc_d   0.60 (  0.58)	test_majacc_d   0.92 (  0.95)	test_corr_d   0.80 (  0.83)
Test: [  26/  26]	Loss 0.206 (0.241)	test_acc   0.92 (  0.90)	test_minacc   0.73 (  0.59)	test_majacc   0.95 (  0.95)	Loss_d 0.206 (0.241)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.73 (  0.59)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.33it/s]
Test: [  0/  1]	Loss 1.794 (1.794)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 1.794 (1.794)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.794 (1.794)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 1.794 (1.794)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.71 (  0.71)
Overall Timing[ 13/  1]	epoch_time 0.0437 (0.0447)	validation_time 0.0004 (0.0009)	train_time 0.0434 (0.0434)
record: (train_acc, test_acc) (0.8853000172972679, 0.30800002813339233)
last accs (train_acc, test_acc) (0.8964000228643417, 0.3070000112056732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.54it/s] 15%|#5        | 4/26 [00:00<00:01, 18.46it/s] 31%|###       | 8/26 [00:00<00:00, 25.96it/s] 46%|####6     | 12/26 [00:00<00:00, 28.89it/s] 62%|######1   | 16/26 [00:00<00:00, 30.95it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.05it/s] 92%|#########2| 24/26 [00:00<00:00, 33.09it/s]100%|##########| 26/26 [00:00<00:00, 28.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 240000
penalty weights 0.0
Epoch: [14][  26/  26]	Loss 0.215 (0.238)	train_nll   0.22 (  0.24)	train_penalty   0.01 (  0.01)	weight_norm  23.51 ( 23.39)	train_acc   0.91 (  0.90)	train_minacc   0.63 (  0.59)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.3147 (8.0499)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.76it/s] 27%|##6       | 7/26 [00:00<00:00, 35.29it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.29it/s] 46%|####6     | 12/26 [00:00<00:00, 40.48it/s] 65%|######5   | 17/26 [00:00<00:00, 39.86it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.86it/s] 85%|########4 | 22/26 [00:00<00:00, 42.81it/s]100%|##########| 26/26 [00:00<00:00, 36.34it/s]
Test: [   0/  26]	Loss 0.276 (0.276)	test_acc   0.88 (  0.88)	test_minacc   0.45 (  0.45)	test_majacc   0.96 (  0.96)	Loss_d 0.276 (0.276)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.254 (0.244)	test_acc   0.88 (  0.90)	test_minacc   0.59 (  0.59)	test_majacc   0.93 (  0.96)	Loss_d 0.254 (0.244)	test_acc_d   0.88 (  0.90)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.93 (  0.96)	test_corr_d   0.82 (  0.83)
Test: [  20/  26]	Loss 0.246 (0.233)	test_acc   0.89 (  0.90)	test_minacc   0.57 (  0.61)	test_majacc   0.95 (  0.96)	Loss_d 0.246 (0.233)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.57 (  0.61)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.81 (  0.82)
Test: [  26/  26]	Loss 0.181 (0.227)	test_acc   0.95 (  0.91)	test_minacc   0.85 (  0.63)	test_majacc   0.97 (  0.96)	Loss_d 0.181 (0.227)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.85 (  0.63)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.80 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.09it/s]
Test: [  0/  1]	Loss 1.998 (1.998)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 1.998 (1.998)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.998 (1.998)	test_acc   0.29 (  0.29)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 1.998 (1.998)	test_acc_d   0.29 (  0.29)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
Overall Timing[ 14/  1]	epoch_time 0.0490 (0.0450)	validation_time 0.0004 (0.0008)	train_time 0.0486 (0.0438)
record: (train_acc, test_acc) (0.8853000172972679, 0.30800002813339233)
last accs (train_acc, test_acc) (0.9070000246167182, 0.2930000126361847)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 19%|#9        | 5/26 [00:00<00:00, 23.47it/s] 35%|###4      | 9/26 [00:00<00:00, 29.18it/s] 50%|#####     | 13/26 [00:00<00:00, 30.99it/s] 65%|######5   | 17/26 [00:00<00:00, 32.44it/s] 81%|########  | 21/26 [00:00<00:00, 33.27it/s] 96%|#########6| 25/26 [00:00<00:00, 33.51it/s]100%|##########| 26/26 [00:00<00:00, 28.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 240000
penalty weights 0.0
Epoch: [15][  26/  26]	Loss 0.170 (0.225)	train_nll   0.17 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.77 ( 23.64)	train_acc   0.93 (  0.90)	train_minacc   0.68 (  0.64)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 8.2755 (7.9761)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.03it/s] 27%|##6       | 7/26 [00:00<00:00, 26.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.82it/s] 46%|####6     | 12/26 [00:00<00:00, 35.00it/s] 65%|######5   | 17/26 [00:00<00:00, 39.64it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.64it/s] 85%|########4 | 22/26 [00:00<00:00, 38.55it/s]100%|##########| 26/26 [00:00<00:00, 33.52it/s]
Test: [   0/  26]	Loss 0.285 (0.285)	test_acc   0.88 (  0.88)	test_minacc   0.56 (  0.56)	test_majacc   0.95 (  0.95)	Loss_d 0.285 (0.285)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.236 (0.239)	test_acc   0.91 (  0.90)	test_minacc   0.64 (  0.63)	test_majacc   0.95 (  0.95)	Loss_d 0.236 (0.239)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.64 (  0.63)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.79 (  0.79)
Test: [  20/  26]	Loss 0.213 (0.218)	test_acc   0.91 (  0.91)	test_minacc   0.71 (  0.67)	test_majacc   0.95 (  0.95)	Loss_d 0.213 (0.218)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.71 (  0.67)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.75 (  0.78)
Test: [  26/  26]	Loss 0.127 (0.209)	test_acc   0.95 (  0.91)	test_minacc   0.83 (  0.69)	test_majacc   0.97 (  0.95)	Loss_d 0.127 (0.209)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.83 (  0.69)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.76 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.50it/s]
Test: [  0/  1]	Loss 2.451 (2.451)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 2.451 (2.451)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 2.451 (2.451)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 2.451 (2.451)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.57 (  0.57)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[ 15/  1]	epoch_time 0.0438 (0.0449)	validation_time 0.0004 (0.0008)	train_time 0.0434 (0.0438)
record: (train_acc, test_acc) (0.91090002566576, 0.35600000619888306)
last accs (train_acc, test_acc) (0.91090002566576, 0.35600000619888306)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.39it/s] 15%|#5        | 4/26 [00:00<00:01, 15.76it/s] 31%|###       | 8/26 [00:00<00:00, 23.41it/s] 46%|####6     | 12/26 [00:00<00:00, 27.39it/s] 62%|######1   | 16/26 [00:00<00:00, 30.57it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.78it/s] 92%|#########2| 24/26 [00:00<00:00, 33.86it/s]100%|##########| 26/26 [00:00<00:00, 26.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 240000
penalty weights 0.0
Epoch: [16][  26/  26]	Loss 0.160 (0.223)	train_nll   0.16 (  0.22)	train_penalty   0.00 (  0.01)	weight_norm  24.04 ( 23.92)	train_acc   0.94 (  0.90)	train_minacc   0.78 (  0.63)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 8.1976 (7.8371)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.59it/s] 23%|##3       | 6/26 [00:00<00:00, 29.88it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.88it/s] 42%|####2     | 11/26 [00:00<00:00, 36.72it/s] 62%|######1   | 16/26 [00:00<00:00, 40.73it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.73it/s] 81%|########  | 21/26 [00:00<00:00, 40.64it/s]100%|##########| 26/26 [00:00<00:00, 43.04it/s]100%|##########| 26/26 [00:00<00:00, 35.53it/s]
Test: [   0/  26]	Loss 0.227 (0.227)	test_acc   0.92 (  0.92)	test_minacc   0.61 (  0.61)	test_majacc   0.98 (  0.98)	Loss_d 0.227 (0.227)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.207 (0.200)	test_acc   0.91 (  0.92)	test_minacc   0.56 (  0.60)	test_majacc   0.98 (  0.98)	Loss_d 0.207 (0.200)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.56 (  0.60)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.86 (  0.85)
Test: [  20/  26]	Loss 0.182 (0.185)	test_acc   0.93 (  0.93)	test_minacc   0.71 (  0.64)	test_majacc   0.97 (  0.98)	Loss_d 0.182 (0.185)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.71 (  0.64)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.81 (  0.84)
Test: [  26/  26]	Loss 0.106 (0.176)	test_acc   0.98 (  0.93)	test_minacc   0.95 (  0.66)	test_majacc   0.99 (  0.98)	Loss_d 0.106 (0.176)	test_acc_d   0.98 (  0.93)	test_minacc_d   0.95 (  0.66)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.79 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.27it/s]
Test: [  0/  1]	Loss 2.757 (2.757)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 2.757 (2.757)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 2.757 (2.757)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.98 (  0.98)	Loss_d 2.757 (2.757)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.69 (  0.69)
Overall Timing[ 16/  1]	epoch_time 0.0401 (0.0446)	validation_time 0.0003 (0.0008)	train_time 0.0397 (0.0435)
record: (train_acc, test_acc) (0.91090002566576, 0.35600000619888306)
last accs (train_acc, test_acc) (0.9312000173330307, 0.3070000112056732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.00it/s] 19%|#9        | 5/26 [00:00<00:01, 16.55it/s] 35%|###4      | 9/26 [00:00<00:00, 23.75it/s] 50%|#####     | 13/26 [00:00<00:00, 27.99it/s] 65%|######5   | 17/26 [00:00<00:00, 30.80it/s] 81%|########  | 21/26 [00:00<00:00, 32.49it/s] 96%|#########6| 25/26 [00:00<00:00, 33.27it/s]100%|##########| 26/26 [00:01<00:00, 25.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 240000
penalty weights 0.0
Epoch: [17][  26/  26]	Loss 0.159 (0.206)	train_nll   0.16 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm  24.32 ( 24.18)	train_acc   0.94 (  0.91)	train_minacc   0.83 (  0.67)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.9874 (8.1126)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 23%|##3       | 6/26 [00:00<00:00, 27.67it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.67it/s] 42%|####2     | 11/26 [00:00<00:00, 36.13it/s] 62%|######1   | 16/26 [00:00<00:00, 40.03it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.03it/s] 81%|########  | 21/26 [00:00<00:00, 39.06it/s]100%|##########| 26/26 [00:00<00:00, 34.29it/s]
Test: [   0/  26]	Loss 0.179 (0.179)	test_acc   0.93 (  0.93)	test_minacc   0.73 (  0.73)	test_majacc   0.97 (  0.97)	Loss_d 0.179 (0.179)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.180 (0.166)	test_acc   0.93 (  0.93)	test_minacc   0.69 (  0.72)	test_majacc   0.97 (  0.97)	Loss_d 0.180 (0.166)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.69 (  0.72)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.80 (  0.80)
Test: [  20/  26]	Loss 0.138 (0.155)	test_acc   0.94 (  0.94)	test_minacc   0.79 (  0.75)	test_majacc   0.97 (  0.97)	Loss_d 0.138 (0.155)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.79 (  0.75)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.78 (  0.80)
Test: [  26/  26]	Loss 0.110 (0.147)	test_acc   0.96 (  0.94)	test_minacc   0.90 (  0.77)	test_majacc   0.97 (  0.97)	Loss_d 0.110 (0.147)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.90 (  0.77)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.75 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.98it/s]
Test: [  0/  1]	Loss 2.640 (2.640)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 2.640 (2.640)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 2.640 (2.640)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 2.640 (2.640)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.60 (  0.60)
Overall Timing[ 17/  1]	epoch_time 0.0434 (0.0445)	validation_time 0.0006 (0.0008)	train_time 0.0427 (0.0435)
record: (train_acc, test_acc) (0.91090002566576, 0.35600000619888306)
last accs (train_acc, test_acc) (0.9421000217795372, 0.35200002789497375)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.55it/s] 15%|#5        | 4/26 [00:00<00:01, 17.63it/s] 31%|###       | 8/26 [00:00<00:00, 25.14it/s] 46%|####6     | 12/26 [00:00<00:00, 28.77it/s] 62%|######1   | 16/26 [00:00<00:00, 30.82it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.71it/s] 92%|#########2| 24/26 [00:00<00:00, 33.91it/s]100%|##########| 26/26 [00:00<00:00, 27.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 240000
penalty weights 0.0
Epoch: [18][  26/  26]	Loss 0.150 (0.181)	train_nll   0.15 (  0.18)	train_penalty   0.00 (  0.00)	weight_norm  24.63 ( 24.47)	train_acc   0.93 (  0.93)	train_minacc   0.78 (  0.71)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 8.2271 (8.6468)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.07it/s] 19%|#9        | 5/26 [00:00<00:01, 16.95it/s] 38%|###8      | 10/26 [00:00<00:00, 26.36it/s]                                                38%|###8      | 10/26 [00:00<00:00, 26.36it/s] 62%|######1   | 16/26 [00:00<00:00, 35.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.89it/s] 81%|########  | 21/26 [00:00<00:00, 36.73it/s]100%|##########| 26/26 [00:00<00:00, 40.05it/s]100%|##########| 26/26 [00:00<00:00, 29.76it/s]
Test: [   0/  26]	Loss 0.169 (0.169)	test_acc   0.93 (  0.93)	test_minacc   0.71 (  0.71)	test_majacc   0.98 (  0.98)	Loss_d 0.169 (0.169)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.154 (0.162)	test_acc   0.94 (  0.94)	test_minacc   0.81 (  0.78)	test_majacc   0.97 (  0.97)	Loss_d 0.154 (0.162)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.81 (  0.78)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  20/  26]	Loss 0.134 (0.155)	test_acc   0.96 (  0.94)	test_minacc   0.88 (  0.79)	test_majacc   0.97 (  0.97)	Loss_d 0.134 (0.155)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.88 (  0.79)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.75 (  0.77)
Test: [  26/  26]	Loss 0.088 (0.146)	test_acc   0.98 (  0.94)	test_minacc   0.98 (  0.81)	test_majacc   0.98 (  0.97)	Loss_d 0.088 (0.146)	test_acc_d   0.98 (  0.94)	test_minacc_d   0.98 (  0.81)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.74 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.04it/s]
Test: [  0/  1]	Loss 2.557 (2.557)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 2.557 (2.557)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 2.557 (2.557)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 2.557 (2.557)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.52 (  0.52)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0390 (0.0442)	validation_time 0.0004 (0.0008)	train_time 0.0386 (0.0432)
record: (train_acc, test_acc) (0.9443000177145005, 0.3750000298023224)
last accs (train_acc, test_acc) (0.9443000177145005, 0.3750000298023224)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.91it/s] 19%|#9        | 5/26 [00:00<00:00, 23.65it/s] 35%|###4      | 9/26 [00:00<00:00, 28.62it/s] 50%|#####     | 13/26 [00:00<00:00, 31.17it/s] 65%|######5   | 17/26 [00:00<00:00, 32.57it/s] 81%|########  | 21/26 [00:00<00:00, 33.75it/s] 96%|#########6| 25/26 [00:00<00:00, 34.66it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 240000
penalty weights 0.0
Epoch: [19][  26/  26]	Loss 0.093 (0.154)	train_nll   0.09 (  0.15)	train_penalty   0.00 (  0.00)	weight_norm  24.94 ( 24.78)	train_acc   0.97 (  0.94)	train_minacc   0.95 (  0.77)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 8.6735 (9.3800)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.52it/s] 23%|##3       | 6/26 [00:00<00:00, 29.11it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.11it/s] 42%|####2     | 11/26 [00:00<00:00, 37.89it/s] 62%|######1   | 16/26 [00:00<00:00, 39.36it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.36it/s] 81%|########  | 21/26 [00:00<00:00, 41.30it/s]100%|##########| 26/26 [00:00<00:00, 43.48it/s]100%|##########| 26/26 [00:00<00:00, 34.63it/s]
Test: [   0/  26]	Loss 0.170 (0.170)	test_acc   0.94 (  0.94)	test_minacc   0.79 (  0.79)	test_majacc   0.97 (  0.97)	Loss_d 0.170 (0.170)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.143 (0.147)	test_acc   0.94 (  0.94)	test_minacc   0.83 (  0.81)	test_majacc   0.96 (  0.97)	Loss_d 0.143 (0.147)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.83 (  0.81)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.73 (  0.75)
Test: [  20/  26]	Loss 0.128 (0.142)	test_acc   0.95 (  0.94)	test_minacc   0.95 (  0.84)	test_majacc   0.95 (  0.96)	Loss_d 0.128 (0.142)	test_acc_d   0.95 (  0.94)	test_minacc_d   0.95 (  0.84)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.71 (  0.74)
Test: [  26/  26]	Loss 0.062 (0.132)	test_acc   0.99 (  0.95)	test_minacc   0.98 (  0.85)	test_majacc   1.00 (  0.97)	Loss_d 0.062 (0.132)	test_acc_d   0.99 (  0.95)	test_minacc_d   0.98 (  0.85)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.72 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.35it/s]
Test: [  0/  1]	Loss 2.710 (2.710)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 2.710 (2.710)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 2.710 (2.710)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 2.710 (2.710)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.47 (  0.47)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0415 (0.0441)	validation_time 0.0004 (0.0007)	train_time 0.0411 (0.0431)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 19%|#9        | 5/26 [00:00<00:00, 22.12it/s] 35%|###4      | 9/26 [00:00<00:00, 28.23it/s] 50%|#####     | 13/26 [00:00<00:00, 31.36it/s] 65%|######5   | 17/26 [00:00<00:00, 32.61it/s] 81%|########  | 21/26 [00:00<00:00, 34.31it/s] 96%|#########6| 25/26 [00:00<00:00, 35.59it/s]100%|##########| 26/26 [00:00<00:00, 29.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 240000
penalty weights 0.0
Epoch: [20][  26/  26]	Loss 0.109 (0.151)	train_nll   0.11 (  0.15)	train_penalty   0.00 (  0.00)	weight_norm  25.28 ( 25.11)	train_acc   0.97 (  0.94)	train_minacc   0.85 (  0.77)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 8.8018 (9.1877)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 23%|##3       | 6/26 [00:00<00:00, 30.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.06it/s] 42%|####2     | 11/26 [00:00<00:00, 36.53it/s] 62%|######1   | 16/26 [00:00<00:00, 41.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.08it/s] 81%|########  | 21/26 [00:00<00:00, 39.35it/s]100%|##########| 26/26 [00:00<00:00, 42.27it/s]100%|##########| 26/26 [00:00<00:00, 35.01it/s]
Test: [   0/  26]	Loss 0.225 (0.225)	test_acc   0.89 (  0.89)	test_minacc   0.56 (  0.56)	test_majacc   0.96 (  0.96)	Loss_d 0.225 (0.225)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.163 (0.167)	test_acc   0.93 (  0.93)	test_minacc   0.73 (  0.73)	test_majacc   0.96 (  0.97)	Loss_d 0.163 (0.167)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  20/  26]	Loss 0.097 (0.150)	test_acc   0.97 (  0.94)	test_minacc   0.91 (  0.78)	test_majacc   0.98 (  0.97)	Loss_d 0.097 (0.150)	test_acc_d   0.97 (  0.94)	test_minacc_d   0.91 (  0.78)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.74 (  0.76)
Test: [  26/  26]	Loss 0.071 (0.139)	test_acc   0.98 (  0.94)	test_minacc   0.95 (  0.81)	test_majacc   0.99 (  0.97)	Loss_d 0.071 (0.139)	test_acc_d   0.98 (  0.94)	test_minacc_d   0.95 (  0.81)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.72 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.34it/s]
Test: [  0/  1]	Loss 2.850 (2.850)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.91 (  0.91)	Loss_d 2.850 (2.850)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 2.850 (2.850)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.91 (  0.91)	Loss_d 2.850 (2.850)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.53 (  0.53)
Overall Timing[ 20/  1]	epoch_time 0.0389 (0.0439)	validation_time 0.0004 (0.0007)	train_time 0.0384 (0.0429)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.9438000202775002, 0.3580000102519989)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.35it/s] 19%|#9        | 5/26 [00:00<00:00, 22.58it/s] 35%|###4      | 9/26 [00:00<00:00, 28.65it/s] 50%|#####     | 13/26 [00:00<00:00, 31.64it/s] 65%|######5   | 17/26 [00:00<00:00, 33.06it/s] 81%|########  | 21/26 [00:00<00:00, 34.28it/s] 96%|#########6| 25/26 [00:00<00:00, 34.39it/s]100%|##########| 26/26 [00:00<00:00, 28.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 240000
penalty weights 0.0
Epoch: [21][  26/  26]	Loss 0.157 (0.137)	train_nll   0.16 (  0.14)	train_penalty   0.01 (  0.00)	weight_norm  25.62 ( 25.46)	train_acc   0.95 (  0.95)	train_minacc   0.80 (  0.79)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 9.8527 (9.6607)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.42it/s] 19%|#9        | 5/26 [00:00<00:00, 25.16it/s] 38%|###8      | 10/26 [00:00<00:00, 35.49it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.89it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.88it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.88it/s] 96%|#########6| 25/26 [00:00<00:00, 42.14it/s]100%|##########| 26/26 [00:00<00:00, 33.97it/s]
Test: [   0/  26]	Loss 0.159 (0.159)	test_acc   0.95 (  0.95)	test_minacc   0.76 (  0.76)	test_majacc   0.98 (  0.98)	Loss_d 0.159 (0.159)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.187 (0.149)	test_acc   0.93 (  0.95)	test_minacc   0.80 (  0.79)	test_majacc   0.96 (  0.98)	Loss_d 0.187 (0.149)	test_acc_d   0.93 (  0.95)	test_minacc_d   0.80 (  0.79)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.73 (  0.76)
Test: [  20/  26]	Loss 0.097 (0.135)	test_acc   0.96 (  0.95)	test_minacc   0.86 (  0.81)	test_majacc   0.98 (  0.98)	Loss_d 0.097 (0.135)	test_acc_d   0.96 (  0.95)	test_minacc_d   0.86 (  0.81)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.76)
Test: [  26/  26]	Loss 0.049 (0.123)	test_acc   0.99 (  0.96)	test_minacc   0.95 (  0.83)	test_majacc   1.00 (  0.98)	Loss_d 0.049 (0.123)	test_acc_d   0.99 (  0.96)	test_minacc_d   0.95 (  0.83)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.72 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.34it/s]
Test: [  0/  1]	Loss 3.268 (3.268)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.95 (  0.95)	Loss_d 3.268 (3.268)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 3.268 (3.268)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.95 (  0.95)	Loss_d 3.268 (3.268)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.56 (  0.56)
Overall Timing[ 21/  1]	epoch_time 0.0410 (0.0437)	validation_time 0.0003 (0.0007)	train_time 0.0407 (0.0428)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.956000019967556, 0.33900001645088196)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.92it/s] 15%|#5        | 4/26 [00:00<00:01, 18.85it/s] 31%|###       | 8/26 [00:00<00:00, 26.66it/s] 46%|####6     | 12/26 [00:00<00:00, 30.37it/s] 62%|######1   | 16/26 [00:00<00:00, 32.51it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.79it/s] 92%|#########2| 24/26 [00:00<00:00, 34.59it/s]100%|##########| 26/26 [00:00<00:00, 29.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 240000
penalty weights 0.0
Epoch: [22][  26/  26]	Loss 0.085 (0.123)	train_nll   0.08 (  0.12)	train_penalty   0.00 (  0.00)	weight_norm  25.97 ( 25.81)	train_acc   0.96 (  0.95)	train_minacc   0.88 (  0.82)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 10.5536 (9.5401)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.77it/s] 27%|##6       | 7/26 [00:00<00:00, 22.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.68it/s] 46%|####6     | 12/26 [00:00<00:00, 31.18it/s] 65%|######5   | 17/26 [00:00<00:00, 35.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.98it/s] 85%|########4 | 22/26 [00:00<00:00, 39.45it/s]100%|##########| 26/26 [00:00<00:00, 30.72it/s]
Test: [   0/  26]	Loss 0.156 (0.156)	test_acc   0.94 (  0.94)	test_minacc   0.74 (  0.74)	test_majacc   0.98 (  0.98)	Loss_d 0.156 (0.156)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.113 (0.126)	test_acc   0.95 (  0.95)	test_minacc   0.88 (  0.81)	test_majacc   0.97 (  0.98)	Loss_d 0.113 (0.126)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.88 (  0.81)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.73 (  0.75)
Test: [  20/  26]	Loss 0.087 (0.116)	test_acc   0.98 (  0.95)	test_minacc   0.93 (  0.84)	test_majacc   0.98 (  0.97)	Loss_d 0.087 (0.116)	test_acc_d   0.98 (  0.95)	test_minacc_d   0.93 (  0.84)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.72 (  0.74)
Test: [  26/  26]	Loss 0.038 (0.104)	test_acc   0.99 (  0.96)	test_minacc   0.95 (  0.86)	test_majacc   1.00 (  0.98)	Loss_d 0.038 (0.104)	test_acc_d   0.99 (  0.96)	test_minacc_d   0.95 (  0.86)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.70 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.77it/s]
Test: [  0/  1]	Loss 3.632 (3.632)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.93 (  0.93)	Loss_d 3.632 (3.632)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 3.632 (3.632)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.93 (  0.93)	Loss_d 3.632 (3.632)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.52 (  0.52)
Overall Timing[ 22/  1]	epoch_time 0.0387 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0383 (0.0426)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.9589000219106674, 0.36100003123283386)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.32it/s] 19%|#9        | 5/26 [00:00<00:01, 19.71it/s] 35%|###4      | 9/26 [00:00<00:00, 26.47it/s] 50%|#####     | 13/26 [00:00<00:00, 30.21it/s] 65%|######5   | 17/26 [00:00<00:00, 32.67it/s] 81%|########  | 21/26 [00:00<00:00, 33.91it/s] 96%|#########6| 25/26 [00:00<00:00, 34.70it/s]100%|##########| 26/26 [00:00<00:00, 28.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 240000
penalty weights 0.0
l1 at pgd_anneal_iters 10.649209976196289
set z to 10.116749477386474
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 240000
penalty weights 0.0
Epoch: [23][  26/  26]	Loss 0.088 (0.108)	train_nll   0.09 (  0.11)	train_penalty   0.00 (  0.00)	weight_norm  26.32 ( 26.15)	train_acc   0.97 (  0.96)	train_minacc   0.83 (  0.84)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 10.7026 (10.4843)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.46it/s] 23%|##3       | 6/26 [00:00<00:00, 24.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.32it/s] 42%|####2     | 11/26 [00:00<00:00, 33.09it/s] 62%|######1   | 16/26 [00:00<00:00, 38.12it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.12it/s] 81%|########  | 21/26 [00:00<00:00, 37.52it/s]100%|##########| 26/26 [00:00<00:00, 41.00it/s]100%|##########| 26/26 [00:00<00:00, 32.48it/s]
Test: [   0/  26]	Loss 0.082 (0.082)	test_acc   0.96 (  0.96)	test_minacc   0.82 (  0.82)	test_majacc   0.99 (  0.99)	Loss_d 0.082 (0.082)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.085 (0.088)	test_acc   0.97 (  0.97)	test_minacc   0.85 (  0.82)	test_majacc   0.99 (  0.99)	Loss_d 0.085 (0.088)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.85 (  0.82)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.76)
Test: [  20/  26]	Loss 0.042 (0.081)	test_acc   0.99 (  0.97)	test_minacc   0.97 (  0.85)	test_majacc   1.00 (  0.99)	Loss_d 0.042 (0.081)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.97 (  0.85)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.73 (  0.76)
Test: [  26/  26]	Loss 0.030 (0.072)	test_acc   0.99 (  0.97)	test_minacc   0.95 (  0.87)	test_majacc   1.00 (  0.99)	Loss_d 0.030 (0.072)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.95 (  0.87)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.28it/s]
Test: [  0/  1]	Loss 3.700 (3.700)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.95 (  0.95)	Loss_d 3.700 (3.700)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 3.700 (3.700)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.95 (  0.95)	Loss_d 3.700 (3.700)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.57 (  0.57)
Overall Timing[ 23/  1]	epoch_time 0.0405 (0.0434)	validation_time 0.0003 (0.0007)	train_time 0.0401 (0.0425)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.9741000223755837, 0.33500000834465027)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.34it/s] 19%|#9        | 5/26 [00:00<00:00, 22.95it/s] 35%|###4      | 9/26 [00:00<00:00, 29.13it/s] 50%|#####     | 13/26 [00:00<00:00, 31.80it/s] 65%|######5   | 17/26 [00:00<00:00, 33.74it/s] 81%|########  | 21/26 [00:00<00:00, 34.66it/s] 96%|#########6| 25/26 [00:00<00:00, 35.01it/s]100%|##########| 26/26 [00:00<00:00, 30.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 240000
penalty weights 0.0
Epoch: [24][  26/  26]	Loss 0.088 (0.084)	train_nll   0.09 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  26.70 ( 26.51)	train_acc   0.97 (  0.97)	train_minacc   0.83 (  0.88)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 11.4403 (11.4036)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.45it/s] 15%|#5        | 4/26 [00:00<00:01, 15.92it/s] 35%|###4      | 9/26 [00:00<00:00, 28.70it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.70it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.64it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.71it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.71it/s]100%|##########| 26/26 [00:00<00:00, 47.05it/s]100%|##########| 26/26 [00:00<00:00, 34.71it/s]
Test: [   0/  26]	Loss 0.153 (0.153)	test_acc   0.93 (  0.93)	test_minacc   0.64 (  0.64)	test_majacc   0.99 (  0.99)	Loss_d 0.153 (0.153)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.155 (0.152)	test_acc   0.94 (  0.94)	test_minacc   0.71 (  0.70)	test_majacc   0.98 (  0.99)	Loss_d 0.155 (0.152)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.71 (  0.70)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.79 (  0.80)
Test: [  20/  26]	Loss 0.057 (0.138)	test_acc   0.98 (  0.95)	test_minacc   0.91 (  0.74)	test_majacc   0.99 (  0.99)	Loss_d 0.057 (0.138)	test_acc_d   0.98 (  0.95)	test_minacc_d   0.91 (  0.74)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.79)
Test: [  26/  26]	Loss 0.023 (0.123)	test_acc   1.00 (  0.95)	test_minacc   1.00 (  0.77)	test_majacc   1.00 (  0.99)	Loss_d 0.023 (0.123)	test_acc_d   1.00 (  0.95)	test_minacc_d   1.00 (  0.77)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.15it/s]
Test: [  0/  1]	Loss 4.391 (4.391)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 4.391 (4.391)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.70 (  0.70)
Test: [  1/  1]	Loss 4.391 (4.391)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 4.391 (4.391)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.70 (  0.70)
Overall Timing[ 24/  1]	epoch_time 0.0396 (0.0432)	validation_time 0.0004 (0.0007)	train_time 0.0391 (0.0424)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.9545000154972076, 0.26900002360343933)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.88it/s] 23%|##3       | 6/26 [00:00<00:00, 27.85it/s] 38%|###8      | 10/26 [00:00<00:00, 30.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.89it/s] 69%|######9   | 18/26 [00:00<00:00, 32.92it/s] 85%|########4 | 22/26 [00:00<00:00, 33.66it/s]100%|##########| 26/26 [00:00<00:00, 34.28it/s]100%|##########| 26/26 [00:00<00:00, 29.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 240000
penalty weights 0.0
Epoch: [25][  26/  26]	Loss 0.111 (0.102)	train_nll   0.11 (  0.10)	train_penalty   0.00 (  0.00)	weight_norm  27.14 ( 26.93)	train_acc   0.95 (  0.96)	train_minacc   0.85 (  0.85)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 10.5460 (10.9196)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.22it/s] 23%|##3       | 6/26 [00:00<00:00, 32.07it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.07it/s] 42%|####2     | 11/26 [00:00<00:00, 38.45it/s] 62%|######1   | 16/26 [00:00<00:00, 42.24it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.24it/s] 81%|########  | 21/26 [00:00<00:00, 40.00it/s]100%|##########| 26/26 [00:00<00:00, 42.66it/s]100%|##########| 26/26 [00:00<00:00, 35.94it/s]
Test: [   0/  26]	Loss 0.074 (0.074)	test_acc   0.97 (  0.97)	test_minacc   0.85 (  0.85)	test_majacc   1.00 (  1.00)	Loss_d 0.074 (0.074)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.85 (  0.85)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.089 (0.116)	test_acc   0.97 (  0.96)	test_minacc   0.92 (  0.83)	test_majacc   0.98 (  0.98)	Loss_d 0.089 (0.116)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.92 (  0.83)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.74 (  0.76)
Test: [  20/  26]	Loss 0.093 (0.117)	test_acc   0.97 (  0.96)	test_minacc   0.88 (  0.82)	test_majacc   0.98 (  0.98)	Loss_d 0.093 (0.117)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.88 (  0.82)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.76)
Test: [  26/  26]	Loss 0.048 (0.105)	test_acc   0.99 (  0.96)	test_minacc   0.98 (  0.85)	test_majacc   1.00 (  0.98)	Loss_d 0.048 (0.105)	test_acc_d   0.99 (  0.96)	test_minacc_d   0.98 (  0.85)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.70 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.44it/s]
Test: [  0/  1]	Loss 3.641 (3.641)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.93 (  0.93)	Loss_d 3.641 (3.641)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 3.641 (3.641)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.93 (  0.93)	Loss_d 3.641 (3.641)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.52 (  0.52)
Overall Timing[ 25/  1]	epoch_time 0.0430 (0.0432)	validation_time 0.0004 (0.0007)	train_time 0.0426 (0.0424)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.9637000183463097, 0.3630000054836273)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 19%|#9        | 5/26 [00:00<00:00, 22.04it/s] 35%|###4      | 9/26 [00:00<00:00, 28.38it/s] 50%|#####     | 13/26 [00:00<00:00, 31.36it/s] 65%|######5   | 17/26 [00:00<00:00, 32.50it/s] 81%|########  | 21/26 [00:00<00:00, 33.49it/s] 96%|#########6| 25/26 [00:00<00:00, 33.59it/s]100%|##########| 26/26 [00:00<00:00, 28.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 240000
penalty weights 0.0
Epoch: [26][  26/  26]	Loss 0.065 (0.086)	train_nll   0.06 (  0.09)	train_penalty   0.00 (  0.00)	weight_norm  27.49 ( 27.32)	train_acc   0.97 (  0.97)	train_minacc   0.93 (  0.87)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 11.5024 (10.9511)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.80it/s] 23%|##3       | 6/26 [00:00<00:00, 31.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.16it/s] 42%|####2     | 11/26 [00:00<00:00, 37.80it/s] 62%|######1   | 16/26 [00:00<00:00, 41.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.41it/s] 81%|########  | 21/26 [00:00<00:00, 38.32it/s]100%|##########| 26/26 [00:00<00:00, 41.63it/s]100%|##########| 26/26 [00:00<00:00, 34.78it/s]
Test: [   0/  26]	Loss 0.077 (0.077)	test_acc   0.97 (  0.97)	test_minacc   0.85 (  0.85)	test_majacc   0.99 (  0.99)	Loss_d 0.077 (0.077)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.053 (0.095)	test_acc   0.97 (  0.96)	test_minacc   0.93 (  0.83)	test_majacc   0.98 (  0.99)	Loss_d 0.053 (0.095)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.93 (  0.83)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.72 (  0.75)
Test: [  20/  26]	Loss 0.045 (0.080)	test_acc   0.99 (  0.97)	test_minacc   0.95 (  0.85)	test_majacc   0.99 (  0.99)	Loss_d 0.045 (0.080)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.95 (  0.85)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.75)
Test: [  26/  26]	Loss 0.018 (0.071)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.87)	test_majacc   1.00 (  0.99)	Loss_d 0.018 (0.071)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.87)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.64it/s]
Test: [  0/  1]	Loss 4.229 (4.229)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.91 (  0.91)	Loss_d 4.229 (4.229)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 4.229 (4.229)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.91 (  0.91)	Loss_d 4.229 (4.229)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.54 (  0.54)
Overall Timing[ 26/  1]	epoch_time 0.0376 (0.0430)	validation_time 0.0003 (0.0006)	train_time 0.0373 (0.0422)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.9715000237822533, 0.3360000252723694)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.67it/s] 19%|#9        | 5/26 [00:00<00:01, 17.78it/s] 35%|###4      | 9/26 [00:00<00:00, 24.85it/s] 50%|#####     | 13/26 [00:00<00:00, 28.88it/s] 65%|######5   | 17/26 [00:00<00:00, 31.66it/s] 81%|########  | 21/26 [00:00<00:00, 33.11it/s] 96%|#########6| 25/26 [00:00<00:00, 34.05it/s]100%|##########| 26/26 [00:00<00:00, 26.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 240000
penalty weights 0.0
Epoch: [27][  26/  26]	Loss 0.042 (0.071)	train_nll   0.04 (  0.07)	train_penalty   0.00 (  0.00)	weight_norm  27.84 ( 27.66)	train_acc   0.98 (  0.97)	train_minacc   0.95 (  0.90)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 12.1754 (11.9031)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.86it/s] 27%|##6       | 7/26 [00:00<00:00, 28.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.66it/s] 46%|####6     | 12/26 [00:00<00:00, 35.97it/s] 65%|######5   | 17/26 [00:00<00:00, 40.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.12it/s] 85%|########4 | 22/26 [00:00<00:00, 39.20it/s]100%|##########| 26/26 [00:00<00:00, 35.10it/s]
Test: [   0/  26]	Loss 0.086 (0.086)	test_acc   0.98 (  0.98)	test_minacc   0.88 (  0.88)	test_majacc   1.00 (  1.00)	Loss_d 0.086 (0.086)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.88 (  0.88)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.073 (0.108)	test_acc   0.97 (  0.96)	test_minacc   0.85 (  0.79)	test_majacc   1.00 (  0.99)	Loss_d 0.073 (0.108)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.85 (  0.79)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.76 (  0.76)
Test: [  20/  26]	Loss 0.061 (0.086)	test_acc   0.98 (  0.97)	test_minacc   0.90 (  0.83)	test_majacc   0.99 (  0.99)	Loss_d 0.061 (0.086)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.90 (  0.83)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.76)
Test: [  26/  26]	Loss 0.016 (0.074)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.85)	test_majacc   1.00 (  0.99)	Loss_d 0.016 (0.074)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.85)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.14it/s]
Test: [  0/  1]	Loss 4.570 (4.570)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 4.570 (4.570)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 4.570 (4.570)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 4.570 (4.570)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.53 (  0.53)
Overall Timing[ 27/  1]	epoch_time 0.0423 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0418 (0.0422)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.9720000180602074, 0.3460000157356262)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.68it/s] 15%|#5        | 4/26 [00:00<00:01, 16.04it/s] 31%|###       | 8/26 [00:00<00:00, 24.00it/s] 46%|####6     | 12/26 [00:00<00:00, 28.36it/s] 62%|######1   | 16/26 [00:00<00:00, 31.28it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.25it/s] 92%|#########2| 24/26 [00:00<00:00, 33.67it/s]100%|##########| 26/26 [00:00<00:00, 27.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 240000
penalty weights 0.0
Epoch: [28][  26/  26]	Loss 0.065 (0.071)	train_nll   0.06 (  0.07)	train_penalty   0.00 (  0.00)	weight_norm  28.24 ( 28.05)	train_acc   0.97 (  0.97)	train_minacc   0.95 (  0.90)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 11.7882 (11.8725)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.98it/s] 31%|###       | 8/26 [00:00<00:00, 35.73it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.73it/s] 50%|#####     | 13/26 [00:00<00:00, 40.13it/s] 69%|######9   | 18/26 [00:00<00:00, 38.94it/s]                                                69%|######9   | 18/26 [00:00<00:00, 38.94it/s] 88%|########8 | 23/26 [00:00<00:00, 40.93it/s]100%|##########| 26/26 [00:00<00:00, 36.50it/s]
Test: [   0/  26]	Loss 0.074 (0.074)	test_acc   0.97 (  0.97)	test_minacc   0.88 (  0.88)	test_majacc   0.99 (  0.99)	Loss_d 0.074 (0.074)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.079 (0.103)	test_acc   0.96 (  0.96)	test_minacc   0.83 (  0.82)	test_majacc   0.98 (  0.99)	Loss_d 0.079 (0.103)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.83 (  0.82)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.75 (  0.74)
Test: [  20/  26]	Loss 0.048 (0.082)	test_acc   0.98 (  0.97)	test_minacc   0.93 (  0.86)	test_majacc   0.99 (  0.99)	Loss_d 0.048 (0.082)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.93 (  0.86)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.75)
Test: [  26/  26]	Loss 0.017 (0.072)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.88)	test_majacc   1.00 (  0.99)	Loss_d 0.017 (0.072)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.88)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.20it/s]
Test: [  0/  1]	Loss 4.479 (4.479)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.93 (  0.93)	Loss_d 4.479 (4.479)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 4.479 (4.479)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.93 (  0.93)	Loss_d 4.479 (4.479)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.54 (  0.54)
Overall Timing[ 28/  1]	epoch_time 0.0419 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0415 (0.0421)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.9739000282883644, 0.34700000286102295)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.01it/s] 19%|#9        | 5/26 [00:00<00:00, 22.57it/s] 35%|###4      | 9/26 [00:00<00:00, 27.96it/s] 50%|#####     | 13/26 [00:00<00:00, 30.90it/s] 65%|######5   | 17/26 [00:00<00:00, 32.55it/s] 81%|########  | 21/26 [00:00<00:00, 33.63it/s] 96%|#########6| 25/26 [00:00<00:00, 33.80it/s]100%|##########| 26/26 [00:00<00:00, 28.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 240000
penalty weights 0.0
Epoch: [29][  26/  26]	Loss 0.026 (0.064)	train_nll   0.03 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm  28.59 ( 28.42)	train_acc   1.00 (  0.98)	train_minacc   0.98 (  0.91)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 11.9117 (11.7431)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 26.86it/s] 38%|###8      | 10/26 [00:00<00:00, 41.18it/s]                                                38%|###8      | 10/26 [00:00<00:00, 41.18it/s] 58%|#####7    | 15/26 [00:00<00:00, 43.52it/s] 77%|#######6  | 20/26 [00:00<00:00, 43.59it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 43.59it/s] 96%|#########6| 25/26 [00:00<00:00, 41.76it/s]100%|##########| 26/26 [00:00<00:00, 38.05it/s]
Test: [   0/  26]	Loss 0.061 (0.061)	test_acc   0.97 (  0.97)	test_minacc   0.91 (  0.91)	test_majacc   0.99 (  0.99)	Loss_d 0.061 (0.061)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.099 (0.082)	test_acc   0.97 (  0.97)	test_minacc   0.88 (  0.89)	test_majacc   0.98 (  0.98)	Loss_d 0.099 (0.082)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.72)
Test: [  20/  26]	Loss 0.024 (0.064)	test_acc   0.99 (  0.98)	test_minacc   0.95 (  0.91)	test_majacc   1.00 (  0.99)	Loss_d 0.024 (0.064)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.95 (  0.91)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  26/  26]	Loss 0.011 (0.055)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  0.99)	Loss_d 0.011 (0.055)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.82it/s]
Test: [  0/  1]	Loss 4.468 (4.468)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.92 (  0.92)	Loss_d 4.468 (4.468)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 4.468 (4.468)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.92 (  0.92)	Loss_d 4.468 (4.468)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.54 (  0.54)
Overall Timing[ 29/  1]	epoch_time 0.0414 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0409 (0.0421)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.979400022149086, 0.33500000834465027)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.34it/s] 19%|#9        | 5/26 [00:00<00:00, 21.51it/s] 35%|###4      | 9/26 [00:00<00:00, 26.62it/s] 50%|#####     | 13/26 [00:00<00:00, 29.46it/s] 65%|######5   | 17/26 [00:00<00:00, 30.97it/s] 81%|########  | 21/26 [00:00<00:00, 32.69it/s] 96%|#########6| 25/26 [00:00<00:00, 33.97it/s]100%|##########| 26/26 [00:00<00:00, 28.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 240000
penalty weights 0.0
Epoch: [30][  26/  26]	Loss 0.038 (0.049)	train_nll   0.04 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm  28.88 ( 28.73)	train_acc   0.98 (  0.98)	train_minacc   0.95 (  0.93)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 12.7299 (12.5159)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.79it/s] 12%|#1        | 3/26 [00:00<00:01, 13.09it/s] 31%|###       | 8/26 [00:00<00:00, 27.89it/s]                                               31%|###       | 8/26 [00:00<00:00, 27.89it/s] 50%|#####     | 13/26 [00:00<00:00, 34.89it/s] 69%|######9   | 18/26 [00:00<00:00, 36.45it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.45it/s] 88%|########8 | 23/26 [00:00<00:00, 39.59it/s]100%|##########| 26/26 [00:00<00:00, 31.99it/s]
Test: [   0/  26]	Loss 0.063 (0.063)	test_acc   0.97 (  0.97)	test_minacc   0.85 (  0.85)	test_majacc   1.00 (  1.00)	Loss_d 0.063 (0.063)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.85 (  0.85)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.076 (0.086)	test_acc   0.98 (  0.97)	test_minacc   0.90 (  0.84)	test_majacc   0.99 (  0.99)	Loss_d 0.076 (0.086)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.90 (  0.84)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.75)
Test: [  20/  26]	Loss 0.024 (0.065)	test_acc   0.99 (  0.98)	test_minacc   0.95 (  0.87)	test_majacc   1.00 (  1.00)	Loss_d 0.024 (0.065)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.95 (  0.87)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.74)
Test: [  26/  26]	Loss 0.011 (0.057)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.89)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.057)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.89)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.00it/s]
Test: [  0/  1]	Loss 5.186 (5.186)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.92 (  0.92)	Loss_d 5.186 (5.186)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 5.186 (5.186)	test_acc   0.31 (  0.31)	test_minacc   0.24 (  0.24)	test_majacc   0.92 (  0.92)	Loss_d 5.186 (5.186)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.60 (  0.60)
Overall Timing[ 30/  1]	epoch_time 0.0425 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0421 (0.0421)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.979600022137165, 0.3070000112056732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.09it/s] 23%|##3       | 6/26 [00:00<00:00, 27.75it/s] 38%|###8      | 10/26 [00:00<00:00, 31.42it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.89it/s] 69%|######9   | 18/26 [00:00<00:00, 34.90it/s] 85%|########4 | 22/26 [00:00<00:00, 36.00it/s]100%|##########| 26/26 [00:00<00:00, 36.68it/s]100%|##########| 26/26 [00:00<00:00, 30.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 240000
penalty weights 0.0
Epoch: [31][  26/  26]	Loss 0.045 (0.064)	train_nll   0.04 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm  29.26 ( 29.06)	train_acc   0.98 (  0.97)	train_minacc   0.93 (  0.91)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 11.3413 (12.1869)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.68it/s] 23%|##3       | 6/26 [00:00<00:00, 32.19it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.19it/s] 42%|####2     | 11/26 [00:00<00:00, 38.28it/s] 62%|######1   | 16/26 [00:00<00:00, 42.02it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.02it/s] 81%|########  | 21/26 [00:00<00:00, 44.07it/s]100%|##########| 26/26 [00:00<00:00, 45.48it/s]100%|##########| 26/26 [00:00<00:00, 37.20it/s]
Test: [   0/  26]	Loss 0.054 (0.054)	test_acc   0.98 (  0.98)	test_minacc   0.89 (  0.89)	test_majacc   1.00 (  1.00)	Loss_d 0.054 (0.054)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.89 (  0.89)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.063 (0.077)	test_acc   0.97 (  0.97)	test_minacc   0.86 (  0.85)	test_majacc   0.99 (  0.99)	Loss_d 0.063 (0.077)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.86 (  0.85)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.76)
Test: [  20/  26]	Loss 0.058 (0.066)	test_acc   0.98 (  0.98)	test_minacc   0.88 (  0.87)	test_majacc   1.00 (  0.99)	Loss_d 0.058 (0.066)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.88 (  0.87)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.77 (  0.75)
Test: [  26/  26]	Loss 0.024 (0.059)	test_acc   0.99 (  0.98)	test_minacc   0.98 (  0.89)	test_majacc   1.00 (  1.00)	Loss_d 0.024 (0.059)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.98 (  0.89)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.30it/s]
Test: [  0/  1]	Loss 4.558 (4.558)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 4.558 (4.558)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.63 (  0.63)
Test: [  1/  1]	Loss 4.558 (4.558)	test_acc   0.31 (  0.31)	test_minacc   0.23 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 4.558 (4.558)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.63 (  0.63)
Overall Timing[ 31/  1]	epoch_time 0.0406 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0402 (0.0420)
record: (train_acc, test_acc) (0.9485000215768814, 0.39400002360343933)
last accs (train_acc, test_acc) (0.9785000244379044, 0.3060000240802765)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.57it/s] 23%|##3       | 6/26 [00:00<00:00, 26.82it/s] 38%|###8      | 10/26 [00:00<00:00, 31.23it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.66it/s] 69%|######9   | 18/26 [00:00<00:00, 34.42it/s] 85%|########4 | 22/26 [00:00<00:00, 35.24it/s]100%|##########| 26/26 [00:00<00:00, 35.61it/s]100%|##########| 26/26 [00:00<00:00, 30.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 240000
penalty weights 0.0
Epoch: [32][  26/  26]	Loss 0.040 (0.045)	train_nll   0.04 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm  29.63 ( 29.45)	train_acc   0.99 (  0.98)	train_minacc   1.00 (  0.94)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 12.6358 (12.0603)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.56it/s] 23%|##3       | 6/26 [00:00<00:01, 18.94it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.94it/s] 42%|####2     | 11/26 [00:00<00:00, 28.27it/s] 62%|######1   | 16/26 [00:00<00:00, 34.72it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.72it/s] 81%|########  | 21/26 [00:00<00:00, 35.77it/s]100%|##########| 26/26 [00:00<00:00, 39.43it/s]100%|##########| 26/26 [00:00<00:00, 29.04it/s]
Test: [   0/  26]	Loss 0.038 (0.038)	test_acc   0.98 (  0.98)	test_minacc   0.98 (  0.98)	test_majacc   0.98 (  0.98)	Loss_d 0.038 (0.038)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.042 (0.046)	test_acc   0.98 (  0.98)	test_minacc   0.98 (  0.97)	test_majacc   0.98 (  0.98)	Loss_d 0.042 (0.046)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.98 (  0.97)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.68 (  0.68)
Test: [  20/  26]	Loss 0.016 (0.040)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.016 (0.040)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.68)
Test: [  26/  26]	Loss 0.005 (0.034)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.005 (0.034)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.67 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.68it/s]
Test: [  0/  1]	Loss 4.267 (4.267)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.92 (  0.92)	Loss_d 4.267 (4.267)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 4.267 (4.267)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.92 (  0.92)	Loss_d 4.267 (4.267)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.26 (  0.26)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/114/checkpoints/model_best.pth
Overall Timing[ 32/  1]	epoch_time 0.0470 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0465 (0.0422)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:03,  7.09it/s] 23%|##3       | 6/26 [00:00<00:01, 17.42it/s] 38%|###8      | 10/26 [00:00<00:00, 23.67it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.96it/s] 69%|######9   | 18/26 [00:00<00:00, 31.04it/s] 85%|########4 | 22/26 [00:00<00:00, 32.78it/s]100%|##########| 26/26 [00:00<00:00, 34.18it/s]100%|##########| 26/26 [00:00<00:00, 26.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 240000
penalty weights 0.0
Epoch: [33][  26/  26]	Loss 0.010 (0.033)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  29.90 ( 29.77)	train_acc   0.99 (  0.99)	train_minacc   0.98 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.9972 (12.7899)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.67it/s] 23%|##3       | 6/26 [00:00<00:00, 27.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.03it/s] 42%|####2     | 11/26 [00:00<00:00, 34.67it/s] 62%|######1   | 16/26 [00:00<00:00, 39.39it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.39it/s] 81%|########  | 21/26 [00:00<00:00, 38.29it/s]100%|##########| 26/26 [00:00<00:00, 41.30it/s]100%|##########| 26/26 [00:00<00:00, 33.64it/s]
Test: [   0/  26]	Loss 0.018 (0.018)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.018 (0.018)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.052 (0.030)	test_acc   0.98 (  0.99)	test_minacc   0.98 (  0.97)	test_majacc   0.98 (  0.99)	Loss_d 0.052 (0.030)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.98 (  0.97)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.69 (  0.69)
Test: [  20/  26]	Loss 0.008 (0.027)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.027)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.69)
Test: [  26/  26]	Loss 0.003 (0.024)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.024)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.89it/s]
Test: [  0/  1]	Loss 4.603 (4.603)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.95 (  0.95)	Loss_d 4.603 (4.603)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 4.603 (4.603)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.95 (  0.95)	Loss_d 4.603 (4.603)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.33 (  0.33)
Overall Timing[ 33/  1]	epoch_time 0.0418 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0414 (0.0422)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9913000388741493, 0.44200003147125244)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.51it/s] 19%|#9        | 5/26 [00:00<00:00, 22.61it/s] 35%|###4      | 9/26 [00:00<00:00, 28.53it/s] 50%|#####     | 13/26 [00:00<00:00, 30.96it/s] 65%|######5   | 17/26 [00:00<00:00, 32.69it/s] 81%|########  | 21/26 [00:00<00:00, 34.32it/s] 96%|#########6| 25/26 [00:00<00:00, 33.80it/s]100%|##########| 26/26 [00:00<00:00, 28.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 240000
penalty weights 0.0
Epoch: [34][  26/  26]	Loss 0.004 (0.021)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  30.10 ( 30.01)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.8164 (13.3941)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.63it/s] 23%|##3       | 6/26 [00:00<00:00, 27.40it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.40it/s] 42%|####2     | 11/26 [00:00<00:00, 35.27it/s] 62%|######1   | 16/26 [00:00<00:00, 39.52it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.52it/s] 81%|########  | 21/26 [00:00<00:00, 37.67it/s]100%|##########| 26/26 [00:00<00:00, 41.01it/s]100%|##########| 26/26 [00:00<00:00, 32.77it/s]
Test: [   0/  26]	Loss 0.029 (0.029)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.029 (0.029)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.029 (0.020)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.96)	test_majacc   0.99 (  1.00)	Loss_d 0.029 (0.020)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.96)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  20/  26]	Loss 0.003 (0.015)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.015)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  26/  26]	Loss 0.002 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.10it/s]
Test: [  0/  1]	Loss 5.150 (5.150)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 5.150 (5.150)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 5.150 (5.150)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 5.150 (5.150)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.43 (  0.43)
Overall Timing[ 34/  1]	epoch_time 0.0445 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0441 (0.0422)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9950000281929969, 0.4000000059604645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.06it/s] 19%|#9        | 5/26 [00:00<00:00, 21.75it/s] 35%|###4      | 9/26 [00:00<00:00, 28.12it/s] 50%|#####     | 13/26 [00:00<00:00, 31.64it/s] 65%|######5   | 17/26 [00:00<00:00, 33.54it/s] 81%|########  | 21/26 [00:00<00:00, 34.88it/s] 96%|#########6| 25/26 [00:00<00:00, 35.44it/s]100%|##########| 26/26 [00:00<00:00, 28.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 240000
penalty weights 0.0
Epoch: [35][  26/  26]	Loss 0.001 (0.017)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  30.26 ( 30.18)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.5328 (14.2501)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.98it/s] 31%|###       | 8/26 [00:00<00:00, 37.93it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.93it/s] 50%|#####     | 13/26 [00:00<00:00, 42.02it/s] 69%|######9   | 18/26 [00:00<00:00, 44.06it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.06it/s] 88%|########8 | 23/26 [00:00<00:00, 41.01it/s]100%|##########| 26/26 [00:00<00:00, 37.56it/s]
Test: [   0/  26]	Loss 0.036 (0.036)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.036 (0.036)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.016 (0.027)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.016 (0.027)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  20/  26]	Loss 0.008 (0.023)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.023)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.020)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.020)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.21it/s]
Test: [  0/  1]	Loss 5.631 (5.631)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.94 (  0.94)	Loss_d 5.631 (5.631)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 5.631 (5.631)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.94 (  0.94)	Loss_d 5.631 (5.631)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.43 (  0.43)
Overall Timing[ 35/  1]	epoch_time 0.0396 (0.0429)	validation_time 0.0004 (0.0006)	train_time 0.0391 (0.0421)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9930000376105309, 0.3850000202655792)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.96it/s] 15%|#5        | 4/26 [00:00<00:01, 13.37it/s] 31%|###       | 8/26 [00:00<00:00, 21.54it/s] 46%|####6     | 12/26 [00:00<00:00, 25.98it/s] 62%|######1   | 16/26 [00:00<00:00, 28.95it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.96it/s] 92%|#########2| 24/26 [00:00<00:00, 32.80it/s]100%|##########| 26/26 [00:01<00:00, 25.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 240000
penalty weights 0.0
Epoch: [36][  26/  26]	Loss 0.012 (0.028)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  30.48 ( 30.36)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.97)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 14.0984 (14.4998)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.44it/s] 27%|##6       | 7/26 [00:00<00:00, 31.91it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.91it/s] 46%|####6     | 12/26 [00:00<00:00, 38.33it/s] 65%|######5   | 17/26 [00:00<00:00, 36.93it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.93it/s] 85%|########4 | 22/26 [00:00<00:00, 40.16it/s]100%|##########| 26/26 [00:00<00:00, 34.88it/s]
Test: [   0/  26]	Loss 0.043 (0.043)	test_acc   0.98 (  0.98)	test_minacc   0.92 (  0.92)	test_majacc   0.99 (  0.99)	Loss_d 0.043 (0.043)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.047 (0.045)	test_acc   0.98 (  0.98)	test_minacc   0.93 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.047 (0.045)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.71)
Test: [  20/  26]	Loss 0.044 (0.044)	test_acc   0.98 (  0.98)	test_minacc   0.95 (  0.94)	test_majacc   0.99 (  0.99)	Loss_d 0.044 (0.044)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.95 (  0.94)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.008 (0.039)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.039)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.49it/s]
Test: [  0/  1]	Loss 5.368 (5.368)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 5.368 (5.368)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 5.368 (5.368)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 5.368 (5.368)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.43 (  0.43)
Overall Timing[ 36/  1]	epoch_time 0.0423 (0.0428)	validation_time 0.0006 (0.0006)	train_time 0.0417 (0.0421)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9865000368356704, 0.3880000114440918)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.52it/s] 19%|#9        | 5/26 [00:00<00:00, 22.81it/s] 35%|###4      | 9/26 [00:00<00:00, 27.92it/s] 50%|#####     | 13/26 [00:00<00:00, 30.99it/s] 65%|######5   | 17/26 [00:00<00:00, 33.02it/s] 81%|########  | 21/26 [00:00<00:00, 34.16it/s] 96%|#########6| 25/26 [00:00<00:00, 35.01it/s]100%|##########| 26/26 [00:00<00:00, 29.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 240000
penalty weights 0.0
Epoch: [37][  26/  26]	Loss 0.009 (0.031)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  30.72 ( 30.60)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.7081 (13.7527)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.30it/s] 23%|##3       | 6/26 [00:00<00:00, 28.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.82it/s] 42%|####2     | 11/26 [00:00<00:00, 36.93it/s] 62%|######1   | 16/26 [00:00<00:00, 39.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.11it/s] 81%|########  | 21/26 [00:00<00:00, 39.54it/s]100%|##########| 26/26 [00:00<00:00, 42.63it/s]100%|##########| 26/26 [00:00<00:00, 34.74it/s]
Test: [   0/  26]	Loss 0.018 (0.018)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.018 (0.018)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.007 (0.021)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  20/  26]	Loss 0.007 (0.017)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.017)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  26/  26]	Loss 0.003 (0.015)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.015)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.29it/s]
Test: [  0/  1]	Loss 5.226 (5.226)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.92 (  0.92)	Loss_d 5.226 (5.226)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 5.226 (5.226)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.92 (  0.92)	Loss_d 5.226 (5.226)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.42 (  0.42)
Overall Timing[ 37/  1]	epoch_time 0.0408 (0.0428)	validation_time 0.0005 (0.0006)	train_time 0.0403 (0.0421)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9953000293374061, 0.38600000739097595)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.38it/s] 12%|#1        | 3/26 [00:00<00:02, 11.24it/s] 27%|##6       | 7/26 [00:00<00:00, 21.29it/s] 42%|####2     | 11/26 [00:00<00:00, 27.01it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.74it/s] 88%|########8 | 23/26 [00:00<00:00, 34.38it/s]100%|##########| 26/26 [00:00<00:00, 26.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 240000
penalty weights 0.0
Epoch: [38][  26/  26]	Loss 0.008 (0.020)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  30.96 ( 30.85)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 14.1844 (14.0584)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 23%|##3       | 6/26 [00:00<00:00, 26.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.82it/s] 42%|####2     | 11/26 [00:00<00:00, 34.48it/s] 62%|######1   | 16/26 [00:00<00:00, 36.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.27it/s] 81%|########  | 21/26 [00:00<00:00, 39.48it/s]100%|##########| 26/26 [00:00<00:00, 42.44it/s]100%|##########| 26/26 [00:00<00:00, 33.21it/s]
Test: [   0/  26]	Loss 0.032 (0.032)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.032 (0.032)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.014 (0.029)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.014 (0.029)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  20/  26]	Loss 0.008 (0.022)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.022)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.61it/s]
Test: [  0/  1]	Loss 5.785 (5.785)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 5.785 (5.785)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 5.785 (5.785)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 5.785 (5.785)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.49 (  0.49)
Overall Timing[ 38/  1]	epoch_time 0.0432 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0428 (0.0421)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9935000317692757, 0.36000001430511475)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.06it/s] 15%|#5        | 4/26 [00:00<00:01, 16.57it/s] 31%|###       | 8/26 [00:00<00:00, 24.71it/s] 46%|####6     | 12/26 [00:00<00:00, 29.56it/s] 62%|######1   | 16/26 [00:00<00:00, 32.31it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.24it/s] 92%|#########2| 24/26 [00:00<00:00, 35.04it/s]100%|##########| 26/26 [00:00<00:00, 28.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 240000
penalty weights 0.0
Epoch: [39][  26/  26]	Loss 0.006 (0.021)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  31.15 ( 31.05)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.3604 (14.4710)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.39it/s] 31%|###       | 8/26 [00:00<00:00, 36.76it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.76it/s] 50%|#####     | 13/26 [00:00<00:00, 41.05it/s] 69%|######9   | 18/26 [00:00<00:00, 42.68it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.68it/s] 88%|########8 | 23/26 [00:00<00:00, 40.62it/s]100%|##########| 26/26 [00:00<00:00, 37.96it/s]
Test: [   0/  26]	Loss 0.025 (0.025)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.025 (0.025)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.023 (0.027)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   0.99 (  1.00)	Loss_d 0.023 (0.027)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.70 (  0.71)
Test: [  20/  26]	Loss 0.006 (0.021)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.003 (0.018)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.13it/s]
Test: [  0/  1]	Loss 5.771 (5.771)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 5.771 (5.771)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 5.771 (5.771)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 5.771 (5.771)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.48 (  0.48)
Overall Timing[ 39/  1]	epoch_time 0.0409 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0405 (0.0420)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9948000258803368, 0.3700000047683716)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.08it/s] 23%|##3       | 6/26 [00:00<00:00, 26.08it/s] 38%|###8      | 10/26 [00:00<00:00, 30.64it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.62it/s] 69%|######9   | 18/26 [00:00<00:00, 34.26it/s] 85%|########4 | 22/26 [00:00<00:00, 35.56it/s]100%|##########| 26/26 [00:00<00:00, 36.31it/s]100%|##########| 26/26 [00:00<00:00, 30.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 240000
penalty weights 0.0
Epoch: [40][  26/  26]	Loss 0.018 (0.020)	train_nll   0.02 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  31.37 ( 31.27)	train_acc   0.99 (  0.99)	train_minacc   0.95 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.5502 (14.2967)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.24it/s] 23%|##3       | 6/26 [00:00<00:00, 26.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.50it/s] 42%|####2     | 11/26 [00:00<00:00, 34.74it/s] 62%|######1   | 16/26 [00:00<00:00, 39.74it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.74it/s] 81%|########  | 21/26 [00:00<00:00, 37.38it/s]100%|##########| 26/26 [00:00<00:00, 40.63it/s]100%|##########| 26/26 [00:00<00:00, 32.85it/s]
Test: [   0/  26]	Loss 0.016 (0.016)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.016 (0.016)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.046 (0.031)	test_acc   0.99 (  0.99)	test_minacc   0.93 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.046 (0.031)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.93 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  20/  26]	Loss 0.004 (0.020)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.020)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.017)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.017)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.05it/s]
Test: [  0/  1]	Loss 5.745 (5.745)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.95 (  0.95)	Loss_d 5.745 (5.745)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 5.745 (5.745)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.95 (  0.95)	Loss_d 5.745 (5.745)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.44 (  0.44)
Overall Timing[ 40/  1]	epoch_time 0.0418 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0414 (0.0420)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9943000224232673, 0.38100001215934753)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.79it/s] 19%|#9        | 5/26 [00:00<00:01, 20.45it/s] 35%|###4      | 9/26 [00:00<00:00, 27.36it/s] 50%|#####     | 13/26 [00:00<00:00, 31.54it/s] 65%|######5   | 17/26 [00:00<00:00, 32.16it/s] 81%|########  | 21/26 [00:00<00:00, 33.62it/s] 96%|#########6| 25/26 [00:00<00:00, 35.48it/s]100%|##########| 26/26 [00:00<00:00, 28.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 240000
penalty weights 0.0
Epoch: [41][  26/  26]	Loss 0.019 (0.017)	train_nll   0.02 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  31.55 ( 31.47)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.7423 (14.6325)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.14it/s] 35%|###4      | 9/26 [00:00<00:00, 35.38it/s]                                               35%|###4      | 9/26 [00:00<00:00, 35.38it/s] 54%|#####3    | 14/26 [00:00<00:00, 40.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.10it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.10it/s] 92%|#########2| 24/26 [00:00<00:00, 44.49it/s]100%|##########| 26/26 [00:00<00:00, 38.57it/s]
Test: [   0/  26]	Loss 0.014 (0.014)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.014 (0.014)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.075 (0.043)	test_acc   0.97 (  0.98)	test_minacc   0.86 (  0.92)	test_majacc   0.99 (  1.00)	Loss_d 0.075 (0.043)	test_acc_d   0.97 (  0.98)	test_minacc_d   0.86 (  0.92)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  20/  26]	Loss 0.003 (0.030)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.030)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.025)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.025)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.67it/s]
Test: [  0/  1]	Loss 6.001 (6.001)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 6.001 (6.001)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 6.001 (6.001)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.97 (  0.97)	Loss_d 6.001 (6.001)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.52 (  0.52)
Overall Timing[ 41/  1]	epoch_time 0.0414 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0409 (0.0420)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9910000261068345, 0.35100001096725464)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.39it/s] 19%|#9        | 5/26 [00:00<00:00, 23.58it/s] 35%|###4      | 9/26 [00:00<00:00, 28.19it/s] 50%|#####     | 13/26 [00:00<00:00, 31.07it/s] 65%|######5   | 17/26 [00:00<00:00, 32.17it/s] 81%|########  | 21/26 [00:00<00:00, 33.48it/s] 96%|#########6| 25/26 [00:00<00:00, 34.53it/s]100%|##########| 26/26 [00:00<00:00, 29.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 240000
penalty weights 0.0
Epoch: [42][  26/  26]	Loss 0.018 (0.016)	train_nll   0.02 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  31.75 ( 31.65)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.9702 (14.7764)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.72it/s] 23%|##3       | 6/26 [00:00<00:00, 25.43it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.43it/s] 46%|####6     | 12/26 [00:00<00:00, 36.66it/s] 65%|######5   | 17/26 [00:00<00:00, 39.21it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.21it/s] 85%|########4 | 22/26 [00:00<00:00, 41.27it/s]100%|##########| 26/26 [00:00<00:00, 33.74it/s]
Test: [   0/  26]	Loss 0.022 (0.022)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.022 (0.022)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.034 (0.021)	test_acc   0.98 (  0.99)	test_minacc   0.92 (  0.95)	test_majacc   0.99 (  1.00)	Loss_d 0.034 (0.021)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.92 (  0.95)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  20/  26]	Loss 0.004 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.013)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.013)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.83it/s]
Test: [  0/  1]	Loss 6.154 (6.154)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 6.154 (6.154)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 6.154 (6.154)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.95 (  0.95)	Loss_d 6.154 (6.154)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.49 (  0.49)
Overall Timing[ 42/  1]	epoch_time 0.0431 (0.0427)	validation_time 0.0005 (0.0006)	train_time 0.0426 (0.0420)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9950000258684158, 0.35600000619888306)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.70it/s] 19%|#9        | 5/26 [00:00<00:00, 23.48it/s] 35%|###4      | 9/26 [00:00<00:00, 29.44it/s] 50%|#####     | 13/26 [00:00<00:00, 32.63it/s] 65%|######5   | 17/26 [00:00<00:00, 34.10it/s] 81%|########  | 21/26 [00:00<00:00, 34.55it/s] 96%|#########6| 25/26 [00:00<00:00, 35.24it/s]100%|##########| 26/26 [00:00<00:00, 29.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 240000
penalty weights 0.0
Epoch: [43][  26/  26]	Loss 0.001 (0.013)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  31.92 ( 31.84)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.1649 (15.1713)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.25it/s] 27%|##6       | 7/26 [00:00<00:00, 31.56it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.56it/s] 46%|####6     | 12/26 [00:00<00:00, 37.78it/s] 65%|######5   | 17/26 [00:00<00:00, 41.55it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.55it/s] 85%|########4 | 22/26 [00:00<00:00, 40.52it/s]100%|##########| 26/26 [00:00<00:00, 36.51it/s]
Test: [   0/  26]	Loss 0.025 (0.025)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.025 (0.025)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.035 (0.024)	test_acc   0.99 (  0.99)	test_minacc   0.93 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.035 (0.024)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.93 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  20/  26]	Loss 0.005 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.22it/s]
Test: [  0/  1]	Loss 5.982 (5.982)	test_acc   0.41 (  0.41)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 5.982 (5.982)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 5.982 (5.982)	test_acc   0.41 (  0.41)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 5.982 (5.982)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.41 (  0.41)
Overall Timing[ 43/  1]	epoch_time 0.0382 (0.0426)	validation_time 0.0003 (0.0006)	train_time 0.0379 (0.0419)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9958000234961509, 0.406000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.29it/s] 23%|##3       | 6/26 [00:00<00:00, 26.69it/s] 38%|###8      | 10/26 [00:00<00:00, 31.27it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.42it/s] 69%|######9   | 18/26 [00:00<00:00, 35.17it/s] 85%|########4 | 22/26 [00:00<00:00, 36.33it/s]100%|##########| 26/26 [00:00<00:00, 36.38it/s]100%|##########| 26/26 [00:00<00:00, 31.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 240000
penalty weights 0.0
Epoch: [44][  26/  26]	Loss 0.010 (0.017)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.13 ( 32.01)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.0329 (15.1688)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.24it/s] 23%|##3       | 6/26 [00:00<00:00, 27.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.16it/s] 42%|####2     | 11/26 [00:00<00:00, 34.64it/s] 62%|######1   | 16/26 [00:00<00:00, 38.45it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.45it/s] 85%|########4 | 22/26 [00:00<00:00, 43.98it/s]100%|##########| 26/26 [00:00<00:00, 35.76it/s]
Test: [   0/  26]	Loss 0.032 (0.032)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.032 (0.032)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.059 (0.036)	test_acc   0.98 (  0.99)	test_minacc   0.90 (  0.93)	test_majacc   0.99 (  1.00)	Loss_d 0.059 (0.036)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.90 (  0.93)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.72 (  0.71)
Test: [  20/  26]	Loss 0.019 (0.032)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.019 (0.032)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  26/  26]	Loss 0.001 (0.027)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.027)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.37it/s]
Test: [  0/  1]	Loss 6.332 (6.332)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.98 (  0.98)	Loss_d 6.332 (6.332)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 6.332 (6.332)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.98 (  0.98)	Loss_d 6.332 (6.332)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.51 (  0.51)
Overall Timing[ 44/  1]	epoch_time 0.0416 (0.0426)	validation_time 0.0004 (0.0006)	train_time 0.0411 (0.0419)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.99080003541708, 0.35200002789497375)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.69it/s] 19%|#9        | 5/26 [00:00<00:01, 15.73it/s] 35%|###4      | 9/26 [00:00<00:00, 22.87it/s] 50%|#####     | 13/26 [00:00<00:00, 27.13it/s] 65%|######5   | 17/26 [00:00<00:00, 29.93it/s] 81%|########  | 21/26 [00:00<00:00, 32.07it/s] 96%|#########6| 25/26 [00:00<00:00, 32.90it/s]100%|##########| 26/26 [00:01<00:00, 25.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 240000
penalty weights 0.0
Epoch: [45][  26/  26]	Loss 0.011 (0.016)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.34 ( 32.24)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.9328 (14.9075)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 23%|##3       | 6/26 [00:00<00:00, 26.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.22it/s] 42%|####2     | 11/26 [00:00<00:00, 33.54it/s] 62%|######1   | 16/26 [00:00<00:00, 38.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.65it/s] 81%|########  | 21/26 [00:00<00:00, 37.83it/s]100%|##########| 26/26 [00:00<00:00, 40.71it/s]100%|##########| 26/26 [00:00<00:00, 32.17it/s]
Test: [   0/  26]	Loss 0.037 (0.037)	test_acc   0.99 (  0.99)	test_minacc   0.92 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.037 (0.037)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.92 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.023 (0.031)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.023 (0.031)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  20/  26]	Loss 0.001 (0.025)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.025)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.021)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.31it/s]
Test: [  0/  1]	Loss 6.230 (6.230)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 6.230 (6.230)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 6.230 (6.230)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.96 (  0.96)	Loss_d 6.230 (6.230)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.50 (  0.50)
Overall Timing[ 45/  1]	epoch_time 0.0409 (0.0426)	validation_time 0.0004 (0.0006)	train_time 0.0405 (0.0419)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9932000306248665, 0.359000027179718)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.56it/s] 19%|#9        | 5/26 [00:00<00:00, 22.73it/s] 35%|###4      | 9/26 [00:00<00:00, 26.94it/s] 50%|#####     | 13/26 [00:00<00:00, 30.20it/s] 65%|######5   | 17/26 [00:00<00:00, 31.18it/s] 81%|########  | 21/26 [00:00<00:00, 32.90it/s] 96%|#########6| 25/26 [00:00<00:00, 34.21it/s]100%|##########| 26/26 [00:00<00:00, 28.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 240000
penalty weights 0.0
Epoch: [46][  26/  26]	Loss 0.002 (0.015)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  32.52 ( 32.44)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.0800 (14.9913)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 23%|##3       | 6/26 [00:00<00:00, 31.56it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.56it/s] 42%|####2     | 11/26 [00:00<00:00, 38.51it/s] 62%|######1   | 16/26 [00:00<00:00, 42.56it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.56it/s] 81%|########  | 21/26 [00:00<00:00, 37.98it/s]100%|##########| 26/26 [00:00<00:00, 40.93it/s]100%|##########| 26/26 [00:00<00:00, 34.70it/s]
Test: [   0/  26]	Loss 0.017 (0.017)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.017 (0.017)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.039 (0.024)	test_acc   0.98 (  0.99)	test_minacc   0.92 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.039 (0.024)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.92 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.004 (0.018)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.015)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.015)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.22it/s]
Test: [  0/  1]	Loss 6.462 (6.462)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.96 (  0.96)	Loss_d 6.462 (6.462)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 6.462 (6.462)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.96 (  0.96)	Loss_d 6.462 (6.462)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.52 (  0.52)
Overall Timing[ 46/  1]	epoch_time 0.0420 (0.0425)	validation_time 0.0004 (0.0006)	train_time 0.0415 (0.0419)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9945000293850899, 0.34700000286102295)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.46it/s] 15%|#5        | 4/26 [00:00<00:01, 19.19it/s] 31%|###       | 8/26 [00:00<00:00, 27.01it/s] 46%|####6     | 12/26 [00:00<00:00, 30.99it/s] 62%|######1   | 16/26 [00:00<00:00, 32.60it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.31it/s] 92%|#########2| 24/26 [00:00<00:00, 34.10it/s]100%|##########| 26/26 [00:00<00:00, 28.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 240000
penalty weights 0.0
Epoch: [47][  26/  26]	Loss 0.014 (0.016)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.71 ( 32.61)	train_acc   0.99 (  0.99)	train_minacc   0.95 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.8671 (14.9951)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.89it/s] 23%|##3       | 6/26 [00:00<00:00, 29.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.22it/s] 42%|####2     | 11/26 [00:00<00:00, 36.06it/s] 62%|######1   | 16/26 [00:00<00:00, 40.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.08it/s] 81%|########  | 21/26 [00:00<00:00, 38.22it/s]100%|##########| 26/26 [00:00<00:00, 41.16it/s]100%|##########| 26/26 [00:00<00:00, 33.63it/s]
Test: [   0/  26]	Loss 0.016 (0.016)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.016 (0.016)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.038 (0.022)	test_acc   0.98 (  0.99)	test_minacc   0.90 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.038 (0.022)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.90 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  20/  26]	Loss 0.002 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.013)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.013)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.10it/s]
Test: [  0/  1]	Loss 5.968 (5.968)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.92 (  0.92)	Loss_d 5.968 (5.968)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 5.968 (5.968)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.92 (  0.92)	Loss_d 5.968 (5.968)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.44 (  0.44)
Overall Timing[ 47/  1]	epoch_time 0.0458 (0.0426)	validation_time 0.0004 (0.0005)	train_time 0.0454 (0.0419)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9946000282168388, 0.3700000047683716)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.50it/s] 19%|#9        | 5/26 [00:00<00:00, 24.24it/s] 35%|###4      | 9/26 [00:00<00:00, 30.11it/s] 50%|#####     | 13/26 [00:00<00:00, 32.79it/s] 65%|######5   | 17/26 [00:00<00:00, 34.19it/s] 81%|########  | 21/26 [00:00<00:00, 35.02it/s] 96%|#########6| 25/26 [00:00<00:00, 34.89it/s]100%|##########| 26/26 [00:00<00:00, 30.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 240000
penalty weights 0.0
Epoch: [48][  26/  26]	Loss 0.011 (0.011)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  32.88 ( 32.80)	train_acc   1.00 (  1.00)	train_minacc   0.98 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.0883 (15.0131)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 19%|#9        | 5/26 [00:00<00:00, 22.10it/s] 38%|###8      | 10/26 [00:00<00:00, 32.46it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.46it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.53it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.32it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.32it/s] 96%|#########6| 25/26 [00:00<00:00, 40.27it/s]100%|##########| 26/26 [00:00<00:00, 33.21it/s]
Test: [   0/  26]	Loss 0.009 (0.009)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.009 (0.009)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.031 (0.012)	test_acc   0.99 (  1.00)	test_minacc   0.93 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.031 (0.012)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.93 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.52it/s]
Test: [  0/  1]	Loss 6.229 (6.229)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.94 (  0.94)	Loss_d 6.229 (6.229)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 6.229 (6.229)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.94 (  0.94)	Loss_d 6.229 (6.229)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.45 (  0.45)
Overall Timing[ 48/  1]	epoch_time 0.0392 (0.0425)	validation_time 0.0004 (0.0005)	train_time 0.0388 (0.0419)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9970000234246253, 0.37800002098083496)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.28it/s] 12%|#1        | 3/26 [00:00<00:01, 14.21it/s] 27%|##6       | 7/26 [00:00<00:00, 24.03it/s] 42%|####2     | 11/26 [00:00<00:00, 29.21it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.85it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.92it/s] 88%|########8 | 23/26 [00:00<00:00, 35.31it/s]100%|##########| 26/26 [00:00<00:00, 28.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 240000
penalty weights 0.0
Epoch: [49][  26/  26]	Loss 0.010 (0.010)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  33.03 ( 32.96)	train_acc   1.00 (  1.00)	train_minacc   0.98 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.5652 (15.4182)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.43it/s] 23%|##3       | 6/26 [00:00<00:00, 24.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.57it/s] 42%|####2     | 11/26 [00:00<00:00, 33.01it/s] 62%|######1   | 16/26 [00:00<00:00, 37.91it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.91it/s] 81%|########  | 21/26 [00:00<00:00, 37.39it/s]100%|##########| 26/26 [00:00<00:00, 40.46it/s]100%|##########| 26/26 [00:00<00:00, 32.21it/s]
Test: [   0/  26]	Loss 0.021 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.021 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.006 (0.017)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.017)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  20/  26]	Loss 0.004 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.53it/s]
Test: [  0/  1]	Loss 6.421 (6.421)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.97 (  0.97)	Loss_d 6.421 (6.421)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 6.421 (6.421)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.97 (  0.97)	Loss_d 6.421 (6.421)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.44 (  0.44)
Overall Timing[ 49/  1]	epoch_time 0.0384 (0.0425)	validation_time 0.0006 (0.0005)	train_time 0.0377 (0.0418)
record: (train_acc, test_acc) (0.9885000343918801, 0.47200003266334534)
last accs (train_acc, test_acc) (0.9961000292897224, 0.3880000114440918)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.166 MB of 0.166 MB uploadedwandb: \ 0.166 MB of 0.166 MB uploadedwandb: | 0.189 MB of 0.201 MB uploaded (0.003 MB deduped)wandb: / 0.471 MB of 0.471 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/diagnostics/epoch_time_val █▁▁▁▂▁▃▂▂▂▂▂▂▁▂▁▁▂▁▁▂▁▂▂▂▁▃▂▁▂▂▂▂▂▂▁▂▂▂▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/diagnostics/train_time_val █▁▁▁▃▂▃▂▂▂▂▂▂▂▂▁▁▂▁▂▂▁▂▂▂▂▃▂▁▂▂▂▂▂▂▁▂▂▃▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/Loss_avg ▁▁▁▁▁▁▁▁▁▂▂▁▂▃▂▂▃▃▄▄▄▅▅▅▆▅▅▅▇▆▆▇▇▇█▇██▇█
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/Loss_d_avg ▁▁▁▁▁▁▁▁▁▂▂▁▂▃▂▂▃▃▄▄▄▅▅▅▆▅▅▅▇▆▆▇▇▇█▇██▇█
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/Loss_d_val ▁▁▁▁▁▁▁▁▁▂▂▁▂▃▂▂▃▃▄▄▄▅▅▅▆▅▅▅▇▆▆▇▇▇█▇██▇█
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/Loss_val ▁▁▁▁▁▁▁▁▁▂▂▁▂▃▂▂▃▃▄▄▄▅▅▅▆▅▅▅▇▆▆▇▇▇█▇██▇█
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_acc_avg ▁▁▁▁▂▃▃▄▄▄▃▅▆▅▆▆▆▅▆▅▆▅▆▆▅▅█▇▆▆▆▆▆▆▆▇▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_acc_d_avg ▁▁▁▁▂▃▃▄▄▄▃▅▆▅▆▆▆▅▆▅▆▅▆▆▅▅█▇▆▆▆▆▆▆▆▇▆▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_acc_d_val ▁▁▁▁▂▃▃▄▄▄▃▅▆▅▆▆▆▅▆▅▆▅▆▆▅▅█▇▆▆▆▆▆▆▆▇▆▆▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_acc_val ▁▁▁▁▂▃▃▄▄▄▃▅▆▅▆▆▆▅▆▅▆▅▆▆▅▅█▇▆▆▆▆▆▆▆▇▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_corr_d_avg ████▇▆▆▆▆▆▆▅▄▅▄▄▄▄▄▄▄▄▄▄▄▅▁▂▃▃▃▃▃▄▃▂▃▄▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_corr_d_val ████▇▆▆▆▆▆▆▅▄▅▄▄▄▄▄▄▄▄▄▄▄▅▁▂▃▃▃▃▃▄▃▂▃▄▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_majacc_avg ▇████▇▇▇▅▄▅▆▅▆▆▃▁▄▃▄▃▁▃▃▂▆▂▄▃▃▂▄▄▆▄▆▅▅▂▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_majacc_d_avg ▇████▇▇▇▅▄▅▆▅▆▆▃▁▄▃▄▃▁▃▃▂▆▂▄▃▃▂▄▄▆▄▆▅▅▂▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_majacc_d_val ▇████▇▇▇▅▄▅▆▅▆▆▃▁▄▃▄▃▁▃▃▂▆▂▄▃▃▂▄▄▆▄▆▅▅▂▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_majacc_val ▇████▇▇▇▅▄▅▆▅▆▆▃▁▄▃▄▃▁▃▃▂▆▂▄▃▃▂▄▄▆▄▆▅▅▂▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_minacc_avg ▁▁▁▁▂▃▃▄▄▄▃▅▆▅▆▆▆▅▆▅▆▅▆▆▅▅█▇▆▆▆▆▆▆▆▇▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_minacc_d_avg ▁▁▁▁▂▃▃▄▄▄▃▅▆▅▆▆▆▅▆▅▆▅▆▆▅▅█▇▆▆▆▆▆▆▆▇▆▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_minacc_d_val ▁▁▁▁▂▃▃▄▄▄▃▅▆▅▆▆▆▅▆▅▆▅▆▆▅▅█▇▆▆▆▆▆▆▆▇▆▆▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_minacc_val ▁▁▁▁▂▃▃▄▄▄▃▅▆▅▆▆▆▅▆▅▆▅▆▆▅▅█▇▆▆▆▆▆▆▆▇▆▆▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/Loss_avg █▇▇▆▆▅▅▅▅▅▅▄▄▄▄▃▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/Loss_val ██▇▇▆▆▅▅▅▅▅▄▄▃▃▃▃▃▂▂▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/l1_avg ▂▁▁▁▁▁▁▁▁▁▁▂▂▂▂▂▃▃▃▄▄▄▅▅▆▅▅▆▇▇▇▇▇▇▇█████
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/l1_val ▁▁▁▁▁▁▁▂▁▂▁▁▂▂▂▂▂▃▄▄▄▅▅▅▆▅▆▆▇▇▆▇▇▇██▇█▇█
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_acc_avg ▁▂▂▂▃▃▃▃▃▄▄▄▅▅▅▅▆▆▆▇▇▇▇▇▇▇▇█████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_acc_val ▁▁▁▂▁▁▂▃▃▄▃▄▅▆▅▅▇▆▇▇▆▇▇▇▇▇██████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_majacc_avg ▁▇█▇▆▄▄▃▂▂▂▂▂▃▃▄▄▅▅▆▆▆▆▇▇▆▇▇████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_majacc_val ▅▇▇█▁▂▂▃▅▅▃▁▄▄▁▂▆▅▅█▃▄▆▄▆▇▆▇██████▇█████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_minacc_avg ▁▁▁▁▂▂▃▃▄▄▅▅▅▅▆▆▆▇▇▇▇▇▇▇█▇██████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_minacc_val ▁▁▁▁▂▂▃▃▃▄▃▅▆▆▇▆▇▇▇▇▇▇███▇██████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_nll_avg █▇▇▆▆▅▅▅▅▅▅▄▄▄▄▃▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_nll_val ██▇▇▆▆▅▅▅▅▅▄▄▃▃▃▃▃▂▂▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_penalty_avg █▄▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_penalty_val ▇█▇█▃▂▂▂▂▂▂▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/weight_norm_avg ▁▃▃▃▃▃▃▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇▇▇████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/weight_norm_val ▁▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/diagnostics/epoch_time_val 0.03836
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/diagnostics/train_time_val 0.03768
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/diagnostics/validation_time_val 0.00064
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/Loss_avg 6.42091
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/Loss_d_avg 6.42091
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/Loss_d_val 6.42091
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/Loss_val 6.42091
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_acc_avg 0.388
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_acc_d_avg 0.388
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_acc_d_val 0.388
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_acc_val 0.388
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_corr_d_avg 0.43768
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_corr_d_val 0.43768
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_majacc_avg 0.97
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_majacc_d_avg 0.97
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_majacc_d_val 0.97
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_majacc_val 0.97
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_minacc_avg 0.32333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_minacc_d_avg 0.32333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_minacc_d_val 0.32333
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/test/test_minacc_val 0.32333
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/Loss_avg 0.01005
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/Loss_val 0.0104
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/l1_avg 15.4182
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/l1_val 15.56525
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_acc_avg 0.9967
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_acc_val 0.996
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_majacc_avg 0.99766
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_majacc_val 1.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_minacc_avg 0.99176
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_minacc_val 0.97561
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_nll_avg 0.01005
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_nll_val 0.0104
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_penalty_avg 8e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/weight_norm_avg 32.95955
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/weight_norm_val 33.03343
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/114/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/25o591ks
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_191159-25o591ks/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_191447-6917m4r7
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/6917m4r7
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=240000, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Conv2d(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1162
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5964, 3, 32, 32) (6036, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:45,  1.81s/it] 19%|#9        | 5/26 [00:01<00:06,  3.39it/s] 35%|###4      | 9/26 [00:02<00:02,  6.72it/s] 50%|#####     | 13/26 [00:02<00:01, 10.43it/s] 65%|######5   | 17/26 [00:02<00:00, 14.28it/s] 81%|########  | 21/26 [00:02<00:00, 18.22it/s] 96%|#########6| 25/26 [00:02<00:00, 21.84it/s]100%|##########| 26/26 [00:02<00:00,  9.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 240000
penalty weights 0.0
Epoch: [0][  26/  26]	Loss 0.407 (0.530)	train_nll   0.41 (  0.53)	train_penalty   0.07 (  0.27)	weight_norm  20.89 ( 18.15)	train_acc   0.85 (  0.82)	train_minacc   0.00 (  0.05)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 6.9169 (8.0233)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.42it/s] 12%|#1        | 3/26 [00:00<00:02,  8.99it/s] 31%|###       | 8/26 [00:00<00:00, 21.55it/s]                                               31%|###       | 8/26 [00:00<00:00, 21.55it/s] 50%|#####     | 13/26 [00:00<00:00, 29.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.48it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.48it/s] 96%|#########6| 25/26 [00:00<00:00, 41.43it/s]100%|##########| 26/26 [00:00<00:00, 28.96it/s]
Test: [   0/  26]	Loss 0.457 (0.457)	test_acc   0.83 (  0.83)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.457 (0.457)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  10/  26]	Loss 0.453 (0.424)	test_acc   0.83 (  0.84)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.453 (0.424)	test_acc_d   0.83 (  0.84)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  20/  26]	Loss 0.405 (0.422)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.405 (0.422)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  26/  26]	Loss 0.402 (0.417)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.402 (0.417)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.48it/s]100%|##########| 1/1 [00:00<00:00,  2.48it/s]
Test: [  0/  1]	Loss 1.943 (1.943)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.943 (1.943)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
Test: [  1/  1]	Loss 1.943 (1.943)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.943 (1.943)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.99 (  0.99)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/116/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0823 (0.0823)	validation_time 0.0068 (0.0068)	train_time 0.0737 (0.0737)
record: (train_acc, test_acc) (0.8475000219345092, 0.10200000554323196)
last accs (train_acc, test_acc) (0.8475000219345092, 0.10200000554323196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 19%|#9        | 5/26 [00:00<00:00, 23.88it/s] 35%|###4      | 9/26 [00:00<00:00, 29.00it/s] 50%|#####     | 13/26 [00:00<00:00, 31.55it/s] 65%|######5   | 17/26 [00:00<00:00, 32.96it/s] 81%|########  | 21/26 [00:00<00:00, 33.65it/s] 96%|#########6| 25/26 [00:00<00:00, 34.41it/s]100%|##########| 26/26 [00:00<00:00, 29.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 240000
penalty weights 0.0
Epoch: [1][  26/  26]	Loss 0.379 (0.410)	train_nll   0.38 (  0.41)	train_penalty   0.05 (  0.06)	weight_norm  22.00 ( 21.66)	train_acc   0.85 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 6.6986 (6.6434)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.44it/s] 19%|#9        | 5/26 [00:00<00:00, 23.88it/s] 38%|###8      | 10/26 [00:00<00:00, 30.11it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.11it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.76it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.86it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.86it/s] 96%|#########6| 25/26 [00:00<00:00, 41.88it/s]100%|##########| 26/26 [00:00<00:00, 33.06it/s]
Test: [   0/  26]	Loss 0.438 (0.438)	test_acc   0.83 (  0.83)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.438 (0.438)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.419 (0.396)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.419 (0.396)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.392 (0.399)	test_acc   0.86 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.392 (0.399)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.374 (0.395)	test_acc   0.86 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.374 (0.395)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.87it/s]
Test: [  0/  1]	Loss 1.959 (1.959)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.959 (1.959)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.959 (1.959)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.959 (1.959)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0436 (0.0629)	validation_time 0.0004 (0.0036)	train_time 0.0432 (0.0584)
record: (train_acc, test_acc) (0.8475000219345092, 0.10200000554323196)
last accs (train_acc, test_acc) (0.8484000290632248, 0.10200000554323196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.10it/s] 23%|##3       | 6/26 [00:00<00:00, 28.31it/s] 38%|###8      | 10/26 [00:00<00:00, 31.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.58it/s] 69%|######9   | 18/26 [00:00<00:00, 32.89it/s] 85%|########4 | 22/26 [00:00<00:00, 32.91it/s]100%|##########| 26/26 [00:00<00:00, 33.09it/s]100%|##########| 26/26 [00:00<00:00, 29.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 240000
penalty weights 0.0
Epoch: [2][  26/  26]	Loss 0.349 (0.391)	train_nll   0.35 (  0.39)	train_penalty   0.04 (  0.05)	weight_norm  22.15 ( 22.09)	train_acc   0.85 (  0.85)	train_minacc   0.05 (  0.04)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 6.7530 (6.5612)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.75it/s] 23%|##3       | 6/26 [00:00<00:00, 26.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.73it/s] 42%|####2     | 11/26 [00:00<00:00, 35.43it/s] 62%|######1   | 16/26 [00:00<00:00, 36.36it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.36it/s] 81%|########  | 21/26 [00:00<00:00, 39.51it/s]100%|##########| 26/26 [00:00<00:00, 42.47it/s]100%|##########| 26/26 [00:00<00:00, 35.20it/s]
Test: [   0/  26]	Loss 0.419 (0.419)	test_acc   0.84 (  0.84)	test_minacc   0.09 (  0.09)	test_majacc   0.99 (  0.99)	Loss_d 0.419 (0.419)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  10/  26]	Loss 0.376 (0.364)	test_acc   0.83 (  0.85)	test_minacc   0.05 (  0.09)	test_majacc   0.98 (  0.98)	Loss_d 0.376 (0.364)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.05 (  0.09)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.362 (0.366)	test_acc   0.85 (  0.85)	test_minacc   0.09 (  0.09)	test_majacc   0.97 (  0.98)	Loss_d 0.362 (0.366)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.09 (  0.09)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.93 (  0.94)
Test: [  26/  26]	Loss 0.332 (0.361)	test_acc   0.86 (  0.85)	test_minacc   0.16 (  0.09)	test_majacc   0.98 (  0.98)	Loss_d 0.332 (0.361)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.16 (  0.09)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.28it/s]
Test: [  0/  1]	Loss 1.942 (1.942)	test_acc   0.15 (  0.15)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 1.942 (1.942)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.942 (1.942)	test_acc   0.15 (  0.15)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 1.942 (1.942)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/116/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0417 (0.0558)	validation_time 0.0004 (0.0025)	train_time 0.0413 (0.0527)
record: (train_acc, test_acc) (0.8500000218749046, 0.14500001072883606)
last accs (train_acc, test_acc) (0.8500000218749046, 0.14500001072883606)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.75it/s] 27%|##6       | 7/26 [00:00<00:00, 27.60it/s] 42%|####2     | 11/26 [00:00<00:00, 31.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.35it/s] 88%|########8 | 23/26 [00:00<00:00, 34.02it/s]100%|##########| 26/26 [00:00<00:00, 30.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 240000
penalty weights 0.0
Epoch: [3][  26/  26]	Loss 0.318 (0.362)	train_nll   0.32 (  0.36)	train_penalty   0.02 (  0.03)	weight_norm  22.24 ( 22.20)	train_acc   0.87 (  0.85)	train_minacc   0.19 (  0.11)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 6.7359 (6.6467)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.68it/s] 23%|##3       | 6/26 [00:00<00:00, 29.65it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.65it/s] 42%|####2     | 11/26 [00:00<00:00, 37.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.02it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.90it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.90it/s] 96%|#########6| 25/26 [00:00<00:00, 38.74it/s]100%|##########| 26/26 [00:00<00:00, 34.17it/s]
Test: [   0/  26]	Loss 0.396 (0.396)	test_acc   0.83 (  0.83)	test_minacc   0.21 (  0.21)	test_majacc   0.96 (  0.96)	Loss_d 0.396 (0.396)	test_acc_d   0.83 (  0.83)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.355 (0.338)	test_acc   0.83 (  0.85)	test_minacc   0.19 (  0.24)	test_majacc   0.96 (  0.96)	Loss_d 0.355 (0.338)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.19 (  0.24)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.89)
Test: [  20/  26]	Loss 0.321 (0.338)	test_acc   0.86 (  0.85)	test_minacc   0.26 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 0.321 (0.338)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.26 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  26/  26]	Loss 0.306 (0.333)	test_acc   0.87 (  0.86)	test_minacc   0.35 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 0.306 (0.333)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.35 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.85it/s]
Test: [  0/  1]	Loss 1.783 (1.783)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.97 (  0.97)	Loss_d 1.783 (1.783)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.78 (  0.78)
Test: [  1/  1]	Loss 1.783 (1.783)	test_acc   0.23 (  0.23)	test_minacc   0.15 (  0.15)	test_majacc   0.97 (  0.97)	Loss_d 1.783 (1.783)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.15 (  0.15)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.78 (  0.78)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/116/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0430 (0.0526)	validation_time 0.0005 (0.0020)	train_time 0.0425 (0.0502)
record: (train_acc, test_acc) (0.8551000198721885, 0.2330000102519989)
last accs (train_acc, test_acc) (0.8551000198721885, 0.2330000102519989)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.10it/s] 19%|#9        | 5/26 [00:00<00:00, 23.26it/s] 35%|###4      | 9/26 [00:00<00:00, 28.38it/s] 50%|#####     | 13/26 [00:00<00:00, 31.19it/s] 65%|######5   | 17/26 [00:00<00:00, 32.90it/s] 81%|########  | 21/26 [00:00<00:00, 33.59it/s] 96%|#########6| 25/26 [00:00<00:00, 34.09it/s]100%|##########| 26/26 [00:00<00:00, 29.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 240000
penalty weights 0.0
Epoch: [4][  26/  26]	Loss 0.279 (0.337)	train_nll   0.28 (  0.34)	train_penalty   0.01 (  0.02)	weight_norm  22.35 ( 22.30)	train_acc   0.86 (  0.85)	train_minacc   0.24 (  0.20)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 7.0214 (6.8171)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 10.80it/s] 31%|###       | 8/26 [00:00<00:00, 31.05it/s]                                               31%|###       | 8/26 [00:00<00:00, 31.05it/s] 54%|#####3    | 14/26 [00:00<00:00, 39.06it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.15it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.15it/s] 96%|#########6| 25/26 [00:00<00:00, 45.57it/s]100%|##########| 26/26 [00:00<00:00, 36.79it/s]
Test: [   0/  26]	Loss 0.372 (0.372)	test_acc   0.85 (  0.85)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 0.372 (0.372)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.339 (0.319)	test_acc   0.85 (  0.86)	test_minacc   0.28 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 0.339 (0.319)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.28 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  20/  26]	Loss 0.305 (0.323)	test_acc   0.85 (  0.86)	test_minacc   0.31 (  0.34)	test_majacc   0.94 (  0.95)	Loss_d 0.305 (0.323)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.31 (  0.34)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.268 (0.317)	test_acc   0.88 (  0.86)	test_minacc   0.49 (  0.34)	test_majacc   0.95 (  0.96)	Loss_d 0.268 (0.317)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.49 (  0.34)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.86 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.30it/s]
Test: [  0/  1]	Loss 1.954 (1.954)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 1.954 (1.954)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 1.954 (1.954)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 1.954 (1.954)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.74 (  0.74)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/116/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0431 (0.0507)	validation_time 0.0004 (0.0017)	train_time 0.0427 (0.0487)
record: (train_acc, test_acc) (0.863000024676323, 0.3020000159740448)
last accs (train_acc, test_acc) (0.863000024676323, 0.3020000159740448)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.70it/s] 19%|#9        | 5/26 [00:00<00:01, 18.02it/s] 35%|###4      | 9/26 [00:00<00:00, 24.42it/s] 50%|#####     | 13/26 [00:00<00:00, 28.84it/s] 65%|######5   | 17/26 [00:00<00:00, 31.87it/s] 81%|########  | 21/26 [00:00<00:00, 33.14it/s] 96%|#########6| 25/26 [00:00<00:00, 33.90it/s]100%|##########| 26/26 [00:00<00:00, 26.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 240000
penalty weights 0.0
Epoch: [5][  26/  26]	Loss 0.256 (0.322)	train_nll   0.26 (  0.32)	train_penalty   0.01 (  0.02)	weight_norm  22.47 ( 22.41)	train_acc   0.87 (  0.86)	train_minacc   0.49 (  0.30)	train_majacc   0.94 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0596 (6.9712)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.50it/s] 15%|#5        | 4/26 [00:00<00:01, 17.34it/s] 35%|###4      | 9/26 [00:00<00:00, 29.25it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.25it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.29it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.29it/s] 92%|#########2| 24/26 [00:00<00:00, 38.22it/s]100%|##########| 26/26 [00:00<00:00, 32.43it/s]
Test: [   0/  26]	Loss 0.360 (0.360)	test_acc   0.86 (  0.86)	test_minacc   0.37 (  0.37)	test_majacc   0.96 (  0.96)	Loss_d 0.360 (0.360)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.331 (0.317)	test_acc   0.86 (  0.86)	test_minacc   0.42 (  0.43)	test_majacc   0.94 (  0.94)	Loss_d 0.331 (0.317)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.42 (  0.43)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.87 (  0.87)
Test: [  20/  26]	Loss 0.299 (0.320)	test_acc   0.86 (  0.86)	test_minacc   0.44 (  0.43)	test_majacc   0.93 (  0.94)	Loss_d 0.299 (0.320)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.44 (  0.43)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.87 (  0.87)
Test: [  26/  26]	Loss 0.248 (0.312)	test_acc   0.89 (  0.86)	test_minacc   0.65 (  0.44)	test_majacc   0.93 (  0.94)	Loss_d 0.248 (0.312)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.65 (  0.44)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.83 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.50it/s]
Test: [  0/  1]	Loss 1.941 (1.941)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.96 (  0.96)	Loss_d 1.941 (1.941)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 1.941 (1.941)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.96 (  0.96)	Loss_d 1.941 (1.941)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.62 (  0.62)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/116/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0424 (0.0493)	validation_time 0.0003 (0.0015)	train_time 0.0421 (0.0476)
record: (train_acc, test_acc) (0.8628000237345695, 0.3920000195503235)
last accs (train_acc, test_acc) (0.8628000237345695, 0.3920000195503235)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.45it/s] 19%|#9        | 5/26 [00:00<00:00, 23.84it/s] 35%|###4      | 9/26 [00:00<00:00, 29.38it/s] 50%|#####     | 13/26 [00:00<00:00, 31.67it/s] 65%|######5   | 17/26 [00:00<00:00, 32.87it/s] 81%|########  | 21/26 [00:00<00:00, 33.52it/s] 96%|#########6| 25/26 [00:00<00:00, 33.59it/s]100%|##########| 26/26 [00:00<00:00, 29.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 240000
penalty weights 0.0
Epoch: [6][  26/  26]	Loss 0.256 (0.315)	train_nll   0.26 (  0.31)	train_penalty   0.01 (  0.02)	weight_norm  22.61 ( 22.54)	train_acc   0.87 (  0.86)	train_minacc   0.35 (  0.34)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.0023 (6.9136)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.07it/s] 27%|##6       | 7/26 [00:00<00:00, 24.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 24.89it/s] 46%|####6     | 12/26 [00:00<00:00, 32.87it/s] 65%|######5   | 17/26 [00:00<00:00, 37.46it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.46it/s] 85%|########4 | 22/26 [00:00<00:00, 40.74it/s]100%|##########| 26/26 [00:00<00:00, 32.57it/s]
Test: [   0/  26]	Loss 0.324 (0.324)	test_acc   0.87 (  0.87)	test_minacc   0.43 (  0.43)	test_majacc   0.96 (  0.96)	Loss_d 0.324 (0.324)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.308 (0.308)	test_acc   0.87 (  0.87)	test_minacc   0.50 (  0.44)	test_majacc   0.95 (  0.95)	Loss_d 0.308 (0.308)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.50 (  0.44)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.88)
Test: [  20/  26]	Loss 0.311 (0.308)	test_acc   0.86 (  0.87)	test_minacc   0.44 (  0.44)	test_majacc   0.92 (  0.95)	Loss_d 0.311 (0.308)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.92 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  26/  26]	Loss 0.231 (0.299)	test_acc   0.90 (  0.87)	test_minacc   0.62 (  0.45)	test_majacc   0.94 (  0.95)	Loss_d 0.231 (0.299)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.62 (  0.45)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.86 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.51it/s]
Test: [  0/  1]	Loss 2.034 (2.034)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.98 (  0.98)	Loss_d 2.034 (2.034)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.69 (  0.69)
Test: [  1/  1]	Loss 2.034 (2.034)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.98 (  0.98)	Loss_d 2.034 (2.034)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.69 (  0.69)
Overall Timing[  6/  1]	epoch_time 0.0411 (0.0482)	validation_time 0.0004 (0.0013)	train_time 0.0407 (0.0466)
record: (train_acc, test_acc) (0.8628000237345695, 0.3920000195503235)
last accs (train_acc, test_acc) (0.8721000232696533, 0.3500000238418579)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 19%|#9        | 5/26 [00:00<00:00, 21.81it/s] 35%|###4      | 9/26 [00:00<00:00, 27.28it/s] 50%|#####     | 13/26 [00:00<00:00, 30.08it/s] 65%|######5   | 17/26 [00:00<00:00, 31.22it/s] 81%|########  | 21/26 [00:00<00:00, 32.47it/s] 96%|#########6| 25/26 [00:00<00:00, 33.45it/s]100%|##########| 26/26 [00:00<00:00, 28.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 240000
penalty weights 0.0
Epoch: [7][  26/  26]	Loss 0.244 (0.298)	train_nll   0.24 (  0.30)	train_penalty   0.01 (  0.01)	weight_norm  22.77 ( 22.69)	train_acc   0.90 (  0.87)	train_minacc   0.57 (  0.42)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 7.0640 (6.9776)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.45it/s] 23%|##3       | 6/26 [00:00<00:00, 27.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.27it/s] 42%|####2     | 11/26 [00:00<00:00, 34.99it/s] 62%|######1   | 16/26 [00:00<00:00, 39.43it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.43it/s] 81%|########  | 21/26 [00:00<00:00, 38.33it/s]100%|##########| 26/26 [00:00<00:00, 41.41it/s]100%|##########| 26/26 [00:00<00:00, 33.31it/s]
Test: [   0/  26]	Loss 0.321 (0.321)	test_acc   0.86 (  0.86)	test_minacc   0.46 (  0.46)	test_majacc   0.94 (  0.94)	Loss_d 0.321 (0.321)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.314 (0.316)	test_acc   0.86 (  0.86)	test_minacc   0.53 (  0.46)	test_majacc   0.92 (  0.93)	Loss_d 0.314 (0.316)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.53 (  0.46)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.84 (  0.86)
Test: [  20/  26]	Loss 0.296 (0.310)	test_acc   0.87 (  0.87)	test_minacc   0.52 (  0.47)	test_majacc   0.93 (  0.94)	Loss_d 0.296 (0.310)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.52 (  0.47)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.87 (  0.86)
Test: [  26/  26]	Loss 0.226 (0.300)	test_acc   0.90 (  0.87)	test_minacc   0.68 (  0.49)	test_majacc   0.94 (  0.94)	Loss_d 0.226 (0.300)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.68 (  0.49)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.86 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.18it/s]
Test: [  0/  1]	Loss 2.096 (2.096)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.93 (  0.93)	Loss_d 2.096 (2.096)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 2.096 (2.096)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.93 (  0.93)	Loss_d 2.096 (2.096)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.66 (  0.66)
Overall Timing[  7/  1]	epoch_time 0.0403 (0.0472)	validation_time 0.0004 (0.0012)	train_time 0.0399 (0.0457)
record: (train_acc, test_acc) (0.8628000237345695, 0.3920000195503235)
last accs (train_acc, test_acc) (0.8707000284194947, 0.36000001430511475)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.32it/s] 19%|#9        | 5/26 [00:00<00:00, 25.96it/s] 35%|###4      | 9/26 [00:00<00:00, 30.98it/s] 50%|#####     | 13/26 [00:00<00:00, 32.54it/s] 65%|######5   | 17/26 [00:00<00:00, 33.32it/s] 81%|########  | 21/26 [00:00<00:00, 33.55it/s] 96%|#########6| 25/26 [00:00<00:00, 34.16it/s]100%|##########| 26/26 [00:00<00:00, 29.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 240000
penalty weights 0.0
Epoch: [8][  26/  26]	Loss 0.214 (0.293)	train_nll   0.21 (  0.29)	train_penalty   0.00 (  0.01)	weight_norm  22.96 ( 22.86)	train_acc   0.92 (  0.87)	train_minacc   0.73 (  0.44)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 7.1682 (7.0313)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 15%|#5        | 4/26 [00:00<00:01, 14.54it/s] 35%|###4      | 9/26 [00:00<00:00, 26.60it/s]                                               35%|###4      | 9/26 [00:00<00:00, 26.60it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.94it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.94it/s] 92%|#########2| 24/26 [00:00<00:00, 38.16it/s]100%|##########| 26/26 [00:00<00:00, 30.93it/s]
Test: [   0/  26]	Loss 0.302 (0.302)	test_acc   0.88 (  0.88)	test_minacc   0.55 (  0.55)	test_majacc   0.94 (  0.94)	Loss_d 0.302 (0.302)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.282 (0.280)	test_acc   0.88 (  0.88)	test_minacc   0.66 (  0.59)	test_majacc   0.93 (  0.93)	Loss_d 0.282 (0.280)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.66 (  0.59)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.80 (  0.82)
Test: [  20/  26]	Loss 0.264 (0.276)	test_acc   0.90 (  0.88)	test_minacc   0.65 (  0.60)	test_majacc   0.94 (  0.93)	Loss_d 0.264 (0.276)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.65 (  0.60)	test_majacc_d   0.94 (  0.93)	test_corr_d   0.83 (  0.82)
Test: [  26/  26]	Loss 0.195 (0.267)	test_acc   0.93 (  0.89)	test_minacc   0.81 (  0.61)	test_majacc   0.95 (  0.94)	Loss_d 0.195 (0.267)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.81 (  0.61)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.81 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.36it/s]
Test: [  0/  1]	Loss 2.014 (2.014)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 2.014 (2.014)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 2.014 (2.014)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 2.014 (2.014)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.51 (  0.51)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/116/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0432 (0.0467)	validation_time 0.0003 (0.0011)	train_time 0.0428 (0.0454)
record: (train_acc, test_acc) (0.8869000216126441, 0.4350000321865082)
last accs (train_acc, test_acc) (0.8869000216126441, 0.4350000321865082)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.12it/s] 19%|#9        | 5/26 [00:00<00:00, 22.79it/s] 35%|###4      | 9/26 [00:00<00:00, 28.12it/s] 50%|#####     | 13/26 [00:00<00:00, 31.04it/s] 65%|######5   | 17/26 [00:00<00:00, 32.41it/s] 81%|########  | 21/26 [00:00<00:00, 33.65it/s] 96%|#########6| 25/26 [00:00<00:00, 33.77it/s]100%|##########| 26/26 [00:00<00:00, 28.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 240000
penalty weights 0.0
Epoch: [9][  26/  26]	Loss 0.205 (0.278)	train_nll   0.21 (  0.28)	train_penalty   0.00 (  0.01)	weight_norm  23.20 ( 23.07)	train_acc   0.92 (  0.88)	train_minacc   0.70 (  0.50)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 7.6113 (7.1167)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.19it/s] 27%|##6       | 7/26 [00:00<00:00, 34.26it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.26it/s] 46%|####6     | 12/26 [00:00<00:00, 39.57it/s] 65%|######5   | 17/26 [00:00<00:00, 38.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.58it/s] 85%|########4 | 22/26 [00:00<00:00, 41.46it/s]100%|##########| 26/26 [00:00<00:00, 36.28it/s]
Test: [   0/  26]	Loss 0.266 (0.266)	test_acc   0.89 (  0.89)	test_minacc   0.54 (  0.54)	test_majacc   0.96 (  0.96)	Loss_d 0.266 (0.266)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.269 (0.269)	test_acc   0.88 (  0.89)	test_minacc   0.50 (  0.52)	test_majacc   0.95 (  0.95)	Loss_d 0.269 (0.269)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.84 (  0.84)
Test: [  20/  26]	Loss 0.253 (0.261)	test_acc   0.91 (  0.89)	test_minacc   0.67 (  0.56)	test_majacc   0.94 (  0.95)	Loss_d 0.253 (0.261)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.67 (  0.56)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.83 (  0.84)
Test: [  26/  26]	Loss 0.163 (0.251)	test_acc   0.95 (  0.90)	test_minacc   0.84 (  0.58)	test_majacc   0.97 (  0.95)	Loss_d 0.163 (0.251)	test_acc_d   0.95 (  0.90)	test_minacc_d   0.84 (  0.58)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.82 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.73it/s]
Test: [  0/  1]	Loss 2.402 (2.402)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.94 (  0.94)	Loss_d 2.402 (2.402)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 2.402 (2.402)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.94 (  0.94)	Loss_d 2.402 (2.402)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.56 (  0.56)
Overall Timing[  9/  1]	epoch_time 0.0399 (0.0460)	validation_time 0.0005 (0.0010)	train_time 0.0394 (0.0448)
record: (train_acc, test_acc) (0.8869000216126441, 0.4350000321865082)
last accs (train_acc, test_acc) (0.8954000183343888, 0.3840000033378601)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 15%|#5        | 4/26 [00:00<00:01, 19.65it/s] 31%|###       | 8/26 [00:00<00:00, 26.21it/s] 46%|####6     | 12/26 [00:00<00:00, 30.06it/s] 62%|######1   | 16/26 [00:00<00:00, 30.91it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.19it/s] 92%|#########2| 24/26 [00:00<00:00, 32.96it/s]100%|##########| 26/26 [00:00<00:00, 28.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 240000
penalty weights 0.0
Epoch: [10][  26/  26]	Loss 0.219 (0.269)	train_nll   0.22 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.52 ( 23.36)	train_acc   0.92 (  0.88)	train_minacc   0.59 (  0.51)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.6841 (7.1804)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.54it/s] 15%|#5        | 4/26 [00:00<00:01, 18.41it/s] 35%|###4      | 9/26 [00:00<00:00, 30.37it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.37it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.61it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.22it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.22it/s] 92%|#########2| 24/26 [00:00<00:00, 39.43it/s]100%|##########| 26/26 [00:00<00:00, 33.16it/s]
Test: [   0/  26]	Loss 0.277 (0.277)	test_acc   0.87 (  0.87)	test_minacc   0.57 (  0.57)	test_majacc   0.94 (  0.94)	Loss_d 0.277 (0.277)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.283 (0.259)	test_acc   0.88 (  0.89)	test_minacc   0.47 (  0.51)	test_majacc   0.96 (  0.96)	Loss_d 0.283 (0.259)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.86 (  0.86)
Test: [  20/  26]	Loss 0.223 (0.256)	test_acc   0.91 (  0.89)	test_minacc   0.69 (  0.55)	test_majacc   0.94 (  0.95)	Loss_d 0.223 (0.256)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.69 (  0.55)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.84 (  0.85)
Test: [  26/  26]	Loss 0.170 (0.245)	test_acc   0.96 (  0.90)	test_minacc   0.84 (  0.57)	test_majacc   0.98 (  0.96)	Loss_d 0.170 (0.245)	test_acc_d   0.96 (  0.90)	test_minacc_d   0.84 (  0.57)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.83 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.74it/s]
Test: [  0/  1]	Loss 2.534 (2.534)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.93 (  0.93)	Loss_d 2.534 (2.534)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 2.534 (2.534)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.93 (  0.93)	Loss_d 2.534 (2.534)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.64 (  0.64)
Overall Timing[ 10/  1]	epoch_time 0.0414 (0.0456)	validation_time 0.0004 (0.0010)	train_time 0.0410 (0.0445)
record: (train_acc, test_acc) (0.8869000216126441, 0.4350000321865082)
last accs (train_acc, test_acc) (0.8976000218987464, 0.3540000021457672)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.73it/s] 19%|#9        | 5/26 [00:00<00:01, 18.09it/s] 35%|###4      | 9/26 [00:00<00:00, 25.06it/s] 50%|#####     | 13/26 [00:00<00:00, 28.82it/s] 65%|######5   | 17/26 [00:00<00:00, 30.69it/s] 81%|########  | 21/26 [00:00<00:00, 32.23it/s] 96%|#########6| 25/26 [00:00<00:00, 33.52it/s]100%|##########| 26/26 [00:00<00:00, 26.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 240000
penalty weights 0.0
Epoch: [11][  26/  26]	Loss 0.189 (0.257)	train_nll   0.19 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  23.90 ( 23.71)	train_acc   0.94 (  0.89)	train_minacc   0.73 (  0.56)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 7.3889 (7.1333)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.52it/s] 23%|##3       | 6/26 [00:00<00:00, 29.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.27it/s] 42%|####2     | 11/26 [00:00<00:00, 34.36it/s] 62%|######1   | 16/26 [00:00<00:00, 37.69it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.69it/s] 81%|########  | 21/26 [00:00<00:00, 40.36it/s]100%|##########| 26/26 [00:00<00:00, 43.25it/s]100%|##########| 26/26 [00:00<00:00, 35.36it/s]
Test: [   0/  26]	Loss 0.267 (0.267)	test_acc   0.89 (  0.89)	test_minacc   0.63 (  0.63)	test_majacc   0.94 (  0.94)	Loss_d 0.267 (0.267)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.241 (0.242)	test_acc   0.91 (  0.90)	test_minacc   0.69 (  0.61)	test_majacc   0.95 (  0.95)	Loss_d 0.241 (0.242)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.69 (  0.61)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  20/  26]	Loss 0.213 (0.238)	test_acc   0.91 (  0.90)	test_minacc   0.74 (  0.63)	test_majacc   0.94 (  0.95)	Loss_d 0.213 (0.238)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.74 (  0.63)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.81 (  0.83)
Test: [  26/  26]	Loss 0.154 (0.226)	test_acc   0.96 (  0.91)	test_minacc   0.81 (  0.65)	test_majacc   0.98 (  0.95)	Loss_d 0.154 (0.226)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.81 (  0.65)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.83 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.07it/s]
Test: [  0/  1]	Loss 2.416 (2.416)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.93 (  0.93)	Loss_d 2.416 (2.416)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 2.416 (2.416)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.93 (  0.93)	Loss_d 2.416 (2.416)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.60 (  0.60)
Overall Timing[ 11/  1]	epoch_time 0.0395 (0.0451)	validation_time 0.0003 (0.0009)	train_time 0.0391 (0.0440)
record: (train_acc, test_acc) (0.8869000216126441, 0.4350000321865082)
last accs (train_acc, test_acc) (0.9082000189423561, 0.3700000047683716)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 12%|#1        | 3/26 [00:00<00:01, 13.41it/s] 27%|##6       | 7/26 [00:00<00:00, 23.00it/s] 42%|####2     | 11/26 [00:00<00:00, 27.72it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.43it/s] 88%|########8 | 23/26 [00:00<00:00, 33.65it/s]100%|##########| 26/26 [00:00<00:00, 27.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 240000
penalty weights 0.0
Epoch: [12][  26/  26]	Loss 0.160 (0.238)	train_nll   0.16 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  24.25 ( 24.07)	train_acc   0.95 (  0.90)	train_minacc   0.81 (  0.62)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.8800 (7.5175)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.42it/s] 23%|##3       | 6/26 [00:00<00:00, 29.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.73it/s] 42%|####2     | 11/26 [00:00<00:00, 33.47it/s] 62%|######1   | 16/26 [00:00<00:00, 38.96it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.96it/s] 81%|########  | 21/26 [00:00<00:00, 41.23it/s]100%|##########| 26/26 [00:00<00:00, 36.67it/s]
Test: [   0/  26]	Loss 0.260 (0.260)	test_acc   0.89 (  0.89)	test_minacc   0.66 (  0.66)	test_majacc   0.94 (  0.94)	Loss_d 0.260 (0.260)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.251 (0.230)	test_acc   0.89 (  0.90)	test_minacc   0.67 (  0.67)	test_majacc   0.94 (  0.94)	Loss_d 0.251 (0.230)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.81)
Test: [  20/  26]	Loss 0.178 (0.220)	test_acc   0.94 (  0.91)	test_minacc   0.80 (  0.70)	test_majacc   0.96 (  0.95)	Loss_d 0.178 (0.220)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.80 (  0.70)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.80 (  0.80)
Test: [  26/  26]	Loss 0.129 (0.209)	test_acc   0.96 (  0.92)	test_minacc   0.86 (  0.72)	test_majacc   0.98 (  0.95)	Loss_d 0.129 (0.209)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.86 (  0.72)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.79 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.97it/s]
Test: [  0/  1]	Loss 2.489 (2.489)	test_acc   0.45 (  0.45)	test_minacc   0.39 (  0.39)	test_majacc   0.97 (  0.97)	Loss_d 2.489 (2.489)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 2.489 (2.489)	test_acc   0.45 (  0.45)	test_minacc   0.39 (  0.39)	test_majacc   0.97 (  0.97)	Loss_d 2.489 (2.489)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.45 (  0.45)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/116/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0407 (0.0448)	validation_time 0.0005 (0.0009)	train_time 0.0402 (0.0437)
record: (train_acc, test_acc) (0.9150000222325325, 0.45000001788139343)
last accs (train_acc, test_acc) (0.9150000222325325, 0.45000001788139343)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.75it/s] 23%|##3       | 6/26 [00:00<00:00, 28.24it/s] 38%|###8      | 10/26 [00:00<00:00, 30.45it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.20it/s] 69%|######9   | 18/26 [00:00<00:00, 33.36it/s] 85%|########4 | 22/26 [00:00<00:00, 34.41it/s]100%|##########| 26/26 [00:00<00:00, 35.17it/s]100%|##########| 26/26 [00:00<00:00, 30.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 240000
penalty weights 0.0
Epoch: [13][  26/  26]	Loss 0.165 (0.215)	train_nll   0.16 (  0.21)	train_penalty   0.00 (  0.00)	weight_norm  24.63 ( 24.43)	train_acc   0.94 (  0.91)	train_minacc   0.78 (  0.69)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 8.0282 (7.8636)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.09it/s] 27%|##6       | 7/26 [00:00<00:00, 34.75it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.75it/s] 50%|#####     | 13/26 [00:00<00:00, 38.42it/s] 69%|######9   | 18/26 [00:00<00:00, 41.90it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.90it/s] 88%|########8 | 23/26 [00:00<00:00, 42.81it/s]100%|##########| 26/26 [00:00<00:00, 36.89it/s]
Test: [   0/  26]	Loss 0.242 (0.242)	test_acc   0.90 (  0.90)	test_minacc   0.73 (  0.73)	test_majacc   0.94 (  0.94)	Loss_d 0.242 (0.242)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.234 (0.225)	test_acc   0.89 (  0.91)	test_minacc   0.72 (  0.72)	test_majacc   0.92 (  0.94)	Loss_d 0.234 (0.225)	test_acc_d   0.89 (  0.91)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.92 (  0.94)	test_corr_d   0.76 (  0.78)
Test: [  20/  26]	Loss 0.172 (0.215)	test_acc   0.93 (  0.91)	test_minacc   0.85 (  0.73)	test_majacc   0.94 (  0.94)	Loss_d 0.172 (0.215)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.85 (  0.73)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.77 (  0.78)
Test: [  26/  26]	Loss 0.115 (0.202)	test_acc   0.98 (  0.92)	test_minacc   0.95 (  0.76)	test_majacc   0.98 (  0.95)	Loss_d 0.115 (0.202)	test_acc_d   0.98 (  0.92)	test_minacc_d   0.95 (  0.76)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.78 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.91it/s]
Test: [  0/  1]	Loss 2.556 (2.556)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 2.556 (2.556)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 2.556 (2.556)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 2.556 (2.556)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.41 (  0.41)
Overall Timing[ 13/  1]	epoch_time 0.0393 (0.0444)	validation_time 0.0004 (0.0008)	train_time 0.0389 (0.0434)
record: (train_acc, test_acc) (0.9150000222325325, 0.45000001788139343)
last accs (train_acc, test_acc) (0.9194000204801559, 0.44700002670288086)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.80it/s] 19%|#9        | 5/26 [00:00<00:00, 23.24it/s] 35%|###4      | 9/26 [00:00<00:00, 27.79it/s] 50%|#####     | 13/26 [00:00<00:00, 30.83it/s] 65%|######5   | 17/26 [00:00<00:00, 32.60it/s] 81%|########  | 21/26 [00:00<00:00, 33.03it/s] 96%|#########6| 25/26 [00:00<00:00, 33.51it/s]100%|##########| 26/26 [00:00<00:00, 28.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 240000
penalty weights 0.0
Epoch: [14][  26/  26]	Loss 0.124 (0.201)	train_nll   0.12 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm  25.06 ( 24.85)	train_acc   0.95 (  0.92)	train_minacc   0.84 (  0.70)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0441 (7.7736)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.75it/s] 31%|###       | 8/26 [00:00<00:00, 39.09it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.09it/s] 50%|#####     | 13/26 [00:00<00:00, 40.33it/s] 69%|######9   | 18/26 [00:00<00:00, 42.61it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.61it/s] 88%|########8 | 23/26 [00:00<00:00, 40.01it/s]100%|##########| 26/26 [00:00<00:00, 37.22it/s]
Test: [   0/  26]	Loss 0.213 (0.213)	test_acc   0.93 (  0.93)	test_minacc   0.79 (  0.79)	test_majacc   0.95 (  0.95)	Loss_d 0.213 (0.213)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.201 (0.191)	test_acc   0.92 (  0.92)	test_minacc   0.69 (  0.73)	test_majacc   0.97 (  0.96)	Loss_d 0.201 (0.191)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.69 (  0.73)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.80 (  0.80)
Test: [  20/  26]	Loss 0.133 (0.177)	test_acc   0.96 (  0.93)	test_minacc   0.80 (  0.74)	test_majacc   0.99 (  0.97)	Loss_d 0.133 (0.177)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.80 (  0.74)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.81 (  0.80)
Test: [  26/  26]	Loss 0.089 (0.165)	test_acc   0.97 (  0.94)	test_minacc   0.92 (  0.76)	test_majacc   0.98 (  0.97)	Loss_d 0.089 (0.165)	test_acc_d   0.97 (  0.94)	test_minacc_d   0.92 (  0.76)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.79 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.13it/s]
Test: [  0/  1]	Loss 2.717 (2.717)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 2.717 (2.717)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 2.717 (2.717)	test_acc   0.39 (  0.39)	test_minacc   0.32 (  0.32)	test_majacc   0.96 (  0.96)	Loss_d 2.717 (2.717)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.53 (  0.53)
Overall Timing[ 14/  1]	epoch_time 0.0413 (0.0442)	validation_time 0.0004 (0.0008)	train_time 0.0409 (0.0432)
record: (train_acc, test_acc) (0.9150000222325325, 0.45000001788139343)
last accs (train_acc, test_acc) (0.9374000203609466, 0.38600000739097595)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.12it/s] 15%|#5        | 4/26 [00:00<00:01, 17.59it/s] 31%|###       | 8/26 [00:00<00:00, 25.16it/s] 46%|####6     | 12/26 [00:00<00:00, 29.05it/s] 62%|######1   | 16/26 [00:00<00:00, 31.40it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.66it/s] 92%|#########2| 24/26 [00:00<00:00, 33.49it/s]100%|##########| 26/26 [00:00<00:00, 27.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 240000
penalty weights 0.0
Epoch: [15][  26/  26]	Loss 0.105 (0.173)	train_nll   0.11 (  0.17)	train_penalty   0.00 (  0.00)	weight_norm  25.51 ( 25.29)	train_acc   0.96 (  0.93)	train_minacc   0.86 (  0.76)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.3156 (8.4296)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 19.67it/s] 31%|###       | 8/26 [00:00<00:00, 33.83it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.83it/s] 50%|#####     | 13/26 [00:00<00:00, 38.89it/s] 69%|######9   | 18/26 [00:00<00:00, 41.93it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.93it/s] 88%|########8 | 23/26 [00:00<00:00, 40.19it/s]100%|##########| 26/26 [00:00<00:00, 36.62it/s]
Test: [   0/  26]	Loss 0.194 (0.194)	test_acc   0.92 (  0.92)	test_minacc   0.79 (  0.79)	test_majacc   0.95 (  0.95)	Loss_d 0.194 (0.194)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.79 (  0.79)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.167 (0.173)	test_acc   0.93 (  0.93)	test_minacc   0.70 (  0.74)	test_majacc   0.98 (  0.96)	Loss_d 0.167 (0.173)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.70 (  0.74)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.79 (  0.78)
Test: [  20/  26]	Loss 0.120 (0.161)	test_acc   0.95 (  0.94)	test_minacc   0.85 (  0.77)	test_majacc   0.97 (  0.97)	Loss_d 0.120 (0.161)	test_acc_d   0.95 (  0.94)	test_minacc_d   0.85 (  0.77)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.78 (  0.78)
Test: [  26/  26]	Loss 0.062 (0.149)	test_acc   0.98 (  0.94)	test_minacc   0.95 (  0.79)	test_majacc   0.99 (  0.97)	Loss_d 0.062 (0.149)	test_acc_d   0.98 (  0.94)	test_minacc_d   0.95 (  0.79)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.77 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.79it/s]
Test: [  0/  1]	Loss 2.735 (2.735)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 2.735 (2.735)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 2.735 (2.735)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 2.735 (2.735)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.41 (  0.41)
Overall Timing[ 15/  1]	epoch_time 0.0409 (0.0440)	validation_time 0.0004 (0.0008)	train_time 0.0405 (0.0431)
record: (train_acc, test_acc) (0.9150000222325325, 0.45000001788139343)
last accs (train_acc, test_acc) (0.943100021481514, 0.4310000240802765)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.76it/s] 23%|##3       | 6/26 [00:00<00:00, 24.39it/s] 38%|###8      | 10/26 [00:00<00:00, 28.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.96it/s] 69%|######9   | 18/26 [00:00<00:00, 31.69it/s] 85%|########4 | 22/26 [00:00<00:00, 33.00it/s]100%|##########| 26/26 [00:00<00:00, 33.62it/s]100%|##########| 26/26 [00:00<00:00, 28.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 240000
penalty weights 0.0
Epoch: [16][  26/  26]	Loss 0.113 (0.161)	train_nll   0.11 (  0.16)	train_penalty   0.00 (  0.00)	weight_norm  25.98 ( 25.75)	train_acc   0.96 (  0.93)	train_minacc   0.86 (  0.76)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 9.1385 (8.5874)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.22it/s] 27%|##6       | 7/26 [00:00<00:00, 31.47it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.47it/s] 46%|####6     | 12/26 [00:00<00:00, 38.23it/s] 65%|######5   | 17/26 [00:00<00:00, 40.00it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.00it/s] 85%|########4 | 22/26 [00:00<00:00, 39.91it/s]100%|##########| 26/26 [00:00<00:00, 36.62it/s]
Test: [   0/  26]	Loss 0.176 (0.176)	test_acc   0.93 (  0.93)	test_minacc   0.87 (  0.87)	test_majacc   0.95 (  0.95)	Loss_d 0.176 (0.176)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.171 (0.170)	test_acc   0.93 (  0.93)	test_minacc   0.78 (  0.79)	test_majacc   0.96 (  0.96)	Loss_d 0.171 (0.170)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.78 (  0.79)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.74 (  0.74)
Test: [  20/  26]	Loss 0.124 (0.157)	test_acc   0.94 (  0.94)	test_minacc   0.85 (  0.80)	test_majacc   0.96 (  0.96)	Loss_d 0.124 (0.157)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.85 (  0.80)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.74 (  0.74)
Test: [  26/  26]	Loss 0.060 (0.142)	test_acc   0.98 (  0.95)	test_minacc   0.95 (  0.83)	test_majacc   0.99 (  0.97)	Loss_d 0.060 (0.142)	test_acc_d   0.98 (  0.95)	test_minacc_d   0.95 (  0.83)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.74 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.15it/s]
Test: [  0/  1]	Loss 3.114 (3.114)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.90 (  0.90)	Loss_d 3.114 (3.114)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 3.114 (3.114)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.90 (  0.90)	Loss_d 3.114 (3.114)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.40 (  0.40)
Overall Timing[ 16/  1]	epoch_time 0.0403 (0.0438)	validation_time 0.0005 (0.0008)	train_time 0.0398 (0.0429)
record: (train_acc, test_acc) (0.9150000222325325, 0.45000001788139343)
last accs (train_acc, test_acc) (0.945400021135807, 0.4020000100135803)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.29it/s] 23%|##3       | 6/26 [00:00<00:00, 23.29it/s] 38%|###8      | 10/26 [00:00<00:00, 28.05it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.16it/s] 69%|######9   | 18/26 [00:00<00:00, 31.97it/s] 85%|########4 | 22/26 [00:00<00:00, 32.78it/s]100%|##########| 26/26 [00:00<00:00, 33.44it/s]100%|##########| 26/26 [00:00<00:00, 28.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 240000
penalty weights 0.0
Epoch: [17][  26/  26]	Loss 0.045 (0.153)	train_nll   0.04 (  0.15)	train_penalty   0.00 (  0.00)	weight_norm  26.49 ( 26.24)	train_acc   0.99 (  0.94)	train_minacc   1.00 (  0.76)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 9.4491 (8.8914)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.75it/s] 27%|##6       | 7/26 [00:00<00:00, 34.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.09it/s] 46%|####6     | 12/26 [00:00<00:00, 39.42it/s] 65%|######5   | 17/26 [00:00<00:00, 41.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.80it/s] 85%|########4 | 22/26 [00:00<00:00, 43.73it/s]100%|##########| 26/26 [00:00<00:00, 37.86it/s]
Test: [   0/  26]	Loss 0.178 (0.178)	test_acc   0.93 (  0.93)	test_minacc   0.84 (  0.84)	test_majacc   0.95 (  0.95)	Loss_d 0.178 (0.178)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.202 (0.187)	test_acc   0.91 (  0.93)	test_minacc   0.83 (  0.83)	test_majacc   0.92 (  0.94)	Loss_d 0.202 (0.187)	test_acc_d   0.91 (  0.93)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.92 (  0.94)	test_corr_d   0.65 (  0.69)
Test: [  20/  26]	Loss 0.106 (0.165)	test_acc   0.96 (  0.93)	test_minacc   0.93 (  0.86)	test_majacc   0.96 (  0.95)	Loss_d 0.106 (0.165)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.93 (  0.86)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.69 (  0.69)
Test: [  26/  26]	Loss 0.027 (0.148)	test_acc   1.00 (  0.94)	test_minacc   1.00 (  0.88)	test_majacc   1.00 (  0.95)	Loss_d 0.027 (0.148)	test_acc_d   1.00 (  0.94)	test_minacc_d   1.00 (  0.88)	test_majacc_d   1.00 (  0.95)	test_corr_d   0.72 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.03it/s]
Test: [  0/  1]	Loss 2.962 (2.962)	test_acc   0.49 (  0.49)	test_minacc   0.44 (  0.44)	test_majacc   0.87 (  0.87)	Loss_d 2.962 (2.962)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 2.962 (2.962)	test_acc   0.49 (  0.49)	test_minacc   0.44 (  0.44)	test_majacc   0.87 (  0.87)	Loss_d 2.962 (2.962)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.21 (  0.21)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/116/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0425 (0.0437)	validation_time 0.0003 (0.0007)	train_time 0.0421 (0.0428)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.82it/s] 19%|#9        | 5/26 [00:00<00:00, 23.88it/s] 35%|###4      | 9/26 [00:00<00:00, 29.92it/s] 50%|#####     | 13/26 [00:00<00:00, 31.85it/s] 65%|######5   | 17/26 [00:00<00:00, 33.55it/s] 81%|########  | 21/26 [00:00<00:00, 34.40it/s] 96%|#########6| 25/26 [00:00<00:00, 35.05it/s]100%|##########| 26/26 [00:00<00:00, 29.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 240000
penalty weights 0.0
Epoch: [18][  26/  26]	Loss 0.040 (0.135)	train_nll   0.04 (  0.13)	train_penalty   0.00 (  0.00)	weight_norm  27.02 ( 26.76)	train_acc   1.00 (  0.95)	train_minacc   1.00 (  0.80)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 10.2296 (9.7826)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.08it/s] 27%|##6       | 7/26 [00:00<00:00, 35.91it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.91it/s] 46%|####6     | 12/26 [00:00<00:00, 42.02it/s] 65%|######5   | 17/26 [00:00<00:00, 44.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.13it/s] 85%|########4 | 22/26 [00:00<00:00, 45.46it/s]100%|##########| 26/26 [00:00<00:00, 39.50it/s]
Test: [   0/  26]	Loss 0.104 (0.104)	test_acc   0.96 (  0.96)	test_minacc   0.90 (  0.90)	test_majacc   0.98 (  0.98)	Loss_d 0.104 (0.104)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.169 (0.128)	test_acc   0.93 (  0.95)	test_minacc   0.89 (  0.91)	test_majacc   0.94 (  0.96)	Loss_d 0.169 (0.128)	test_acc_d   0.93 (  0.95)	test_minacc_d   0.89 (  0.91)	test_majacc_d   0.94 (  0.96)	test_corr_d   0.65 (  0.68)
Test: [  20/  26]	Loss 0.070 (0.115)	test_acc   0.97 (  0.96)	test_minacc   0.94 (  0.91)	test_majacc   0.98 (  0.96)	Loss_d 0.070 (0.115)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.94 (  0.91)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.71 (  0.69)
Test: [  26/  26]	Loss 0.026 (0.106)	test_acc   1.00 (  0.96)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  0.97)	Loss_d 0.026 (0.106)	test_acc_d   1.00 (  0.96)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.70 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.21it/s]
Test: [  0/  1]	Loss 3.267 (3.267)	test_acc   0.47 (  0.47)	test_minacc   0.43 (  0.43)	test_majacc   0.89 (  0.89)	Loss_d 3.267 (3.267)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 3.267 (3.267)	test_acc   0.47 (  0.47)	test_minacc   0.43 (  0.43)	test_majacc   0.89 (  0.89)	Loss_d 3.267 (3.267)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.25 (  0.25)
Overall Timing[ 18/  1]	epoch_time 0.0401 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0397 (0.0427)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9601000152826309, 0.47200003266334534)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 19%|#9        | 5/26 [00:00<00:00, 22.16it/s] 35%|###4      | 9/26 [00:00<00:00, 28.03it/s] 50%|#####     | 13/26 [00:00<00:00, 29.29it/s] 65%|######5   | 17/26 [00:00<00:00, 31.36it/s] 81%|########  | 21/26 [00:00<00:00, 32.02it/s] 96%|#########6| 25/26 [00:00<00:00, 33.26it/s]100%|##########| 26/26 [00:00<00:00, 28.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 240000
penalty weights 0.0
Epoch: [19][  26/  26]	Loss 0.074 (0.119)	train_nll   0.07 (  0.12)	train_penalty   0.00 (  0.00)	weight_norm  27.61 ( 27.34)	train_acc   0.97 (  0.95)	train_minacc   0.81 (  0.84)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 10.3951 (9.6629)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.95it/s] 27%|##6       | 7/26 [00:00<00:00, 33.50it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.50it/s] 46%|####6     | 12/26 [00:00<00:00, 39.29it/s] 65%|######5   | 17/26 [00:00<00:00, 42.30it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.30it/s] 85%|########4 | 22/26 [00:00<00:00, 41.00it/s]100%|##########| 26/26 [00:00<00:00, 37.38it/s]
Test: [   0/  26]	Loss 0.136 (0.136)	test_acc   0.95 (  0.95)	test_minacc   0.84 (  0.84)	test_majacc   0.98 (  0.98)	Loss_d 0.136 (0.136)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.120 (0.131)	test_acc   0.95 (  0.95)	test_minacc   0.81 (  0.82)	test_majacc   0.98 (  0.98)	Loss_d 0.120 (0.131)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.81 (  0.82)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.75)
Test: [  20/  26]	Loss 0.058 (0.121)	test_acc   0.98 (  0.96)	test_minacc   0.93 (  0.82)	test_majacc   0.99 (  0.98)	Loss_d 0.058 (0.121)	test_acc_d   0.98 (  0.96)	test_minacc_d   0.93 (  0.82)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.74 (  0.75)
Test: [  26/  26]	Loss 0.029 (0.107)	test_acc   1.00 (  0.96)	test_minacc   0.97 (  0.85)	test_majacc   1.00 (  0.98)	Loss_d 0.029 (0.107)	test_acc_d   1.00 (  0.96)	test_minacc_d   0.97 (  0.85)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.74 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.02it/s]
Test: [  0/  1]	Loss 3.823 (3.823)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 3.823 (3.823)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 3.823 (3.823)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 3.823 (3.823)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.43 (  0.43)
Overall Timing[ 19/  1]	epoch_time 0.0445 (0.0435)	validation_time 0.0005 (0.0007)	train_time 0.0440 (0.0427)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9630000209212303, 0.398000031709671)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.12it/s] 19%|#9        | 5/26 [00:00<00:01, 19.39it/s] 35%|###4      | 9/26 [00:00<00:00, 25.42it/s] 50%|#####     | 13/26 [00:00<00:00, 28.53it/s] 65%|######5   | 17/26 [00:00<00:00, 30.65it/s] 81%|########  | 21/26 [00:00<00:00, 32.71it/s] 96%|#########6| 25/26 [00:00<00:00, 34.39it/s]100%|##########| 26/26 [00:00<00:00, 27.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 240000
penalty weights 0.0
Epoch: [20][  26/  26]	Loss 0.049 (0.118)	train_nll   0.05 (  0.12)	train_penalty   0.00 (  0.00)	weight_norm  28.19 ( 27.91)	train_acc   0.99 (  0.96)	train_minacc   0.95 (  0.85)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 10.4504 (10.0883)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.71it/s] 23%|##3       | 6/26 [00:00<00:00, 22.53it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.53it/s] 42%|####2     | 11/26 [00:00<00:00, 31.80it/s] 62%|######1   | 16/26 [00:00<00:00, 37.26it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.26it/s] 81%|########  | 21/26 [00:00<00:00, 36.70it/s]100%|##########| 26/26 [00:00<00:00, 40.53it/s]100%|##########| 26/26 [00:00<00:00, 31.53it/s]
Test: [   0/  26]	Loss 0.094 (0.094)	test_acc   0.98 (  0.98)	test_minacc   0.87 (  0.87)	test_majacc   1.00 (  1.00)	Loss_d 0.094 (0.094)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.87 (  0.87)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.152 (0.117)	test_acc   0.94 (  0.96)	test_minacc   0.73 (  0.77)	test_majacc   0.98 (  0.99)	Loss_d 0.152 (0.117)	test_acc_d   0.94 (  0.96)	test_minacc_d   0.73 (  0.77)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.78 (  0.79)
Test: [  20/  26]	Loss 0.066 (0.116)	test_acc   0.98 (  0.96)	test_minacc   0.91 (  0.78)	test_majacc   0.99 (  0.99)	Loss_d 0.066 (0.116)	test_acc_d   0.98 (  0.96)	test_minacc_d   0.91 (  0.78)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.79)
Test: [  26/  26]	Loss 0.028 (0.102)	test_acc   1.00 (  0.96)	test_minacc   1.00 (  0.81)	test_majacc   1.00 (  0.99)	Loss_d 0.028 (0.102)	test_acc_d   1.00 (  0.96)	test_minacc_d   1.00 (  0.81)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.75 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.39it/s]
Test: [  0/  1]	Loss 4.114 (4.114)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.91 (  0.91)	Loss_d 4.114 (4.114)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 4.114 (4.114)	test_acc   0.33 (  0.33)	test_minacc   0.27 (  0.27)	test_majacc   0.91 (  0.91)	Loss_d 4.114 (4.114)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.56 (  0.56)
Overall Timing[ 20/  1]	epoch_time 0.0433 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0429 (0.0427)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9644000207185746, 0.33100003004074097)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.33it/s] 19%|#9        | 5/26 [00:00<00:01, 17.03it/s] 35%|###4      | 9/26 [00:00<00:00, 23.60it/s] 50%|#####     | 13/26 [00:00<00:00, 27.33it/s] 65%|######5   | 17/26 [00:00<00:00, 29.56it/s] 81%|########  | 21/26 [00:00<00:00, 31.48it/s] 96%|#########6| 25/26 [00:00<00:00, 32.87it/s]100%|##########| 26/26 [00:01<00:00, 25.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 240000
penalty weights 0.0
Epoch: [21][  26/  26]	Loss 0.067 (0.111)	train_nll   0.07 (  0.11)	train_penalty   0.00 (  0.00)	weight_norm  28.74 ( 28.47)	train_acc   0.98 (  0.96)	train_minacc   0.89 (  0.85)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 10.4576 (10.5399)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.57it/s] 31%|###       | 8/26 [00:00<00:00, 39.81it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.81it/s] 50%|#####     | 13/26 [00:00<00:00, 42.38it/s] 69%|######9   | 18/26 [00:00<00:00, 44.60it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.60it/s] 88%|########8 | 23/26 [00:00<00:00, 44.94it/s]100%|##########| 26/26 [00:00<00:00, 39.44it/s]
Test: [   0/  26]	Loss 0.070 (0.070)	test_acc   0.97 (  0.97)	test_minacc   0.88 (  0.88)	test_majacc   0.99 (  0.99)	Loss_d 0.070 (0.070)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.074 (0.073)	test_acc   0.97 (  0.97)	test_minacc   0.89 (  0.87)	test_majacc   0.99 (  0.99)	Loss_d 0.074 (0.073)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.89 (  0.87)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.76)
Test: [  20/  26]	Loss 0.055 (0.078)	test_acc   0.98 (  0.97)	test_minacc   0.87 (  0.86)	test_majacc   0.99 (  0.99)	Loss_d 0.055 (0.078)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.87 (  0.86)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.76)
Test: [  26/  26]	Loss 0.030 (0.071)	test_acc   1.00 (  0.98)	test_minacc   0.97 (  0.88)	test_majacc   1.00 (  0.99)	Loss_d 0.030 (0.071)	test_acc_d   1.00 (  0.98)	test_minacc_d   0.97 (  0.88)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.75 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.73it/s]
Test: [  0/  1]	Loss 3.986 (3.986)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 3.986 (3.986)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 3.986 (3.986)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 3.986 (3.986)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.52 (  0.52)
Overall Timing[ 21/  1]	epoch_time 0.0433 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0429 (0.0427)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.975300025999546, 0.3580000102519989)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.79it/s] 19%|#9        | 5/26 [00:00<00:01, 19.73it/s] 35%|###4      | 9/26 [00:00<00:00, 25.91it/s] 50%|#####     | 13/26 [00:00<00:00, 29.65it/s] 65%|######5   | 17/26 [00:00<00:00, 32.06it/s] 81%|########  | 21/26 [00:00<00:00, 33.48it/s] 96%|#########6| 25/26 [00:00<00:00, 34.08it/s]100%|##########| 26/26 [00:00<00:00, 27.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 240000
penalty weights 0.0
Epoch: [22][  26/  26]	Loss 0.021 (0.079)	train_nll   0.02 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  29.20 ( 28.98)	train_acc   1.00 (  0.97)	train_minacc   1.00 (  0.90)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 11.1725 (11.2047)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.93it/s] 23%|##3       | 6/26 [00:00<00:00, 23.13it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.13it/s] 42%|####2     | 11/26 [00:00<00:00, 31.53it/s] 62%|######1   | 16/26 [00:00<00:00, 37.06it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.06it/s] 81%|########  | 21/26 [00:00<00:00, 36.39it/s]100%|##########| 26/26 [00:00<00:00, 40.21it/s]100%|##########| 26/26 [00:00<00:00, 31.43it/s]
Test: [   0/  26]	Loss 0.060 (0.060)	test_acc   0.98 (  0.98)	test_minacc   0.93 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.060 (0.060)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.077 (0.068)	test_acc   0.98 (  0.98)	test_minacc   0.92 (  0.88)	test_majacc   0.99 (  0.99)	Loss_d 0.077 (0.068)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.92 (  0.88)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.74)
Test: [  20/  26]	Loss 0.031 (0.068)	test_acc   0.99 (  0.98)	test_minacc   0.94 (  0.88)	test_majacc   1.00 (  0.99)	Loss_d 0.031 (0.068)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.94 (  0.88)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.75 (  0.75)
Test: [  26/  26]	Loss 0.013 (0.060)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.90)	test_majacc   1.00 (  0.99)	Loss_d 0.013 (0.060)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.90)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.90it/s]
Test: [  0/  1]	Loss 4.628 (4.628)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.93 (  0.93)	Loss_d 4.628 (4.628)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 4.628 (4.628)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.93 (  0.93)	Loss_d 4.628 (4.628)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.60 (  0.60)
Overall Timing[ 22/  1]	epoch_time 0.0432 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0428 (0.0427)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.979300023317337, 0.30400002002716064)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.56it/s] 19%|#9        | 5/26 [00:00<00:01, 19.46it/s] 35%|###4      | 9/26 [00:00<00:00, 25.76it/s] 50%|#####     | 13/26 [00:00<00:00, 29.00it/s] 65%|######5   | 17/26 [00:00<00:00, 31.36it/s] 81%|########  | 21/26 [00:00<00:00, 33.02it/s] 96%|#########6| 25/26 [00:00<00:00, 33.47it/s]100%|##########| 26/26 [00:00<00:00, 27.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 240000
penalty weights 0.0
l1 at pgd_anneal_iters 11.392446517944336
set z to 10.822824192047118
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 240000
penalty weights 0.0
Epoch: [23][  26/  26]	Loss 0.023 (0.053)	train_nll   0.02 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm  29.58 ( 29.40)	train_acc   1.00 (  0.98)	train_minacc   0.97 (  0.93)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.5308 (12.0931)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.91it/s] 27%|##6       | 7/26 [00:00<00:00, 33.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.16it/s] 46%|####6     | 12/26 [00:00<00:00, 35.51it/s] 65%|######5   | 17/26 [00:00<00:00, 39.73it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.73it/s] 85%|########4 | 22/26 [00:00<00:00, 41.66it/s]100%|##########| 26/26 [00:00<00:00, 36.40it/s]
Test: [   0/  26]	Loss 0.074 (0.074)	test_acc   0.97 (  0.97)	test_minacc   0.85 (  0.85)	test_majacc   1.00 (  1.00)	Loss_d 0.074 (0.074)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.85 (  0.85)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.102 (0.078)	test_acc   0.96 (  0.97)	test_minacc   0.81 (  0.84)	test_majacc   0.99 (  1.00)	Loss_d 0.102 (0.078)	test_acc_d   0.96 (  0.97)	test_minacc_d   0.81 (  0.84)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.74 (  0.76)
Test: [  20/  26]	Loss 0.061 (0.084)	test_acc   0.98 (  0.97)	test_minacc   0.87 (  0.84)	test_majacc   1.00 (  1.00)	Loss_d 0.061 (0.084)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.87 (  0.84)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.79 (  0.76)
Test: [  26/  26]	Loss 0.006 (0.074)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.86)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.074)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.86)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.50it/s]
Test: [  0/  1]	Loss 5.179 (5.179)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.94 (  0.94)	Loss_d 5.179 (5.179)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 5.179 (5.179)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.94 (  0.94)	Loss_d 5.179 (5.179)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.56 (  0.56)
Overall Timing[ 23/  1]	epoch_time 0.0408 (0.0434)	validation_time 0.0004 (0.0007)	train_time 0.0404 (0.0426)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9750000270605087, 0.32600000500679016)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 19%|#9        | 5/26 [00:00<00:00, 23.27it/s] 35%|###4      | 9/26 [00:00<00:00, 29.03it/s] 50%|#####     | 13/26 [00:00<00:00, 31.72it/s] 65%|######5   | 17/26 [00:00<00:00, 33.24it/s] 81%|########  | 21/26 [00:00<00:00, 34.08it/s] 96%|#########6| 25/26 [00:00<00:00, 33.90it/s]100%|##########| 26/26 [00:00<00:00, 28.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 240000
penalty weights 0.0
Epoch: [24][  26/  26]	Loss 0.022 (0.057)	train_nll   0.02 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm  30.02 ( 29.81)	train_acc   0.99 (  0.98)	train_minacc   0.97 (  0.93)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 11.9710 (12.2272)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 19%|#9        | 5/26 [00:00<00:00, 22.56it/s] 38%|###8      | 10/26 [00:00<00:00, 31.95it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.71it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.25it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.25it/s] 96%|#########6| 25/26 [00:00<00:00, 40.76it/s]100%|##########| 26/26 [00:00<00:00, 33.29it/s]
Test: [   0/  26]	Loss 0.068 (0.068)	test_acc   0.97 (  0.97)	test_minacc   0.91 (  0.91)	test_majacc   0.99 (  0.99)	Loss_d 0.068 (0.068)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.063 (0.045)	test_acc   0.98 (  0.98)	test_minacc   0.91 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.063 (0.045)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.91 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.73)
Test: [  20/  26]	Loss 0.015 (0.039)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.015 (0.039)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.73)
Test: [  26/  26]	Loss 0.008 (0.035)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.035)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.89it/s]
Test: [  0/  1]	Loss 4.502 (4.502)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.95 (  0.95)	Loss_d 4.502 (4.502)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 4.502 (4.502)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.95 (  0.95)	Loss_d 4.502 (4.502)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.48 (  0.48)
Overall Timing[ 24/  1]	epoch_time 0.0384 (0.0432)	validation_time 0.0003 (0.0006)	train_time 0.0380 (0.0425)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9892000378370285, 0.37300002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.41it/s] 19%|#9        | 5/26 [00:00<00:01, 20.09it/s] 35%|###4      | 9/26 [00:00<00:00, 26.59it/s] 50%|#####     | 13/26 [00:00<00:00, 29.83it/s] 65%|######5   | 17/26 [00:00<00:00, 31.99it/s] 81%|########  | 21/26 [00:00<00:00, 33.43it/s] 96%|#########6| 25/26 [00:00<00:00, 33.98it/s]100%|##########| 26/26 [00:00<00:00, 28.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 240000
penalty weights 0.0
Epoch: [25][  26/  26]	Loss 0.013 (0.046)	train_nll   0.01 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm  30.39 ( 30.21)	train_acc   1.00 (  0.98)	train_minacc   1.00 (  0.94)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.0056 (12.4657)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.39it/s] 23%|##3       | 6/26 [00:00<00:00, 27.73it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.73it/s] 42%|####2     | 11/26 [00:00<00:00, 34.74it/s] 62%|######1   | 16/26 [00:00<00:00, 39.05it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.05it/s] 81%|########  | 21/26 [00:00<00:00, 42.25it/s]100%|##########| 26/26 [00:00<00:00, 44.14it/s]100%|##########| 26/26 [00:00<00:00, 34.68it/s]
Test: [   0/  26]	Loss 0.035 (0.035)	test_acc   0.99 (  0.99)	test_minacc   0.93 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.035 (0.035)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.93 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.058 (0.067)	test_acc   0.98 (  0.98)	test_minacc   0.91 (  0.89)	test_majacc   1.00 (  0.99)	Loss_d 0.058 (0.067)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.91 (  0.89)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.73)
Test: [  20/  26]	Loss 0.021 (0.061)	test_acc   0.99 (  0.98)	test_minacc   0.93 (  0.89)	test_majacc   1.00 (  0.99)	Loss_d 0.021 (0.061)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.93 (  0.89)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.76 (  0.73)
Test: [  26/  26]	Loss 0.005 (0.053)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.91)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.053)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.91)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.76it/s]
Test: [  0/  1]	Loss 4.957 (4.957)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.95 (  0.95)	Loss_d 4.957 (4.957)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.46 (  0.46)
Test: [  1/  1]	Loss 4.957 (4.957)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.95 (  0.95)	Loss_d 4.957 (4.957)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.46 (  0.46)
Overall Timing[ 25/  1]	epoch_time 0.0392 (0.0430)	validation_time 0.0004 (0.0006)	train_time 0.0388 (0.0423)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9823000277876854, 0.3800000250339508)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.74it/s] 12%|#1        | 3/26 [00:00<00:01, 13.53it/s] 27%|##6       | 7/26 [00:00<00:00, 23.82it/s] 42%|####2     | 11/26 [00:00<00:00, 29.74it/s] 62%|######1   | 16/26 [00:00<00:00, 34.08it/s] 81%|########  | 21/26 [00:00<00:00, 36.30it/s] 96%|#########6| 25/26 [00:00<00:00, 36.88it/s]100%|##########| 26/26 [00:00<00:00, 29.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 240000
penalty weights 0.0
Epoch: [26][  26/  26]	Loss 0.031 (0.047)	train_nll   0.03 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm  30.80 ( 30.60)	train_acc   0.99 (  0.98)	train_minacc   0.97 (  0.94)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.8794 (12.9923)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 27%|##6       | 7/26 [00:00<00:00, 33.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.17it/s] 46%|####6     | 12/26 [00:00<00:00, 39.20it/s] 65%|######5   | 17/26 [00:00<00:00, 41.71it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.71it/s] 85%|########4 | 22/26 [00:00<00:00, 43.27it/s]100%|##########| 26/26 [00:00<00:00, 37.14it/s]
Test: [   0/  26]	Loss 0.028 (0.028)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.028 (0.028)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.060 (0.037)	test_acc   0.98 (  0.99)	test_minacc   0.92 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.060 (0.037)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.92 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.71)
Test: [  20/  26]	Loss 0.014 (0.032)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.014 (0.032)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.74 (  0.71)
Test: [  26/  26]	Loss 0.005 (0.028)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.005 (0.028)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.86it/s]
Test: [  0/  1]	Loss 4.641 (4.641)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.89 (  0.89)	Loss_d 4.641 (4.641)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 4.641 (4.641)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.89 (  0.89)	Loss_d 4.641 (4.641)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.35 (  0.35)
Overall Timing[ 26/  1]	epoch_time 0.0370 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0366 (0.0421)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9906000331044197, 0.4150000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.92it/s] 19%|#9        | 5/26 [00:00<00:01, 18.34it/s] 35%|###4      | 9/26 [00:00<00:00, 25.04it/s] 50%|#####     | 13/26 [00:00<00:00, 28.76it/s] 65%|######5   | 17/26 [00:00<00:00, 31.18it/s] 81%|########  | 21/26 [00:00<00:00, 32.96it/s] 96%|#########6| 25/26 [00:00<00:00, 33.87it/s]100%|##########| 26/26 [00:00<00:00, 27.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 240000
penalty weights 0.0
Epoch: [27][  26/  26]	Loss 0.024 (0.039)	train_nll   0.02 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  31.18 ( 31.00)	train_acc   0.99 (  0.99)	train_minacc   0.97 (  0.95)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.2351 (13.0388)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 15%|#5        | 4/26 [00:00<00:01, 16.54it/s] 35%|###4      | 9/26 [00:00<00:00, 28.75it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.75it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.67it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 35.67it/s] 81%|########  | 21/26 [00:00<00:00, 42.88it/s]100%|##########| 26/26 [00:00<00:00, 34.16it/s]
Test: [   0/  26]	Loss 0.045 (0.045)	test_acc   0.98 (  0.98)	test_minacc   0.91 (  0.91)	test_majacc   0.99 (  0.99)	Loss_d 0.045 (0.045)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.072 (0.050)	test_acc   0.98 (  0.98)	test_minacc   0.94 (  0.95)	test_majacc   0.98 (  0.99)	Loss_d 0.072 (0.050)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.94 (  0.95)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.68 (  0.70)
Test: [  20/  26]	Loss 0.024 (0.048)	test_acc   0.99 (  0.98)	test_minacc   0.96 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.024 (0.048)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.96 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.74 (  0.70)
Test: [  26/  26]	Loss 0.007 (0.042)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.007 (0.042)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.73it/s]
Test: [  0/  1]	Loss 4.902 (4.902)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.89 (  0.89)	Loss_d 4.902 (4.902)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 4.902 (4.902)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.89 (  0.89)	Loss_d 4.902 (4.902)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.38 (  0.38)
Overall Timing[ 27/  1]	epoch_time 0.0358 (0.0426)	validation_time 0.0003 (0.0006)	train_time 0.0355 (0.0419)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9847000299692154, 0.3970000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.02it/s] 19%|#9        | 5/26 [00:00<00:01, 18.73it/s] 35%|###4      | 9/26 [00:00<00:00, 25.38it/s] 50%|#####     | 13/26 [00:00<00:00, 29.40it/s] 65%|######5   | 17/26 [00:00<00:00, 32.07it/s] 81%|########  | 21/26 [00:00<00:00, 33.29it/s] 96%|#########6| 25/26 [00:00<00:00, 34.37it/s]100%|##########| 26/26 [00:00<00:00, 27.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 240000
penalty weights 0.0
Epoch: [28][  26/  26]	Loss 0.009 (0.029)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  31.50 ( 31.35)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.96)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.0456 (13.6234)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.98it/s] 23%|##3       | 6/26 [00:00<00:00, 32.70it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.70it/s] 42%|####2     | 11/26 [00:00<00:00, 38.92it/s] 62%|######1   | 16/26 [00:00<00:00, 42.85it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.85it/s] 81%|########  | 21/26 [00:00<00:00, 41.00it/s]100%|##########| 26/26 [00:00<00:00, 38.06it/s]
Test: [   0/  26]	Loss 0.033 (0.033)	test_acc   0.99 (  0.99)	test_minacc   0.99 (  0.99)	test_majacc   0.99 (  0.99)	Loss_d 0.033 (0.033)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.99 (  0.99)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.073 (0.041)	test_acc   0.98 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.073 (0.041)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.70)
Test: [  20/  26]	Loss 0.005 (0.033)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.005 (0.033)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.003 (0.028)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.028)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.76it/s]
Test: [  0/  1]	Loss 5.411 (5.411)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.91)	Loss_d 5.411 (5.411)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 5.411 (5.411)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.91)	Loss_d 5.411 (5.411)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.42 (  0.42)
Overall Timing[ 28/  1]	epoch_time 0.0378 (0.0424)	validation_time 0.0005 (0.0006)	train_time 0.0373 (0.0417)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9905000296235085, 0.38100001215934753)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 15%|#5        | 4/26 [00:00<00:01, 19.94it/s] 31%|###       | 8/26 [00:00<00:00, 26.98it/s] 46%|####6     | 12/26 [00:00<00:00, 29.77it/s] 62%|######1   | 16/26 [00:00<00:00, 30.72it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.54it/s] 92%|#########2| 24/26 [00:00<00:00, 34.65it/s]100%|##########| 26/26 [00:00<00:00, 28.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 240000
penalty weights 0.0
Epoch: [29][  26/  26]	Loss 0.020 (0.030)	train_nll   0.02 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  31.82 ( 31.66)	train_acc   1.00 (  0.99)	train_minacc   0.97 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 14.2405 (14.2462)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.53it/s] 27%|##6       | 7/26 [00:00<00:00, 35.29it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.29it/s] 46%|####6     | 12/26 [00:00<00:00, 41.05it/s] 65%|######5   | 17/26 [00:00<00:00, 39.08it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.08it/s] 85%|########4 | 22/26 [00:00<00:00, 41.96it/s]100%|##########| 26/26 [00:00<00:00, 36.67it/s]
Test: [   0/  26]	Loss 0.057 (0.057)	test_acc   0.98 (  0.98)	test_minacc   0.93 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.057 (0.057)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.039 (0.038)	test_acc   0.98 (  0.99)	test_minacc   0.94 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.039 (0.038)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.94 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.71)
Test: [  20/  26]	Loss 0.022 (0.040)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.94)	test_majacc   1.00 (  0.99)	Loss_d 0.022 (0.040)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.94)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.73 (  0.71)
Test: [  26/  26]	Loss 0.004 (0.036)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.004 (0.036)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.30it/s]
Test: [  0/  1]	Loss 5.468 (5.468)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 5.468 (5.468)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 5.468 (5.468)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 5.468 (5.468)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.40 (  0.40)
Overall Timing[ 29/  1]	epoch_time 0.0403 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0399 (0.0417)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9872000356316566, 0.4010000228881836)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.78it/s] 19%|#9        | 5/26 [00:00<00:01, 17.89it/s] 35%|###4      | 9/26 [00:00<00:00, 24.42it/s] 50%|#####     | 13/26 [00:00<00:00, 28.48it/s] 65%|######5   | 17/26 [00:00<00:00, 31.34it/s] 81%|########  | 21/26 [00:00<00:00, 33.25it/s] 96%|#########6| 25/26 [00:00<00:00, 34.49it/s]100%|##########| 26/26 [00:00<00:00, 27.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 240000
penalty weights 0.0
Epoch: [30][  26/  26]	Loss 0.012 (0.037)	train_nll   0.01 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  32.20 ( 32.02)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.95)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.7957 (13.8904)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.54it/s] 27%|##6       | 7/26 [00:00<00:00, 33.38it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.38it/s] 46%|####6     | 12/26 [00:00<00:00, 39.33it/s] 65%|######5   | 17/26 [00:00<00:00, 38.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.79it/s] 85%|########4 | 22/26 [00:00<00:00, 41.01it/s]100%|##########| 26/26 [00:00<00:00, 35.86it/s]
Test: [   0/  26]	Loss 0.040 (0.040)	test_acc   0.98 (  0.98)	test_minacc   0.99 (  0.99)	test_majacc   0.98 (  0.98)	Loss_d 0.040 (0.040)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.99 (  0.99)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.044 (0.023)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.044 (0.023)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.68 (  0.70)
Test: [  20/  26]	Loss 0.004 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.005 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.81it/s]
Test: [  0/  1]	Loss 5.378 (5.378)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.91)	Loss_d 5.378 (5.378)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 5.378 (5.378)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.91)	Loss_d 5.378 (5.378)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.43 (  0.43)
Overall Timing[ 30/  1]	epoch_time 0.0409 (0.0423)	validation_time 0.0003 (0.0006)	train_time 0.0406 (0.0416)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9946000328660012, 0.3830000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.55it/s] 19%|#9        | 5/26 [00:00<00:00, 23.77it/s] 35%|###4      | 9/26 [00:00<00:00, 28.57it/s] 50%|#####     | 13/26 [00:00<00:00, 31.41it/s] 65%|######5   | 17/26 [00:00<00:00, 32.81it/s] 81%|########  | 21/26 [00:00<00:00, 33.81it/s] 96%|#########6| 25/26 [00:00<00:00, 34.46it/s]100%|##########| 26/26 [00:00<00:00, 29.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 240000
penalty weights 0.0
Epoch: [31][  26/  26]	Loss 0.005 (0.020)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.47 ( 32.34)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.8226 (14.3286)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.58it/s] 23%|##3       | 6/26 [00:00<00:00, 21.86it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.86it/s] 42%|####2     | 11/26 [00:00<00:00, 30.93it/s] 62%|######1   | 16/26 [00:00<00:00, 36.78it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.78it/s] 81%|########  | 21/26 [00:00<00:00, 36.84it/s]100%|##########| 26/26 [00:00<00:00, 40.51it/s]100%|##########| 26/26 [00:00<00:00, 31.42it/s]
Test: [   0/  26]	Loss 0.017 (0.017)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.017 (0.017)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.008 (0.013)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.013)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  20/  26]	Loss 0.013 (0.011)	test_acc   0.99 (  1.00)	test_minacc   0.96 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.013 (0.011)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.96 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.29it/s]
Test: [  0/  1]	Loss 5.829 (5.829)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 5.829 (5.829)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 5.829 (5.829)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 5.829 (5.829)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.42 (  0.42)
Overall Timing[ 31/  1]	epoch_time 0.0420 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0416 (0.0416)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9970000257492065, 0.39000001549720764)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 19%|#9        | 5/26 [00:00<00:01, 19.02it/s] 35%|###4      | 9/26 [00:00<00:00, 25.50it/s] 50%|#####     | 13/26 [00:00<00:00, 29.37it/s] 65%|######5   | 17/26 [00:00<00:00, 31.90it/s] 81%|########  | 21/26 [00:00<00:00, 33.47it/s] 96%|#########6| 25/26 [00:00<00:00, 34.21it/s]100%|##########| 26/26 [00:00<00:00, 27.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 240000
penalty weights 0.0
Epoch: [32][  26/  26]	Loss 0.033 (0.017)	train_nll   0.03 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.71 ( 32.59)	train_acc   0.98 (  0.99)	train_minacc   0.92 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.1282 (15.0526)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.87it/s] 31%|###       | 8/26 [00:00<00:00, 36.70it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.70it/s] 50%|#####     | 13/26 [00:00<00:00, 39.86it/s] 69%|######9   | 18/26 [00:00<00:00, 42.84it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.84it/s] 88%|########8 | 23/26 [00:00<00:00, 40.58it/s]100%|##########| 26/26 [00:00<00:00, 38.44it/s]
Test: [   0/  26]	Loss 0.035 (0.035)	test_acc   0.98 (  0.98)	test_minacc   0.99 (  0.99)	test_majacc   0.98 (  0.98)	Loss_d 0.035 (0.035)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.99 (  0.99)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.028 (0.037)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.028 (0.037)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.70)
Test: [  20/  26]	Loss 0.010 (0.034)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.010 (0.034)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.002 (0.029)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.002 (0.029)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.24it/s]
Test: [  0/  1]	Loss 6.307 (6.307)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.88 (  0.88)	Loss_d 6.307 (6.307)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 6.307 (6.307)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.88 (  0.88)	Loss_d 6.307 (6.307)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.49 (  0.49)
Overall Timing[ 32/  1]	epoch_time 0.0431 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0427 (0.0417)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.990000042438507, 0.34200000762939453)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.65it/s] 19%|#9        | 5/26 [00:00<00:00, 22.29it/s] 35%|###4      | 9/26 [00:00<00:00, 27.64it/s] 50%|#####     | 13/26 [00:00<00:00, 30.76it/s] 65%|######5   | 17/26 [00:00<00:00, 32.72it/s] 81%|########  | 21/26 [00:00<00:00, 33.58it/s] 96%|#########6| 25/26 [00:00<00:00, 34.12it/s]100%|##########| 26/26 [00:00<00:00, 28.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 240000
penalty weights 0.0
Epoch: [33][  26/  26]	Loss 0.017 (0.028)	train_nll   0.02 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  33.05 ( 32.87)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 14.5284 (14.8418)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.06it/s] 23%|##3       | 6/26 [00:00<00:00, 30.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.20it/s] 42%|####2     | 11/26 [00:00<00:00, 35.96it/s] 62%|######1   | 16/26 [00:00<00:00, 37.55it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.55it/s] 81%|########  | 21/26 [00:00<00:00, 39.96it/s]100%|##########| 26/26 [00:00<00:00, 42.78it/s]100%|##########| 26/26 [00:00<00:00, 35.07it/s]
Test: [   0/  26]	Loss 0.012 (0.012)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.012)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.68)
Test: [  10/  26]	Loss 0.035 (0.023)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   0.99 (  1.00)	Loss_d 0.035 (0.023)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.68 (  0.71)
Test: [  20/  26]	Loss 0.016 (0.021)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.016 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.018)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.44it/s]
Test: [  0/  1]	Loss 5.628 (5.628)	test_acc   0.37 (  0.37)	test_minacc   0.32 (  0.32)	test_majacc   0.88 (  0.88)	Loss_d 5.628 (5.628)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 5.628 (5.628)	test_acc   0.37 (  0.37)	test_minacc   0.32 (  0.32)	test_majacc   0.88 (  0.88)	Loss_d 5.628 (5.628)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.44 (  0.44)
Overall Timing[ 33/  1]	epoch_time 0.0432 (0.0423)	validation_time 0.0005 (0.0006)	train_time 0.0428 (0.0417)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9939000433683396, 0.37300002574920654)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.03it/s] 19%|#9        | 5/26 [00:00<00:00, 22.22it/s] 35%|###4      | 9/26 [00:00<00:00, 26.89it/s] 50%|#####     | 13/26 [00:00<00:00, 29.52it/s] 65%|######5   | 17/26 [00:00<00:00, 31.84it/s] 81%|########  | 21/26 [00:00<00:00, 33.69it/s] 96%|#########6| 25/26 [00:00<00:00, 34.39it/s]100%|##########| 26/26 [00:00<00:00, 28.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 240000
penalty weights 0.0
Epoch: [34][  26/  26]	Loss 0.025 (0.022)	train_nll   0.03 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.40 ( 33.24)	train_acc   0.99 (  0.99)	train_minacc   0.97 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.9335 (14.6997)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.38it/s] 27%|##6       | 7/26 [00:00<00:00, 23.80it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.80it/s] 46%|####6     | 12/26 [00:00<00:00, 32.16it/s] 65%|######5   | 17/26 [00:00<00:00, 36.47it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.47it/s] 88%|########8 | 23/26 [00:00<00:00, 40.03it/s]100%|##########| 26/26 [00:00<00:00, 32.65it/s]
Test: [   0/  26]	Loss 0.022 (0.022)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.022 (0.022)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.038 (0.031)	test_acc   0.98 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.98 (  0.99)	Loss_d 0.038 (0.031)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.66 (  0.69)
Test: [  20/  26]	Loss 0.003 (0.023)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.023)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.003 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.52it/s]
Test: [  0/  1]	Loss 5.720 (5.720)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.92 (  0.92)	Loss_d 5.720 (5.720)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 5.720 (5.720)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.92 (  0.92)	Loss_d 5.720 (5.720)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.38 (  0.38)
Overall Timing[ 34/  1]	epoch_time 0.0453 (0.0424)	validation_time 0.0003 (0.0006)	train_time 0.0450 (0.0418)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9935000294446945, 0.4000000059604645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.02it/s] 12%|#1        | 3/26 [00:00<00:01, 12.69it/s] 27%|##6       | 7/26 [00:00<00:00, 22.51it/s] 42%|####2     | 11/26 [00:00<00:00, 27.40it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.08it/s] 88%|########8 | 23/26 [00:00<00:00, 33.24it/s]100%|##########| 26/26 [00:00<00:00, 27.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 240000
penalty weights 0.0
Epoch: [35][  26/  26]	Loss 0.032 (0.023)	train_nll   0.03 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.71 ( 33.56)	train_acc   0.99 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   0.99 (  1.00)	train_corr   0.00 (  0.00)	l1 14.9350 (15.0437)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.94it/s] 15%|#5        | 4/26 [00:00<00:01, 17.21it/s] 38%|###8      | 10/26 [00:00<00:00, 33.79it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.79it/s] 62%|######1   | 16/26 [00:00<00:00, 39.69it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.69it/s] 85%|########4 | 22/26 [00:00<00:00, 44.77it/s]100%|##########| 26/26 [00:00<00:00, 36.25it/s]
Test: [   0/  26]	Loss 0.025 (0.025)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.025 (0.025)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.023 (0.021)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   0.99 (  1.00)	Loss_d 0.023 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.67 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.018)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.002 (0.015)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.015)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.72it/s]
Test: [  0/  1]	Loss 5.815 (5.815)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.91 (  0.91)	Loss_d 5.815 (5.815)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 5.815 (5.815)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.91 (  0.91)	Loss_d 5.815 (5.815)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.41 (  0.41)
Overall Timing[ 35/  1]	epoch_time 0.0411 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0407 (0.0418)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9946000328660012, 0.3890000283718109)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.53it/s] 19%|#9        | 5/26 [00:00<00:01, 19.36it/s] 35%|###4      | 9/26 [00:00<00:00, 25.77it/s] 50%|#####     | 13/26 [00:00<00:00, 29.59it/s] 65%|######5   | 17/26 [00:00<00:00, 31.17it/s] 81%|########  | 21/26 [00:00<00:00, 31.57it/s] 96%|#########6| 25/26 [00:00<00:00, 32.59it/s]100%|##########| 26/26 [00:00<00:00, 26.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 240000
penalty weights 0.0
Epoch: [36][  26/  26]	Loss 0.004 (0.022)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.01 ( 33.86)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.8487 (14.9095)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.51it/s] 23%|##3       | 6/26 [00:00<00:00, 32.04it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.04it/s] 42%|####2     | 11/26 [00:00<00:00, 37.17it/s] 62%|######1   | 16/26 [00:00<00:00, 40.09it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.09it/s] 81%|########  | 21/26 [00:00<00:00, 37.70it/s]100%|##########| 26/26 [00:00<00:00, 40.53it/s]100%|##########| 26/26 [00:00<00:00, 34.79it/s]
Test: [   0/  26]	Loss 0.011 (0.011)	test_acc   1.00 (  1.00)	test_minacc   0.99 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.99 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.026 (0.034)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.94)	test_majacc   0.99 (  1.00)	Loss_d 0.026 (0.034)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.94)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.68 (  0.72)
Test: [  20/  26]	Loss 0.017 (0.030)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.017 (0.030)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.72)
Test: [  26/  26]	Loss 0.002 (0.026)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.026)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.27it/s]
Test: [  0/  1]	Loss 6.165 (6.165)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.93 (  0.93)	Loss_d 6.165 (6.165)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 6.165 (6.165)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.93 (  0.93)	Loss_d 6.165 (6.165)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.50 (  0.50)
Overall Timing[ 36/  1]	epoch_time 0.0400 (0.0423)	validation_time 0.0004 (0.0006)	train_time 0.0396 (0.0417)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9915000388622284, 0.3490000069141388)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.92it/s] 23%|##3       | 6/26 [00:00<00:00, 26.81it/s] 38%|###8      | 10/26 [00:00<00:00, 29.43it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.20it/s] 69%|######9   | 18/26 [00:00<00:00, 31.72it/s] 85%|########4 | 22/26 [00:00<00:00, 32.26it/s]100%|##########| 26/26 [00:00<00:00, 33.34it/s]100%|##########| 26/26 [00:00<00:00, 29.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 240000
penalty weights 0.0
Epoch: [37][  26/  26]	Loss 0.014 (0.017)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.27 ( 34.15)	train_acc   0.99 (  0.99)	train_minacc   0.95 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.0667 (14.9620)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.03it/s] 27%|##6       | 7/26 [00:00<00:00, 33.37it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.37it/s] 50%|#####     | 13/26 [00:00<00:00, 39.92it/s] 65%|######5   | 17/26 [00:00<00:00, 39.66it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.66it/s] 85%|########4 | 22/26 [00:00<00:00, 42.58it/s]100%|##########| 26/26 [00:00<00:00, 36.81it/s]
Test: [   0/  26]	Loss 0.010 (0.010)	test_acc   1.00 (  1.00)	test_minacc   0.99 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.99 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.014 (0.019)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.014 (0.019)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.68 (  0.69)
Test: [  20/  26]	Loss 0.008 (0.014)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.014)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.002 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.37it/s]
Test: [  0/  1]	Loss 5.698 (5.698)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 5.698 (5.698)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 5.698 (5.698)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 5.698 (5.698)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.35 (  0.35)
Overall Timing[ 37/  1]	epoch_time 0.0465 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0461 (0.0418)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9955000223517418, 0.41600000858306885)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.58it/s] 15%|#5        | 4/26 [00:00<00:01, 13.58it/s] 31%|###       | 8/26 [00:00<00:00, 21.02it/s] 46%|####6     | 12/26 [00:00<00:00, 25.58it/s] 65%|######5   | 17/26 [00:00<00:00, 30.65it/s] 85%|########4 | 22/26 [00:00<00:00, 34.00it/s]100%|##########| 26/26 [00:00<00:00, 34.42it/s]100%|##########| 26/26 [00:01<00:00, 25.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 240000
penalty weights 0.0
Epoch: [38][  26/  26]	Loss 0.027 (0.014)	train_nll   0.03 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  34.47 ( 34.38)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.4139 (15.3998)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.46it/s] 23%|##3       | 6/26 [00:00<00:00, 28.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.57it/s] 42%|####2     | 11/26 [00:00<00:00, 35.46it/s] 62%|######1   | 16/26 [00:00<00:00, 38.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.59it/s] 81%|########  | 21/26 [00:00<00:00, 38.65it/s]100%|##########| 26/26 [00:00<00:00, 34.45it/s]
Test: [   0/  26]	Loss 0.018 (0.018)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.018 (0.018)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.027 (0.025)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.027 (0.025)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.022)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.002 (0.022)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.30it/s]
Test: [  0/  1]	Loss 6.168 (6.168)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.91 (  0.91)	Loss_d 6.168 (6.168)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 6.168 (6.168)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.91 (  0.91)	Loss_d 6.168 (6.168)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.40 (  0.40)
Overall Timing[ 38/  1]	epoch_time 0.0465 (0.0425)	validation_time 0.0003 (0.0005)	train_time 0.0462 (0.0419)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9940000375509263, 0.3930000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.73it/s] 19%|#9        | 5/26 [00:00<00:01, 15.74it/s] 35%|###4      | 9/26 [00:00<00:00, 22.74it/s] 50%|#####     | 13/26 [00:00<00:00, 27.35it/s] 65%|######5   | 17/26 [00:00<00:00, 30.26it/s] 81%|########  | 21/26 [00:00<00:00, 32.30it/s] 96%|#########6| 25/26 [00:00<00:00, 33.54it/s]100%|##########| 26/26 [00:01<00:00, 25.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 240000
penalty weights 0.0
Epoch: [39][  26/  26]	Loss 0.003 (0.015)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.74 ( 34.62)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.2439 (15.1167)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 19%|#9        | 5/26 [00:00<00:00, 22.95it/s] 38%|###8      | 10/26 [00:00<00:00, 32.87it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.87it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.73it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 38.73it/s] 81%|########  | 21/26 [00:00<00:00, 40.46it/s]100%|##########| 26/26 [00:00<00:00, 34.35it/s]
Test: [   0/  26]	Loss 0.012 (0.012)	test_acc   1.00 (  1.00)	test_minacc   0.99 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.99 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.019 (0.020)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.019 (0.020)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  20/  26]	Loss 0.005 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.002 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.31it/s]
Test: [  0/  1]	Loss 6.018 (6.018)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.93 (  0.93)	Loss_d 6.018 (6.018)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 6.018 (6.018)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.93 (  0.93)	Loss_d 6.018 (6.018)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.40 (  0.40)
Overall Timing[ 39/  1]	epoch_time 0.0406 (0.0425)	validation_time 0.0004 (0.0005)	train_time 0.0402 (0.0419)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9957000293135643, 0.3920000195503235)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.52it/s] 19%|#9        | 5/26 [00:00<00:01, 20.70it/s] 35%|###4      | 9/26 [00:00<00:00, 26.94it/s] 50%|#####     | 13/26 [00:00<00:00, 30.36it/s] 65%|######5   | 17/26 [00:00<00:00, 32.22it/s] 81%|########  | 21/26 [00:00<00:00, 33.11it/s] 96%|#########6| 25/26 [00:00<00:00, 33.38it/s]100%|##########| 26/26 [00:00<00:00, 27.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 240000
penalty weights 0.0
Epoch: [40][  26/  26]	Loss 0.005 (0.012)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  34.92 ( 34.83)	train_acc   1.00 (  1.00)	train_minacc   0.97 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.9170 (15.7932)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 23%|##3       | 6/26 [00:00<00:00, 27.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.10it/s] 42%|####2     | 11/26 [00:00<00:00, 34.62it/s] 62%|######1   | 16/26 [00:00<00:00, 39.38it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.38it/s] 81%|########  | 21/26 [00:00<00:00, 38.67it/s]100%|##########| 26/26 [00:00<00:00, 41.38it/s]100%|##########| 26/26 [00:00<00:00, 33.62it/s]
Test: [   0/  26]	Loss 0.006 (0.006)	test_acc   1.00 (  1.00)	test_minacc   0.99 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.99 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.007 (0.012)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  20/  26]	Loss 0.005 (0.013)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.013)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.000 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.30it/s]
Test: [  0/  1]	Loss 6.190 (6.190)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.89 (  0.89)	Loss_d 6.190 (6.190)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 6.190 (6.190)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.89 (  0.89)	Loss_d 6.190 (6.190)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.36 (  0.36)
Overall Timing[ 40/  1]	epoch_time 0.0425 (0.0425)	validation_time 0.0004 (0.0005)	train_time 0.0421 (0.0419)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9963000316023827, 0.3970000147819519)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.59it/s] 15%|#5        | 4/26 [00:00<00:01, 14.61it/s] 31%|###       | 8/26 [00:00<00:00, 22.15it/s] 46%|####6     | 12/26 [00:00<00:00, 26.25it/s] 62%|######1   | 16/26 [00:00<00:00, 28.65it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.64it/s] 92%|#########2| 24/26 [00:00<00:00, 31.52it/s]100%|##########| 26/26 [00:01<00:00, 25.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 240000
penalty weights 0.0
Epoch: [41][  26/  26]	Loss 0.006 (0.007)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.09 ( 35.02)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.3441 (16.0356)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.07it/s] 27%|##6       | 7/26 [00:00<00:00, 20.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 20.19it/s] 46%|####6     | 12/26 [00:00<00:00, 28.96it/s] 65%|######5   | 17/26 [00:00<00:00, 34.17it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.17it/s] 85%|########4 | 22/26 [00:00<00:00, 38.31it/s]100%|##########| 26/26 [00:00<00:00, 28.86it/s]
Test: [   0/  26]	Loss 0.030 (0.030)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.030 (0.030)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.011 (0.014)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.014)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
Test: [  20/  26]	Loss 0.001 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.93it/s]
Test: [  0/  1]	Loss 6.415 (6.415)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 6.415 (6.415)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 6.415 (6.415)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 6.415 (6.415)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.35 (  0.35)
Overall Timing[ 41/  1]	epoch_time 0.0435 (0.0425)	validation_time 0.0004 (0.0005)	train_time 0.0431 (0.0419)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9966000257730484, 0.4180000126361847)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.93it/s] 19%|#9        | 5/26 [00:00<00:01, 15.62it/s] 35%|###4      | 9/26 [00:00<00:00, 22.53it/s] 50%|#####     | 13/26 [00:00<00:00, 26.35it/s] 65%|######5   | 17/26 [00:00<00:00, 29.06it/s] 81%|########  | 21/26 [00:00<00:00, 30.62it/s] 96%|#########6| 25/26 [00:00<00:00, 31.64it/s]100%|##########| 26/26 [00:01<00:00, 24.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 240000
penalty weights 0.0
Epoch: [42][  26/  26]	Loss 0.008 (0.011)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.32 ( 35.21)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.1060 (16.2648)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.60it/s] 27%|##6       | 7/26 [00:00<00:00, 35.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.36it/s] 50%|#####     | 13/26 [00:00<00:00, 39.17it/s] 69%|######9   | 18/26 [00:00<00:00, 42.19it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.19it/s] 88%|########8 | 23/26 [00:00<00:00, 43.15it/s]100%|##########| 26/26 [00:00<00:00, 37.22it/s]
Test: [   0/  26]	Loss 0.005 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.008 (0.009)	test_acc   0.99 (  1.00)	test_minacc   0.98 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.009)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.98 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.69)
Test: [  20/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.07it/s]
Test: [  0/  1]	Loss 6.245 (6.245)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.87 (  0.87)	Loss_d 6.245 (6.245)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 6.245 (6.245)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.87 (  0.87)	Loss_d 6.245 (6.245)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.34 (  0.34)
Overall Timing[ 42/  1]	epoch_time 0.0428 (0.0425)	validation_time 0.0003 (0.0005)	train_time 0.0425 (0.0419)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9985000175237656, 0.41100001335144043)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.23it/s] 15%|#5        | 4/26 [00:00<00:01, 15.70it/s] 31%|###       | 8/26 [00:00<00:00, 23.81it/s] 46%|####6     | 12/26 [00:00<00:00, 28.25it/s] 62%|######1   | 16/26 [00:00<00:00, 30.39it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.97it/s] 92%|#########2| 24/26 [00:00<00:00, 33.33it/s]100%|##########| 26/26 [00:00<00:00, 27.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 240000
penalty weights 0.0
Epoch: [43][  26/  26]	Loss 0.001 (0.009)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.54 ( 35.43)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.3754 (16.2566)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.91it/s] 23%|##3       | 6/26 [00:00<00:00, 22.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.99it/s] 42%|####2     | 11/26 [00:00<00:00, 31.70it/s] 62%|######1   | 16/26 [00:00<00:00, 37.66it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.66it/s] 81%|########  | 21/26 [00:00<00:00, 37.59it/s]100%|##########| 26/26 [00:00<00:00, 41.13it/s]100%|##########| 26/26 [00:00<00:00, 31.82it/s]
Test: [   0/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.008 (0.010)	test_acc   0.99 (  1.00)	test_minacc   0.98 (  0.99)	test_majacc   0.99 (  1.00)	Loss_d 0.008 (0.010)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.98 (  0.99)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.67 (  0.70)
Test: [  20/  26]	Loss 0.006 (0.008)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.31it/s]
Test: [  0/  1]	Loss 6.264 (6.264)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 6.264 (6.264)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 6.264 (6.264)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 6.264 (6.264)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.33 (  0.33)
Overall Timing[ 43/  1]	epoch_time 0.0395 (0.0424)	validation_time 0.0005 (0.0005)	train_time 0.0390 (0.0419)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9976000233888626, 0.4180000126361847)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.72it/s] 19%|#9        | 5/26 [00:00<00:01, 17.84it/s] 35%|###4      | 9/26 [00:00<00:00, 24.66it/s] 50%|#####     | 13/26 [00:00<00:00, 28.04it/s] 65%|######5   | 17/26 [00:00<00:00, 30.31it/s] 81%|########  | 21/26 [00:00<00:00, 31.97it/s] 96%|#########6| 25/26 [00:00<00:00, 32.79it/s]100%|##########| 26/26 [00:00<00:00, 26.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 240000
penalty weights 0.0
Epoch: [44][  26/  26]	Loss 0.006 (0.008)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.74 ( 35.64)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.6473 (16.5344)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.09it/s] 23%|##3       | 6/26 [00:00<00:00, 31.76it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.76it/s] 42%|####2     | 11/26 [00:00<00:00, 38.33it/s] 62%|######1   | 16/26 [00:00<00:00, 38.75it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.75it/s] 81%|########  | 21/26 [00:00<00:00, 40.11it/s]100%|##########| 26/26 [00:00<00:00, 42.68it/s]100%|##########| 26/26 [00:00<00:00, 35.48it/s]
Test: [   0/  26]	Loss 0.021 (0.021)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.021 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.004 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.69)
Test: [  20/  26]	Loss 0.001 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.69)
Test: [  26/  26]	Loss 0.001 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.13it/s]
Test: [  0/  1]	Loss 6.374 (6.374)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 6.374 (6.374)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 6.374 (6.374)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 6.374 (6.374)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.32 (  0.32)
Overall Timing[ 44/  1]	epoch_time 0.0416 (0.0424)	validation_time 0.0003 (0.0005)	train_time 0.0412 (0.0418)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9971000269055367, 0.4240000247955322)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 19%|#9        | 5/26 [00:00<00:00, 22.90it/s] 35%|###4      | 9/26 [00:00<00:00, 27.78it/s] 50%|#####     | 13/26 [00:00<00:00, 29.26it/s] 65%|######5   | 17/26 [00:00<00:00, 30.91it/s] 81%|########  | 21/26 [00:00<00:00, 32.54it/s] 96%|#########6| 25/26 [00:00<00:00, 33.31it/s]100%|##########| 26/26 [00:00<00:00, 28.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 240000
penalty weights 0.0
Epoch: [45][  26/  26]	Loss 0.001 (0.013)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.03 ( 35.88)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.2282 (16.5201)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.68it/s] 15%|#5        | 4/26 [00:00<00:01, 19.12it/s] 35%|###4      | 9/26 [00:00<00:00, 31.13it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.13it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.70it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.70it/s] 92%|#########2| 24/26 [00:00<00:00, 40.28it/s]100%|##########| 26/26 [00:00<00:00, 34.11it/s]
Test: [   0/  26]	Loss 0.010 (0.010)	test_acc   0.99 (  0.99)	test_minacc   0.99 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.010)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.99 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.009 (0.015)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   0.99 (  1.00)	Loss_d 0.009 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.67 (  0.70)
Test: [  20/  26]	Loss 0.003 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.07it/s]
Test: [  0/  1]	Loss 6.057 (6.057)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.91 (  0.91)	Loss_d 6.057 (6.057)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 6.057 (6.057)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.91 (  0.91)	Loss_d 6.057 (6.057)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.33 (  0.33)
Overall Timing[ 45/  1]	epoch_time 0.0425 (0.0424)	validation_time 0.0003 (0.0005)	train_time 0.0422 (0.0419)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.996000037431717, 0.4240000247955322)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.38it/s] 23%|##3       | 6/26 [00:00<00:00, 27.68it/s] 38%|###8      | 10/26 [00:00<00:00, 30.67it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.17it/s] 69%|######9   | 18/26 [00:00<00:00, 32.71it/s] 85%|########4 | 22/26 [00:00<00:00, 34.05it/s]100%|##########| 26/26 [00:00<00:00, 34.92it/s]100%|##########| 26/26 [00:00<00:00, 30.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 240000
penalty weights 0.0
Epoch: [46][  26/  26]	Loss 0.004 (0.010)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.31 ( 36.18)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.2229 (16.1348)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.61it/s] 23%|##3       | 6/26 [00:00<00:00, 25.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.18it/s] 42%|####2     | 11/26 [00:00<00:00, 33.39it/s] 62%|######1   | 16/26 [00:00<00:00, 38.96it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.96it/s] 81%|########  | 21/26 [00:00<00:00, 38.22it/s]100%|##########| 26/26 [00:00<00:00, 33.21it/s]
Test: [   0/  26]	Loss 0.008 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.014 (0.010)	test_acc   0.99 (  1.00)	test_minacc   0.98 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.014 (0.010)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.98 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.69)
Test: [  20/  26]	Loss 0.003 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.69)
Test: [  26/  26]	Loss 0.001 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.70it/s]
Test: [  0/  1]	Loss 6.092 (6.092)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.90 (  0.90)	Loss_d 6.092 (6.092)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 6.092 (6.092)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.90 (  0.90)	Loss_d 6.092 (6.092)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.33 (  0.33)
Overall Timing[ 46/  1]	epoch_time 0.0403 (0.0424)	validation_time 0.0004 (0.0005)	train_time 0.0400 (0.0418)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9970000257492065, 0.42900002002716064)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.87it/s] 23%|##3       | 6/26 [00:00<00:00, 26.39it/s] 38%|###8      | 10/26 [00:00<00:00, 29.97it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.07it/s] 69%|######9   | 18/26 [00:00<00:00, 32.93it/s] 85%|########4 | 22/26 [00:00<00:00, 34.11it/s]100%|##########| 26/26 [00:00<00:00, 34.14it/s]100%|##########| 26/26 [00:00<00:00, 29.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 240000
penalty weights 0.0
Epoch: [47][  26/  26]	Loss 0.003 (0.010)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.55 ( 36.43)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.4272 (16.3625)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.59it/s] 31%|###       | 8/26 [00:00<00:00, 39.13it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.13it/s] 50%|#####     | 13/26 [00:00<00:00, 42.14it/s] 69%|######9   | 18/26 [00:00<00:00, 41.08it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.08it/s] 88%|########8 | 23/26 [00:00<00:00, 42.17it/s]100%|##########| 26/26 [00:00<00:00, 38.82it/s]
Test: [   0/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.67)
Test: [  10/  26]	Loss 0.003 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
Test: [  20/  26]	Loss 0.000 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.99it/s]
Test: [  0/  1]	Loss 6.843 (6.843)	test_acc   0.37 (  0.37)	test_minacc   0.32 (  0.32)	test_majacc   0.90 (  0.90)	Loss_d 6.843 (6.843)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 6.843 (6.843)	test_acc   0.37 (  0.37)	test_minacc   0.32 (  0.32)	test_majacc   0.90 (  0.90)	Loss_d 6.843 (6.843)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.43 (  0.43)
Overall Timing[ 47/  1]	epoch_time 0.0412 (0.0424)	validation_time 0.0004 (0.0005)	train_time 0.0408 (0.0418)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9989000105261803, 0.37400001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.65it/s] 15%|#5        | 4/26 [00:00<00:01, 17.34it/s] 27%|##6       | 7/26 [00:00<00:00, 22.14it/s] 42%|####2     | 11/26 [00:00<00:00, 26.59it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.34it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.15it/s] 88%|########8 | 23/26 [00:00<00:00, 32.54it/s]100%|##########| 26/26 [00:00<00:00, 26.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 240000
penalty weights 0.0
Epoch: [48][  26/  26]	Loss 0.003 (0.010)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.79 ( 36.68)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.6304 (16.5206)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.80it/s] 27%|##6       | 7/26 [00:00<00:00, 33.29it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.29it/s] 42%|####2     | 11/26 [00:00<00:00, 33.49it/s] 62%|######1   | 16/26 [00:00<00:00, 37.80it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.80it/s] 81%|########  | 21/26 [00:00<00:00, 40.62it/s]100%|##########| 26/26 [00:00<00:00, 42.31it/s]100%|##########| 26/26 [00:00<00:00, 35.29it/s]
Test: [   0/  26]	Loss 0.004 (0.004)	test_acc   1.00 (  1.00)	test_minacc   0.99 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.99 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.000 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.69)
Test: [  20/  26]	Loss 0.001 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.82it/s]
Test: [  0/  1]	Loss 6.423 (6.423)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.88 (  0.88)	Loss_d 6.423 (6.423)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 6.423 (6.423)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.88 (  0.88)	Loss_d 6.423 (6.423)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.31 (  0.31)
Overall Timing[ 48/  1]	epoch_time 0.0467 (0.0424)	validation_time 0.0004 (0.0005)	train_time 0.0464 (0.0419)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9985000175237656, 0.4280000329017639)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.12it/s] 15%|#5        | 4/26 [00:00<00:01, 14.43it/s] 31%|###       | 8/26 [00:00<00:00, 22.03it/s] 46%|####6     | 12/26 [00:00<00:00, 26.28it/s] 62%|######1   | 16/26 [00:00<00:00, 28.32it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.64it/s] 92%|#########2| 24/26 [00:00<00:00, 31.05it/s]100%|##########| 26/26 [00:01<00:00, 25.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 240000
penalty weights 0.0
Epoch: [49][  26/  26]	Loss 0.001 (0.012)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  37.08 ( 36.93)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.4398 (16.5200)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.77it/s] 23%|##3       | 6/26 [00:00<00:01, 15.88it/s]                                               23%|##3       | 6/26 [00:00<00:01, 15.88it/s] 42%|####2     | 11/26 [00:00<00:00, 24.64it/s] 62%|######1   | 16/26 [00:00<00:00, 31.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 31.58it/s] 81%|########  | 21/26 [00:00<00:00, 33.19it/s]100%|##########| 26/26 [00:00<00:00, 37.18it/s]100%|##########| 26/26 [00:00<00:00, 26.31it/s]
Test: [   0/  26]	Loss 0.005 (0.005)	test_acc   1.00 (  1.00)	test_minacc   0.99 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.99 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.66)
Test: [  10/  26]	Loss 0.002 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.18it/s]
Test: [  0/  1]	Loss 6.588 (6.588)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.85 (  0.85)	Loss_d 6.588 (6.588)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 6.588 (6.588)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.85 (  0.85)	Loss_d 6.588 (6.588)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.38 (  0.38)
Overall Timing[ 49/  1]	epoch_time 0.0445 (0.0425)	validation_time 0.0004 (0.0005)	train_time 0.0442 (0.0419)
record: (train_acc, test_acc) (0.9424000150561332, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9986000163555145, 0.3890000283718109)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.167 MB of 0.167 MB uploadedwandb: \ 0.167 MB of 0.167 MB uploadedwandb: | 0.167 MB of 0.167 MB uploadedwandb: / 0.037 MB of 0.472 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/diagnostics/epoch_time_val █▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▂▂▂▂▂▃▃▂▂▂▂▂▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/diagnostics/train_time_val █▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▂▂▂▂▂▂▃▃▂▂▂▂▂▂▂▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/Loss_avg ▁▁▁▁▁▁▁▁▂▂▂▂▂▃▃▃▄▄▅▆▅▅▅▆▆▇▇▆▇▇▆▇▇▇▇▇▇▇██
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/Loss_d_avg ▁▁▁▁▁▁▁▁▂▂▂▂▂▃▃▃▄▄▅▆▅▅▅▆▆▇▇▆▇▇▆▇▇▇▇▇▇▇██
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/Loss_d_val ▁▁▁▁▁▁▁▁▂▂▂▂▂▃▃▃▄▄▅▆▅▅▅▆▆▇▇▆▇▇▆▇▇▇▇▇▇▇██
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/Loss_val ▁▁▁▁▁▁▁▁▂▂▂▂▂▃▃▃▄▄▅▆▅▅▅▆▆▇▇▆▇▇▆▇▇▇▇▇▇▇██
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_acc_avg ▁▁▂▃▆▆▆▇▆▆▇▇▇▆██▅▆▅▅▆▇▆▆▆▆▅▆▆▅▇▆▆▇▇▇▇▇▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_acc_d_avg ▁▁▂▃▆▆▆▇▆▆▇▇▇▆██▅▆▅▅▆▇▆▆▆▆▅▆▆▅▇▆▆▇▇▇▇▇▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_acc_d_val ▁▁▂▃▆▆▆▇▆▆▇▇▇▆██▅▆▅▅▆▇▆▆▆▆▅▆▆▅▇▆▆▇▇▇▇▇▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_acc_val ▁▁▂▃▆▆▆▇▆▆▇▇▇▆██▅▆▅▅▆▇▆▆▆▆▅▆▆▅▇▆▆▇▇▇▇▇▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_corr_d_avg ██▇▆▅▅▅▄▅▄▃▃▃▃▁▁▄▄▅▄▃▂▂▃▃▃▄▃▃▄▂▃▂▂▂▂▂▂▃▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_corr_d_val ██▇▆▅▅▅▄▅▄▃▃▃▃▁▁▄▄▅▄▃▂▂▃▃▃▄▃▃▄▂▃▂▂▂▂▂▂▃▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_majacc_avg ███▇▆▇▅▅▅▅▇▃▄▃▂▃▄▅▅▅▆▃▃▄▄▅▂▂▄▅▃▄▃▃▂▃▄▃▃▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_majacc_d_avg ███▇▆▇▅▅▅▅▇▃▄▃▂▃▄▅▅▅▆▃▃▄▄▅▂▂▄▅▃▄▃▃▂▃▄▃▃▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_majacc_d_val ███▇▆▇▅▅▅▅▇▃▄▃▂▃▄▅▅▅▆▃▃▄▄▅▂▂▄▅▃▄▃▃▂▃▄▃▃▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_majacc_val ███▇▆▇▅▅▅▅▇▃▄▃▂▃▄▅▅▅▆▃▃▄▄▅▂▂▄▅▃▄▃▃▂▃▄▃▃▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_minacc_avg ▁▁▂▃▆▅▆▇▆▆▇▇▇▆██▅▆▅▅▆▇▆▆▆▆▅▆▆▅▇▆▆▇▇▇▇▇▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_minacc_d_avg ▁▁▂▃▆▅▆▇▆▆▇▇▇▆██▅▆▅▅▆▇▆▆▆▆▅▆▆▅▇▆▆▇▇▇▇▇▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_minacc_d_val ▁▁▂▃▆▅▆▇▆▆▇▇▇▆██▅▆▅▅▆▇▆▆▆▆▅▆▆▅▇▆▆▇▇▇▇▇▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_minacc_val ▁▁▂▃▆▅▆▇▆▆▇▇▇▆██▅▆▅▅▆▇▆▆▆▆▅▆▆▅▇▆▆▇▇▇▇▇▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/Loss_avg █▆▆▆▅▅▅▅▅▄▄▄▃▃▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/Loss_val ██▇▆▅▅▅▅▅▄▄▄▃▃▂▂▂▂▁▁▁▂▁▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/l1_avg ▂▁▁▁▁▁▁▁▁▁▂▂▂▂▃▃▃▄▄▅▅▆▆▆▆▆▇▇▇▇▇▇▇███████
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/l1_val ▁▁▁▁▁▁▁▁▂▁▂▂▂▃▃▄▄▄▄▅▆▅▆▆▆▇▇▇▇▇▇▇████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_acc_avg ▁▂▂▂▃▃▃▃▄▄▄▅▅▆▆▆▆▆▇▇▇▇██████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_acc_val ▁▁▁▂▂▂▃▄▄▅▆▅▆▆███▇████████▇█▇███████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_majacc_avg ▂█▇▅▂▂▁▁▁▁▁▂▃▄▄▄▅▅▆▇▇▇▇█▇██▇████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_majacc_val ▇█▇▆▁▃▃▂▅▅▅▄▅▅▇▇█▇███▇▇███▇▇▆██▇██▇██▇██
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_minacc_avg ▁▁▁▂▃▃▄▄▅▅▅▆▆▆▆▇▇▇▇█████████████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_minacc_val ▁▁▁▂▄▃▅▆▅▆▇▆▇▇███▇████████▇█████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_nll_avg █▆▆▆▅▅▅▅▅▄▄▄▃▃▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_nll_val ██▇▆▅▅▅▅▅▄▄▄▃▃▂▂▂▂▁▁▁▂▁▁▁▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_penalty_avg █▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_penalty_val █▆▅▃▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/weight_norm_avg ▁▂▂▃▃▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇▇▇████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/weight_norm_val ▁▁▂▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇▇████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/diagnostics/epoch_time_val 0.04454
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/diagnostics/train_time_val 0.04416
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/diagnostics/validation_time_val 0.00036
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/Loss_avg 6.58768
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/Loss_d_avg 6.58768
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/Loss_d_val 6.58768
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/Loss_val 6.58768
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_acc_avg 0.389
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_acc_d_avg 0.389
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_acc_d_val 0.389
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_acc_val 0.389
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_corr_d_avg 0.37863
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_corr_d_val 0.37863
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_majacc_avg 0.85
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_majacc_d_avg 0.85
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_majacc_d_val 0.85
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_majacc_val 0.85
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_minacc_avg 0.33778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_minacc_d_avg 0.33778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_minacc_d_val 0.33778
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/test/test_minacc_val 0.33778
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/Loss_avg 0.01162
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/Loss_val 0.00142
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/l1_avg 16.51997
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/l1_val 16.43984
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_acc_avg 0.9959
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_acc_val 1.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_majacc_avg 0.99766
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_majacc_val 1.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_minacc_avg 0.9862
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_minacc_val 1.0
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_nll_avg 0.01162
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_nll_val 0.00142
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_penalty_avg 0.00013
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/train_penalty_val 3e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/weight_norm_avg 36.9349
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/weight_norm_val 37.07687
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/116/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/6917m4r7
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_191447-6917m4r7/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_191739-whvmotn8
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/whvmotn8
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=240000, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Conv2d(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1165
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6037, 3, 32, 32) (5963, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:40,  1.62s/it] 19%|#9        | 5/26 [00:01<00:05,  3.77it/s] 35%|###4      | 9/26 [00:01<00:02,  7.44it/s] 46%|####6     | 12/26 [00:01<00:01,  9.92it/s] 62%|######1   | 16/26 [00:02<00:00, 13.93it/s] 77%|#######6  | 20/26 [00:02<00:00, 17.85it/s] 92%|#########2| 24/26 [00:02<00:00, 21.35it/s]100%|##########| 26/26 [00:02<00:00,  9.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 240000
penalty weights 0.0
Epoch: [0][  26/  26]	Loss 0.407 (0.559)	train_nll   0.41 (  0.56)	train_penalty   0.04 (  0.24)	weight_norm  20.94 ( 18.16)	train_acc   0.86 (  0.80)	train_minacc   0.08 (  0.07)	train_majacc   0.99 (  0.93)	train_corr   0.00 (  0.00)	l1 6.9739 (7.3478)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.85it/s] 23%|##3       | 6/26 [00:00<00:00, 22.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.72it/s] 42%|####2     | 11/26 [00:00<00:00, 30.65it/s] 62%|######1   | 16/26 [00:00<00:00, 35.94it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.94it/s] 81%|########  | 21/26 [00:00<00:00, 36.26it/s]100%|##########| 26/26 [00:00<00:00, 39.72it/s]100%|##########| 26/26 [00:00<00:00, 30.85it/s]
Test: [   0/  26]	Loss 0.409 (0.409)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.409 (0.409)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.448 (0.407)	test_acc   0.82 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.448 (0.407)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.97)
Test: [  20/  26]	Loss 0.463 (0.414)	test_acc   0.81 (  0.84)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.463 (0.414)	test_acc_d   0.81 (  0.84)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.96)
Test: [  26/  26]	Loss 0.372 (0.413)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.372 (0.413)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.50it/s]100%|##########| 1/1 [00:00<00:00,  2.50it/s]
Test: [  0/  1]	Loss 1.651 (1.651)	test_acc   0.11 (  0.11)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.651 (1.651)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.651 (1.651)	test_acc   0.11 (  0.11)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.651 (1.651)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0821 (0.0821)	validation_time 0.0068 (0.0068)	train_time 0.0731 (0.0731)
record: (train_acc, test_acc) (0.8454000255465508, 0.11400000751018524)
last accs (train_acc, test_acc) (0.8454000255465508, 0.11400000751018524)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.10it/s] 19%|#9        | 5/26 [00:00<00:00, 22.04it/s] 35%|###4      | 9/26 [00:00<00:00, 26.90it/s] 50%|#####     | 13/26 [00:00<00:00, 29.71it/s] 65%|######5   | 17/26 [00:00<00:00, 31.17it/s] 81%|########  | 21/26 [00:00<00:00, 31.98it/s] 96%|#########6| 25/26 [00:00<00:00, 32.26it/s]100%|##########| 26/26 [00:00<00:00, 27.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 240000
penalty weights 0.0
Epoch: [1][  26/  26]	Loss 0.371 (0.412)	train_nll   0.37 (  0.41)	train_penalty   0.04 (  0.06)	weight_norm  22.05 ( 21.71)	train_acc   0.86 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 7.2622 (7.1470)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.61it/s] 23%|##3       | 6/26 [00:00<00:00, 22.44it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.44it/s] 42%|####2     | 11/26 [00:00<00:00, 31.25it/s] 65%|######5   | 17/26 [00:00<00:00, 36.69it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.69it/s] 85%|########4 | 22/26 [00:00<00:00, 39.29it/s]100%|##########| 26/26 [00:00<00:00, 31.33it/s]
Test: [   0/  26]	Loss 0.410 (0.410)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.410 (0.410)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.430 (0.394)	test_acc   0.83 (  0.85)	test_minacc   0.01 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.430 (0.394)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.01 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.468 (0.402)	test_acc   0.81 (  0.85)	test_minacc   0.01 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.468 (0.402)	test_acc_d   0.81 (  0.85)	test_minacc_d   0.01 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.356 (0.400)	test_acc   0.85 (  0.85)	test_minacc   0.03 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.356 (0.400)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.03 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.82it/s]
Test: [  0/  1]	Loss 1.805 (1.805)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.805 (1.805)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.805 (1.805)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.805 (1.805)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0430 (0.0625)	validation_time 0.0004 (0.0036)	train_time 0.0425 (0.0578)
record: (train_acc, test_acc) (0.8482000277042389, 0.12000000476837158)
last accs (train_acc, test_acc) (0.8482000277042389, 0.12000000476837158)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 13.96it/s] 27%|##6       | 7/26 [00:00<00:00, 22.68it/s] 42%|####2     | 11/26 [00:00<00:00, 27.69it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.22it/s] 92%|#########2| 24/26 [00:00<00:00, 35.59it/s]100%|##########| 26/26 [00:00<00:00, 28.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 240000
penalty weights 0.0
Epoch: [2][  26/  26]	Loss 0.347 (0.396)	train_nll   0.35 (  0.40)	train_penalty   0.04 (  0.05)	weight_norm  22.17 ( 22.13)	train_acc   0.86 (  0.85)	train_minacc   0.03 (  0.05)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 7.1169 (7.1910)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.08it/s] 23%|##3       | 6/26 [00:00<00:00, 26.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.51it/s] 42%|####2     | 11/26 [00:00<00:00, 34.42it/s] 62%|######1   | 16/26 [00:00<00:00, 39.24it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.24it/s] 81%|########  | 21/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 43.56it/s]100%|##########| 26/26 [00:00<00:00, 34.50it/s]
Test: [   0/  26]	Loss 0.381 (0.381)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.381 (0.381)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.421 (0.373)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.421 (0.373)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.438 (0.381)	test_acc   0.82 (  0.85)	test_minacc   0.05 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.438 (0.381)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.05 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.339 (0.379)	test_acc   0.86 (  0.85)	test_minacc   0.03 (  0.04)	test_majacc   1.00 (  0.99)	Loss_d 0.339 (0.379)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.03 (  0.04)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.16it/s]
Test: [  0/  1]	Loss 1.849 (1.849)	test_acc   0.13 (  0.13)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 1.849 (1.849)	test_acc_d   0.13 (  0.13)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
Test: [  1/  1]	Loss 1.849 (1.849)	test_acc   0.13 (  0.13)	test_minacc   0.03 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 1.849 (1.849)	test_acc_d   0.13 (  0.13)	test_minacc_d   0.03 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.93 (  0.93)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0426 (0.0559)	validation_time 0.0003 (0.0025)	train_time 0.0422 (0.0526)
record: (train_acc, test_acc) (0.849900023162365, 0.12800000607967377)
last accs (train_acc, test_acc) (0.849900023162365, 0.12800000607967377)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 19.12it/s] 27%|##6       | 7/26 [00:00<00:00, 27.09it/s] 42%|####2     | 11/26 [00:00<00:00, 30.89it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.41it/s] 88%|########8 | 23/26 [00:00<00:00, 33.92it/s]100%|##########| 26/26 [00:00<00:00, 29.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 240000
penalty weights 0.0
Epoch: [3][  26/  26]	Loss 0.326 (0.374)	train_nll   0.33 (  0.37)	train_penalty   0.03 (  0.04)	weight_norm  22.23 ( 22.20)	train_acc   0.86 (  0.85)	train_minacc   0.03 (  0.11)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 6.9584 (7.0139)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.82it/s] 23%|##3       | 6/26 [00:00<00:00, 28.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.75it/s] 42%|####2     | 11/26 [00:00<00:00, 35.95it/s] 62%|######1   | 16/26 [00:00<00:00, 39.67it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.67it/s] 81%|########  | 21/26 [00:00<00:00, 38.46it/s]100%|##########| 26/26 [00:00<00:00, 41.38it/s]100%|##########| 26/26 [00:00<00:00, 32.65it/s]
Test: [   0/  26]	Loss 0.342 (0.342)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.342 (0.342)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.408 (0.345)	test_acc   0.82 (  0.86)	test_minacc   0.00 (  0.06)	test_majacc   0.99 (  0.99)	Loss_d 0.408 (0.345)	test_acc_d   0.82 (  0.86)	test_minacc_d   0.00 (  0.06)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.412 (0.355)	test_acc   0.82 (  0.85)	test_minacc   0.05 (  0.07)	test_majacc   1.00 (  0.99)	Loss_d 0.412 (0.355)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.05 (  0.07)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.316 (0.355)	test_acc   0.86 (  0.85)	test_minacc   0.03 (  0.07)	test_majacc   1.00 (  0.99)	Loss_d 0.316 (0.355)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.03 (  0.07)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.28it/s]
Test: [  0/  1]	Loss 1.774 (1.774)	test_acc   0.15 (  0.15)	test_minacc   0.05 (  0.05)	test_majacc   1.00 (  1.00)	Loss_d 1.774 (1.774)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.05 (  0.05)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.91)
Test: [  1/  1]	Loss 1.774 (1.774)	test_acc   0.15 (  0.15)	test_minacc   0.05 (  0.05)	test_majacc   1.00 (  1.00)	Loss_d 1.774 (1.774)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.05 (  0.05)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.91 (  0.91)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0406 (0.0521)	validation_time 0.0004 (0.0020)	train_time 0.0401 (0.0495)
record: (train_acc, test_acc) (0.8528000218272209, 0.14500001072883606)
last accs (train_acc, test_acc) (0.8528000218272209, 0.14500001072883606)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.15it/s] 19%|#9        | 5/26 [00:00<00:01, 15.74it/s] 35%|###4      | 9/26 [00:00<00:00, 22.23it/s] 50%|#####     | 13/26 [00:00<00:00, 26.53it/s] 65%|######5   | 17/26 [00:00<00:00, 28.72it/s] 81%|########  | 21/26 [00:00<00:00, 30.77it/s] 96%|#########6| 25/26 [00:00<00:00, 32.46it/s]100%|##########| 26/26 [00:01<00:00, 25.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 240000
penalty weights 0.0
Epoch: [4][  26/  26]	Loss 0.310 (0.344)	train_nll   0.31 (  0.34)	train_penalty   0.02 (  0.03)	weight_norm  22.30 ( 22.27)	train_acc   0.87 (  0.86)	train_minacc   0.14 (  0.21)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 6.7936 (7.0047)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.64it/s] 23%|##3       | 6/26 [00:00<00:00, 25.76it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.76it/s] 42%|####2     | 11/26 [00:00<00:00, 33.67it/s] 62%|######1   | 16/26 [00:00<00:00, 38.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.63it/s] 81%|########  | 21/26 [00:00<00:00, 40.78it/s]100%|##########| 26/26 [00:00<00:00, 43.02it/s]100%|##########| 26/26 [00:00<00:00, 34.86it/s]
Test: [   0/  26]	Loss 0.326 (0.326)	test_acc   0.86 (  0.86)	test_minacc   0.17 (  0.17)	test_majacc   0.98 (  0.98)	Loss_d 0.326 (0.326)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.17 (  0.17)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.366 (0.310)	test_acc   0.84 (  0.86)	test_minacc   0.12 (  0.15)	test_majacc   0.98 (  0.99)	Loss_d 0.366 (0.310)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.12 (  0.15)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.373 (0.320)	test_acc   0.84 (  0.86)	test_minacc   0.16 (  0.14)	test_majacc   1.00 (  0.99)	Loss_d 0.373 (0.320)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.16 (  0.14)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.302 (0.321)	test_acc   0.86 (  0.86)	test_minacc   0.06 (  0.14)	test_majacc   1.00 (  0.99)	Loss_d 0.302 (0.321)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.06 (  0.14)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.94 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.91it/s]
Test: [  0/  1]	Loss 1.628 (1.628)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 1.628 (1.628)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.82 (  0.82)
Test: [  1/  1]	Loss 1.628 (1.628)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 1.628 (1.628)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.82 (  0.82)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0395 (0.0495)	validation_time 0.0006 (0.0017)	train_time 0.0389 (0.0474)
record: (train_acc, test_acc) (0.8599000224471092, 0.1980000138282776)
last accs (train_acc, test_acc) (0.8599000224471092, 0.1980000138282776)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.48it/s] 15%|#5        | 4/26 [00:00<00:01, 13.81it/s] 31%|###       | 8/26 [00:00<00:00, 21.68it/s] 46%|####6     | 12/26 [00:00<00:00, 26.30it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.06it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.86it/s] 88%|########8 | 23/26 [00:00<00:00, 31.92it/s]100%|##########| 26/26 [00:01<00:00, 25.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 240000
penalty weights 0.0
Epoch: [5][  26/  26]	Loss 0.292 (0.331)	train_nll   0.29 (  0.33)	train_penalty   0.02 (  0.02)	weight_norm  22.37 ( 22.33)	train_acc   0.87 (  0.86)	train_minacc   0.19 (  0.25)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 6.7282 (6.9697)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.38it/s] 27%|##6       | 7/26 [00:00<00:00, 34.01it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.01it/s] 46%|####6     | 12/26 [00:00<00:00, 39.86it/s] 65%|######5   | 17/26 [00:00<00:00, 39.60it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.60it/s] 85%|########4 | 22/26 [00:00<00:00, 40.53it/s]100%|##########| 26/26 [00:00<00:00, 37.61it/s]
Test: [   0/  26]	Loss 0.306 (0.306)	test_acc   0.87 (  0.87)	test_minacc   0.21 (  0.21)	test_majacc   0.99 (  0.99)	Loss_d 0.306 (0.306)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.357 (0.302)	test_acc   0.84 (  0.87)	test_minacc   0.13 (  0.17)	test_majacc   0.99 (  0.99)	Loss_d 0.357 (0.302)	test_acc_d   0.84 (  0.87)	test_minacc_d   0.13 (  0.17)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  20/  26]	Loss 0.362 (0.311)	test_acc   0.85 (  0.87)	test_minacc   0.22 (  0.17)	test_majacc   1.00 (  0.99)	Loss_d 0.362 (0.311)	test_acc_d   0.85 (  0.87)	test_minacc_d   0.22 (  0.17)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.279 (0.313)	test_acc   0.86 (  0.86)	test_minacc   0.11 (  0.17)	test_majacc   0.99 (  0.99)	Loss_d 0.279 (0.313)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.11 (  0.17)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.39it/s]
Test: [  0/  1]	Loss 1.644 (1.644)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   1.00 (  1.00)	Loss_d 1.644 (1.644)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.644 (1.644)	test_acc   0.23 (  0.23)	test_minacc   0.14 (  0.14)	test_majacc   1.00 (  1.00)	Loss_d 1.644 (1.644)	test_acc_d   0.23 (  0.23)	test_minacc_d   0.14 (  0.14)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0433 (0.0485)	validation_time 0.0004 (0.0015)	train_time 0.0428 (0.0466)
record: (train_acc, test_acc) (0.8639000259041786, 0.22600001096725464)
last accs (train_acc, test_acc) (0.8639000259041786, 0.22600001096725464)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.66it/s]  8%|7         | 2/26 [00:00<00:04,  5.90it/s] 23%|##3       | 6/26 [00:00<00:01, 16.15it/s] 38%|###8      | 10/26 [00:00<00:00, 22.26it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.22it/s] 69%|######9   | 18/26 [00:00<00:00, 29.00it/s] 85%|########4 | 22/26 [00:00<00:00, 30.97it/s]100%|##########| 26/26 [00:01<00:00, 32.45it/s]100%|##########| 26/26 [00:01<00:00, 24.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 240000
penalty weights 0.0
Epoch: [6][  26/  26]	Loss 0.305 (0.316)	train_nll   0.31 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.45 ( 22.41)	train_acc   0.86 (  0.86)	train_minacc   0.28 (  0.33)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 6.8264 (7.0100)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 15%|#5        | 4/26 [00:00<00:01, 17.39it/s] 35%|###4      | 9/26 [00:00<00:00, 29.19it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.19it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.97it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.27it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.27it/s] 96%|#########6| 25/26 [00:00<00:00, 41.95it/s]100%|##########| 26/26 [00:00<00:00, 32.36it/s]
Test: [   0/  26]	Loss 0.268 (0.268)	test_acc   0.88 (  0.88)	test_minacc   0.34 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 0.268 (0.268)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.309 (0.277)	test_acc   0.87 (  0.88)	test_minacc   0.39 (  0.37)	test_majacc   0.98 (  0.97)	Loss_d 0.309 (0.277)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.39 (  0.37)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.334 (0.286)	test_acc   0.87 (  0.88)	test_minacc   0.34 (  0.36)	test_majacc   0.99 (  0.97)	Loss_d 0.334 (0.286)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.34 (  0.36)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  26/  26]	Loss 0.262 (0.288)	test_acc   0.87 (  0.88)	test_minacc   0.28 (  0.35)	test_majacc   0.97 (  0.97)	Loss_d 0.262 (0.288)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.28 (  0.35)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 35.52it/s]
Test: [  0/  1]	Loss 1.534 (1.534)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 1.534 (1.534)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 1.534 (1.534)	test_acc   0.33 (  0.33)	test_minacc   0.26 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 1.534 (1.534)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.66 (  0.66)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0419 (0.0476)	validation_time 0.0008 (0.0014)	train_time 0.0411 (0.0458)
record: (train_acc, test_acc) (0.8757000232934952, 0.3270000219345093)
last accs (train_acc, test_acc) (0.8757000232934952, 0.3270000219345093)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.71it/s] 23%|##3       | 6/26 [00:00<00:00, 23.94it/s] 38%|###8      | 10/26 [00:00<00:00, 28.39it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.78it/s] 69%|######9   | 18/26 [00:00<00:00, 31.56it/s] 85%|########4 | 22/26 [00:00<00:00, 32.33it/s]100%|##########| 26/26 [00:00<00:00, 33.01it/s]100%|##########| 26/26 [00:00<00:00, 28.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 240000
penalty weights 0.0
Epoch: [7][  26/  26]	Loss 0.289 (0.307)	train_nll   0.29 (  0.31)	train_penalty   0.02 (  0.02)	weight_norm  22.56 ( 22.50)	train_acc   0.88 (  0.87)	train_minacc   0.28 (  0.35)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 6.6086 (6.9531)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.95it/s] 23%|##3       | 6/26 [00:00<00:01, 19.94it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.94it/s] 42%|####2     | 11/26 [00:00<00:00, 28.91it/s] 62%|######1   | 16/26 [00:00<00:00, 34.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.47it/s] 81%|########  | 21/26 [00:00<00:00, 35.28it/s]100%|##########| 26/26 [00:00<00:00, 38.98it/s]100%|##########| 26/26 [00:00<00:00, 29.47it/s]
Test: [   0/  26]	Loss 0.277 (0.277)	test_acc   0.89 (  0.89)	test_minacc   0.41 (  0.41)	test_majacc   0.97 (  0.97)	Loss_d 0.277 (0.277)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.317 (0.273)	test_acc   0.88 (  0.88)	test_minacc   0.43 (  0.44)	test_majacc   0.97 (  0.96)	Loss_d 0.317 (0.273)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.43 (  0.44)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  20/  26]	Loss 0.337 (0.283)	test_acc   0.88 (  0.88)	test_minacc   0.38 (  0.43)	test_majacc   0.99 (  0.96)	Loss_d 0.337 (0.283)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.38 (  0.43)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.89 (  0.88)
Test: [  26/  26]	Loss 0.250 (0.285)	test_acc   0.89 (  0.88)	test_minacc   0.39 (  0.42)	test_majacc   0.98 (  0.96)	Loss_d 0.250 (0.285)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.39 (  0.42)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.90 (  0.88)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.98it/s]
Test: [  0/  1]	Loss 1.494 (1.494)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 1.494 (1.494)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 1.494 (1.494)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.96 (  0.96)	Loss_d 1.494 (1.494)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.61 (  0.61)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0445 (0.0472)	validation_time 0.0004 (0.0013)	train_time 0.0440 (0.0456)
record: (train_acc, test_acc) (0.8807000190615654, 0.3710000216960907)
last accs (train_acc, test_acc) (0.8807000190615654, 0.3710000216960907)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 19%|#9        | 5/26 [00:00<00:01, 20.09it/s] 35%|###4      | 9/26 [00:00<00:00, 26.14it/s] 50%|#####     | 13/26 [00:00<00:00, 29.47it/s] 65%|######5   | 17/26 [00:00<00:00, 31.55it/s] 81%|########  | 21/26 [00:00<00:00, 32.01it/s] 96%|#########6| 25/26 [00:00<00:00, 32.36it/s]100%|##########| 26/26 [00:00<00:00, 27.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 240000
penalty weights 0.0
Epoch: [8][  26/  26]	Loss 0.320 (0.295)	train_nll   0.32 (  0.29)	train_penalty   0.03 (  0.02)	weight_norm  22.69 ( 22.62)	train_acc   0.87 (  0.88)	train_minacc   0.28 (  0.46)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5883 (7.0222)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.45it/s] 31%|###       | 8/26 [00:00<00:00, 40.66it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.66it/s] 50%|#####     | 13/26 [00:00<00:00, 38.70it/s] 69%|######9   | 18/26 [00:00<00:00, 41.49it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.49it/s] 88%|########8 | 23/26 [00:00<00:00, 42.84it/s]100%|##########| 26/26 [00:00<00:00, 36.16it/s]
Test: [   0/  26]	Loss 0.268 (0.268)	test_acc   0.88 (  0.88)	test_minacc   0.34 (  0.34)	test_majacc   0.98 (  0.98)	Loss_d 0.268 (0.268)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.334 (0.287)	test_acc   0.86 (  0.88)	test_minacc   0.37 (  0.35)	test_majacc   0.96 (  0.97)	Loss_d 0.334 (0.287)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.37 (  0.35)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.360 (0.294)	test_acc   0.86 (  0.88)	test_minacc   0.33 (  0.34)	test_majacc   0.98 (  0.97)	Loss_d 0.360 (0.294)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.33 (  0.34)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.280 (0.296)	test_acc   0.88 (  0.88)	test_minacc   0.25 (  0.33)	test_majacc   0.98 (  0.97)	Loss_d 0.280 (0.296)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.25 (  0.33)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.92 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.31it/s]
Test: [  0/  1]	Loss 1.654 (1.654)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 1.654 (1.654)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.68 (  0.68)
Test: [  1/  1]	Loss 1.654 (1.654)	test_acc   0.32 (  0.32)	test_minacc   0.25 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 1.654 (1.654)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.68 (  0.68)
Overall Timing[  8/  1]	epoch_time 0.0422 (0.0466)	validation_time 0.0003 (0.0012)	train_time 0.0419 (0.0452)
record: (train_acc, test_acc) (0.8807000190615654, 0.3710000216960907)
last accs (train_acc, test_acc) (0.8752000188827515, 0.3230000138282776)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.89it/s] 19%|#9        | 5/26 [00:00<00:01, 19.64it/s] 35%|###4      | 9/26 [00:00<00:00, 25.63it/s] 50%|#####     | 13/26 [00:00<00:00, 28.98it/s] 65%|######5   | 17/26 [00:00<00:00, 31.18it/s] 81%|########  | 21/26 [00:00<00:00, 32.67it/s] 96%|#########6| 25/26 [00:00<00:00, 33.87it/s]100%|##########| 26/26 [00:00<00:00, 27.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 240000
penalty weights 0.0
Epoch: [9][  26/  26]	Loss 0.289 (0.292)	train_nll   0.29 (  0.29)	train_penalty   0.02 (  0.02)	weight_norm  22.87 ( 22.78)	train_acc   0.88 (  0.88)	train_minacc   0.25 (  0.45)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 6.2914 (6.9885)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.76it/s] 19%|#9        | 5/26 [00:00<00:00, 27.02it/s] 38%|###8      | 10/26 [00:00<00:00, 35.72it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.72it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.51it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.55it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.55it/s] 96%|#########6| 25/26 [00:00<00:00, 40.68it/s]100%|##########| 26/26 [00:00<00:00, 34.92it/s]
Test: [   0/  26]	Loss 0.272 (0.272)	test_acc   0.89 (  0.89)	test_minacc   0.36 (  0.36)	test_majacc   0.98 (  0.98)	Loss_d 0.272 (0.272)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.339 (0.293)	test_acc   0.86 (  0.88)	test_minacc   0.31 (  0.35)	test_majacc   0.97 (  0.97)	Loss_d 0.339 (0.293)	test_acc_d   0.86 (  0.88)	test_minacc_d   0.31 (  0.35)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.344 (0.297)	test_acc   0.86 (  0.87)	test_minacc   0.36 (  0.34)	test_majacc   0.97 (  0.97)	Loss_d 0.344 (0.297)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.36 (  0.34)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.89)
Test: [  26/  26]	Loss 0.289 (0.298)	test_acc   0.88 (  0.87)	test_minacc   0.28 (  0.33)	test_majacc   0.98 (  0.97)	Loss_d 0.289 (0.298)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.28 (  0.33)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.92 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.92it/s]
Test: [  0/  1]	Loss 1.629 (1.629)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 1.629 (1.629)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.629 (1.629)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 1.629 (1.629)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Overall Timing[  9/  1]	epoch_time 0.0396 (0.0459)	validation_time 0.0004 (0.0011)	train_time 0.0392 (0.0446)
record: (train_acc, test_acc) (0.8807000190615654, 0.3710000216960907)
last accs (train_acc, test_acc) (0.8722000213861465, 0.30100002884864807)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.67it/s] 27%|##6       | 7/26 [00:00<00:00, 30.16it/s] 42%|####2     | 11/26 [00:00<00:00, 32.84it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.98it/s] 88%|########8 | 23/26 [00:00<00:00, 34.65it/s]100%|##########| 26/26 [00:00<00:00, 31.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 240000
penalty weights 0.0
Epoch: [10][  26/  26]	Loss 0.223 (0.271)	train_nll   0.22 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.08 ( 22.98)	train_acc   0.92 (  0.89)	train_minacc   0.58 (  0.49)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 6.5800 (6.9024)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.31it/s] 31%|###       | 8/26 [00:00<00:00, 37.45it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.45it/s] 50%|#####     | 13/26 [00:00<00:00, 39.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.19it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.19it/s] 92%|#########2| 24/26 [00:00<00:00, 44.20it/s]100%|##########| 26/26 [00:00<00:00, 36.65it/s]
Test: [   0/  26]	Loss 0.276 (0.276)	test_acc   0.88 (  0.88)	test_minacc   0.45 (  0.45)	test_majacc   0.95 (  0.95)	Loss_d 0.276 (0.276)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.305 (0.264)	test_acc   0.87 (  0.89)	test_minacc   0.54 (  0.54)	test_majacc   0.94 (  0.95)	Loss_d 0.305 (0.264)	test_acc_d   0.87 (  0.89)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.82 (  0.84)
Test: [  20/  26]	Loss 0.290 (0.257)	test_acc   0.88 (  0.90)	test_minacc   0.48 (  0.56)	test_majacc   0.97 (  0.96)	Loss_d 0.290 (0.257)	test_acc_d   0.88 (  0.90)	test_minacc_d   0.48 (  0.56)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.84 (  0.84)
Test: [  26/  26]	Loss 0.198 (0.255)	test_acc   0.94 (  0.90)	test_minacc   0.67 (  0.56)	test_majacc   0.99 (  0.96)	Loss_d 0.198 (0.255)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.67 (  0.56)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.86 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.89it/s]
Test: [  0/  1]	Loss 1.677 (1.677)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.93 (  0.93)	Loss_d 1.677 (1.677)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.54 (  0.54)
Test: [  1/  1]	Loss 1.677 (1.677)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.93 (  0.93)	Loss_d 1.677 (1.677)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.54 (  0.54)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0417 (0.0455)	validation_time 0.0004 (0.0010)	train_time 0.0413 (0.0443)
record: (train_acc, test_acc) (0.8984000225067139, 0.3920000195503235)
last accs (train_acc, test_acc) (0.8984000225067139, 0.3920000195503235)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.30it/s] 23%|##3       | 6/26 [00:00<00:00, 27.17it/s] 38%|###8      | 10/26 [00:00<00:00, 30.51it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.51it/s] 69%|######9   | 18/26 [00:00<00:00, 34.33it/s] 85%|########4 | 22/26 [00:00<00:00, 35.90it/s]100%|##########| 26/26 [00:00<00:00, 36.30it/s]100%|##########| 26/26 [00:00<00:00, 31.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 240000
penalty weights 0.0
Epoch: [11][  26/  26]	Loss 0.232 (0.248)	train_nll   0.23 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.32 ( 23.20)	train_acc   0.90 (  0.90)	train_minacc   0.47 (  0.57)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 7.1555 (7.0267)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.74it/s] 27%|##6       | 7/26 [00:00<00:00, 29.74it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.74it/s] 46%|####6     | 12/26 [00:00<00:00, 36.90it/s] 65%|######5   | 17/26 [00:00<00:00, 40.10it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.10it/s] 85%|########4 | 22/26 [00:00<00:00, 42.37it/s]100%|##########| 26/26 [00:00<00:00, 36.30it/s]
Test: [   0/  26]	Loss 0.205 (0.205)	test_acc   0.92 (  0.92)	test_minacc   0.59 (  0.59)	test_majacc   0.98 (  0.98)	Loss_d 0.205 (0.205)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.272 (0.240)	test_acc   0.89 (  0.90)	test_minacc   0.55 (  0.55)	test_majacc   0.97 (  0.96)	Loss_d 0.272 (0.240)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.82 (  0.84)
Test: [  20/  26]	Loss 0.256 (0.231)	test_acc   0.90 (  0.91)	test_minacc   0.56 (  0.58)	test_majacc   0.98 (  0.96)	Loss_d 0.256 (0.231)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.83 (  0.84)
Test: [  26/  26]	Loss 0.169 (0.225)	test_acc   0.95 (  0.91)	test_minacc   0.64 (  0.58)	test_majacc   1.00 (  0.97)	Loss_d 0.169 (0.225)	test_acc_d   0.95 (  0.91)	test_minacc_d   0.64 (  0.58)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.87 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.29it/s]
Test: [  0/  1]	Loss 1.987 (1.987)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 1.987 (1.987)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 1.987 (1.987)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.94 (  0.94)	Loss_d 1.987 (1.987)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.55 (  0.55)
Overall Timing[ 11/  1]	epoch_time 0.0401 (0.0451)	validation_time 0.0004 (0.0010)	train_time 0.0397 (0.0439)
record: (train_acc, test_acc) (0.8984000225067139, 0.3920000195503235)
last accs (train_acc, test_acc) (0.9087000281214714, 0.3890000283718109)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.76it/s] 19%|#9        | 5/26 [00:00<00:00, 23.10it/s] 35%|###4      | 9/26 [00:00<00:00, 28.67it/s] 50%|#####     | 13/26 [00:00<00:00, 30.82it/s] 65%|######5   | 17/26 [00:00<00:00, 31.74it/s] 81%|########  | 21/26 [00:00<00:00, 32.92it/s] 96%|#########6| 25/26 [00:00<00:00, 33.50it/s]100%|##########| 26/26 [00:00<00:00, 28.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 240000
penalty weights 0.0
Epoch: [12][  26/  26]	Loss 0.179 (0.238)	train_nll   0.18 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  23.62 ( 23.48)	train_acc   0.92 (  0.90)	train_minacc   0.58 (  0.60)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.2251 (7.1725)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.57it/s] 19%|#9        | 5/26 [00:00<00:00, 26.87it/s]                                               19%|#9        | 5/26 [00:00<00:00, 26.87it/s] 42%|####2     | 11/26 [00:00<00:00, 39.09it/s] 62%|######1   | 16/26 [00:00<00:00, 41.64it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.64it/s] 81%|########  | 21/26 [00:00<00:00, 43.15it/s]100%|##########| 26/26 [00:00<00:00, 37.53it/s]
Test: [   0/  26]	Loss 0.179 (0.179)	test_acc   0.94 (  0.94)	test_minacc   0.72 (  0.72)	test_majacc   0.98 (  0.98)	Loss_d 0.179 (0.179)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.279 (0.230)	test_acc   0.90 (  0.91)	test_minacc   0.64 (  0.66)	test_majacc   0.95 (  0.95)	Loss_d 0.279 (0.230)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.64 (  0.66)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.79 (  0.81)
Test: [  20/  26]	Loss 0.256 (0.227)	test_acc   0.91 (  0.91)	test_minacc   0.64 (  0.66)	test_majacc   0.97 (  0.96)	Loss_d 0.256 (0.227)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.64 (  0.66)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.80 (  0.80)
Test: [  26/  26]	Loss 0.140 (0.219)	test_acc   0.96 (  0.91)	test_minacc   0.81 (  0.67)	test_majacc   0.99 (  0.96)	Loss_d 0.140 (0.219)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.81 (  0.67)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.82 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.28it/s]
Test: [  0/  1]	Loss 2.040 (2.040)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.95 (  0.95)	Loss_d 2.040 (2.040)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 2.040 (2.040)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.95 (  0.95)	Loss_d 2.040 (2.040)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.51 (  0.51)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0400 (0.0447)	validation_time 0.0003 (0.0009)	train_time 0.0396 (0.0436)
record: (train_acc, test_acc) (0.914700020134449, 0.398000031709671)
last accs (train_acc, test_acc) (0.914700020134449, 0.398000031709671)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 35.91it/s] 31%|###       | 8/26 [00:00<00:00, 37.10it/s] 46%|####6     | 12/26 [00:00<00:00, 34.83it/s] 62%|######1   | 16/26 [00:00<00:00, 33.96it/s] 77%|#######6  | 20/26 [00:00<00:00, 34.20it/s] 92%|#########2| 24/26 [00:00<00:00, 34.78it/s]100%|##########| 26/26 [00:00<00:00, 32.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 240000
penalty weights 0.0
Epoch: [13][  26/  26]	Loss 0.197 (0.231)	train_nll   0.20 (  0.23)	train_penalty   0.01 (  0.01)	weight_norm  23.97 ( 23.80)	train_acc   0.92 (  0.90)	train_minacc   0.64 (  0.61)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0424 (7.2063)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.52it/s] 31%|###       | 8/26 [00:00<00:00, 39.48it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.48it/s] 50%|#####     | 13/26 [00:00<00:00, 42.28it/s] 69%|######9   | 18/26 [00:00<00:00, 41.91it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.91it/s] 88%|########8 | 23/26 [00:00<00:00, 42.81it/s]100%|##########| 26/26 [00:00<00:00, 38.38it/s]
Test: [   0/  26]	Loss 0.197 (0.197)	test_acc   0.91 (  0.91)	test_minacc   0.60 (  0.60)	test_majacc   0.97 (  0.97)	Loss_d 0.197 (0.197)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.281 (0.221)	test_acc   0.88 (  0.91)	test_minacc   0.51 (  0.58)	test_majacc   0.96 (  0.97)	Loss_d 0.281 (0.221)	test_acc_d   0.88 (  0.91)	test_minacc_d   0.51 (  0.58)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.84 (  0.85)
Test: [  20/  26]	Loss 0.237 (0.220)	test_acc   0.91 (  0.91)	test_minacc   0.55 (  0.59)	test_majacc   0.99 (  0.97)	Loss_d 0.237 (0.220)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.55 (  0.59)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.84 (  0.84)
Test: [  26/  26]	Loss 0.172 (0.216)	test_acc   0.94 (  0.92)	test_minacc   0.69 (  0.60)	test_majacc   0.98 (  0.97)	Loss_d 0.172 (0.216)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.69 (  0.60)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.85 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.99it/s]
Test: [  0/  1]	Loss 2.087 (2.087)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.94 (  0.94)	Loss_d 2.087 (2.087)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 2.087 (2.087)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.94 (  0.94)	Loss_d 2.087 (2.087)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.58 (  0.58)
Overall Timing[ 13/  1]	epoch_time 0.0413 (0.0445)	validation_time 0.0004 (0.0009)	train_time 0.0409 (0.0434)
record: (train_acc, test_acc) (0.914700020134449, 0.398000031709671)
last accs (train_acc, test_acc) (0.9166000260710716, 0.367000013589859)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 15%|#5        | 4/26 [00:00<00:01, 19.01it/s] 31%|###       | 8/26 [00:00<00:00, 26.48it/s] 46%|####6     | 12/26 [00:00<00:00, 30.39it/s] 62%|######1   | 16/26 [00:00<00:00, 31.87it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.88it/s] 92%|#########2| 24/26 [00:00<00:00, 33.38it/s]100%|##########| 26/26 [00:00<00:00, 28.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 240000
penalty weights 0.0
Epoch: [14][  26/  26]	Loss 0.181 (0.223)	train_nll   0.18 (  0.22)	train_penalty   0.01 (  0.01)	weight_norm  24.36 ( 24.16)	train_acc   0.92 (  0.91)	train_minacc   0.50 (  0.63)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 6.9052 (7.4294)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.79it/s] 31%|###       | 8/26 [00:00<00:00, 39.82it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.82it/s] 50%|#####     | 13/26 [00:00<00:00, 39.04it/s] 69%|######9   | 18/26 [00:00<00:00, 40.32it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.32it/s] 88%|########8 | 23/26 [00:00<00:00, 42.15it/s]100%|##########| 26/26 [00:00<00:00, 38.21it/s]
Test: [   0/  26]	Loss 0.229 (0.229)	test_acc   0.91 (  0.91)	test_minacc   0.48 (  0.48)	test_majacc   0.98 (  0.98)	Loss_d 0.229 (0.229)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.217 (0.194)	test_acc   0.91 (  0.92)	test_minacc   0.57 (  0.60)	test_majacc   0.98 (  0.98)	Loss_d 0.217 (0.194)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.57 (  0.60)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.84 (  0.86)
Test: [  20/  26]	Loss 0.223 (0.194)	test_acc   0.91 (  0.92)	test_minacc   0.55 (  0.58)	test_majacc   0.99 (  0.98)	Loss_d 0.223 (0.194)	test_acc_d   0.91 (  0.92)	test_minacc_d   0.55 (  0.58)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.85 (  0.86)
Test: [  26/  26]	Loss 0.164 (0.191)	test_acc   0.94 (  0.92)	test_minacc   0.58 (  0.58)	test_majacc   1.00 (  0.98)	Loss_d 0.164 (0.191)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.58 (  0.58)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.47it/s]
Test: [  0/  1]	Loss 2.101 (2.101)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 2.101 (2.101)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 2.101 (2.101)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 2.101 (2.101)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.62 (  0.62)
Overall Timing[ 14/  1]	epoch_time 0.0395 (0.0441)	validation_time 0.0004 (0.0009)	train_time 0.0391 (0.0431)
record: (train_acc, test_acc) (0.914700020134449, 0.398000031709671)
last accs (train_acc, test_acc) (0.9229000185132027, 0.33900001645088196)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.33it/s] 19%|#9        | 5/26 [00:00<00:00, 21.22it/s] 35%|###4      | 9/26 [00:00<00:00, 27.92it/s] 50%|#####     | 13/26 [00:00<00:00, 29.67it/s] 65%|######5   | 17/26 [00:00<00:00, 30.99it/s] 81%|########  | 21/26 [00:00<00:00, 32.17it/s] 96%|#########6| 25/26 [00:00<00:00, 33.40it/s]100%|##########| 26/26 [00:00<00:00, 28.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 240000
penalty weights 0.0
Epoch: [15][  26/  26]	Loss 0.171 (0.195)	train_nll   0.17 (  0.20)	train_penalty   0.00 (  0.01)	weight_norm  24.76 ( 24.56)	train_acc   0.95 (  0.92)	train_minacc   0.75 (  0.70)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.2591 (7.6418)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.50it/s] 27%|##6       | 7/26 [00:00<00:00, 33.08it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.08it/s] 46%|####6     | 12/26 [00:00<00:00, 38.10it/s] 65%|######5   | 17/26 [00:00<00:00, 41.16it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.16it/s] 85%|########4 | 22/26 [00:00<00:00, 39.51it/s]100%|##########| 26/26 [00:00<00:00, 36.60it/s]
Test: [   0/  26]	Loss 0.196 (0.196)	test_acc   0.92 (  0.92)	test_minacc   0.57 (  0.57)	test_majacc   0.98 (  0.98)	Loss_d 0.196 (0.196)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.86 (  0.86)
Test: [  10/  26]	Loss 0.208 (0.179)	test_acc   0.91 (  0.93)	test_minacc   0.63 (  0.64)	test_majacc   0.97 (  0.98)	Loss_d 0.208 (0.179)	test_acc_d   0.91 (  0.93)	test_minacc_d   0.63 (  0.64)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.80 (  0.84)
Test: [  20/  26]	Loss 0.157 (0.172)	test_acc   0.95 (  0.93)	test_minacc   0.75 (  0.66)	test_majacc   0.99 (  0.98)	Loss_d 0.157 (0.172)	test_acc_d   0.95 (  0.93)	test_minacc_d   0.75 (  0.66)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.79 (  0.83)
Test: [  26/  26]	Loss 0.132 (0.165)	test_acc   0.96 (  0.94)	test_minacc   0.78 (  0.67)	test_majacc   0.99 (  0.98)	Loss_d 0.132 (0.165)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.78 (  0.67)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.83 (  0.84)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.05it/s]
Test: [  0/  1]	Loss 2.415 (2.415)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 2.415 (2.415)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 2.415 (2.415)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.93 (  0.93)	Loss_d 2.415 (2.415)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.59 (  0.59)
Overall Timing[ 15/  1]	epoch_time 0.0408 (0.0439)	validation_time 0.0004 (0.0008)	train_time 0.0404 (0.0429)
record: (train_acc, test_acc) (0.914700020134449, 0.398000031709671)
last accs (train_acc, test_acc) (0.9356000173091888, 0.33800002932548523)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.95it/s] 19%|#9        | 5/26 [00:00<00:01, 18.35it/s] 35%|###4      | 9/26 [00:00<00:00, 24.24it/s] 50%|#####     | 13/26 [00:00<00:00, 28.03it/s] 65%|######5   | 17/26 [00:00<00:00, 30.24it/s] 81%|########  | 21/26 [00:00<00:00, 31.53it/s] 96%|#########6| 25/26 [00:00<00:00, 32.37it/s]100%|##########| 26/26 [00:00<00:00, 26.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 240000
penalty weights 0.0
Epoch: [16][  26/  26]	Loss 0.147 (0.176)	train_nll   0.15 (  0.18)	train_penalty   0.00 (  0.00)	weight_norm  25.25 ( 24.99)	train_acc   0.95 (  0.93)	train_minacc   0.78 (  0.74)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 8.1425 (8.1005)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.81it/s] 31%|###       | 8/26 [00:00<00:00, 39.45it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.45it/s] 50%|#####     | 13/26 [00:00<00:00, 42.41it/s] 69%|######9   | 18/26 [00:00<00:00, 43.83it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.83it/s] 88%|########8 | 23/26 [00:00<00:00, 44.50it/s]100%|##########| 26/26 [00:00<00:00, 38.48it/s]
Test: [   0/  26]	Loss 0.218 (0.218)	test_acc   0.93 (  0.93)	test_minacc   0.78 (  0.78)	test_majacc   0.95 (  0.95)	Loss_d 0.218 (0.218)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.241 (0.201)	test_acc   0.90 (  0.92)	test_minacc   0.69 (  0.75)	test_majacc   0.95 (  0.95)	Loss_d 0.241 (0.201)	test_acc_d   0.90 (  0.92)	test_minacc_d   0.69 (  0.75)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.72 (  0.76)
Test: [  20/  26]	Loss 0.143 (0.191)	test_acc   0.95 (  0.92)	test_minacc   0.84 (  0.77)	test_majacc   0.97 (  0.95)	Loss_d 0.143 (0.191)	test_acc_d   0.95 (  0.92)	test_minacc_d   0.84 (  0.77)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.72 (  0.75)
Test: [  26/  26]	Loss 0.083 (0.175)	test_acc   0.99 (  0.93)	test_minacc   0.92 (  0.79)	test_majacc   1.00 (  0.96)	Loss_d 0.083 (0.175)	test_acc_d   0.99 (  0.93)	test_minacc_d   0.92 (  0.79)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.79 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.80it/s]
Test: [  0/  1]	Loss 2.480 (2.480)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 2.480 (2.480)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 2.480 (2.480)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 2.480 (2.480)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.43 (  0.43)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0381 (0.0436)	validation_time 0.0003 (0.0008)	train_time 0.0378 (0.0426)
record: (train_acc, test_acc) (0.93000002014637, 0.4180000126361847)
last accs (train_acc, test_acc) (0.93000002014637, 0.4180000126361847)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.94it/s] 19%|#9        | 5/26 [00:00<00:00, 22.34it/s] 35%|###4      | 9/26 [00:00<00:00, 27.18it/s] 50%|#####     | 13/26 [00:00<00:00, 29.87it/s] 65%|######5   | 17/26 [00:00<00:00, 31.41it/s] 81%|########  | 21/26 [00:00<00:00, 31.85it/s] 96%|#########6| 25/26 [00:00<00:00, 33.02it/s]100%|##########| 26/26 [00:00<00:00, 28.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 240000
penalty weights 0.0
Epoch: [17][  26/  26]	Loss 0.105 (0.171)	train_nll   0.10 (  0.17)	train_penalty   0.00 (  0.00)	weight_norm  25.81 ( 25.56)	train_acc   0.96 (  0.93)	train_minacc   0.86 (  0.74)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 8.1378 (8.0019)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 16.77it/s] 31%|###       | 8/26 [00:00<00:00, 30.74it/s]                                               31%|###       | 8/26 [00:00<00:00, 30.74it/s] 50%|#####     | 13/26 [00:00<00:00, 36.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.23it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.23it/s] 92%|#########2| 24/26 [00:00<00:00, 41.55it/s]100%|##########| 26/26 [00:00<00:00, 35.73it/s]
Test: [   0/  26]	Loss 0.145 (0.145)	test_acc   0.95 (  0.95)	test_minacc   0.78 (  0.78)	test_majacc   0.98 (  0.98)	Loss_d 0.145 (0.145)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.181 (0.150)	test_acc   0.92 (  0.94)	test_minacc   0.84 (  0.83)	test_majacc   0.93 (  0.96)	Loss_d 0.181 (0.150)	test_acc_d   0.92 (  0.94)	test_minacc_d   0.84 (  0.83)	test_majacc_d   0.93 (  0.96)	test_corr_d   0.67 (  0.73)
Test: [  20/  26]	Loss 0.108 (0.144)	test_acc   0.97 (  0.94)	test_minacc   0.95 (  0.85)	test_majacc   0.97 (  0.96)	Loss_d 0.108 (0.144)	test_acc_d   0.97 (  0.94)	test_minacc_d   0.95 (  0.85)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.67 (  0.73)
Test: [  26/  26]	Loss 0.065 (0.131)	test_acc   0.99 (  0.95)	test_minacc   0.94 (  0.87)	test_majacc   1.00 (  0.97)	Loss_d 0.065 (0.131)	test_acc_d   0.99 (  0.95)	test_minacc_d   0.94 (  0.87)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.77 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.24it/s]
Test: [  0/  1]	Loss 2.483 (2.483)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.86 (  0.86)	Loss_d 2.483 (2.483)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 2.483 (2.483)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.86 (  0.86)	Loss_d 2.483 (2.483)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.31 (  0.31)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0413 (0.0434)	validation_time 0.0004 (0.0008)	train_time 0.0409 (0.0425)
record: (train_acc, test_acc) (0.9512000258564949, 0.43700000643730164)
last accs (train_acc, test_acc) (0.9512000258564949, 0.43700000643730164)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.38it/s] 19%|#9        | 5/26 [00:00<00:01, 18.43it/s] 35%|###4      | 9/26 [00:00<00:00, 23.60it/s] 50%|#####     | 13/26 [00:00<00:00, 26.97it/s] 65%|######5   | 17/26 [00:00<00:00, 28.95it/s] 81%|########  | 21/26 [00:00<00:00, 30.53it/s] 96%|#########6| 25/26 [00:00<00:00, 31.65it/s]100%|##########| 26/26 [00:00<00:00, 26.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 240000
penalty weights 0.0
Epoch: [18][  26/  26]	Loss 0.097 (0.147)	train_nll   0.10 (  0.15)	train_penalty   0.00 (  0.00)	weight_norm  26.31 ( 26.06)	train_acc   0.96 (  0.94)	train_minacc   0.86 (  0.78)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 8.1847 (8.5668)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 23%|##3       | 6/26 [00:00<00:00, 30.22it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.22it/s] 42%|####2     | 11/26 [00:00<00:00, 37.23it/s] 62%|######1   | 16/26 [00:00<00:00, 41.01it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.01it/s] 81%|########  | 21/26 [00:00<00:00, 38.66it/s]100%|##########| 26/26 [00:00<00:00, 41.79it/s]100%|##########| 26/26 [00:00<00:00, 34.80it/s]
Test: [   0/  26]	Loss 0.147 (0.147)	test_acc   0.94 (  0.94)	test_minacc   0.74 (  0.74)	test_majacc   0.97 (  0.97)	Loss_d 0.147 (0.147)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.193 (0.152)	test_acc   0.92 (  0.94)	test_minacc   0.85 (  0.83)	test_majacc   0.93 (  0.96)	Loss_d 0.193 (0.152)	test_acc_d   0.92 (  0.94)	test_minacc_d   0.85 (  0.83)	test_majacc_d   0.93 (  0.96)	test_corr_d   0.66 (  0.73)
Test: [  20/  26]	Loss 0.104 (0.148)	test_acc   0.96 (  0.94)	test_minacc   0.88 (  0.83)	test_majacc   0.98 (  0.96)	Loss_d 0.104 (0.148)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.88 (  0.83)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.68 (  0.72)
Test: [  26/  26]	Loss 0.061 (0.136)	test_acc   0.99 (  0.95)	test_minacc   0.94 (  0.85)	test_majacc   1.00 (  0.97)	Loss_d 0.061 (0.136)	test_acc_d   0.99 (  0.95)	test_minacc_d   0.94 (  0.85)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.76 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 56.53it/s]
Test: [  0/  1]	Loss 2.572 (2.572)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.88 (  0.88)	Loss_d 2.572 (2.572)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.572 (2.572)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.88 (  0.88)	Loss_d 2.572 (2.572)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.37 (  0.37)
Overall Timing[ 18/  1]	epoch_time 0.0459 (0.0436)	validation_time 0.0005 (0.0008)	train_time 0.0454 (0.0427)
record: (train_acc, test_acc) (0.9512000258564949, 0.43700000643730164)
last accs (train_acc, test_acc) (0.9485000178813935, 0.41700002551078796)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.37it/s] 19%|#9        | 5/26 [00:00<00:01, 18.74it/s] 35%|###4      | 9/26 [00:00<00:00, 24.71it/s] 50%|#####     | 13/26 [00:00<00:00, 27.78it/s] 65%|######5   | 17/26 [00:00<00:00, 29.72it/s] 81%|########  | 21/26 [00:00<00:00, 30.96it/s] 96%|#########6| 25/26 [00:00<00:00, 31.75it/s]100%|##########| 26/26 [00:00<00:00, 26.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 240000
penalty weights 0.0
Epoch: [19][  26/  26]	Loss 0.068 (0.120)	train_nll   0.07 (  0.12)	train_penalty   0.00 (  0.00)	weight_norm  26.77 ( 26.55)	train_acc   0.97 (  0.96)	train_minacc   0.86 (  0.83)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 9.1053 (9.0061)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.57it/s] 31%|###       | 8/26 [00:00<00:00, 39.55it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.55it/s] 50%|#####     | 13/26 [00:00<00:00, 38.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.59it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.59it/s] 96%|#########6| 25/26 [00:00<00:00, 44.24it/s]100%|##########| 26/26 [00:00<00:00, 38.62it/s]
Test: [   0/  26]	Loss 0.086 (0.086)	test_acc   0.96 (  0.96)	test_minacc   0.86 (  0.86)	test_majacc   0.98 (  0.98)	Loss_d 0.086 (0.086)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.168 (0.136)	test_acc   0.94 (  0.94)	test_minacc   0.94 (  0.83)	test_majacc   0.93 (  0.96)	Loss_d 0.168 (0.136)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.94 (  0.83)	test_majacc_d   0.93 (  0.96)	test_corr_d   0.64 (  0.73)
Test: [  20/  26]	Loss 0.114 (0.138)	test_acc   0.96 (  0.94)	test_minacc   0.88 (  0.83)	test_majacc   0.97 (  0.96)	Loss_d 0.114 (0.138)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.88 (  0.83)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.69 (  0.73)
Test: [  26/  26]	Loss 0.050 (0.125)	test_acc   0.99 (  0.95)	test_minacc   0.94 (  0.85)	test_majacc   1.00 (  0.97)	Loss_d 0.050 (0.125)	test_acc_d   0.99 (  0.95)	test_minacc_d   0.94 (  0.85)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.75 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.44it/s]
Test: [  0/  1]	Loss 2.954 (2.954)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.88 (  0.88)	Loss_d 2.954 (2.954)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 2.954 (2.954)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.88 (  0.88)	Loss_d 2.954 (2.954)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.39 (  0.39)
Overall Timing[ 19/  1]	epoch_time 0.0487 (0.0438)	validation_time 0.0004 (0.0008)	train_time 0.0482 (0.0430)
record: (train_acc, test_acc) (0.9512000258564949, 0.43700000643730164)
last accs (train_acc, test_acc) (0.9513000214099884, 0.40300002694129944)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.20it/s] 15%|#5        | 4/26 [00:00<00:01, 13.81it/s] 31%|###       | 8/26 [00:00<00:00, 21.87it/s] 46%|####6     | 12/26 [00:00<00:00, 26.52it/s] 62%|######1   | 16/26 [00:00<00:00, 29.01it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.68it/s] 92%|#########2| 24/26 [00:00<00:00, 33.32it/s]100%|##########| 26/26 [00:01<00:00, 25.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 240000
penalty weights 0.0
Epoch: [20][  26/  26]	Loss 0.066 (0.112)	train_nll   0.07 (  0.11)	train_penalty   0.00 (  0.00)	weight_norm  27.26 ( 27.03)	train_acc   0.98 (  0.96)	train_minacc   0.89 (  0.84)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 9.3663 (9.0035)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.42it/s] 27%|##6       | 7/26 [00:00<00:00, 30.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.66it/s] 46%|####6     | 12/26 [00:00<00:00, 37.69it/s] 65%|######5   | 17/26 [00:00<00:00, 41.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.41it/s] 85%|########4 | 22/26 [00:00<00:00, 39.89it/s]100%|##########| 26/26 [00:00<00:00, 36.46it/s]
Test: [   0/  26]	Loss 0.077 (0.077)	test_acc   0.97 (  0.97)	test_minacc   0.88 (  0.88)	test_majacc   0.99 (  0.99)	Loss_d 0.077 (0.077)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.133 (0.086)	test_acc   0.95 (  0.97)	test_minacc   0.85 (  0.88)	test_majacc   0.97 (  0.98)	Loss_d 0.133 (0.086)	test_acc_d   0.95 (  0.97)	test_minacc_d   0.85 (  0.88)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.69 (  0.74)
Test: [  20/  26]	Loss 0.051 (0.086)	test_acc   0.98 (  0.97)	test_minacc   0.95 (  0.88)	test_majacc   0.99 (  0.98)	Loss_d 0.051 (0.086)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.95 (  0.88)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.67 (  0.73)
Test: [  26/  26]	Loss 0.041 (0.076)	test_acc   0.99 (  0.97)	test_minacc   0.92 (  0.90)	test_majacc   1.00 (  0.99)	Loss_d 0.041 (0.076)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.92 (  0.90)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.75 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.60it/s]
Test: [  0/  1]	Loss 3.158 (3.158)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 3.158 (3.158)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 3.158 (3.158)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 3.158 (3.158)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.36 (  0.36)
Overall Timing[ 20/  1]	epoch_time 0.0432 (0.0438)	validation_time 0.0003 (0.0007)	train_time 0.0429 (0.0430)
record: (train_acc, test_acc) (0.9512000258564949, 0.43700000643730164)
last accs (train_acc, test_acc) (0.9735000233650207, 0.4230000078678131)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.09it/s] 15%|#5        | 4/26 [00:00<00:01, 13.63it/s] 31%|###       | 8/26 [00:00<00:00, 21.03it/s] 46%|####6     | 12/26 [00:00<00:00, 25.41it/s] 62%|######1   | 16/26 [00:00<00:00, 28.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.57it/s] 92%|#########2| 24/26 [00:00<00:00, 31.87it/s]100%|##########| 26/26 [00:01<00:00, 24.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 240000
penalty weights 0.0
Epoch: [21][  26/  26]	Loss 0.054 (0.078)	train_nll   0.05 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  27.70 ( 27.48)	train_acc   0.98 (  0.97)	train_minacc   0.89 (  0.89)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 10.4169 (10.2146)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.17it/s] 23%|##3       | 6/26 [00:00<00:00, 28.76it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.76it/s] 42%|####2     | 11/26 [00:00<00:00, 35.98it/s] 62%|######1   | 16/26 [00:00<00:00, 40.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.63it/s] 81%|########  | 21/26 [00:00<00:00, 38.57it/s]100%|##########| 26/26 [00:00<00:00, 41.55it/s]100%|##########| 26/26 [00:00<00:00, 34.18it/s]
Test: [   0/  26]	Loss 0.104 (0.104)	test_acc   0.96 (  0.96)	test_minacc   0.84 (  0.84)	test_majacc   0.98 (  0.98)	Loss_d 0.104 (0.104)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.103 (0.116)	test_acc   0.96 (  0.96)	test_minacc   0.93 (  0.86)	test_majacc   0.96 (  0.97)	Loss_d 0.103 (0.116)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.93 (  0.86)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.64 (  0.72)
Test: [  20/  26]	Loss 0.097 (0.110)	test_acc   0.96 (  0.96)	test_minacc   0.88 (  0.87)	test_majacc   0.98 (  0.97)	Loss_d 0.097 (0.110)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.88 (  0.87)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.67 (  0.72)
Test: [  26/  26]	Loss 0.023 (0.099)	test_acc   1.00 (  0.96)	test_minacc   0.97 (  0.89)	test_majacc   1.00 (  0.98)	Loss_d 0.023 (0.099)	test_acc_d   1.00 (  0.96)	test_minacc_d   0.97 (  0.89)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.74 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.36it/s]
Test: [  0/  1]	Loss 3.533 (3.533)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.88 (  0.88)	Loss_d 3.533 (3.533)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 3.533 (3.533)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.88 (  0.88)	Loss_d 3.533 (3.533)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.32 (  0.32)
Overall Timing[ 21/  1]	epoch_time 0.0427 (0.0438)	validation_time 0.0004 (0.0007)	train_time 0.0422 (0.0429)
record: (train_acc, test_acc) (0.9512000258564949, 0.43700000643730164)
last accs (train_acc, test_acc) (0.9629000220894813, 0.42000001668930054)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.28it/s] 23%|##3       | 6/26 [00:00<00:00, 26.89it/s] 38%|###8      | 10/26 [00:00<00:00, 30.12it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.98it/s] 69%|######9   | 18/26 [00:00<00:00, 34.27it/s] 85%|########4 | 22/26 [00:00<00:00, 35.07it/s]100%|##########| 26/26 [00:00<00:00, 35.61it/s]100%|##########| 26/26 [00:00<00:00, 30.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 240000
penalty weights 0.0
Epoch: [22][  26/  26]	Loss 0.095 (0.096)	train_nll   0.10 (  0.10)	train_penalty   0.00 (  0.00)	weight_norm  28.22 ( 27.97)	train_acc   0.97 (  0.96)	train_minacc   0.89 (  0.87)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 9.7005 (9.9810)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.07it/s] 23%|##3       | 6/26 [00:00<00:00, 31.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.51it/s] 42%|####2     | 11/26 [00:00<00:00, 37.59it/s] 62%|######1   | 16/26 [00:00<00:00, 41.88it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.88it/s] 81%|########  | 21/26 [00:00<00:00, 39.53it/s]100%|##########| 26/26 [00:00<00:00, 42.39it/s]100%|##########| 26/26 [00:00<00:00, 35.80it/s]
Test: [   0/  26]	Loss 0.055 (0.055)	test_acc   0.98 (  0.98)	test_minacc   0.91 (  0.91)	test_majacc   0.99 (  0.99)	Loss_d 0.055 (0.055)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.082 (0.080)	test_acc   0.97 (  0.97)	test_minacc   0.94 (  0.91)	test_majacc   0.97 (  0.98)	Loss_d 0.082 (0.080)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.94 (  0.91)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.66 (  0.72)
Test: [  20/  26]	Loss 0.050 (0.082)	test_acc   0.99 (  0.97)	test_minacc   0.96 (  0.91)	test_majacc   1.00 (  0.98)	Loss_d 0.050 (0.082)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.96 (  0.91)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.67 (  0.72)
Test: [  26/  26]	Loss 0.031 (0.073)	test_acc   1.00 (  0.97)	test_minacc   0.97 (  0.92)	test_majacc   1.00 (  0.98)	Loss_d 0.031 (0.073)	test_acc_d   1.00 (  0.97)	test_minacc_d   0.97 (  0.92)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.74 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.32it/s]
Test: [  0/  1]	Loss 3.322 (3.322)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.91 (  0.91)	Loss_d 3.322 (3.322)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 3.322 (3.322)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.91 (  0.91)	Loss_d 3.322 (3.322)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.38 (  0.38)
Overall Timing[ 22/  1]	epoch_time 0.0413 (0.0436)	validation_time 0.0004 (0.0007)	train_time 0.0409 (0.0428)
record: (train_acc, test_acc) (0.9512000258564949, 0.43700000643730164)
last accs (train_acc, test_acc) (0.9740000225901604, 0.4090000092983246)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.97it/s] 12%|#1        | 3/26 [00:00<00:01, 12.63it/s] 27%|##6       | 7/26 [00:00<00:00, 22.31it/s] 42%|####2     | 11/26 [00:00<00:00, 26.10it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.60it/s] 88%|########8 | 23/26 [00:00<00:00, 31.24it/s]100%|##########| 26/26 [00:01<00:00, 25.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 240000
penalty weights 0.0
l1 at pgd_anneal_iters 9.973991394042969
set z to 9.47529182434082
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 240000
penalty weights 0.0
Epoch: [23][  26/  26]	Loss 0.066 (0.069)	train_nll   0.07 (  0.07)	train_penalty   0.00 (  0.00)	weight_norm  28.70 ( 28.45)	train_acc   0.97 (  0.97)	train_minacc   0.86 (  0.91)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 10.9589 (10.7294)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.30it/s] 27%|##6       | 7/26 [00:00<00:00, 20.45it/s]                                               27%|##6       | 7/26 [00:00<00:00, 20.45it/s] 46%|####6     | 12/26 [00:00<00:00, 28.90it/s] 65%|######5   | 17/26 [00:00<00:00, 34.44it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.44it/s] 85%|########4 | 22/26 [00:00<00:00, 35.72it/s]100%|##########| 26/26 [00:00<00:00, 29.29it/s]
Test: [   0/  26]	Loss 0.049 (0.049)	test_acc   0.98 (  0.98)	test_minacc   0.97 (  0.97)	test_majacc   0.98 (  0.98)	Loss_d 0.049 (0.049)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.096 (0.077)	test_acc   0.95 (  0.97)	test_minacc   0.96 (  0.95)	test_majacc   0.95 (  0.97)	Loss_d 0.096 (0.077)	test_acc_d   0.95 (  0.97)	test_minacc_d   0.96 (  0.95)	test_majacc_d   0.95 (  0.97)	test_corr_d   0.61 (  0.69)
Test: [  20/  26]	Loss 0.045 (0.075)	test_acc   0.99 (  0.97)	test_minacc   0.97 (  0.95)	test_majacc   0.99 (  0.97)	Loss_d 0.045 (0.075)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.97 (  0.95)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.63 (  0.68)
Test: [  26/  26]	Loss 0.021 (0.067)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.98)	Loss_d 0.021 (0.067)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.72 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.52it/s]
Test: [  0/  1]	Loss 3.333 (3.333)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.83 (  0.83)	Loss_d 3.333 (3.333)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 3.333 (3.333)	test_acc   0.49 (  0.49)	test_minacc   0.45 (  0.45)	test_majacc   0.83 (  0.83)	Loss_d 3.333 (3.333)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.17 (  0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/118/checkpoints/model_best.pth
Overall Timing[ 23/  1]	epoch_time 0.0408 (0.0435)	validation_time 0.0004 (0.0007)	train_time 0.0404 (0.0427)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s] 19%|#9        | 5/26 [00:00<00:00, 21.45it/s] 35%|###4      | 9/26 [00:00<00:00, 28.05it/s] 50%|#####     | 13/26 [00:00<00:00, 31.43it/s] 65%|######5   | 17/26 [00:00<00:00, 33.88it/s] 81%|########  | 21/26 [00:00<00:00, 33.21it/s] 96%|#########6| 25/26 [00:00<00:00, 33.92it/s]100%|##########| 26/26 [00:00<00:00, 28.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 240000
penalty weights 0.0
Epoch: [24][  26/  26]	Loss 0.055 (0.066)	train_nll   0.05 (  0.07)	train_penalty   0.00 (  0.00)	weight_norm  29.18 ( 28.95)	train_acc   0.98 (  0.98)	train_minacc   0.89 (  0.91)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 11.0961 (10.9839)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.81it/s] 27%|##6       | 7/26 [00:00<00:00, 34.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.87it/s] 50%|#####     | 13/26 [00:00<00:00, 39.13it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.71it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.71it/s] 96%|#########6| 25/26 [00:00<00:00, 46.22it/s]100%|##########| 26/26 [00:00<00:00, 39.50it/s]
Test: [   0/  26]	Loss 0.070 (0.070)	test_acc   0.97 (  0.97)	test_minacc   0.86 (  0.86)	test_majacc   0.99 (  0.99)	Loss_d 0.070 (0.070)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.077 (0.074)	test_acc   0.97 (  0.97)	test_minacc   0.88 (  0.86)	test_majacc   0.98 (  0.99)	Loss_d 0.077 (0.074)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.88 (  0.86)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.69 (  0.75)
Test: [  20/  26]	Loss 0.048 (0.065)	test_acc   0.98 (  0.97)	test_minacc   0.90 (  0.88)	test_majacc   1.00 (  0.99)	Loss_d 0.048 (0.065)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.90 (  0.88)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.74)
Test: [  26/  26]	Loss 0.019 (0.059)	test_acc   1.00 (  0.98)	test_minacc   0.97 (  0.89)	test_majacc   1.00 (  0.99)	Loss_d 0.019 (0.059)	test_acc_d   1.00 (  0.98)	test_minacc_d   0.97 (  0.89)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.74 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.70it/s]
Test: [  0/  1]	Loss 4.209 (4.209)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 4.209 (4.209)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 4.209 (4.209)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 4.209 (4.209)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.45 (  0.45)
Overall Timing[ 24/  1]	epoch_time 0.0392 (0.0434)	validation_time 0.0004 (0.0007)	train_time 0.0388 (0.0426)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9776000293493271, 0.3760000169277191)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 12%|#1        | 3/26 [00:00<00:02, 11.44it/s] 27%|##6       | 7/26 [00:00<00:00, 21.61it/s] 42%|####2     | 11/26 [00:00<00:00, 27.09it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.09it/s] 88%|########8 | 23/26 [00:00<00:00, 35.08it/s]100%|##########| 26/26 [00:00<00:00, 27.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 240000
penalty weights 0.0
Epoch: [25][  26/  26]	Loss 0.034 (0.061)	train_nll   0.03 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm  29.63 ( 29.41)	train_acc   0.99 (  0.98)	train_minacc   0.97 (  0.92)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 11.3688 (11.4334)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.08it/s] 19%|#9        | 5/26 [00:00<00:00, 25.94it/s] 38%|###8      | 10/26 [00:00<00:00, 32.52it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.52it/s] 62%|######1   | 16/26 [00:00<00:00, 41.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.65it/s] 81%|########  | 21/26 [00:00<00:00, 44.30it/s]100%|##########| 26/26 [00:00<00:00, 37.57it/s]
Test: [   0/  26]	Loss 0.093 (0.093)	test_acc   0.97 (  0.97)	test_minacc   0.84 (  0.84)	test_majacc   0.99 (  0.99)	Loss_d 0.093 (0.093)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.84 (  0.84)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.058 (0.076)	test_acc   0.98 (  0.97)	test_minacc   0.90 (  0.85)	test_majacc   0.99 (  0.99)	Loss_d 0.058 (0.076)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.90 (  0.85)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.76)
Test: [  20/  26]	Loss 0.059 (0.072)	test_acc   0.97 (  0.97)	test_minacc   0.86 (  0.87)	test_majacc   1.00 (  0.99)	Loss_d 0.059 (0.072)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.86 (  0.87)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.75)
Test: [  26/  26]	Loss 0.013 (0.063)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.88)	test_majacc   1.00 (  0.99)	Loss_d 0.013 (0.063)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.88)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.74 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.37it/s]
Test: [  0/  1]	Loss 4.552 (4.552)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.91 (  0.91)	Loss_d 4.552 (4.552)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 4.552 (4.552)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.91 (  0.91)	Loss_d 4.552 (4.552)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.53 (  0.53)
Overall Timing[ 25/  1]	epoch_time 0.0388 (0.0432)	validation_time 0.0004 (0.0007)	train_time 0.0384 (0.0424)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9772000199556351, 0.3370000123977661)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.34it/s] 19%|#9        | 5/26 [00:00<00:00, 22.85it/s] 35%|###4      | 9/26 [00:00<00:00, 27.97it/s] 50%|#####     | 13/26 [00:00<00:00, 30.32it/s] 65%|######5   | 17/26 [00:00<00:00, 31.74it/s] 81%|########  | 21/26 [00:00<00:00, 33.10it/s] 96%|#########6| 25/26 [00:00<00:00, 34.00it/s]100%|##########| 26/26 [00:00<00:00, 28.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 240000
penalty weights 0.0
Epoch: [26][  26/  26]	Loss 0.030 (0.057)	train_nll   0.03 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm  30.10 ( 29.88)	train_acc   0.99 (  0.98)	train_minacc   0.97 (  0.93)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 11.6505 (11.5484)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.69it/s] 27%|##6       | 7/26 [00:00<00:00, 30.84it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.84it/s] 46%|####6     | 12/26 [00:00<00:00, 37.41it/s] 65%|######5   | 17/26 [00:00<00:00, 38.91it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.91it/s] 85%|########4 | 22/26 [00:00<00:00, 41.38it/s]100%|##########| 26/26 [00:00<00:00, 35.00it/s]
Test: [   0/  26]	Loss 0.024 (0.024)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.024 (0.024)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.072 (0.043)	test_acc   0.97 (  0.99)	test_minacc   0.91 (  0.94)	test_majacc   0.98 (  0.99)	Loss_d 0.072 (0.043)	test_acc_d   0.97 (  0.99)	test_minacc_d   0.91 (  0.94)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.67 (  0.72)
Test: [  20/  26]	Loss 0.016 (0.038)	test_acc   1.00 (  0.99)	test_minacc   0.99 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.016 (0.038)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.99 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.65 (  0.71)
Test: [  26/  26]	Loss 0.008 (0.033)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.033)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.44it/s]
Test: [  0/  1]	Loss 4.274 (4.274)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.87 (  0.87)	Loss_d 4.274 (4.274)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 4.274 (4.274)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.87 (  0.87)	Loss_d 4.274 (4.274)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.36 (  0.36)
Overall Timing[ 26/  1]	epoch_time 0.0409 (0.0431)	validation_time 0.0004 (0.0007)	train_time 0.0404 (0.0423)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9896000354886055, 0.40700000524520874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.98it/s] 19%|#9        | 5/26 [00:00<00:00, 23.77it/s] 35%|###4      | 9/26 [00:00<00:00, 28.16it/s] 50%|#####     | 13/26 [00:00<00:00, 30.88it/s] 65%|######5   | 17/26 [00:00<00:00, 32.64it/s] 81%|########  | 21/26 [00:00<00:00, 33.94it/s] 96%|#########6| 25/26 [00:00<00:00, 34.49it/s]100%|##########| 26/26 [00:00<00:00, 29.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 240000
penalty weights 0.0
Epoch: [27][  26/  26]	Loss 0.007 (0.035)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  30.42 ( 30.28)	train_acc   1.00 (  0.99)	train_minacc   0.97 (  0.95)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.4147 (11.9604)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.46it/s] 27%|##6       | 7/26 [00:00<00:00, 34.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.46it/s] 50%|#####     | 13/26 [00:00<00:00, 39.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.51it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.51it/s] 96%|#########6| 25/26 [00:00<00:00, 45.67it/s]100%|##########| 26/26 [00:00<00:00, 39.58it/s]
Test: [   0/  26]	Loss 0.022 (0.022)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.022 (0.022)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.025 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.025 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.67 (  0.71)
Test: [  20/  26]	Loss 0.007 (0.021)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.007 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.63 (  0.70)
Test: [  26/  26]	Loss 0.003 (0.018)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.15it/s]
Test: [  0/  1]	Loss 4.776 (4.776)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.85 (  0.85)	Loss_d 4.776 (4.776)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 4.776 (4.776)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.85 (  0.85)	Loss_d 4.776 (4.776)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.36 (  0.36)
Overall Timing[ 27/  1]	epoch_time 0.0378 (0.0429)	validation_time 0.0003 (0.0006)	train_time 0.0375 (0.0422)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9939000294208526, 0.4000000059604645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.98it/s] 23%|##3       | 6/26 [00:00<00:00, 26.21it/s] 38%|###8      | 10/26 [00:00<00:00, 29.75it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.40it/s] 69%|######9   | 18/26 [00:00<00:00, 33.11it/s] 85%|########4 | 22/26 [00:00<00:00, 34.51it/s]100%|##########| 26/26 [00:00<00:00, 36.03it/s]100%|##########| 26/26 [00:00<00:00, 30.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 240000
penalty weights 0.0
Epoch: [28][  26/  26]	Loss 0.026 (0.019)	train_nll   0.03 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  30.67 ( 30.55)	train_acc   0.99 (  0.99)	train_minacc   0.94 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.3508 (12.8980)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.65it/s] 31%|###       | 8/26 [00:00<00:00, 38.82it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.82it/s] 50%|#####     | 13/26 [00:00<00:00, 41.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.73it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.73it/s] 96%|#########6| 25/26 [00:00<00:00, 48.82it/s]100%|##########| 26/26 [00:00<00:00, 41.93it/s]
Test: [   0/  26]	Loss 0.012 (0.012)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.012 (0.012)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.029 (0.024)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   0.99 (  0.99)	Loss_d 0.029 (0.024)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.64 (  0.70)
Test: [  20/  26]	Loss 0.019 (0.022)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.019 (0.022)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.63 (  0.69)
Test: [  26/  26]	Loss 0.002 (0.020)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.002 (0.020)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.04it/s]
Test: [  0/  1]	Loss 4.905 (4.905)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.84 (  0.84)	Loss_d 4.905 (4.905)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 4.905 (4.905)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.84 (  0.84)	Loss_d 4.905 (4.905)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.27 (  0.27)
Overall Timing[ 28/  1]	epoch_time 0.0374 (0.0427)	validation_time 0.0003 (0.0006)	train_time 0.0371 (0.0420)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9926000446081161, 0.4400000274181366)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.75it/s] 19%|#9        | 5/26 [00:00<00:00, 21.19it/s] 35%|###4      | 9/26 [00:00<00:00, 27.11it/s] 50%|#####     | 13/26 [00:00<00:00, 30.44it/s] 65%|######5   | 17/26 [00:00<00:00, 32.11it/s] 81%|########  | 21/26 [00:00<00:00, 33.38it/s] 96%|#########6| 25/26 [00:00<00:00, 33.83it/s]100%|##########| 26/26 [00:00<00:00, 28.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 240000
penalty weights 0.0
Epoch: [29][  26/  26]	Loss 0.050 (0.034)	train_nll   0.05 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  31.03 ( 30.84)	train_acc   0.98 (  0.99)	train_minacc   0.94 (  0.96)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 12.8059 (13.2286)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.76it/s] 23%|##3       | 6/26 [00:00<00:00, 30.57it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.57it/s] 42%|####2     | 11/26 [00:00<00:00, 36.82it/s] 62%|######1   | 16/26 [00:00<00:00, 39.34it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.34it/s] 81%|########  | 21/26 [00:00<00:00, 42.73it/s]100%|##########| 26/26 [00:00<00:00, 44.31it/s]100%|##########| 26/26 [00:00<00:00, 36.91it/s]
Test: [   0/  26]	Loss 0.049 (0.049)	test_acc   0.98 (  0.98)	test_minacc   0.93 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.049 (0.049)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.043 (0.044)	test_acc   0.98 (  0.98)	test_minacc   0.99 (  0.96)	test_majacc   0.98 (  0.99)	Loss_d 0.043 (0.044)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.99 (  0.96)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.64 (  0.71)
Test: [  20/  26]	Loss 0.024 (0.040)	test_acc   0.99 (  0.98)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.024 (0.040)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.64 (  0.70)
Test: [  26/  26]	Loss 0.008 (0.034)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.034)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.48it/s]
Test: [  0/  1]	Loss 4.651 (4.651)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.88 (  0.88)	Loss_d 4.651 (4.651)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 4.651 (4.651)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.88 (  0.88)	Loss_d 4.651 (4.651)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.33 (  0.33)
Overall Timing[ 29/  1]	epoch_time 0.0397 (0.0426)	validation_time 0.0007 (0.0006)	train_time 0.0390 (0.0419)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9867000205516815, 0.4270000159740448)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.29it/s] 27%|##6       | 7/26 [00:00<00:00, 29.64it/s] 42%|####2     | 11/26 [00:00<00:00, 31.70it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.81it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.15it/s] 88%|########8 | 23/26 [00:00<00:00, 33.94it/s]100%|##########| 26/26 [00:00<00:00, 30.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 240000
penalty weights 0.0
Epoch: [30][  26/  26]	Loss 0.008 (0.034)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  31.42 ( 31.24)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.95)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.5838 (12.4139)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.39it/s] 23%|##3       | 6/26 [00:00<00:00, 30.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.90it/s] 42%|####2     | 11/26 [00:00<00:00, 38.34it/s] 65%|######5   | 17/26 [00:00<00:00, 42.73it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.73it/s] 88%|########8 | 23/26 [00:00<00:00, 46.73it/s]100%|##########| 26/26 [00:00<00:00, 36.71it/s]
Test: [   0/  26]	Loss 0.037 (0.037)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.037 (0.037)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.040 (0.030)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.040 (0.030)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.65 (  0.71)
Test: [  20/  26]	Loss 0.032 (0.028)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.032 (0.028)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.64 (  0.70)
Test: [  26/  26]	Loss 0.003 (0.024)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.024)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.51it/s]
Test: [  0/  1]	Loss 4.686 (4.686)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 4.686 (4.686)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 4.686 (4.686)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 4.686 (4.686)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.34 (  0.34)
Overall Timing[ 30/  1]	epoch_time 0.0416 (0.0426)	validation_time 0.0003 (0.0006)	train_time 0.0412 (0.0419)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9915000342130661, 0.42600002884864807)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 19%|#9        | 5/26 [00:00<00:00, 21.67it/s] 35%|###4      | 9/26 [00:00<00:00, 28.29it/s] 50%|#####     | 13/26 [00:00<00:00, 31.66it/s] 65%|######5   | 17/26 [00:00<00:00, 32.51it/s] 81%|########  | 21/26 [00:00<00:00, 33.83it/s] 96%|#########6| 25/26 [00:00<00:00, 33.92it/s]100%|##########| 26/26 [00:00<00:00, 28.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 240000
penalty weights 0.0
Epoch: [31][  26/  26]	Loss 0.006 (0.028)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  31.73 ( 31.58)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.1556 (13.0616)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.32it/s] 27%|##6       | 7/26 [00:00<00:00, 28.90it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.90it/s] 46%|####6     | 12/26 [00:00<00:00, 35.88it/s] 65%|######5   | 17/26 [00:00<00:00, 39.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.41it/s] 85%|########4 | 22/26 [00:00<00:00, 39.78it/s]100%|##########| 26/26 [00:00<00:00, 33.96it/s]
Test: [   0/  26]	Loss 0.032 (0.032)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.032 (0.032)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.075 (0.040)	test_acc   0.98 (  0.99)	test_minacc   0.99 (  0.98)	test_majacc   0.98 (  0.99)	Loss_d 0.075 (0.040)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.99 (  0.98)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.63 (  0.70)
Test: [  20/  26]	Loss 0.016 (0.035)	test_acc   0.99 (  0.99)	test_minacc   0.99 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.016 (0.035)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.99 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.63 (  0.69)
Test: [  26/  26]	Loss 0.003 (0.031)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.031)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.36it/s]
Test: [  0/  1]	Loss 4.698 (4.698)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.89 (  0.89)	Loss_d 4.698 (4.698)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 4.698 (4.698)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.89 (  0.89)	Loss_d 4.698 (4.698)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.29 (  0.29)
Overall Timing[ 31/  1]	epoch_time 0.0443 (0.0426)	validation_time 0.0004 (0.0006)	train_time 0.0439 (0.0419)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9892000378370285, 0.44300001859664917)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.50it/s] 19%|#9        | 5/26 [00:00<00:00, 24.69it/s] 38%|###8      | 10/26 [00:00<00:00, 32.46it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.16it/s] 69%|######9   | 18/26 [00:00<00:00, 36.74it/s] 85%|########4 | 22/26 [00:00<00:00, 37.67it/s]100%|##########| 26/26 [00:00<00:00, 32.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 240000
penalty weights 0.0
Epoch: [32][  26/  26]	Loss 0.028 (0.027)	train_nll   0.03 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  32.07 ( 31.91)	train_acc   0.98 (  0.99)	train_minacc   0.97 (  0.97)	train_majacc   0.99 (  1.00)	train_corr   0.00 (  0.00)	l1 13.1024 (13.1156)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.25it/s] 23%|##3       | 6/26 [00:00<00:00, 31.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.00it/s] 46%|####6     | 12/26 [00:00<00:00, 42.44it/s] 65%|######5   | 17/26 [00:00<00:00, 42.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.45it/s] 88%|########8 | 23/26 [00:00<00:00, 47.66it/s]100%|##########| 26/26 [00:00<00:00, 38.74it/s]
Test: [   0/  26]	Loss 0.026 (0.026)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.026 (0.026)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.020 (0.022)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.020 (0.022)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.66 (  0.70)
Test: [  20/  26]	Loss 0.013 (0.022)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   0.99 (  0.99)	Loss_d 0.013 (0.022)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.62 (  0.69)
Test: [  26/  26]	Loss 0.002 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.002 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.89it/s]
Test: [  0/  1]	Loss 4.307 (4.307)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.86 (  0.86)	Loss_d 4.307 (4.307)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 4.307 (4.307)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.86 (  0.86)	Loss_d 4.307 (4.307)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.22 (  0.22)
Overall Timing[ 32/  1]	epoch_time 0.0373 (0.0425)	validation_time 0.0003 (0.0006)	train_time 0.0369 (0.0418)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9938000375628472, 0.4780000150203705)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.20it/s] 23%|##3       | 6/26 [00:00<00:00, 24.77it/s] 38%|###8      | 10/26 [00:00<00:00, 29.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.84it/s] 69%|######9   | 18/26 [00:00<00:00, 33.45it/s] 85%|########4 | 22/26 [00:00<00:00, 34.28it/s]100%|##########| 26/26 [00:00<00:00, 34.59it/s]100%|##########| 26/26 [00:00<00:00, 29.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 240000
penalty weights 0.0
Epoch: [33][  26/  26]	Loss 0.007 (0.018)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.35 ( 32.22)	train_acc   1.00 (  0.99)	train_minacc   0.97 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.5555 (13.1856)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:08,  3.03it/s] 23%|##3       | 6/26 [00:00<00:01, 15.95it/s]                                               23%|##3       | 6/26 [00:00<00:01, 15.95it/s] 42%|####2     | 11/26 [00:00<00:00, 24.76it/s] 62%|######1   | 16/26 [00:00<00:00, 30.78it/s]                                                62%|######1   | 16/26 [00:00<00:00, 30.78it/s] 81%|########  | 21/26 [00:00<00:00, 34.37it/s]100%|##########| 26/26 [00:00<00:00, 27.10it/s]
Test: [   0/  26]	Loss 0.016 (0.016)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.016 (0.016)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.021 (0.022)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.021 (0.022)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.65 (  0.70)
Test: [  20/  26]	Loss 0.004 (0.022)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.004 (0.022)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.63 (  0.69)
Test: [  26/  26]	Loss 0.002 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.002 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.66it/s]
Test: [  0/  1]	Loss 4.782 (4.782)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.90 (  0.90)	Loss_d 4.782 (4.782)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 4.782 (4.782)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.90 (  0.90)	Loss_d 4.782 (4.782)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.26 (  0.26)
Overall Timing[ 33/  1]	epoch_time 0.0474 (0.0426)	validation_time 0.0005 (0.0006)	train_time 0.0469 (0.0419)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9933000294566154, 0.45600003004074097)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.50it/s] 27%|##6       | 7/26 [00:00<00:00, 29.35it/s] 42%|####2     | 11/26 [00:00<00:00, 31.70it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.13it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.10it/s] 88%|########8 | 23/26 [00:00<00:00, 34.56it/s]100%|##########| 26/26 [00:00<00:00, 30.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 240000
penalty weights 0.0
Epoch: [34][  26/  26]	Loss 0.008 (0.012)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  32.56 ( 32.45)	train_acc   0.99 (  1.00)	train_minacc   0.97 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.3742 (13.9993)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.55it/s] 27%|##6       | 7/26 [00:00<00:00, 35.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.39it/s] 46%|####6     | 12/26 [00:00<00:00, 40.42it/s] 65%|######5   | 17/26 [00:00<00:00, 42.83it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.83it/s] 85%|########4 | 22/26 [00:00<00:00, 40.55it/s]100%|##########| 26/26 [00:00<00:00, 38.05it/s]
Test: [   0/  26]	Loss 0.010 (0.010)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.010)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.034 (0.019)	test_acc   0.98 (  0.99)	test_minacc   0.96 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.034 (0.019)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.96 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.71)
Test: [  20/  26]	Loss 0.007 (0.021)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.007 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.63 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.018)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.001 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.79it/s]
Test: [  0/  1]	Loss 5.671 (5.671)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.87 (  0.87)	Loss_d 5.671 (5.671)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 5.671 (5.671)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.87 (  0.87)	Loss_d 5.671 (5.671)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.34 (  0.34)
Overall Timing[ 34/  1]	epoch_time 0.0413 (0.0426)	validation_time 0.0004 (0.0006)	train_time 0.0409 (0.0419)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9932000329494476, 0.4140000343322754)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.10it/s] 19%|#9        | 5/26 [00:00<00:00, 22.97it/s] 35%|###4      | 9/26 [00:00<00:00, 28.59it/s] 50%|#####     | 13/26 [00:00<00:00, 31.27it/s] 65%|######5   | 17/26 [00:00<00:00, 32.78it/s] 81%|########  | 21/26 [00:00<00:00, 33.83it/s] 96%|#########6| 25/26 [00:00<00:00, 33.98it/s]100%|##########| 26/26 [00:00<00:00, 29.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 240000
penalty weights 0.0
Epoch: [35][  26/  26]	Loss 0.002 (0.015)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.79 ( 32.67)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.1630 (14.2827)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.11it/s] 27%|##6       | 7/26 [00:00<00:00, 33.35it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.35it/s] 46%|####6     | 12/26 [00:00<00:00, 39.04it/s] 65%|######5   | 17/26 [00:00<00:00, 40.76it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.76it/s] 85%|########4 | 22/26 [00:00<00:00, 39.98it/s]100%|##########| 26/26 [00:00<00:00, 36.86it/s]
Test: [   0/  26]	Loss 0.008 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.010 (0.014)	test_acc   0.99 (  0.99)	test_minacc   0.99 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.014)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.99 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.71)
Test: [  20/  26]	Loss 0.003 (0.014)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.014)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.63 (  0.69)
Test: [  26/  26]	Loss 0.001 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.57it/s]
Test: [  0/  1]	Loss 5.486 (5.486)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 5.486 (5.486)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 5.486 (5.486)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 5.486 (5.486)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.33 (  0.33)
Overall Timing[ 35/  1]	epoch_time 0.0393 (0.0425)	validation_time 0.0003 (0.0006)	train_time 0.0390 (0.0418)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9954000374674797, 0.4190000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 19%|#9        | 5/26 [00:00<00:00, 21.35it/s] 35%|###4      | 9/26 [00:00<00:00, 27.41it/s] 50%|#####     | 13/26 [00:00<00:00, 31.09it/s] 65%|######5   | 17/26 [00:00<00:00, 33.13it/s] 81%|########  | 21/26 [00:00<00:00, 35.13it/s] 96%|#########6| 25/26 [00:00<00:00, 34.84it/s]100%|##########| 26/26 [00:00<00:00, 29.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 240000
penalty weights 0.0
Epoch: [36][  26/  26]	Loss 0.022 (0.015)	train_nll   0.02 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  33.03 ( 32.90)	train_acc   0.99 (  0.99)	train_minacc   0.94 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.4441 (14.3432)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.85it/s] 19%|#9        | 5/26 [00:00<00:00, 23.52it/s]                                               19%|#9        | 5/26 [00:00<00:00, 23.52it/s] 42%|####2     | 11/26 [00:00<00:00, 36.08it/s] 62%|######1   | 16/26 [00:00<00:00, 39.48it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.48it/s] 81%|########  | 21/26 [00:00<00:00, 40.84it/s]100%|##########| 26/26 [00:00<00:00, 43.61it/s]100%|##########| 26/26 [00:00<00:00, 35.47it/s]
Test: [   0/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.014 (0.015)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.014 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.71)
Test: [  20/  26]	Loss 0.027 (0.014)	test_acc   0.99 (  0.99)	test_minacc   0.99 (  0.99)	test_majacc   0.99 (  1.00)	Loss_d 0.027 (0.014)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.99 (  0.99)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.63 (  0.70)
Test: [  26/  26]	Loss 0.002 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.67it/s]
Test: [  0/  1]	Loss 5.611 (5.611)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 5.611 (5.611)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 5.611 (5.611)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 5.611 (5.611)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.34 (  0.34)
Overall Timing[ 36/  1]	epoch_time 0.0385 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0381 (0.0417)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9957000339627265, 0.4190000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.55it/s] 15%|#5        | 4/26 [00:00<00:01, 18.42it/s] 31%|###       | 8/26 [00:00<00:00, 25.16it/s] 46%|####6     | 12/26 [00:00<00:00, 28.81it/s] 62%|######1   | 16/26 [00:00<00:00, 30.64it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.93it/s] 92%|#########2| 24/26 [00:00<00:00, 32.36it/s]100%|##########| 26/26 [00:00<00:00, 27.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 240000
penalty weights 0.0
Epoch: [37][  26/  26]	Loss 0.007 (0.022)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.40 ( 33.21)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.8760 (14.2010)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.12it/s] 31%|###       | 8/26 [00:00<00:00, 37.18it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.18it/s] 50%|#####     | 13/26 [00:00<00:00, 40.44it/s] 69%|######9   | 18/26 [00:00<00:00, 43.11it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.11it/s] 88%|########8 | 23/26 [00:00<00:00, 41.11it/s]100%|##########| 26/26 [00:00<00:00, 38.10it/s]
Test: [   0/  26]	Loss 0.012 (0.012)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.012)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.039 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.99 (  0.97)	test_majacc   0.99 (  1.00)	Loss_d 0.039 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.99 (  0.97)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.65 (  0.72)
Test: [  20/  26]	Loss 0.020 (0.022)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.020 (0.022)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.54it/s]
Test: [  0/  1]	Loss 5.470 (5.470)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.88 (  0.88)	Loss_d 5.470 (5.470)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 5.470 (5.470)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.88 (  0.88)	Loss_d 5.470 (5.470)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.40 (  0.40)
Overall Timing[ 37/  1]	epoch_time 0.0416 (0.0424)	validation_time 0.0003 (0.0006)	train_time 0.0413 (0.0417)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9934000306129456, 0.39400002360343933)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.61it/s] 19%|#9        | 5/26 [00:00<00:01, 20.78it/s] 35%|###4      | 9/26 [00:00<00:00, 26.70it/s] 50%|#####     | 13/26 [00:00<00:00, 29.27it/s] 65%|######5   | 17/26 [00:00<00:00, 31.15it/s] 81%|########  | 21/26 [00:00<00:00, 32.48it/s] 96%|#########6| 25/26 [00:00<00:00, 33.24it/s]100%|##########| 26/26 [00:00<00:00, 27.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 240000
penalty weights 0.0
Epoch: [38][  26/  26]	Loss 0.008 (0.017)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.72 ( 33.57)	train_acc   1.00 (  0.99)	train_minacc   0.97 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.3979 (14.1469)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.16it/s] 31%|###       | 8/26 [00:00<00:00, 34.12it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.12it/s] 50%|#####     | 13/26 [00:00<00:00, 39.06it/s] 69%|######9   | 18/26 [00:00<00:00, 41.59it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.59it/s] 88%|########8 | 23/26 [00:00<00:00, 40.23it/s]100%|##########| 26/26 [00:00<00:00, 36.90it/s]
Test: [   0/  26]	Loss 0.018 (0.018)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.018 (0.018)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.036 (0.025)	test_acc   0.98 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.98 (  0.99)	Loss_d 0.036 (0.025)	test_acc_d   0.98 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.63 (  0.69)
Test: [  20/  26]	Loss 0.017 (0.026)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.017 (0.026)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.61 (  0.68)
Test: [  26/  26]	Loss 0.003 (0.023)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.023)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.07it/s]
Test: [  0/  1]	Loss 4.889 (4.889)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.85 (  0.85)	Loss_d 4.889 (4.889)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 4.889 (4.889)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.85 (  0.85)	Loss_d 4.889 (4.889)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.19 (  0.19)
Overall Timing[ 38/  1]	epoch_time 0.0431 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0427 (0.0417)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9917000388503074, 0.47600001096725464)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.54it/s] 19%|#9        | 5/26 [00:00<00:00, 22.72it/s] 35%|###4      | 9/26 [00:00<00:00, 28.08it/s] 50%|#####     | 13/26 [00:00<00:00, 30.59it/s] 65%|######5   | 17/26 [00:00<00:00, 32.45it/s] 81%|########  | 21/26 [00:00<00:00, 33.39it/s] 96%|#########6| 25/26 [00:00<00:00, 34.12it/s]100%|##########| 26/26 [00:00<00:00, 28.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 240000
penalty weights 0.0
Epoch: [39][  26/  26]	Loss 0.007 (0.014)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  33.98 ( 33.85)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.6754 (14.4938)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.66it/s] 27%|##6       | 7/26 [00:00<00:00, 34.69it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.69it/s] 46%|####6     | 12/26 [00:00<00:00, 39.53it/s] 65%|######5   | 17/26 [00:00<00:00, 41.76it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.76it/s] 85%|########4 | 22/26 [00:00<00:00, 40.49it/s]100%|##########| 26/26 [00:00<00:00, 37.21it/s]
Test: [   0/  26]	Loss 0.005 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.006 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.71)
Test: [  20/  26]	Loss 0.001 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.63 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.05it/s]
Test: [  0/  1]	Loss 5.974 (5.974)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.90 (  0.90)	Loss_d 5.974 (5.974)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 5.974 (5.974)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.90 (  0.90)	Loss_d 5.974 (5.974)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.37 (  0.37)
Overall Timing[ 39/  1]	epoch_time 0.0479 (0.0425)	validation_time 0.0004 (0.0006)	train_time 0.0474 (0.0419)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9981000221967697, 0.4010000228881836)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.84it/s] 19%|#9        | 5/26 [00:00<00:01, 18.31it/s] 35%|###4      | 9/26 [00:00<00:00, 25.43it/s] 50%|#####     | 13/26 [00:00<00:00, 28.77it/s] 65%|######5   | 17/26 [00:00<00:00, 30.87it/s] 81%|########  | 21/26 [00:00<00:00, 32.84it/s] 96%|#########6| 25/26 [00:00<00:00, 33.92it/s]100%|##########| 26/26 [00:00<00:00, 27.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 240000
penalty weights 0.0
Epoch: [40][  26/  26]	Loss 0.001 (0.011)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  34.21 ( 34.09)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.0062 (14.8657)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.87it/s] 27%|##6       | 7/26 [00:00<00:00, 21.80it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.80it/s] 46%|####6     | 12/26 [00:00<00:00, 30.65it/s] 65%|######5   | 17/26 [00:00<00:00, 36.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.14it/s] 85%|########4 | 22/26 [00:00<00:00, 39.95it/s]100%|##########| 26/26 [00:00<00:00, 30.81it/s]
Test: [   0/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.011 (0.016)	test_acc   0.99 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   0.99 (  1.00)	Loss_d 0.011 (0.016)	test_acc_d   0.99 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.65 (  0.71)
Test: [  20/  26]	Loss 0.020 (0.016)	test_acc   0.99 (  1.00)	test_minacc   0.99 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.020 (0.016)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.99 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.63 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.27it/s]
Test: [  0/  1]	Loss 5.777 (5.777)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.89 (  0.89)	Loss_d 5.777 (5.777)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 5.777 (5.777)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.89 (  0.89)	Loss_d 5.777 (5.777)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.28 (  0.28)
Overall Timing[ 40/  1]	epoch_time 0.0416 (0.0425)	validation_time 0.0004 (0.0006)	train_time 0.0413 (0.0419)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9957000362873077, 0.4440000355243683)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 19%|#9        | 5/26 [00:00<00:00, 23.25it/s] 35%|###4      | 9/26 [00:00<00:00, 28.88it/s] 50%|#####     | 13/26 [00:00<00:00, 31.62it/s] 65%|######5   | 17/26 [00:00<00:00, 33.46it/s] 81%|########  | 21/26 [00:00<00:00, 34.60it/s] 96%|#########6| 25/26 [00:00<00:00, 35.31it/s]100%|##########| 26/26 [00:00<00:00, 29.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 240000
penalty weights 0.0
Epoch: [41][  26/  26]	Loss 0.008 (0.018)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.50 ( 34.34)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.7042 (14.9289)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.25it/s] 15%|#5        | 4/26 [00:00<00:01, 19.04it/s] 35%|###4      | 9/26 [00:00<00:00, 31.11it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.11it/s] 54%|#####3    | 14/26 [00:00<00:00, 37.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 40.40it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 40.40it/s] 92%|#########2| 24/26 [00:00<00:00, 38.96it/s]100%|##########| 26/26 [00:00<00:00, 33.40it/s]
Test: [   0/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.014 (0.012)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.014 (0.012)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.65 (  0.70)
Test: [  20/  26]	Loss 0.006 (0.013)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  0.99)	Loss_d 0.006 (0.013)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.62 (  0.69)
Test: [  26/  26]	Loss 0.001 (0.013)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  0.99)	Loss_d 0.001 (0.013)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.39it/s]
Test: [  0/  1]	Loss 5.416 (5.416)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.84 (  0.84)	Loss_d 5.416 (5.416)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 5.416 (5.416)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.84 (  0.84)	Loss_d 5.416 (5.416)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.27 (  0.27)
Overall Timing[ 41/  1]	epoch_time 0.0406 (0.0425)	validation_time 0.0003 (0.0006)	train_time 0.0403 (0.0418)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9948000305294991, 0.4390000104904175)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.65it/s] 19%|#9        | 5/26 [00:00<00:00, 21.88it/s] 35%|###4      | 9/26 [00:00<00:00, 27.64it/s] 50%|#####     | 13/26 [00:00<00:00, 30.03it/s] 65%|######5   | 17/26 [00:00<00:00, 32.29it/s] 81%|########  | 21/26 [00:00<00:00, 33.94it/s] 96%|#########6| 25/26 [00:00<00:00, 34.71it/s]100%|##########| 26/26 [00:00<00:00, 28.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 240000
penalty weights 0.0
Epoch: [42][  26/  26]	Loss 0.003 (0.016)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.86 ( 34.70)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.5966 (14.5528)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.60it/s]  8%|7         | 2/26 [00:00<00:03,  7.46it/s] 23%|##3       | 6/26 [00:00<00:01, 18.58it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.58it/s] 42%|####2     | 11/26 [00:00<00:00, 27.35it/s] 62%|######1   | 16/26 [00:00<00:00, 34.25it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.25it/s] 85%|########4 | 22/26 [00:00<00:00, 37.28it/s]100%|##########| 26/26 [00:00<00:00, 29.64it/s]
Test: [   0/  26]	Loss 0.022 (0.022)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.022 (0.022)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.027 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.027 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
Test: [  20/  26]	Loss 0.021 (0.020)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   0.99 (  0.99)	Loss_d 0.021 (0.020)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.61 (  0.69)
Test: [  26/  26]	Loss 0.002 (0.017)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.002 (0.017)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.38it/s]
Test: [  0/  1]	Loss 5.394 (5.394)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.85 (  0.85)	Loss_d 5.394 (5.394)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 5.394 (5.394)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.85 (  0.85)	Loss_d 5.394 (5.394)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.27 (  0.27)
Overall Timing[ 42/  1]	epoch_time 0.0391 (0.0424)	validation_time 0.0004 (0.0006)	train_time 0.0387 (0.0417)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9935000340938568, 0.4440000355243683)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.71it/s] 19%|#9        | 5/26 [00:00<00:00, 23.76it/s] 35%|###4      | 9/26 [00:00<00:00, 29.02it/s] 50%|#####     | 13/26 [00:00<00:00, 31.32it/s] 65%|######5   | 17/26 [00:00<00:00, 32.47it/s] 81%|########  | 21/26 [00:00<00:00, 33.31it/s] 96%|#########6| 25/26 [00:00<00:00, 34.29it/s]100%|##########| 26/26 [00:00<00:00, 29.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 240000
penalty weights 0.0
Epoch: [43][  26/  26]	Loss 0.007 (0.014)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.13 ( 35.00)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.8405 (14.6879)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.98it/s] 23%|##3       | 6/26 [00:00<00:00, 20.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.29it/s] 42%|####2     | 11/26 [00:00<00:00, 29.50it/s] 62%|######1   | 16/26 [00:00<00:00, 35.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.47it/s] 81%|########  | 21/26 [00:00<00:00, 36.06it/s]100%|##########| 26/26 [00:00<00:00, 38.74it/s]100%|##########| 26/26 [00:00<00:00, 29.88it/s]
Test: [   0/  26]	Loss 0.016 (0.016)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.016 (0.016)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.015 (0.023)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   0.99 (  1.00)	Loss_d 0.015 (0.023)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.66 (  0.72)
Test: [  20/  26]	Loss 0.009 (0.017)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.009 (0.017)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.64 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.015)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.015)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.93it/s]
Test: [  0/  1]	Loss 5.944 (5.944)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.90 (  0.90)	Loss_d 5.944 (5.944)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 5.944 (5.944)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.90 (  0.90)	Loss_d 5.944 (5.944)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.39 (  0.39)
Overall Timing[ 43/  1]	epoch_time 0.0393 (0.0423)	validation_time 0.0003 (0.0006)	train_time 0.0390 (0.0417)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9947000363469124, 0.3920000195503235)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.19it/s] 19%|#9        | 5/26 [00:00<00:00, 23.75it/s] 35%|###4      | 9/26 [00:00<00:00, 29.01it/s] 50%|#####     | 13/26 [00:00<00:00, 31.19it/s] 65%|######5   | 17/26 [00:00<00:00, 32.77it/s] 81%|########  | 21/26 [00:00<00:00, 33.70it/s] 96%|#########6| 25/26 [00:00<00:00, 34.16it/s]100%|##########| 26/26 [00:00<00:00, 29.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 240000
penalty weights 0.0
Epoch: [44][  26/  26]	Loss 0.030 (0.015)	train_nll   0.03 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  35.43 ( 35.28)	train_acc   0.98 (  0.99)	train_minacc   0.92 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.1971 (15.0257)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.22it/s] 23%|##3       | 6/26 [00:00<00:00, 23.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.72it/s] 42%|####2     | 11/26 [00:00<00:00, 31.98it/s] 62%|######1   | 16/26 [00:00<00:00, 37.37it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.37it/s] 81%|########  | 21/26 [00:00<00:00, 39.87it/s]100%|##########| 26/26 [00:00<00:00, 42.40it/s]100%|##########| 26/26 [00:00<00:00, 32.66it/s]
Test: [   0/  26]	Loss 0.007 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.012 (0.018)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.70)
Test: [  20/  26]	Loss 0.004 (0.017)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  0.99)	Loss_d 0.004 (0.017)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.62 (  0.69)
Test: [  26/  26]	Loss 0.001 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.83it/s]
Test: [  0/  1]	Loss 5.773 (5.773)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.84 (  0.84)	Loss_d 5.773 (5.773)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 5.773 (5.773)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.84 (  0.84)	Loss_d 5.773 (5.773)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.28 (  0.28)
Overall Timing[ 44/  1]	epoch_time 0.0420 (0.0423)	validation_time 0.0005 (0.0006)	train_time 0.0415 (0.0417)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9956000304818153, 0.43700000643730164)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.22it/s] 15%|#5        | 4/26 [00:00<00:01, 19.81it/s] 31%|###       | 8/26 [00:00<00:00, 26.37it/s] 46%|####6     | 12/26 [00:00<00:00, 29.34it/s] 62%|######1   | 16/26 [00:00<00:00, 31.23it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.39it/s] 92%|#########2| 24/26 [00:00<00:00, 33.17it/s]100%|##########| 26/26 [00:00<00:00, 28.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 240000
penalty weights 0.0
Epoch: [45][  26/  26]	Loss 0.002 (0.018)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  35.81 ( 35.62)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.8280 (15.0496)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.62it/s] 23%|##3       | 6/26 [00:00<00:00, 21.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.29it/s] 42%|####2     | 11/26 [00:00<00:00, 30.79it/s] 62%|######1   | 16/26 [00:00<00:00, 35.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.41it/s] 81%|########  | 21/26 [00:00<00:00, 38.06it/s]100%|##########| 26/26 [00:00<00:00, 41.47it/s]100%|##########| 26/26 [00:00<00:00, 31.60it/s]
Test: [   0/  26]	Loss 0.009 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.009 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.030 (0.017)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   0.99 (  0.99)	Loss_d 0.030 (0.017)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.64 (  0.70)
Test: [  20/  26]	Loss 0.008 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.62 (  0.69)
Test: [  26/  26]	Loss 0.001 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  0.99)	Loss_d 0.001 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.96it/s]
Test: [  0/  1]	Loss 5.317 (5.317)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.84 (  0.84)	Loss_d 5.317 (5.317)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 5.317 (5.317)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.84 (  0.84)	Loss_d 5.317 (5.317)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.23 (  0.23)
Overall Timing[ 45/  1]	epoch_time 0.0445 (0.0423)	validation_time 0.0003 (0.0005)	train_time 0.0441 (0.0417)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9943000270724297, 0.4570000171661377)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.35it/s] 19%|#9        | 5/26 [00:00<00:00, 24.80it/s] 35%|###4      | 9/26 [00:00<00:00, 28.90it/s] 50%|#####     | 13/26 [00:00<00:00, 30.94it/s] 65%|######5   | 17/26 [00:00<00:00, 32.29it/s] 81%|########  | 21/26 [00:00<00:00, 33.37it/s] 96%|#########6| 25/26 [00:00<00:00, 34.00it/s]100%|##########| 26/26 [00:00<00:00, 29.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 240000
penalty weights 0.0
Epoch: [46][  26/  26]	Loss 0.011 (0.014)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.11 ( 35.98)	train_acc   1.00 (  1.00)	train_minacc   0.97 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.8632 (14.7590)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.95it/s] 15%|#5        | 4/26 [00:00<00:01, 20.72it/s] 35%|###4      | 9/26 [00:00<00:00, 32.94it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.94it/s] 54%|#####3    | 14/26 [00:00<00:00, 38.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.47it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 37.47it/s] 92%|#########2| 24/26 [00:00<00:00, 40.38it/s]100%|##########| 26/26 [00:00<00:00, 34.35it/s]
Test: [   0/  26]	Loss 0.003 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.011 (0.013)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.013)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
Test: [  20/  26]	Loss 0.002 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.63 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.95it/s]
Test: [  0/  1]	Loss 6.095 (6.095)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.87 (  0.87)	Loss_d 6.095 (6.095)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 6.095 (6.095)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.87 (  0.87)	Loss_d 6.095 (6.095)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.37 (  0.37)
Overall Timing[ 46/  1]	epoch_time 0.0427 (0.0424)	validation_time 0.0004 (0.0005)	train_time 0.0422 (0.0417)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9966000257730484, 0.39400002360343933)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.84it/s] 12%|#1        | 3/26 [00:00<00:01, 12.11it/s] 27%|##6       | 7/26 [00:00<00:00, 21.12it/s] 42%|####2     | 11/26 [00:00<00:00, 25.76it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.19it/s] 88%|########8 | 23/26 [00:00<00:00, 32.48it/s]100%|##########| 26/26 [00:00<00:00, 26.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 240000
penalty weights 0.0
Epoch: [47][  26/  26]	Loss 0.019 (0.010)	train_nll   0.02 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.33 ( 36.22)	train_acc   1.00 (  1.00)	train_minacc   0.97 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.3022 (15.1621)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.92it/s] 12%|#1        | 3/26 [00:00<00:02,  7.84it/s] 35%|###4      | 9/26 [00:00<00:00, 22.08it/s]                                               35%|###4      | 9/26 [00:00<00:00, 22.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.30it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.16it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 36.16it/s] 96%|#########6| 25/26 [00:00<00:00, 38.99it/s]100%|##########| 26/26 [00:00<00:00, 28.53it/s]
Test: [   0/  26]	Loss 0.004 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.012 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.72)
Test: [  20/  26]	Loss 0.004 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.63 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.46it/s]
Test: [  0/  1]	Loss 6.616 (6.616)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.93 (  0.93)	Loss_d 6.616 (6.616)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 6.616 (6.616)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.93 (  0.93)	Loss_d 6.616 (6.616)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.44 (  0.44)
Overall Timing[ 47/  1]	epoch_time 0.0455 (0.0424)	validation_time 0.0003 (0.0005)	train_time 0.0452 (0.0418)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9981000198721885, 0.3760000169277191)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.62it/s] 19%|#9        | 5/26 [00:00<00:01, 19.44it/s] 35%|###4      | 9/26 [00:00<00:00, 25.43it/s] 50%|#####     | 13/26 [00:00<00:00, 28.83it/s] 65%|######5   | 17/26 [00:00<00:00, 29.23it/s] 81%|########  | 21/26 [00:00<00:00, 31.15it/s] 96%|#########6| 25/26 [00:00<00:00, 32.18it/s]100%|##########| 26/26 [00:00<00:00, 26.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 240000
penalty weights 0.0
Epoch: [48][  26/  26]	Loss 0.008 (0.013)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.63 ( 36.47)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.2121 (15.2659)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.33it/s] 15%|#5        | 4/26 [00:00<00:01, 19.47it/s] 38%|###8      | 10/26 [00:00<00:00, 35.82it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.31it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.67it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.67it/s] 96%|#########6| 25/26 [00:00<00:00, 40.88it/s]100%|##########| 26/26 [00:00<00:00, 34.19it/s]
Test: [   0/  26]	Loss 0.006 (0.006)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.009 (0.018)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.009 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.73)
Test: [  20/  26]	Loss 0.001 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.63 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.57it/s]
Test: [  0/  1]	Loss 6.474 (6.474)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.92 (  0.92)	Loss_d 6.474 (6.474)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 6.474 (6.474)	test_acc   0.37 (  0.37)	test_minacc   0.30 (  0.30)	test_majacc   0.92 (  0.92)	Loss_d 6.474 (6.474)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.45 (  0.45)
Overall Timing[ 48/  1]	epoch_time 0.0413 (0.0424)	validation_time 0.0005 (0.0005)	train_time 0.0409 (0.0418)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9963000269532204, 0.3660000264644623)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.09it/s] 19%|#9        | 5/26 [00:00<00:01, 20.44it/s] 35%|###4      | 9/26 [00:00<00:00, 26.87it/s] 50%|#####     | 13/26 [00:00<00:00, 30.18it/s] 65%|######5   | 17/26 [00:00<00:00, 32.38it/s] 81%|########  | 21/26 [00:00<00:00, 33.32it/s] 96%|#########6| 25/26 [00:00<00:00, 34.04it/s]100%|##########| 26/26 [00:00<00:00, 27.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 240000
penalty weights 0.0
Epoch: [49][  26/  26]	Loss 0.003 (0.010)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.89 ( 36.78)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.6288 (15.5161)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.62it/s] 27%|##6       | 7/26 [00:00<00:00, 30.98it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.98it/s] 46%|####6     | 12/26 [00:00<00:00, 37.23it/s] 65%|######5   | 17/26 [00:00<00:00, 41.06it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.06it/s] 85%|########4 | 22/26 [00:00<00:00, 39.58it/s]100%|##########| 26/26 [00:00<00:00, 35.84it/s]
Test: [   0/  26]	Loss 0.003 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.010 (0.021)	test_acc   1.00 (  0.99)	test_minacc   0.99 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.99 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.72)
Test: [  20/  26]	Loss 0.004 (0.014)	test_acc   1.00 (  1.00)	test_minacc   0.99 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.99 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.63 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.58it/s]
Test: [  0/  1]	Loss 7.083 (7.083)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.90 (  0.90)	Loss_d 7.083 (7.083)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 7.083 (7.083)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.90 (  0.90)	Loss_d 7.083 (7.083)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.50 (  0.50)
Overall Timing[ 49/  1]	epoch_time 0.0410 (0.0424)	validation_time 0.0005 (0.0005)	train_time 0.0405 (0.0418)
record: (train_acc, test_acc) (0.9748000295162201, 0.4870000183582306)
last accs (train_acc, test_acc) (0.9967000222802163, 0.33800002932548523)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.167 MB of 0.167 MB uploadedwandb: \ 0.167 MB of 0.167 MB uploadedwandb: | 0.167 MB of 0.167 MB uploadedwandb: / 0.167 MB of 0.167 MB uploadedwandb: - 0.167 MB of 0.167 MB uploadedwandb: \ 0.167 MB of 0.167 MB uploadedwandb: | 0.167 MB of 0.167 MB uploadedwandb: / 0.037 MB of 0.470 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/diagnostics/epoch_time_val █▂▂▂▂▂▂▂▂▁▁▂▂▁▂▂▂▂▂▂▁▂▁▁▂▂▁▃▁▁▂▂▂▂▁▁▂▂▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/diagnostics/train_time_val █▂▂▂▂▂▂▂▂▂▂▂▂▁▂▃▂▂▂▂▁▂▁▁▂▂▁▃▁▁▂▂▂▂▁▁▂▂▃▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/diagnostics/validation_time_val █▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/Loss_avg ▁▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▃▄▃▃▅▄▅▅▅▅▅▅▆▆▆▅▆▆▆▇▆▇▇█
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/Loss_d_avg ▁▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▃▄▃▃▅▄▅▅▅▅▅▅▆▆▆▅▆▆▆▇▆▇▇█
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/Loss_d_val ▁▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▃▄▃▃▅▄▅▅▅▅▅▅▆▆▆▅▆▆▆▇▆▇▇█
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/Loss_val ▁▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▃▄▃▃▅▄▅▅▅▅▅▅▆▆▆▅▆▆▆▇▆▇▇█
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_acc_avg ▁▁▁▂▃▅▆▅▆▆▆▆▅▇▇▇▇▇▇█▅▆▆▇▇▇█▇▇▇▆█▇▇▇▆▇▆▆▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_acc_d_avg ▁▁▁▂▃▅▆▅▆▆▆▆▅▇▇▇▇▇▇█▅▆▆▇▇▇█▇▇▇▆█▇▇▇▆▇▆▆▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_acc_d_val ▁▁▁▂▃▅▆▅▆▆▆▆▅▇▇▇▇▇▇█▅▆▆▇▇▇█▇▇▇▆█▇▇▇▆▇▆▆▅
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_acc_val ▁▁▁▂▃▅▆▅▆▆▆▆▅▇▇▇▇▇▇█▅▆▆▇▇▇█▇▇▇▆█▇▇▇▆▇▆▆▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_corr_d_avg ████▇▅▅▆▄▄▄▅▅▃▂▃▃▂▃▁▄▃▃▂▃▂▁▂▂▃▃▁▂▂▂▃▂▃▃▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_corr_d_val ████▇▅▅▆▄▄▄▅▅▃▂▃▃▂▃▁▄▃▃▂▃▂▁▂▂▃▃▁▂▂▂▃▂▃▃▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_majacc_avg █████▆▆▆▅▆▆▆▅▄▂▃▄▃▄▁▄▃▂▁▄▃▂▄▄▄▃▂▃▁▂▄▁▃▅▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_majacc_d_avg █████▆▆▆▅▆▆▆▅▄▂▃▄▃▄▁▄▃▂▁▄▃▂▄▄▄▃▂▃▁▂▄▁▃▅▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_majacc_d_val █████▆▆▆▅▆▆▆▅▄▂▃▄▃▄▁▄▃▂▁▄▃▂▄▄▄▃▂▃▁▂▄▁▃▅▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_majacc_val █████▆▆▆▅▆▆▆▅▄▂▃▄▃▄▁▄▃▂▁▄▃▂▄▄▄▃▂▃▁▂▄▁▃▅▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_minacc_avg ▁▁▁▂▃▅▆▅▆▆▆▆▅▇▇▇▇▇▆█▅▆▆▇▇▇█▇▇▇▆█▇▇▇▆▇▆▆▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_minacc_d_avg ▁▁▁▂▃▅▆▅▆▆▆▆▅▇▇▇▇▇▆█▅▆▆▇▇▇█▇▇▇▆█▇▇▇▆▇▆▆▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_minacc_d_val ▁▁▁▂▃▅▆▅▆▆▆▆▅▇▇▇▇▇▆█▅▆▆▇▇▇█▇▇▇▆█▇▇▇▆▇▆▆▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_minacc_val ▁▁▁▂▃▅▆▅▆▆▆▆▅▇▇▇▇▇▆█▅▆▆▇▇▇█▇▇▇▆█▇▇▇▆▇▆▆▅
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▃▃▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/Loss_val █▇▇▇▆▆▆▇▅▅▄▄▄▄▃▃▂▂▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/l1_avg ▁▁▁▁▁▁▁▁▁▁▁▁▂▂▂▂▃▄▄▄▅▅▅▆▅▆▆▆▇▇▇▇▇█▇▇█▇██
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/l1_val ▁▂▁▁▁▁▁▁▁▁▁▁▂▂▂▂▃▄▃▄▅▅▆▆▆▆▆▆▇▇▇▇█▇▇▇▇▇██
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_acc_avg ▁▃▃▃▃▃▃▄▄▄▅▅▅▆▆▆▇▇▇▇▇▇██████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_acc_val ▁▁▁▁▂▁▂▂▄▃▄▄▅▅▆▆▇▇▆▆▇▇████▇██▇██████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_majacc_avg ▁█▇▇▅▄▄▃▄▄▄▄▄▄▅▅▆▇▆▇▇▇██▇███████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_majacc_val ▆██▇▆▁▅▃▅▃▄▃▅▄▃▅▆▇▅▆▆▆███▇▆██▇███▇█▇████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_minacc_avg ▁▁▁▂▃▃▃▄▄▅▅▅▆▆▆▇▇▇▇▇████████████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_minacc_val ▂▁▁▁▂▃▃▃▅▄▅▅▆▆▇▇▇▇▇▇████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_nll_avg █▆▆▆▅▅▅▅▄▄▄▄▃▃▃▃▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_nll_val █▇▇▇▆▆▆▇▅▅▄▄▄▄▃▃▂▂▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_penalty_avg █▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_penalty_val ▇█▇▅▄▄▄▆▂▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/weight_norm_avg ▁▂▂▃▃▃▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇▇████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/weight_norm_val ▁▁▂▂▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/diagnostics/epoch_time_val 0.04101
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/diagnostics/train_time_val 0.04054
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/diagnostics/validation_time_val 0.00046
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/Loss_avg 7.08278
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/Loss_d_avg 7.08278
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/Loss_d_val 7.08278
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/Loss_val 7.08278
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_acc_avg 0.338
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_acc_d_avg 0.338
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_acc_d_val 0.338
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_acc_val 0.338
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_corr_d_avg 0.50019
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_corr_d_val 0.50019
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_majacc_avg 0.9
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_majacc_d_avg 0.9
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_majacc_d_val 0.9
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_majacc_val 0.9
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_minacc_avg 0.27556
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_minacc_d_avg 0.27556
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_minacc_d_val 0.27556
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/test/test_minacc_val 0.27556
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/Loss_avg 0.01045
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/Loss_val 0.00295
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/l1_avg 15.51608
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/l1_val 15.6288
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_acc_avg 0.9967
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_acc_val 1.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_majacc_avg 0.99788
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_majacc_val 1.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_minacc_avg 0.99032
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_minacc_val 1.0
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_nll_avg 0.01045
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_nll_val 0.00295
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_penalty_avg 0.00013
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/train_penalty_val 4e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/weight_norm_avg 36.77546
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/weight_norm_val 36.88796
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/118/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/whvmotn8
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_191739-whvmotn8/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_192037-kp95ywlw
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/kp95ywlw
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=240000, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Conv2d(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1167
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6005, 3, 32, 32) (5995, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:42,  1.69s/it] 19%|#9        | 5/26 [00:01<00:05,  3.62it/s] 35%|###4      | 9/26 [00:01<00:02,  7.10it/s] 50%|#####     | 13/26 [00:02<00:01, 10.82it/s] 65%|######5   | 17/26 [00:02<00:00, 14.67it/s] 81%|########  | 21/26 [00:02<00:00, 18.61it/s] 96%|#########6| 25/26 [00:02<00:00, 21.94it/s]100%|##########| 26/26 [00:02<00:00,  9.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 240000
penalty weights 0.0
Epoch: [0][  26/  26]	Loss 0.418 (0.657)	train_nll   0.42 (  0.66)	train_penalty   0.05 (  0.58)	weight_norm  20.99 ( 18.18)	train_acc   0.83 (  0.79)	train_minacc   0.03 (  0.10)	train_majacc   0.98 (  0.91)	train_corr   0.00 (  0.00)	l1 6.7578 (7.7295)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 26.18it/s] 35%|###4      | 9/26 [00:00<00:00, 36.25it/s]                                               35%|###4      | 9/26 [00:00<00:00, 36.25it/s] 54%|#####3    | 14/26 [00:00<00:00, 40.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.24it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.24it/s] 92%|#########2| 24/26 [00:00<00:00, 40.29it/s]100%|##########| 26/26 [00:00<00:00, 36.78it/s]
Test: [   0/  26]	Loss 0.396 (0.396)	test_acc   0.86 (  0.86)	test_minacc   0.00 (  0.00)	test_majacc   0.98 (  0.98)	Loss_d 0.396 (0.396)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.342 (0.422)	test_acc   0.88 (  0.84)	test_minacc   0.06 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.342 (0.422)	test_acc_d   0.88 (  0.84)	test_minacc_d   0.06 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.96)
Test: [  20/  26]	Loss 0.426 (0.418)	test_acc   0.84 (  0.84)	test_minacc   0.03 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.426 (0.418)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.03 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.413 (0.416)	test_acc   0.84 (  0.85)	test_minacc   0.03 (  0.04)	test_majacc   0.99 (  0.99)	Loss_d 0.413 (0.416)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.03 (  0.04)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.51it/s]100%|##########| 1/1 [00:00<00:00,  2.51it/s]
Test: [  0/  1]	Loss 1.742 (1.742)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.742 (1.742)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.742 (1.742)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.742 (1.742)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/120/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0874 (0.0874)	validation_time 0.0068 (0.0068)	train_time 0.0770 (0.0770)
record: (train_acc, test_acc) (0.8451000235676766, 0.12000000476837158)
last accs (train_acc, test_acc) (0.8451000235676766, 0.12000000476837158)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 19%|#9        | 5/26 [00:00<00:01, 20.17it/s] 35%|###4      | 9/26 [00:00<00:00, 26.73it/s] 50%|#####     | 13/26 [00:00<00:00, 30.69it/s] 65%|######5   | 17/26 [00:00<00:00, 33.10it/s] 81%|########  | 21/26 [00:00<00:00, 34.58it/s] 96%|#########6| 25/26 [00:00<00:00, 35.20it/s]100%|##########| 26/26 [00:00<00:00, 28.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 240000
penalty weights 0.0
Epoch: [1][  26/  26]	Loss 0.410 (0.411)	train_nll   0.41 (  0.41)	train_penalty   0.06 (  0.06)	weight_norm  22.12 ( 21.77)	train_acc   0.84 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.9557 (6.8610)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.94it/s] 23%|##3       | 6/26 [00:00<00:00, 32.30it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.30it/s] 42%|####2     | 11/26 [00:00<00:00, 39.45it/s] 62%|######1   | 16/26 [00:00<00:00, 43.04it/s]                                                62%|######1   | 16/26 [00:00<00:00, 43.04it/s] 81%|########  | 21/26 [00:00<00:00, 40.16it/s]100%|##########| 26/26 [00:00<00:00, 43.03it/s]100%|##########| 26/26 [00:00<00:00, 36.37it/s]
Test: [   0/  26]	Loss 0.375 (0.375)	test_acc   0.87 (  0.87)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.375 (0.375)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.342 (0.409)	test_acc   0.87 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.342 (0.409)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  20/  26]	Loss 0.419 (0.406)	test_acc   0.84 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.419 (0.406)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.406 (0.405)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.406 (0.405)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.06it/s]
Test: [  0/  1]	Loss 1.786 (1.786)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.786 (1.786)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.786 (1.786)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.786 (1.786)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0396 (0.0635)	validation_time 0.0003 (0.0036)	train_time 0.0392 (0.0581)
record: (train_acc, test_acc) (0.8451000235676766, 0.12000000476837158)
last accs (train_acc, test_acc) (0.8478000259399414, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.67it/s]  8%|7         | 2/26 [00:00<00:03,  7.87it/s] 23%|##3       | 6/26 [00:00<00:01, 19.55it/s] 38%|###8      | 10/26 [00:00<00:00, 25.23it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.79it/s] 69%|######9   | 18/26 [00:00<00:00, 30.58it/s] 85%|########4 | 22/26 [00:00<00:00, 31.92it/s]100%|##########| 26/26 [00:00<00:00, 33.08it/s]100%|##########| 26/26 [00:01<00:00, 25.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 240000
penalty weights 0.0
Epoch: [2][  26/  26]	Loss 0.389 (0.397)	train_nll   0.39 (  0.40)	train_penalty   0.05 (  0.05)	weight_norm  22.25 ( 22.21)	train_acc   0.84 (  0.85)	train_minacc   0.00 (  0.04)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.9939 (7.0018)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.25it/s] 23%|##3       | 6/26 [00:00<00:00, 30.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.50it/s] 42%|####2     | 11/26 [00:00<00:00, 36.70it/s] 62%|######1   | 16/26 [00:00<00:00, 41.39it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.39it/s] 81%|########  | 21/26 [00:00<00:00, 39.75it/s]100%|##########| 26/26 [00:00<00:00, 42.53it/s]100%|##########| 26/26 [00:00<00:00, 35.18it/s]
Test: [   0/  26]	Loss 0.344 (0.344)	test_acc   0.88 (  0.88)	test_minacc   0.04 (  0.04)	test_majacc   1.00 (  1.00)	Loss_d 0.344 (0.344)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.04 (  0.04)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.330 (0.383)	test_acc   0.88 (  0.85)	test_minacc   0.02 (  0.04)	test_majacc   1.00 (  0.99)	Loss_d 0.330 (0.383)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.02 (  0.04)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.383 (0.379)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.383 (0.379)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.376 (0.378)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   1.00 (  1.00)	Loss_d 0.376 (0.378)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.73it/s]
Test: [  0/  1]	Loss 1.694 (1.694)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.694 (1.694)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.694 (1.694)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 1.694 (1.694)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Overall Timing[  2/  1]	epoch_time 0.0393 (0.0554)	validation_time 0.0004 (0.0025)	train_time 0.0388 (0.0517)
record: (train_acc, test_acc) (0.8451000235676766, 0.12000000476837158)
last accs (train_acc, test_acc) (0.8506000211238861, 0.11900000274181366)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.67it/s]  8%|7         | 2/26 [00:00<00:05,  4.10it/s] 23%|##3       | 6/26 [00:00<00:01, 12.72it/s] 38%|###8      | 10/26 [00:00<00:00, 18.88it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.47it/s] 69%|######9   | 18/26 [00:00<00:00, 26.53it/s] 85%|########4 | 22/26 [00:01<00:00, 29.28it/s]100%|##########| 26/26 [00:01<00:00, 31.14it/s]100%|##########| 26/26 [00:01<00:00, 21.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 240000
penalty weights 0.0
Epoch: [3][  26/  26]	Loss 0.376 (0.375)	train_nll   0.38 (  0.38)	train_penalty   0.04 (  0.04)	weight_norm  22.31 ( 22.28)	train_acc   0.85 (  0.85)	train_minacc   0.08 (  0.09)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 7.1306 (7.0909)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.66it/s] 27%|##6       | 7/26 [00:00<00:00, 33.48it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.48it/s] 46%|####6     | 12/26 [00:00<00:00, 38.87it/s] 65%|######5   | 17/26 [00:00<00:00, 41.84it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.84it/s] 85%|########4 | 22/26 [00:00<00:00, 40.16it/s]100%|##########| 26/26 [00:00<00:00, 36.90it/s]
Test: [   0/  26]	Loss 0.312 (0.312)	test_acc   0.88 (  0.88)	test_minacc   0.18 (  0.18)	test_majacc   0.99 (  0.99)	Loss_d 0.312 (0.312)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.287 (0.344)	test_acc   0.88 (  0.85)	test_minacc   0.08 (  0.12)	test_majacc   0.99 (  0.98)	Loss_d 0.287 (0.344)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.08 (  0.12)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.93)
Test: [  20/  26]	Loss 0.358 (0.347)	test_acc   0.84 (  0.85)	test_minacc   0.11 (  0.12)	test_majacc   0.98 (  0.98)	Loss_d 0.358 (0.347)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.11 (  0.12)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.93 (  0.93)
Test: [  26/  26]	Loss 0.364 (0.346)	test_acc   0.84 (  0.85)	test_minacc   0.08 (  0.12)	test_majacc   0.99 (  0.98)	Loss_d 0.364 (0.346)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.08 (  0.12)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.94 (  0.93)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.24it/s]
Test: [  0/  1]	Loss 1.674 (1.674)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 1.674 (1.674)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.87 (  0.87)
Test: [  1/  1]	Loss 1.674 (1.674)	test_acc   0.17 (  0.17)	test_minacc   0.08 (  0.08)	test_majacc   0.99 (  0.99)	Loss_d 1.674 (1.674)	test_acc_d   0.17 (  0.17)	test_minacc_d   0.08 (  0.08)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.87 (  0.87)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/120/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0428 (0.0523)	validation_time 0.0003 (0.0020)	train_time 0.0425 (0.0494)
record: (train_acc, test_acc) (0.8533000258207322, 0.16700001060962677)
last accs (train_acc, test_acc) (0.8533000258207322, 0.16700001060962677)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 18.06it/s] 27%|##6       | 7/26 [00:00<00:00, 26.26it/s] 42%|####2     | 11/26 [00:00<00:00, 29.51it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.60it/s] 88%|########8 | 23/26 [00:00<00:00, 33.57it/s]100%|##########| 26/26 [00:00<00:00, 29.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 240000
penalty weights 0.0
Epoch: [4][  26/  26]	Loss 0.366 (0.352)	train_nll   0.37 (  0.35)	train_penalty   0.03 (  0.03)	weight_norm  22.38 ( 22.35)	train_acc   0.87 (  0.86)	train_minacc   0.26 (  0.18)	train_majacc   0.98 (  0.98)	train_corr   0.00 (  0.00)	l1 7.2310 (7.2616)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.39it/s] 27%|##6       | 7/26 [00:00<00:00, 31.51it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.51it/s] 46%|####6     | 12/26 [00:00<00:00, 34.75it/s] 65%|######5   | 17/26 [00:00<00:00, 38.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.37it/s] 85%|########4 | 22/26 [00:00<00:00, 40.96it/s]100%|##########| 26/26 [00:00<00:00, 35.44it/s]
Test: [   0/  26]	Loss 0.326 (0.326)	test_acc   0.87 (  0.87)	test_minacc   0.12 (  0.12)	test_majacc   0.98 (  0.98)	Loss_d 0.326 (0.326)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.283 (0.339)	test_acc   0.88 (  0.86)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 0.283 (0.339)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  20/  26]	Loss 0.352 (0.341)	test_acc   0.83 (  0.85)	test_minacc   0.11 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 0.352 (0.341)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.11 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  26/  26]	Loss 0.354 (0.340)	test_acc   0.88 (  0.86)	test_minacc   0.28 (  0.18)	test_majacc   0.99 (  0.98)	Loss_d 0.354 (0.340)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.28 (  0.18)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.13it/s]
Test: [  0/  1]	Loss 1.652 (1.652)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   1.00 (  1.00)	Loss_d 1.652 (1.652)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.80 (  0.80)
Test: [  1/  1]	Loss 1.652 (1.652)	test_acc   0.22 (  0.22)	test_minacc   0.13 (  0.13)	test_majacc   1.00 (  1.00)	Loss_d 1.652 (1.652)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.13 (  0.13)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.80 (  0.80)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/120/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0450 (0.0508)	validation_time 0.0004 (0.0017)	train_time 0.0446 (0.0484)
record: (train_acc, test_acc) (0.8565000211596488, 0.22100001573562622)
last accs (train_acc, test_acc) (0.8565000211596488, 0.22100001573562622)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.31it/s] 23%|##3       | 6/26 [00:00<00:00, 22.53it/s] 38%|###8      | 10/26 [00:00<00:00, 28.06it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.41it/s] 69%|######9   | 18/26 [00:00<00:00, 32.23it/s] 85%|########4 | 22/26 [00:00<00:00, 33.37it/s]100%|##########| 26/26 [00:00<00:00, 33.78it/s]100%|##########| 26/26 [00:00<00:00, 28.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 240000
penalty weights 0.0
Epoch: [5][  26/  26]	Loss 0.334 (0.337)	train_nll   0.33 (  0.34)	train_penalty   0.03 (  0.03)	weight_norm  22.45 ( 22.42)	train_acc   0.87 (  0.86)	train_minacc   0.26 (  0.24)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 7.2292 (7.3362)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.59it/s] 27%|##6       | 7/26 [00:00<00:00, 34.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.82it/s] 46%|####6     | 12/26 [00:00<00:00, 40.06it/s] 65%|######5   | 17/26 [00:00<00:00, 38.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.80it/s] 85%|########4 | 22/26 [00:00<00:00, 40.45it/s]100%|##########| 26/26 [00:00<00:00, 36.11it/s]
Test: [   0/  26]	Loss 0.306 (0.306)	test_acc   0.88 (  0.88)	test_minacc   0.22 (  0.22)	test_majacc   0.97 (  0.97)	Loss_d 0.306 (0.306)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.267 (0.323)	test_acc   0.89 (  0.86)	test_minacc   0.21 (  0.20)	test_majacc   0.99 (  0.98)	Loss_d 0.267 (0.323)	test_acc_d   0.89 (  0.86)	test_minacc_d   0.21 (  0.20)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.90)
Test: [  20/  26]	Loss 0.333 (0.323)	test_acc   0.84 (  0.86)	test_minacc   0.11 (  0.20)	test_majacc   0.98 (  0.98)	Loss_d 0.333 (0.323)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.11 (  0.20)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  26/  26]	Loss 0.326 (0.321)	test_acc   0.88 (  0.86)	test_minacc   0.28 (  0.20)	test_majacc   0.99 (  0.98)	Loss_d 0.326 (0.321)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.28 (  0.20)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.90 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 49.75it/s]
Test: [  0/  1]	Loss 1.628 (1.628)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 1.628 (1.628)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.74 (  0.74)
Test: [  1/  1]	Loss 1.628 (1.628)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.98 (  0.98)	Loss_d 1.628 (1.628)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.74 (  0.74)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/120/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0438 (0.0496)	validation_time 0.0005 (0.0015)	train_time 0.0432 (0.0476)
record: (train_acc, test_acc) (0.8603000255823136, 0.2670000195503235)
last accs (train_acc, test_acc) (0.8603000255823136, 0.2670000195503235)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.80it/s] 19%|#9        | 5/26 [00:00<00:01, 17.22it/s] 35%|###4      | 9/26 [00:00<00:00, 24.26it/s] 50%|#####     | 13/26 [00:00<00:00, 28.27it/s] 65%|######5   | 17/26 [00:00<00:00, 30.44it/s] 81%|########  | 21/26 [00:00<00:00, 31.86it/s] 96%|#########6| 25/26 [00:00<00:00, 32.57it/s]100%|##########| 26/26 [00:00<00:00, 26.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 240000
penalty weights 0.0
Epoch: [6][  26/  26]	Loss 0.305 (0.322)	train_nll   0.30 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.53 ( 22.49)	train_acc   0.88 (  0.86)	train_minacc   0.26 (  0.28)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 7.2444 (7.3377)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.64it/s] 27%|##6       | 7/26 [00:00<00:00, 30.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.11it/s] 46%|####6     | 12/26 [00:00<00:00, 37.38it/s] 65%|######5   | 17/26 [00:00<00:00, 41.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.13it/s] 85%|########4 | 22/26 [00:00<00:00, 42.30it/s]100%|##########| 26/26 [00:00<00:00, 35.25it/s]
Test: [   0/  26]	Loss 0.269 (0.269)	test_acc   0.89 (  0.89)	test_minacc   0.28 (  0.28)	test_majacc   0.98 (  0.98)	Loss_d 0.269 (0.269)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.230 (0.295)	test_acc   0.91 (  0.87)	test_minacc   0.29 (  0.24)	test_majacc   0.99 (  0.98)	Loss_d 0.230 (0.295)	test_acc_d   0.91 (  0.87)	test_minacc_d   0.29 (  0.24)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.91)
Test: [  20/  26]	Loss 0.302 (0.296)	test_acc   0.86 (  0.87)	test_minacc   0.22 (  0.24)	test_majacc   0.98 (  0.98)	Loss_d 0.302 (0.296)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.22 (  0.24)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.91 (  0.91)
Test: [  26/  26]	Loss 0.290 (0.296)	test_acc   0.88 (  0.87)	test_minacc   0.26 (  0.25)	test_majacc   0.99 (  0.98)	Loss_d 0.290 (0.296)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.26 (  0.25)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.92 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.88it/s]
Test: [  0/  1]	Loss 1.651 (1.651)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.97 (  0.97)	Loss_d 1.651 (1.651)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.651 (1.651)	test_acc   0.28 (  0.28)	test_minacc   0.21 (  0.21)	test_majacc   0.97 (  0.97)	Loss_d 1.651 (1.651)	test_acc_d   0.28 (  0.28)	test_minacc_d   0.21 (  0.21)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.71 (  0.71)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/120/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0421 (0.0486)	validation_time 0.0004 (0.0013)	train_time 0.0417 (0.0467)
record: (train_acc, test_acc) (0.8713000226020813, 0.2840000092983246)
last accs (train_acc, test_acc) (0.8713000226020813, 0.2840000092983246)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.29it/s] 23%|##3       | 6/26 [00:00<00:00, 24.62it/s] 38%|###8      | 10/26 [00:00<00:00, 29.03it/s] 54%|#####3    | 14/26 [00:00<00:00, 30.92it/s] 69%|######9   | 18/26 [00:00<00:00, 32.32it/s] 85%|########4 | 22/26 [00:00<00:00, 33.43it/s]100%|##########| 26/26 [00:00<00:00, 33.67it/s]100%|##########| 26/26 [00:00<00:00, 28.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 240000
penalty weights 0.0
Epoch: [7][  26/  26]	Loss 0.297 (0.306)	train_nll   0.30 (  0.31)	train_penalty   0.02 (  0.02)	weight_norm  22.64 ( 22.59)	train_acc   0.89 (  0.87)	train_minacc   0.49 (  0.34)	train_majacc   0.96 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3775 (7.4368)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.83it/s] 23%|##3       | 6/26 [00:00<00:00, 25.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.66it/s] 42%|####2     | 11/26 [00:00<00:00, 34.83it/s] 62%|######1   | 16/26 [00:00<00:00, 39.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.65it/s] 81%|########  | 21/26 [00:00<00:00, 41.26it/s]100%|##########| 26/26 [00:00<00:00, 43.73it/s]100%|##########| 26/26 [00:00<00:00, 34.15it/s]
Test: [   0/  26]	Loss 0.257 (0.257)	test_acc   0.89 (  0.89)	test_minacc   0.36 (  0.36)	test_majacc   0.97 (  0.97)	Loss_d 0.257 (0.257)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  10/  26]	Loss 0.226 (0.288)	test_acc   0.91 (  0.87)	test_minacc   0.42 (  0.35)	test_majacc   0.98 (  0.97)	Loss_d 0.226 (0.288)	test_acc_d   0.91 (  0.87)	test_minacc_d   0.42 (  0.35)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.89)
Test: [  20/  26]	Loss 0.288 (0.291)	test_acc   0.87 (  0.88)	test_minacc   0.35 (  0.36)	test_majacc   0.97 (  0.97)	Loss_d 0.288 (0.291)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.35 (  0.36)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.88 (  0.89)
Test: [  26/  26]	Loss 0.263 (0.289)	test_acc   0.89 (  0.88)	test_minacc   0.41 (  0.36)	test_majacc   0.98 (  0.97)	Loss_d 0.263 (0.289)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.41 (  0.36)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.40it/s]
Test: [  0/  1]	Loss 1.667 (1.667)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.95 (  0.95)	Loss_d 1.667 (1.667)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.63 (  0.63)
Test: [  1/  1]	Loss 1.667 (1.667)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.95 (  0.95)	Loss_d 1.667 (1.667)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.63 (  0.63)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/120/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0422 (0.0478)	validation_time 0.0006 (0.0012)	train_time 0.0415 (0.0461)
record: (train_acc, test_acc) (0.8777000238895416, 0.3370000123977661)
last accs (train_acc, test_acc) (0.8777000238895416, 0.3370000123977661)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.82it/s]  8%|7         | 2/26 [00:00<00:03,  7.37it/s] 23%|##3       | 6/26 [00:00<00:01, 18.52it/s] 38%|###8      | 10/26 [00:00<00:00, 24.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.70it/s] 69%|######9   | 18/26 [00:00<00:00, 29.80it/s] 85%|########4 | 22/26 [00:00<00:00, 31.54it/s]100%|##########| 26/26 [00:00<00:00, 33.42it/s]100%|##########| 26/26 [00:01<00:00, 24.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 240000
penalty weights 0.0
Epoch: [8][  26/  26]	Loss 0.298 (0.295)	train_nll   0.30 (  0.30)	train_penalty   0.02 (  0.02)	weight_norm  22.79 ( 22.72)	train_acc   0.91 (  0.87)	train_minacc   0.51 (  0.38)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.4944 (7.5122)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.95it/s] 23%|##3       | 6/26 [00:00<00:00, 31.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.90it/s] 42%|####2     | 11/26 [00:00<00:00, 38.44it/s] 62%|######1   | 16/26 [00:00<00:00, 41.43it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.43it/s] 81%|########  | 21/26 [00:00<00:00, 42.25it/s]100%|##########| 26/26 [00:00<00:00, 36.65it/s]
Test: [   0/  26]	Loss 0.290 (0.290)	test_acc   0.87 (  0.87)	test_minacc   0.52 (  0.52)	test_majacc   0.93 (  0.93)	Loss_d 0.290 (0.290)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.230 (0.291)	test_acc   0.87 (  0.87)	test_minacc   0.52 (  0.48)	test_majacc   0.92 (  0.94)	Loss_d 0.230 (0.291)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.52 (  0.48)	test_majacc_d   0.92 (  0.94)	test_corr_d   0.85 (  0.83)
Test: [  20/  26]	Loss 0.282 (0.287)	test_acc   0.87 (  0.87)	test_minacc   0.54 (  0.49)	test_majacc   0.94 (  0.94)	Loss_d 0.282 (0.287)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.54 (  0.49)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.80 (  0.83)
Test: [  26/  26]	Loss 0.265 (0.283)	test_acc   0.92 (  0.88)	test_minacc   0.56 (  0.50)	test_majacc   0.98 (  0.94)	Loss_d 0.265 (0.283)	test_acc_d   0.92 (  0.88)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.98 (  0.94)	test_corr_d   0.85 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.28it/s]
Test: [  0/  1]	Loss 1.651 (1.651)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.95 (  0.95)	Loss_d 1.651 (1.651)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 1.651 (1.651)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.95 (  0.95)	Loss_d 1.651 (1.651)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.49 (  0.49)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/120/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0403 (0.0469)	validation_time 0.0004 (0.0012)	train_time 0.0399 (0.0454)
record: (train_acc, test_acc) (0.8774000216722488, 0.4140000343322754)
last accs (train_acc, test_acc) (0.8774000216722488, 0.4140000343322754)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.41it/s] 19%|#9        | 5/26 [00:00<00:01, 14.25it/s] 35%|###4      | 9/26 [00:00<00:00, 20.77it/s] 50%|#####     | 13/26 [00:00<00:00, 25.33it/s] 65%|######5   | 17/26 [00:00<00:00, 28.65it/s] 81%|########  | 21/26 [00:00<00:00, 30.91it/s] 96%|#########6| 25/26 [00:00<00:00, 32.48it/s]100%|##########| 26/26 [00:01<00:00, 24.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 240000
penalty weights 0.0
Epoch: [9][  26/  26]	Loss 0.260 (0.283)	train_nll   0.26 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.97 ( 22.88)	train_acc   0.91 (  0.88)	train_minacc   0.56 (  0.44)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.6160 (7.5688)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.62it/s]  8%|7         | 2/26 [00:00<00:03,  7.32it/s] 27%|##6       | 7/26 [00:00<00:00, 22.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.46it/s] 46%|####6     | 12/26 [00:00<00:00, 30.56it/s] 65%|######5   | 17/26 [00:00<00:00, 36.38it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.38it/s] 85%|########4 | 22/26 [00:00<00:00, 36.82it/s]100%|##########| 26/26 [00:00<00:00, 29.56it/s]
Test: [   0/  26]	Loss 0.251 (0.251)	test_acc   0.88 (  0.88)	test_minacc   0.56 (  0.56)	test_majacc   0.93 (  0.93)	Loss_d 0.251 (0.251)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.211 (0.277)	test_acc   0.91 (  0.88)	test_minacc   0.62 (  0.54)	test_majacc   0.95 (  0.94)	Loss_d 0.211 (0.277)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.62 (  0.54)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.245 (0.272)	test_acc   0.89 (  0.88)	test_minacc   0.63 (  0.56)	test_majacc   0.94 (  0.94)	Loss_d 0.245 (0.272)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.63 (  0.56)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.79 (  0.81)
Test: [  26/  26]	Loss 0.218 (0.264)	test_acc   0.93 (  0.89)	test_minacc   0.67 (  0.57)	test_majacc   0.98 (  0.94)	Loss_d 0.218 (0.264)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.98 (  0.94)	test_corr_d   0.84 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.87it/s]
Test: [  0/  1]	Loss 1.691 (1.691)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.91 (  0.91)	Loss_d 1.691 (1.691)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 1.691 (1.691)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.91 (  0.91)	Loss_d 1.691 (1.691)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.45 (  0.45)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/120/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0421 (0.0465)	validation_time 0.0005 (0.0011)	train_time 0.0416 (0.0450)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.15it/s] 15%|#5        | 4/26 [00:00<00:01, 15.39it/s] 31%|###       | 8/26 [00:00<00:00, 23.07it/s] 46%|####6     | 12/26 [00:00<00:00, 27.33it/s] 62%|######1   | 16/26 [00:00<00:00, 29.73it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.32it/s] 92%|#########2| 24/26 [00:00<00:00, 32.76it/s]100%|##########| 26/26 [00:00<00:00, 26.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 240000
penalty weights 0.0
Epoch: [10][  26/  26]	Loss 0.244 (0.273)	train_nll   0.24 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.19 ( 23.08)	train_acc   0.92 (  0.88)	train_minacc   0.56 (  0.48)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 7.7723 (7.6528)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.28it/s] 27%|##6       | 7/26 [00:00<00:00, 35.29it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.29it/s] 46%|####6     | 12/26 [00:00<00:00, 40.39it/s] 65%|######5   | 17/26 [00:00<00:00, 42.23it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.23it/s] 85%|########4 | 22/26 [00:00<00:00, 40.80it/s]100%|##########| 26/26 [00:00<00:00, 37.26it/s]
Test: [   0/  26]	Loss 0.254 (0.254)	test_acc   0.89 (  0.89)	test_minacc   0.44 (  0.44)	test_majacc   0.95 (  0.95)	Loss_d 0.254 (0.254)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.210 (0.279)	test_acc   0.91 (  0.88)	test_minacc   0.56 (  0.44)	test_majacc   0.96 (  0.96)	Loss_d 0.210 (0.279)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.56 (  0.44)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.87)
Test: [  20/  26]	Loss 0.245 (0.268)	test_acc   0.89 (  0.89)	test_minacc   0.49 (  0.45)	test_majacc   0.97 (  0.96)	Loss_d 0.245 (0.268)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.49 (  0.45)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.84 (  0.86)
Test: [  26/  26]	Loss 0.199 (0.259)	test_acc   0.94 (  0.89)	test_minacc   0.62 (  0.47)	test_majacc   1.00 (  0.97)	Loss_d 0.199 (0.259)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.62 (  0.47)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.85 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.41it/s]
Test: [  0/  1]	Loss 1.990 (1.990)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 1.990 (1.990)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.59 (  0.59)
Test: [  1/  1]	Loss 1.990 (1.990)	test_acc   0.34 (  0.34)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 1.990 (1.990)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.59 (  0.59)
Overall Timing[ 10/  1]	epoch_time 0.0459 (0.0464)	validation_time 0.0003 (0.0010)	train_time 0.0455 (0.0450)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.8913000227212906, 0.34200000762939453)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 19%|#9        | 5/26 [00:00<00:01, 20.84it/s] 35%|###4      | 9/26 [00:00<00:00, 27.16it/s] 50%|#####     | 13/26 [00:00<00:00, 30.53it/s] 65%|######5   | 17/26 [00:00<00:00, 32.43it/s] 81%|########  | 21/26 [00:00<00:00, 32.88it/s] 96%|#########6| 25/26 [00:00<00:00, 33.05it/s]100%|##########| 26/26 [00:00<00:00, 27.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 240000
penalty weights 0.0
Epoch: [11][  26/  26]	Loss 0.263 (0.269)	train_nll   0.26 (  0.27)	train_penalty   0.01 (  0.01)	weight_norm  23.45 ( 23.32)	train_acc   0.91 (  0.89)	train_minacc   0.62 (  0.51)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.4147 (7.7185)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.96it/s] 31%|###       | 8/26 [00:00<00:00, 41.57it/s]                                               31%|###       | 8/26 [00:00<00:00, 41.57it/s] 50%|#####     | 13/26 [00:00<00:00, 43.65it/s] 69%|######9   | 18/26 [00:00<00:00, 42.18it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.18it/s] 88%|########8 | 23/26 [00:00<00:00, 43.18it/s]100%|##########| 26/26 [00:00<00:00, 39.03it/s]
Test: [   0/  26]	Loss 0.228 (0.228)	test_acc   0.89 (  0.89)	test_minacc   0.56 (  0.56)	test_majacc   0.94 (  0.94)	Loss_d 0.228 (0.228)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.219 (0.262)	test_acc   0.91 (  0.89)	test_minacc   0.54 (  0.52)	test_majacc   0.96 (  0.95)	Loss_d 0.219 (0.262)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.86 (  0.84)
Test: [  20/  26]	Loss 0.268 (0.259)	test_acc   0.90 (  0.89)	test_minacc   0.60 (  0.53)	test_majacc   0.96 (  0.95)	Loss_d 0.268 (0.259)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.60 (  0.53)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.81 (  0.83)
Test: [  26/  26]	Loss 0.223 (0.253)	test_acc   0.92 (  0.89)	test_minacc   0.64 (  0.55)	test_majacc   0.97 (  0.96)	Loss_d 0.223 (0.253)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.83 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.65it/s]
Test: [  0/  1]	Loss 1.755 (1.755)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.88 (  0.88)	Loss_d 1.755 (1.755)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 1.755 (1.755)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.88 (  0.88)	Loss_d 1.755 (1.755)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.47 (  0.47)
Overall Timing[ 11/  1]	epoch_time 0.0441 (0.0462)	validation_time 0.0005 (0.0010)	train_time 0.0436 (0.0449)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.8946000183224678, 0.40400001406669617)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 15%|#5        | 4/26 [00:00<00:01, 17.24it/s] 31%|###       | 8/26 [00:00<00:00, 25.95it/s] 46%|####6     | 12/26 [00:00<00:00, 27.21it/s] 62%|######1   | 16/26 [00:00<00:00, 29.82it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.48it/s] 92%|#########2| 24/26 [00:00<00:00, 32.66it/s]100%|##########| 26/26 [00:00<00:00, 27.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 240000
penalty weights 0.0
Epoch: [12][  26/  26]	Loss 0.253 (0.253)	train_nll   0.25 (  0.25)	train_penalty   0.01 (  0.01)	weight_norm  23.75 ( 23.60)	train_acc   0.89 (  0.89)	train_minacc   0.36 (  0.53)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 7.1718 (7.9011)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.99it/s] 23%|##3       | 6/26 [00:00<00:00, 23.39it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.39it/s] 42%|####2     | 11/26 [00:00<00:00, 32.44it/s] 65%|######5   | 17/26 [00:00<00:00, 36.54it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.54it/s] 85%|########4 | 22/26 [00:00<00:00, 39.65it/s]100%|##########| 26/26 [00:00<00:00, 31.84it/s]
Test: [   0/  26]	Loss 0.226 (0.226)	test_acc   0.89 (  0.89)	test_minacc   0.40 (  0.40)	test_majacc   0.96 (  0.96)	Loss_d 0.226 (0.226)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.228 (0.255)	test_acc   0.91 (  0.89)	test_minacc   0.44 (  0.43)	test_majacc   0.98 (  0.97)	Loss_d 0.228 (0.255)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.44 (  0.43)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.89 (  0.87)
Test: [  20/  26]	Loss 0.255 (0.253)	test_acc   0.89 (  0.89)	test_minacc   0.46 (  0.45)	test_majacc   0.97 (  0.97)	Loss_d 0.255 (0.253)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.46 (  0.45)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.85 (  0.87)
Test: [  26/  26]	Loss 0.223 (0.249)	test_acc   0.93 (  0.90)	test_minacc   0.59 (  0.46)	test_majacc   0.99 (  0.97)	Loss_d 0.223 (0.249)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.59 (  0.46)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.88 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.07it/s]
Test: [  0/  1]	Loss 1.750 (1.750)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.94 (  0.94)	Loss_d 1.750 (1.750)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 1.750 (1.750)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.94 (  0.94)	Loss_d 1.750 (1.750)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.64 (  0.64)
Overall Timing[ 12/  1]	epoch_time 0.0443 (0.0461)	validation_time 0.0003 (0.0009)	train_time 0.0440 (0.0449)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.8971000266075134, 0.3240000009536743)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.33it/s] 19%|#9        | 5/26 [00:00<00:01, 19.17it/s] 35%|###4      | 9/26 [00:00<00:00, 25.77it/s] 50%|#####     | 13/26 [00:00<00:00, 29.66it/s] 65%|######5   | 17/26 [00:00<00:00, 32.14it/s] 81%|########  | 21/26 [00:00<00:00, 33.49it/s] 96%|#########6| 25/26 [00:00<00:00, 33.84it/s]100%|##########| 26/26 [00:00<00:00, 27.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 240000
penalty weights 0.0
Epoch: [13][  26/  26]	Loss 0.232 (0.233)	train_nll   0.23 (  0.23)	train_penalty   0.01 (  0.01)	weight_norm  24.09 ( 23.92)	train_acc   0.93 (  0.91)	train_minacc   0.59 (  0.60)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 7.8873 (8.2140)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 15%|#5        | 4/26 [00:00<00:01, 16.75it/s] 35%|###4      | 9/26 [00:00<00:00, 29.13it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.13it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.61it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.61it/s] 92%|#########2| 24/26 [00:00<00:00, 40.94it/s]100%|##########| 26/26 [00:00<00:00, 32.35it/s]
Test: [   0/  26]	Loss 0.223 (0.223)	test_acc   0.91 (  0.91)	test_minacc   0.66 (  0.66)	test_majacc   0.95 (  0.95)	Loss_d 0.223 (0.223)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.213 (0.242)	test_acc   0.92 (  0.90)	test_minacc   0.65 (  0.61)	test_majacc   0.96 (  0.95)	Loss_d 0.213 (0.242)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.65 (  0.61)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.82 (  0.79)
Test: [  20/  26]	Loss 0.217 (0.232)	test_acc   0.91 (  0.90)	test_minacc   0.70 (  0.65)	test_majacc   0.95 (  0.95)	Loss_d 0.217 (0.232)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.70 (  0.65)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.74 (  0.78)
Test: [  26/  26]	Loss 0.187 (0.226)	test_acc   0.94 (  0.91)	test_minacc   0.72 (  0.66)	test_majacc   0.99 (  0.95)	Loss_d 0.187 (0.226)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.72 (  0.66)	test_majacc_d   0.99 (  0.95)	test_corr_d   0.80 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.56it/s]
Test: [  0/  1]	Loss 1.780 (1.780)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.91 (  0.91)	Loss_d 1.780 (1.780)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 1.780 (1.780)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.91 (  0.91)	Loss_d 1.780 (1.780)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.43 (  0.43)
Overall Timing[ 13/  1]	epoch_time 0.0439 (0.0459)	validation_time 0.0004 (0.0009)	train_time 0.0434 (0.0448)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.9082000186443329, 0.42000001668930054)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.52it/s] 19%|#9        | 5/26 [00:00<00:01, 20.99it/s] 35%|###4      | 9/26 [00:00<00:00, 27.13it/s] 50%|#####     | 13/26 [00:00<00:00, 30.03it/s] 65%|######5   | 17/26 [00:00<00:00, 31.66it/s] 81%|########  | 21/26 [00:00<00:00, 33.09it/s] 96%|#########6| 25/26 [00:00<00:00, 33.54it/s]100%|##########| 26/26 [00:00<00:00, 27.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 240000
penalty weights 0.0
Epoch: [14][  26/  26]	Loss 0.223 (0.225)	train_nll   0.22 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  24.47 ( 24.29)	train_acc   0.91 (  0.91)	train_minacc   0.49 (  0.61)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 8.0953 (8.1586)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.08it/s] 23%|##3       | 6/26 [00:00<00:00, 29.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.27it/s] 42%|####2     | 11/26 [00:00<00:00, 36.63it/s] 62%|######1   | 16/26 [00:00<00:00, 37.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.58it/s] 81%|########  | 21/26 [00:00<00:00, 40.36it/s]100%|##########| 26/26 [00:00<00:00, 42.74it/s]100%|##########| 26/26 [00:00<00:00, 34.83it/s]
Test: [   0/  26]	Loss 0.206 (0.206)	test_acc   0.90 (  0.90)	test_minacc   0.62 (  0.62)	test_majacc   0.94 (  0.94)	Loss_d 0.206 (0.206)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.203 (0.241)	test_acc   0.92 (  0.90)	test_minacc   0.56 (  0.61)	test_majacc   0.97 (  0.95)	Loss_d 0.203 (0.241)	test_acc_d   0.92 (  0.90)	test_minacc_d   0.56 (  0.61)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.83 (  0.78)
Test: [  20/  26]	Loss 0.190 (0.227)	test_acc   0.93 (  0.91)	test_minacc   0.75 (  0.66)	test_majacc   0.97 (  0.95)	Loss_d 0.190 (0.227)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.75 (  0.66)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.74 (  0.77)
Test: [  26/  26]	Loss 0.150 (0.216)	test_acc   0.94 (  0.91)	test_minacc   0.72 (  0.67)	test_majacc   0.99 (  0.96)	Loss_d 0.150 (0.216)	test_acc_d   0.94 (  0.91)	test_minacc_d   0.72 (  0.67)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.78 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.90it/s]
Test: [  0/  1]	Loss 1.975 (1.975)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 1.975 (1.975)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 1.975 (1.975)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 1.975 (1.975)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.44 (  0.44)
Overall Timing[ 14/  1]	epoch_time 0.0422 (0.0457)	validation_time 0.0007 (0.0009)	train_time 0.0415 (0.0445)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.9135000148415565, 0.3790000081062317)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.85it/s] 15%|#5        | 4/26 [00:00<00:01, 17.82it/s] 31%|###       | 8/26 [00:00<00:00, 24.40it/s] 46%|####6     | 12/26 [00:00<00:00, 27.61it/s] 62%|######1   | 16/26 [00:00<00:00, 29.69it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.34it/s] 92%|#########2| 24/26 [00:00<00:00, 33.77it/s]100%|##########| 26/26 [00:00<00:00, 27.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 240000
penalty weights 0.0
Epoch: [15][  26/  26]	Loss 0.165 (0.201)	train_nll   0.17 (  0.20)	train_penalty   0.00 (  0.00)	weight_norm  24.89 ( 24.69)	train_acc   0.93 (  0.92)	train_minacc   0.74 (  0.68)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 8.9272 (8.6870)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.04it/s] 27%|##6       | 7/26 [00:00<00:00, 23.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 23.68it/s] 50%|#####     | 13/26 [00:00<00:00, 33.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.53it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.53it/s] 92%|#########2| 24/26 [00:00<00:00, 39.51it/s]100%|##########| 26/26 [00:00<00:00, 31.77it/s]
Test: [   0/  26]	Loss 0.191 (0.191)	test_acc   0.91 (  0.91)	test_minacc   0.66 (  0.66)	test_majacc   0.95 (  0.95)	Loss_d 0.191 (0.191)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.166 (0.235)	test_acc   0.93 (  0.90)	test_minacc   0.69 (  0.66)	test_majacc   0.96 (  0.95)	Loss_d 0.166 (0.235)	test_acc_d   0.93 (  0.90)	test_minacc_d   0.69 (  0.66)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.81 (  0.78)
Test: [  20/  26]	Loss 0.191 (0.221)	test_acc   0.92 (  0.91)	test_minacc   0.71 (  0.67)	test_majacc   0.96 (  0.95)	Loss_d 0.191 (0.221)	test_acc_d   0.92 (  0.91)	test_minacc_d   0.71 (  0.67)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.76 (  0.77)
Test: [  26/  26]	Loss 0.115 (0.208)	test_acc   0.98 (  0.92)	test_minacc   0.87 (  0.69)	test_majacc   1.00 (  0.96)	Loss_d 0.115 (0.208)	test_acc_d   0.98 (  0.92)	test_minacc_d   0.87 (  0.69)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.77 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.26it/s]
Test: [  0/  1]	Loss 2.429 (2.429)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.90 (  0.90)	Loss_d 2.429 (2.429)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 2.429 (2.429)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.90 (  0.90)	Loss_d 2.429 (2.429)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.44 (  0.44)
Overall Timing[ 15/  1]	epoch_time 0.0399 (0.0453)	validation_time 0.0005 (0.0008)	train_time 0.0395 (0.0442)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.915400013744831, 0.38600000739097595)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.96it/s] 19%|#9        | 5/26 [00:00<00:00, 25.84it/s] 38%|###8      | 10/26 [00:00<00:00, 33.25it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.16it/s] 69%|######9   | 18/26 [00:00<00:00, 33.39it/s] 85%|########4 | 22/26 [00:00<00:00, 34.30it/s]100%|##########| 26/26 [00:00<00:00, 34.86it/s]100%|##########| 26/26 [00:00<00:00, 30.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 240000
penalty weights 0.0
Epoch: [16][  26/  26]	Loss 0.174 (0.191)	train_nll   0.17 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm  25.36 ( 25.13)	train_acc   0.92 (  0.92)	train_minacc   0.64 (  0.69)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 9.1198 (8.7498)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.98it/s] 23%|##3       | 6/26 [00:00<00:00, 31.61it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.61it/s] 42%|####2     | 11/26 [00:00<00:00, 38.79it/s] 62%|######1   | 16/26 [00:00<00:00, 42.82it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.82it/s] 81%|########  | 21/26 [00:00<00:00, 41.65it/s]100%|##########| 26/26 [00:00<00:00, 44.16it/s]100%|##########| 26/26 [00:00<00:00, 36.47it/s]
Test: [   0/  26]	Loss 0.124 (0.124)	test_acc   0.95 (  0.95)	test_minacc   0.82 (  0.82)	test_majacc   0.97 (  0.97)	Loss_d 0.124 (0.124)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.125 (0.205)	test_acc   0.96 (  0.92)	test_minacc   0.73 (  0.70)	test_majacc   0.99 (  0.95)	Loss_d 0.125 (0.205)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.73 (  0.70)	test_majacc_d   0.99 (  0.95)	test_corr_d   0.83 (  0.77)
Test: [  20/  26]	Loss 0.139 (0.189)	test_acc   0.94 (  0.92)	test_minacc   0.71 (  0.73)	test_majacc   0.98 (  0.96)	Loss_d 0.139 (0.189)	test_acc_d   0.94 (  0.92)	test_minacc_d   0.71 (  0.73)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.78 (  0.77)
Test: [  26/  26]	Loss 0.098 (0.177)	test_acc   0.97 (  0.93)	test_minacc   0.90 (  0.75)	test_majacc   0.98 (  0.96)	Loss_d 0.098 (0.177)	test_acc_d   0.97 (  0.93)	test_minacc_d   0.90 (  0.75)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.76 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.51it/s]
Test: [  0/  1]	Loss 2.500 (2.500)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 2.500 (2.500)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 2.500 (2.500)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 2.500 (2.500)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.41 (  0.41)
Overall Timing[ 16/  1]	epoch_time 0.0396 (0.0450)	validation_time 0.0003 (0.0008)	train_time 0.0392 (0.0439)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.9299000205993653, 0.4130000174045563)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.74it/s] 27%|##6       | 7/26 [00:00<00:00, 28.53it/s] 42%|####2     | 11/26 [00:00<00:00, 31.02it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.95it/s] 88%|########8 | 23/26 [00:00<00:00, 33.83it/s]100%|##########| 26/26 [00:00<00:00, 30.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 240000
penalty weights 0.0
Epoch: [17][  26/  26]	Loss 0.105 (0.178)	train_nll   0.10 (  0.18)	train_penalty   0.00 (  0.00)	weight_norm  25.86 ( 25.63)	train_acc   0.96 (  0.93)	train_minacc   0.74 (  0.72)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 9.0549 (9.0302)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.48it/s] 23%|##3       | 6/26 [00:00<00:00, 21.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.71it/s] 42%|####2     | 11/26 [00:00<00:00, 30.19it/s] 62%|######1   | 16/26 [00:00<00:00, 32.89it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.89it/s] 81%|########  | 21/26 [00:00<00:00, 36.39it/s]100%|##########| 26/26 [00:00<00:00, 40.25it/s]100%|##########| 26/26 [00:00<00:00, 30.24it/s]
Test: [   0/  26]	Loss 0.158 (0.158)	test_acc   0.94 (  0.94)	test_minacc   0.68 (  0.68)	test_majacc   0.98 (  0.98)	Loss_d 0.158 (0.158)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.135 (0.169)	test_acc   0.96 (  0.93)	test_minacc   0.77 (  0.66)	test_majacc   0.98 (  0.98)	Loss_d 0.135 (0.169)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.77 (  0.66)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.85 (  0.83)
Test: [  20/  26]	Loss 0.117 (0.155)	test_acc   0.95 (  0.94)	test_minacc   0.70 (  0.68)	test_majacc   1.00 (  0.99)	Loss_d 0.117 (0.155)	test_acc_d   0.95 (  0.94)	test_minacc_d   0.70 (  0.68)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.81 (  0.82)
Test: [  26/  26]	Loss 0.069 (0.146)	test_acc   0.98 (  0.94)	test_minacc   0.87 (  0.70)	test_majacc   1.00 (  0.99)	Loss_d 0.069 (0.146)	test_acc_d   0.98 (  0.94)	test_minacc_d   0.87 (  0.70)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.78 (  0.82)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.52it/s]
Test: [  0/  1]	Loss 2.773 (2.773)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.93 (  0.93)	Loss_d 2.773 (2.773)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 2.773 (2.773)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.93 (  0.93)	Loss_d 2.773 (2.773)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.56 (  0.56)
Overall Timing[ 17/  1]	epoch_time 0.0410 (0.0448)	validation_time 0.0005 (0.0008)	train_time 0.0406 (0.0437)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.9449000224471092, 0.35500001907348633)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.53it/s] 19%|#9        | 5/26 [00:00<00:00, 23.44it/s] 35%|###4      | 9/26 [00:00<00:00, 28.48it/s] 50%|#####     | 13/26 [00:00<00:00, 30.92it/s] 65%|######5   | 17/26 [00:00<00:00, 32.11it/s] 81%|########  | 21/26 [00:00<00:00, 33.52it/s] 96%|#########6| 25/26 [00:00<00:00, 34.39it/s]100%|##########| 26/26 [00:00<00:00, 28.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 240000
penalty weights 0.0
Epoch: [18][  26/  26]	Loss 0.103 (0.159)	train_nll   0.10 (  0.16)	train_penalty   0.00 (  0.00)	weight_norm  26.41 ( 26.13)	train_acc   0.95 (  0.94)	train_minacc   0.79 (  0.76)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 9.1687 (9.4417)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.32it/s] 23%|##3       | 6/26 [00:00<00:00, 30.52it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.52it/s] 42%|####2     | 11/26 [00:00<00:00, 34.05it/s] 62%|######1   | 16/26 [00:00<00:00, 38.34it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.34it/s] 81%|########  | 21/26 [00:00<00:00, 40.56it/s]100%|##########| 26/26 [00:00<00:00, 43.24it/s]100%|##########| 26/26 [00:00<00:00, 35.73it/s]
Test: [   0/  26]	Loss 0.116 (0.116)	test_acc   0.94 (  0.94)	test_minacc   0.72 (  0.72)	test_majacc   0.97 (  0.97)	Loss_d 0.116 (0.116)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.107 (0.142)	test_acc   0.97 (  0.94)	test_minacc   0.83 (  0.71)	test_majacc   0.99 (  0.99)	Loss_d 0.107 (0.142)	test_acc_d   0.97 (  0.94)	test_minacc_d   0.83 (  0.71)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.83 (  0.81)
Test: [  20/  26]	Loss 0.095 (0.132)	test_acc   0.97 (  0.95)	test_minacc   0.83 (  0.74)	test_majacc   0.99 (  0.99)	Loss_d 0.095 (0.132)	test_acc_d   0.97 (  0.95)	test_minacc_d   0.83 (  0.74)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.79 (  0.80)
Test: [  26/  26]	Loss 0.073 (0.125)	test_acc   0.98 (  0.95)	test_minacc   0.85 (  0.76)	test_majacc   1.00 (  0.99)	Loss_d 0.073 (0.125)	test_acc_d   0.98 (  0.95)	test_minacc_d   0.85 (  0.76)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.79 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.12it/s]
Test: [  0/  1]	Loss 2.741 (2.741)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 2.741 (2.741)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 2.741 (2.741)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 2.741 (2.741)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.48 (  0.48)
Overall Timing[ 18/  1]	epoch_time 0.0371 (0.0444)	validation_time 0.0004 (0.0008)	train_time 0.0367 (0.0434)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.9527000196576119, 0.3760000169277191)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.63it/s] 19%|#9        | 5/26 [00:00<00:01, 17.49it/s] 35%|###4      | 9/26 [00:00<00:00, 24.30it/s] 50%|#####     | 13/26 [00:00<00:00, 27.62it/s] 65%|######5   | 17/26 [00:00<00:00, 29.58it/s] 81%|########  | 21/26 [00:00<00:00, 30.66it/s] 96%|#########6| 25/26 [00:00<00:00, 31.89it/s]100%|##########| 26/26 [00:01<00:00, 25.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 240000
penalty weights 0.0
Epoch: [19][  26/  26]	Loss 0.099 (0.140)	train_nll   0.10 (  0.14)	train_penalty   0.00 (  0.00)	weight_norm  26.93 ( 26.68)	train_acc   0.97 (  0.94)	train_minacc   0.92 (  0.78)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 9.6111 (9.7279)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.73it/s] 27%|##6       | 7/26 [00:00<00:00, 32.62it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.62it/s] 46%|####6     | 12/26 [00:00<00:00, 38.76it/s] 65%|######5   | 17/26 [00:00<00:00, 41.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.81it/s] 85%|########4 | 22/26 [00:00<00:00, 43.52it/s]100%|##########| 26/26 [00:00<00:00, 37.00it/s]
Test: [   0/  26]	Loss 0.135 (0.135)	test_acc   0.93 (  0.93)	test_minacc   0.76 (  0.76)	test_majacc   0.96 (  0.96)	Loss_d 0.135 (0.135)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.101 (0.142)	test_acc   0.96 (  0.94)	test_minacc   0.81 (  0.77)	test_majacc   0.98 (  0.97)	Loss_d 0.101 (0.142)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.81 (  0.77)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.82 (  0.77)
Test: [  20/  26]	Loss 0.097 (0.130)	test_acc   0.97 (  0.95)	test_minacc   0.86 (  0.79)	test_majacc   0.99 (  0.97)	Loss_d 0.097 (0.130)	test_acc_d   0.97 (  0.95)	test_minacc_d   0.86 (  0.79)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.76 (  0.76)
Test: [  26/  26]	Loss 0.064 (0.123)	test_acc   1.00 (  0.95)	test_minacc   0.97 (  0.81)	test_majacc   1.00 (  0.98)	Loss_d 0.064 (0.123)	test_acc_d   1.00 (  0.95)	test_minacc_d   0.97 (  0.81)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.76 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.41it/s]
Test: [  0/  1]	Loss 2.730 (2.730)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 2.730 (2.730)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 2.730 (2.730)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.94 (  0.94)	Loss_d 2.730 (2.730)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.43 (  0.43)
Overall Timing[ 19/  1]	epoch_time 0.0390 (0.0441)	validation_time 0.0004 (0.0008)	train_time 0.0386 (0.0431)
record: (train_acc, test_acc) (0.8856000191569329, 0.42100003361701965)
last accs (train_acc, test_acc) (0.9521000157594681, 0.4000000059604645)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.00it/s] 12%|#1        | 3/26 [00:00<00:02, 10.49it/s] 27%|##6       | 7/26 [00:00<00:00, 20.00it/s] 42%|####2     | 11/26 [00:00<00:00, 25.62it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.06it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.12it/s] 88%|########8 | 23/26 [00:00<00:00, 32.75it/s]100%|##########| 26/26 [00:01<00:00, 25.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 240000
penalty weights 0.0
Epoch: [20][  26/  26]	Loss 0.088 (0.136)	train_nll   0.09 (  0.14)	train_penalty   0.00 (  0.00)	weight_norm  27.48 ( 27.22)	train_acc   0.97 (  0.95)	train_minacc   0.85 (  0.79)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 9.7671 (9.8638)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.78it/s] 23%|##3       | 6/26 [00:00<00:00, 30.74it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.74it/s] 42%|####2     | 11/26 [00:00<00:00, 37.85it/s] 62%|######1   | 16/26 [00:00<00:00, 41.69it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.69it/s] 81%|########  | 21/26 [00:00<00:00, 40.04it/s]100%|##########| 26/26 [00:00<00:00, 42.66it/s]100%|##########| 26/26 [00:00<00:00, 35.39it/s]
Test: [   0/  26]	Loss 0.124 (0.124)	test_acc   0.94 (  0.94)	test_minacc   0.86 (  0.86)	test_majacc   0.95 (  0.95)	Loss_d 0.124 (0.124)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.084 (0.124)	test_acc   0.97 (  0.95)	test_minacc   0.96 (  0.87)	test_majacc   0.98 (  0.96)	Loss_d 0.084 (0.124)	test_acc_d   0.97 (  0.95)	test_minacc_d   0.96 (  0.87)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.75 (  0.71)
Test: [  20/  26]	Loss 0.077 (0.113)	test_acc   0.97 (  0.96)	test_minacc   0.94 (  0.90)	test_majacc   0.98 (  0.97)	Loss_d 0.077 (0.113)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.94 (  0.90)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.69 (  0.71)
Test: [  26/  26]	Loss 0.045 (0.106)	test_acc   1.00 (  0.96)	test_minacc   0.97 (  0.91)	test_majacc   1.00 (  0.97)	Loss_d 0.045 (0.106)	test_acc_d   1.00 (  0.96)	test_minacc_d   0.97 (  0.91)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.72 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.97it/s]
Test: [  0/  1]	Loss 2.442 (2.442)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.91 (  0.91)	Loss_d 2.442 (2.442)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 2.442 (2.442)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.91 (  0.91)	Loss_d 2.442 (2.442)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.23 (  0.23)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/120/checkpoints/model_best.pth
Overall Timing[ 20/  1]	epoch_time 0.0391 (0.0438)	validation_time 0.0003 (0.0007)	train_time 0.0387 (0.0429)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.54it/s] 19%|#9        | 5/26 [00:00<00:00, 22.16it/s] 35%|###4      | 9/26 [00:00<00:00, 27.60it/s] 50%|#####     | 13/26 [00:00<00:00, 30.12it/s] 65%|######5   | 17/26 [00:00<00:00, 31.51it/s] 81%|########  | 21/26 [00:00<00:00, 32.67it/s] 96%|#########6| 25/26 [00:00<00:00, 32.43it/s]100%|##########| 26/26 [00:00<00:00, 27.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 240000
penalty weights 0.0
Epoch: [21][  26/  26]	Loss 0.082 (0.104)	train_nll   0.08 (  0.10)	train_penalty   0.00 (  0.00)	weight_norm  27.99 ( 27.75)	train_acc   0.97 (  0.96)	train_minacc   0.85 (  0.84)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 10.9690 (10.3400)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.54it/s] 27%|##6       | 7/26 [00:00<00:00, 35.48it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.48it/s] 46%|####6     | 12/26 [00:00<00:00, 41.01it/s] 65%|######5   | 17/26 [00:00<00:00, 42.02it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.02it/s] 88%|########8 | 23/26 [00:00<00:00, 46.18it/s]100%|##########| 26/26 [00:00<00:00, 38.79it/s]
Test: [   0/  26]	Loss 0.080 (0.080)	test_acc   0.97 (  0.97)	test_minacc   0.90 (  0.90)	test_majacc   0.98 (  0.98)	Loss_d 0.080 (0.080)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.070 (0.093)	test_acc   0.97 (  0.97)	test_minacc   0.81 (  0.86)	test_majacc   1.00 (  0.98)	Loss_d 0.070 (0.093)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.81 (  0.86)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.82 (  0.75)
Test: [  20/  26]	Loss 0.051 (0.074)	test_acc   0.98 (  0.97)	test_minacc   0.94 (  0.89)	test_majacc   0.99 (  0.99)	Loss_d 0.051 (0.074)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.94 (  0.89)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.74)
Test: [  26/  26]	Loss 0.021 (0.066)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.91)	test_majacc   1.00 (  0.99)	Loss_d 0.021 (0.066)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.91)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.49it/s]
Test: [  0/  1]	Loss 3.373 (3.373)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.92 (  0.92)	Loss_d 3.373 (3.373)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 3.373 (3.373)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.92 (  0.92)	Loss_d 3.373 (3.373)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.39 (  0.39)
Overall Timing[ 21/  1]	epoch_time 0.0406 (0.0437)	validation_time 0.0004 (0.0007)	train_time 0.0401 (0.0428)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9767000281214714, 0.40700000524520874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.32it/s] 19%|#9        | 5/26 [00:00<00:00, 24.23it/s] 35%|###4      | 9/26 [00:00<00:00, 29.71it/s] 50%|#####     | 13/26 [00:00<00:00, 32.02it/s] 65%|######5   | 17/26 [00:00<00:00, 32.93it/s] 81%|########  | 21/26 [00:00<00:00, 34.13it/s] 96%|#########6| 25/26 [00:00<00:00, 34.85it/s]100%|##########| 26/26 [00:00<00:00, 29.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 240000
penalty weights 0.0
Epoch: [22][  26/  26]	Loss 0.030 (0.077)	train_nll   0.03 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  28.44 ( 28.22)	train_acc   0.98 (  0.97)	train_minacc   0.95 (  0.89)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 11.7945 (11.4405)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.37it/s] 15%|#5        | 4/26 [00:00<00:01, 19.27it/s] 35%|###4      | 9/26 [00:00<00:00, 31.70it/s]                                               35%|###4      | 9/26 [00:00<00:00, 31.70it/s] 50%|#####     | 13/26 [00:00<00:00, 34.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 38.11it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 38.11it/s] 92%|#########2| 24/26 [00:00<00:00, 41.17it/s]100%|##########| 26/26 [00:00<00:00, 33.61it/s]
Test: [   0/  26]	Loss 0.067 (0.067)	test_acc   0.98 (  0.98)	test_minacc   0.90 (  0.90)	test_majacc   0.99 (  0.99)	Loss_d 0.067 (0.067)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.100 (0.071)	test_acc   0.96 (  0.97)	test_minacc   0.79 (  0.89)	test_majacc   0.99 (  0.99)	Loss_d 0.100 (0.071)	test_acc_d   0.96 (  0.97)	test_minacc_d   0.79 (  0.89)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.81 (  0.73)
Test: [  20/  26]	Loss 0.041 (0.064)	test_acc   0.98 (  0.98)	test_minacc   0.97 (  0.91)	test_majacc   0.98 (  0.99)	Loss_d 0.041 (0.064)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.97 (  0.91)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.70 (  0.73)
Test: [  26/  26]	Loss 0.014 (0.058)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.91)	test_majacc   1.00 (  0.99)	Loss_d 0.014 (0.058)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.91)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.98it/s]
Test: [  0/  1]	Loss 3.823 (3.823)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 3.823 (3.823)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 3.823 (3.823)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 3.823 (3.823)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.39 (  0.39)
Overall Timing[ 22/  1]	epoch_time 0.0387 (0.0435)	validation_time 0.0003 (0.0007)	train_time 0.0383 (0.0426)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9778000268936157, 0.40300002694129944)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 23.46it/s] 27%|##6       | 7/26 [00:00<00:00, 29.80it/s] 42%|####2     | 11/26 [00:00<00:00, 33.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 35.19it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.72it/s] 88%|########8 | 23/26 [00:00<00:00, 37.60it/s]100%|##########| 26/26 [00:00<00:00, 33.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 240000
penalty weights 0.0
l1 at pgd_anneal_iters 11.837085723876953
set z to 11.245231437683104
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 240000
penalty weights 0.0
Epoch: [23][  26/  26]	Loss 0.055 (0.057)	train_nll   0.06 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm  28.87 ( 28.66)	train_acc   0.98 (  0.98)	train_minacc   1.00 (  0.92)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 12.8405 (12.2623)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.16it/s] 27%|##6       | 7/26 [00:00<00:00, 30.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.54it/s] 50%|#####     | 13/26 [00:00<00:00, 38.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.90it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.90it/s] 96%|#########6| 25/26 [00:00<00:00, 45.70it/s]100%|##########| 26/26 [00:00<00:00, 37.15it/s]
Test: [   0/  26]	Loss 0.047 (0.047)	test_acc   0.97 (  0.97)	test_minacc   0.94 (  0.94)	test_majacc   0.97 (  0.97)	Loss_d 0.047 (0.047)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.076 (0.070)	test_acc   0.97 (  0.97)	test_minacc   0.88 (  0.91)	test_majacc   0.98 (  0.98)	Loss_d 0.076 (0.070)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.88 (  0.91)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.71)
Test: [  20/  26]	Loss 0.065 (0.069)	test_acc   0.97 (  0.97)	test_minacc   0.95 (  0.93)	test_majacc   0.97 (  0.98)	Loss_d 0.065 (0.069)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.95 (  0.93)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.67 (  0.70)
Test: [  26/  26]	Loss 0.010 (0.060)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  0.98)	Loss_d 0.010 (0.060)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.39it/s]
Test: [  0/  1]	Loss 4.054 (4.054)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 4.054 (4.054)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 4.054 (4.054)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 4.054 (4.054)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.27 (  0.27)
Overall Timing[ 23/  1]	epoch_time 0.0378 (0.0432)	validation_time 0.0004 (0.0007)	train_time 0.0374 (0.0424)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9764000246524811, 0.453000009059906)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.16it/s] 19%|#9        | 5/26 [00:00<00:01, 14.34it/s] 38%|###8      | 10/26 [00:00<00:00, 23.60it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.86it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.70it/s] 96%|#########6| 25/26 [00:00<00:00, 35.15it/s]100%|##########| 26/26 [00:00<00:00, 26.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 240000
penalty weights 0.0
Epoch: [24][  26/  26]	Loss 0.026 (0.049)	train_nll   0.03 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm  29.33 ( 29.11)	train_acc   0.99 (  0.98)	train_minacc   0.95 (  0.93)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.2495 (13.0130)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.47it/s] 35%|###4      | 9/26 [00:00<00:00, 40.68it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.68it/s] 58%|#####7    | 15/26 [00:00<00:00, 48.30it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 48.30it/s] 81%|########  | 21/26 [00:00<00:00, 48.04it/s]100%|##########| 26/26 [00:00<00:00, 42.68it/s]
Test: [   0/  26]	Loss 0.029 (0.029)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.94)	test_majacc   0.99 (  0.99)	Loss_d 0.029 (0.029)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.060 (0.073)	test_acc   0.97 (  0.97)	test_minacc   0.94 (  0.93)	test_majacc   0.97 (  0.98)	Loss_d 0.060 (0.073)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.94 (  0.93)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.040 (0.066)	test_acc   0.99 (  0.97)	test_minacc   0.98 (  0.94)	test_majacc   0.99 (  0.98)	Loss_d 0.040 (0.066)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.98 (  0.94)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.67 (  0.69)
Test: [  26/  26]	Loss 0.009 (0.059)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.98)	Loss_d 0.009 (0.059)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.35it/s]
Test: [  0/  1]	Loss 4.489 (4.489)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.91 (  0.91)	Loss_d 4.489 (4.489)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 4.489 (4.489)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.91 (  0.91)	Loss_d 4.489 (4.489)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.30 (  0.30)
Overall Timing[ 24/  1]	epoch_time 0.0379 (0.0430)	validation_time 0.0006 (0.0007)	train_time 0.0372 (0.0422)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9767000257968903, 0.4390000104904175)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.36it/s] 23%|##3       | 6/26 [00:00<00:00, 29.81it/s] 38%|###8      | 10/26 [00:00<00:00, 32.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.41it/s] 69%|######9   | 18/26 [00:00<00:00, 33.88it/s] 85%|########4 | 22/26 [00:00<00:00, 35.08it/s]100%|##########| 26/26 [00:00<00:00, 31.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 240000
penalty weights 0.0
Epoch: [25][  26/  26]	Loss 0.029 (0.066)	train_nll   0.03 (  0.07)	train_penalty   0.00 (  0.00)	weight_norm  29.85 ( 29.58)	train_acc   0.99 (  0.98)	train_minacc   1.00 (  0.91)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 12.0391 (12.7392)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.43it/s] 27%|##6       | 7/26 [00:00<00:00, 26.72it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.72it/s] 46%|####6     | 12/26 [00:00<00:00, 34.34it/s] 69%|######9   | 18/26 [00:00<00:00, 41.46it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.46it/s] 88%|########8 | 23/26 [00:00<00:00, 41.93it/s]100%|##########| 26/26 [00:00<00:00, 35.52it/s]
Test: [   0/  26]	Loss 0.052 (0.052)	test_acc   0.98 (  0.98)	test_minacc   0.94 (  0.94)	test_majacc   0.99 (  0.99)	Loss_d 0.052 (0.052)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.94 (  0.94)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.057 (0.066)	test_acc   0.97 (  0.97)	test_minacc   0.85 (  0.91)	test_majacc   0.99 (  0.98)	Loss_d 0.057 (0.066)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.85 (  0.91)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.78 (  0.72)
Test: [  20/  26]	Loss 0.035 (0.063)	test_acc   0.98 (  0.98)	test_minacc   0.98 (  0.92)	test_majacc   0.98 (  0.98)	Loss_d 0.035 (0.063)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.98 (  0.92)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.67 (  0.71)
Test: [  26/  26]	Loss 0.013 (0.055)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.93)	test_majacc   1.00 (  0.99)	Loss_d 0.013 (0.055)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.93)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.08it/s]
Test: [  0/  1]	Loss 3.853 (3.853)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 3.853 (3.853)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 3.853 (3.853)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 3.853 (3.853)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.30 (  0.30)
Overall Timing[ 25/  1]	epoch_time 0.0391 (0.0429)	validation_time 0.0004 (0.0007)	train_time 0.0386 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9792000314593315, 0.453000009059906)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.79it/s] 15%|#5        | 4/26 [00:00<00:02, 10.80it/s] 31%|###       | 8/26 [00:00<00:00, 18.88it/s] 46%|####6     | 12/26 [00:00<00:00, 24.26it/s] 62%|######1   | 16/26 [00:00<00:00, 27.71it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.24it/s] 92%|#########2| 24/26 [00:00<00:00, 32.20it/s]100%|##########| 26/26 [00:01<00:00, 23.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 240000
penalty weights 0.0
Epoch: [26][  26/  26]	Loss 0.011 (0.051)	train_nll   0.01 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm  30.28 ( 30.08)	train_acc   1.00 (  0.98)	train_minacc   1.00 (  0.93)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.6328 (12.3864)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.03it/s] 15%|#5        | 4/26 [00:00<00:01, 18.49it/s] 38%|###8      | 10/26 [00:00<00:00, 34.24it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.24it/s] 62%|######1   | 16/26 [00:00<00:00, 40.64it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.64it/s] 81%|########  | 21/26 [00:00<00:00, 42.05it/s]100%|##########| 26/26 [00:00<00:00, 44.24it/s]100%|##########| 26/26 [00:00<00:00, 34.06it/s]
Test: [   0/  26]	Loss 0.042 (0.042)	test_acc   0.98 (  0.98)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.042 (0.042)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.017 (0.036)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.017 (0.036)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.69)
Test: [  20/  26]	Loss 0.017 (0.034)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.017 (0.034)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.69)
Test: [  26/  26]	Loss 0.006 (0.031)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.006 (0.031)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.58it/s]
Test: [  0/  1]	Loss 3.772 (3.772)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.91 (  0.91)	Loss_d 3.772 (3.772)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 3.772 (3.772)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.91 (  0.91)	Loss_d 3.772 (3.772)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.21 (  0.21)
Overall Timing[ 26/  1]	epoch_time 0.0442 (0.0429)	validation_time 0.0003 (0.0007)	train_time 0.0439 (0.0421)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9891000413298607, 0.47700002789497375)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.76it/s] 23%|##3       | 6/26 [00:00<00:00, 25.04it/s] 38%|###8      | 10/26 [00:00<00:00, 30.68it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.72it/s] 69%|######9   | 18/26 [00:00<00:00, 34.86it/s] 85%|########4 | 22/26 [00:00<00:00, 36.48it/s]100%|##########| 26/26 [00:00<00:00, 37.21it/s]100%|##########| 26/26 [00:00<00:00, 30.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 240000
penalty weights 0.0
Epoch: [27][  26/  26]	Loss 0.029 (0.043)	train_nll   0.03 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  30.67 ( 30.49)	train_acc   0.99 (  0.98)	train_minacc   0.92 (  0.94)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.0221 (12.8832)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 27%|##6       | 7/26 [00:00<00:00, 30.94it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.94it/s] 46%|####6     | 12/26 [00:00<00:00, 37.03it/s] 65%|######5   | 17/26 [00:00<00:00, 39.03it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.03it/s] 88%|########8 | 23/26 [00:00<00:00, 43.46it/s]100%|##########| 26/26 [00:00<00:00, 35.57it/s]
Test: [   0/  26]	Loss 0.032 (0.032)	test_acc   0.98 (  0.98)	test_minacc   0.96 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.032 (0.032)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.96 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.030 (0.051)	test_acc   0.99 (  0.98)	test_minacc   0.96 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.030 (0.051)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.96 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.77 (  0.70)
Test: [  20/  26]	Loss 0.022 (0.042)	test_acc   0.99 (  0.98)	test_minacc   1.00 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.022 (0.042)	test_acc_d   0.99 (  0.98)	test_minacc_d   1.00 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.70)
Test: [  26/  26]	Loss 0.008 (0.036)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.036)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.47it/s]
Test: [  0/  1]	Loss 4.228 (4.228)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 4.228 (4.228)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 4.228 (4.228)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 4.228 (4.228)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.29 (  0.29)
Overall Timing[ 27/  1]	epoch_time 0.0411 (0.0429)	validation_time 0.0004 (0.0007)	train_time 0.0406 (0.0421)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9871000298261643, 0.44600000977516174)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 19%|#9        | 5/26 [00:00<00:00, 21.16it/s] 35%|###4      | 9/26 [00:00<00:00, 26.18it/s] 50%|#####     | 13/26 [00:00<00:00, 29.30it/s] 65%|######5   | 17/26 [00:00<00:00, 31.26it/s] 81%|########  | 21/26 [00:00<00:00, 32.57it/s] 96%|#########6| 25/26 [00:00<00:00, 33.78it/s]100%|##########| 26/26 [00:00<00:00, 27.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 240000
penalty weights 0.0
Epoch: [28][  26/  26]	Loss 0.049 (0.035)	train_nll   0.05 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  31.05 ( 30.87)	train_acc   0.98 (  0.99)	train_minacc   0.92 (  0.95)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 13.5957 (13.3591)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.62it/s] 27%|##6       | 7/26 [00:00<00:00, 33.29it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.29it/s] 46%|####6     | 12/26 [00:00<00:00, 39.15it/s] 65%|######5   | 17/26 [00:00<00:00, 42.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.33it/s] 85%|########4 | 22/26 [00:00<00:00, 40.88it/s]100%|##########| 26/26 [00:00<00:00, 36.90it/s]
Test: [   0/  26]	Loss 0.042 (0.042)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.042 (0.042)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.050 (0.064)	test_acc   0.98 (  0.98)	test_minacc   0.90 (  0.93)	test_majacc   0.99 (  0.98)	Loss_d 0.050 (0.064)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.90 (  0.93)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.77 (  0.70)
Test: [  20/  26]	Loss 0.011 (0.047)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.011 (0.047)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.004 (0.040)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.004 (0.040)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 55.14it/s]
Test: [  0/  1]	Loss 4.581 (4.581)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.93 (  0.93)	Loss_d 4.581 (4.581)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 4.581 (4.581)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.93 (  0.93)	Loss_d 4.581 (4.581)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.30 (  0.30)
Overall Timing[ 28/  1]	epoch_time 0.0367 (0.0426)	validation_time 0.0005 (0.0007)	train_time 0.0362 (0.0419)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9854000241160393, 0.4400000274181366)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.43it/s] 23%|##3       | 6/26 [00:00<00:00, 26.68it/s] 38%|###8      | 10/26 [00:00<00:00, 29.98it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.95it/s] 69%|######9   | 18/26 [00:00<00:00, 32.91it/s] 85%|########4 | 22/26 [00:00<00:00, 33.67it/s]100%|##########| 26/26 [00:00<00:00, 34.91it/s]100%|##########| 26/26 [00:00<00:00, 29.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 240000
penalty weights 0.0
Epoch: [29][  26/  26]	Loss 0.023 (0.037)	train_nll   0.02 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  31.45 ( 31.25)	train_acc   0.99 (  0.99)	train_minacc   0.95 (  0.95)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.6251 (13.7368)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.52it/s] 27%|##6       | 7/26 [00:00<00:00, 34.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.79it/s] 46%|####6     | 12/26 [00:00<00:00, 40.51it/s] 65%|######5   | 17/26 [00:00<00:00, 39.46it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.46it/s] 85%|########4 | 22/26 [00:00<00:00, 42.22it/s]100%|##########| 26/26 [00:00<00:00, 36.94it/s]
Test: [   0/  26]	Loss 0.082 (0.082)	test_acc   0.96 (  0.96)	test_minacc   0.86 (  0.86)	test_majacc   0.98 (  0.98)	Loss_d 0.082 (0.082)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.86 (  0.86)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.067 (0.079)	test_acc   0.98 (  0.97)	test_minacc   0.92 (  0.92)	test_majacc   0.99 (  0.98)	Loss_d 0.067 (0.079)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.76 (  0.70)
Test: [  20/  26]	Loss 0.037 (0.072)	test_acc   0.98 (  0.97)	test_minacc   0.97 (  0.94)	test_majacc   0.99 (  0.98)	Loss_d 0.037 (0.072)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.97 (  0.94)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.67 (  0.70)
Test: [  26/  26]	Loss 0.007 (0.061)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.98)	Loss_d 0.007 (0.061)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.03it/s]
Test: [  0/  1]	Loss 4.806 (4.806)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.94 (  0.94)	Loss_d 4.806 (4.806)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 4.806 (4.806)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.94 (  0.94)	Loss_d 4.806 (4.806)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.34 (  0.34)
Overall Timing[ 29/  1]	epoch_time 0.0434 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0429 (0.0419)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9781000233888626, 0.42600002884864807)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.99it/s] 19%|#9        | 5/26 [00:00<00:00, 24.81it/s] 35%|###4      | 9/26 [00:00<00:00, 29.79it/s] 50%|#####     | 13/26 [00:00<00:00, 31.71it/s] 65%|######5   | 17/26 [00:00<00:00, 33.15it/s] 81%|########  | 21/26 [00:00<00:00, 33.98it/s] 96%|#########6| 25/26 [00:00<00:00, 34.60it/s]100%|##########| 26/26 [00:00<00:00, 29.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 240000
penalty weights 0.0
Epoch: [30][  26/  26]	Loss 0.009 (0.039)	train_nll   0.01 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  31.88 ( 31.67)	train_acc   1.00 (  0.98)	train_minacc   1.00 (  0.94)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.4506 (13.4989)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.13it/s] 27%|##6       | 7/26 [00:00<00:00, 35.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.58it/s] 46%|####6     | 12/26 [00:00<00:00, 41.09it/s] 65%|######5   | 17/26 [00:00<00:00, 39.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.35it/s] 85%|########4 | 22/26 [00:00<00:00, 41.93it/s]100%|##########| 26/26 [00:00<00:00, 36.45it/s]
Test: [   0/  26]	Loss 0.036 (0.036)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.036 (0.036)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.041 (0.056)	test_acc   0.98 (  0.98)	test_minacc   0.96 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.041 (0.056)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.96 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.71)
Test: [  20/  26]	Loss 0.017 (0.046)	test_acc   1.00 (  0.98)	test_minacc   0.98 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.017 (0.046)	test_acc_d   1.00 (  0.98)	test_minacc_d   0.98 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.71)
Test: [  26/  26]	Loss 0.004 (0.039)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.004 (0.039)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.70it/s]
Test: [  0/  1]	Loss 4.707 (4.707)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 4.707 (4.707)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 4.707 (4.707)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.95 (  0.95)	Loss_d 4.707 (4.707)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.36 (  0.36)
Overall Timing[ 30/  1]	epoch_time 0.0446 (0.0427)	validation_time 0.0003 (0.0006)	train_time 0.0442 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9855000252723694, 0.4310000240802765)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 12%|#1        | 3/26 [00:00<00:02, 11.20it/s] 27%|##6       | 7/26 [00:00<00:00, 20.85it/s] 42%|####2     | 11/26 [00:00<00:00, 25.79it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.95it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.75it/s] 88%|########8 | 23/26 [00:00<00:00, 31.90it/s]100%|##########| 26/26 [00:01<00:00, 25.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 240000
penalty weights 0.0
Epoch: [31][  26/  26]	Loss 0.043 (0.036)	train_nll   0.04 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  32.24 ( 32.07)	train_acc   0.98 (  0.99)	train_minacc   0.92 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.9835 (13.9292)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.91it/s] 31%|###       | 8/26 [00:00<00:00, 42.18it/s]                                               31%|###       | 8/26 [00:00<00:00, 42.18it/s] 50%|#####     | 13/26 [00:00<00:00, 45.67it/s] 69%|######9   | 18/26 [00:00<00:00, 45.03it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.03it/s] 88%|########8 | 23/26 [00:00<00:00, 46.61it/s]100%|##########| 26/26 [00:00<00:00, 41.20it/s]
Test: [   0/  26]	Loss 0.032 (0.032)	test_acc   0.99 (  0.99)	test_minacc   0.90 (  0.90)	test_majacc   1.00 (  1.00)	Loss_d 0.032 (0.032)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.90 (  0.90)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.057 (0.055)	test_acc   0.98 (  0.98)	test_minacc   0.92 (  0.91)	test_majacc   0.99 (  0.99)	Loss_d 0.057 (0.055)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.92 (  0.91)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.73)
Test: [  20/  26]	Loss 0.010 (0.044)	test_acc   1.00 (  0.98)	test_minacc   0.98 (  0.93)	test_majacc   1.00 (  0.99)	Loss_d 0.010 (0.044)	test_acc_d   1.00 (  0.98)	test_minacc_d   0.98 (  0.93)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.73)
Test: [  26/  26]	Loss 0.005 (0.037)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.037)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.16it/s]
Test: [  0/  1]	Loss 5.536 (5.536)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.97 (  0.97)	Loss_d 5.536 (5.536)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 5.536 (5.536)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.97 (  0.97)	Loss_d 5.536 (5.536)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.45 (  0.45)
Overall Timing[ 31/  1]	epoch_time 0.0424 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0420 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9868000333309174, 0.3830000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.90it/s] 19%|#9        | 5/26 [00:00<00:00, 23.40it/s] 35%|###4      | 9/26 [00:00<00:00, 28.27it/s] 50%|#####     | 13/26 [00:00<00:00, 30.55it/s] 65%|######5   | 17/26 [00:00<00:00, 31.83it/s] 81%|########  | 21/26 [00:00<00:00, 33.23it/s] 96%|#########6| 25/26 [00:00<00:00, 34.32it/s]100%|##########| 26/26 [00:00<00:00, 29.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 240000
penalty weights 0.0
Epoch: [32][  26/  26]	Loss 0.026 (0.036)	train_nll   0.03 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  32.68 ( 32.47)	train_acc   0.99 (  0.99)	train_minacc   1.00 (  0.96)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 13.4904 (13.7300)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.54it/s] 27%|##6       | 7/26 [00:00<00:00, 33.85it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.85it/s] 46%|####6     | 12/26 [00:00<00:00, 38.55it/s] 65%|######5   | 17/26 [00:00<00:00, 41.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.14it/s] 85%|########4 | 22/26 [00:00<00:00, 42.63it/s]100%|##########| 26/26 [00:00<00:00, 36.63it/s]
Test: [   0/  26]	Loss 0.031 (0.031)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.031 (0.031)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.043 (0.068)	test_acc   0.98 (  0.98)	test_minacc   0.96 (  0.91)	test_majacc   0.98 (  0.99)	Loss_d 0.043 (0.068)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.96 (  0.91)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.74 (  0.72)
Test: [  20/  26]	Loss 0.005 (0.049)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.93)	test_majacc   1.00 (  0.99)	Loss_d 0.005 (0.049)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.93)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.72)
Test: [  26/  26]	Loss 0.006 (0.041)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.006 (0.041)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.95it/s]
Test: [  0/  1]	Loss 4.840 (4.840)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.96 (  0.96)	Loss_d 4.840 (4.840)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 4.840 (4.840)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.96 (  0.96)	Loss_d 4.840 (4.840)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.33 (  0.33)
Overall Timing[ 32/  1]	epoch_time 0.0436 (0.0427)	validation_time 0.0005 (0.0006)	train_time 0.0431 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9858000240921975, 0.43300002813339233)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.35it/s] 19%|#9        | 5/26 [00:00<00:00, 21.65it/s] 35%|###4      | 9/26 [00:00<00:00, 27.88it/s] 50%|#####     | 13/26 [00:00<00:00, 31.33it/s] 65%|######5   | 17/26 [00:00<00:00, 33.54it/s] 81%|########  | 21/26 [00:00<00:00, 34.80it/s] 96%|#########6| 25/26 [00:00<00:00, 35.61it/s]100%|##########| 26/26 [00:00<00:00, 29.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 240000
penalty weights 0.0
Epoch: [33][  26/  26]	Loss 0.012 (0.034)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  33.04 ( 32.86)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.6698 (13.5522)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.25it/s] 23%|##3       | 6/26 [00:00<00:00, 21.76it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.76it/s] 42%|####2     | 11/26 [00:00<00:00, 30.37it/s] 65%|######5   | 17/26 [00:00<00:00, 38.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.45it/s] 85%|########4 | 22/26 [00:00<00:00, 37.49it/s]100%|##########| 26/26 [00:00<00:00, 32.35it/s]
Test: [   0/  26]	Loss 0.044 (0.044)	test_acc   0.98 (  0.98)	test_minacc   0.96 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.044 (0.044)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.96 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.037 (0.048)	test_acc   0.98 (  0.98)	test_minacc   0.98 (  0.96)	test_majacc   0.98 (  0.99)	Loss_d 0.037 (0.048)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.98 (  0.96)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.011 (0.039)	test_acc   0.99 (  0.98)	test_minacc   1.00 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.011 (0.039)	test_acc_d   0.99 (  0.98)	test_minacc_d   1.00 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.67 (  0.69)
Test: [  26/  26]	Loss 0.003 (0.033)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.033)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.95it/s]
Test: [  0/  1]	Loss 4.580 (4.580)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.94 (  0.94)	Loss_d 4.580 (4.580)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 4.580 (4.580)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.94 (  0.94)	Loss_d 4.580 (4.580)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.26 (  0.26)
Overall Timing[ 33/  1]	epoch_time 0.0424 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0420 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9872000333070755, 0.46400001645088196)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.11it/s] 19%|#9        | 5/26 [00:00<00:01, 18.05it/s] 35%|###4      | 9/26 [00:00<00:00, 24.35it/s] 50%|#####     | 13/26 [00:00<00:00, 27.13it/s] 65%|######5   | 17/26 [00:00<00:00, 29.63it/s] 81%|########  | 21/26 [00:00<00:00, 31.64it/s] 96%|#########6| 25/26 [00:00<00:00, 33.25it/s]100%|##########| 26/26 [00:00<00:00, 26.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 240000
penalty weights 0.0
Epoch: [34][  26/  26]	Loss 0.001 (0.024)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.37 ( 33.22)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.96)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.4049 (14.0181)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.96it/s] 31%|###       | 8/26 [00:00<00:00, 33.99it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.99it/s] 50%|#####     | 13/26 [00:00<00:00, 38.93it/s] 69%|######9   | 18/26 [00:00<00:00, 42.63it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.63it/s] 88%|########8 | 23/26 [00:00<00:00, 41.00it/s]100%|##########| 26/26 [00:00<00:00, 37.13it/s]
Test: [   0/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.043 (0.032)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.043 (0.032)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.75 (  0.70)
Test: [  20/  26]	Loss 0.017 (0.025)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.017 (0.025)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.66 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.021)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  0.99)	Loss_d 0.001 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.45it/s]
Test: [  0/  1]	Loss 5.165 (5.165)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.92 (  0.92)	Loss_d 5.165 (5.165)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 5.165 (5.165)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.92 (  0.92)	Loss_d 5.165 (5.165)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.30 (  0.30)
Overall Timing[ 34/  1]	epoch_time 0.0435 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0431 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9934000329375267, 0.4390000104904175)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.14it/s] 19%|#9        | 5/26 [00:00<00:01, 13.68it/s] 35%|###4      | 9/26 [00:00<00:00, 20.45it/s] 46%|####6     | 12/26 [00:00<00:00, 22.53it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.45it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.67it/s] 88%|########8 | 23/26 [00:00<00:00, 30.06it/s]100%|##########| 26/26 [00:01<00:00, 22.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 240000
penalty weights 0.0
Epoch: [35][  26/  26]	Loss 0.016 (0.024)	train_nll   0.02 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.67 ( 33.53)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 14.4961 (14.5247)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.87it/s] 27%|##6       | 7/26 [00:00<00:00, 35.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.12it/s] 46%|####6     | 12/26 [00:00<00:00, 40.96it/s] 65%|######5   | 17/26 [00:00<00:00, 42.72it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.72it/s] 85%|########4 | 22/26 [00:00<00:00, 44.78it/s]100%|##########| 26/26 [00:00<00:00, 38.21it/s]
Test: [   0/  26]	Loss 0.014 (0.014)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  0.99)	Loss_d 0.014 (0.014)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.036 (0.038)	test_acc   0.98 (  0.99)	test_minacc   0.94 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.036 (0.038)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.94 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.76 (  0.71)
Test: [  20/  26]	Loss 0.002 (0.029)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.002 (0.029)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.003 (0.024)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.024)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.22it/s]
Test: [  0/  1]	Loss 5.282 (5.282)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 5.282 (5.282)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 5.282 (5.282)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 5.282 (5.282)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.33 (  0.33)
Overall Timing[ 35/  1]	epoch_time 0.0433 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0428 (0.0421)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9910000330805778, 0.43300002813339233)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.33it/s] 15%|#5        | 4/26 [00:00<00:01, 12.91it/s] 31%|###       | 8/26 [00:00<00:00, 20.90it/s] 46%|####6     | 12/26 [00:00<00:00, 26.20it/s] 62%|######1   | 16/26 [00:00<00:00, 29.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.58it/s] 92%|#########2| 24/26 [00:00<00:00, 33.50it/s]100%|##########| 26/26 [00:01<00:00, 25.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 240000
penalty weights 0.0
Epoch: [36][  26/  26]	Loss 0.012 (0.025)	train_nll   0.01 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  34.00 ( 33.84)	train_acc   0.99 (  0.99)	train_minacc   0.97 (  0.97)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 14.1808 (14.3448)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.62it/s] 23%|##3       | 6/26 [00:00<00:00, 30.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.71it/s] 42%|####2     | 11/26 [00:00<00:00, 38.56it/s] 62%|######1   | 16/26 [00:00<00:00, 42.30it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.30it/s] 81%|########  | 21/26 [00:00<00:00, 40.01it/s]100%|##########| 26/26 [00:00<00:00, 36.50it/s]
Test: [   0/  26]	Loss 0.009 (0.009)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.009 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.008 (0.026)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.026)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.77 (  0.71)
Test: [  20/  26]	Loss 0.008 (0.024)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.024)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.71)
Test: [  26/  26]	Loss 0.005 (0.021)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.81it/s]
Test: [  0/  1]	Loss 5.331 (5.331)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.92 (  0.92)	Loss_d 5.331 (5.331)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 5.331 (5.331)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.92 (  0.92)	Loss_d 5.331 (5.331)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.40 (  0.40)
Overall Timing[ 36/  1]	epoch_time 0.0432 (0.0428)	validation_time 0.0003 (0.0006)	train_time 0.0429 (0.0421)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9933000341057777, 0.3930000066757202)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.08it/s] 19%|#9        | 5/26 [00:00<00:01, 18.92it/s] 35%|###4      | 9/26 [00:00<00:00, 25.28it/s] 50%|#####     | 13/26 [00:00<00:00, 29.22it/s] 65%|######5   | 17/26 [00:00<00:00, 31.27it/s] 81%|########  | 21/26 [00:00<00:00, 32.69it/s] 96%|#########6| 25/26 [00:00<00:00, 34.01it/s]100%|##########| 26/26 [00:00<00:00, 27.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 240000
penalty weights 0.0
Epoch: [37][  26/  26]	Loss 0.022 (0.024)	train_nll   0.02 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.27 ( 34.14)	train_acc   0.99 (  0.99)	train_minacc   0.95 (  0.97)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 14.3241 (14.2330)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.66it/s] 23%|##3       | 6/26 [00:00<00:00, 22.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.58it/s] 42%|####2     | 11/26 [00:00<00:00, 31.40it/s] 62%|######1   | 16/26 [00:00<00:00, 37.21it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.21it/s] 81%|########  | 21/26 [00:00<00:00, 37.03it/s]100%|##########| 26/26 [00:00<00:00, 40.62it/s]100%|##########| 26/26 [00:00<00:00, 31.17it/s]
Test: [   0/  26]	Loss 0.023 (0.023)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.023 (0.023)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.011 (0.030)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.030)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.72)
Test: [  20/  26]	Loss 0.003 (0.022)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.022)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.71)
Test: [  26/  26]	Loss 0.004 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.23it/s]
Test: [  0/  1]	Loss 5.275 (5.275)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 5.275 (5.275)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 5.275 (5.275)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 5.275 (5.275)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.35 (  0.35)
Overall Timing[ 37/  1]	epoch_time 0.0414 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9938000305891037, 0.4190000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 19%|#9        | 5/26 [00:00<00:01, 19.05it/s] 35%|###4      | 9/26 [00:00<00:00, 25.39it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.27it/s] 69%|######9   | 18/26 [00:00<00:00, 33.94it/s] 85%|########4 | 22/26 [00:00<00:00, 35.45it/s]100%|##########| 26/26 [00:00<00:00, 28.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 240000
penalty weights 0.0
Epoch: [38][  26/  26]	Loss 0.031 (0.017)	train_nll   0.03 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.57 ( 34.43)	train_acc   0.99 (  0.99)	train_minacc   0.95 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.8197 (14.5251)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.61it/s] 23%|##3       | 6/26 [00:00<00:01, 19.11it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.11it/s] 42%|####2     | 11/26 [00:00<00:00, 28.09it/s] 62%|######1   | 16/26 [00:00<00:00, 34.34it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.34it/s] 81%|########  | 21/26 [00:00<00:00, 34.97it/s]100%|##########| 26/26 [00:00<00:00, 38.31it/s]100%|##########| 26/26 [00:00<00:00, 28.59it/s]
Test: [   0/  26]	Loss 0.003 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.003 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.003 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.54it/s]
Test: [  0/  1]	Loss 4.942 (4.942)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.92 (  0.92)	Loss_d 4.942 (4.942)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 4.942 (4.942)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.92 (  0.92)	Loss_d 4.942 (4.942)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.23 (  0.23)
Overall Timing[ 38/  1]	epoch_time 0.0438 (0.0428)	validation_time 0.0004 (0.0006)	train_time 0.0433 (0.0421)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9969000269174576, 0.4780000150203705)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.61it/s] 19%|#9        | 5/26 [00:00<00:01, 17.33it/s] 35%|###4      | 9/26 [00:00<00:00, 24.31it/s] 50%|#####     | 13/26 [00:00<00:00, 27.93it/s] 65%|######5   | 17/26 [00:00<00:00, 29.80it/s] 81%|########  | 21/26 [00:00<00:00, 32.10it/s] 96%|#########6| 25/26 [00:00<00:00, 33.38it/s]100%|##########| 26/26 [00:00<00:00, 26.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 240000
penalty weights 0.0
Epoch: [39][  26/  26]	Loss 0.006 (0.014)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  34.78 ( 34.69)	train_acc   1.00 (  1.00)	train_minacc   0.97 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.0553 (14.9907)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.43it/s] 12%|#1        | 3/26 [00:00<00:02,  9.83it/s] 31%|###       | 8/26 [00:00<00:00, 23.08it/s]                                               31%|###       | 8/26 [00:00<00:00, 23.08it/s] 50%|#####     | 13/26 [00:00<00:00, 30.94it/s] 69%|######9   | 18/26 [00:00<00:00, 36.06it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.06it/s] 88%|########8 | 23/26 [00:00<00:00, 36.35it/s]100%|##########| 26/26 [00:00<00:00, 28.83it/s]
Test: [   0/  26]	Loss 0.011 (0.011)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.011)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.019 (0.013)	test_acc   0.99 (  1.00)	test_minacc   0.96 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.019 (0.013)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.96 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.77 (  0.71)
Test: [  20/  26]	Loss 0.001 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.73it/s]
Test: [  0/  1]	Loss 5.642 (5.642)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.96 (  0.96)	Loss_d 5.642 (5.642)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 5.642 (5.642)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.96 (  0.96)	Loss_d 5.642 (5.642)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.36 (  0.36)
Overall Timing[ 39/  1]	epoch_time 0.0440 (0.0428)	validation_time 0.0003 (0.0006)	train_time 0.0436 (0.0421)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9971000245809555, 0.4190000295639038)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.28it/s] 19%|#9        | 5/26 [00:00<00:01, 19.91it/s] 35%|###4      | 9/26 [00:00<00:00, 26.08it/s] 50%|#####     | 13/26 [00:00<00:00, 29.07it/s] 65%|######5   | 17/26 [00:00<00:00, 30.08it/s] 81%|########  | 21/26 [00:00<00:00, 31.72it/s] 96%|#########6| 25/26 [00:00<00:00, 32.87it/s]100%|##########| 26/26 [00:00<00:00, 27.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 240000
penalty weights 0.0
Epoch: [40][  26/  26]	Loss 0.006 (0.009)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  34.98 ( 34.89)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.4729 (15.1912)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.90it/s] 27%|##6       | 7/26 [00:00<00:00, 31.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.79it/s] 46%|####6     | 12/26 [00:00<00:00, 38.13it/s] 65%|######5   | 17/26 [00:00<00:00, 40.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.94it/s] 85%|########4 | 22/26 [00:00<00:00, 41.12it/s]100%|##########| 26/26 [00:00<00:00, 36.62it/s]
Test: [   0/  26]	Loss 0.001 (0.001)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.001)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.013 (0.010)	test_acc   0.99 (  1.00)	test_minacc   0.96 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.013 (0.010)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.96 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.77 (  0.71)
Test: [  20/  26]	Loss 0.001 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.87it/s]
Test: [  0/  1]	Loss 6.078 (6.078)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 6.078 (6.078)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 6.078 (6.078)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 6.078 (6.078)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.39 (  0.39)
Overall Timing[ 40/  1]	epoch_time 0.0394 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0390 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9981000175476075, 0.40800002217292786)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.71it/s] 15%|#5        | 4/26 [00:00<00:01, 18.68it/s] 31%|###       | 8/26 [00:00<00:00, 25.36it/s] 46%|####6     | 12/26 [00:00<00:00, 29.28it/s] 62%|######1   | 16/26 [00:00<00:00, 30.94it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.24it/s] 92%|#########2| 24/26 [00:00<00:00, 32.20it/s]100%|##########| 26/26 [00:00<00:00, 27.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 240000
penalty weights 0.0
Epoch: [41][  26/  26]	Loss 0.001 (0.008)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.14 ( 35.06)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.8426 (15.7143)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.95it/s] 23%|##3       | 6/26 [00:00<00:00, 28.31it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.31it/s] 42%|####2     | 11/26 [00:00<00:00, 35.58it/s] 62%|######1   | 16/26 [00:00<00:00, 40.65it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.65it/s] 81%|########  | 21/26 [00:00<00:00, 39.09it/s]100%|##########| 26/26 [00:00<00:00, 42.27it/s]100%|##########| 26/26 [00:00<00:00, 34.36it/s]
Test: [   0/  26]	Loss 0.009 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.009 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.012 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.70)
Test: [  20/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.000 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.03it/s]
Test: [  0/  1]	Loss 5.688 (5.688)	test_acc   0.46 (  0.46)	test_minacc   0.40 (  0.40)	test_majacc   0.94 (  0.94)	Loss_d 5.688 (5.688)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 5.688 (5.688)	test_acc   0.46 (  0.46)	test_minacc   0.40 (  0.40)	test_majacc   0.94 (  0.94)	Loss_d 5.688 (5.688)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.27 (  0.27)
Overall Timing[ 41/  1]	epoch_time 0.0409 (0.0427)	validation_time 0.0003 (0.0006)	train_time 0.0406 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9985000151991844, 0.45500001311302185)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.45it/s] 23%|##3       | 6/26 [00:00<00:00, 27.55it/s] 38%|###8      | 10/26 [00:00<00:00, 30.80it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.37it/s] 69%|######9   | 18/26 [00:00<00:00, 33.26it/s] 85%|########4 | 22/26 [00:00<00:00, 34.45it/s]100%|##########| 26/26 [00:00<00:00, 35.71it/s]100%|##########| 26/26 [00:00<00:00, 30.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 240000
penalty weights 0.0
Epoch: [42][  26/  26]	Loss 0.009 (0.006)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.28 ( 35.21)	train_acc   1.00 (  1.00)	train_minacc   0.97 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.0733 (15.9286)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.08it/s] 23%|##3       | 6/26 [00:00<00:00, 29.42it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.42it/s] 42%|####2     | 11/26 [00:00<00:00, 36.56it/s] 62%|######1   | 16/26 [00:00<00:00, 40.03it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.03it/s] 81%|########  | 21/26 [00:00<00:00, 37.86it/s]100%|##########| 26/26 [00:00<00:00, 40.86it/s]100%|##########| 26/26 [00:00<00:00, 34.08it/s]
Test: [   0/  26]	Loss 0.006 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.70)
Test: [  20/  26]	Loss 0.001 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.000 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.76it/s]
Test: [  0/  1]	Loss 5.935 (5.935)	test_acc   0.45 (  0.45)	test_minacc   0.39 (  0.39)	test_majacc   0.92 (  0.92)	Loss_d 5.935 (5.935)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 5.935 (5.935)	test_acc   0.45 (  0.45)	test_minacc   0.39 (  0.39)	test_majacc   0.92 (  0.92)	Loss_d 5.935 (5.935)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.29 (  0.29)
Overall Timing[ 42/  1]	epoch_time 0.0414 (0.0427)	validation_time 0.0005 (0.0006)	train_time 0.0410 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9993000081777572, 0.445000022649765)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:09,  2.70it/s] 19%|#9        | 5/26 [00:00<00:01, 12.50it/s] 35%|###4      | 9/26 [00:00<00:00, 19.16it/s] 50%|#####     | 13/26 [00:00<00:00, 23.67it/s] 65%|######5   | 17/26 [00:00<00:00, 27.10it/s] 81%|########  | 21/26 [00:00<00:00, 29.18it/s] 96%|#########6| 25/26 [00:01<00:00, 31.07it/s]100%|##########| 26/26 [00:01<00:00, 22.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 240000
penalty weights 0.0
Epoch: [43][  26/  26]	Loss 0.001 (0.007)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.42 ( 35.35)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.3084 (16.2206)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.55it/s] 23%|##3       | 6/26 [00:00<00:00, 27.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.18it/s] 42%|####2     | 11/26 [00:00<00:00, 35.15it/s] 62%|######1   | 16/26 [00:00<00:00, 39.93it/s]                                                62%|######1   | 16/26 [00:00<00:00, 39.93it/s] 81%|########  | 21/26 [00:00<00:00, 40.96it/s]100%|##########| 26/26 [00:00<00:00, 43.50it/s]100%|##########| 26/26 [00:00<00:00, 34.97it/s]
Test: [   0/  26]	Loss 0.004 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.001 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.70)
Test: [  20/  26]	Loss 0.001 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.62it/s]
Test: [  0/  1]	Loss 6.394 (6.394)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.94 (  0.94)	Loss_d 6.394 (6.394)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 6.394 (6.394)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.94 (  0.94)	Loss_d 6.394 (6.394)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.34 (  0.34)
Overall Timing[ 43/  1]	epoch_time 0.0441 (0.0427)	validation_time 0.0004 (0.0006)	train_time 0.0437 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9991000105142593, 0.4230000078678131)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.24it/s] 27%|##6       | 7/26 [00:00<00:00, 31.22it/s] 42%|####2     | 11/26 [00:00<00:00, 33.66it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.85it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.44it/s] 88%|########8 | 23/26 [00:00<00:00, 35.68it/s]100%|##########| 26/26 [00:00<00:00, 31.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 240000
penalty weights 0.0
Epoch: [44][  26/  26]	Loss 0.002 (0.009)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.62 ( 35.52)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.1607 (16.2794)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.23it/s] 23%|##3       | 6/26 [00:00<00:00, 28.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.10it/s] 42%|####2     | 11/26 [00:00<00:00, 32.13it/s] 62%|######1   | 16/26 [00:00<00:00, 37.82it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.82it/s] 81%|########  | 21/26 [00:00<00:00, 40.15it/s]100%|##########| 26/26 [00:00<00:00, 42.61it/s]100%|##########| 26/26 [00:00<00:00, 34.65it/s]
Test: [   0/  26]	Loss 0.001 (0.001)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.001)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.003 (0.010)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.71)
Test: [  20/  26]	Loss 0.006 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.69it/s]
Test: [  0/  1]	Loss 6.369 (6.369)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 6.369 (6.369)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 6.369 (6.369)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 6.369 (6.369)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.32 (  0.32)
Overall Timing[ 44/  1]	epoch_time 0.0416 (0.0427)	validation_time 0.0003 (0.0006)	train_time 0.0412 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9974000234007835, 0.4320000112056732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.99it/s] 19%|#9        | 5/26 [00:00<00:01, 19.61it/s] 35%|###4      | 9/26 [00:00<00:00, 25.74it/s] 50%|#####     | 13/26 [00:00<00:00, 28.91it/s] 65%|######5   | 17/26 [00:00<00:00, 31.00it/s] 81%|########  | 21/26 [00:00<00:00, 32.12it/s] 96%|#########6| 25/26 [00:00<00:00, 33.22it/s]100%|##########| 26/26 [00:00<00:00, 27.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 240000
penalty weights 0.0
Epoch: [45][  26/  26]	Loss 0.006 (0.009)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.85 ( 35.75)	train_acc   1.00 (  1.00)	train_minacc   0.97 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.0671 (16.1189)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.65it/s] 23%|##3       | 6/26 [00:00<00:00, 22.46it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.46it/s] 42%|####2     | 11/26 [00:00<00:00, 32.07it/s] 62%|######1   | 16/26 [00:00<00:00, 38.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.11it/s] 81%|########  | 21/26 [00:00<00:00, 39.19it/s]100%|##########| 26/26 [00:00<00:00, 42.42it/s]100%|##########| 26/26 [00:00<00:00, 31.99it/s]
Test: [   0/  26]	Loss 0.042 (0.042)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.042 (0.042)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.002 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.70)
Test: [  20/  26]	Loss 0.006 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.63it/s]
Test: [  0/  1]	Loss 6.234 (6.234)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 6.234 (6.234)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 6.234 (6.234)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 6.234 (6.234)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.31 (  0.31)
Overall Timing[ 45/  1]	epoch_time 0.0413 (0.0426)	validation_time 0.0007 (0.0006)	train_time 0.0406 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9974000234007835, 0.43300002813339233)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.09it/s] 15%|#5        | 4/26 [00:00<00:01, 18.72it/s] 31%|###       | 8/26 [00:00<00:00, 25.52it/s] 46%|####6     | 12/26 [00:00<00:00, 29.01it/s] 62%|######1   | 16/26 [00:00<00:00, 30.88it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.41it/s] 92%|#########2| 24/26 [00:00<00:00, 32.95it/s]100%|##########| 26/26 [00:00<00:00, 27.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 240000
penalty weights 0.0
Epoch: [46][  26/  26]	Loss 0.003 (0.012)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.07 ( 35.96)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.8907 (15.9059)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.15it/s] 23%|##3       | 6/26 [00:00<00:00, 27.85it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.85it/s] 42%|####2     | 11/26 [00:00<00:00, 35.51it/s] 62%|######1   | 16/26 [00:00<00:00, 40.38it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.38it/s] 81%|########  | 21/26 [00:00<00:00, 41.91it/s]100%|##########| 26/26 [00:00<00:00, 35.64it/s]
Test: [   0/  26]	Loss 0.008 (0.008)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.008)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.005 (0.007)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.70)
Test: [  20/  26]	Loss 0.003 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.66it/s]
Test: [  0/  1]	Loss 6.184 (6.184)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 6.184 (6.184)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 6.184 (6.184)	test_acc   0.44 (  0.44)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 6.184 (6.184)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.32 (  0.32)
Overall Timing[ 46/  1]	epoch_time 0.0411 (0.0426)	validation_time 0.0005 (0.0006)	train_time 0.0406 (0.0419)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9981000198721885, 0.43700000643730164)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.07it/s] 19%|#9        | 5/26 [00:00<00:00, 23.29it/s] 35%|###4      | 9/26 [00:00<00:00, 28.58it/s] 46%|####6     | 12/26 [00:00<00:00, 28.10it/s] 62%|######1   | 16/26 [00:00<00:00, 29.36it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.69it/s] 92%|#########2| 24/26 [00:00<00:00, 32.70it/s]100%|##########| 26/26 [00:00<00:00, 28.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 240000
penalty weights 0.0
Epoch: [47][  26/  26]	Loss 0.004 (0.009)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.29 ( 36.18)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.0383 (15.9769)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.31it/s] 31%|###       | 8/26 [00:00<00:00, 31.33it/s]                                               31%|###       | 8/26 [00:00<00:00, 31.33it/s] 50%|#####     | 13/26 [00:00<00:00, 36.29it/s] 69%|######9   | 18/26 [00:00<00:00, 36.83it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.83it/s] 88%|########8 | 23/26 [00:00<00:00, 39.60it/s]100%|##########| 26/26 [00:00<00:00, 33.60it/s]
Test: [   0/  26]	Loss 0.011 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.001 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.94it/s]
Test: [  0/  1]	Loss 5.891 (5.891)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 5.891 (5.891)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 5.891 (5.891)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.91 (  0.91)	Loss_d 5.891 (5.891)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.27 (  0.27)
Overall Timing[ 47/  1]	epoch_time 0.0431 (0.0426)	validation_time 0.0006 (0.0006)	train_time 0.0424 (0.0420)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9985000151991844, 0.45100003480911255)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.44it/s] 19%|#9        | 5/26 [00:00<00:01, 16.76it/s] 35%|###4      | 9/26 [00:00<00:00, 23.53it/s] 50%|#####     | 13/26 [00:00<00:00, 27.78it/s] 65%|######5   | 17/26 [00:00<00:00, 30.55it/s] 81%|########  | 21/26 [00:00<00:00, 32.49it/s] 96%|#########6| 25/26 [00:00<00:00, 33.27it/s]100%|##########| 26/26 [00:00<00:00, 26.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 240000
penalty weights 0.0
Epoch: [48][  26/  26]	Loss 0.001 (0.007)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.49 ( 36.40)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.3372 (16.1884)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.48it/s] 23%|##3       | 6/26 [00:00<00:01, 18.49it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.49it/s] 42%|####2     | 11/26 [00:00<00:00, 27.10it/s] 62%|######1   | 16/26 [00:00<00:00, 33.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 33.27it/s] 81%|########  | 21/26 [00:00<00:00, 34.33it/s]100%|##########| 26/26 [00:00<00:00, 38.20it/s]100%|##########| 26/26 [00:00<00:00, 27.90it/s]
Test: [   0/  26]	Loss 0.001 (0.001)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.001)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.001 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.70)
Test: [  20/  26]	Loss 0.001 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.05it/s]
Test: [  0/  1]	Loss 6.363 (6.363)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.93 (  0.93)	Loss_d 6.363 (6.363)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 6.363 (6.363)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.93 (  0.93)	Loss_d 6.363 (6.363)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.31 (  0.31)
Overall Timing[ 48/  1]	epoch_time 0.0405 (0.0426)	validation_time 0.0003 (0.0006)	train_time 0.0401 (0.0419)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9984000186920166, 0.4400000274181366)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.32it/s] 19%|#9        | 5/26 [00:00<00:00, 22.28it/s] 35%|###4      | 9/26 [00:00<00:00, 27.73it/s] 50%|#####     | 13/26 [00:00<00:00, 30.41it/s] 65%|######5   | 17/26 [00:00<00:00, 31.97it/s] 81%|########  | 21/26 [00:00<00:00, 33.15it/s] 96%|#########6| 25/26 [00:00<00:00, 33.75it/s]100%|##########| 26/26 [00:00<00:00, 28.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 240000
penalty weights 0.0
Epoch: [49][  26/  26]	Loss 0.003 (0.008)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.68 ( 36.59)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.4787 (16.4206)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.19it/s] 15%|#5        | 4/26 [00:00<00:01, 13.41it/s] 35%|###4      | 9/26 [00:00<00:00, 25.36it/s]                                               35%|###4      | 9/26 [00:00<00:00, 25.36it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.45it/s] 73%|#######3  | 19/26 [00:00<00:00, 34.61it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 34.61it/s] 92%|#########2| 24/26 [00:00<00:00, 38.32it/s]100%|##########| 26/26 [00:00<00:00, 28.83it/s]
Test: [   0/  26]	Loss 0.005 (0.005)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.007 (0.010)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.71)
Test: [  20/  26]	Loss 0.003 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.52it/s]
Test: [  0/  1]	Loss 6.816 (6.816)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.92 (  0.92)	Loss_d 6.816 (6.816)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 6.816 (6.816)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.92 (  0.92)	Loss_d 6.816 (6.816)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.36 (  0.36)
Overall Timing[ 49/  1]	epoch_time 0.0402 (0.0425)	validation_time 0.0005 (0.0006)	train_time 0.0397 (0.0419)
record: (train_acc, test_acc) (0.9608000164031982, 0.484000027179718)
last accs (train_acc, test_acc) (0.9981000175476075, 0.41700002551078796)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.166 MB of 0.166 MB uploadedwandb: \ 0.166 MB of 0.166 MB uploadedwandb: | 0.189 MB of 0.459 MB uploaded (0.003 MB deduped)wandb: / 0.308 MB of 0.469 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/diagnostics/epoch_time_val █▁▁▂▂▂▂▁▂▂▂▂▁▁▂▁▁▂▁▁▁▂▂▁▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/diagnostics/train_time_val █▂▁▂▂▂▂▂▃▂▂▂▂▂▂▁▁▂▁▁▁▂▂▁▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/Loss_avg ▁▁▁▁▁▁▁▁▁▁▁▁▂▂▃▃▂▃▄▄▄▄▅▅▅▆▅▅▆▆▆▅▇▆▇▇▇▇▇█
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/Loss_d_avg ▁▁▁▁▁▁▁▁▁▁▁▁▂▂▃▃▂▃▄▄▄▄▅▅▅▆▅▅▆▆▆▅▇▆▇▇▇▇▇█
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/Loss_d_val ▁▁▁▁▁▁▁▁▁▁▁▁▂▂▃▃▂▃▄▄▄▄▅▅▅▆▅▅▆▆▆▅▇▆▇▇▇▇▇█
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/Loss_val ▁▁▁▁▁▁▁▁▁▁▁▁▂▂▃▃▂▃▄▄▄▄▅▅▅▆▅▅▆▆▆▅▇▆▇▇▇▇▇█
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_acc_avg ▁▁▁▂▄▄▅▇▅▇▅▇▆▇▆▆█▇▆▇▇█▇▇▇▆▇█▇▆▇█▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_acc_d_avg ▁▁▁▂▄▄▅▇▅▇▅▇▆▇▆▆█▇▆▇▇█▇▇▇▆▇█▇▆▇█▇▇▇▇▇▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_acc_d_val ▁▁▁▂▄▄▅▇▅▇▅▇▆▇▆▆█▇▆▇▇█▇▇▇▆▇█▇▆▇█▇▇▇▇▇▇▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_acc_val ▁▁▁▂▄▄▅▇▅▇▅▇▆▇▆▆█▇▆▇▇█▇▇▇▆▇█▇▆▇█▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_corr_d_avg ███▇▆▆▅▄▄▃▅▃▃▃▄▃▁▃▃▂▂▁▂▂▂▃▂▁▂▃▂▁▃▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_corr_d_val ███▇▆▆▅▄▄▃▅▃▃▃▄▃▁▃▃▂▂▁▂▂▂▃▂▁▂▃▂▁▃▂▂▂▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_majacc_avg ███▇▇▆▅▅▅▁▅▃▂▂▄▅▃▃▄▃▃▃▂▄▅▆▆▅▃▃▃▃▅▅▃▅▃▃▃▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_majacc_d_avg ███▇▇▆▅▅▅▁▅▃▂▂▄▅▃▃▄▃▃▃▂▄▅▆▆▅▃▃▃▃▅▅▃▅▃▃▃▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_majacc_d_val ███▇▇▆▅▅▅▁▅▃▂▂▄▅▃▃▄▃▃▃▂▄▅▆▆▅▃▃▃▃▅▅▃▅▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_majacc_val ███▇▇▆▅▅▅▁▅▃▂▂▄▅▃▃▄▃▃▃▂▄▅▆▆▅▃▃▃▃▅▅▃▅▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_minacc_avg ▁▁▁▂▄▄▅▇▅▇▅▇▆▇▆▆█▇▆▇▇█▇▇▇▆▇█▇▆▇█▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_minacc_d_avg ▁▁▁▂▄▄▅▇▅▇▅▇▆▇▆▆█▇▆▇▇█▇▇▇▆▇█▇▆▇█▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_minacc_d_val ▁▁▁▂▄▄▅▇▅▇▅▇▆▇▆▆█▇▆▇▇█▇▇▇▆▇█▇▆▇█▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_minacc_val ▁▁▁▂▄▄▅▇▅▇▅▇▆▇▆▆█▇▆▇▇█▇▇▇▆▇█▇▆▇█▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/Loss_avg █▅▅▅▅▄▄▄▄▄▄▃▃▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/Loss_val ███▇▇▆▆▆▅▅▅▅▄▄▃▃▂▂▁▂▁▁▁▂▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/l1_avg ▂▁▁▁▁▁▁▁▂▂▂▂▂▂▃▃▃▄▄▅▅▅▅▆▆▆▆▆▇▆▆▇▇▇██████
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/l1_val ▁▁▁▁▁▁▁▂▂▁▁▂▃▃▃▃▃▄▅▅▅▅▆▆▆▆▆▆▇▆▆▇▇███████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_acc_avg ▁▃▃▃▃▃▄▄▄▄▅▅▅▆▆▆▆▇▇▇▇▇██████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_acc_val ▁▁▁▂▃▃▃▄▅▄▄▅▅▅▆▆▇▇▇▇███▇█▇██████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_majacc_avg ▁█▇▇▅▅▅▅▅▅▅▅▅▅▅▆▆▆▇▇▇▇▇█▇███████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_majacc_val ▅▇▇▇▅▆▁▅▆▁▆▇▂▃▇▅▇▆▆▄▅██▆▇▇▆█▇▇██▇███████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_minacc_avg ▂▁▁▂▃▃▃▄▄▅▅▅▆▆▆▆▇▇▇▇▇███████████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_minacc_val ▁▁▁▂▃▃▄▅▅▅▄▅▆▅▆▇▇▇████▇▇█▇██████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_nll_avg █▅▅▅▅▄▄▄▄▄▄▃▃▃▃▃▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_nll_val ███▇▇▆▆▆▅▅▅▅▄▄▃▃▂▂▁▂▁▁▁▂▁▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_penalty_avg █▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_penalty_val ▇█▇▆▄▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/weight_norm_avg ▁▂▃▃▃▃▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇▇▇█████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/weight_norm_val ▁▂▂▂▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▅▅▅▅▅▆▆▆▆▇▇▇▇▇▇▇▇████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/diagnostics/epoch_time_val 0.04018
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/diagnostics/train_time_val 0.03971
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/diagnostics/validation_time_val 0.00045
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/Loss_avg 6.8164
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/Loss_d_avg 6.8164
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/Loss_d_val 6.8164
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/Loss_val 6.8164
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_acc_avg 0.417
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_acc_d_avg 0.417
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_acc_d_val 0.417
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_acc_val 0.417
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_corr_d_avg 0.36436
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_corr_d_val 0.36436
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_majacc_avg 0.92
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_majacc_d_avg 0.92
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_majacc_d_val 0.92
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_majacc_val 0.92
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_minacc_avg 0.36111
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_minacc_d_avg 0.36111
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_minacc_d_val 0.36111
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/test/test_minacc_val 0.36111
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/Loss_avg 0.00791
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/Loss_val 0.00325
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/l1_avg 16.42058
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/l1_val 16.47869
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_acc_avg 0.9971
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_acc_val 1.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_majacc_avg 0.99824
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_majacc_val 1.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_minacc_avg 0.99098
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_minacc_val 1.0
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_nll_avg 0.00791
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_nll_val 0.00325
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_penalty_avg 4e-05
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/train_penalty_val 9e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/weight_norm_avg 36.58543
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/weight_norm_val 36.68366
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/120/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/kp95ywlw
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_192037-kp95ywlw/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_192329-g9uhxc91
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/g9uhxc91
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=240000, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Conv2d(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1311
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6049, 3, 32, 32) (5951, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:44,  1.77s/it] 19%|#9        | 5/26 [00:01<00:06,  3.47it/s] 35%|###4      | 9/26 [00:01<00:02,  6.88it/s] 50%|#####     | 13/26 [00:02<00:01, 10.57it/s] 65%|######5   | 17/26 [00:02<00:00, 14.50it/s] 81%|########  | 21/26 [00:02<00:00, 18.23it/s] 96%|#########6| 25/26 [00:02<00:00, 21.62it/s]100%|##########| 26/26 [00:02<00:00,  9.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 240000
penalty weights 0.0
Epoch: [0][  26/  26]	Loss 0.493 (0.565)	train_nll   0.49 (  0.57)	train_penalty   0.12 (  0.33)	weight_norm  20.81 ( 18.09)	train_acc   0.80 (  0.81)	train_minacc   0.00 (  0.07)	train_majacc   0.97 (  0.94)	train_corr   0.00 (  0.00)	l1 6.6380 (7.7849)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.12it/s] 23%|##3       | 6/26 [00:00<00:00, 31.75it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.75it/s] 42%|####2     | 11/26 [00:00<00:00, 37.68it/s] 62%|######1   | 16/26 [00:00<00:00, 41.83it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.83it/s] 81%|########  | 21/26 [00:00<00:00, 42.21it/s]100%|##########| 26/26 [00:00<00:00, 37.56it/s]
Test: [   0/  26]	Loss 0.389 (0.389)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.389 (0.389)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.374 (0.422)	test_acc   0.87 (  0.84)	test_minacc   0.04 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.374 (0.422)	test_acc_d   0.87 (  0.84)	test_minacc_d   0.04 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.96)
Test: [  20/  26]	Loss 0.387 (0.416)	test_acc   0.86 (  0.84)	test_minacc   0.11 (  0.03)	test_majacc   0.98 (  0.99)	Loss_d 0.387 (0.416)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.11 (  0.03)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.95 (  0.96)
Test: [  26/  26]	Loss 0.476 (0.413)	test_acc   0.81 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   0.98 (  0.99)	Loss_d 0.476 (0.413)	test_acc_d   0.81 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.49it/s]100%|##########| 1/1 [00:00<00:00,  2.49it/s]
Test: [  0/  1]	Loss 1.827 (1.827)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.827 (1.827)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.827 (1.827)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.827 (1.827)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0824 (0.0824)	validation_time 0.0070 (0.0070)	train_time 0.0734 (0.0734)
record: (train_acc, test_acc) (0.8456000235676765, 0.1120000034570694)
last accs (train_acc, test_acc) (0.8456000235676765, 0.1120000034570694)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.03it/s] 19%|#9        | 5/26 [00:00<00:01, 20.35it/s] 35%|###4      | 9/26 [00:00<00:00, 26.45it/s] 50%|#####     | 13/26 [00:00<00:00, 29.92it/s] 65%|######5   | 17/26 [00:00<00:00, 31.79it/s] 81%|########  | 21/26 [00:00<00:00, 33.02it/s] 96%|#########6| 25/26 [00:00<00:00, 34.15it/s]100%|##########| 26/26 [00:00<00:00, 28.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 240000
penalty weights 0.0
Epoch: [1][  26/  26]	Loss 0.476 (0.408)	train_nll   0.48 (  0.41)	train_penalty   0.13 (  0.06)	weight_norm  21.91 ( 21.57)	train_acc   0.82 (  0.85)	train_minacc   0.00 (  0.02)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.4507 (6.3759)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 27%|##6       | 7/26 [00:00<00:00, 30.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.17it/s] 46%|####6     | 12/26 [00:00<00:00, 36.54it/s] 65%|######5   | 17/26 [00:00<00:00, 37.43it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.43it/s] 88%|########8 | 23/26 [00:00<00:00, 43.10it/s]100%|##########| 26/26 [00:00<00:00, 34.83it/s]
Test: [   0/  26]	Loss 0.372 (0.372)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.372 (0.372)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.363 (0.411)	test_acc   0.87 (  0.85)	test_minacc   0.04 (  0.02)	test_majacc   0.99 (  1.00)	Loss_d 0.363 (0.411)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.04 (  0.02)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.382 (0.404)	test_acc   0.86 (  0.85)	test_minacc   0.07 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.382 (0.404)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.07 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.97)
Test: [  26/  26]	Loss 0.465 (0.401)	test_acc   0.82 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.465 (0.401)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.98 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.41it/s]
Test: [  0/  1]	Loss 1.904 (1.904)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.904 (1.904)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  1/  1]	Loss 1.904 (1.904)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.904 (1.904)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Overall Timing[  1/  1]	epoch_time 0.0387 (0.0606)	validation_time 0.0004 (0.0037)	train_time 0.0383 (0.0559)
record: (train_acc, test_acc) (0.8456000235676765, 0.1120000034570694)
last accs (train_acc, test_acc) (0.8487000253796577, 0.10900000482797623)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.87it/s] 19%|#9        | 5/26 [00:00<00:00, 22.97it/s] 35%|###4      | 9/26 [00:00<00:00, 28.26it/s] 50%|#####     | 13/26 [00:00<00:00, 30.95it/s] 65%|######5   | 17/26 [00:00<00:00, 32.57it/s] 81%|########  | 21/26 [00:00<00:00, 33.36it/s] 96%|#########6| 25/26 [00:00<00:00, 34.27it/s]100%|##########| 26/26 [00:00<00:00, 29.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 240000
penalty weights 0.0
Epoch: [2][  26/  26]	Loss 0.462 (0.393)	train_nll   0.46 (  0.39)	train_penalty   0.11 (  0.05)	weight_norm  22.04 ( 21.99)	train_acc   0.83 (  0.85)	train_minacc   0.02 (  0.03)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.4288 (6.2837)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.36it/s] 19%|#9        | 5/26 [00:00<00:01, 17.49it/s] 38%|###8      | 10/26 [00:00<00:00, 27.79it/s]                                                38%|###8      | 10/26 [00:00<00:00, 27.79it/s] 58%|#####7    | 15/26 [00:00<00:00, 30.79it/s] 77%|#######6  | 20/26 [00:00<00:00, 35.70it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 35.70it/s] 96%|#########6| 25/26 [00:00<00:00, 38.47it/s]100%|##########| 26/26 [00:00<00:00, 29.46it/s]
Test: [   0/  26]	Loss 0.336 (0.336)	test_acc   0.86 (  0.86)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.336 (0.336)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.344 (0.383)	test_acc   0.87 (  0.85)	test_minacc   0.19 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 0.344 (0.383)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.19 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.92 (  0.93)
Test: [  20/  26]	Loss 0.363 (0.376)	test_acc   0.86 (  0.85)	test_minacc   0.16 (  0.14)	test_majacc   0.97 (  0.97)	Loss_d 0.363 (0.376)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.16 (  0.14)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.92)
Test: [  26/  26]	Loss 0.433 (0.373)	test_acc   0.83 (  0.85)	test_minacc   0.05 (  0.14)	test_majacc   1.00 (  0.98)	Loss_d 0.433 (0.373)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.05 (  0.14)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.94 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.24it/s]
Test: [  0/  1]	Loss 1.850 (1.850)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   0.96 (  0.96)	Loss_d 1.850 (1.850)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
Test: [  1/  1]	Loss 1.850 (1.850)	test_acc   0.15 (  0.15)	test_minacc   0.06 (  0.06)	test_majacc   0.96 (  0.96)	Loss_d 1.850 (1.850)	test_acc_d   0.15 (  0.15)	test_minacc_d   0.06 (  0.06)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.88)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0411 (0.0541)	validation_time 0.0003 (0.0026)	train_time 0.0408 (0.0508)
record: (train_acc, test_acc) (0.8507000266313552, 0.15000000596046448)
last accs (train_acc, test_acc) (0.8507000266313552, 0.15000000596046448)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.06it/s] 23%|##3       | 6/26 [00:00<00:00, 27.53it/s] 38%|###8      | 10/26 [00:00<00:00, 31.04it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.00it/s] 69%|######9   | 18/26 [00:00<00:00, 32.10it/s] 85%|########4 | 22/26 [00:00<00:00, 32.53it/s]100%|##########| 26/26 [00:00<00:00, 33.56it/s]100%|##########| 26/26 [00:00<00:00, 29.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 240000
penalty weights 0.0
Epoch: [3][  26/  26]	Loss 0.425 (0.370)	train_nll   0.42 (  0.37)	train_penalty   0.08 (  0.04)	weight_norm  22.11 ( 22.07)	train_acc   0.83 (  0.85)	train_minacc   0.02 (  0.08)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 6.6538 (6.3794)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 19%|#9        | 5/26 [00:00<00:00, 21.71it/s] 38%|###8      | 10/26 [00:00<00:00, 30.86it/s]                                                38%|###8      | 10/26 [00:00<00:00, 30.86it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.23it/s] 77%|#######6  | 20/26 [00:00<00:00, 39.78it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 39.78it/s] 96%|#########6| 25/26 [00:00<00:00, 41.31it/s]100%|##########| 26/26 [00:00<00:00, 32.99it/s]
Test: [   0/  26]	Loss 0.305 (0.305)	test_acc   0.86 (  0.86)	test_minacc   0.18 (  0.18)	test_majacc   0.97 (  0.97)	Loss_d 0.305 (0.305)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.321 (0.354)	test_acc   0.89 (  0.85)	test_minacc   0.37 (  0.23)	test_majacc   0.97 (  0.96)	Loss_d 0.321 (0.354)	test_acc_d   0.89 (  0.85)	test_minacc_d   0.37 (  0.23)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.348 (0.347)	test_acc   0.85 (  0.85)	test_minacc   0.24 (  0.24)	test_majacc   0.95 (  0.96)	Loss_d 0.348 (0.347)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.24 (  0.24)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.88 (  0.90)
Test: [  26/  26]	Loss 0.383 (0.343)	test_acc   0.84 (  0.86)	test_minacc   0.11 (  0.24)	test_majacc   1.00 (  0.96)	Loss_d 0.383 (0.343)	test_acc_d   0.84 (  0.86)	test_minacc_d   0.11 (  0.24)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.92 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.12it/s]
Test: [  0/  1]	Loss 1.893 (1.893)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.95 (  0.95)	Loss_d 1.893 (1.893)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.81)
Test: [  1/  1]	Loss 1.893 (1.893)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.95 (  0.95)	Loss_d 1.893 (1.893)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.81 (  0.81)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0420 (0.0511)	validation_time 0.0004 (0.0021)	train_time 0.0415 (0.0485)
record: (train_acc, test_acc) (0.8551000220179558, 0.19700001180171967)
last accs (train_acc, test_acc) (0.8551000220179558, 0.19700001180171967)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.89it/s] 19%|#9        | 5/26 [00:00<00:00, 22.93it/s] 35%|###4      | 9/26 [00:00<00:00, 28.44it/s] 50%|#####     | 13/26 [00:00<00:00, 31.36it/s] 65%|######5   | 17/26 [00:00<00:00, 32.28it/s] 81%|########  | 21/26 [00:00<00:00, 33.46it/s] 96%|#########6| 25/26 [00:00<00:00, 33.93it/s]100%|##########| 26/26 [00:00<00:00, 28.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 240000
penalty weights 0.0
Epoch: [4][  26/  26]	Loss 0.395 (0.350)	train_nll   0.40 (  0.35)	train_penalty   0.06 (  0.03)	weight_norm  22.20 ( 22.15)	train_acc   0.84 (  0.85)	train_minacc   0.11 (  0.15)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 6.3834 (6.4550)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.66it/s] 27%|##6       | 7/26 [00:00<00:00, 21.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 21.83it/s] 46%|####6     | 12/26 [00:00<00:00, 29.49it/s] 65%|######5   | 17/26 [00:00<00:00, 32.93it/s]                                                65%|######5   | 17/26 [00:00<00:00, 32.93it/s] 85%|########4 | 22/26 [00:00<00:00, 36.58it/s]100%|##########| 26/26 [00:00<00:00, 28.98it/s]
Test: [   0/  26]	Loss 0.285 (0.285)	test_acc   0.87 (  0.87)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.285 (0.285)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.92 (  0.92)
Test: [  10/  26]	Loss 0.316 (0.338)	test_acc   0.88 (  0.85)	test_minacc   0.31 (  0.26)	test_majacc   0.96 (  0.96)	Loss_d 0.316 (0.338)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.31 (  0.26)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.90 (  0.90)
Test: [  20/  26]	Loss 0.339 (0.333)	test_acc   0.88 (  0.86)	test_minacc   0.36 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 0.339 (0.333)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.36 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.89 (  0.90)
Test: [  26/  26]	Loss 0.353 (0.328)	test_acc   0.86 (  0.86)	test_minacc   0.20 (  0.27)	test_majacc   1.00 (  0.96)	Loss_d 0.353 (0.328)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.20 (  0.27)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.92 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.33it/s]
Test: [  0/  1]	Loss 1.831 (1.831)	test_acc   0.21 (  0.21)	test_minacc   0.12 (  0.12)	test_majacc   0.94 (  0.94)	Loss_d 1.831 (1.831)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.82 (  0.82)
Test: [  1/  1]	Loss 1.831 (1.831)	test_acc   0.21 (  0.21)	test_minacc   0.12 (  0.12)	test_majacc   0.94 (  0.94)	Loss_d 1.831 (1.831)	test_acc_d   0.21 (  0.21)	test_minacc_d   0.12 (  0.12)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.82 (  0.82)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0429 (0.0494)	validation_time 0.0004 (0.0017)	train_time 0.0424 (0.0473)
record: (train_acc, test_acc) (0.8578000237345695, 0.20500001311302185)
last accs (train_acc, test_acc) (0.8578000237345695, 0.20500001311302185)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.14it/s] 19%|#9        | 5/26 [00:00<00:01, 16.47it/s] 35%|###4      | 9/26 [00:00<00:00, 23.13it/s] 50%|#####     | 13/26 [00:00<00:00, 26.97it/s] 65%|######5   | 17/26 [00:00<00:00, 29.45it/s] 81%|########  | 21/26 [00:00<00:00, 31.07it/s] 96%|#########6| 25/26 [00:00<00:00, 32.12it/s]100%|##########| 26/26 [00:01<00:00, 25.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 240000
penalty weights 0.0
Epoch: [5][  26/  26]	Loss 0.364 (0.334)	train_nll   0.36 (  0.33)	train_penalty   0.05 (  0.03)	weight_norm  22.30 ( 22.25)	train_acc   0.86 (  0.86)	train_minacc   0.18 (  0.24)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 6.3867 (6.3443)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 23%|##3       | 6/26 [00:00<00:00, 24.68it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.68it/s] 42%|####2     | 11/26 [00:00<00:00, 33.22it/s] 62%|######1   | 16/26 [00:00<00:00, 37.63it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.63it/s] 81%|########  | 21/26 [00:00<00:00, 36.72it/s]100%|##########| 26/26 [00:00<00:00, 40.06it/s]100%|##########| 26/26 [00:00<00:00, 32.12it/s]
Test: [   0/  26]	Loss 0.275 (0.275)	test_acc   0.87 (  0.87)	test_minacc   0.22 (  0.22)	test_majacc   0.98 (  0.98)	Loss_d 0.275 (0.275)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.300 (0.317)	test_acc   0.88 (  0.87)	test_minacc   0.37 (  0.27)	test_majacc   0.96 (  0.97)	Loss_d 0.300 (0.317)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.37 (  0.27)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.89 (  0.90)
Test: [  20/  26]	Loss 0.309 (0.311)	test_acc   0.88 (  0.87)	test_minacc   0.35 (  0.29)	test_majacc   0.97 (  0.97)	Loss_d 0.309 (0.311)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.35 (  0.29)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.87 (  0.89)
Test: [  26/  26]	Loss 0.332 (0.305)	test_acc   0.86 (  0.87)	test_minacc   0.20 (  0.29)	test_majacc   1.00 (  0.97)	Loss_d 0.332 (0.305)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.20 (  0.29)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.91 (  0.90)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.35it/s]
Test: [  0/  1]	Loss 1.899 (1.899)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.94 (  0.94)	Loss_d 1.899 (1.899)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.78 (  0.78)
Test: [  1/  1]	Loss 1.899 (1.899)	test_acc   0.22 (  0.22)	test_minacc   0.14 (  0.14)	test_majacc   0.94 (  0.94)	Loss_d 1.899 (1.899)	test_acc_d   0.22 (  0.22)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.78 (  0.78)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0457 (0.0488)	validation_time 0.0004 (0.0015)	train_time 0.0452 (0.0469)
record: (train_acc, test_acc) (0.8685000267028808, 0.22300000488758087)
last accs (train_acc, test_acc) (0.8685000267028808, 0.22300000488758087)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.56it/s] 19%|#9        | 5/26 [00:00<00:01, 20.44it/s] 35%|###4      | 9/26 [00:00<00:00, 26.30it/s] 50%|#####     | 13/26 [00:00<00:00, 28.73it/s] 65%|######5   | 17/26 [00:00<00:00, 30.62it/s] 81%|########  | 21/26 [00:00<00:00, 31.98it/s] 96%|#########6| 25/26 [00:00<00:00, 32.98it/s]100%|##########| 26/26 [00:00<00:00, 27.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 240000
penalty weights 0.0
Epoch: [6][  26/  26]	Loss 0.318 (0.310)	train_nll   0.32 (  0.31)	train_penalty   0.03 (  0.02)	weight_norm  22.40 ( 22.35)	train_acc   0.88 (  0.86)	train_minacc   0.43 (  0.31)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 6.4938 (6.3926)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.33it/s] 31%|###       | 8/26 [00:00<00:00, 32.85it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.85it/s] 50%|#####     | 13/26 [00:00<00:00, 39.66it/s] 69%|######9   | 18/26 [00:00<00:00, 42.58it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.58it/s] 88%|########8 | 23/26 [00:00<00:00, 41.28it/s]100%|##########| 26/26 [00:00<00:00, 36.05it/s]
Test: [   0/  26]	Loss 0.255 (0.255)	test_acc   0.87 (  0.87)	test_minacc   0.38 (  0.38)	test_majacc   0.95 (  0.95)	Loss_d 0.255 (0.255)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.293 (0.293)	test_acc   0.89 (  0.87)	test_minacc   0.54 (  0.45)	test_majacc   0.95 (  0.95)	Loss_d 0.293 (0.293)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.54 (  0.45)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.85 (  0.87)
Test: [  20/  26]	Loss 0.305 (0.289)	test_acc   0.86 (  0.87)	test_minacc   0.40 (  0.46)	test_majacc   0.93 (  0.95)	Loss_d 0.305 (0.289)	test_acc_d   0.86 (  0.87)	test_minacc_d   0.40 (  0.46)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.85 (  0.86)
Test: [  26/  26]	Loss 0.278 (0.282)	test_acc   0.91 (  0.88)	test_minacc   0.55 (  0.47)	test_majacc   0.99 (  0.95)	Loss_d 0.278 (0.282)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.55 (  0.47)	test_majacc_d   0.99 (  0.95)	test_corr_d   0.88 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.95it/s]
Test: [  0/  1]	Loss 1.981 (1.981)	test_acc   0.31 (  0.31)	test_minacc   0.25 (  0.25)	test_majacc   0.90 (  0.90)	Loss_d 1.981 (1.981)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.981 (1.981)	test_acc   0.31 (  0.31)	test_minacc   0.25 (  0.25)	test_majacc   0.90 (  0.90)	Loss_d 1.981 (1.981)	test_acc_d   0.31 (  0.31)	test_minacc_d   0.25 (  0.25)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.71 (  0.71)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0439 (0.0481)	validation_time 0.0003 (0.0013)	train_time 0.0436 (0.0465)
record: (train_acc, test_acc) (0.8774000189304352, 0.3140000104904175)
last accs (train_acc, test_acc) (0.8774000189304352, 0.3140000104904175)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.74it/s] 23%|##3       | 6/26 [00:00<00:00, 26.60it/s] 38%|###8      | 10/26 [00:00<00:00, 30.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.07it/s] 69%|######9   | 18/26 [00:00<00:00, 33.29it/s] 85%|########4 | 22/26 [00:00<00:00, 34.19it/s]100%|##########| 26/26 [00:00<00:00, 34.92it/s]100%|##########| 26/26 [00:00<00:00, 29.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 240000
penalty weights 0.0
Epoch: [7][  26/  26]	Loss 0.284 (0.293)	train_nll   0.28 (  0.29)	train_penalty   0.01 (  0.02)	weight_norm  22.52 ( 22.46)	train_acc   0.89 (  0.87)	train_minacc   0.57 (  0.41)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5738 (6.5857)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 23%|##3       | 6/26 [00:00<00:00, 28.16it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.16it/s] 42%|####2     | 11/26 [00:00<00:00, 35.49it/s] 62%|######1   | 16/26 [00:00<00:00, 40.53it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.53it/s] 81%|########  | 21/26 [00:00<00:00, 42.09it/s]100%|##########| 26/26 [00:00<00:00, 44.47it/s]100%|##########| 26/26 [00:00<00:00, 35.61it/s]
Test: [   0/  26]	Loss 0.246 (0.246)	test_acc   0.89 (  0.89)	test_minacc   0.55 (  0.55)	test_majacc   0.94 (  0.94)	Loss_d 0.246 (0.246)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.85 (  0.85)
Test: [  10/  26]	Loss 0.289 (0.285)	test_acc   0.88 (  0.88)	test_minacc   0.52 (  0.52)	test_majacc   0.93 (  0.94)	Loss_d 0.289 (0.285)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.93 (  0.94)	test_corr_d   0.84 (  0.85)
Test: [  20/  26]	Loss 0.304 (0.285)	test_acc   0.85 (  0.88)	test_minacc   0.49 (  0.52)	test_majacc   0.91 (  0.94)	Loss_d 0.304 (0.285)	test_acc_d   0.85 (  0.88)	test_minacc_d   0.49 (  0.52)	test_majacc_d   0.91 (  0.94)	test_corr_d   0.83 (  0.85)
Test: [  26/  26]	Loss 0.253 (0.278)	test_acc   0.89 (  0.88)	test_minacc   0.57 (  0.53)	test_majacc   0.96 (  0.94)	Loss_d 0.253 (0.278)	test_acc_d   0.89 (  0.88)	test_minacc_d   0.57 (  0.53)	test_majacc_d   0.96 (  0.94)	test_corr_d   0.86 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.57it/s]
Test: [  0/  1]	Loss 2.029 (2.029)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.90 (  0.90)	Loss_d 2.029 (2.029)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.68 (  0.68)
Test: [  1/  1]	Loss 2.029 (2.029)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.90 (  0.90)	Loss_d 2.029 (2.029)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.68 (  0.68)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0408 (0.0472)	validation_time 0.0004 (0.0012)	train_time 0.0404 (0.0457)
record: (train_acc, test_acc) (0.8803000260591507, 0.3360000252723694)
last accs (train_acc, test_acc) (0.8803000260591507, 0.3360000252723694)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.80it/s] 19%|#9        | 5/26 [00:00<00:00, 23.17it/s] 35%|###4      | 9/26 [00:00<00:00, 28.84it/s] 50%|#####     | 13/26 [00:00<00:00, 31.49it/s] 65%|######5   | 17/26 [00:00<00:00, 32.96it/s] 81%|########  | 21/26 [00:00<00:00, 33.54it/s] 96%|#########6| 25/26 [00:00<00:00, 33.91it/s]100%|##########| 26/26 [00:00<00:00, 29.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 240000
penalty weights 0.0
Epoch: [8][  26/  26]	Loss 0.299 (0.289)	train_nll   0.30 (  0.29)	train_penalty   0.02 (  0.01)	weight_norm  22.67 ( 22.59)	train_acc   0.89 (  0.88)	train_minacc   0.48 (  0.46)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 6.3067 (6.6160)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:02, 11.17it/s] 23%|##3       | 6/26 [00:00<00:00, 23.40it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.40it/s] 42%|####2     | 11/26 [00:00<00:00, 29.06it/s] 62%|######1   | 16/26 [00:00<00:00, 35.24it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.24it/s] 81%|########  | 21/26 [00:00<00:00, 38.97it/s]100%|##########| 26/26 [00:00<00:00, 41.93it/s]100%|##########| 26/26 [00:00<00:00, 32.53it/s]
Test: [   0/  26]	Loss 0.267 (0.267)	test_acc   0.86 (  0.86)	test_minacc   0.49 (  0.49)	test_majacc   0.92 (  0.92)	Loss_d 0.267 (0.267)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.84 (  0.84)
Test: [  10/  26]	Loss 0.295 (0.303)	test_acc   0.88 (  0.87)	test_minacc   0.56 (  0.50)	test_majacc   0.93 (  0.93)	Loss_d 0.295 (0.303)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.84 (  0.85)
Test: [  20/  26]	Loss 0.298 (0.297)	test_acc   0.87 (  0.87)	test_minacc   0.55 (  0.51)	test_majacc   0.93 (  0.93)	Loss_d 0.298 (0.297)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.82 (  0.85)
Test: [  26/  26]	Loss 0.265 (0.290)	test_acc   0.90 (  0.87)	test_minacc   0.55 (  0.52)	test_majacc   0.98 (  0.94)	Loss_d 0.265 (0.290)	test_acc_d   0.90 (  0.87)	test_minacc_d   0.55 (  0.52)	test_majacc_d   0.98 (  0.94)	test_corr_d   0.86 (  0.85)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.54it/s]
Test: [  0/  1]	Loss 1.876 (1.876)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.90 (  0.90)	Loss_d 1.876 (1.876)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.66 (  0.66)
Test: [  1/  1]	Loss 1.876 (1.876)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.90 (  0.90)	Loss_d 1.876 (1.876)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.66 (  0.66)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0405 (0.0465)	validation_time 0.0004 (0.0011)	train_time 0.0401 (0.0451)
record: (train_acc, test_acc) (0.8746000223755837, 0.35600000619888306)
last accs (train_acc, test_acc) (0.8746000223755837, 0.35600000619888306)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.22it/s] 23%|##3       | 6/26 [00:00<00:00, 26.71it/s] 38%|###8      | 10/26 [00:00<00:00, 31.25it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.24it/s] 69%|######9   | 18/26 [00:00<00:00, 33.22it/s] 85%|########4 | 22/26 [00:00<00:00, 34.08it/s]100%|##########| 26/26 [00:00<00:00, 34.75it/s]100%|##########| 26/26 [00:00<00:00, 29.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 240000
penalty weights 0.0
Epoch: [9][  26/  26]	Loss 0.282 (0.283)	train_nll   0.28 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  22.85 ( 22.76)	train_acc   0.89 (  0.87)	train_minacc   0.50 (  0.44)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.3480 (6.6528)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.82it/s] 23%|##3       | 6/26 [00:00<00:01, 19.78it/s]                                               23%|##3       | 6/26 [00:00<00:01, 19.78it/s] 42%|####2     | 11/26 [00:00<00:00, 29.02it/s] 65%|######5   | 17/26 [00:00<00:00, 34.03it/s]                                                65%|######5   | 17/26 [00:00<00:00, 34.03it/s] 85%|########4 | 22/26 [00:00<00:00, 37.70it/s]100%|##########| 26/26 [00:00<00:00, 29.45it/s]
Test: [   0/  26]	Loss 0.240 (0.240)	test_acc   0.89 (  0.89)	test_minacc   0.71 (  0.71)	test_majacc   0.92 (  0.92)	Loss_d 0.240 (0.240)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.286 (0.283)	test_acc   0.87 (  0.87)	test_minacc   0.62 (  0.64)	test_majacc   0.91 (  0.91)	Loss_d 0.286 (0.283)	test_acc_d   0.87 (  0.87)	test_minacc_d   0.62 (  0.64)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.80 (  0.79)
Test: [  20/  26]	Loss 0.305 (0.275)	test_acc   0.85 (  0.88)	test_minacc   0.67 (  0.67)	test_majacc   0.88 (  0.91)	Loss_d 0.305 (0.275)	test_acc_d   0.85 (  0.88)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.88 (  0.91)	test_corr_d   0.76 (  0.79)
Test: [  26/  26]	Loss 0.248 (0.270)	test_acc   0.90 (  0.88)	test_minacc   0.64 (  0.67)	test_majacc   0.96 (  0.92)	Loss_d 0.248 (0.270)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.64 (  0.67)	test_majacc_d   0.96 (  0.92)	test_corr_d   0.80 (  0.79)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.20it/s]
Test: [  0/  1]	Loss 1.768 (1.768)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.90 (  0.90)	Loss_d 1.768 (1.768)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 1.768 (1.768)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.90 (  0.90)	Loss_d 1.768 (1.768)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.57 (  0.57)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0425 (0.0461)	validation_time 0.0004 (0.0011)	train_time 0.0421 (0.0448)
record: (train_acc, test_acc) (0.8799000172019005, 0.39400002360343933)
last accs (train_acc, test_acc) (0.8799000172019005, 0.39400002360343933)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 15%|#5        | 4/26 [00:00<00:01, 19.33it/s] 31%|###       | 8/26 [00:00<00:00, 26.86it/s] 46%|####6     | 12/26 [00:00<00:00, 30.41it/s] 62%|######1   | 16/26 [00:00<00:00, 32.33it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.50it/s] 92%|#########2| 24/26 [00:00<00:00, 33.67it/s]100%|##########| 26/26 [00:00<00:00, 28.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 240000
penalty weights 0.0
Epoch: [10][  26/  26]	Loss 0.246 (0.261)	train_nll   0.25 (  0.26)	train_penalty   0.01 (  0.01)	weight_norm  23.06 ( 22.96)	train_acc   0.91 (  0.89)	train_minacc   0.64 (  0.54)	train_majacc   0.97 (  0.95)	train_corr   0.00 (  0.00)	l1 6.5647 (6.9147)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.22it/s] 27%|##6       | 7/26 [00:00<00:00, 35.67it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.67it/s] 46%|####6     | 12/26 [00:00<00:00, 40.78it/s] 65%|######5   | 17/26 [00:00<00:00, 38.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.77it/s] 85%|########4 | 22/26 [00:00<00:00, 41.32it/s]100%|##########| 26/26 [00:00<00:00, 36.64it/s]
Test: [   0/  26]	Loss 0.231 (0.231)	test_acc   0.89 (  0.89)	test_minacc   0.69 (  0.69)	test_majacc   0.92 (  0.92)	Loss_d 0.231 (0.231)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.264 (0.263)	test_acc   0.87 (  0.88)	test_minacc   0.65 (  0.70)	test_majacc   0.90 (  0.91)	Loss_d 0.264 (0.263)	test_acc_d   0.87 (  0.88)	test_minacc_d   0.65 (  0.70)	test_majacc_d   0.90 (  0.91)	test_corr_d   0.77 (  0.76)
Test: [  20/  26]	Loss 0.271 (0.257)	test_acc   0.88 (  0.88)	test_minacc   0.78 (  0.72)	test_majacc   0.90 (  0.91)	Loss_d 0.271 (0.257)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.78 (  0.72)	test_majacc_d   0.90 (  0.91)	test_corr_d   0.73 (  0.76)
Test: [  26/  26]	Loss 0.211 (0.249)	test_acc   0.94 (  0.89)	test_minacc   0.82 (  0.74)	test_majacc   0.97 (  0.92)	Loss_d 0.211 (0.249)	test_acc_d   0.94 (  0.89)	test_minacc_d   0.82 (  0.74)	test_majacc_d   0.97 (  0.92)	test_corr_d   0.77 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.05it/s]
Test: [  0/  1]	Loss 1.852 (1.852)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.89 (  0.89)	Loss_d 1.852 (1.852)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.45 (  0.45)
Test: [  1/  1]	Loss 1.852 (1.852)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.89 (  0.89)	Loss_d 1.852 (1.852)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.45 (  0.45)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0401 (0.0455)	validation_time 0.0004 (0.0010)	train_time 0.0396 (0.0443)
record: (train_acc, test_acc) (0.8897000172138214, 0.4480000138282776)
last accs (train_acc, test_acc) (0.8897000172138214, 0.4480000138282776)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.13it/s] 15%|#5        | 4/26 [00:00<00:01, 17.44it/s] 31%|###       | 8/26 [00:00<00:00, 25.22it/s] 46%|####6     | 12/26 [00:00<00:00, 29.41it/s] 62%|######1   | 16/26 [00:00<00:00, 32.07it/s] 77%|#######6  | 20/26 [00:00<00:00, 33.97it/s] 96%|#########6| 25/26 [00:00<00:00, 36.17it/s]100%|##########| 26/26 [00:00<00:00, 28.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 240000
penalty weights 0.0
Epoch: [11][  26/  26]	Loss 0.245 (0.242)	train_nll   0.25 (  0.24)	train_penalty   0.00 (  0.01)	weight_norm  23.33 ( 23.20)	train_acc   0.90 (  0.90)	train_minacc   0.59 (  0.60)	train_majacc   0.96 (  0.95)	train_corr   0.00 (  0.00)	l1 7.0172 (7.0084)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.73it/s] 23%|##3       | 6/26 [00:00<00:00, 31.48it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.48it/s] 42%|####2     | 11/26 [00:00<00:00, 34.81it/s] 62%|######1   | 16/26 [00:00<00:00, 38.67it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.67it/s] 81%|########  | 21/26 [00:00<00:00, 40.96it/s]100%|##########| 26/26 [00:00<00:00, 43.16it/s]100%|##########| 26/26 [00:00<00:00, 35.38it/s]
Test: [   0/  26]	Loss 0.214 (0.214)	test_acc   0.88 (  0.88)	test_minacc   0.67 (  0.67)	test_majacc   0.92 (  0.92)	Loss_d 0.214 (0.214)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.247 (0.252)	test_acc   0.88 (  0.89)	test_minacc   0.60 (  0.70)	test_majacc   0.92 (  0.92)	Loss_d 0.247 (0.252)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.60 (  0.70)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.78 (  0.74)
Test: [  20/  26]	Loss 0.271 (0.248)	test_acc   0.88 (  0.89)	test_minacc   0.82 (  0.73)	test_majacc   0.89 (  0.92)	Loss_d 0.271 (0.248)	test_acc_d   0.88 (  0.89)	test_minacc_d   0.82 (  0.73)	test_majacc_d   0.89 (  0.92)	test_corr_d   0.69 (  0.73)
Test: [  26/  26]	Loss 0.166 (0.236)	test_acc   0.94 (  0.90)	test_minacc   0.86 (  0.76)	test_majacc   0.96 (  0.92)	Loss_d 0.166 (0.236)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.86 (  0.76)	test_majacc_d   0.96 (  0.92)	test_corr_d   0.73 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.08it/s]
Test: [  0/  1]	Loss 2.138 (2.138)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.89 (  0.89)	Loss_d 2.138 (2.138)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 2.138 (2.138)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.89 (  0.89)	Loss_d 2.138 (2.138)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.41 (  0.41)
Overall Timing[ 11/  1]	epoch_time 0.0417 (0.0452)	validation_time 0.0005 (0.0010)	train_time 0.0412 (0.0440)
record: (train_acc, test_acc) (0.8897000172138214, 0.4480000138282776)
last accs (train_acc, test_acc) (0.8965000251531601, 0.4360000193119049)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.43it/s] 12%|#1        | 3/26 [00:00<00:01, 12.16it/s] 27%|##6       | 7/26 [00:00<00:00, 20.75it/s] 42%|####2     | 11/26 [00:00<00:00, 25.73it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.72it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.35it/s] 88%|########8 | 23/26 [00:00<00:00, 31.69it/s]100%|##########| 26/26 [00:00<00:00, 26.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 240000
penalty weights 0.0
Epoch: [12][  26/  26]	Loss 0.217 (0.235)	train_nll   0.22 (  0.24)	train_penalty   0.01 (  0.01)	weight_norm  23.66 ( 23.50)	train_acc   0.91 (  0.90)	train_minacc   0.55 (  0.61)	train_majacc   0.99 (  0.95)	train_corr   0.00 (  0.00)	l1 6.8472 (6.9601)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.33it/s] 23%|##3       | 6/26 [00:00<00:00, 24.17it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.17it/s] 42%|####2     | 11/26 [00:00<00:00, 32.39it/s] 62%|######1   | 16/26 [00:00<00:00, 38.18it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.18it/s] 81%|########  | 21/26 [00:00<00:00, 38.06it/s]100%|##########| 26/26 [00:00<00:00, 41.11it/s]100%|##########| 26/26 [00:00<00:00, 32.28it/s]
Test: [   0/  26]	Loss 0.199 (0.199)	test_acc   0.91 (  0.91)	test_minacc   0.82 (  0.82)	test_majacc   0.93 (  0.93)	Loss_d 0.199 (0.199)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.248 (0.237)	test_acc   0.90 (  0.90)	test_minacc   0.69 (  0.74)	test_majacc   0.93 (  0.93)	Loss_d 0.248 (0.237)	test_acc_d   0.90 (  0.90)	test_minacc_d   0.69 (  0.74)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.77 (  0.75)
Test: [  20/  26]	Loss 0.220 (0.224)	test_acc   0.91 (  0.90)	test_minacc   0.84 (  0.76)	test_majacc   0.92 (  0.93)	Loss_d 0.220 (0.224)	test_acc_d   0.91 (  0.90)	test_minacc_d   0.84 (  0.76)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.71 (  0.74)
Test: [  26/  26]	Loss 0.146 (0.216)	test_acc   0.96 (  0.91)	test_minacc   0.89 (  0.77)	test_majacc   0.98 (  0.93)	Loss_d 0.146 (0.216)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.89 (  0.77)	test_majacc_d   0.98 (  0.93)	test_corr_d   0.74 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.53it/s]
Test: [  0/  1]	Loss 2.048 (2.048)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 2.048 (2.048)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 2.048 (2.048)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 2.048 (2.048)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.38 (  0.38)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/122/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0404 (0.0448)	validation_time 0.0005 (0.0009)	train_time 0.0399 (0.0437)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 19%|#9        | 5/26 [00:00<00:00, 21.11it/s] 35%|###4      | 9/26 [00:00<00:00, 26.91it/s] 50%|#####     | 13/26 [00:00<00:00, 29.71it/s] 65%|######5   | 17/26 [00:00<00:00, 30.44it/s] 81%|########  | 21/26 [00:00<00:00, 31.77it/s] 96%|#########6| 25/26 [00:00<00:00, 33.09it/s]100%|##########| 26/26 [00:00<00:00, 27.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 240000
penalty weights 0.0
Epoch: [13][  26/  26]	Loss 0.163 (0.232)	train_nll   0.16 (  0.23)	train_penalty   0.00 (  0.01)	weight_norm  23.98 ( 23.82)	train_acc   0.94 (  0.90)	train_minacc   0.70 (  0.62)	train_majacc   1.00 (  0.95)	train_corr   0.00 (  0.00)	l1 7.2055 (6.8431)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.66it/s] 19%|#9        | 5/26 [00:00<00:01, 20.38it/s] 38%|###8      | 10/26 [00:00<00:00, 31.16it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.16it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.62it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.62it/s] 96%|#########6| 25/26 [00:00<00:00, 39.70it/s]100%|##########| 26/26 [00:00<00:00, 32.16it/s]
Test: [   0/  26]	Loss 0.189 (0.189)	test_acc   0.92 (  0.92)	test_minacc   0.65 (  0.65)	test_majacc   0.96 (  0.96)	Loss_d 0.189 (0.189)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.81 (  0.81)
Test: [  10/  26]	Loss 0.177 (0.205)	test_acc   0.93 (  0.91)	test_minacc   0.73 (  0.71)	test_majacc   0.96 (  0.95)	Loss_d 0.177 (0.205)	test_acc_d   0.93 (  0.91)	test_minacc_d   0.73 (  0.71)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.82 (  0.79)
Test: [  20/  26]	Loss 0.174 (0.197)	test_acc   0.92 (  0.92)	test_minacc   0.78 (  0.73)	test_majacc   0.94 (  0.95)	Loss_d 0.174 (0.197)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.78 (  0.73)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.77 (  0.78)
Test: [  26/  26]	Loss 0.109 (0.187)	test_acc   0.99 (  0.92)	test_minacc   0.98 (  0.76)	test_majacc   0.99 (  0.95)	Loss_d 0.109 (0.187)	test_acc_d   0.99 (  0.92)	test_minacc_d   0.98 (  0.76)	test_majacc_d   0.99 (  0.95)	test_corr_d   0.74 (  0.78)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.85it/s]
Test: [  0/  1]	Loss 2.550 (2.550)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.90 (  0.90)	Loss_d 2.550 (2.550)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.52 (  0.52)
Test: [  1/  1]	Loss 2.550 (2.550)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.90 (  0.90)	Loss_d 2.550 (2.550)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.52 (  0.52)
Overall Timing[ 13/  1]	epoch_time 0.0410 (0.0446)	validation_time 0.0004 (0.0009)	train_time 0.0405 (0.0435)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.924200022816658, 0.38100001215934753)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.93it/s] 23%|##3       | 6/26 [00:00<00:00, 27.13it/s] 38%|###8      | 10/26 [00:00<00:00, 30.29it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.97it/s] 69%|######9   | 18/26 [00:00<00:00, 33.27it/s] 85%|########4 | 22/26 [00:00<00:00, 33.35it/s]100%|##########| 26/26 [00:00<00:00, 34.45it/s]100%|##########| 26/26 [00:00<00:00, 30.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 240000
penalty weights 0.0
Epoch: [14][  26/  26]	Loss 0.118 (0.194)	train_nll   0.12 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm  24.34 ( 24.16)	train_acc   0.96 (  0.92)	train_minacc   0.80 (  0.70)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 7.7293 (7.5150)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.21it/s] 23%|##3       | 6/26 [00:00<00:00, 22.36it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.36it/s] 42%|####2     | 11/26 [00:00<00:00, 31.18it/s] 62%|######1   | 16/26 [00:00<00:00, 37.20it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.20it/s] 81%|########  | 21/26 [00:00<00:00, 39.38it/s]100%|##########| 26/26 [00:00<00:00, 32.45it/s]
Test: [   0/  26]	Loss 0.136 (0.136)	test_acc   0.94 (  0.94)	test_minacc   0.76 (  0.76)	test_majacc   0.97 (  0.97)	Loss_d 0.136 (0.136)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.79 (  0.79)
Test: [  10/  26]	Loss 0.174 (0.175)	test_acc   0.94 (  0.93)	test_minacc   0.77 (  0.77)	test_majacc   0.97 (  0.96)	Loss_d 0.174 (0.175)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.80 (  0.76)
Test: [  20/  26]	Loss 0.151 (0.166)	test_acc   0.94 (  0.93)	test_minacc   0.82 (  0.78)	test_majacc   0.96 (  0.96)	Loss_d 0.151 (0.166)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.82 (  0.78)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.77 (  0.76)
Test: [  26/  26]	Loss 0.060 (0.157)	test_acc   1.00 (  0.94)	test_minacc   1.00 (  0.81)	test_majacc   1.00 (  0.96)	Loss_d 0.060 (0.157)	test_acc_d   1.00 (  0.94)	test_minacc_d   1.00 (  0.81)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.70 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.43it/s]
Test: [  0/  1]	Loss 2.804 (2.804)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.93 (  0.93)	Loss_d 2.804 (2.804)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 2.804 (2.804)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.93 (  0.93)	Loss_d 2.804 (2.804)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.48 (  0.48)
Overall Timing[ 14/  1]	epoch_time 0.0393 (0.0442)	validation_time 0.0003 (0.0009)	train_time 0.0389 (0.0432)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9386000222563744, 0.39100003242492676)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.97it/s] 19%|#9        | 5/26 [00:00<00:00, 22.61it/s] 35%|###4      | 9/26 [00:00<00:00, 27.28it/s] 50%|#####     | 13/26 [00:00<00:00, 30.60it/s] 65%|######5   | 17/26 [00:00<00:00, 32.02it/s] 81%|########  | 21/26 [00:00<00:00, 33.43it/s] 96%|#########6| 25/26 [00:00<00:00, 33.96it/s]100%|##########| 26/26 [00:00<00:00, 28.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 240000
penalty weights 0.0
Epoch: [15][  26/  26]	Loss 0.193 (0.191)	train_nll   0.19 (  0.19)	train_penalty   0.01 (  0.00)	weight_norm  24.77 ( 24.55)	train_acc   0.92 (  0.92)	train_minacc   0.57 (  0.71)	train_majacc   1.00 (  0.96)	train_corr   0.00 (  0.00)	l1 7.4856 (7.6262)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.69it/s] 23%|##3       | 6/26 [00:00<00:00, 22.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.51it/s] 42%|####2     | 11/26 [00:00<00:00, 31.10it/s] 62%|######1   | 16/26 [00:00<00:00, 36.88it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.88it/s] 81%|########  | 21/26 [00:00<00:00, 36.70it/s]100%|##########| 26/26 [00:00<00:00, 40.25it/s]100%|##########| 26/26 [00:00<00:00, 31.05it/s]
Test: [   0/  26]	Loss 0.153 (0.153)	test_acc   0.94 (  0.94)	test_minacc   0.76 (  0.76)	test_majacc   0.97 (  0.97)	Loss_d 0.153 (0.153)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.164 (0.173)	test_acc   0.94 (  0.94)	test_minacc   0.73 (  0.69)	test_majacc   0.97 (  0.98)	Loss_d 0.164 (0.173)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.73 (  0.69)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.82 (  0.82)
Test: [  20/  26]	Loss 0.114 (0.154)	test_acc   0.96 (  0.94)	test_minacc   0.80 (  0.72)	test_majacc   0.99 (  0.98)	Loss_d 0.114 (0.154)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.80 (  0.72)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.79 (  0.81)
Test: [  26/  26]	Loss 0.087 (0.144)	test_acc   0.98 (  0.95)	test_minacc   0.91 (  0.75)	test_majacc   1.00 (  0.98)	Loss_d 0.087 (0.144)	test_acc_d   0.98 (  0.95)	test_minacc_d   0.91 (  0.75)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.76 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.28it/s]
Test: [  0/  1]	Loss 2.886 (2.886)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.92 (  0.92)	Loss_d 2.886 (2.886)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.61 (  0.61)
Test: [  1/  1]	Loss 2.886 (2.886)	test_acc   0.32 (  0.32)	test_minacc   0.26 (  0.26)	test_majacc   0.92 (  0.92)	Loss_d 2.886 (2.886)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.61 (  0.61)
Overall Timing[ 15/  1]	epoch_time 0.0444 (0.0442)	validation_time 0.0004 (0.0008)	train_time 0.0439 (0.0432)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9483000174760818, 0.3230000138282776)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.08it/s] 15%|#5        | 4/26 [00:00<00:01, 15.35it/s] 31%|###       | 8/26 [00:00<00:00, 22.97it/s] 46%|####6     | 12/26 [00:00<00:00, 27.18it/s] 62%|######1   | 16/26 [00:00<00:00, 30.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 32.65it/s] 92%|#########2| 24/26 [00:00<00:00, 34.59it/s]100%|##########| 26/26 [00:00<00:00, 27.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 240000
penalty weights 0.0
Epoch: [16][  26/  26]	Loss 0.147 (0.194)	train_nll   0.15 (  0.19)	train_penalty   0.00 (  0.01)	weight_norm  25.27 ( 25.02)	train_acc   0.93 (  0.92)	train_minacc   0.64 (  0.70)	train_majacc   0.99 (  0.96)	train_corr   0.00 (  0.00)	l1 7.7903 (7.5256)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.97it/s] 19%|#9        | 5/26 [00:00<00:01, 19.06it/s] 38%|###8      | 10/26 [00:00<00:00, 29.66it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.66it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.69it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.18it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.18it/s] 96%|#########6| 25/26 [00:00<00:00, 39.88it/s]100%|##########| 26/26 [00:00<00:00, 30.95it/s]
Test: [   0/  26]	Loss 0.142 (0.142)	test_acc   0.94 (  0.94)	test_minacc   0.71 (  0.71)	test_majacc   0.98 (  0.98)	Loss_d 0.142 (0.142)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.187 (0.160)	test_acc   0.94 (  0.94)	test_minacc   0.69 (  0.69)	test_majacc   0.97 (  0.98)	Loss_d 0.187 (0.160)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.129 (0.150)	test_acc   0.95 (  0.94)	test_minacc   0.78 (  0.71)	test_majacc   0.97 (  0.98)	Loss_d 0.129 (0.150)	test_acc_d   0.95 (  0.94)	test_minacc_d   0.78 (  0.71)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.79 (  0.81)
Test: [  26/  26]	Loss 0.089 (0.143)	test_acc   0.97 (  0.94)	test_minacc   0.89 (  0.73)	test_majacc   0.99 (  0.98)	Loss_d 0.089 (0.143)	test_acc_d   0.97 (  0.94)	test_minacc_d   0.89 (  0.73)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.75 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.32it/s]
Test: [  0/  1]	Loss 3.023 (3.023)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.91 (  0.91)	Loss_d 3.023 (3.023)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.57 (  0.57)
Test: [  1/  1]	Loss 3.023 (3.023)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.91 (  0.91)	Loss_d 3.023 (3.023)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.57 (  0.57)
Overall Timing[ 16/  1]	epoch_time 0.0382 (0.0439)	validation_time 0.0003 (0.0008)	train_time 0.0378 (0.0429)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9447000257372856, 0.33800002932548523)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.90it/s] 19%|#9        | 5/26 [00:00<00:00, 22.42it/s] 35%|###4      | 9/26 [00:00<00:00, 27.41it/s] 50%|#####     | 13/26 [00:00<00:00, 30.37it/s] 65%|######5   | 17/26 [00:00<00:00, 31.72it/s] 81%|########  | 21/26 [00:00<00:00, 33.31it/s] 96%|#########6| 25/26 [00:00<00:00, 34.11it/s]100%|##########| 26/26 [00:00<00:00, 28.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 240000
penalty weights 0.0
Epoch: [17][  26/  26]	Loss 0.112 (0.156)	train_nll   0.11 (  0.16)	train_penalty   0.00 (  0.00)	weight_norm  25.72 ( 25.49)	train_acc   0.96 (  0.94)	train_minacc   0.80 (  0.77)	train_majacc   0.99 (  0.97)	train_corr   0.00 (  0.00)	l1 7.7561 (8.4709)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.80it/s] 27%|##6       | 7/26 [00:00<00:00, 35.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.14it/s] 46%|####6     | 12/26 [00:00<00:00, 40.64it/s] 65%|######5   | 17/26 [00:00<00:00, 42.95it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.95it/s] 85%|########4 | 22/26 [00:00<00:00, 44.17it/s]100%|##########| 26/26 [00:00<00:00, 35.89it/s]
Test: [   0/  26]	Loss 0.158 (0.158)	test_acc   0.94 (  0.94)	test_minacc   0.69 (  0.69)	test_majacc   0.98 (  0.98)	Loss_d 0.158 (0.158)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.167 (0.167)	test_acc   0.93 (  0.94)	test_minacc   0.71 (  0.72)	test_majacc   0.97 (  0.98)	Loss_d 0.167 (0.167)	test_acc_d   0.93 (  0.94)	test_minacc_d   0.71 (  0.72)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.81 (  0.80)
Test: [  20/  26]	Loss 0.149 (0.152)	test_acc   0.93 (  0.94)	test_minacc   0.75 (  0.74)	test_majacc   0.96 (  0.98)	Loss_d 0.149 (0.152)	test_acc_d   0.93 (  0.94)	test_minacc_d   0.75 (  0.74)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.78 (  0.80)
Test: [  26/  26]	Loss 0.075 (0.145)	test_acc   0.98 (  0.95)	test_minacc   0.91 (  0.76)	test_majacc   1.00 (  0.98)	Loss_d 0.075 (0.145)	test_acc_d   0.98 (  0.95)	test_minacc_d   0.91 (  0.76)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.75 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.59it/s]
Test: [  0/  1]	Loss 2.956 (2.956)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 2.956 (2.956)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.56 (  0.56)
Test: [  1/  1]	Loss 2.956 (2.956)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 2.956 (2.956)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.56 (  0.56)
Overall Timing[ 17/  1]	epoch_time 0.0410 (0.0437)	validation_time 0.0004 (0.0008)	train_time 0.0406 (0.0428)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9460000154972077, 0.3540000021457672)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.25it/s] 19%|#9        | 5/26 [00:00<00:01, 18.70it/s] 35%|###4      | 9/26 [00:00<00:00, 24.97it/s] 50%|#####     | 13/26 [00:00<00:00, 28.24it/s] 65%|######5   | 17/26 [00:00<00:00, 29.87it/s] 81%|########  | 21/26 [00:00<00:00, 32.20it/s] 96%|#########6| 25/26 [00:00<00:00, 33.91it/s]100%|##########| 26/26 [00:00<00:00, 26.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 240000
penalty weights 0.0
Epoch: [18][  26/  26]	Loss 0.065 (0.129)	train_nll   0.06 (  0.13)	train_penalty   0.00 (  0.00)	weight_norm  26.12 ( 25.92)	train_acc   0.98 (  0.95)	train_minacc   0.93 (  0.82)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 8.6062 (8.7126)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.15it/s] 19%|#9        | 5/26 [00:00<00:00, 24.55it/s]                                               19%|#9        | 5/26 [00:00<00:00, 24.55it/s] 42%|####2     | 11/26 [00:00<00:00, 38.80it/s] 62%|######1   | 16/26 [00:00<00:00, 41.88it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.88it/s] 85%|########4 | 22/26 [00:00<00:00, 46.79it/s]100%|##########| 26/26 [00:00<00:00, 38.33it/s]
Test: [   0/  26]	Loss 0.133 (0.133)	test_acc   0.95 (  0.95)	test_minacc   0.87 (  0.87)	test_majacc   0.96 (  0.96)	Loss_d 0.133 (0.133)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.87 (  0.87)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.148 (0.145)	test_acc   0.94 (  0.95)	test_minacc   0.73 (  0.79)	test_majacc   0.98 (  0.97)	Loss_d 0.148 (0.145)	test_acc_d   0.94 (  0.95)	test_minacc_d   0.73 (  0.79)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.79 (  0.76)
Test: [  20/  26]	Loss 0.098 (0.128)	test_acc   0.95 (  0.95)	test_minacc   0.84 (  0.81)	test_majacc   0.97 (  0.98)	Loss_d 0.098 (0.128)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.84 (  0.81)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.76 (  0.76)
Test: [  26/  26]	Loss 0.042 (0.118)	test_acc   1.00 (  0.96)	test_minacc   1.00 (  0.83)	test_majacc   1.00 (  0.98)	Loss_d 0.042 (0.118)	test_acc_d   1.00 (  0.96)	test_minacc_d   1.00 (  0.83)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.70 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.82it/s]
Test: [  0/  1]	Loss 3.251 (3.251)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 3.251 (3.251)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 3.251 (3.251)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 3.251 (3.251)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.49 (  0.49)
Overall Timing[ 18/  1]	epoch_time 0.0387 (0.0434)	validation_time 0.0003 (0.0008)	train_time 0.0383 (0.0426)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9562000188827514, 0.37800002098083496)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.40it/s] 19%|#9        | 5/26 [00:00<00:00, 21.24it/s] 35%|###4      | 9/26 [00:00<00:00, 27.86it/s] 50%|#####     | 13/26 [00:00<00:00, 31.48it/s] 65%|######5   | 17/26 [00:00<00:00, 33.75it/s] 81%|########  | 21/26 [00:00<00:00, 35.29it/s] 96%|#########6| 25/26 [00:00<00:00, 36.18it/s]100%|##########| 26/26 [00:00<00:00, 29.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 240000
penalty weights 0.0
Epoch: [19][  26/  26]	Loss 0.128 (0.118)	train_nll   0.13 (  0.12)	train_penalty   0.00 (  0.00)	weight_norm  26.56 ( 26.34)	train_acc   0.94 (  0.95)	train_minacc   0.82 (  0.83)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 9.4808 (9.3451)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.63it/s] 35%|###4      | 9/26 [00:00<00:00, 42.40it/s]                                               35%|###4      | 9/26 [00:00<00:00, 42.40it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 49.74it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 49.74it/s] 96%|#########6| 25/26 [00:00<00:00, 47.36it/s]100%|##########| 26/26 [00:00<00:00, 42.26it/s]
Test: [   0/  26]	Loss 0.107 (0.107)	test_acc   0.95 (  0.95)	test_minacc   0.89 (  0.89)	test_majacc   0.96 (  0.96)	Loss_d 0.107 (0.107)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.168 (0.156)	test_acc   0.94 (  0.94)	test_minacc   0.79 (  0.81)	test_majacc   0.97 (  0.96)	Loss_d 0.168 (0.156)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.79 (  0.81)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.76 (  0.74)
Test: [  20/  26]	Loss 0.107 (0.138)	test_acc   0.95 (  0.95)	test_minacc   0.84 (  0.82)	test_majacc   0.97 (  0.97)	Loss_d 0.107 (0.138)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.84 (  0.82)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.74 (  0.74)
Test: [  26/  26]	Loss 0.058 (0.125)	test_acc   0.98 (  0.95)	test_minacc   0.95 (  0.85)	test_majacc   0.99 (  0.97)	Loss_d 0.058 (0.125)	test_acc_d   0.98 (  0.95)	test_minacc_d   0.95 (  0.85)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.67 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.34it/s]
Test: [  0/  1]	Loss 3.569 (3.569)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.87 (  0.87)	Loss_d 3.569 (3.569)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 3.569 (3.569)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.87 (  0.87)	Loss_d 3.569 (3.569)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.40 (  0.40)
Overall Timing[ 19/  1]	epoch_time 0.0357 (0.0431)	validation_time 0.0004 (0.0007)	train_time 0.0352 (0.0422)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9513000172972679, 0.40300002694129944)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.16it/s] 19%|#9        | 5/26 [00:00<00:00, 22.47it/s] 35%|###4      | 9/26 [00:00<00:00, 28.30it/s] 50%|#####     | 13/26 [00:00<00:00, 31.66it/s] 65%|######5   | 17/26 [00:00<00:00, 33.51it/s] 81%|########  | 21/26 [00:00<00:00, 34.04it/s] 96%|#########6| 25/26 [00:00<00:00, 34.59it/s]100%|##########| 26/26 [00:00<00:00, 29.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 240000
penalty weights 0.0
Epoch: [20][  26/  26]	Loss 0.099 (0.116)	train_nll   0.10 (  0.12)	train_penalty   0.00 (  0.00)	weight_norm  27.04 ( 26.82)	train_acc   0.97 (  0.96)	train_minacc   0.86 (  0.85)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 9.7980 (9.0531)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.59it/s] 31%|###       | 8/26 [00:00<00:00, 39.76it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.76it/s] 54%|#####3    | 14/26 [00:00<00:00, 46.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.67it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.67it/s] 96%|#########6| 25/26 [00:00<00:00, 48.61it/s]100%|##########| 26/26 [00:00<00:00, 42.17it/s]
Test: [   0/  26]	Loss 0.085 (0.085)	test_acc   0.96 (  0.96)	test_minacc   0.82 (  0.82)	test_majacc   0.99 (  0.99)	Loss_d 0.085 (0.085)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.82 (  0.82)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.78)
Test: [  10/  26]	Loss 0.101 (0.117)	test_acc   0.97 (  0.96)	test_minacc   0.85 (  0.80)	test_majacc   0.99 (  0.99)	Loss_d 0.101 (0.117)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.85 (  0.80)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.78 (  0.77)
Test: [  20/  26]	Loss 0.043 (0.101)	test_acc   0.98 (  0.96)	test_minacc   0.91 (  0.82)	test_majacc   1.00 (  0.99)	Loss_d 0.043 (0.101)	test_acc_d   0.98 (  0.96)	test_minacc_d   0.91 (  0.82)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.77 (  0.76)
Test: [  26/  26]	Loss 0.037 (0.088)	test_acc   0.99 (  0.97)	test_minacc   0.93 (  0.84)	test_majacc   1.00 (  0.99)	Loss_d 0.037 (0.088)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.93 (  0.84)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.88it/s]
Test: [  0/  1]	Loss 4.077 (4.077)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.89 (  0.89)	Loss_d 4.077 (4.077)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 4.077 (4.077)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.89 (  0.89)	Loss_d 4.077 (4.077)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.50 (  0.50)
Overall Timing[ 20/  1]	epoch_time 0.0367 (0.0427)	validation_time 0.0004 (0.0007)	train_time 0.0363 (0.0419)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9674000248908997, 0.359000027179718)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 19%|#9        | 5/26 [00:00<00:00, 23.84it/s] 35%|###4      | 9/26 [00:00<00:00, 30.06it/s] 50%|#####     | 13/26 [00:00<00:00, 33.66it/s] 65%|######5   | 17/26 [00:00<00:00, 35.35it/s] 81%|########  | 21/26 [00:00<00:00, 36.40it/s] 96%|#########6| 25/26 [00:00<00:00, 37.05it/s]100%|##########| 26/26 [00:00<00:00, 31.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 240000
penalty weights 0.0
Epoch: [21][  26/  26]	Loss 0.039 (0.082)	train_nll   0.04 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  27.46 ( 27.25)	train_acc   0.99 (  0.97)	train_minacc   0.93 (  0.88)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 10.1851 (10.1629)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.92it/s] 23%|##3       | 6/26 [00:00<00:00, 31.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.63it/s] 42%|####2     | 11/26 [00:00<00:00, 39.64it/s] 65%|######5   | 17/26 [00:00<00:00, 44.06it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.06it/s] 88%|########8 | 23/26 [00:00<00:00, 48.46it/s]100%|##########| 26/26 [00:00<00:00, 39.59it/s]
Test: [   0/  26]	Loss 0.065 (0.065)	test_acc   0.97 (  0.97)	test_minacc   0.89 (  0.89)	test_majacc   0.99 (  0.99)	Loss_d 0.065 (0.065)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.89 (  0.89)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.127 (0.124)	test_acc   0.96 (  0.95)	test_minacc   0.77 (  0.77)	test_majacc   0.99 (  0.99)	Loss_d 0.127 (0.124)	test_acc_d   0.96 (  0.95)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.79 (  0.78)
Test: [  20/  26]	Loss 0.039 (0.110)	test_acc   0.98 (  0.96)	test_minacc   0.89 (  0.80)	test_majacc   1.00 (  0.99)	Loss_d 0.039 (0.110)	test_acc_d   0.98 (  0.96)	test_minacc_d   0.89 (  0.80)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.78 (  0.77)
Test: [  26/  26]	Loss 0.015 (0.095)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.82)	test_majacc   1.00 (  0.99)	Loss_d 0.015 (0.095)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.82)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.96it/s]
Test: [  0/  1]	Loss 4.253 (4.253)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 4.253 (4.253)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 4.253 (4.253)	test_acc   0.34 (  0.34)	test_minacc   0.27 (  0.27)	test_majacc   0.96 (  0.96)	Loss_d 4.253 (4.253)	test_acc_d   0.34 (  0.34)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.53 (  0.53)
Overall Timing[ 21/  1]	epoch_time 0.0352 (0.0424)	validation_time 0.0003 (0.0007)	train_time 0.0349 (0.0416)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9650000276565551, 0.3410000205039978)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.97it/s] 19%|#9        | 5/26 [00:00<00:00, 26.24it/s] 35%|###4      | 9/26 [00:00<00:00, 31.33it/s] 50%|#####     | 13/26 [00:00<00:00, 34.31it/s] 65%|######5   | 17/26 [00:00<00:00, 36.06it/s] 81%|########  | 21/26 [00:00<00:00, 37.20it/s] 96%|#########6| 25/26 [00:00<00:00, 37.07it/s]100%|##########| 26/26 [00:00<00:00, 31.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 240000
penalty weights 0.0
Epoch: [22][  26/  26]	Loss 0.059 (0.083)	train_nll   0.06 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  27.88 ( 27.66)	train_acc   0.98 (  0.97)	train_minacc   0.91 (  0.88)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 10.4636 (10.5862)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.19it/s] 19%|#9        | 5/26 [00:00<00:01, 18.92it/s] 38%|###8      | 10/26 [00:00<00:00, 29.15it/s]                                                38%|###8      | 10/26 [00:00<00:00, 29.15it/s] 62%|######1   | 16/26 [00:00<00:00, 37.73it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.73it/s] 81%|########  | 21/26 [00:00<00:00, 40.40it/s]100%|##########| 26/26 [00:00<00:00, 43.03it/s]100%|##########| 26/26 [00:00<00:00, 32.35it/s]
Test: [   0/  26]	Loss 0.068 (0.068)	test_acc   0.98 (  0.98)	test_minacc   0.91 (  0.91)	test_majacc   0.99 (  0.99)	Loss_d 0.068 (0.068)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.104 (0.112)	test_acc   0.95 (  0.96)	test_minacc   0.77 (  0.79)	test_majacc   0.98 (  0.99)	Loss_d 0.104 (0.112)	test_acc_d   0.95 (  0.96)	test_minacc_d   0.77 (  0.79)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.79 (  0.77)
Test: [  20/  26]	Loss 0.055 (0.101)	test_acc   0.98 (  0.96)	test_minacc   0.89 (  0.81)	test_majacc   1.00 (  0.99)	Loss_d 0.055 (0.101)	test_acc_d   0.98 (  0.96)	test_minacc_d   0.89 (  0.81)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.77 (  0.76)
Test: [  26/  26]	Loss 0.022 (0.089)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.84)	test_majacc   1.00 (  0.99)	Loss_d 0.022 (0.089)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.84)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.67 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.58it/s]
Test: [  0/  1]	Loss 4.326 (4.326)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.92 (  0.92)	Loss_d 4.326 (4.326)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 4.326 (4.326)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.92 (  0.92)	Loss_d 4.326 (4.326)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.49 (  0.49)
Overall Timing[ 22/  1]	epoch_time 0.0375 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0370 (0.0414)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9655000218153, 0.37400001287460327)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.83it/s] 15%|#5        | 4/26 [00:00<00:01, 19.93it/s] 31%|###       | 8/26 [00:00<00:00, 28.02it/s] 46%|####6     | 12/26 [00:00<00:00, 32.37it/s] 62%|######1   | 16/26 [00:00<00:00, 34.42it/s] 77%|#######6  | 20/26 [00:00<00:00, 36.16it/s] 92%|#########2| 24/26 [00:00<00:00, 35.95it/s]100%|##########| 26/26 [00:00<00:00, 30.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 240000
penalty weights 0.0
l1 at pgd_anneal_iters 10.463499069213867
set z to 9.940324115753173
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 240000
penalty weights 0.0
Epoch: [23][  26/  26]	Loss 0.070 (0.082)	train_nll   0.07 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  28.35 ( 28.12)	train_acc   0.97 (  0.97)	train_minacc   0.91 (  0.91)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 10.7055 (10.6343)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.16it/s] 27%|##6       | 7/26 [00:00<00:00, 29.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.53it/s] 50%|#####     | 13/26 [00:00<00:00, 38.99it/s] 69%|######9   | 18/26 [00:00<00:00, 42.65it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.65it/s] 88%|########8 | 23/26 [00:00<00:00, 42.99it/s]100%|##########| 26/26 [00:00<00:00, 38.00it/s]
Test: [   0/  26]	Loss 0.093 (0.093)	test_acc   0.96 (  0.96)	test_minacc   0.75 (  0.75)	test_majacc   1.00 (  1.00)	Loss_d 0.093 (0.093)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.75 (  0.75)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.108 (0.143)	test_acc   0.96 (  0.95)	test_minacc   0.71 (  0.69)	test_majacc   1.00 (  1.00)	Loss_d 0.108 (0.143)	test_acc_d   0.96 (  0.95)	test_minacc_d   0.71 (  0.69)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.069 (0.116)	test_acc   0.97 (  0.96)	test_minacc   0.80 (  0.75)	test_majacc   1.00 (  1.00)	Loss_d 0.069 (0.116)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.80 (  0.75)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.81 (  0.81)
Test: [  26/  26]	Loss 0.031 (0.102)	test_acc   1.00 (  0.96)	test_minacc   0.98 (  0.77)	test_majacc   1.00 (  1.00)	Loss_d 0.031 (0.102)	test_acc_d   1.00 (  0.96)	test_minacc_d   0.98 (  0.77)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.05it/s]
Test: [  0/  1]	Loss 4.863 (4.863)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 4.863 (4.863)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.64 (  0.64)
Test: [  1/  1]	Loss 4.863 (4.863)	test_acc   0.30 (  0.30)	test_minacc   0.23 (  0.23)	test_majacc   0.96 (  0.96)	Loss_d 4.863 (4.863)	test_acc_d   0.30 (  0.30)	test_minacc_d   0.23 (  0.23)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.64 (  0.64)
Overall Timing[ 23/  1]	epoch_time 0.0417 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0413 (0.0414)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9631000197529793, 0.2990000247955322)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.82it/s] 19%|#9        | 5/26 [00:00<00:01, 19.85it/s] 35%|###4      | 9/26 [00:00<00:00, 25.39it/s] 50%|#####     | 13/26 [00:00<00:00, 28.62it/s] 65%|######5   | 17/26 [00:00<00:00, 30.63it/s] 81%|########  | 21/26 [00:00<00:00, 32.62it/s] 96%|#########6| 25/26 [00:00<00:00, 33.59it/s]100%|##########| 26/26 [00:00<00:00, 27.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 240000
penalty weights 0.0
Epoch: [24][  26/  26]	Loss 0.047 (0.084)	train_nll   0.05 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  28.87 ( 28.62)	train_acc   0.98 (  0.97)	train_minacc   0.98 (  0.88)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 10.3285 (10.0855)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.57it/s] 27%|##6       | 7/26 [00:00<00:00, 30.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.68it/s] 46%|####6     | 12/26 [00:00<00:00, 36.74it/s] 65%|######5   | 17/26 [00:00<00:00, 41.09it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.09it/s] 85%|########4 | 22/26 [00:00<00:00, 42.51it/s]100%|##########| 26/26 [00:00<00:00, 37.58it/s]
Test: [   0/  26]	Loss 0.039 (0.039)	test_acc   0.98 (  0.98)	test_minacc   0.91 (  0.91)	test_majacc   0.99 (  0.99)	Loss_d 0.039 (0.039)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.91 (  0.91)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.074 (0.087)	test_acc   0.97 (  0.97)	test_minacc   0.83 (  0.83)	test_majacc   0.99 (  0.99)	Loss_d 0.074 (0.087)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.79 (  0.76)
Test: [  20/  26]	Loss 0.084 (0.077)	test_acc   0.97 (  0.97)	test_minacc   0.78 (  0.86)	test_majacc   1.00 (  0.99)	Loss_d 0.084 (0.077)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.78 (  0.86)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.80 (  0.76)
Test: [  26/  26]	Loss 0.016 (0.068)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.87)	test_majacc   1.00 (  0.99)	Loss_d 0.016 (0.068)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.87)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.67 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.06it/s]
Test: [  0/  1]	Loss 4.442 (4.442)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.93 (  0.93)	Loss_d 4.442 (4.442)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 4.442 (4.442)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.93 (  0.93)	Loss_d 4.442 (4.442)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.50 (  0.50)
Overall Timing[ 24/  1]	epoch_time 0.0390 (0.0420)	validation_time 0.0005 (0.0007)	train_time 0.0385 (0.0413)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9765000258088112, 0.359000027179718)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.85it/s] 19%|#9        | 5/26 [00:00<00:00, 24.59it/s] 35%|###4      | 9/26 [00:00<00:00, 29.39it/s] 50%|#####     | 13/26 [00:00<00:00, 31.89it/s] 65%|######5   | 17/26 [00:00<00:00, 33.65it/s] 81%|########  | 21/26 [00:00<00:00, 34.61it/s] 96%|#########6| 25/26 [00:00<00:00, 35.86it/s]100%|##########| 26/26 [00:00<00:00, 30.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 240000
penalty weights 0.0
Epoch: [25][  26/  26]	Loss 0.063 (0.067)	train_nll   0.06 (  0.07)	train_penalty   0.00 (  0.00)	weight_norm  29.31 ( 29.09)	train_acc   0.98 (  0.97)	train_minacc   0.98 (  0.90)	train_majacc   0.98 (  0.99)	train_corr   0.00 (  0.00)	l1 11.0706 (10.7332)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.96it/s] 23%|##3       | 6/26 [00:00<00:00, 29.69it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.69it/s] 42%|####2     | 11/26 [00:00<00:00, 36.42it/s] 62%|######1   | 16/26 [00:00<00:00, 40.74it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.74it/s] 81%|########  | 21/26 [00:00<00:00, 39.10it/s]100%|##########| 26/26 [00:00<00:00, 41.72it/s]100%|##########| 26/26 [00:00<00:00, 34.37it/s]
Test: [   0/  26]	Loss 0.060 (0.060)	test_acc   0.97 (  0.97)	test_minacc   0.93 (  0.93)	test_majacc   0.98 (  0.98)	Loss_d 0.060 (0.060)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.101 (0.099)	test_acc   0.96 (  0.96)	test_minacc   0.88 (  0.86)	test_majacc   0.98 (  0.98)	Loss_d 0.101 (0.099)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.88 (  0.86)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.75 (  0.73)
Test: [  20/  26]	Loss 0.059 (0.082)	test_acc   0.98 (  0.97)	test_minacc   0.91 (  0.89)	test_majacc   0.99 (  0.98)	Loss_d 0.059 (0.082)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.91 (  0.89)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.74 (  0.73)
Test: [  26/  26]	Loss 0.020 (0.072)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.90)	test_majacc   1.00 (  0.99)	Loss_d 0.020 (0.072)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.90)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.66 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.38it/s]
Test: [  0/  1]	Loss 4.553 (4.553)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.91 (  0.91)	Loss_d 4.553 (4.553)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 4.553 (4.553)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.91 (  0.91)	Loss_d 4.553 (4.553)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.42 (  0.42)
Overall Timing[ 25/  1]	epoch_time 0.0420 (0.0420)	validation_time 0.0006 (0.0007)	train_time 0.0414 (0.0413)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9740000201463699, 0.38600000739097595)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.12it/s] 15%|#5        | 4/26 [00:00<00:01, 17.14it/s] 31%|###       | 8/26 [00:00<00:00, 24.36it/s] 46%|####6     | 12/26 [00:00<00:00, 27.75it/s] 62%|######1   | 16/26 [00:00<00:00, 29.95it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.12it/s] 92%|#########2| 24/26 [00:00<00:00, 32.71it/s]100%|##########| 26/26 [00:00<00:00, 27.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 240000
penalty weights 0.0
Epoch: [26][  26/  26]	Loss 0.037 (0.055)	train_nll   0.04 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm  29.72 ( 29.52)	train_acc   0.99 (  0.98)	train_minacc   1.00 (  0.93)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 11.5554 (11.4826)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.83it/s] 23%|##3       | 6/26 [00:00<00:00, 32.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.49it/s] 42%|####2     | 11/26 [00:00<00:00, 39.33it/s] 62%|######1   | 16/26 [00:00<00:00, 42.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.41it/s] 81%|########  | 21/26 [00:00<00:00, 39.60it/s]100%|##########| 26/26 [00:00<00:00, 42.74it/s]100%|##########| 26/26 [00:00<00:00, 36.19it/s]
Test: [   0/  26]	Loss 0.040 (0.040)	test_acc   0.98 (  0.98)	test_minacc   0.98 (  0.98)	test_majacc   0.98 (  0.98)	Loss_d 0.040 (0.040)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.085 (0.076)	test_acc   0.97 (  0.97)	test_minacc   0.87 (  0.91)	test_majacc   0.98 (  0.98)	Loss_d 0.085 (0.076)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.87 (  0.91)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.043 (0.065)	test_acc   0.98 (  0.98)	test_minacc   0.96 (  0.93)	test_majacc   0.99 (  0.98)	Loss_d 0.043 (0.065)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.96 (  0.93)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.73 (  0.71)
Test: [  26/  26]	Loss 0.011 (0.055)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  0.99)	Loss_d 0.011 (0.055)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.06it/s]
Test: [  0/  1]	Loss 4.706 (4.706)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.88 (  0.88)	Loss_d 4.706 (4.706)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 4.706 (4.706)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.88 (  0.88)	Loss_d 4.706 (4.706)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.33 (  0.33)
Overall Timing[ 26/  1]	epoch_time 0.0391 (0.0419)	validation_time 0.0004 (0.0007)	train_time 0.0387 (0.0412)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9803000232577324, 0.42500001192092896)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.16it/s] 19%|#9        | 5/26 [00:00<00:00, 21.73it/s] 35%|###4      | 9/26 [00:00<00:00, 26.99it/s] 50%|#####     | 13/26 [00:00<00:00, 29.41it/s] 65%|######5   | 17/26 [00:00<00:00, 32.63it/s] 81%|########  | 21/26 [00:00<00:00, 34.46it/s] 96%|#########6| 25/26 [00:00<00:00, 35.98it/s]100%|##########| 26/26 [00:00<00:00, 29.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 240000
penalty weights 0.0
Epoch: [27][  26/  26]	Loss 0.020 (0.050)	train_nll   0.02 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm  30.09 ( 29.92)	train_acc   1.00 (  0.98)	train_minacc   1.00 (  0.93)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 11.3832 (11.4737)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.50it/s] 27%|##6       | 7/26 [00:00<00:00, 28.49it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.49it/s] 50%|#####     | 13/26 [00:00<00:00, 36.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.99it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.99it/s] 96%|#########6| 25/26 [00:00<00:00, 44.40it/s]100%|##########| 26/26 [00:00<00:00, 36.00it/s]
Test: [   0/  26]	Loss 0.035 (0.035)	test_acc   0.98 (  0.98)	test_minacc   0.95 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.035 (0.035)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.050 (0.053)	test_acc   0.98 (  0.98)	test_minacc   1.00 (  0.95)	test_majacc   0.98 (  0.98)	Loss_d 0.050 (0.053)	test_acc_d   0.98 (  0.98)	test_minacc_d   1.00 (  0.95)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.72 (  0.70)
Test: [  20/  26]	Loss 0.008 (0.044)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.044)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.009 (0.039)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.009 (0.039)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.26it/s]
Test: [  0/  1]	Loss 4.445 (4.445)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.88 (  0.88)	Loss_d 4.445 (4.445)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 4.445 (4.445)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.88 (  0.88)	Loss_d 4.445 (4.445)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.36 (  0.36)
Overall Timing[ 27/  1]	epoch_time 0.0384 (0.0418)	validation_time 0.0003 (0.0006)	train_time 0.0381 (0.0411)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9858000287413597, 0.40800002217292786)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.27it/s] 23%|##3       | 6/26 [00:00<00:00, 27.30it/s] 38%|###8      | 10/26 [00:00<00:00, 31.52it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.25it/s] 69%|######9   | 18/26 [00:00<00:00, 33.63it/s] 85%|########4 | 22/26 [00:00<00:00, 34.40it/s]100%|##########| 26/26 [00:00<00:00, 35.23it/s]100%|##########| 26/26 [00:00<00:00, 30.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 240000
penalty weights 0.0
Epoch: [28][  26/  26]	Loss 0.013 (0.039)	train_nll   0.01 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  30.40 ( 30.26)	train_acc   1.00 (  0.98)	train_minacc   0.98 (  0.94)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.1837 (11.8279)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.76it/s] 35%|###4      | 9/26 [00:00<00:00, 38.83it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.83it/s] 58%|#####7    | 15/26 [00:00<00:00, 46.49it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 46.49it/s] 81%|########  | 21/26 [00:00<00:00, 46.69it/s]100%|##########| 26/26 [00:00<00:00, 41.46it/s]
Test: [   0/  26]	Loss 0.024 (0.024)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.024 (0.024)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.027 (0.032)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.027 (0.032)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.011 (0.027)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.011 (0.027)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.005 (0.023)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  0.99)	Loss_d 0.005 (0.023)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.66it/s]
Test: [  0/  1]	Loss 4.994 (4.994)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 4.994 (4.994)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 4.994 (4.994)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 4.994 (4.994)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.36 (  0.36)
Overall Timing[ 28/  1]	epoch_time 0.0415 (0.0418)	validation_time 0.0004 (0.0006)	train_time 0.0410 (0.0411)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9920000353455544, 0.41100001335144043)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.30it/s] 23%|##3       | 6/26 [00:00<00:00, 27.53it/s] 38%|###8      | 10/26 [00:00<00:00, 30.82it/s] 54%|#####3    | 14/26 [00:00<00:00, 31.95it/s] 69%|######9   | 18/26 [00:00<00:00, 33.01it/s] 85%|########4 | 22/26 [00:00<00:00, 34.55it/s]100%|##########| 26/26 [00:00<00:00, 35.92it/s]100%|##########| 26/26 [00:00<00:00, 30.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 240000
penalty weights 0.0
Epoch: [29][  26/  26]	Loss 0.013 (0.020)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  30.65 ( 30.53)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.1925 (12.7281)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.50it/s] 31%|###       | 8/26 [00:00<00:00, 24.92it/s]                                               31%|###       | 8/26 [00:00<00:00, 24.92it/s] 50%|#####     | 13/26 [00:00<00:00, 31.15it/s] 69%|######9   | 18/26 [00:00<00:00, 36.15it/s]                                                69%|######9   | 18/26 [00:00<00:00, 36.15it/s] 88%|########8 | 23/26 [00:00<00:00, 39.22it/s]100%|##########| 26/26 [00:00<00:00, 30.19it/s]
Test: [   0/  26]	Loss 0.021 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.021 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.027 (0.027)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.96)	test_majacc   0.99 (  1.00)	Loss_d 0.027 (0.027)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.96)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.72 (  0.71)
Test: [  20/  26]	Loss 0.007 (0.023)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.023)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.020)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.020)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.09it/s]
Test: [  0/  1]	Loss 5.856 (5.856)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.89 (  0.89)	Loss_d 5.856 (5.856)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 5.856 (5.856)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.89 (  0.89)	Loss_d 5.856 (5.856)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.41 (  0.41)
Overall Timing[ 29/  1]	epoch_time 0.0378 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0374 (0.0409)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.99320003759861, 0.3890000283718109)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.08it/s] 19%|#9        | 5/26 [00:00<00:01, 19.92it/s] 35%|###4      | 9/26 [00:00<00:00, 25.94it/s] 50%|#####     | 13/26 [00:00<00:00, 29.40it/s] 65%|######5   | 17/26 [00:00<00:00, 31.10it/s] 81%|########  | 21/26 [00:00<00:00, 32.39it/s] 96%|#########6| 25/26 [00:00<00:00, 33.26it/s]100%|##########| 26/26 [00:00<00:00, 27.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 240000
penalty weights 0.0
Epoch: [30][  26/  26]	Loss 0.020 (0.026)	train_nll   0.02 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  30.91 ( 30.78)	train_acc   0.99 (  0.99)	train_minacc   0.98 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 12.9944 (13.1340)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.07it/s] 27%|##6       | 7/26 [00:00<00:00, 29.26it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.26it/s] 46%|####6     | 12/26 [00:00<00:00, 35.90it/s] 65%|######5   | 17/26 [00:00<00:00, 39.90it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.90it/s] 85%|########4 | 22/26 [00:00<00:00, 39.01it/s]100%|##########| 26/26 [00:00<00:00, 34.96it/s]
Test: [   0/  26]	Loss 0.034 (0.034)	test_acc   0.98 (  0.98)	test_minacc   0.95 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.034 (0.034)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.049 (0.040)	test_acc   0.97 (  0.99)	test_minacc   0.96 (  0.97)	test_majacc   0.98 (  0.99)	Loss_d 0.049 (0.040)	test_acc_d   0.97 (  0.99)	test_minacc_d   0.96 (  0.97)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.73 (  0.70)
Test: [  20/  26]	Loss 0.020 (0.036)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.020 (0.036)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.004 (0.031)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.004 (0.031)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.17it/s]
Test: [  0/  1]	Loss 5.508 (5.508)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.82 (  0.82)	Loss_d 5.508 (5.508)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 5.508 (5.508)	test_acc   0.40 (  0.40)	test_minacc   0.35 (  0.35)	test_majacc   0.82 (  0.82)	Loss_d 5.508 (5.508)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.36 (  0.36)
Overall Timing[ 30/  1]	epoch_time 0.0468 (0.0418)	validation_time 0.0004 (0.0006)	train_time 0.0464 (0.0411)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9884000285863876, 0.4010000228881836)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.97it/s] 19%|#9        | 5/26 [00:00<00:01, 19.50it/s] 35%|###4      | 9/26 [00:00<00:00, 25.19it/s] 50%|#####     | 13/26 [00:00<00:00, 28.79it/s] 65%|######5   | 17/26 [00:00<00:00, 30.64it/s] 81%|########  | 21/26 [00:00<00:00, 32.48it/s] 96%|#########6| 25/26 [00:00<00:00, 33.77it/s]100%|##########| 26/26 [00:00<00:00, 27.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 240000
penalty weights 0.0
Epoch: [31][  26/  26]	Loss 0.023 (0.030)	train_nll   0.02 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  31.17 ( 31.04)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.6626 (12.9207)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.36it/s] 19%|#9        | 5/26 [00:00<00:00, 21.97it/s] 38%|###8      | 10/26 [00:00<00:00, 32.30it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.30it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.15it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.39it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.39it/s] 96%|#########6| 25/26 [00:00<00:00, 40.91it/s]100%|##########| 26/26 [00:00<00:00, 31.14it/s]
Test: [   0/  26]	Loss 0.023 (0.023)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.023 (0.023)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.010 (0.025)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.025)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.71)
Test: [  20/  26]	Loss 0.009 (0.021)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.009 (0.021)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.009 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.009 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.66 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.30it/s]
Test: [  0/  1]	Loss 5.265 (5.265)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.88 (  0.88)	Loss_d 5.265 (5.265)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 5.265 (5.265)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.88 (  0.88)	Loss_d 5.265 (5.265)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.36 (  0.36)
Overall Timing[ 31/  1]	epoch_time 0.0398 (0.0418)	validation_time 0.0003 (0.0006)	train_time 0.0395 (0.0411)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.99460003054142, 0.4130000174045563)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 19%|#9        | 5/26 [00:00<00:00, 22.94it/s] 35%|###4      | 9/26 [00:00<00:00, 28.90it/s] 50%|#####     | 13/26 [00:00<00:00, 31.89it/s] 65%|######5   | 17/26 [00:00<00:00, 33.43it/s] 81%|########  | 21/26 [00:00<00:00, 34.39it/s] 96%|#########6| 25/26 [00:00<00:00, 35.37it/s]100%|##########| 26/26 [00:00<00:00, 29.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 240000
penalty weights 0.0
Epoch: [32][  26/  26]	Loss 0.005 (0.017)	train_nll   0.00 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  31.39 ( 31.29)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.5331 (13.0913)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.48it/s] 27%|##6       | 7/26 [00:00<00:00, 33.67it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.67it/s] 46%|####6     | 12/26 [00:00<00:00, 39.66it/s] 65%|######5   | 17/26 [00:00<00:00, 38.30it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.30it/s] 85%|########4 | 22/26 [00:00<00:00, 41.14it/s]100%|##########| 26/26 [00:00<00:00, 36.29it/s]
Test: [   0/  26]	Loss 0.002 (0.002)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.002)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.014 (0.018)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.014 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.016 (0.019)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   0.99 (  1.00)	Loss_d 0.016 (0.019)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  26/  26]	Loss 0.002 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.54it/s]
Test: [  0/  1]	Loss 5.815 (5.815)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.87 (  0.87)	Loss_d 5.815 (5.815)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 5.815 (5.815)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.87 (  0.87)	Loss_d 5.815 (5.815)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.35 (  0.35)
Overall Timing[ 32/  1]	epoch_time 0.0395 (0.0417)	validation_time 0.0003 (0.0006)	train_time 0.0392 (0.0410)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9947000293731689, 0.41100001335144043)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.86it/s] 19%|#9        | 5/26 [00:00<00:00, 24.33it/s] 35%|###4      | 9/26 [00:00<00:00, 29.28it/s] 50%|#####     | 13/26 [00:00<00:00, 30.93it/s] 65%|######5   | 17/26 [00:00<00:00, 32.71it/s] 81%|########  | 21/26 [00:00<00:00, 33.35it/s] 96%|#########6| 25/26 [00:00<00:00, 33.95it/s]100%|##########| 26/26 [00:00<00:00, 29.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 240000
penalty weights 0.0
Epoch: [33][  26/  26]	Loss 0.011 (0.024)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  31.64 ( 31.51)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 12.9392 (13.3717)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.72it/s] 27%|##6       | 7/26 [00:00<00:00, 29.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.39it/s] 46%|####6     | 12/26 [00:00<00:00, 36.35it/s] 65%|######5   | 17/26 [00:00<00:00, 39.97it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.97it/s] 88%|########8 | 23/26 [00:00<00:00, 44.15it/s]100%|##########| 26/26 [00:00<00:00, 36.08it/s]
Test: [   0/  26]	Loss 0.028 (0.028)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.028 (0.028)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.037 (0.036)	test_acc   0.98 (  0.99)	test_minacc   0.92 (  0.94)	test_majacc   0.99 (  0.99)	Loss_d 0.037 (0.036)	test_acc_d   0.98 (  0.99)	test_minacc_d   0.92 (  0.94)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.016 (0.033)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.016 (0.033)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.003 (0.028)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.003 (0.028)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.65it/s]
Test: [  0/  1]	Loss 5.550 (5.550)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 5.550 (5.550)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 5.550 (5.550)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.93 (  0.93)	Loss_d 5.550 (5.550)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.41 (  0.41)
Overall Timing[ 33/  1]	epoch_time 0.0387 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0383 (0.0409)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9898000354766846, 0.3960000276565552)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.18it/s] 19%|#9        | 5/26 [00:00<00:01, 19.34it/s] 35%|###4      | 9/26 [00:00<00:00, 25.35it/s] 50%|#####     | 13/26 [00:00<00:00, 28.72it/s] 65%|######5   | 17/26 [00:00<00:00, 30.61it/s] 81%|########  | 21/26 [00:00<00:00, 32.43it/s] 96%|#########6| 25/26 [00:00<00:00, 34.23it/s]100%|##########| 26/26 [00:00<00:00, 27.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 240000
penalty weights 0.0
Epoch: [34][  26/  26]	Loss 0.020 (0.021)	train_nll   0.02 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  31.89 ( 31.77)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.2408 (13.0523)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.60it/s] 31%|###       | 8/26 [00:00<00:00, 36.31it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.31it/s] 50%|#####     | 13/26 [00:00<00:00, 41.10it/s] 69%|######9   | 18/26 [00:00<00:00, 43.66it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.66it/s] 88%|########8 | 23/26 [00:00<00:00, 42.33it/s]100%|##########| 26/26 [00:00<00:00, 39.03it/s]
Test: [   0/  26]	Loss 0.005 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.020 (0.018)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.020 (0.018)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.70)
Test: [  20/  26]	Loss 0.009 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.009 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  26/  26]	Loss 0.003 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.69it/s]
Test: [  0/  1]	Loss 5.554 (5.554)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 5.554 (5.554)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 5.554 (5.554)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.89 (  0.89)	Loss_d 5.554 (5.554)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.35 (  0.35)
Overall Timing[ 34/  1]	epoch_time 0.0450 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0446 (0.0410)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9939000363945961, 0.4180000126361847)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.50it/s] 19%|#9        | 5/26 [00:00<00:00, 24.28it/s] 35%|###4      | 9/26 [00:00<00:00, 29.55it/s] 50%|#####     | 13/26 [00:00<00:00, 32.19it/s] 65%|######5   | 17/26 [00:00<00:00, 33.13it/s] 81%|########  | 21/26 [00:00<00:00, 33.96it/s] 96%|#########6| 25/26 [00:00<00:00, 34.50it/s]100%|##########| 26/26 [00:00<00:00, 29.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 240000
penalty weights 0.0
Epoch: [35][  26/  26]	Loss 0.018 (0.018)	train_nll   0.02 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.11 ( 32.00)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.4576 (13.3697)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.52it/s] 23%|##3       | 6/26 [00:00<00:00, 25.04it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.04it/s] 42%|####2     | 11/26 [00:00<00:00, 33.69it/s] 62%|######1   | 16/26 [00:00<00:00, 38.59it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.59it/s] 81%|########  | 21/26 [00:00<00:00, 37.62it/s]100%|##########| 26/26 [00:00<00:00, 40.78it/s]100%|##########| 26/26 [00:00<00:00, 32.51it/s]
Test: [   0/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.035 (0.020)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.035 (0.020)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.71)
Test: [  20/  26]	Loss 0.003 (0.018)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.003 (0.015)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.015)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.47it/s]
Test: [  0/  1]	Loss 6.041 (6.041)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.90 (  0.90)	Loss_d 6.041 (6.041)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 6.041 (6.041)	test_acc   0.38 (  0.38)	test_minacc   0.33 (  0.33)	test_majacc   0.90 (  0.90)	Loss_d 6.041 (6.041)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.42 (  0.42)
Overall Timing[ 35/  1]	epoch_time 0.0411 (0.0417)	validation_time 0.0003 (0.0006)	train_time 0.0408 (0.0410)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9948000398278236, 0.3830000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.11it/s] 19%|#9        | 5/26 [00:00<00:00, 23.52it/s] 35%|###4      | 9/26 [00:00<00:00, 27.92it/s] 50%|#####     | 13/26 [00:00<00:00, 30.17it/s] 65%|######5   | 17/26 [00:00<00:00, 30.49it/s] 81%|########  | 21/26 [00:00<00:00, 31.85it/s] 96%|#########6| 25/26 [00:00<00:00, 33.41it/s]100%|##########| 26/26 [00:00<00:00, 28.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 240000
penalty weights 0.0
Epoch: [36][  26/  26]	Loss 0.012 (0.024)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.38 ( 32.24)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.1861 (13.3993)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.82it/s] 15%|#5        | 4/26 [00:00<00:01, 16.31it/s] 35%|###4      | 9/26 [00:00<00:00, 28.66it/s]                                               35%|###4      | 9/26 [00:00<00:00, 28.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 39.46it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 39.46it/s] 92%|#########2| 24/26 [00:00<00:00, 37.96it/s]100%|##########| 26/26 [00:00<00:00, 31.61it/s]
Test: [   0/  26]	Loss 0.014 (0.014)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.014 (0.014)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.004 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.004 (0.013)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.013)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.003 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.35it/s]
Test: [  0/  1]	Loss 5.720 (5.720)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.88 (  0.88)	Loss_d 5.720 (5.720)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 5.720 (5.720)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.88 (  0.88)	Loss_d 5.720 (5.720)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.38 (  0.38)
Overall Timing[ 36/  1]	epoch_time 0.0431 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0427 (0.0411)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9968000234365463, 0.40700000524520874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.83it/s] 19%|#9        | 5/26 [00:00<00:00, 23.66it/s] 35%|###4      | 9/26 [00:00<00:00, 28.89it/s] 50%|#####     | 13/26 [00:00<00:00, 31.34it/s] 65%|######5   | 17/26 [00:00<00:00, 32.74it/s] 81%|########  | 21/26 [00:00<00:00, 33.75it/s] 96%|#########6| 25/26 [00:00<00:00, 34.75it/s]100%|##########| 26/26 [00:00<00:00, 29.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 240000
penalty weights 0.0
Epoch: [37][  26/  26]	Loss 0.026 (0.018)	train_nll   0.03 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  32.63 ( 32.51)	train_acc   0.99 (  0.99)	train_minacc   0.95 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.4998 (13.3368)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.42it/s] 23%|##3       | 6/26 [00:00<00:00, 26.79it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.79it/s] 42%|####2     | 11/26 [00:00<00:00, 34.84it/s] 62%|######1   | 16/26 [00:00<00:00, 38.79it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.79it/s] 81%|########  | 21/26 [00:00<00:00, 37.48it/s]100%|##########| 26/26 [00:00<00:00, 40.72it/s]100%|##########| 26/26 [00:00<00:00, 32.92it/s]
Test: [   0/  26]	Loss 0.012 (0.012)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.012)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.008 (0.014)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.003 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.88it/s]
Test: [  0/  1]	Loss 6.199 (6.199)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.89 (  0.89)	Loss_d 6.199 (6.199)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 6.199 (6.199)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.89 (  0.89)	Loss_d 6.199 (6.199)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.47 (  0.47)
Overall Timing[ 37/  1]	epoch_time 0.0415 (0.0417)	validation_time 0.0003 (0.0006)	train_time 0.0412 (0.0411)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9977000222206116, 0.3540000021457672)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.23it/s] 19%|#9        | 5/26 [00:00<00:00, 21.91it/s] 35%|###4      | 9/26 [00:00<00:00, 28.31it/s] 50%|#####     | 13/26 [00:00<00:00, 31.29it/s] 65%|######5   | 17/26 [00:00<00:00, 33.16it/s] 81%|########  | 21/26 [00:00<00:00, 34.49it/s] 96%|#########6| 25/26 [00:00<00:00, 35.47it/s]100%|##########| 26/26 [00:00<00:00, 28.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 240000
penalty weights 0.0
Epoch: [38][  26/  26]	Loss 0.004 (0.013)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  32.80 ( 32.72)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.7314 (13.5329)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.38it/s] 12%|#1        | 3/26 [00:00<00:02, 10.46it/s] 35%|###4      | 9/26 [00:00<00:00, 27.28it/s]                                               35%|###4      | 9/26 [00:00<00:00, 27.28it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.09it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 36.09it/s] 96%|#########6| 25/26 [00:00<00:00, 42.13it/s]100%|##########| 26/26 [00:00<00:00, 32.01it/s]
Test: [   0/  26]	Loss 0.007 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.014 (0.010)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.014 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.71)
Test: [  20/  26]	Loss 0.001 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.02it/s]
Test: [  0/  1]	Loss 6.577 (6.577)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.92 (  0.92)	Loss_d 6.577 (6.577)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 6.577 (6.577)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.92 (  0.92)	Loss_d 6.577 (6.577)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.50 (  0.50)
Overall Timing[ 38/  1]	epoch_time 0.0400 (0.0417)	validation_time 0.0006 (0.0006)	train_time 0.0394 (0.0410)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9982000187039375, 0.3450000286102295)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.35it/s] 19%|#9        | 5/26 [00:00<00:01, 17.45it/s] 35%|###4      | 9/26 [00:00<00:00, 24.31it/s] 50%|#####     | 13/26 [00:00<00:00, 28.49it/s] 65%|######5   | 17/26 [00:00<00:00, 30.87it/s] 81%|########  | 21/26 [00:00<00:00, 32.59it/s] 96%|#########6| 25/26 [00:00<00:00, 33.71it/s]100%|##########| 26/26 [00:00<00:00, 26.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 240000
penalty weights 0.0
Epoch: [39][  26/  26]	Loss 0.020 (0.009)	train_nll   0.02 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  32.95 ( 32.87)	train_acc   1.00 (  1.00)	train_minacc   0.98 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.2265 (14.0371)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.93it/s] 23%|##3       | 6/26 [00:00<00:00, 20.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 20.14it/s] 42%|####2     | 11/26 [00:00<00:00, 28.99it/s] 62%|######1   | 16/26 [00:00<00:00, 35.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 35.16it/s] 81%|########  | 21/26 [00:00<00:00, 35.77it/s]100%|##########| 26/26 [00:00<00:00, 29.54it/s]
Test: [   0/  26]	Loss 0.004 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.011 (0.023)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.023)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.71)
Test: [  20/  26]	Loss 0.008 (0.020)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.020)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.016)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.016)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.19it/s]
Test: [  0/  1]	Loss 6.764 (6.764)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.93 (  0.93)	Loss_d 6.764 (6.764)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 6.764 (6.764)	test_acc   0.36 (  0.36)	test_minacc   0.29 (  0.29)	test_majacc   0.93 (  0.93)	Loss_d 6.764 (6.764)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.48 (  0.48)
Overall Timing[ 39/  1]	epoch_time 0.0417 (0.0417)	validation_time 0.0003 (0.0006)	train_time 0.0413 (0.0410)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9946000328660012, 0.3580000102519989)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.81it/s] 27%|##6       | 7/26 [00:00<00:00, 30.34it/s] 42%|####2     | 11/26 [00:00<00:00, 32.66it/s] 58%|#####7    | 15/26 [00:00<00:00, 33.48it/s] 73%|#######3  | 19/26 [00:00<00:00, 33.98it/s] 88%|########8 | 23/26 [00:00<00:00, 34.75it/s]100%|##########| 26/26 [00:00<00:00, 31.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 240000
penalty weights 0.0
Epoch: [40][  26/  26]	Loss 0.012 (0.016)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.19 ( 33.05)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.8908 (14.1731)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.50it/s] 23%|##3       | 6/26 [00:00<00:01, 18.83it/s]                                               23%|##3       | 6/26 [00:00<00:01, 18.83it/s] 42%|####2     | 11/26 [00:00<00:00, 28.16it/s] 62%|######1   | 16/26 [00:00<00:00, 34.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.47it/s] 81%|########  | 21/26 [00:00<00:00, 35.11it/s]100%|##########| 26/26 [00:00<00:00, 39.00it/s]100%|##########| 26/26 [00:00<00:00, 28.83it/s]
Test: [   0/  26]	Loss 0.005 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.027 (0.019)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.96)	test_majacc   0.99 (  1.00)	Loss_d 0.027 (0.019)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.96)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.011 (0.017)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.017)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.014)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 49.99it/s]
Test: [  0/  1]	Loss 6.590 (6.590)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.92 (  0.92)	Loss_d 6.590 (6.590)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 6.590 (6.590)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.92 (  0.92)	Loss_d 6.590 (6.590)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.50 (  0.50)
Overall Timing[ 40/  1]	epoch_time 0.0383 (0.0416)	validation_time 0.0005 (0.0006)	train_time 0.0378 (0.0410)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9950000328421593, 0.34700000286102295)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.57it/s] 19%|#9        | 5/26 [00:00<00:00, 24.81it/s] 35%|###4      | 9/26 [00:00<00:00, 29.04it/s] 50%|#####     | 13/26 [00:00<00:00, 31.14it/s] 65%|######5   | 17/26 [00:00<00:00, 32.08it/s] 81%|########  | 21/26 [00:00<00:00, 33.25it/s] 96%|#########6| 25/26 [00:00<00:00, 33.83it/s]100%|##########| 26/26 [00:00<00:00, 29.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 240000
penalty weights 0.0
Epoch: [41][  26/  26]	Loss 0.001 (0.014)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  33.44 ( 33.32)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.0248 (13.8763)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.14it/s] 19%|#9        | 5/26 [00:00<00:01, 18.99it/s] 38%|###8      | 10/26 [00:00<00:00, 27.82it/s]                                                38%|###8      | 10/26 [00:00<00:00, 27.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 32.40it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.12it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.12it/s] 96%|#########6| 25/26 [00:00<00:00, 40.00it/s]100%|##########| 26/26 [00:00<00:00, 30.81it/s]
Test: [   0/  26]	Loss 0.011 (0.011)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.011)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.002 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.42it/s]
Test: [  0/  1]	Loss 6.451 (6.451)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.93 (  0.93)	Loss_d 6.451 (6.451)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 6.451 (6.451)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.93 (  0.93)	Loss_d 6.451 (6.451)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.43 (  0.43)
Overall Timing[ 41/  1]	epoch_time 0.0402 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0398 (0.0409)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9978000187277793, 0.37800002098083496)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.38it/s] 19%|#9        | 5/26 [00:00<00:00, 23.02it/s] 35%|###4      | 9/26 [00:00<00:00, 27.82it/s] 50%|#####     | 13/26 [00:00<00:00, 30.56it/s] 65%|######5   | 17/26 [00:00<00:00, 31.60it/s] 81%|########  | 21/26 [00:00<00:00, 32.19it/s] 96%|#########6| 25/26 [00:00<00:00, 33.73it/s]100%|##########| 26/26 [00:00<00:00, 28.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 240000
penalty weights 0.0
Epoch: [42][  26/  26]	Loss 0.001 (0.009)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  33.61 ( 33.54)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.2778 (14.0733)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.86it/s] 31%|###       | 8/26 [00:00<00:00, 37.55it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.55it/s] 50%|#####     | 13/26 [00:00<00:00, 41.08it/s] 69%|######9   | 18/26 [00:00<00:00, 42.96it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.96it/s] 88%|########8 | 23/26 [00:00<00:00, 43.48it/s]100%|##########| 26/26 [00:00<00:00, 37.96it/s]
Test: [   0/  26]	Loss 0.005 (0.005)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.012 (0.010)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.60it/s]
Test: [  0/  1]	Loss 6.493 (6.493)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.91)	Loss_d 6.493 (6.493)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 6.493 (6.493)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.91)	Loss_d 6.493 (6.493)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.42 (  0.42)
Overall Timing[ 42/  1]	epoch_time 0.0437 (0.0416)	validation_time 0.0005 (0.0006)	train_time 0.0432 (0.0410)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9978000187277793, 0.3800000250339508)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.21it/s] 23%|##3       | 6/26 [00:00<00:00, 27.50it/s] 38%|###8      | 10/26 [00:00<00:00, 30.89it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.60it/s] 69%|######9   | 18/26 [00:00<00:00, 33.81it/s] 85%|########4 | 22/26 [00:00<00:00, 34.63it/s]100%|##########| 26/26 [00:00<00:00, 35.07it/s]100%|##########| 26/26 [00:00<00:00, 30.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 240000
penalty weights 0.0
Epoch: [43][  26/  26]	Loss 0.013 (0.009)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  33.76 ( 33.67)	train_acc   0.99 (  1.00)	train_minacc   0.95 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.2470 (14.2900)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.37it/s] 23%|##3       | 6/26 [00:00<00:00, 24.05it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.05it/s] 42%|####2     | 11/26 [00:00<00:00, 32.19it/s] 62%|######1   | 16/26 [00:00<00:00, 37.41it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.41it/s] 81%|########  | 21/26 [00:00<00:00, 38.62it/s]100%|##########| 26/26 [00:00<00:00, 41.13it/s]100%|##########| 26/26 [00:00<00:00, 32.41it/s]
Test: [   0/  26]	Loss 0.033 (0.033)	test_acc   0.99 (  0.99)	test_minacc   0.93 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.033 (0.033)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.93 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.020 (0.017)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.020 (0.017)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.71)
Test: [  20/  26]	Loss 0.005 (0.015)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.015)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.013)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.013)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.39it/s]
Test: [  0/  1]	Loss 6.906 (6.906)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.91 (  0.91)	Loss_d 6.906 (6.906)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 6.906 (6.906)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.91 (  0.91)	Loss_d 6.906 (6.906)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.50 (  0.50)
Overall Timing[ 43/  1]	epoch_time 0.0428 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0424 (0.0410)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9958000304698944, 0.3450000286102295)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.50it/s] 15%|#5        | 4/26 [00:00<00:01, 13.82it/s] 31%|###       | 8/26 [00:00<00:00, 21.81it/s] 46%|####6     | 12/26 [00:00<00:00, 26.53it/s] 62%|######1   | 16/26 [00:00<00:00, 29.30it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.39it/s] 92%|#########2| 24/26 [00:00<00:00, 32.69it/s]100%|##########| 26/26 [00:00<00:00, 26.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 240000
penalty weights 0.0
Epoch: [44][  26/  26]	Loss 0.007 (0.009)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  33.91 ( 33.84)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.3061 (14.2397)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 23%|##3       | 6/26 [00:00<00:00, 24.82it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.82it/s] 42%|####2     | 11/26 [00:00<00:00, 33.14it/s] 62%|######1   | 16/26 [00:00<00:00, 37.39it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.39it/s] 81%|########  | 21/26 [00:00<00:00, 36.78it/s]100%|##########| 26/26 [00:00<00:00, 32.10it/s]
Test: [   0/  26]	Loss 0.004 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.003 (0.008)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.69it/s]
Test: [  0/  1]	Loss 6.618 (6.618)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.91)	Loss_d 6.618 (6.618)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 6.618 (6.618)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.91)	Loss_d 6.618 (6.618)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.42 (  0.42)
Overall Timing[ 44/  1]	epoch_time 0.0412 (0.0416)	validation_time 0.0006 (0.0006)	train_time 0.0406 (0.0410)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9983000198602676, 0.3830000162124634)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.95it/s] 19%|#9        | 5/26 [00:00<00:00, 21.53it/s] 35%|###4      | 9/26 [00:00<00:00, 27.84it/s] 50%|#####     | 13/26 [00:00<00:00, 30.76it/s] 65%|######5   | 17/26 [00:00<00:00, 32.00it/s] 81%|########  | 21/26 [00:00<00:00, 33.32it/s] 96%|#########6| 25/26 [00:00<00:00, 33.99it/s]100%|##########| 26/26 [00:00<00:00, 28.83it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 240000
penalty weights 0.0
Epoch: [45][  26/  26]	Loss 0.038 (0.012)	train_nll   0.04 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  34.09 ( 33.99)	train_acc   0.99 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   0.99 (  1.00)	train_corr   0.00 (  0.00)	l1 14.5684 (14.4947)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.46it/s] 19%|#9        | 5/26 [00:00<00:00, 25.54it/s] 38%|###8      | 10/26 [00:00<00:00, 35.27it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.84it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.60it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.60it/s] 96%|#########6| 25/26 [00:00<00:00, 40.98it/s]100%|##########| 26/26 [00:00<00:00, 34.19it/s]
Test: [   0/  26]	Loss 0.016 (0.016)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.016 (0.016)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.012 (0.011)	test_acc   0.99 (  1.00)	test_minacc   0.96 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.011)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.96 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.71)
Test: [  20/  26]	Loss 0.005 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.019 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.019 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.64 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 60.98it/s]
Test: [  0/  1]	Loss 6.799 (6.799)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.89 (  0.89)	Loss_d 6.799 (6.799)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.46 (  0.46)
Test: [  1/  1]	Loss 6.799 (6.799)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.89 (  0.89)	Loss_d 6.799 (6.799)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.46 (  0.46)
Overall Timing[ 45/  1]	epoch_time 0.0416 (0.0416)	validation_time 0.0004 (0.0006)	train_time 0.0411 (0.0410)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9972000258564949, 0.36500000953674316)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.34it/s] 19%|#9        | 5/26 [00:00<00:00, 23.00it/s] 35%|###4      | 9/26 [00:00<00:00, 27.84it/s] 50%|#####     | 13/26 [00:00<00:00, 30.76it/s] 65%|######5   | 17/26 [00:00<00:00, 32.00it/s] 81%|########  | 21/26 [00:00<00:00, 33.49it/s] 96%|#########6| 25/26 [00:00<00:00, 33.88it/s]100%|##########| 26/26 [00:00<00:00, 29.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 240000
penalty weights 0.0
Epoch: [46][  26/  26]	Loss 0.005 (0.010)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  34.29 ( 34.19)	train_acc   1.00 (  1.00)	train_minacc   0.98 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.3742 (14.3747)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.01it/s] 27%|##6       | 7/26 [00:00<00:00, 31.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.39it/s] 50%|#####     | 13/26 [00:00<00:00, 37.78it/s] 69%|######9   | 18/26 [00:00<00:00, 40.38it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.38it/s] 88%|########8 | 23/26 [00:00<00:00, 41.59it/s]100%|##########| 26/26 [00:00<00:00, 35.47it/s]
Test: [   0/  26]	Loss 0.024 (0.024)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.024 (0.024)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.008 (0.018)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.018)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.71)
Test: [  20/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.71)
Test: [  26/  26]	Loss 0.000 (0.013)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.013)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.13it/s]
Test: [  0/  1]	Loss 6.687 (6.687)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.91)	Loss_d 6.687 (6.687)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 6.687 (6.687)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.91 (  0.91)	Loss_d 6.687 (6.687)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.42 (  0.42)
Overall Timing[ 46/  1]	epoch_time 0.0444 (0.0417)	validation_time 0.0004 (0.0006)	train_time 0.0440 (0.0411)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9957000316381455, 0.38100001215934753)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.17it/s] 19%|#9        | 5/26 [00:00<00:00, 21.16it/s] 35%|###4      | 9/26 [00:00<00:00, 27.16it/s] 50%|#####     | 13/26 [00:00<00:00, 30.13it/s] 65%|######5   | 17/26 [00:00<00:00, 31.44it/s] 81%|########  | 21/26 [00:00<00:00, 31.99it/s] 96%|#########6| 25/26 [00:00<00:00, 33.43it/s]100%|##########| 26/26 [00:00<00:00, 28.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 240000
penalty weights 0.0
Epoch: [47][  26/  26]	Loss 0.005 (0.016)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.55 ( 34.41)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.9881 (14.1345)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.47it/s] 27%|##6       | 7/26 [00:00<00:00, 27.21it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.21it/s] 46%|####6     | 12/26 [00:00<00:00, 34.38it/s] 65%|######5   | 17/26 [00:00<00:00, 35.62it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.62it/s] 85%|########4 | 22/26 [00:00<00:00, 39.20it/s]100%|##########| 26/26 [00:00<00:00, 32.52it/s]
Test: [   0/  26]	Loss 0.009 (0.009)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.009 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.007 (0.014)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.014)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.71)
Test: [  20/  26]	Loss 0.018 (0.014)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.018 (0.014)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.50it/s]
Test: [  0/  1]	Loss 6.467 (6.467)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.90 (  0.90)	Loss_d 6.467 (6.467)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 6.467 (6.467)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.90 (  0.90)	Loss_d 6.467 (6.467)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.44 (  0.44)
Overall Timing[ 47/  1]	epoch_time 0.0470 (0.0418)	validation_time 0.0003 (0.0006)	train_time 0.0467 (0.0412)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9952000305056572, 0.3710000216960907)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.79it/s] 27%|##6       | 7/26 [00:00<00:00, 27.71it/s] 42%|####2     | 11/26 [00:00<00:00, 30.07it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 32.35it/s] 88%|########8 | 23/26 [00:00<00:00, 34.17it/s]100%|##########| 26/26 [00:00<00:00, 30.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 240000
penalty weights 0.0
Epoch: [48][  26/  26]	Loss 0.004 (0.014)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  34.80 ( 34.68)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.1837 (14.0753)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.21it/s] 31%|###       | 8/26 [00:00<00:00, 36.88it/s]                                               31%|###       | 8/26 [00:00<00:00, 36.88it/s] 50%|#####     | 13/26 [00:00<00:00, 40.81it/s] 69%|######9   | 18/26 [00:00<00:00, 42.00it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.00it/s] 88%|########8 | 23/26 [00:00<00:00, 41.06it/s]100%|##########| 26/26 [00:00<00:00, 37.37it/s]
Test: [   0/  26]	Loss 0.019 (0.019)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.019 (0.019)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.010 (0.014)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.014)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.71)
Test: [  20/  26]	Loss 0.003 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.17it/s]
Test: [  0/  1]	Loss 6.419 (6.419)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.88 (  0.88)	Loss_d 6.419 (6.419)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 6.419 (6.419)	test_acc   0.39 (  0.39)	test_minacc   0.33 (  0.33)	test_majacc   0.88 (  0.88)	Loss_d 6.419 (6.419)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.40 (  0.40)
Overall Timing[ 48/  1]	epoch_time 0.0404 (0.0418)	validation_time 0.0004 (0.0005)	train_time 0.0399 (0.0412)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9971000222563744, 0.38700002431869507)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.83it/s] 23%|##3       | 6/26 [00:00<00:00, 26.95it/s] 38%|###8      | 10/26 [00:00<00:00, 30.29it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.62it/s] 69%|######9   | 18/26 [00:00<00:00, 32.98it/s] 85%|########4 | 22/26 [00:00<00:00, 33.85it/s]100%|##########| 26/26 [00:00<00:00, 34.33it/s]100%|##########| 26/26 [00:00<00:00, 29.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 240000
penalty weights 0.0
Epoch: [49][  26/  26]	Loss 0.003 (0.011)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.01 ( 34.91)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.4865 (14.3018)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.00it/s] 23%|##3       | 6/26 [00:00<00:00, 31.33it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.33it/s] 42%|####2     | 11/26 [00:00<00:00, 37.20it/s] 62%|######1   | 16/26 [00:00<00:00, 41.87it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.87it/s] 81%|########  | 21/26 [00:00<00:00, 40.05it/s]100%|##########| 26/26 [00:00<00:00, 42.69it/s]100%|##########| 26/26 [00:00<00:00, 35.66it/s]
Test: [   0/  26]	Loss 0.006 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.001 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.003 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.65 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.01it/s]
Test: [  0/  1]	Loss 6.599 (6.599)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.89 (  0.89)	Loss_d 6.599 (6.599)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 6.599 (6.599)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.89 (  0.89)	Loss_d 6.599 (6.599)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.40 (  0.40)
Overall Timing[ 49/  1]	epoch_time 0.0407 (0.0418)	validation_time 0.0007 (0.0006)	train_time 0.0400 (0.0411)
record: (train_acc, test_acc) (0.9100000178813934, 0.4540000259876251)
last accs (train_acc, test_acc) (0.9981000152230263, 0.3920000195503235)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.170 MB of 0.170 MB uploadedwandb: \ 0.170 MB of 0.170 MB uploadedwandb: | 0.170 MB of 0.170 MB uploadedwandb: / 0.170 MB of 0.170 MB uploadedwandb: - 0.170 MB of 0.170 MB uploadedwandb: \ 0.192 MB of 0.201 MB uploaded (0.003 MB deduped)wandb: | 0.472 MB of 0.472 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/diagnostics/epoch_time_val █▂▂▂▃▂▂▂▂▂▂▂▂▁▂▂▁▁▁▂▂▂▁▂▃▂▂▂▂▂▂▂▁▂▂▂▂▂▃▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/diagnostics/train_time_val █▂▂▂▃▃▂▂▂▂▂▂▃▂▂▂▁▁▁▂▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▂▂▃▃▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/Loss_avg ▁▁▁▁▁▁▁▁▁▁▁▂▂▃▃▃▄▄▄▅▅▅▅▅▆▆▆▆▇▆▇██▇▇███▇█
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/Loss_d_avg ▁▁▁▁▁▁▁▁▁▁▁▂▂▃▃▃▄▄▄▅▅▅▅▅▆▆▆▆▇▆▇██▇▇███▇█
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/Loss_d_val ▁▁▁▁▁▁▁▁▁▁▁▂▂▃▃▃▄▄▄▅▅▅▅▅▆▆▆▆▇▆▇██▇▇███▇█
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/Loss_val ▁▁▁▁▁▁▁▁▁▁▁▂▂▃▃▃▄▄▄▅▅▅▅▅▆▆▆▆▇▆▇██▇▇███▇█
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_acc_avg ▁▁▂▃▃▅▆▆███▇▅▆▆▆▆▆▆▅▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▇▆▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_acc_d_avg ▁▁▂▃▃▅▆▆███▇▅▆▆▆▆▆▆▅▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▇▆▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_acc_d_val ▁▁▂▃▃▅▆▆███▇▅▆▆▆▆▆▆▅▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▇▆▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_acc_val ▁▁▂▃▃▅▆▆███▇▅▆▆▆▆▆▆▅▇▇▇▇▇▇▇▇▇▇▆▆▆▆▆▆▆▇▆▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_corr_d_avg ██▇▆▆▅▅▅▂▂▂▃▄▄▄▃▃▃▃▄▂▁▁▁▁▁▁▂▂▁▃▃▃▂▂▃▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_corr_d_val ██▇▆▆▅▅▅▂▂▂▃▄▄▄▃▃▃▃▄▂▁▁▁▁▁▁▂▂▁▃▃▃▂▂▃▂▂▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_majacc_avg ██▆▆▆▄▄▄▄▄▄▄▅▄▆▅▄▆▅▆▄▃▃▄▁▃▃▅▄▃▄▅▅▅▄▄▄▄▄▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_majacc_d_avg ██▆▆▆▄▄▄▄▄▄▄▅▄▆▅▄▆▅▆▄▃▃▄▁▃▃▅▄▃▄▅▅▅▄▄▄▄▄▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_majacc_d_val ██▆▆▆▄▄▄▄▄▄▄▅▄▆▅▄▆▅▆▄▃▃▄▁▃▃▅▄▃▄▅▅▅▄▄▄▄▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_majacc_val ██▆▆▆▄▄▄▄▄▄▄▅▄▆▅▄▆▅▆▄▃▃▄▁▃▃▅▄▃▄▅▅▅▄▄▄▄▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_minacc_avg ▁▁▂▃▃▅▆▆███▇▅▆▆▆▆▆▆▅▇▇▇▇▇▇▇▇▇▇▆▆▆▆▇▆▆▇▆▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_minacc_d_avg ▁▁▂▃▃▅▆▆███▇▅▆▆▆▆▆▆▅▇▇▇▇▇▇▇▇▇▇▆▆▆▆▇▆▆▇▆▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_minacc_d_val ▁▁▂▃▃▅▆▆███▇▅▆▆▆▆▆▆▅▇▇▇▇▇▇▇▇▇▇▆▆▆▆▇▆▆▇▆▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_minacc_val ▁▁▂▃▃▅▆▆███▇▅▆▆▆▆▆▆▅▇▇▇▇▇▇▇▇▇▇▆▆▆▆▇▆▆▇▆▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/Loss_avg █▆▆▆▅▅▅▅▄▄▄▄▃▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/Loss_val ███▇▆▆▅▅▄▄▄▃▄▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/l1_avg ▂▁▁▁▁▁▁▁▂▂▂▁▂▂▃▃▃▄▅▅▅▅▅▆▇▇▇▇▇▇▇▇█▇██████
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/l1_val ▁▁▁▁▁▁▁▁▁▂▁▂▂▂▂▃▄▄▅▅▅▅▅▆▇▆▇▇▇▇▇▇▇███████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_acc_avg ▁▃▃▃▃▃▃▄▄▄▄▄▅▅▆▆▇▇▇▇▇▇▇█████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_acc_val ▁▂▂▂▃▄▄▄▅▄▅▆▅▆▆▇▇█▇▇▇███████████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_majacc_avg ▁█▇▇▄▄▃▃▂▂▃▃▄▃▅▆▆▆▆▆▇▇▇▇█▇██████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_majacc_val ▂████▄▁▄▃▁▅▇▇▆▆▆▆█▇▅▄▅▇█▇██▇█▇██████▆███
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_minacc_avg ▁▁▁▁▃▃▄▄▅▅▅▅▆▆▆▇▇▇▇▇▇███████████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_minacc_val ▁▁▁▁▂▄▅▄▅▅▅▆▅▅▇█▇█▇▇████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_nll_avg █▆▆▆▅▅▅▅▄▄▄▄▃▃▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_nll_val ███▇▆▆▅▅▄▄▄▃▄▃▃▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_penalty_avg █▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_penalty_val ██▇▆▄▂▂▂▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/weight_norm_avg ▁▂▃▃▃▃▃▃▃▃▃▃▄▄▄▄▅▅▅▅▆▆▆▆▆▆▆▇▇▇▇▇▇▇▇▇████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/weight_norm_val ▁▂▂▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▆▆▆▆▆▆▇▇▇▇▇▇▇▇████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/diagnostics/epoch_time_val 0.04071
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/diagnostics/train_time_val 0.03999
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/diagnostics/validation_time_val 0.00071
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/Loss_avg 6.59856
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/Loss_d_avg 6.59856
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/Loss_d_val 6.59856
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/Loss_val 6.59856
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_acc_avg 0.392
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_acc_d_avg 0.392
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_acc_d_val 0.392
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_acc_val 0.392
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_corr_d_avg 0.40016
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_corr_d_val 0.40016
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_majacc_avg 0.89
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_majacc_d_avg 0.89
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_majacc_d_val 0.89
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_majacc_val 0.89
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_minacc_avg 0.33667
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_minacc_d_avg 0.33667
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_minacc_d_val 0.33667
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/test/test_minacc_val 0.33667
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/Loss_avg 0.01115
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/Loss_val 0.0033
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/l1_avg 14.30178
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/l1_val 14.48649
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_acc_avg 0.996
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_acc_val 1.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_majacc_avg 0.99778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_majacc_val 1.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_minacc_avg 0.98563
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_minacc_val 1.0
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_nll_avg 0.01115
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_nll_val 0.0033
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_penalty_avg 0.00011
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/train_penalty_val 1e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/weight_norm_avg 34.91136
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/weight_norm_val 35.01037
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/122/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/g9uhxc91
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_192329-g9uhxc91/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_192625-wqq460mq
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/wqq460mq
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=240000, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Conv2d(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1224
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6018, 3, 32, 32) (5982, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:45,  1.81s/it] 19%|#9        | 5/26 [00:01<00:06,  3.41it/s] 35%|###4      | 9/26 [00:02<00:02,  6.79it/s] 50%|#####     | 13/26 [00:02<00:01, 10.48it/s] 65%|######5   | 17/26 [00:02<00:00, 14.42it/s] 81%|########  | 21/26 [00:02<00:00, 18.26it/s] 96%|#########6| 25/26 [00:02<00:00, 21.58it/s]100%|##########| 26/26 [00:02<00:00,  9.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 240000
penalty weights 0.0
Epoch: [0][  26/  26]	Loss 0.451 (0.515)	train_nll   0.45 (  0.51)	train_penalty   0.07 (  0.20)	weight_norm  20.96 ( 18.20)	train_acc   0.84 (  0.81)	train_minacc   0.00 (  0.06)	train_majacc   1.00 (  0.94)	train_corr   0.00 (  0.00)	l1 7.6877 (8.2155)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 27%|##6       | 7/26 [00:00<00:00, 29.37it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.37it/s] 46%|####6     | 12/26 [00:00<00:00, 36.01it/s] 65%|######5   | 17/26 [00:00<00:00, 37.68it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.68it/s] 85%|########4 | 22/26 [00:00<00:00, 39.86it/s]100%|##########| 26/26 [00:00<00:00, 34.89it/s]
Test: [   0/  26]	Loss 0.427 (0.427)	test_acc   0.84 (  0.84)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.427 (0.427)	test_acc_d   0.84 (  0.84)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.403 (0.430)	test_acc   0.87 (  0.84)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.403 (0.430)	test_acc_d   0.87 (  0.84)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  20/  26]	Loss 0.401 (0.420)	test_acc   0.86 (  0.85)	test_minacc   0.05 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.401 (0.420)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.05 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.448 (0.422)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.448 (0.422)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.51it/s]100%|##########| 1/1 [00:00<00:00,  2.50it/s]
Test: [  0/  1]	Loss 1.601 (1.601)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.601 (1.601)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.601 (1.601)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 1.601 (1.601)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/124/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0842 (0.0842)	validation_time 0.0071 (0.0071)	train_time 0.0728 (0.0728)
record: (train_acc, test_acc) (0.846200024664402, 0.10700000822544098)
last accs (train_acc, test_acc) (0.846200024664402, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 19%|#9        | 5/26 [00:00<00:00, 21.04it/s] 35%|###4      | 9/26 [00:00<00:00, 26.63it/s] 50%|#####     | 13/26 [00:00<00:00, 29.78it/s] 65%|######5   | 17/26 [00:00<00:00, 32.26it/s] 81%|########  | 21/26 [00:00<00:00, 33.73it/s] 96%|#########6| 25/26 [00:00<00:00, 34.79it/s]100%|##########| 26/26 [00:00<00:00, 28.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 240000
penalty weights 0.0
Epoch: [1][  26/  26]	Loss 0.445 (0.418)	train_nll   0.44 (  0.42)	train_penalty   0.08 (  0.06)	weight_norm  22.06 ( 21.72)	train_acc   0.84 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 7.6566 (7.7629)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 19%|#9        | 5/26 [00:00<00:00, 21.37it/s] 38%|###8      | 10/26 [00:00<00:00, 32.39it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.39it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 37.64it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 37.64it/s] 96%|#########6| 25/26 [00:00<00:00, 40.79it/s]100%|##########| 26/26 [00:00<00:00, 32.76it/s]
Test: [   0/  26]	Loss 0.415 (0.415)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.415 (0.415)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.392 (0.417)	test_acc   0.87 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.392 (0.417)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.97)
Test: [  20/  26]	Loss 0.386 (0.406)	test_acc   0.86 (  0.85)	test_minacc   0.04 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.386 (0.406)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.04 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.97)
Test: [  26/  26]	Loss 0.430 (0.408)	test_acc   0.84 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.430 (0.408)	test_acc_d   0.84 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.73it/s]
Test: [  0/  1]	Loss 1.667 (1.667)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.667 (1.667)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.667 (1.667)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.667 (1.667)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0432 (0.0637)	validation_time 0.0003 (0.0037)	train_time 0.0429 (0.0578)
record: (train_acc, test_acc) (0.846200024664402, 0.10700000822544098)
last accs (train_acc, test_acc) (0.8490000268220902, 0.10200000554323196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.27it/s] 23%|##3       | 6/26 [00:00<00:00, 26.56it/s] 38%|###8      | 10/26 [00:00<00:00, 29.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.03it/s] 69%|######9   | 18/26 [00:00<00:00, 33.32it/s] 85%|########4 | 22/26 [00:00<00:00, 34.40it/s]100%|##########| 26/26 [00:00<00:00, 33.94it/s]100%|##########| 26/26 [00:00<00:00, 29.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 240000
penalty weights 0.0
Epoch: [2][  26/  26]	Loss 0.422 (0.409)	train_nll   0.42 (  0.41)	train_penalty   0.06 (  0.06)	weight_norm  22.16 ( 22.13)	train_acc   0.83 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   0.99 (  1.00)	train_corr   0.00 (  0.00)	l1 7.3467 (7.5932)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.58it/s] 23%|##3       | 6/26 [00:00<00:00, 28.23it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.23it/s] 42%|####2     | 11/26 [00:00<00:00, 36.33it/s] 62%|######1   | 16/26 [00:00<00:00, 40.47it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.47it/s] 81%|########  | 21/26 [00:00<00:00, 41.04it/s]100%|##########| 26/26 [00:00<00:00, 43.38it/s]100%|##########| 26/26 [00:00<00:00, 35.29it/s]
Test: [   0/  26]	Loss 0.400 (0.400)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   1.00 (  1.00)	Loss_d 0.400 (0.400)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  10/  26]	Loss 0.391 (0.404)	test_acc   0.87 (  0.84)	test_minacc   0.08 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.391 (0.404)	test_acc_d   0.87 (  0.84)	test_minacc_d   0.08 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.96)
Test: [  20/  26]	Loss 0.374 (0.394)	test_acc   0.85 (  0.85)	test_minacc   0.05 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.374 (0.394)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.05 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.96)
Test: [  26/  26]	Loss 0.418 (0.396)	test_acc   0.83 (  0.85)	test_minacc   0.00 (  0.02)	test_majacc   1.00 (  0.99)	Loss_d 0.418 (0.396)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.00 (  0.02)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.96 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.68it/s]
Test: [  0/  1]	Loss 1.599 (1.599)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.599 (1.599)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  1/  1]	Loss 1.599 (1.599)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 1.599 (1.599)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/124/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0372 (0.0549)	validation_time 0.0004 (0.0026)	train_time 0.0367 (0.0508)
record: (train_acc, test_acc) (0.8470000255703926, 0.1120000034570694)
last accs (train_acc, test_acc) (0.8470000255703926, 0.1120000034570694)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.02it/s]  8%|7         | 2/26 [00:00<00:02,  8.50it/s] 23%|##3       | 6/26 [00:00<00:00, 20.50it/s] 38%|###8      | 10/26 [00:00<00:00, 26.29it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.71it/s] 69%|######9   | 18/26 [00:00<00:00, 31.81it/s] 85%|########4 | 22/26 [00:00<00:00, 33.15it/s]100%|##########| 26/26 [00:00<00:00, 34.31it/s]100%|##########| 26/26 [00:00<00:00, 26.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 240000
penalty weights 0.0
Epoch: [3][  26/  26]	Loss 0.385 (0.390)	train_nll   0.38 (  0.39)	train_penalty   0.03 (  0.05)	weight_norm  22.21 ( 22.19)	train_acc   0.82 (  0.85)	train_minacc   0.22 (  0.08)	train_majacc   0.94 (  0.98)	train_corr   0.00 (  0.00)	l1 7.0886 (7.3851)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 12.65it/s] 31%|###       | 8/26 [00:00<00:00, 33.03it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.03it/s] 50%|#####     | 13/26 [00:00<00:00, 38.18it/s] 69%|######9   | 18/26 [00:00<00:00, 41.76it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.76it/s] 88%|########8 | 23/26 [00:00<00:00, 42.53it/s]100%|##########| 26/26 [00:00<00:00, 36.30it/s]
Test: [   0/  26]	Loss 0.377 (0.377)	test_acc   0.86 (  0.86)	test_minacc   0.14 (  0.14)	test_majacc   0.99 (  0.99)	Loss_d 0.377 (0.377)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.14 (  0.14)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.382 (0.385)	test_acc   0.86 (  0.84)	test_minacc   0.22 (  0.15)	test_majacc   0.95 (  0.97)	Loss_d 0.382 (0.385)	test_acc_d   0.86 (  0.84)	test_minacc_d   0.22 (  0.15)	test_majacc_d   0.95 (  0.97)	test_corr_d   0.90 (  0.91)
Test: [  20/  26]	Loss 0.353 (0.374)	test_acc   0.86 (  0.85)	test_minacc   0.21 (  0.15)	test_majacc   0.98 (  0.97)	Loss_d 0.353 (0.374)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.21 (  0.15)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.90 (  0.91)
Test: [  26/  26]	Loss 0.385 (0.376)	test_acc   0.83 (  0.85)	test_minacc   0.20 (  0.15)	test_majacc   0.96 (  0.98)	Loss_d 0.385 (0.376)	test_acc_d   0.83 (  0.85)	test_minacc_d   0.20 (  0.15)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.90 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.81it/s]
Test: [  0/  1]	Loss 1.452 (1.452)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 1.452 (1.452)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.83 (  0.83)
Test: [  1/  1]	Loss 1.452 (1.452)	test_acc   0.20 (  0.20)	test_minacc   0.11 (  0.11)	test_majacc   0.99 (  0.99)	Loss_d 1.452 (1.452)	test_acc_d   0.20 (  0.20)	test_minacc_d   0.11 (  0.11)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.83 (  0.83)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/124/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0426 (0.0518)	validation_time 0.0004 (0.0021)	train_time 0.0421 (0.0486)
record: (train_acc, test_acc) (0.851100024163723, 0.1980000138282776)
last accs (train_acc, test_acc) (0.851100024163723, 0.1980000138282776)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.63it/s] 19%|#9        | 5/26 [00:00<00:00, 22.01it/s] 35%|###4      | 9/26 [00:00<00:00, 27.50it/s] 50%|#####     | 13/26 [00:00<00:00, 29.83it/s] 65%|######5   | 17/26 [00:00<00:00, 30.95it/s] 81%|########  | 21/26 [00:00<00:00, 31.34it/s] 96%|#########6| 25/26 [00:00<00:00, 32.46it/s]100%|##########| 26/26 [00:00<00:00, 27.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 240000
penalty weights 0.0
Epoch: [4][  26/  26]	Loss 0.346 (0.366)	train_nll   0.35 (  0.37)	train_penalty   0.03 (  0.04)	weight_norm  22.28 ( 22.25)	train_acc   0.85 (  0.85)	train_minacc   0.22 (  0.14)	train_majacc   0.97 (  0.98)	train_corr   0.00 (  0.00)	l1 7.0029 (7.1817)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.96it/s] 27%|##6       | 7/26 [00:00<00:00, 22.08it/s]                                               27%|##6       | 7/26 [00:00<00:00, 22.08it/s] 46%|####6     | 12/26 [00:00<00:00, 30.49it/s] 65%|######5   | 17/26 [00:00<00:00, 35.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 35.13it/s] 85%|########4 | 22/26 [00:00<00:00, 39.30it/s]100%|##########| 26/26 [00:00<00:00, 30.76it/s]
Test: [   0/  26]	Loss 0.343 (0.343)	test_acc   0.85 (  0.85)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.343 (0.343)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.93 (  0.93)
Test: [  10/  26]	Loss 0.332 (0.353)	test_acc   0.87 (  0.85)	test_minacc   0.16 (  0.15)	test_majacc   0.97 (  0.98)	Loss_d 0.332 (0.353)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.16 (  0.15)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.91 (  0.92)
Test: [  20/  26]	Loss 0.306 (0.338)	test_acc   0.88 (  0.86)	test_minacc   0.25 (  0.16)	test_majacc   0.99 (  0.98)	Loss_d 0.306 (0.338)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.25 (  0.16)	test_majacc_d   0.99 (  0.98)	test_corr_d   0.91 (  0.92)
Test: [  26/  26]	Loss 0.345 (0.340)	test_acc   0.85 (  0.86)	test_minacc   0.12 (  0.15)	test_majacc   1.00 (  0.98)	Loss_d 0.345 (0.340)	test_acc_d   0.85 (  0.86)	test_minacc_d   0.12 (  0.15)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.92 (  0.92)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.95it/s]
Test: [  0/  1]	Loss 1.510 (1.510)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   0.98 (  0.98)	Loss_d 1.510 (1.510)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.83)
Test: [  1/  1]	Loss 1.510 (1.510)	test_acc   0.19 (  0.19)	test_minacc   0.10 (  0.10)	test_majacc   0.98 (  0.98)	Loss_d 1.510 (1.510)	test_acc_d   0.19 (  0.19)	test_minacc_d   0.10 (  0.10)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.83 (  0.83)
Overall Timing[  4/  1]	epoch_time 0.0422 (0.0499)	validation_time 0.0005 (0.0018)	train_time 0.0418 (0.0473)
record: (train_acc, test_acc) (0.851100024163723, 0.1980000138282776)
last accs (train_acc, test_acc) (0.8557000260949135, 0.1860000044107437)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.60it/s] 19%|#9        | 5/26 [00:00<00:01, 17.23it/s] 35%|###4      | 9/26 [00:00<00:00, 23.90it/s] 50%|#####     | 13/26 [00:00<00:00, 28.22it/s] 65%|######5   | 17/26 [00:00<00:00, 30.95it/s] 81%|########  | 21/26 [00:00<00:00, 32.51it/s] 96%|#########6| 25/26 [00:00<00:00, 33.87it/s]100%|##########| 26/26 [00:00<00:00, 26.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 240000
penalty weights 0.0
Epoch: [5][  26/  26]	Loss 0.350 (0.351)	train_nll   0.35 (  0.35)	train_penalty   0.02 (  0.03)	weight_norm  22.37 ( 22.33)	train_acc   0.86 (  0.85)	train_minacc   0.39 (  0.18)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 6.6791 (6.8650)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.63it/s] 27%|##6       | 7/26 [00:00<00:00, 25.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 25.20it/s] 42%|####2     | 11/26 [00:00<00:00, 28.79it/s] 62%|######1   | 16/26 [00:00<00:00, 32.07it/s]                                                62%|######1   | 16/26 [00:00<00:00, 32.07it/s] 81%|########  | 21/26 [00:00<00:00, 36.09it/s]100%|##########| 26/26 [00:00<00:00, 39.65it/s]100%|##########| 26/26 [00:00<00:00, 29.99it/s]
Test: [   0/  26]	Loss 0.331 (0.331)	test_acc   0.85 (  0.85)	test_minacc   0.22 (  0.22)	test_majacc   0.97 (  0.97)	Loss_d 0.331 (0.331)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  10/  26]	Loss 0.353 (0.354)	test_acc   0.88 (  0.85)	test_minacc   0.29 (  0.25)	test_majacc   0.96 (  0.96)	Loss_d 0.353 (0.354)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.29 (  0.25)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.88 (  0.89)
Test: [  20/  26]	Loss 0.317 (0.340)	test_acc   0.86 (  0.86)	test_minacc   0.26 (  0.26)	test_majacc   0.97 (  0.97)	Loss_d 0.317 (0.340)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.26 (  0.26)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
Test: [  26/  26]	Loss 0.336 (0.340)	test_acc   0.86 (  0.86)	test_minacc   0.32 (  0.26)	test_majacc   0.97 (  0.97)	Loss_d 0.336 (0.340)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.32 (  0.26)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.89 (  0.89)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.11it/s]
Test: [  0/  1]	Loss 1.524 (1.524)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.94 (  0.94)	Loss_d 1.524 (1.524)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.524 (1.524)	test_acc   0.27 (  0.27)	test_minacc   0.19 (  0.19)	test_majacc   0.94 (  0.94)	Loss_d 1.524 (1.524)	test_acc_d   0.27 (  0.27)	test_minacc_d   0.19 (  0.19)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.71 (  0.71)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/124/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0413 (0.0485)	validation_time 0.0004 (0.0015)	train_time 0.0408 (0.0462)
record: (train_acc, test_acc) (0.8583000239133834, 0.26600000262260437)
last accs (train_acc, test_acc) (0.8583000239133834, 0.26600000262260437)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.12it/s] 12%|#1        | 3/26 [00:00<00:01, 13.57it/s] 27%|##6       | 7/26 [00:00<00:00, 23.23it/s] 42%|####2     | 11/26 [00:00<00:00, 27.51it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.96it/s] 73%|#######3  | 19/26 [00:00<00:00, 31.65it/s] 88%|########8 | 23/26 [00:00<00:00, 32.44it/s]100%|##########| 26/26 [00:00<00:00, 26.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 240000
penalty weights 0.0
Epoch: [6][  26/  26]	Loss 0.331 (0.334)	train_nll   0.33 (  0.33)	train_penalty   0.02 (  0.03)	weight_norm  22.47 ( 22.43)	train_acc   0.85 (  0.86)	train_minacc   0.27 (  0.22)	train_majacc   0.97 (  0.97)	train_corr   0.00 (  0.00)	l1 6.8985 (6.7727)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.53it/s] 19%|#9        | 5/26 [00:00<00:00, 23.50it/s] 38%|###8      | 10/26 [00:00<00:00, 32.58it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.52it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.76it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.76it/s] 96%|#########6| 25/26 [00:00<00:00, 40.70it/s]100%|##########| 26/26 [00:00<00:00, 33.40it/s]
Test: [   0/  26]	Loss 0.324 (0.324)	test_acc   0.86 (  0.86)	test_minacc   0.22 (  0.22)	test_majacc   0.97 (  0.97)	Loss_d 0.324 (0.324)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.22 (  0.22)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.91 (  0.91)
Test: [  10/  26]	Loss 0.337 (0.341)	test_acc   0.89 (  0.85)	test_minacc   0.31 (  0.22)	test_majacc   0.97 (  0.97)	Loss_d 0.337 (0.341)	test_acc_d   0.89 (  0.85)	test_minacc_d   0.31 (  0.22)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.90)
Test: [  20/  26]	Loss 0.303 (0.323)	test_acc   0.87 (  0.86)	test_minacc   0.28 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 0.303 (0.323)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.28 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.91)
Test: [  26/  26]	Loss 0.315 (0.320)	test_acc   0.86 (  0.86)	test_minacc   0.27 (  0.23)	test_majacc   0.97 (  0.97)	Loss_d 0.315 (0.320)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.27 (  0.23)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.90 (  0.91)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.00it/s]
Test: [  0/  1]	Loss 1.699 (1.699)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.96 (  0.96)	Loss_d 1.699 (1.699)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Test: [  1/  1]	Loss 1.699 (1.699)	test_acc   0.26 (  0.26)	test_minacc   0.18 (  0.18)	test_majacc   0.96 (  0.96)	Loss_d 1.699 (1.699)	test_acc_d   0.26 (  0.26)	test_minacc_d   0.18 (  0.18)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.71 (  0.71)
Overall Timing[  6/  1]	epoch_time 0.0404 (0.0473)	validation_time 0.0003 (0.0014)	train_time 0.0401 (0.0453)
record: (train_acc, test_acc) (0.8583000239133834, 0.26600000262260437)
last accs (train_acc, test_acc) (0.8604000260233879, 0.26200002431869507)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.90it/s] 19%|#9        | 5/26 [00:00<00:01, 20.41it/s] 35%|###4      | 9/26 [00:00<00:00, 26.98it/s] 50%|#####     | 13/26 [00:00<00:00, 29.58it/s] 65%|######5   | 17/26 [00:00<00:00, 31.13it/s] 81%|########  | 21/26 [00:00<00:00, 32.21it/s] 96%|#########6| 25/26 [00:00<00:00, 32.81it/s]100%|##########| 26/26 [00:00<00:00, 27.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 240000
penalty weights 0.0
Epoch: [7][  26/  26]	Loss 0.306 (0.318)	train_nll   0.31 (  0.32)	train_penalty   0.02 (  0.02)	weight_norm  22.58 ( 22.53)	train_acc   0.87 (  0.86)	train_minacc   0.46 (  0.27)	train_majacc   0.95 (  0.97)	train_corr   0.00 (  0.00)	l1 6.9279 (6.7297)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.79it/s] 27%|##6       | 7/26 [00:00<00:00, 27.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.92it/s] 50%|#####     | 13/26 [00:00<00:00, 36.96it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.66it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.66it/s] 92%|#########2| 24/26 [00:00<00:00, 42.21it/s]100%|##########| 26/26 [00:00<00:00, 34.69it/s]
Test: [   0/  26]	Loss 0.309 (0.309)	test_acc   0.85 (  0.85)	test_minacc   0.27 (  0.27)	test_majacc   0.95 (  0.95)	Loss_d 0.309 (0.309)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.88 (  0.88)
Test: [  10/  26]	Loss 0.341 (0.327)	test_acc   0.86 (  0.86)	test_minacc   0.39 (  0.37)	test_majacc   0.93 (  0.95)	Loss_d 0.341 (0.327)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.39 (  0.37)	test_majacc_d   0.93 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  20/  26]	Loss 0.276 (0.308)	test_acc   0.88 (  0.86)	test_minacc   0.44 (  0.38)	test_majacc   0.95 (  0.95)	Loss_d 0.276 (0.308)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.44 (  0.38)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  26/  26]	Loss 0.285 (0.305)	test_acc   0.86 (  0.86)	test_minacc   0.41 (  0.38)	test_majacc   0.95 (  0.95)	Loss_d 0.285 (0.305)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.41 (  0.38)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.86 (  0.87)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.88it/s]
Test: [  0/  1]	Loss 1.708 (1.708)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 1.708 (1.708)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 1.708 (1.708)	test_acc   0.35 (  0.35)	test_minacc   0.29 (  0.29)	test_majacc   0.94 (  0.94)	Loss_d 1.708 (1.708)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.29 (  0.29)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/124/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0416 (0.0466)	validation_time 0.0004 (0.0012)	train_time 0.0412 (0.0448)
record: (train_acc, test_acc) (0.8643000258803367, 0.35200002789497375)
last accs (train_acc, test_acc) (0.8643000258803367, 0.35200002789497375)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.10it/s] 15%|#5        | 4/26 [00:00<00:01, 13.42it/s] 31%|###       | 8/26 [00:00<00:00, 21.42it/s] 46%|####6     | 12/26 [00:00<00:00, 25.92it/s] 62%|######1   | 16/26 [00:00<00:00, 28.77it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.58it/s] 92%|#########2| 24/26 [00:00<00:00, 31.67it/s]100%|##########| 26/26 [00:01<00:00, 24.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 240000
penalty weights 0.0
Epoch: [8][  26/  26]	Loss 0.300 (0.302)	train_nll   0.30 (  0.30)	train_penalty   0.01 (  0.02)	weight_norm  22.71 ( 22.65)	train_acc   0.88 (  0.87)	train_minacc   0.54 (  0.35)	train_majacc   0.95 (  0.96)	train_corr   0.00 (  0.00)	l1 7.0593 (6.7766)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.10it/s] 35%|###4      | 9/26 [00:00<00:00, 37.96it/s]                                               35%|###4      | 9/26 [00:00<00:00, 37.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 39.78it/s] 77%|#######6  | 20/26 [00:00<00:00, 42.30it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 42.30it/s] 96%|#########6| 25/26 [00:00<00:00, 44.61it/s]100%|##########| 26/26 [00:00<00:00, 37.98it/s]
Test: [   0/  26]	Loss 0.319 (0.319)	test_acc   0.86 (  0.86)	test_minacc   0.34 (  0.34)	test_majacc   0.96 (  0.96)	Loss_d 0.319 (0.319)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.87 (  0.87)
Test: [  10/  26]	Loss 0.329 (0.327)	test_acc   0.88 (  0.86)	test_minacc   0.41 (  0.39)	test_majacc   0.94 (  0.95)	Loss_d 0.329 (0.327)	test_acc_d   0.88 (  0.86)	test_minacc_d   0.41 (  0.39)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.86 (  0.86)
Test: [  20/  26]	Loss 0.286 (0.307)	test_acc   0.89 (  0.87)	test_minacc   0.44 (  0.40)	test_majacc   0.97 (  0.95)	Loss_d 0.286 (0.307)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.44 (  0.40)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.87 (  0.87)
Test: [  26/  26]	Loss 0.266 (0.302)	test_acc   0.88 (  0.87)	test_minacc   0.51 (  0.41)	test_majacc   0.95 (  0.96)	Loss_d 0.266 (0.302)	test_acc_d   0.88 (  0.87)	test_minacc_d   0.51 (  0.41)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.83 (  0.86)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.98it/s]
Test: [  0/  1]	Loss 1.862 (1.862)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 1.862 (1.862)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 1.862 (1.862)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.94 (  0.94)	Loss_d 1.862 (1.862)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.60 (  0.60)
Overall Timing[  8/  1]	epoch_time 0.0414 (0.0460)	validation_time 0.0004 (0.0012)	train_time 0.0410 (0.0444)
record: (train_acc, test_acc) (0.8643000258803367, 0.35200002789497375)
last accs (train_acc, test_acc) (0.873000023663044, 0.3460000157356262)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.49it/s] 19%|#9        | 5/26 [00:00<00:01, 14.57it/s] 35%|###4      | 9/26 [00:00<00:00, 21.01it/s] 50%|#####     | 13/26 [00:00<00:00, 25.66it/s] 65%|######5   | 17/26 [00:00<00:00, 28.86it/s] 81%|########  | 21/26 [00:00<00:00, 31.25it/s] 96%|#########6| 25/26 [00:00<00:00, 32.82it/s]100%|##########| 26/26 [00:01<00:00, 24.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 240000
penalty weights 0.0
Epoch: [9][  26/  26]	Loss 0.268 (0.293)	train_nll   0.27 (  0.29)	train_penalty   0.01 (  0.02)	weight_norm  22.90 ( 22.81)	train_acc   0.88 (  0.87)	train_minacc   0.44 (  0.37)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.3027 (6.7631)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.00it/s] 31%|###       | 8/26 [00:00<00:00, 37.63it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.63it/s] 50%|#####     | 13/26 [00:00<00:00, 41.47it/s] 69%|######9   | 18/26 [00:00<00:00, 41.73it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.73it/s] 88%|########8 | 23/26 [00:00<00:00, 41.89it/s]100%|##########| 26/26 [00:00<00:00, 38.72it/s]
Test: [   0/  26]	Loss 0.304 (0.304)	test_acc   0.86 (  0.86)	test_minacc   0.42 (  0.42)	test_majacc   0.94 (  0.94)	Loss_d 0.304 (0.304)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.343 (0.326)	test_acc   0.87 (  0.86)	test_minacc   0.41 (  0.42)	test_majacc   0.94 (  0.94)	Loss_d 0.343 (0.326)	test_acc_d   0.87 (  0.86)	test_minacc_d   0.41 (  0.42)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.82)
Test: [  20/  26]	Loss 0.259 (0.305)	test_acc   0.89 (  0.87)	test_minacc   0.49 (  0.44)	test_majacc   0.96 (  0.95)	Loss_d 0.259 (0.305)	test_acc_d   0.89 (  0.87)	test_minacc_d   0.49 (  0.44)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  26/  26]	Loss 0.243 (0.295)	test_acc   0.91 (  0.88)	test_minacc   0.56 (  0.46)	test_majacc   0.98 (  0.95)	Loss_d 0.243 (0.295)	test_acc_d   0.91 (  0.88)	test_minacc_d   0.56 (  0.46)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.81 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.24it/s]
Test: [  0/  1]	Loss 1.933 (1.933)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.93 (  0.93)	Loss_d 1.933 (1.933)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.53 (  0.53)
Test: [  1/  1]	Loss 1.933 (1.933)	test_acc   0.35 (  0.35)	test_minacc   0.28 (  0.28)	test_majacc   0.93 (  0.93)	Loss_d 1.933 (1.933)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.53 (  0.53)
Overall Timing[  9/  1]	epoch_time 0.0431 (0.0457)	validation_time 0.0005 (0.0011)	train_time 0.0426 (0.0442)
record: (train_acc, test_acc) (0.8643000258803367, 0.35200002789497375)
last accs (train_acc, test_acc) (0.8765000247955322, 0.34700000286102295)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.96it/s] 15%|#5        | 4/26 [00:00<00:01, 18.96it/s] 31%|###       | 8/26 [00:00<00:00, 26.22it/s] 46%|####6     | 12/26 [00:00<00:00, 29.28it/s] 62%|######1   | 16/26 [00:00<00:00, 30.87it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.86it/s] 92%|#########2| 24/26 [00:00<00:00, 32.64it/s]100%|##########| 26/26 [00:00<00:00, 27.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 240000
penalty weights 0.0
Epoch: [10][  26/  26]	Loss 0.215 (0.278)	train_nll   0.21 (  0.28)	train_penalty   0.01 (  0.01)	weight_norm  23.15 ( 23.04)	train_acc   0.89 (  0.88)	train_minacc   0.49 (  0.46)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.6061 (6.9432)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.75it/s] 12%|#1        | 3/26 [00:00<00:01, 14.74it/s] 19%|#9        | 5/26 [00:00<00:01, 12.41it/s] 38%|###8      | 10/26 [00:00<00:00, 24.01it/s]                                                38%|###8      | 10/26 [00:00<00:00, 24.01it/s] 58%|#####7    | 15/26 [00:00<00:00, 31.55it/s] 77%|#######6  | 20/26 [00:00<00:00, 35.81it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 35.81it/s]100%|##########| 26/26 [00:00<00:00, 42.18it/s]100%|##########| 26/26 [00:00<00:00, 29.46it/s]
Test: [   0/  26]	Loss 0.257 (0.257)	test_acc   0.89 (  0.89)	test_minacc   0.51 (  0.51)	test_majacc   0.96 (  0.96)	Loss_d 0.257 (0.257)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.303 (0.304)	test_acc   0.88 (  0.88)	test_minacc   0.51 (  0.53)	test_majacc   0.94 (  0.94)	Loss_d 0.303 (0.304)	test_acc_d   0.88 (  0.88)	test_minacc_d   0.51 (  0.53)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.83 (  0.81)
Test: [  20/  26]	Loss 0.237 (0.279)	test_acc   0.91 (  0.89)	test_minacc   0.58 (  0.55)	test_majacc   0.96 (  0.95)	Loss_d 0.237 (0.279)	test_acc_d   0.91 (  0.89)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.83 (  0.82)
Test: [  26/  26]	Loss 0.170 (0.265)	test_acc   0.92 (  0.89)	test_minacc   0.71 (  0.56)	test_majacc   0.96 (  0.95)	Loss_d 0.170 (0.265)	test_acc_d   0.92 (  0.89)	test_minacc_d   0.71 (  0.56)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.79 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.62it/s]
Test: [  0/  1]	Loss 2.014 (2.014)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.91 (  0.91)	Loss_d 2.014 (2.014)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 2.014 (2.014)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.91 (  0.91)	Loss_d 2.014 (2.014)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.41 (  0.41)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/124/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0433 (0.0455)	validation_time 0.0003 (0.0010)	train_time 0.0430 (0.0441)
record: (train_acc, test_acc) (0.8931000194549561, 0.42600002884864807)
last accs (train_acc, test_acc) (0.8931000194549561, 0.42600002884864807)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 19%|#9        | 5/26 [00:00<00:00, 21.44it/s] 35%|###4      | 9/26 [00:00<00:00, 27.32it/s] 50%|#####     | 13/26 [00:00<00:00, 30.40it/s] 65%|######5   | 17/26 [00:00<00:00, 31.87it/s] 81%|########  | 21/26 [00:00<00:00, 32.17it/s] 96%|#########6| 25/26 [00:00<00:00, 32.73it/s]100%|##########| 26/26 [00:00<00:00, 27.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 240000
penalty weights 0.0
Epoch: [11][  26/  26]	Loss 0.209 (0.272)	train_nll   0.21 (  0.27)	train_penalty   0.00 (  0.01)	weight_norm  23.45 ( 23.31)	train_acc   0.91 (  0.88)	train_minacc   0.56 (  0.48)	train_majacc   0.98 (  0.96)	train_corr   0.00 (  0.00)	l1 7.5791 (6.9634)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.41it/s] 27%|##6       | 7/26 [00:00<00:00, 31.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.14it/s] 46%|####6     | 12/26 [00:00<00:00, 37.35it/s] 65%|######5   | 17/26 [00:00<00:00, 41.24it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.24it/s] 85%|########4 | 22/26 [00:00<00:00, 39.46it/s]100%|##########| 26/26 [00:00<00:00, 36.19it/s]
Test: [   0/  26]	Loss 0.262 (0.262)	test_acc   0.89 (  0.89)	test_minacc   0.56 (  0.56)	test_majacc   0.95 (  0.95)	Loss_d 0.262 (0.262)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.82 (  0.82)
Test: [  10/  26]	Loss 0.273 (0.280)	test_acc   0.90 (  0.89)	test_minacc   0.51 (  0.55)	test_majacc   0.95 (  0.95)	Loss_d 0.273 (0.280)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.51 (  0.55)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.81)
Test: [  20/  26]	Loss 0.263 (0.270)	test_acc   0.89 (  0.89)	test_minacc   0.54 (  0.57)	test_majacc   0.95 (  0.95)	Loss_d 0.263 (0.270)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.54 (  0.57)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.81)
Test: [  26/  26]	Loss 0.155 (0.256)	test_acc   0.94 (  0.90)	test_minacc   0.73 (  0.59)	test_majacc   0.98 (  0.95)	Loss_d 0.155 (0.256)	test_acc_d   0.94 (  0.90)	test_minacc_d   0.73 (  0.59)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.79 (  0.81)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.69it/s]
Test: [  0/  1]	Loss 2.172 (2.172)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 2.172 (2.172)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.49 (  0.49)
Test: [  1/  1]	Loss 2.172 (2.172)	test_acc   0.37 (  0.37)	test_minacc   0.31 (  0.31)	test_majacc   0.94 (  0.94)	Loss_d 2.172 (2.172)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.49 (  0.49)
Overall Timing[ 11/  1]	epoch_time 0.0399 (0.0450)	validation_time 0.0006 (0.0010)	train_time 0.0392 (0.0437)
record: (train_acc, test_acc) (0.8931000194549561, 0.42600002884864807)
last accs (train_acc, test_acc) (0.8969000154137612, 0.37400001287460327)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.75it/s] 19%|#9        | 5/26 [00:00<00:00, 23.04it/s] 35%|###4      | 9/26 [00:00<00:00, 28.79it/s] 50%|#####     | 13/26 [00:00<00:00, 31.58it/s] 65%|######5   | 17/26 [00:00<00:00, 33.12it/s] 81%|########  | 21/26 [00:00<00:00, 34.05it/s] 96%|#########6| 25/26 [00:00<00:00, 34.71it/s]100%|##########| 26/26 [00:00<00:00, 29.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 240000
penalty weights 0.0
Epoch: [12][  26/  26]	Loss 0.195 (0.264)	train_nll   0.19 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  23.80 ( 23.64)	train_acc   0.91 (  0.89)	train_minacc   0.73 (  0.52)	train_majacc   0.95 (  0.95)	train_corr   0.00 (  0.00)	l1 7.7569 (7.0359)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.01it/s] 19%|#9        | 5/26 [00:00<00:01, 20.83it/s] 38%|###8      | 10/26 [00:00<00:00, 31.80it/s]                                                38%|###8      | 10/26 [00:00<00:00, 31.80it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.23it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.52it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.52it/s] 96%|#########6| 25/26 [00:00<00:00, 41.11it/s]100%|##########| 26/26 [00:00<00:00, 32.36it/s]
Test: [   0/  26]	Loss 0.264 (0.264)	test_acc   0.89 (  0.89)	test_minacc   0.56 (  0.56)	test_majacc   0.95 (  0.95)	Loss_d 0.264 (0.264)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.272 (0.302)	test_acc   0.90 (  0.88)	test_minacc   0.51 (  0.51)	test_majacc   0.96 (  0.95)	Loss_d 0.272 (0.302)	test_acc_d   0.90 (  0.88)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.96 (  0.95)	test_corr_d   0.85 (  0.82)
Test: [  20/  26]	Loss 0.299 (0.294)	test_acc   0.90 (  0.89)	test_minacc   0.53 (  0.53)	test_majacc   0.97 (  0.95)	Loss_d 0.299 (0.294)	test_acc_d   0.90 (  0.89)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.97 (  0.95)	test_corr_d   0.84 (  0.83)
Test: [  26/  26]	Loss 0.164 (0.281)	test_acc   0.93 (  0.89)	test_minacc   0.66 (  0.54)	test_majacc   0.98 (  0.95)	Loss_d 0.164 (0.281)	test_acc_d   0.93 (  0.89)	test_minacc_d   0.66 (  0.54)	test_majacc_d   0.98 (  0.95)	test_corr_d   0.81 (  0.83)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.98it/s]
Test: [  0/  1]	Loss 2.351 (2.351)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 2.351 (2.351)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 2.351 (2.351)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.96 (  0.96)	Loss_d 2.351 (2.351)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.55 (  0.55)
Overall Timing[ 12/  1]	epoch_time 0.0396 (0.0446)	validation_time 0.0004 (0.0009)	train_time 0.0392 (0.0433)
record: (train_acc, test_acc) (0.8931000194549561, 0.42600002884864807)
last accs (train_acc, test_acc) (0.8911000199913979, 0.3630000054836273)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 19%|#9        | 5/26 [00:00<00:00, 24.49it/s] 35%|###4      | 9/26 [00:00<00:00, 29.29it/s] 50%|#####     | 13/26 [00:00<00:00, 30.38it/s] 65%|######5   | 17/26 [00:00<00:00, 31.98it/s] 81%|########  | 21/26 [00:00<00:00, 33.13it/s] 96%|#########6| 25/26 [00:00<00:00, 34.19it/s]100%|##########| 26/26 [00:00<00:00, 28.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 240000
penalty weights 0.0
Epoch: [13][  26/  26]	Loss 0.158 (0.255)	train_nll   0.16 (  0.26)	train_penalty   0.00 (  0.01)	weight_norm  24.19 ( 24.01)	train_acc   0.93 (  0.89)	train_minacc   0.76 (  0.53)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.7753 (6.9559)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 31%|###       | 8/26 [00:00<00:00, 35.82it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.82it/s] 50%|#####     | 13/26 [00:00<00:00, 38.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.80it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.80it/s] 92%|#########2| 24/26 [00:00<00:00, 43.10it/s]100%|##########| 26/26 [00:00<00:00, 36.69it/s]
Test: [   0/  26]	Loss 0.253 (0.253)	test_acc   0.89 (  0.89)	test_minacc   0.80 (  0.80)	test_majacc   0.91 (  0.91)	Loss_d 0.253 (0.253)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.262 (0.260)	test_acc   0.89 (  0.89)	test_minacc   0.65 (  0.73)	test_majacc   0.92 (  0.92)	Loss_d 0.262 (0.260)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.65 (  0.73)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.78 (  0.74)
Test: [  20/  26]	Loss 0.261 (0.254)	test_acc   0.89 (  0.89)	test_minacc   0.70 (  0.72)	test_majacc   0.93 (  0.92)	Loss_d 0.261 (0.254)	test_acc_d   0.89 (  0.89)	test_minacc_d   0.70 (  0.72)	test_majacc_d   0.93 (  0.92)	test_corr_d   0.75 (  0.75)
Test: [  26/  26]	Loss 0.124 (0.242)	test_acc   0.96 (  0.90)	test_minacc   0.93 (  0.73)	test_majacc   0.96 (  0.92)	Loss_d 0.124 (0.242)	test_acc_d   0.96 (  0.90)	test_minacc_d   0.93 (  0.73)	test_majacc_d   0.96 (  0.92)	test_corr_d   0.74 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.24it/s]
Test: [  0/  1]	Loss 2.322 (2.322)	test_acc   0.46 (  0.46)	test_minacc   0.42 (  0.42)	test_majacc   0.85 (  0.85)	Loss_d 2.322 (2.322)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 2.322 (2.322)	test_acc   0.46 (  0.46)	test_minacc   0.42 (  0.42)	test_majacc   0.85 (  0.85)	Loss_d 2.322 (2.322)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.37 (  0.37)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/124/checkpoints/model_best.pth
Overall Timing[ 13/  1]	epoch_time 0.0409 (0.0444)	validation_time 0.0004 (0.0009)	train_time 0.0405 (0.0431)
record: (train_acc, test_acc) (0.8951000232100487, 0.46000000834465027)
last accs (train_acc, test_acc) (0.8951000232100487, 0.46000000834465027)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.87it/s] 19%|#9        | 5/26 [00:00<00:00, 25.51it/s] 35%|###4      | 9/26 [00:00<00:00, 30.49it/s] 50%|#####     | 13/26 [00:00<00:00, 32.16it/s] 65%|######5   | 17/26 [00:00<00:00, 32.62it/s] 81%|########  | 21/26 [00:00<00:00, 33.57it/s] 96%|#########6| 25/26 [00:00<00:00, 34.52it/s]100%|##########| 26/26 [00:00<00:00, 30.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 240000
penalty weights 0.0
Epoch: [14][  26/  26]	Loss 0.181 (0.241)	train_nll   0.18 (  0.24)	train_penalty   0.01 (  0.01)	weight_norm  24.62 ( 24.40)	train_acc   0.94 (  0.90)	train_minacc   0.78 (  0.59)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 6.7227 (7.3462)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.26it/s] 23%|##3       | 6/26 [00:00<00:00, 31.30it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.30it/s] 42%|####2     | 11/26 [00:00<00:00, 38.07it/s] 62%|######1   | 16/26 [00:00<00:00, 41.91it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.91it/s] 81%|########  | 21/26 [00:00<00:00, 40.55it/s]100%|##########| 26/26 [00:00<00:00, 36.32it/s]
Test: [   0/  26]	Loss 0.240 (0.240)	test_acc   0.91 (  0.91)	test_minacc   0.66 (  0.66)	test_majacc   0.95 (  0.95)	Loss_d 0.240 (0.240)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.80 (  0.80)
Test: [  10/  26]	Loss 0.225 (0.238)	test_acc   0.89 (  0.90)	test_minacc   0.71 (  0.71)	test_majacc   0.92 (  0.93)	Loss_d 0.225 (0.238)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.79 (  0.77)
Test: [  20/  26]	Loss 0.237 (0.229)	test_acc   0.89 (  0.90)	test_minacc   0.70 (  0.73)	test_majacc   0.92 (  0.93)	Loss_d 0.237 (0.229)	test_acc_d   0.89 (  0.90)	test_minacc_d   0.70 (  0.73)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.78 (  0.77)
Test: [  26/  26]	Loss 0.148 (0.221)	test_acc   0.96 (  0.91)	test_minacc   0.90 (  0.75)	test_majacc   0.97 (  0.93)	Loss_d 0.148 (0.221)	test_acc_d   0.96 (  0.91)	test_minacc_d   0.90 (  0.75)	test_majacc_d   0.97 (  0.93)	test_corr_d   0.78 (  0.77)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 49.05it/s]
Test: [  0/  1]	Loss 1.847 (1.847)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.92 (  0.92)	Loss_d 1.847 (1.847)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 1.847 (1.847)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.92 (  0.92)	Loss_d 1.847 (1.847)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.39 (  0.39)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/124/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0418 (0.0442)	validation_time 0.0004 (0.0009)	train_time 0.0414 (0.0430)
record: (train_acc, test_acc) (0.9056000227928162, 0.4610000252723694)
last accs (train_acc, test_acc) (0.9056000227928162, 0.4610000252723694)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.07it/s] 19%|#9        | 5/26 [00:00<00:01, 18.50it/s] 35%|###4      | 9/26 [00:00<00:00, 25.10it/s] 50%|#####     | 13/26 [00:00<00:00, 28.87it/s] 65%|######5   | 17/26 [00:00<00:00, 31.44it/s] 81%|########  | 21/26 [00:00<00:00, 33.16it/s] 96%|#########6| 25/26 [00:00<00:00, 34.16it/s]100%|##########| 26/26 [00:00<00:00, 27.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 240000
penalty weights 0.0
Epoch: [15][  26/  26]	Loss 0.186 (0.223)	train_nll   0.19 (  0.22)	train_penalty   0.00 (  0.01)	weight_norm  25.01 ( 24.81)	train_acc   0.94 (  0.91)	train_minacc   0.73 (  0.64)	train_majacc   0.98 (  0.95)	train_corr   0.00 (  0.00)	l1 6.9347 (7.4801)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.15it/s] 31%|###       | 8/26 [00:00<00:00, 37.68it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.68it/s] 50%|#####     | 13/26 [00:00<00:00, 42.16it/s] 69%|######9   | 18/26 [00:00<00:00, 41.78it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.78it/s] 88%|########8 | 23/26 [00:00<00:00, 41.53it/s]100%|##########| 26/26 [00:00<00:00, 38.52it/s]
Test: [   0/  26]	Loss 0.208 (0.208)	test_acc   0.91 (  0.91)	test_minacc   0.59 (  0.59)	test_majacc   0.96 (  0.96)	Loss_d 0.208 (0.208)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.83 (  0.83)
Test: [  10/  26]	Loss 0.238 (0.218)	test_acc   0.90 (  0.91)	test_minacc   0.57 (  0.66)	test_majacc   0.95 (  0.96)	Loss_d 0.238 (0.218)	test_acc_d   0.90 (  0.91)	test_minacc_d   0.57 (  0.66)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.83 (  0.80)
Test: [  20/  26]	Loss 0.212 (0.208)	test_acc   0.92 (  0.92)	test_minacc   0.70 (  0.68)	test_majacc   0.95 (  0.96)	Loss_d 0.212 (0.208)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.70 (  0.68)	test_majacc_d   0.95 (  0.96)	test_corr_d   0.81 (  0.80)
Test: [  26/  26]	Loss 0.144 (0.199)	test_acc   0.96 (  0.92)	test_minacc   0.78 (  0.70)	test_majacc   0.99 (  0.96)	Loss_d 0.144 (0.199)	test_acc_d   0.96 (  0.92)	test_minacc_d   0.78 (  0.70)	test_majacc_d   0.99 (  0.96)	test_corr_d   0.81 (  0.80)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.18it/s]
Test: [  0/  1]	Loss 2.034 (2.034)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 2.034 (2.034)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 2.034 (2.034)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.90 (  0.90)	Loss_d 2.034 (2.034)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.42 (  0.42)
Overall Timing[ 15/  1]	epoch_time 0.0387 (0.0438)	validation_time 0.0004 (0.0008)	train_time 0.0383 (0.0427)
record: (train_acc, test_acc) (0.9056000227928162, 0.4610000252723694)
last accs (train_acc, test_acc) (0.9211000170111656, 0.4220000207424164)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.83it/s] 19%|#9        | 5/26 [00:00<00:01, 18.16it/s] 35%|###4      | 9/26 [00:00<00:00, 24.45it/s] 50%|#####     | 13/26 [00:00<00:00, 27.82it/s] 65%|######5   | 17/26 [00:00<00:00, 30.05it/s] 81%|########  | 21/26 [00:00<00:00, 31.64it/s] 96%|#########6| 25/26 [00:00<00:00, 33.25it/s]100%|##########| 26/26 [00:00<00:00, 26.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 240000
penalty weights 0.0
Epoch: [16][  26/  26]	Loss 0.130 (0.190)	train_nll   0.13 (  0.19)	train_penalty   0.00 (  0.00)	weight_norm  25.40 ( 25.20)	train_acc   0.94 (  0.93)	train_minacc   0.83 (  0.71)	train_majacc   0.97 (  0.96)	train_corr   0.00 (  0.00)	l1 7.9523 (7.8386)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 27%|##6       | 7/26 [00:00<00:00, 27.72it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.72it/s] 50%|#####     | 13/26 [00:00<00:00, 36.50it/s] 69%|######9   | 18/26 [00:00<00:00, 39.78it/s]                                                69%|######9   | 18/26 [00:00<00:00, 39.78it/s] 88%|########8 | 23/26 [00:00<00:00, 41.91it/s]100%|##########| 26/26 [00:00<00:00, 34.39it/s]
Test: [   0/  26]	Loss 0.204 (0.204)	test_acc   0.91 (  0.91)	test_minacc   0.75 (  0.75)	test_majacc   0.94 (  0.94)	Loss_d 0.204 (0.204)	test_acc_d   0.91 (  0.91)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.213 (0.201)	test_acc   0.92 (  0.92)	test_minacc   0.73 (  0.74)	test_majacc   0.94 (  0.95)	Loss_d 0.213 (0.201)	test_acc_d   0.92 (  0.92)	test_minacc_d   0.73 (  0.74)	test_majacc_d   0.94 (  0.95)	test_corr_d   0.79 (  0.76)
Test: [  20/  26]	Loss 0.179 (0.182)	test_acc   0.93 (  0.92)	test_minacc   0.77 (  0.78)	test_majacc   0.95 (  0.95)	Loss_d 0.179 (0.182)	test_acc_d   0.93 (  0.92)	test_minacc_d   0.77 (  0.78)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.76 (  0.75)
Test: [  26/  26]	Loss 0.094 (0.174)	test_acc   0.98 (  0.93)	test_minacc   0.95 (  0.78)	test_majacc   0.98 (  0.96)	Loss_d 0.094 (0.174)	test_acc_d   0.98 (  0.93)	test_minacc_d   0.95 (  0.78)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.75 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.67it/s]
Test: [  0/  1]	Loss 2.257 (2.257)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.86 (  0.86)	Loss_d 2.257 (2.257)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 2.257 (2.257)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.86 (  0.86)	Loss_d 2.257 (2.257)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.28 (  0.28)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/124/checkpoints/model_best.pth
Overall Timing[ 16/  1]	epoch_time 0.0391 (0.0436)	validation_time 0.0003 (0.0008)	train_time 0.0388 (0.0425)
record: (train_acc, test_acc) (0.9290000199079513, 0.4830000102519989)
last accs (train_acc, test_acc) (0.9290000199079513, 0.4830000102519989)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.64it/s] 19%|#9        | 5/26 [00:00<00:01, 17.81it/s] 35%|###4      | 9/26 [00:00<00:00, 24.22it/s] 50%|#####     | 13/26 [00:00<00:00, 28.22it/s] 65%|######5   | 17/26 [00:00<00:00, 30.58it/s] 81%|########  | 21/26 [00:00<00:00, 32.41it/s] 96%|#########6| 25/26 [00:00<00:00, 33.20it/s]100%|##########| 26/26 [00:00<00:00, 26.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 240000
penalty weights 0.0
Epoch: [17][  26/  26]	Loss 0.103 (0.176)	train_nll   0.10 (  0.18)	train_penalty   0.00 (  0.00)	weight_norm  25.88 ( 25.64)	train_acc   0.98 (  0.93)	train_minacc   0.88 (  0.72)	train_majacc   1.00 (  0.97)	train_corr   0.00 (  0.00)	l1 8.5529 (7.9554)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.42it/s] 31%|###       | 8/26 [00:00<00:00, 39.71it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.71it/s] 50%|#####     | 13/26 [00:00<00:00, 40.92it/s] 69%|######9   | 18/26 [00:00<00:00, 42.48it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.48it/s] 88%|########8 | 23/26 [00:00<00:00, 44.73it/s]100%|##########| 26/26 [00:00<00:00, 39.18it/s]
Test: [   0/  26]	Loss 0.177 (0.177)	test_acc   0.94 (  0.94)	test_minacc   0.80 (  0.80)	test_majacc   0.97 (  0.97)	Loss_d 0.177 (0.177)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.80 (  0.80)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.170 (0.189)	test_acc   0.93 (  0.93)	test_minacc   0.73 (  0.78)	test_majacc   0.96 (  0.96)	Loss_d 0.170 (0.189)	test_acc_d   0.93 (  0.93)	test_minacc_d   0.73 (  0.78)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.80 (  0.76)
Test: [  20/  26]	Loss 0.146 (0.171)	test_acc   0.96 (  0.93)	test_minacc   0.86 (  0.81)	test_majacc   0.98 (  0.96)	Loss_d 0.146 (0.171)	test_acc_d   0.96 (  0.93)	test_minacc_d   0.86 (  0.81)	test_majacc_d   0.98 (  0.96)	test_corr_d   0.77 (  0.75)
Test: [  26/  26]	Loss 0.072 (0.159)	test_acc   0.99 (  0.94)	test_minacc   0.93 (  0.82)	test_majacc   1.00 (  0.96)	Loss_d 0.072 (0.159)	test_acc_d   0.99 (  0.94)	test_minacc_d   0.93 (  0.82)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.76 (  0.76)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.57it/s]
Test: [  0/  1]	Loss 2.525 (2.525)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.89 (  0.89)	Loss_d 2.525 (2.525)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 2.525 (2.525)	test_acc   0.47 (  0.47)	test_minacc   0.42 (  0.42)	test_majacc   0.89 (  0.89)	Loss_d 2.525 (2.525)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.32 (  0.32)
Overall Timing[ 17/  1]	epoch_time 0.0402 (0.0434)	validation_time 0.0004 (0.0008)	train_time 0.0398 (0.0423)
record: (train_acc, test_acc) (0.9290000199079513, 0.4830000102519989)
last accs (train_acc, test_acc) (0.9391000114679336, 0.46700000762939453)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.73it/s] 23%|##3       | 6/26 [00:00<00:00, 28.46it/s] 38%|###8      | 10/26 [00:00<00:00, 32.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.38it/s] 69%|######9   | 18/26 [00:00<00:00, 35.99it/s] 85%|########4 | 22/26 [00:00<00:00, 36.18it/s]100%|##########| 26/26 [00:00<00:00, 36.73it/s]100%|##########| 26/26 [00:00<00:00, 31.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 240000
penalty weights 0.0
Epoch: [18][  26/  26]	Loss 0.109 (0.160)	train_nll   0.11 (  0.16)	train_penalty   0.00 (  0.00)	weight_norm  26.37 ( 26.12)	train_acc   0.95 (  0.94)	train_minacc   0.83 (  0.76)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 8.7036 (8.2786)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.91it/s] 23%|##3       | 6/26 [00:00<00:00, 22.46it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.46it/s] 42%|####2     | 11/26 [00:00<00:00, 31.64it/s] 62%|######1   | 16/26 [00:00<00:00, 34.67it/s]                                                62%|######1   | 16/26 [00:00<00:00, 34.67it/s] 81%|########  | 21/26 [00:00<00:00, 38.53it/s]100%|##########| 26/26 [00:00<00:00, 41.94it/s]100%|##########| 26/26 [00:00<00:00, 31.73it/s]
Test: [   0/  26]	Loss 0.130 (0.130)	test_acc   0.95 (  0.95)	test_minacc   0.83 (  0.83)	test_majacc   0.98 (  0.98)	Loss_d 0.130 (0.130)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.145 (0.169)	test_acc   0.94 (  0.93)	test_minacc   0.78 (  0.78)	test_majacc   0.96 (  0.96)	Loss_d 0.145 (0.169)	test_acc_d   0.94 (  0.93)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.78 (  0.75)
Test: [  20/  26]	Loss 0.107 (0.142)	test_acc   0.96 (  0.94)	test_minacc   0.88 (  0.82)	test_majacc   0.98 (  0.97)	Loss_d 0.107 (0.142)	test_acc_d   0.96 (  0.94)	test_minacc_d   0.88 (  0.82)	test_majacc_d   0.98 (  0.97)	test_corr_d   0.74 (  0.75)
Test: [  26/  26]	Loss 0.056 (0.131)	test_acc   0.98 (  0.95)	test_minacc   0.95 (  0.83)	test_majacc   0.99 (  0.97)	Loss_d 0.056 (0.131)	test_acc_d   0.98 (  0.95)	test_minacc_d   0.95 (  0.83)	test_majacc_d   0.99 (  0.97)	test_corr_d   0.75 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 59.85it/s]
Test: [  0/  1]	Loss 2.844 (2.844)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 2.844 (2.844)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 2.844 (2.844)	test_acc   0.41 (  0.41)	test_minacc   0.36 (  0.36)	test_majacc   0.90 (  0.90)	Loss_d 2.844 (2.844)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.39 (  0.39)
Overall Timing[ 18/  1]	epoch_time 0.0424 (0.0433)	validation_time 0.0004 (0.0008)	train_time 0.0419 (0.0423)
record: (train_acc, test_acc) (0.9290000199079513, 0.4830000102519989)
last accs (train_acc, test_acc) (0.9484000153541565, 0.41100001335144043)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.77it/s] 19%|#9        | 5/26 [00:00<00:01, 19.61it/s] 35%|###4      | 9/26 [00:00<00:00, 26.24it/s] 50%|#####     | 13/26 [00:00<00:00, 30.37it/s] 65%|######5   | 17/26 [00:00<00:00, 33.15it/s] 81%|########  | 21/26 [00:00<00:00, 34.24it/s] 96%|#########6| 25/26 [00:00<00:00, 35.27it/s]100%|##########| 26/26 [00:00<00:00, 28.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 240000
penalty weights 0.0
Epoch: [19][  26/  26]	Loss 0.071 (0.137)	train_nll   0.07 (  0.14)	train_penalty   0.00 (  0.00)	weight_norm  26.88 ( 26.63)	train_acc   0.98 (  0.95)	train_minacc   0.98 (  0.80)	train_majacc   0.98 (  0.97)	train_corr   0.00 (  0.00)	l1 9.4030 (8.8213)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.96it/s] 19%|#9        | 5/26 [00:00<00:00, 21.54it/s] 38%|###8      | 10/26 [00:00<00:00, 32.29it/s]                                                38%|###8      | 10/26 [00:00<00:00, 32.29it/s] 58%|#####7    | 15/26 [00:00<00:00, 37.74it/s] 77%|#######6  | 20/26 [00:00<00:00, 38.15it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 38.15it/s] 96%|#########6| 25/26 [00:00<00:00, 40.89it/s]100%|##########| 26/26 [00:00<00:00, 33.01it/s]
Test: [   0/  26]	Loss 0.127 (0.127)	test_acc   0.95 (  0.95)	test_minacc   0.90 (  0.90)	test_majacc   0.96 (  0.96)	Loss_d 0.127 (0.127)	test_acc_d   0.95 (  0.95)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.168 (0.176)	test_acc   0.92 (  0.93)	test_minacc   0.88 (  0.89)	test_majacc   0.92 (  0.93)	Loss_d 0.168 (0.176)	test_acc_d   0.92 (  0.93)	test_minacc_d   0.88 (  0.89)	test_majacc_d   0.92 (  0.93)	test_corr_d   0.70 (  0.66)
Test: [  20/  26]	Loss 0.097 (0.150)	test_acc   0.95 (  0.94)	test_minacc   1.00 (  0.91)	test_majacc   0.95 (  0.94)	Loss_d 0.097 (0.150)	test_acc_d   0.95 (  0.94)	test_minacc_d   1.00 (  0.91)	test_majacc_d   0.95 (  0.94)	test_corr_d   0.66 (  0.67)
Test: [  26/  26]	Loss 0.037 (0.138)	test_acc   1.00 (  0.94)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  0.95)	Loss_d 0.037 (0.138)	test_acc_d   1.00 (  0.94)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  0.95)	test_corr_d   0.69 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.54it/s]
Test: [  0/  1]	Loss 2.457 (2.457)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.52)	test_majacc   0.85 (  0.85)	Loss_d 2.457 (2.457)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 2.457 (2.457)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.52)	test_majacc   0.85 (  0.85)	Loss_d 2.457 (2.457)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.85 (  0.85)	test_corr_d   0.08 (  0.08)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/124/checkpoints/model_best.pth
Overall Timing[ 19/  1]	epoch_time 0.0396 (0.0431)	validation_time 0.0006 (0.0008)	train_time 0.0389 (0.0421)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.86it/s] 19%|#9        | 5/26 [00:00<00:01, 17.48it/s] 35%|###4      | 9/26 [00:00<00:00, 23.98it/s] 50%|#####     | 13/26 [00:00<00:00, 28.09it/s] 65%|######5   | 17/26 [00:00<00:00, 30.33it/s] 81%|########  | 21/26 [00:00<00:00, 32.31it/s] 96%|#########6| 25/26 [00:00<00:00, 33.39it/s]100%|##########| 26/26 [00:00<00:00, 26.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 240000
penalty weights 0.0
Epoch: [20][  26/  26]	Loss 0.086 (0.121)	train_nll   0.09 (  0.12)	train_penalty   0.00 (  0.00)	weight_norm  27.42 ( 27.15)	train_acc   0.96 (  0.95)	train_minacc   0.80 (  0.82)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 9.3967 (9.4065)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.49it/s] 27%|##6       | 7/26 [00:00<00:00, 34.10it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.10it/s] 46%|####6     | 12/26 [00:00<00:00, 40.14it/s] 65%|######5   | 17/26 [00:00<00:00, 42.62it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.62it/s] 85%|########4 | 22/26 [00:00<00:00, 40.89it/s]100%|##########| 26/26 [00:00<00:00, 37.91it/s]
Test: [   0/  26]	Loss 0.115 (0.115)	test_acc   0.96 (  0.96)	test_minacc   0.92 (  0.92)	test_majacc   0.97 (  0.97)	Loss_d 0.115 (0.115)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.152 (0.144)	test_acc   0.94 (  0.94)	test_minacc   0.86 (  0.88)	test_majacc   0.95 (  0.95)	Loss_d 0.152 (0.144)	test_acc_d   0.94 (  0.94)	test_minacc_d   0.86 (  0.88)	test_majacc_d   0.95 (  0.95)	test_corr_d   0.72 (  0.69)
Test: [  20/  26]	Loss 0.089 (0.131)	test_acc   0.97 (  0.95)	test_minacc   0.96 (  0.88)	test_majacc   0.97 (  0.96)	Loss_d 0.089 (0.131)	test_acc_d   0.97 (  0.95)	test_minacc_d   0.96 (  0.88)	test_majacc_d   0.97 (  0.96)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.037 (0.120)	test_acc   0.99 (  0.95)	test_minacc   0.98 (  0.89)	test_majacc   1.00 (  0.96)	Loss_d 0.037 (0.120)	test_acc_d   0.99 (  0.95)	test_minacc_d   0.98 (  0.89)	test_majacc_d   1.00 (  0.96)	test_corr_d   0.70 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.92it/s]
Test: [  0/  1]	Loss 2.767 (2.767)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.89 (  0.89)	Loss_d 2.767 (2.767)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 2.767 (2.767)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.89 (  0.89)	Loss_d 2.767 (2.767)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.26 (  0.26)
Overall Timing[ 20/  1]	epoch_time 0.0394 (0.0430)	validation_time 0.0004 (0.0007)	train_time 0.0390 (0.0420)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9521000213623046, 0.4620000123977661)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 19%|#9        | 5/26 [00:00<00:00, 21.02it/s] 35%|###4      | 9/26 [00:00<00:00, 26.98it/s] 50%|#####     | 13/26 [00:00<00:00, 30.00it/s] 65%|######5   | 17/26 [00:00<00:00, 31.24it/s] 81%|########  | 21/26 [00:00<00:00, 32.82it/s] 96%|#########6| 25/26 [00:00<00:00, 34.09it/s]100%|##########| 26/26 [00:00<00:00, 28.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 240000
penalty weights 0.0
Epoch: [21][  26/  26]	Loss 0.070 (0.124)	train_nll   0.07 (  0.12)	train_penalty   0.00 (  0.00)	weight_norm  27.98 ( 27.71)	train_acc   0.96 (  0.95)	train_minacc   0.83 (  0.82)	train_majacc   0.99 (  0.98)	train_corr   0.00 (  0.00)	l1 9.6338 (9.1806)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 27%|##6       | 7/26 [00:00<00:00, 30.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.16it/s] 50%|#####     | 13/26 [00:00<00:00, 38.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.40it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.40it/s] 96%|#########6| 25/26 [00:00<00:00, 45.75it/s]100%|##########| 26/26 [00:00<00:00, 37.53it/s]
Test: [   0/  26]	Loss 0.120 (0.120)	test_acc   0.96 (  0.96)	test_minacc   0.83 (  0.83)	test_majacc   0.98 (  0.98)	Loss_d 0.120 (0.120)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.83 (  0.83)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.74 (  0.74)
Test: [  10/  26]	Loss 0.100 (0.124)	test_acc   0.96 (  0.95)	test_minacc   0.92 (  0.89)	test_majacc   0.96 (  0.96)	Loss_d 0.100 (0.124)	test_acc_d   0.96 (  0.95)	test_minacc_d   0.92 (  0.89)	test_majacc_d   0.96 (  0.96)	test_corr_d   0.72 (  0.69)
Test: [  20/  26]	Loss 0.070 (0.103)	test_acc   0.97 (  0.96)	test_minacc   0.96 (  0.91)	test_majacc   0.97 (  0.97)	Loss_d 0.070 (0.103)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.96 (  0.91)	test_majacc_d   0.97 (  0.97)	test_corr_d   0.68 (  0.70)
Test: [  26/  26]	Loss 0.025 (0.093)	test_acc   1.00 (  0.96)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  0.97)	Loss_d 0.025 (0.093)	test_acc_d   1.00 (  0.96)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  0.97)	test_corr_d   0.69 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.58it/s]
Test: [  0/  1]	Loss 2.924 (2.924)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.90 (  0.90)	Loss_d 2.924 (2.924)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 2.924 (2.924)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.90 (  0.90)	Loss_d 2.924 (2.924)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.23 (  0.23)
Overall Timing[ 21/  1]	epoch_time 0.0372 (0.0427)	validation_time 0.0004 (0.0007)	train_time 0.0368 (0.0418)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9646000230312347, 0.48000001907348633)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.68it/s] 27%|##6       | 7/26 [00:00<00:00, 33.43it/s] 42%|####2     | 11/26 [00:00<00:00, 35.23it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 37.55it/s] 88%|########8 | 23/26 [00:00<00:00, 37.93it/s]100%|##########| 26/26 [00:00<00:00, 33.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 240000
penalty weights 0.0
Epoch: [22][  26/  26]	Loss 0.073 (0.096)	train_nll   0.07 (  0.10)	train_penalty   0.00 (  0.00)	weight_norm  28.54 ( 28.27)	train_acc   0.97 (  0.96)	train_minacc   0.80 (  0.86)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 10.4315 (9.6746)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.37it/s] 27%|##6       | 7/26 [00:00<00:00, 34.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.11it/s] 50%|#####     | 13/26 [00:00<00:00, 39.97it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.87it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.87it/s] 96%|#########6| 25/26 [00:00<00:00, 45.65it/s]100%|##########| 26/26 [00:00<00:00, 38.99it/s]
Test: [   0/  26]	Loss 0.062 (0.062)	test_acc   0.98 (  0.98)	test_minacc   0.86 (  0.86)	test_majacc   1.00 (  1.00)	Loss_d 0.062 (0.062)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.86 (  0.86)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.75)
Test: [  10/  26]	Loss 0.102 (0.107)	test_acc   0.95 (  0.96)	test_minacc   0.84 (  0.85)	test_majacc   0.96 (  0.98)	Loss_d 0.102 (0.107)	test_acc_d   0.95 (  0.96)	test_minacc_d   0.84 (  0.85)	test_majacc_d   0.96 (  0.98)	test_corr_d   0.75 (  0.73)
Test: [  20/  26]	Loss 0.044 (0.086)	test_acc   0.98 (  0.97)	test_minacc   0.98 (  0.88)	test_majacc   0.98 (  0.98)	Loss_d 0.044 (0.086)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.98 (  0.88)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.69 (  0.73)
Test: [  26/  26]	Loss 0.017 (0.075)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.90)	test_majacc   1.00 (  0.98)	Loss_d 0.017 (0.075)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.90)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.70 (  0.73)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.74it/s]
Test: [  0/  1]	Loss 3.431 (3.431)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.93 (  0.93)	Loss_d 3.431 (3.431)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 3.431 (3.431)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.93 (  0.93)	Loss_d 3.431 (3.431)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.36 (  0.36)
Overall Timing[ 22/  1]	epoch_time 0.0362 (0.0424)	validation_time 0.0004 (0.0007)	train_time 0.0358 (0.0415)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9723000214099884, 0.4230000078678131)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.62it/s] 23%|##3       | 6/26 [00:00<00:00, 26.72it/s] 38%|###8      | 10/26 [00:00<00:00, 30.17it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.13it/s] 69%|######9   | 18/26 [00:00<00:00, 33.71it/s] 85%|########4 | 22/26 [00:00<00:00, 35.08it/s]100%|##########| 26/26 [00:00<00:00, 30.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 240000
penalty weights 0.0
l1 at pgd_anneal_iters 10.657727241516113
set z to 10.124840879440308
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 240000
penalty weights 0.0
Epoch: [23][  26/  26]	Loss 0.046 (0.079)	train_nll   0.05 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  29.14 ( 28.85)	train_acc   0.98 (  0.97)	train_minacc   0.93 (  0.90)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 10.8144 (10.6600)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.92it/s] 27%|##6       | 7/26 [00:00<00:00, 36.69it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.69it/s] 50%|#####     | 13/26 [00:00<00:00, 44.42it/s] 69%|######9   | 18/26 [00:00<00:00, 45.30it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.30it/s] 88%|########8 | 23/26 [00:00<00:00, 46.14it/s]100%|##########| 26/26 [00:00<00:00, 40.53it/s]
Test: [   0/  26]	Loss 0.078 (0.078)	test_acc   0.98 (  0.98)	test_minacc   0.85 (  0.85)	test_majacc   1.00 (  1.00)	Loss_d 0.078 (0.078)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.85 (  0.85)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.77 (  0.77)
Test: [  10/  26]	Loss 0.075 (0.109)	test_acc   0.97 (  0.96)	test_minacc   0.88 (  0.80)	test_majacc   0.99 (  0.99)	Loss_d 0.075 (0.109)	test_acc_d   0.97 (  0.96)	test_minacc_d   0.88 (  0.80)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.76)
Test: [  20/  26]	Loss 0.044 (0.085)	test_acc   0.99 (  0.97)	test_minacc   0.96 (  0.84)	test_majacc   0.99 (  0.99)	Loss_d 0.044 (0.085)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.96 (  0.84)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.76)
Test: [  26/  26]	Loss 0.014 (0.073)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.87)	test_majacc   1.00 (  0.99)	Loss_d 0.014 (0.073)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.87)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.70 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 58.87it/s]
Test: [  0/  1]	Loss 3.855 (3.855)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 3.855 (3.855)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 3.855 (3.855)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 3.855 (3.855)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.40 (  0.40)
Overall Timing[ 23/  1]	epoch_time 0.0428 (0.0424)	validation_time 0.0005 (0.0007)	train_time 0.0424 (0.0415)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9730000248551369, 0.4100000262260437)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.90it/s] 19%|#9        | 5/26 [00:00<00:00, 23.57it/s] 35%|###4      | 9/26 [00:00<00:00, 29.88it/s] 50%|#####     | 13/26 [00:00<00:00, 31.46it/s] 65%|######5   | 17/26 [00:00<00:00, 32.85it/s] 81%|########  | 21/26 [00:00<00:00, 34.54it/s] 96%|#########6| 25/26 [00:00<00:00, 35.56it/s]100%|##########| 26/26 [00:00<00:00, 30.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 240000
penalty weights 0.0
Epoch: [24][  26/  26]	Loss 0.040 (0.078)	train_nll   0.04 (  0.08)	train_penalty   0.00 (  0.00)	weight_norm  29.70 ( 29.44)	train_acc   0.99 (  0.97)	train_minacc   0.95 (  0.90)	train_majacc   1.00 (  0.98)	train_corr   0.00 (  0.00)	l1 10.9696 (10.6321)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.40it/s] 23%|##3       | 6/26 [00:00<00:00, 31.88it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.88it/s] 42%|####2     | 11/26 [00:00<00:00, 39.62it/s] 65%|######5   | 17/26 [00:00<00:00, 43.87it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.87it/s] 88%|########8 | 23/26 [00:00<00:00, 48.35it/s]100%|##########| 26/26 [00:00<00:00, 39.79it/s]
Test: [   0/  26]	Loss 0.077 (0.077)	test_acc   0.96 (  0.96)	test_minacc   0.90 (  0.90)	test_majacc   0.98 (  0.98)	Loss_d 0.077 (0.077)	test_acc_d   0.96 (  0.96)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.091 (0.087)	test_acc   0.96 (  0.97)	test_minacc   0.90 (  0.87)	test_majacc   0.97 (  0.98)	Loss_d 0.091 (0.087)	test_acc_d   0.96 (  0.97)	test_minacc_d   0.90 (  0.87)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.75 (  0.73)
Test: [  20/  26]	Loss 0.029 (0.071)	test_acc   0.99 (  0.97)	test_minacc   0.96 (  0.91)	test_majacc   1.00 (  0.99)	Loss_d 0.029 (0.071)	test_acc_d   0.99 (  0.97)	test_minacc_d   0.96 (  0.91)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.72 (  0.73)
Test: [  26/  26]	Loss 0.014 (0.063)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  0.99)	Loss_d 0.014 (0.063)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.69 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.14it/s]
Test: [  0/  1]	Loss 3.823 (3.823)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 3.823 (3.823)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 3.823 (3.823)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.92 (  0.92)	Loss_d 3.823 (3.823)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.36 (  0.36)
Overall Timing[ 24/  1]	epoch_time 0.0362 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0358 (0.0413)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9772000222802162, 0.4300000071525574)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 19%|#9        | 5/26 [00:00<00:01, 20.94it/s] 35%|###4      | 9/26 [00:00<00:00, 28.05it/s] 50%|#####     | 13/26 [00:00<00:00, 31.99it/s] 65%|######5   | 17/26 [00:00<00:00, 34.61it/s] 81%|########  | 21/26 [00:00<00:00, 36.33it/s]100%|##########| 26/26 [00:00<00:00, 38.20it/s]100%|##########| 26/26 [00:00<00:00, 30.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 240000
penalty weights 0.0
Epoch: [25][  26/  26]	Loss 0.045 (0.062)	train_nll   0.04 (  0.06)	train_penalty   0.00 (  0.00)	weight_norm  30.19 ( 29.94)	train_acc   0.99 (  0.98)	train_minacc   0.98 (  0.92)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 11.6435 (11.5817)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.06it/s] 27%|##6       | 7/26 [00:00<00:00, 29.24it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.24it/s] 50%|#####     | 13/26 [00:00<00:00, 38.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.99it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.99it/s] 96%|#########6| 25/26 [00:00<00:00, 46.38it/s]100%|##########| 26/26 [00:00<00:00, 37.20it/s]
Test: [   0/  26]	Loss 0.086 (0.086)	test_acc   0.97 (  0.97)	test_minacc   0.88 (  0.88)	test_majacc   0.98 (  0.98)	Loss_d 0.086 (0.086)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.88 (  0.88)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.145 (0.113)	test_acc   0.95 (  0.96)	test_minacc   0.88 (  0.87)	test_majacc   0.96 (  0.97)	Loss_d 0.145 (0.113)	test_acc_d   0.95 (  0.96)	test_minacc_d   0.88 (  0.87)	test_majacc_d   0.96 (  0.97)	test_corr_d   0.73 (  0.71)
Test: [  20/  26]	Loss 0.051 (0.094)	test_acc   0.98 (  0.97)	test_minacc   0.98 (  0.90)	test_majacc   0.98 (  0.98)	Loss_d 0.051 (0.094)	test_acc_d   0.98 (  0.97)	test_minacc_d   0.98 (  0.90)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.70 (  0.71)
Test: [  26/  26]	Loss 0.013 (0.080)	test_acc   1.00 (  0.97)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  0.98)	Loss_d 0.013 (0.080)	test_acc_d   1.00 (  0.97)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  0.98)	test_corr_d   0.68 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.26it/s]
Test: [  0/  1]	Loss 3.864 (3.864)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.93 (  0.93)	Loss_d 3.864 (3.864)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 3.864 (3.864)	test_acc   0.47 (  0.47)	test_minacc   0.41 (  0.41)	test_majacc   0.93 (  0.93)	Loss_d 3.864 (3.864)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.26 (  0.26)
Overall Timing[ 25/  1]	epoch_time 0.0354 (0.0419)	validation_time 0.0004 (0.0007)	train_time 0.0350 (0.0411)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9715000237822533, 0.4650000333786011)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 19%|#9        | 5/26 [00:00<00:01, 19.56it/s] 35%|###4      | 9/26 [00:00<00:00, 26.12it/s] 50%|#####     | 13/26 [00:00<00:00, 29.95it/s] 65%|######5   | 17/26 [00:00<00:00, 31.82it/s] 81%|########  | 21/26 [00:00<00:00, 33.68it/s] 96%|#########6| 25/26 [00:00<00:00, 34.77it/s]100%|##########| 26/26 [00:00<00:00, 28.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 240000
penalty weights 0.0
Epoch: [26][  26/  26]	Loss 0.030 (0.065)	train_nll   0.03 (  0.07)	train_penalty   0.00 (  0.00)	weight_norm  30.69 ( 30.46)	train_acc   0.99 (  0.98)	train_minacc   0.95 (  0.91)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 11.4129 (11.2036)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.16it/s] 27%|##6       | 7/26 [00:00<00:00, 34.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.68it/s] 46%|####6     | 12/26 [00:00<00:00, 40.81it/s] 65%|######5   | 17/26 [00:00<00:00, 42.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.94it/s] 88%|########8 | 23/26 [00:00<00:00, 48.09it/s]100%|##########| 26/26 [00:00<00:00, 39.44it/s]
Test: [   0/  26]	Loss 0.054 (0.054)	test_acc   0.98 (  0.98)	test_minacc   0.92 (  0.92)	test_majacc   0.99 (  0.99)	Loss_d 0.054 (0.054)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.92 (  0.92)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.111 (0.078)	test_acc   0.96 (  0.97)	test_minacc   0.90 (  0.90)	test_majacc   0.97 (  0.98)	Loss_d 0.111 (0.078)	test_acc_d   0.96 (  0.97)	test_minacc_d   0.90 (  0.90)	test_majacc_d   0.97 (  0.98)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.024 (0.062)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.93)	test_majacc   1.00 (  0.99)	Loss_d 0.024 (0.062)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.93)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.013 (0.054)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  0.99)	Loss_d 0.013 (0.054)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.85it/s]
Test: [  0/  1]	Loss 3.776 (3.776)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 3.776 (3.776)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 3.776 (3.776)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.94 (  0.94)	Loss_d 3.776 (3.776)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.33 (  0.33)
Overall Timing[ 26/  1]	epoch_time 0.0375 (0.0418)	validation_time 0.0004 (0.0007)	train_time 0.0371 (0.0409)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.98120002669096, 0.43300002813339233)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 19%|#9        | 5/26 [00:00<00:00, 22.22it/s] 35%|###4      | 9/26 [00:00<00:00, 28.16it/s] 50%|#####     | 13/26 [00:00<00:00, 31.86it/s] 65%|######5   | 17/26 [00:00<00:00, 34.39it/s] 85%|########4 | 22/26 [00:00<00:00, 36.79it/s]100%|##########| 26/26 [00:00<00:00, 30.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 240000
penalty weights 0.0
Epoch: [27][  26/  26]	Loss 0.030 (0.052)	train_nll   0.03 (  0.05)	train_penalty   0.00 (  0.00)	weight_norm  31.15 ( 30.93)	train_acc   0.99 (  0.98)	train_minacc   0.95 (  0.93)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 11.9407 (11.6610)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.30it/s] 27%|##6       | 7/26 [00:00<00:00, 31.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.89it/s] 50%|#####     | 13/26 [00:00<00:00, 41.23it/s] 69%|######9   | 18/26 [00:00<00:00, 42.76it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.76it/s] 88%|########8 | 23/26 [00:00<00:00, 43.69it/s]100%|##########| 26/26 [00:00<00:00, 38.46it/s]
Test: [   0/  26]	Loss 0.064 (0.064)	test_acc   0.97 (  0.97)	test_minacc   0.85 (  0.85)	test_majacc   0.99 (  0.99)	Loss_d 0.064 (0.064)	test_acc_d   0.97 (  0.97)	test_minacc_d   0.85 (  0.85)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.086 (0.069)	test_acc   0.96 (  0.97)	test_minacc   0.86 (  0.88)	test_majacc   0.98 (  0.99)	Loss_d 0.086 (0.069)	test_acc_d   0.96 (  0.97)	test_minacc_d   0.86 (  0.88)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.76 (  0.72)
Test: [  20/  26]	Loss 0.025 (0.060)	test_acc   0.99 (  0.98)	test_minacc   0.98 (  0.90)	test_majacc   0.99 (  0.99)	Loss_d 0.025 (0.060)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.98 (  0.90)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.73)
Test: [  26/  26]	Loss 0.008 (0.052)	test_acc   1.00 (  0.98)	test_minacc   1.00 (  0.92)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.052)	test_acc_d   1.00 (  0.98)	test_minacc_d   1.00 (  0.92)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.30it/s]
Test: [  0/  1]	Loss 4.153 (4.153)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 4.153 (4.153)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 4.153 (4.153)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 4.153 (4.153)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.35 (  0.35)
Overall Timing[ 27/  1]	epoch_time 0.0372 (0.0416)	validation_time 0.0003 (0.0007)	train_time 0.0369 (0.0408)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9803000255823136, 0.41700002551078796)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.93it/s] 23%|##3       | 6/26 [00:00<00:00, 25.37it/s] 38%|###8      | 10/26 [00:00<00:00, 30.95it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.09it/s] 69%|######9   | 18/26 [00:00<00:00, 35.22it/s] 85%|########4 | 22/26 [00:00<00:00, 36.01it/s]100%|##########| 26/26 [00:00<00:00, 37.17it/s]100%|##########| 26/26 [00:00<00:00, 31.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 240000
penalty weights 0.0
Epoch: [28][  26/  26]	Loss 0.011 (0.043)	train_nll   0.01 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  31.54 ( 31.35)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.95)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.6455 (12.2978)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.72it/s] 27%|##6       | 7/26 [00:00<00:00, 32.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.20it/s] 50%|#####     | 13/26 [00:00<00:00, 39.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.90it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.90it/s] 96%|#########6| 25/26 [00:00<00:00, 47.23it/s]100%|##########| 26/26 [00:00<00:00, 38.64it/s]
Test: [   0/  26]	Loss 0.052 (0.052)	test_acc   0.98 (  0.98)	test_minacc   0.93 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.052 (0.052)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.054 (0.045)	test_acc   0.97 (  0.98)	test_minacc   0.96 (  0.94)	test_majacc   0.98 (  0.99)	Loss_d 0.054 (0.045)	test_acc_d   0.97 (  0.98)	test_minacc_d   0.96 (  0.94)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.017 (0.033)	test_acc   0.99 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.017 (0.033)	test_acc_d   0.99 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.71)
Test: [  26/  26]	Loss 0.005 (0.028)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.005 (0.028)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 61.86it/s]
Test: [  0/  1]	Loss 4.606 (4.606)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.88 (  0.88)	Loss_d 4.606 (4.606)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 4.606 (4.606)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.88 (  0.88)	Loss_d 4.606 (4.606)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.88 (  0.88)	test_corr_d   0.35 (  0.35)
Overall Timing[ 28/  1]	epoch_time 0.0378 (0.0415)	validation_time 0.0004 (0.0006)	train_time 0.0374 (0.0407)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.989400028526783, 0.4150000214576721)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.56it/s] 19%|#9        | 5/26 [00:00<00:00, 26.09it/s] 35%|###4      | 9/26 [00:00<00:00, 31.13it/s] 50%|#####     | 13/26 [00:00<00:00, 33.88it/s] 65%|######5   | 17/26 [00:00<00:00, 35.80it/s] 81%|########  | 21/26 [00:00<00:00, 37.14it/s] 96%|#########6| 25/26 [00:00<00:00, 37.74it/s]100%|##########| 26/26 [00:00<00:00, 32.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 240000
penalty weights 0.0
Epoch: [29][  26/  26]	Loss 0.043 (0.035)	train_nll   0.04 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  31.89 ( 31.71)	train_acc   0.99 (  0.99)	train_minacc   0.95 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.8239 (12.8151)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.69it/s] 27%|##6       | 7/26 [00:00<00:00, 33.02it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.02it/s] 50%|#####     | 13/26 [00:00<00:00, 39.41it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.95it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.95it/s] 96%|#########6| 25/26 [00:00<00:00, 46.76it/s]100%|##########| 26/26 [00:00<00:00, 38.85it/s]
Test: [   0/  26]	Loss 0.030 (0.030)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.030 (0.030)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.055 (0.057)	test_acc   0.98 (  0.98)	test_minacc   0.96 (  0.93)	test_majacc   0.98 (  0.99)	Loss_d 0.055 (0.057)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.96 (  0.93)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.74 (  0.71)
Test: [  20/  26]	Loss 0.028 (0.042)	test_acc   0.99 (  0.98)	test_minacc   0.98 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.028 (0.042)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.98 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.006 (0.037)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.006 (0.037)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.13it/s]
Test: [  0/  1]	Loss 4.689 (4.689)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.90 (  0.90)	Loss_d 4.689 (4.689)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 4.689 (4.689)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.90 (  0.90)	Loss_d 4.689 (4.689)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.37 (  0.37)
Overall Timing[ 29/  1]	epoch_time 0.0370 (0.0413)	validation_time 0.0004 (0.0006)	train_time 0.0365 (0.0405)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9872000286579132, 0.4090000092983246)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.50it/s] 19%|#9        | 5/26 [00:00<00:00, 22.20it/s] 35%|###4      | 9/26 [00:00<00:00, 28.65it/s] 50%|#####     | 13/26 [00:00<00:00, 31.98it/s] 65%|######5   | 17/26 [00:00<00:00, 34.15it/s] 81%|########  | 21/26 [00:00<00:00, 34.37it/s] 96%|#########6| 25/26 [00:00<00:00, 34.56it/s]100%|##########| 26/26 [00:00<00:00, 29.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 240000
penalty weights 0.0
Epoch: [30][  26/  26]	Loss 0.027 (0.043)	train_nll   0.03 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  32.30 ( 32.09)	train_acc   0.99 (  0.98)	train_minacc   0.95 (  0.94)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 12.6811 (12.7180)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.65it/s] 27%|##6       | 7/26 [00:00<00:00, 34.15it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.15it/s] 50%|#####     | 13/26 [00:00<00:00, 41.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.12it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.12it/s] 96%|#########6| 25/26 [00:00<00:00, 47.76it/s]100%|##########| 26/26 [00:00<00:00, 39.67it/s]
Test: [   0/  26]	Loss 0.036 (0.036)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.036 (0.036)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.043 (0.041)	test_acc   0.98 (  0.98)	test_minacc   0.98 (  0.96)	test_majacc   0.98 (  0.99)	Loss_d 0.043 (0.041)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.98 (  0.96)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.73 (  0.70)
Test: [  20/  26]	Loss 0.021 (0.037)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.96)	test_majacc   0.99 (  0.99)	Loss_d 0.021 (0.037)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.96)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.71)
Test: [  26/  26]	Loss 0.007 (0.032)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.97)	test_majacc   1.00 (  0.99)	Loss_d 0.007 (0.032)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.97)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.68 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.38it/s]
Test: [  0/  1]	Loss 4.285 (4.285)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.90 (  0.90)	Loss_d 4.285 (4.285)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 4.285 (4.285)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.90 (  0.90)	Loss_d 4.285 (4.285)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.31 (  0.31)
Overall Timing[ 30/  1]	epoch_time 0.0364 (0.0412)	validation_time 0.0003 (0.0006)	train_time 0.0360 (0.0404)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9882000378966331, 0.44200003147125244)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.52it/s] 19%|#9        | 5/26 [00:00<00:01, 16.91it/s] 35%|###4      | 9/26 [00:00<00:00, 24.25it/s] 50%|#####     | 13/26 [00:00<00:00, 29.22it/s] 69%|######9   | 18/26 [00:00<00:00, 33.57it/s] 88%|########8 | 23/26 [00:00<00:00, 35.81it/s]100%|##########| 26/26 [00:00<00:00, 28.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 240000
penalty weights 0.0
Epoch: [31][  26/  26]	Loss 0.010 (0.035)	train_nll   0.01 (  0.04)	train_penalty   0.00 (  0.00)	weight_norm  32.72 ( 32.51)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.96)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 13.1514 (12.9876)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.78it/s] 27%|##6       | 7/26 [00:00<00:00, 34.86it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.86it/s] 50%|#####     | 13/26 [00:00<00:00, 42.89it/s] 69%|######9   | 18/26 [00:00<00:00, 44.71it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.71it/s] 92%|#########2| 24/26 [00:00<00:00, 48.19it/s]100%|##########| 26/26 [00:00<00:00, 40.59it/s]
Test: [   0/  26]	Loss 0.022 (0.022)	test_acc   0.99 (  0.99)	test_minacc   0.92 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.022 (0.022)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.92 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.014 (0.025)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.014 (0.025)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.72)
Test: [  20/  26]	Loss 0.014 (0.019)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.96)	test_majacc   0.99 (  1.00)	Loss_d 0.014 (0.019)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.96)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  26/  26]	Loss 0.005 (0.017)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.017)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.37it/s]
Test: [  0/  1]	Loss 4.815 (4.815)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 4.815 (4.815)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 4.815 (4.815)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 4.815 (4.815)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.40 (  0.40)
Overall Timing[ 31/  1]	epoch_time 0.0376 (0.0411)	validation_time 0.0004 (0.0006)	train_time 0.0372 (0.0403)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9928000329732894, 0.40700000524520874)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.81it/s] 19%|#9        | 5/26 [00:00<00:01, 20.20it/s] 35%|###4      | 9/26 [00:00<00:00, 27.40it/s] 54%|#####3    | 14/26 [00:00<00:00, 32.78it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.45it/s] 92%|#########2| 24/26 [00:00<00:00, 37.64it/s]100%|##########| 26/26 [00:00<00:00, 30.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 240000
penalty weights 0.0
Epoch: [32][  26/  26]	Loss 0.043 (0.026)	train_nll   0.04 (  0.03)	train_penalty   0.00 (  0.00)	weight_norm  33.06 ( 32.90)	train_acc   0.98 (  0.99)	train_minacc   0.95 (  0.96)	train_majacc   0.99 (  0.99)	train_corr   0.00 (  0.00)	l1 13.7593 (13.5079)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 27%|##6       | 7/26 [00:00<00:00, 33.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.87it/s] 50%|#####     | 13/26 [00:00<00:00, 40.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.16it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.16it/s] 96%|#########6| 25/26 [00:00<00:00, 47.32it/s]100%|##########| 26/26 [00:00<00:00, 39.39it/s]
Test: [   0/  26]	Loss 0.034 (0.034)	test_acc   0.98 (  0.98)	test_minacc   0.95 (  0.95)	test_majacc   0.99 (  0.99)	Loss_d 0.034 (0.034)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.95 (  0.95)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.059 (0.046)	test_acc   0.98 (  0.98)	test_minacc   0.92 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.059 (0.046)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.92 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.77 (  0.72)
Test: [  20/  26]	Loss 0.008 (0.035)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.008 (0.035)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.004 (0.030)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  0.99)	Loss_d 0.004 (0.030)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.48it/s]
Test: [  0/  1]	Loss 5.234 (5.234)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 5.234 (5.234)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 5.234 (5.234)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.94 (  0.94)	Loss_d 5.234 (5.234)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.94 (  0.94)	test_corr_d   0.38 (  0.38)
Overall Timing[ 32/  1]	epoch_time 0.0361 (0.0409)	validation_time 0.0003 (0.0006)	train_time 0.0358 (0.0401)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9895000389814377, 0.406000018119812)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.80it/s] 19%|#9        | 5/26 [00:00<00:00, 25.22it/s] 35%|###4      | 9/26 [00:00<00:00, 31.31it/s] 54%|#####3    | 14/26 [00:00<00:00, 35.44it/s] 69%|######9   | 18/26 [00:00<00:00, 36.93it/s] 88%|########8 | 23/26 [00:00<00:00, 37.94it/s]100%|##########| 26/26 [00:00<00:00, 32.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 240000
penalty weights 0.0
Epoch: [33][  26/  26]	Loss 0.032 (0.024)	train_nll   0.03 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.40 ( 33.24)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 13.7712 (13.6061)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.63it/s] 31%|###       | 8/26 [00:00<00:00, 41.57it/s]                                               31%|###       | 8/26 [00:00<00:00, 41.57it/s] 50%|#####     | 13/26 [00:00<00:00, 40.07it/s] 77%|#######6  | 20/26 [00:00<00:00, 49.65it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 49.65it/s]100%|##########| 26/26 [00:00<00:00, 47.77it/s]100%|##########| 26/26 [00:00<00:00, 40.61it/s]
Test: [   0/  26]	Loss 0.043 (0.043)	test_acc   0.98 (  0.98)	test_minacc   0.90 (  0.90)	test_majacc   1.00 (  1.00)	Loss_d 0.043 (0.043)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.90 (  0.90)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.042 (0.054)	test_acc   0.99 (  0.98)	test_minacc   0.90 (  0.90)	test_majacc   1.00 (  0.99)	Loss_d 0.042 (0.054)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.90 (  0.90)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.78 (  0.73)
Test: [  20/  26]	Loss 0.006 (0.041)	test_acc   1.00 (  0.98)	test_minacc   0.98 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.041)	test_acc_d   1.00 (  0.98)	test_minacc_d   0.98 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.73)
Test: [  26/  26]	Loss 0.004 (0.034)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.034)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.21it/s]
Test: [  0/  1]	Loss 5.307 (5.307)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.92 (  0.92)	Loss_d 5.307 (5.307)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.44 (  0.44)
Test: [  1/  1]	Loss 5.307 (5.307)	test_acc   0.38 (  0.38)	test_minacc   0.31 (  0.31)	test_majacc   0.92 (  0.92)	Loss_d 5.307 (5.307)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.31 (  0.31)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.44 (  0.44)
Overall Timing[ 33/  1]	epoch_time 0.0348 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0344 (0.0400)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9875000298023224, 0.3750000298023224)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 19%|#9        | 5/26 [00:00<00:00, 23.64it/s] 35%|###4      | 9/26 [00:00<00:00, 29.91it/s] 50%|#####     | 13/26 [00:00<00:00, 31.79it/s] 69%|######9   | 18/26 [00:00<00:00, 35.33it/s] 88%|########8 | 23/26 [00:00<00:00, 37.07it/s]100%|##########| 26/26 [00:00<00:00, 31.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 240000
penalty weights 0.0
Epoch: [34][  26/  26]	Loss 0.018 (0.023)	train_nll   0.02 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  33.72 ( 33.58)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.0403 (13.7755)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 27%|##6       | 7/26 [00:00<00:00, 29.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.20it/s] 50%|#####     | 13/26 [00:00<00:00, 37.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.91it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.91it/s] 96%|#########6| 25/26 [00:00<00:00, 46.16it/s]100%|##########| 26/26 [00:00<00:00, 36.77it/s]
Test: [   0/  26]	Loss 0.021 (0.021)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.021 (0.021)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.036 (0.035)	test_acc   0.99 (  0.99)	test_minacc   0.96 (  0.95)	test_majacc   0.99 (  1.00)	Loss_d 0.036 (0.035)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.96 (  0.95)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.76 (  0.71)
Test: [  20/  26]	Loss 0.007 (0.029)	test_acc   1.00 (  0.99)	test_minacc   0.98 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.007 (0.029)	test_acc_d   1.00 (  0.99)	test_minacc_d   0.98 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.005 (0.025)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.025)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.27it/s]
Test: [  0/  1]	Loss 5.429 (5.429)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.90 (  0.90)	Loss_d 5.429 (5.429)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 5.429 (5.429)	test_acc   0.40 (  0.40)	test_minacc   0.34 (  0.34)	test_majacc   0.90 (  0.90)	Loss_d 5.429 (5.429)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.38 (  0.38)
Overall Timing[ 34/  1]	epoch_time 0.0352 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0348 (0.0398)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9918000330328941, 0.398000031709671)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 19%|#9        | 5/26 [00:00<00:01, 20.48it/s] 35%|###4      | 9/26 [00:00<00:00, 27.08it/s] 50%|#####     | 13/26 [00:00<00:00, 31.44it/s] 65%|######5   | 17/26 [00:00<00:00, 33.71it/s] 81%|########  | 21/26 [00:00<00:00, 35.70it/s] 96%|#########6| 25/26 [00:00<00:00, 36.82it/s]100%|##########| 26/26 [00:00<00:00, 29.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 240000
penalty weights 0.0
Epoch: [35][  26/  26]	Loss 0.002 (0.015)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  33.98 ( 33.85)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.5988 (14.3540)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.78it/s] 27%|##6       | 7/26 [00:00<00:00, 32.06it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.06it/s] 50%|#####     | 13/26 [00:00<00:00, 39.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.33it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.33it/s] 96%|#########6| 25/26 [00:00<00:00, 46.74it/s]100%|##########| 26/26 [00:00<00:00, 38.50it/s]
Test: [   0/  26]	Loss 0.030 (0.030)	test_acc   0.99 (  0.99)	test_minacc   0.95 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.030 (0.030)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.95 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.022 (0.029)	test_acc   0.99 (  0.99)	test_minacc   0.94 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.022 (0.029)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.94 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.72)
Test: [  20/  26]	Loss 0.003 (0.022)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.022)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.001 (0.019)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.96)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.019)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.96)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.13it/s]
Test: [  0/  1]	Loss 6.089 (6.089)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.93 (  0.93)	Loss_d 6.089 (6.089)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 6.089 (6.089)	test_acc   0.36 (  0.36)	test_minacc   0.30 (  0.30)	test_majacc   0.93 (  0.93)	Loss_d 6.089 (6.089)	test_acc_d   0.36 (  0.36)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.47 (  0.47)
Overall Timing[ 35/  1]	epoch_time 0.0351 (0.0404)	validation_time 0.0003 (0.0006)	train_time 0.0347 (0.0397)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9936000282764434, 0.36400002241134644)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.80it/s] 19%|#9        | 5/26 [00:00<00:00, 23.14it/s] 35%|###4      | 9/26 [00:00<00:00, 29.07it/s] 50%|#####     | 13/26 [00:00<00:00, 32.88it/s] 65%|######5   | 17/26 [00:00<00:00, 35.02it/s] 81%|########  | 21/26 [00:00<00:00, 36.60it/s] 96%|#########6| 25/26 [00:00<00:00, 37.42it/s]100%|##########| 26/26 [00:00<00:00, 31.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 240000
penalty weights 0.0
Epoch: [36][  26/  26]	Loss 0.006 (0.016)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.24 ( 34.10)	train_acc   1.00 (  0.99)	train_minacc   0.98 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.6093 (14.6518)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.10it/s] 27%|##6       | 7/26 [00:00<00:00, 32.50it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.50it/s] 50%|#####     | 13/26 [00:00<00:00, 39.53it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.10it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.10it/s] 96%|#########6| 25/26 [00:00<00:00, 46.95it/s]100%|##########| 26/26 [00:00<00:00, 38.66it/s]
Test: [   0/  26]	Loss 0.050 (0.050)	test_acc   0.98 (  0.98)	test_minacc   0.93 (  0.93)	test_majacc   0.99 (  0.99)	Loss_d 0.050 (0.050)	test_acc_d   0.98 (  0.98)	test_minacc_d   0.93 (  0.93)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.72 (  0.72)
Test: [  10/  26]	Loss 0.049 (0.048)	test_acc   0.99 (  0.98)	test_minacc   0.94 (  0.92)	test_majacc   1.00 (  1.00)	Loss_d 0.049 (0.048)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.94 (  0.92)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.72)
Test: [  20/  26]	Loss 0.010 (0.040)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.93)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.040)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.93)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.72)
Test: [  26/  26]	Loss 0.002 (0.034)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.94)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.034)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.94)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.72)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 63.48it/s]
Test: [  0/  1]	Loss 5.864 (5.864)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 5.864 (5.864)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 5.864 (5.864)	test_acc   0.38 (  0.38)	test_minacc   0.32 (  0.32)	test_majacc   0.92 (  0.92)	Loss_d 5.864 (5.864)	test_acc_d   0.38 (  0.38)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.92 (  0.92)	test_corr_d   0.42 (  0.42)
Overall Timing[ 36/  1]	epoch_time 0.0353 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0348 (0.0395)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9891000366806983, 0.3840000033378601)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.79it/s] 19%|#9        | 5/26 [00:00<00:00, 25.60it/s] 35%|###4      | 9/26 [00:00<00:00, 31.14it/s] 50%|#####     | 13/26 [00:00<00:00, 34.46it/s] 65%|######5   | 17/26 [00:00<00:00, 36.30it/s] 81%|########  | 21/26 [00:00<00:00, 37.42it/s] 96%|#########6| 25/26 [00:00<00:00, 38.18it/s]100%|##########| 26/26 [00:00<00:00, 32.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 240000
penalty weights 0.0
Epoch: [37][  26/  26]	Loss 0.005 (0.021)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.59 ( 34.42)	train_acc   1.00 (  0.99)	train_minacc   1.00 (  0.97)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.4227 (14.4148)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 27%|##6       | 7/26 [00:00<00:00, 33.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.60it/s] 50%|#####     | 13/26 [00:00<00:00, 38.95it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.06it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.06it/s] 96%|#########6| 25/26 [00:00<00:00, 46.53it/s]100%|##########| 26/26 [00:00<00:00, 38.49it/s]
Test: [   0/  26]	Loss 0.024 (0.024)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.024 (0.024)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.074 (0.039)	test_acc   0.97 (  0.98)	test_minacc   0.92 (  0.94)	test_majacc   0.98 (  0.99)	Loss_d 0.074 (0.039)	test_acc_d   0.97 (  0.98)	test_minacc_d   0.92 (  0.94)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.016 (0.039)	test_acc   0.99 (  0.98)	test_minacc   0.98 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.016 (0.039)	test_acc_d   0.99 (  0.98)	test_minacc_d   0.98 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.002 (0.033)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.95)	test_majacc   1.00 (  0.99)	Loss_d 0.002 (0.033)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.95)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.67 (  0.71)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.80it/s]
Test: [  0/  1]	Loss 5.208 (5.208)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.93 (  0.93)	Loss_d 5.208 (5.208)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 5.208 (5.208)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.93 (  0.93)	Loss_d 5.208 (5.208)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.34 (  0.34)
Overall Timing[ 37/  1]	epoch_time 0.0346 (0.0401)	validation_time 0.0003 (0.0006)	train_time 0.0343 (0.0394)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9872000356316566, 0.4300000071525574)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.79it/s] 19%|#9        | 5/26 [00:00<00:00, 25.82it/s] 35%|###4      | 9/26 [00:00<00:00, 30.71it/s] 50%|#####     | 13/26 [00:00<00:00, 33.84it/s] 65%|######5   | 17/26 [00:00<00:00, 35.78it/s] 81%|########  | 21/26 [00:00<00:00, 36.93it/s] 96%|#########6| 25/26 [00:00<00:00, 37.11it/s]100%|##########| 26/26 [00:00<00:00, 31.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 240000
penalty weights 0.0
Epoch: [38][  26/  26]	Loss 0.010 (0.015)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  34.87 ( 34.73)	train_acc   0.99 (  0.99)	train_minacc   0.98 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.6159 (14.5165)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.09it/s] 27%|##6       | 7/26 [00:00<00:00, 34.59it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.59it/s] 50%|#####     | 13/26 [00:00<00:00, 41.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.09it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.09it/s] 96%|#########6| 25/26 [00:00<00:00, 47.91it/s]100%|##########| 26/26 [00:00<00:00, 40.71it/s]
Test: [   0/  26]	Loss 0.015 (0.015)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.015 (0.015)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.038 (0.016)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  1.00)	Loss_d 0.038 (0.016)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.74 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.59it/s]
Test: [  0/  1]	Loss 5.332 (5.332)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 5.332 (5.332)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 5.332 (5.332)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.91 (  0.91)	Loss_d 5.332 (5.332)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.32 (  0.32)
Overall Timing[ 38/  1]	epoch_time 0.0354 (0.0400)	validation_time 0.0003 (0.0006)	train_time 0.0350 (0.0393)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9967000222802163, 0.4320000112056732)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 19%|#9        | 5/26 [00:00<00:00, 23.12it/s] 35%|###4      | 9/26 [00:00<00:00, 28.58it/s] 50%|#####     | 13/26 [00:00<00:00, 31.90it/s] 65%|######5   | 17/26 [00:00<00:00, 33.90it/s] 81%|########  | 21/26 [00:00<00:00, 35.42it/s] 96%|#########6| 25/26 [00:00<00:00, 36.64it/s]100%|##########| 26/26 [00:00<00:00, 30.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 240000
penalty weights 0.0
Epoch: [39][  26/  26]	Loss 0.004 (0.013)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.10 ( 34.98)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.9877 (14.8506)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.83it/s] 31%|###       | 8/26 [00:00<00:00, 40.60it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.60it/s] 50%|#####     | 13/26 [00:00<00:00, 43.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.12it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.12it/s] 96%|#########6| 25/26 [00:00<00:00, 49.17it/s]100%|##########| 26/26 [00:00<00:00, 42.16it/s]
Test: [   0/  26]	Loss 0.028 (0.028)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   0.99 (  0.99)	Loss_d 0.028 (0.028)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.012 (0.014)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.012 (0.014)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.70)
Test: [  20/  26]	Loss 0.002 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.34it/s]
Test: [  0/  1]	Loss 5.782 (5.782)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.89 (  0.89)	Loss_d 5.782 (5.782)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 5.782 (5.782)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.89 (  0.89)	Loss_d 5.782 (5.782)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.89 (  0.89)	test_corr_d   0.32 (  0.32)
Overall Timing[ 39/  1]	epoch_time 0.0358 (0.0399)	validation_time 0.0004 (0.0006)	train_time 0.0354 (0.0392)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9971000199317932, 0.4280000329017639)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.08it/s] 19%|#9        | 5/26 [00:00<00:00, 22.99it/s] 35%|###4      | 9/26 [00:00<00:00, 28.77it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.62it/s] 69%|######9   | 18/26 [00:00<00:00, 35.28it/s] 85%|########4 | 22/26 [00:00<00:00, 36.73it/s]100%|##########| 26/26 [00:00<00:00, 31.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 240000
penalty weights 0.0
Epoch: [40][  26/  26]	Loss 0.013 (0.016)	train_nll   0.01 (  0.02)	train_penalty   0.00 (  0.00)	weight_norm  35.38 ( 35.23)	train_acc   0.99 (  0.99)	train_minacc   0.98 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.7622 (14.9262)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.78it/s] 27%|##6       | 7/26 [00:00<00:00, 38.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 38.17it/s] 50%|#####     | 13/26 [00:00<00:00, 43.50it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.98it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.98it/s] 96%|#########6| 25/26 [00:00<00:00, 49.07it/s]100%|##########| 26/26 [00:00<00:00, 41.61it/s]
Test: [   0/  26]	Loss 0.011 (0.011)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.011)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.002 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.70)
Test: [  20/  26]	Loss 0.003 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.008)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.008)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.80it/s]
Test: [  0/  1]	Loss 5.528 (5.528)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 5.528 (5.528)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 5.528 (5.528)	test_acc   0.42 (  0.42)	test_minacc   0.36 (  0.36)	test_majacc   0.91 (  0.91)	Loss_d 5.528 (5.528)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.34 (  0.34)
Overall Timing[ 40/  1]	epoch_time 0.0348 (0.0398)	validation_time 0.0003 (0.0006)	train_time 0.0344 (0.0391)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9971000245809555, 0.4180000126361847)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.32it/s] 19%|#9        | 5/26 [00:00<00:00, 25.60it/s] 35%|###4      | 9/26 [00:00<00:00, 31.08it/s] 50%|#####     | 13/26 [00:00<00:00, 33.89it/s] 65%|######5   | 17/26 [00:00<00:00, 35.64it/s] 81%|########  | 21/26 [00:00<00:00, 37.04it/s] 96%|#########6| 25/26 [00:00<00:00, 37.99it/s]100%|##########| 26/26 [00:00<00:00, 31.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 240000
penalty weights 0.0
Epoch: [41][  26/  26]	Loss 0.006 (0.014)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.68 ( 35.54)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.5555 (14.6074)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.02it/s] 27%|##6       | 7/26 [00:00<00:00, 34.25it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.25it/s] 50%|#####     | 13/26 [00:00<00:00, 40.50it/s] 77%|#######6  | 20/26 [00:00<00:00, 49.03it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 49.03it/s] 96%|#########6| 25/26 [00:00<00:00, 48.39it/s]100%|##########| 26/26 [00:00<00:00, 40.07it/s]
Test: [   0/  26]	Loss 0.002 (0.002)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.002)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.011 (0.017)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.011 (0.017)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.69)
Test: [  20/  26]	Loss 0.006 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.006 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  26/  26]	Loss 0.002 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.92it/s]
Test: [  0/  1]	Loss 5.309 (5.309)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 5.309 (5.309)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 5.309 (5.309)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.90 (  0.90)	Loss_d 5.309 (5.309)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.28 (  0.28)
Overall Timing[ 41/  1]	epoch_time 0.0362 (0.0397)	validation_time 0.0005 (0.0006)	train_time 0.0358 (0.0390)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9964000257849693, 0.45100003480911255)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.99it/s] 19%|#9        | 5/26 [00:00<00:00, 25.43it/s] 35%|###4      | 9/26 [00:00<00:00, 31.28it/s] 50%|#####     | 13/26 [00:00<00:00, 34.42it/s] 65%|######5   | 17/26 [00:00<00:00, 36.36it/s] 85%|########4 | 22/26 [00:00<00:00, 38.04it/s]100%|##########| 26/26 [00:00<00:00, 38.45it/s]100%|##########| 26/26 [00:00<00:00, 32.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 240000
penalty weights 0.0
Epoch: [42][  26/  26]	Loss 0.018 (0.012)	train_nll   0.02 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  35.90 ( 35.80)	train_acc   0.99 (  1.00)	train_minacc   0.95 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.9253 (14.7241)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.72it/s] 31%|###       | 8/26 [00:00<00:00, 38.41it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.41it/s] 50%|#####     | 13/26 [00:00<00:00, 41.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.72it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.72it/s] 96%|#########6| 25/26 [00:00<00:00, 49.00it/s]100%|##########| 26/26 [00:00<00:00, 41.69it/s]
Test: [   0/  26]	Loss 0.004 (0.004)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.004)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.008 (0.011)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.008 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.69)
Test: [  20/  26]	Loss 0.001 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.02it/s]
Test: [  0/  1]	Loss 5.473 (5.473)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.91 (  0.91)	Loss_d 5.473 (5.473)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 5.473 (5.473)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.91 (  0.91)	Loss_d 5.473 (5.473)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.91 (  0.91)	test_corr_d   0.30 (  0.30)
Overall Timing[ 42/  1]	epoch_time 0.0347 (0.0396)	validation_time 0.0003 (0.0006)	train_time 0.0343 (0.0389)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9980000210404396, 0.4410000145435333)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.50it/s] 23%|##3       | 6/26 [00:00<00:00, 27.83it/s] 38%|###8      | 10/26 [00:00<00:00, 32.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 33.37it/s] 69%|######9   | 18/26 [00:00<00:00, 34.44it/s] 85%|########4 | 22/26 [00:00<00:00, 35.75it/s]100%|##########| 26/26 [00:00<00:00, 36.60it/s]100%|##########| 26/26 [00:00<00:00, 31.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 240000
penalty weights 0.0
Epoch: [43][  26/  26]	Loss 0.003 (0.013)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.17 ( 36.03)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.98)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.9302 (15.0419)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.17it/s] 31%|###       | 8/26 [00:00<00:00, 39.66it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.66it/s] 50%|#####     | 13/26 [00:00<00:00, 42.74it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.48it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.48it/s] 96%|#########6| 25/26 [00:00<00:00, 48.22it/s]100%|##########| 26/26 [00:00<00:00, 41.56it/s]
Test: [   0/  26]	Loss 0.017 (0.017)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   0.99 (  0.99)	Loss_d 0.017 (0.017)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.004 (0.015)	test_acc   1.00 (  0.99)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.004 (0.015)	test_acc_d   1.00 (  0.99)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.69)
Test: [  20/  26]	Loss 0.005 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.011)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.011)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.23it/s]
Test: [  0/  1]	Loss 5.417 (5.417)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.93 (  0.93)	Loss_d 5.417 (5.417)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 5.417 (5.417)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.93 (  0.93)	Loss_d 5.417 (5.417)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.34 (  0.34)
Overall Timing[ 43/  1]	epoch_time 0.0350 (0.0395)	validation_time 0.0004 (0.0006)	train_time 0.0346 (0.0388)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9964000281095505, 0.42500001192092896)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.39it/s] 19%|#9        | 5/26 [00:00<00:00, 25.71it/s] 35%|###4      | 9/26 [00:00<00:00, 31.57it/s] 50%|#####     | 13/26 [00:00<00:00, 34.52it/s] 65%|######5   | 17/26 [00:00<00:00, 36.04it/s] 81%|########  | 21/26 [00:00<00:00, 37.23it/s] 96%|#########6| 25/26 [00:00<00:00, 38.02it/s]100%|##########| 26/26 [00:00<00:00, 32.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 240000
penalty weights 0.0
Epoch: [44][  26/  26]	Loss 0.001 (0.012)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.40 ( 36.30)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 14.9742 (14.8900)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 15%|#5        | 4/26 [00:00<00:00, 36.32it/s] 35%|###4      | 9/26 [00:00<00:00, 39.10it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.10it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.33it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.45it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.45it/s] 96%|#########6| 25/26 [00:00<00:00, 49.06it/s]100%|##########| 26/26 [00:00<00:00, 42.86it/s]
Test: [   0/  26]	Loss 0.002 (0.002)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.002)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.010 (0.008)	test_acc   0.99 (  1.00)	test_minacc   0.96 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.008)	test_acc_d   0.99 (  1.00)	test_minacc_d   0.96 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.76 (  0.69)
Test: [  20/  26]	Loss 0.002 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.89it/s]
Test: [  0/  1]	Loss 5.455 (5.455)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.90 (  0.90)	Loss_d 5.455 (5.455)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 5.455 (5.455)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.90 (  0.90)	Loss_d 5.455 (5.455)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.27 (  0.27)
Overall Timing[ 44/  1]	epoch_time 0.0364 (0.0394)	validation_time 0.0004 (0.0006)	train_time 0.0360 (0.0387)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9988000140190124, 0.45500001311302185)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.53it/s] 19%|#9        | 5/26 [00:00<00:00, 24.83it/s] 35%|###4      | 9/26 [00:00<00:00, 30.37it/s] 54%|#####3    | 14/26 [00:00<00:00, 34.80it/s] 69%|######9   | 18/26 [00:00<00:00, 35.82it/s] 85%|########4 | 22/26 [00:00<00:00, 36.53it/s]100%|##########| 26/26 [00:00<00:00, 37.44it/s]100%|##########| 26/26 [00:00<00:00, 31.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 240000
penalty weights 0.0
Epoch: [45][  26/  26]	Loss 0.001 (0.006)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.58 ( 36.49)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.5629 (15.3198)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.51it/s] 27%|##6       | 7/26 [00:00<00:00, 31.41it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.41it/s] 50%|#####     | 13/26 [00:00<00:00, 40.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.10it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.10it/s] 96%|#########6| 25/26 [00:00<00:00, 47.50it/s]100%|##########| 26/26 [00:00<00:00, 38.68it/s]
Test: [   0/  26]	Loss 0.001 (0.001)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.001)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.003 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.74 (  0.69)
Test: [  20/  26]	Loss 0.001 (0.003)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.003)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  26/  26]	Loss 0.001 (0.002)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.002)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.15it/s]
Test: [  0/  1]	Loss 5.641 (5.641)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.93 (  0.93)	Loss_d 5.641 (5.641)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 5.641 (5.641)	test_acc   0.45 (  0.45)	test_minacc   0.40 (  0.40)	test_majacc   0.93 (  0.93)	Loss_d 5.641 (5.641)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.27 (  0.27)
Overall Timing[ 45/  1]	epoch_time 0.0358 (0.0393)	validation_time 0.0004 (0.0005)	train_time 0.0354 (0.0387)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9992000093460083, 0.4540000259876251)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 19%|#9        | 5/26 [00:00<00:00, 24.83it/s] 38%|###8      | 10/26 [00:00<00:00, 32.38it/s] 58%|#####7    | 15/26 [00:00<00:00, 34.99it/s] 73%|#######3  | 19/26 [00:00<00:00, 36.26it/s] 88%|########8 | 23/26 [00:00<00:00, 37.09it/s]100%|##########| 26/26 [00:00<00:00, 31.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 240000
penalty weights 0.0
Epoch: [46][  26/  26]	Loss 0.009 (0.007)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.71 ( 36.64)	train_acc   1.00 (  1.00)	train_minacc   0.98 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.9331 (15.8331)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.31it/s] 27%|##6       | 7/26 [00:00<00:00, 35.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.93it/s] 50%|#####     | 13/26 [00:00<00:00, 41.04it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.02it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.02it/s] 96%|#########6| 25/26 [00:00<00:00, 47.85it/s]100%|##########| 26/26 [00:00<00:00, 40.82it/s]
Test: [   0/  26]	Loss 0.010 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.010 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.008 (0.006)	test_acc   0.99 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  1.00)	Loss_d 0.008 (0.006)	test_acc_d   0.99 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.74 (  0.69)
Test: [  20/  26]	Loss 0.003 (0.007)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.003 (0.007)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  26/  26]	Loss 0.000 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 67.38it/s]
Test: [  0/  1]	Loss 5.835 (5.835)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.90 (  0.90)	Loss_d 5.835 (5.835)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 5.835 (5.835)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.90 (  0.90)	Loss_d 5.835 (5.835)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.26 (  0.26)
Overall Timing[ 46/  1]	epoch_time 0.0347 (0.0392)	validation_time 0.0003 (0.0005)	train_time 0.0344 (0.0386)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9980000233650208, 0.4570000171661377)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.26it/s] 19%|#9        | 5/26 [00:00<00:00, 23.10it/s] 35%|###4      | 9/26 [00:00<00:00, 29.52it/s] 50%|#####     | 13/26 [00:00<00:00, 33.23it/s] 65%|######5   | 17/26 [00:00<00:00, 35.17it/s] 81%|########  | 21/26 [00:00<00:00, 36.45it/s] 96%|#########6| 25/26 [00:00<00:00, 37.34it/s]100%|##########| 26/26 [00:00<00:00, 30.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 240000
penalty weights 0.0
Epoch: [47][  26/  26]	Loss 0.006 (0.011)	train_nll   0.01 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  36.98 ( 36.84)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.5103 (15.7024)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.84it/s] 35%|###4      | 9/26 [00:00<00:00, 38.95it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 45.71it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 45.71it/s] 81%|########  | 21/26 [00:00<00:00, 47.81it/s]100%|##########| 26/26 [00:00<00:00, 42.38it/s]
Test: [   0/  26]	Loss 0.005 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.023 (0.008)	test_acc   0.99 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   0.99 (  1.00)	Loss_d 0.023 (0.008)	test_acc_d   0.99 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.73 (  0.69)
Test: [  20/  26]	Loss 0.001 (0.006)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.006)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  26/  26]	Loss 0.002 (0.005)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.002 (0.005)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.82it/s]
Test: [  0/  1]	Loss 5.684 (5.684)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.90 (  0.90)	Loss_d 5.684 (5.684)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 5.684 (5.684)	test_acc   0.43 (  0.43)	test_minacc   0.38 (  0.38)	test_majacc   0.90 (  0.90)	Loss_d 5.684 (5.684)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.31 (  0.31)
Overall Timing[ 47/  1]	epoch_time 0.0355 (0.0391)	validation_time 0.0005 (0.0005)	train_time 0.0351 (0.0385)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9987000128626824, 0.4300000071525574)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 19%|#9        | 5/26 [00:00<00:00, 22.48it/s] 35%|###4      | 9/26 [00:00<00:00, 28.95it/s] 50%|#####     | 13/26 [00:00<00:00, 32.94it/s] 65%|######5   | 17/26 [00:00<00:00, 34.82it/s] 81%|########  | 21/26 [00:00<00:00, 35.74it/s] 96%|#########6| 25/26 [00:00<00:00, 36.57it/s]100%|##########| 26/26 [00:00<00:00, 30.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 240000
penalty weights 0.0
Epoch: [48][  26/  26]	Loss 0.016 (0.006)	train_nll   0.02 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  37.15 ( 37.07)	train_acc   0.99 (  1.00)	train_minacc   0.95 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 16.1197 (15.8264)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.24it/s] 27%|##6       | 7/26 [00:00<00:00, 29.74it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.74it/s] 50%|#####     | 13/26 [00:00<00:00, 37.80it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.29it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.29it/s] 96%|#########6| 25/26 [00:00<00:00, 46.17it/s]100%|##########| 26/26 [00:00<00:00, 37.10it/s]
Test: [   0/  26]	Loss 0.019 (0.019)	test_acc   0.99 (  0.99)	test_minacc   0.98 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.019 (0.019)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.98 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.70 (  0.70)
Test: [  10/  26]	Loss 0.015 (0.014)	test_acc   0.99 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   0.99 (  1.00)	Loss_d 0.015 (0.014)	test_acc_d   0.99 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.74 (  0.69)
Test: [  20/  26]	Loss 0.001 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.99)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.99)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.70)
Test: [  26/  26]	Loss 0.000 (0.009)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  1.00)	test_majacc   1.00 (  1.00)	Loss_d 0.000 (0.009)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  1.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.67 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 66.71it/s]
Test: [  0/  1]	Loss 6.231 (6.231)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.93 (  0.93)	Loss_d 6.231 (6.231)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 6.231 (6.231)	test_acc   0.43 (  0.43)	test_minacc   0.37 (  0.37)	test_majacc   0.93 (  0.93)	Loss_d 6.231 (6.231)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.33 (  0.33)
Overall Timing[ 48/  1]	epoch_time 0.0375 (0.0391)	validation_time 0.0004 (0.0005)	train_time 0.0371 (0.0385)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9976000257134437, 0.42600002884864807)
current lr:  0.006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.94it/s] 19%|#9        | 5/26 [00:00<00:00, 25.89it/s] 35%|###4      | 9/26 [00:00<00:00, 31.15it/s] 50%|#####     | 13/26 [00:00<00:00, 34.19it/s] 65%|######5   | 17/26 [00:00<00:00, 35.73it/s] 81%|########  | 21/26 [00:00<00:00, 37.11it/s] 96%|#########6| 25/26 [00:00<00:00, 37.91it/s]100%|##########| 26/26 [00:00<00:00, 32.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 240000
penalty weights 0.0
Epoch: [49][  26/  26]	Loss 0.003 (0.010)	train_nll   0.00 (  0.01)	train_penalty   0.00 (  0.00)	weight_norm  37.39 ( 37.27)	train_acc   1.00 (  1.00)	train_minacc   1.00 (  0.99)	train_majacc   1.00 (  1.00)	train_corr   0.00 (  0.00)	l1 15.7962 (15.9324)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 27%|##6       | 7/26 [00:00<00:00, 31.37it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.37it/s] 50%|#####     | 13/26 [00:00<00:00, 38.67it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.21it/s] 96%|#########6| 25/26 [00:00<00:00, 46.54it/s]100%|##########| 26/26 [00:00<00:00, 37.95it/s]
Test: [   0/  26]	Loss 0.017 (0.017)	test_acc   0.99 (  0.99)	test_minacc   0.97 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.017 (0.017)	test_acc_d   0.99 (  0.99)	test_minacc_d   0.97 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  10/  26]	Loss 0.005 (0.014)	test_acc   1.00 (  1.00)	test_minacc   0.98 (  0.97)	test_majacc   1.00 (  1.00)	Loss_d 0.005 (0.014)	test_acc_d   1.00 (  1.00)	test_minacc_d   0.98 (  0.97)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.75 (  0.70)
Test: [  20/  26]	Loss 0.001 (0.012)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.012)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.71 (  0.71)
Test: [  26/  26]	Loss 0.001 (0.010)	test_acc   1.00 (  1.00)	test_minacc   1.00 (  0.98)	test_majacc   1.00 (  1.00)	Loss_d 0.001 (0.010)	test_acc_d   1.00 (  1.00)	test_minacc_d   1.00 (  0.98)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.68 (  0.70)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 62.60it/s]
Test: [  0/  1]	Loss 6.282 (6.282)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.93 (  0.93)	Loss_d 6.282 (6.282)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.36 (  0.36)
Test: [  1/  1]	Loss 6.282 (6.282)	test_acc   0.41 (  0.41)	test_minacc   0.35 (  0.35)	test_majacc   0.93 (  0.93)	Loss_d 6.282 (6.282)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.93 (  0.93)	test_corr_d   0.36 (  0.36)
Overall Timing[ 49/  1]	epoch_time 0.0349 (0.0390)	validation_time 0.0003 (0.0005)	train_time 0.0346 (0.0384)
record: (train_acc, test_acc) (0.9441000208854675, 0.5509999990463257)
last accs (train_acc, test_acc) (0.9971000222563744, 0.41100001335144043)
done saving aggregate.csv to ./aggregate.csv
wandb: - 0.090 MB of 0.090 MB uploadedwandb: \ 0.090 MB of 0.090 MB uploadedwandb: | 0.090 MB of 0.090 MB uploadedwandb: / 0.090 MB of 0.090 MB uploadedwandb: - 0.090 MB of 0.090 MB uploadedwandb: \ 0.090 MB of 0.090 MB uploadedwandb: | 0.090 MB of 0.090 MB uploadedwandb: / 0.090 MB of 0.090 MB uploadedwandb: - 0.090 MB of 0.090 MB uploadedwandb: \ 0.090 MB of 0.090 MB uploadedwandb: | 0.090 MB of 0.090 MB uploadedwandb: / 0.113 MB of 0.121 MB uploaded (0.003 MB deduped)wandb: - 0.472 MB of 0.472 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/diagnostics/epoch_time_val █▂▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/diagnostics/train_time_val █▃▁▂▂▂▂▂▃▂▂▂▂▂▂▂▂▁▁▂▁▂▁▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/Loss_avg ▁▁▁▁▁▁▁▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▆▅▆▆▇█▇▆▇▇▇▇▇▇▇▇█
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/Loss_d_avg ▁▁▁▁▁▁▁▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▆▅▆▆▇█▇▆▇▇▇▇▇▇▇▇█
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/Loss_d_val ▁▁▁▁▁▁▁▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▆▅▆▆▇█▇▆▇▇▇▇▇▇▇▇█
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/Loss_val ▁▁▁▁▁▁▁▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▆▅▆▆▇█▇▆▇▇▇▇▇▇▇▇█
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_acc_avg ▁▁▁▃▄▄▆▅▇▆▆█▇██▇██▇▇█▇▇▇▇▇▇▆▆▆▇▇▇▇▇▇▇█▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_acc_d_avg ▁▁▁▃▄▄▆▅▇▆▆█▇██▇██▇▇█▇▇▇▇▇▇▆▆▆▇▇▇▇▇▇▇█▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_acc_d_val ▁▁▁▃▄▄▆▅▇▆▆█▇██▇██▇▇█▇▇▇▇▇▇▆▆▆▇▇▇▇▇▇▇█▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_acc_val ▁▁▁▃▄▄▆▅▇▆▆█▇██▇██▇▇█▇▇▇▇▇▇▆▆▆▇▇▇▇▇▇▇█▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_corr_d_avg ███▇▆▆▅▅▃▃▄▂▃▁▂▃▁▁▂▃▁▂▂▂▂▃▂▃▃▃▂▂▂▁▂▂▁▁▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_corr_d_val ███▇▆▆▅▅▃▃▄▂▃▁▂▃▁▁▂▃▁▂▂▂▂▃▂▃▃▃▂▂▂▁▂▂▁▁▂▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_majacc_avg ████▅▆▅▅▄▅▆▁▃▁▃▃▃▃▅▅▅▅▄▂▃▅▅▄▅▄▅▄▄▃▄▅▅▃▃▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_majacc_d_avg ████▅▆▅▅▄▅▆▁▃▁▃▃▃▃▅▅▅▅▄▂▃▅▅▄▅▄▅▄▄▃▄▅▅▃▃▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_majacc_d_val ████▅▆▅▅▄▅▆▁▃▁▃▃▃▃▅▅▅▅▄▂▃▅▅▄▅▄▅▄▄▃▄▅▅▃▃▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_majacc_val ████▅▆▅▅▄▅▆▁▃▁▃▃▃▃▅▅▅▅▄▂▃▅▅▄▅▄▅▄▄▃▄▅▅▃▃▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_minacc_avg ▁▁▁▃▄▄▆▅▇▆▆█▇██▇██▇▇█▇▇▇▇▇▆▆▆▆▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_minacc_d_avg ▁▁▁▃▄▄▆▅▇▆▆█▇██▇██▇▇█▇▇▇▇▇▆▆▆▆▇▇▇▇▇▇▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_minacc_d_val ▁▁▁▃▄▄▆▅▇▆▆█▇██▇██▇▇█▇▇▇▇▇▆▆▆▆▇▇▇▇▇▇▇▇▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_minacc_val ▁▁▁▃▄▄▆▅▇▆▆█▇██▇██▇▇█▇▇▇▇▇▆▆▆▆▇▇▇▇▇▇▇▇▇▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/Loss_avg █▇▇▆▆▆▅▅▅▅▅▄▄▄▃▃▃▃▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/Loss_val ███▇▆▆▆▆▄▄▄▃▄▃▃▃▂▂▂▂▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/l1_avg ▂▂▂▁▁▁▁▁▁▁▁▁▂▂▂▂▃▃▃▄▅▄▅▅▆▆▆▆▇▇▇▇▇▇▇▇████
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/l1_val ▂▂▂▁▁▁▁▁▂▂▂▂▁▂▂▃▃▃▄▄▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇▇████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_acc_avg ▁▂▂▂▃▃▃▃▄▄▄▄▅▅▅▆▆▆▇▇▇▇▇█▇███████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_acc_val ▁▁▁▁▂▂▃▃▄▅▅▅▅▆▇▆▆▇▇▇██████▇█████████████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_majacc_avg ▁██▆▅▄▄▃▃▃▃▃▃▄▄▄▅▅▆▆▇▇▇▇▇▇▇█████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_majacc_val ██▇▁▂▄▂▂▅▆▂▄▅▄▇▅▇▇█▇▇▇████▇███▇▇▇▇██████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_minacc_avg ▁▁▁▁▂▂▃▃▄▄▅▅▅▆▆▆▇▇▇▇▇▇██████████████████
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_minacc_val ▁▁▁▃▄▃▄▅▄▅▆▆▆▇▇▇▇▇▇▇████████████████████
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_nll_avg █▇▇▆▆▆▅▅▅▅▅▄▄▄▃▃▃▃▂▂▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_nll_val ███▇▆▆▆▆▄▄▄▃▄▃▃▃▂▂▂▂▂▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_penalty_avg █▃▃▃▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_penalty_val ██▆▄▃▃▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/weight_norm_avg ▁▂▂▂▃▃▃▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇▇█████
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/weight_norm_val ▁▁▂▂▂▂▂▂▂▂▂▂▃▃▃▃▄▄▄▄▅▅▅▆▆▆▆▆▇▇▇▇▇▇▇▇████
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/zero_count_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/zero_count_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/diagnostics/epoch_time_val 0.03492
wandb:      resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/diagnostics/train_time_val 0.03457
wandb: resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/diagnostics/validation_time_val 0.00034
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/Loss_avg 6.28246
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/Loss_d_avg 6.28246
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/Loss_d_val 6.28246
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/Loss_val 6.28246
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_acc_avg 0.411
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_acc_d_avg 0.411
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_acc_d_val 0.411
wandb:               resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_acc_val 0.411
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_corr_d_avg 0.36399
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_corr_d_val 0.36399
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_majacc_avg 0.93
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_majacc_d_avg 0.93
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_majacc_d_val 0.93
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_majacc_val 0.93
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_minacc_avg 0.35333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_minacc_d_avg 0.35333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_minacc_d_val 0.35333
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/test/test_minacc_val 0.35333
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/Loss_avg 0.00997
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/Loss_val 0.00291
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/l1_avg 15.93241
wandb:                    resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/l1_val 15.79617
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_acc_avg 0.997
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_acc_val 1.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_majacc_avg 0.99812
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_majacc_val 1.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_minacc_avg 0.99107
wandb:          resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_minacc_val 1.0
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_nll_avg 0.00997
wandb:             resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_nll_val 0.00291
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_penalty_avg 0.0002
wandb:         resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/train_penalty_val 6e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/weight_norm_avg 37.27148
wandb:           resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/weight_norm_val 37.38593
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/zero_count_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=1.0/124/logs/train/zero_count_val 0.0
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/wqq460mq
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240907_192625-wqq460mq/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.9 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240907_192917-pmzsdpjs
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/pmzsdpjs
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=1, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=1.0, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='DenseConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='LearnedBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=True, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=False, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=240000, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1, use_pgd=False, z=15.0, pgd_anneal_iters=600, pgd_skip_steps=50, fraction_z=0.95)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: DenseConv
==> BN Type: LearnedBatchNorm
<class 'torch.nn.modules.conv.Conv2d'>
<class 'torch.nn.modules.batchnorm.BatchNorm2d'>
==> Building first layer with <class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
<class 'torch.nn.modules.conv.Conv2d'>
init by 1
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): Conv2d(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.bn1.weight
<DEBUG> gradient to module.bn1.bias
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.bn1.weight
<DEBUG> gradient to module.layer1.0.bn1.bias
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.bn2.weight
<DEBUG> gradient to module.layer1.0.bn2.bias
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.bn1.weight
<DEBUG> gradient to module.layer1.1.bn1.bias
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.bn2.weight
<DEBUG> gradient to module.layer1.1.bn2.bias
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.bn1.weight
<DEBUG> gradient to module.layer2.0.bn1.bias
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.bn2.weight
<DEBUG> gradient to module.layer2.0.bn2.bias
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.1.weight
<DEBUG> gradient to module.layer2.0.downsample.1.bias
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.bn1.weight
<DEBUG> gradient to module.layer2.1.bn1.bias
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.bn2.weight
<DEBUG> gradient to module.layer2.1.bn2.bias
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.bn1.weight
<DEBUG> gradient to module.layer3.0.bn1.bias
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.bn2.weight
<DEBUG> gradient to module.layer3.0.bn2.bias
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.1.weight
<DEBUG> gradient to module.layer3.0.downsample.1.bias
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.bn1.weight
<DEBUG> gradient to module.layer3.1.bn1.bias
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.bn2.weight
<DEBUG> gradient to module.layer3.1.bn2.bias
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.bn1.weight
<DEBUG> gradient to module.layer4.0.bn1.bias
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.bn2.weight
<DEBUG> gradient to module.layer4.0.bn2.bias
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.1.weight
<DEBUG> gradient to module.layer4.0.downsample.1.bias
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.bn1.weight
<DEBUG> gradient to module.layer4.1.bn1.bias
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.bn2.weight
<DEBUG> gradient to module.layer4.1.bn2.bias
<DEBUG> gradient to module.fc.weight
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1210
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6046, 3, 32, 32) (5954, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:34,  1.39s/it] 19%|#9        | 5/26 [00:01<00:04,  4.37it/s] 35%|###4      | 9/26 [00:01<00:02,  8.41it/s] 50%|#####     | 13/26 [00:01<00:01, 12.83it/s] 65%|######5   | 17/26 [00:01<00:00, 17.35it/s] 81%|########  | 21/26 [00:01<00:00, 21.57it/s] 96%|#########6| 25/26 [00:02<00:00, 25.46it/s]100%|##########| 26/26 [00:02<00:00, 10.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 240000
penalty weights 0.0
Epoch: [0][  26/  26]	Loss 0.359 (0.548)	train_nll   0.36 (  0.55)	train_penalty   0.05 (  0.21)	weight_norm  20.78 ( 18.08)	train_acc   0.88 (  0.79)	train_minacc   0.00 (  0.08)	train_majacc   1.00 (  0.92)	train_corr   0.00 (  0.00)	l1 8.6035 (7.9928)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.61it/s] 27%|##6       | 7/26 [00:00<00:00, 33.88it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.88it/s] 46%|####6     | 12/26 [00:00<00:00, 39.36it/s] 69%|######9   | 18/26 [00:00<00:00, 46.12it/s]                                                69%|######9   | 18/26 [00:00<00:00, 46.12it/s] 92%|#########2| 24/26 [00:00<00:00, 46.78it/s]100%|##########| 26/26 [00:00<00:00, 39.70it/s]
Test: [   0/  26]	Loss 0.419 (0.419)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.419 (0.419)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.408 (0.424)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.408 (0.424)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.98)
Test: [  20/  26]	Loss 0.395 (0.426)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 0.395 (0.426)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.339 (0.427)	test_acc   0.88 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  0.99)	Loss_d 0.339 (0.427)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.99 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]100%|##########| 1/1 [00:00<00:00,  2.52it/s]
Test: [  0/  1]	Loss 2.044 (2.044)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 2.044 (2.044)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  1/  1]	Loss 2.044 (2.044)	test_acc   0.11 (  0.11)	test_minacc   0.01 (  0.01)	test_majacc   0.99 (  0.99)	Loss_d 2.044 (2.044)	test_acc_d   0.11 (  0.11)	test_minacc_d   0.01 (  0.01)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/125/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0693 (0.0693)	validation_time 0.0068 (0.0068)	train_time 0.0603 (0.0603)
record: (train_acc, test_acc) (0.8451000264883042, 0.10700000822544098)
last accs (train_acc, test_acc) (0.8451000264883042, 0.10700000822544098)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.31it/s] 19%|#9        | 5/26 [00:00<00:00, 22.02it/s] 35%|###4      | 9/26 [00:00<00:00, 28.82it/s] 50%|#####     | 13/26 [00:00<00:00, 32.71it/s] 69%|######9   | 18/26 [00:00<00:00, 35.66it/s] 85%|########4 | 22/26 [00:00<00:00, 36.70it/s]100%|##########| 26/26 [00:00<00:00, 37.43it/s]100%|##########| 26/26 [00:00<00:00, 30.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 240000
penalty weights 0.0
Epoch: [1][  26/  26]	Loss 0.355 (0.423)	train_nll   0.35 (  0.42)	train_penalty   0.04 (  0.06)	weight_norm  21.86 ( 21.53)	train_acc   0.88 (  0.84)	train_minacc   0.03 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 9.0503 (8.9353)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.81it/s] 35%|###4      | 9/26 [00:00<00:00, 44.49it/s]                                               35%|###4      | 9/26 [00:00<00:00, 44.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 46.19it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 46.19it/s] 81%|########  | 21/26 [00:00<00:00, 50.10it/s]100%|##########| 26/26 [00:00<00:00, 44.18it/s]
Test: [   0/  26]	Loss 0.404 (0.404)	test_acc   0.85 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   0.99 (  0.99)	Loss_d 0.404 (0.404)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.98 (  0.98)
Test: [  10/  26]	Loss 0.384 (0.406)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.384 (0.406)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.97 (  0.98)
Test: [  20/  26]	Loss 0.379 (0.408)	test_acc   0.87 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.379 (0.408)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
Test: [  26/  26]	Loss 0.328 (0.408)	test_acc   0.88 (  0.85)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 0.328 (0.408)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.98 (  0.98)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 57.31it/s]
Test: [  0/  1]	Loss 1.971 (1.971)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.971 (1.971)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Test: [  1/  1]	Loss 1.971 (1.971)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.971 (1.971)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.97)
Overall Timing[  1/  1]	epoch_time 0.0343 (0.0518)	validation_time 0.0004 (0.0036)	train_time 0.0339 (0.0471)
record: (train_acc, test_acc) (0.8451000264883042, 0.10700000822544098)
last accs (train_acc, test_acc) (0.8479000216722489, 0.10300000756978989)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.31it/s] 19%|#9        | 5/26 [00:00<00:00, 26.28it/s] 35%|###4      | 9/26 [00:00<00:00, 32.28it/s] 50%|#####     | 13/26 [00:00<00:00, 34.63it/s] 65%|######5   | 17/26 [00:00<00:00, 36.05it/s] 85%|########4 | 22/26 [00:00<00:00, 37.78it/s]100%|##########| 26/26 [00:00<00:00, 32.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 240000
penalty weights 0.0
Epoch: [2][  26/  26]	Loss 0.347 (0.410)	train_nll   0.35 (  0.41)	train_penalty   0.03 (  0.06)	weight_norm  21.98 ( 21.94)	train_acc   0.87 (  0.85)	train_minacc   0.00 (  0.01)	train_majacc   1.00 (  0.99)	train_corr   0.00 (  0.00)	l1 8.9939 (9.0144)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.62it/s] 27%|##6       | 7/26 [00:00<00:00, 33.28it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.28it/s] 46%|####6     | 12/26 [00:00<00:00, 40.17it/s] 69%|######9   | 18/26 [00:00<00:00, 44.53it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.53it/s] 92%|#########2| 24/26 [00:00<00:00, 48.87it/s]100%|##########| 26/26 [00:00<00:00, 40.84it/s]
Test: [   0/  26]	Loss 0.393 (0.393)	test_acc   0.85 (  0.85)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 0.393 (0.393)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.355 (0.388)	test_acc   0.86 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   0.99 (  1.00)	Loss_d 0.355 (0.388)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   0.99 (  1.00)	test_corr_d   0.95 (  0.96)
Test: [  20/  26]	Loss 0.360 (0.389)	test_acc   0.87 (  0.85)	test_minacc   0.02 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.360 (0.389)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.02 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.96 (  0.96)
Test: [  26/  26]	Loss 0.315 (0.390)	test_acc   0.88 (  0.85)	test_minacc   0.00 (  0.01)	test_majacc   1.00 (  1.00)	Loss_d 0.315 (0.390)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.00 (  0.01)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.97 (  0.96)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 64.81it/s]
Test: [  0/  1]	Loss 1.875 (1.875)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.875 (1.875)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.875 (1.875)	test_acc   0.10 (  0.10)	test_minacc   0.00 (  0.00)	test_majacc   1.00 (  1.00)	Loss_d 1.875 (1.875)	test_acc_d   0.10 (  0.10)	test_minacc_d   0.00 (  0.00)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.95 (  0.95)
Overall Timing[  2/  1]	epoch_time 0.0335 (0.0457)	validation_time 0.0003 (0.0025)	train_time 0.0331 (0.0424)
record: (train_acc, test_acc) (0.8451000264883042, 0.10700000822544098)
last accs (train_acc, test_acc) (0.848300021648407, 0.10200000554323196)
current lr:  0.006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.71it/s] 19%|#9        | 5/26 [00:00<00:00, 26.51it/s] 35%|###4      | 9/26 [00:00<00:00, 32.06it/s] 50%|#####     | 13/26 [00:00<00:00, 34.71it/s] 65%|######5   | 17/26 [00:00<00:00, 36.41it/s] 81%|########  | 21/26 [00:00<00:00, 36.93it/s] 96%|#########6| 25/26 [00:00<00:00, 37.61it/s]100%|##########| 26/26 [00:00<00:00, 32.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 240000
penalty weights 0.0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 240000
penalty weights 0.0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 240000
penalty weights 0.0
Epoch: [3][  26/  26]	Loss 0.344 (0.396)	train_nll   0.34 (  0.40)	train_penalty   0.02 (  0.05)	weight_norm  22.02 ( 22.00)	train_acc   0.86 (  0.85)	train_minacc   0.19 (  0.04)	train_majacc   0.95 (  0.99)	train_corr   0.00 (  0.00)	l1 8.8517 (8.9044)	zero_count 0.0000 (0.0000)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.07it/s] 31%|###       | 8/26 [00:00<00:00, 40.83it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.83it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.00it/s] 77%|#######6  | 20/26 [00:00<00:00, 49.46it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 49.46it/s]100%|##########| 26/26 [00:00<00:00, 52.20it/s]100%|##########| 26/26 [00:00<00:00, 43.08it/s]
Test: [   0/  26]	Loss 0.374 (0.374)	test_acc   0.86 (  0.86)	test_minacc   0.07 (  0.07)	test_majacc   0.99 (  0.99)	Loss_d 0.374 (0.374)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.07 (  0.07)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  10/  26]	Loss 0.358 (0.372)	test_acc   0.85 (  0.85)	test_minacc   0.04 (  0.05)	test_majacc   0.98 (  0.99)	Loss_d 0.358 (0.372)	test_acc_d   0.85 (  0.85)	test_minacc_d   0.04 (  0.05)	test_majacc_d   0.98 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  20/  26]	Loss 0.342 (0.375)	test_acc   0.87 (  0.85)	test_minacc   0.10 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.342 (0.375)	test_acc_d   0.87 (  0.85)	test_minacc_d   0.10 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
Test: [  26/  26]	Loss 0.302 (0.375)	test_acc   0.88 (  0.85)	test_minacc   0.10 (  0.05)	test_majacc   0.99 (  0.99)	Loss_d 0.302 (0.375)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.10 (  0.05)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.94 (  0.94)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 65.02it/s]
Test: [  0/  1]	Loss 1.853 (1.853)	test_acc   0.14 (  0.14)	test_minacc   0.05 (  0.05)	test_majacc   1.00 (  1.00)	Loss_d 1.853 (1.853)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.05 (  0.05)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
Test: [  1/  1]	Loss 1.853 (1.853)	test_acc   0.14 (  0.14)	test_minacc   0.05 (  0.05)	test_majacc   1.00 (  1.00)	Loss_d 1.853 (1.853)	test_acc_d   0.14 (  0.14)	test_minacc_d   0.05 (  0.05)	test_majacc_d   1.00 (  1.00)	test_corr_d   0.90 (  0.90)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=1.0/125/checkpoints/model_best.pth
Overall Timing[  3/  1]	epoch_time 0.0348 (0.0430)	validation_time 0.0005 (0.0020)	train_time 0.0342 (0.0404)
record: (train_acc, test_acc) (0.8481000253558159, 0.14400000870227814)
last accs (train_acc, test_acc) (0.8481000253558159, 0.14400000870227814)
current lr:  0.006
current prune rate:  1
