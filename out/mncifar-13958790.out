hello
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240904_234536-8tvyb517
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/8tvyb517
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, classes_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=13, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1220
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5998, 3, 32, 32) (6002, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:39,  1.58s/it] 19%|#9        | 5/26 [00:01<00:05,  3.80it/s] 31%|###       | 8/26 [00:01<00:02,  6.50it/s] 42%|####2     | 11/26 [00:01<00:01,  9.52it/s] 58%|#####7    | 15/26 [00:02<00:00, 13.74it/s] 73%|#######3  | 19/26 [00:02<00:00, 17.38it/s] 88%|########8 | 23/26 [00:02<00:00, 20.64it/s]100%|##########| 26/26 [00:02<00:00, 13.57it/s]100%|##########| 26/26 [00:02<00:00,  9.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 13
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.007 (4.889)	train_nll   0.54 (  0.60)	train_penalty   0.01 (  0.15)	weight_norm   7.95 (  8.58)	train_acc   0.72 (  0.73)	train_minacc   0.21 (  0.27)	train_majacc   0.78 (  0.82)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.90it/s] 23%|##3       | 6/26 [00:00<00:00, 30.18it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.18it/s] 42%|####2     | 11/26 [00:00<00:00, 37.99it/s] 65%|######5   | 17/26 [00:00<00:00, 40.48it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.48it/s] 88%|########8 | 23/26 [00:00<00:00, 44.78it/s]100%|##########| 26/26 [00:00<00:00, 37.52it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.62 (  0.62)	test_minacc   0.39 (  0.39)	test_majacc   0.65 (  0.65)	Loss_d 0.635 (0.635)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.544 (0.593)	test_acc   0.73 (  0.68)	test_minacc   0.55 (  0.47)	test_majacc   0.75 (  0.72)	Loss_d 0.544 (0.593)	test_acc_d   0.73 (  0.68)	test_minacc_d   0.55 (  0.47)	test_majacc_d   0.75 (  0.72)	test_corr_d   0.58 (  0.55)
Test: [  20/  26]	Loss 0.571 (0.586)	test_acc   0.70 (  0.69)	test_minacc   0.47 (  0.48)	test_majacc   0.75 (  0.73)	Loss_d 0.571 (0.586)	test_acc_d   0.70 (  0.69)	test_minacc_d   0.47 (  0.48)	test_majacc_d   0.75 (  0.73)	test_corr_d   0.58 (  0.55)
Test: [  26/  26]	Loss 0.624 (0.589)	test_acc   0.66 (  0.68)	test_minacc   0.32 (  0.46)	test_majacc   0.70 (  0.72)	Loss_d 0.624 (0.589)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.32 (  0.46)	test_majacc_d   0.70 (  0.72)	test_corr_d   0.53 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.44it/s]100%|##########| 1/1 [00:00<00:00,  2.44it/s]
Test: [  0/  1]	Loss 0.828 (0.828)	test_acc   0.40 (  0.40)	test_minacc   0.36 (  0.36)	test_majacc   0.74 (  0.74)	Loss_d 0.828 (0.828)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.39 (  0.39)
Test: [  1/  1]	Loss 0.828 (0.828)	test_acc   0.40 (  0.40)	test_minacc   0.36 (  0.36)	test_majacc   0.74 (  0.74)	Loss_d 0.828 (0.828)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.39 (  0.39)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/20/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0925 (0.0925)	validation_time 0.0069 (0.0069)	train_time 0.0661 (0.0661)
record: (train_acc, test_acc) (0.6849000305533409, 0.4020000100135803)
last accs (train_acc, test_acc) (0.6849000305533409, 0.4020000100135803)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 15%|#5        | 4/26 [00:00<00:01, 19.59it/s] 27%|##6       | 7/26 [00:00<00:00, 24.05it/s] 38%|###8      | 10/26 [00:00<00:00, 26.23it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.98it/s] 69%|######9   | 18/26 [00:00<00:00, 28.68it/s] 85%|########4 | 22/26 [00:00<00:00, 29.27it/s]100%|##########| 26/26 [00:00<00:00, 29.98it/s]100%|##########| 26/26 [00:01<00:00, 25.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.003 (0.002)	train_nll   0.62 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.84)	train_acc   0.62 (  0.63)	train_minacc   0.32 (  0.54)	train_majacc   0.66 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.94it/s] 23%|##3       | 6/26 [00:00<00:00, 27.65it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.65it/s] 46%|####6     | 12/26 [00:00<00:00, 38.75it/s] 65%|######5   | 17/26 [00:00<00:00, 40.83it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.83it/s] 88%|########8 | 23/26 [00:00<00:00, 46.25it/s]100%|##########| 26/26 [00:00<00:00, 37.47it/s]
Test: [   0/  26]	Loss 0.565 (0.565)	test_acc   0.71 (  0.71)	test_minacc   0.49 (  0.49)	test_majacc   0.73 (  0.73)	Loss_d 0.565 (0.565)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.559 (0.566)	test_acc   0.74 (  0.71)	test_minacc   0.51 (  0.48)	test_majacc   0.77 (  0.75)	Loss_d 0.559 (0.566)	test_acc_d   0.74 (  0.71)	test_minacc_d   0.51 (  0.48)	test_majacc_d   0.77 (  0.75)	test_corr_d   0.60 (  0.55)
Test: [  20/  26]	Loss 0.569 (0.564)	test_acc   0.74 (  0.72)	test_minacc   0.54 (  0.49)	test_majacc   0.78 (  0.76)	Loss_d 0.569 (0.564)	test_acc_d   0.74 (  0.72)	test_minacc_d   0.54 (  0.49)	test_majacc_d   0.78 (  0.76)	test_corr_d   0.56 (  0.55)
Test: [  26/  26]	Loss 0.624 (0.566)	test_acc   0.63 (  0.72)	test_minacc   0.36 (  0.49)	test_majacc   0.67 (  0.76)	Loss_d 0.624 (0.566)	test_acc_d   0.63 (  0.72)	test_minacc_d   0.36 (  0.49)	test_majacc_d   0.67 (  0.76)	test_corr_d   0.47 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.64it/s]
Test: [  0/  1]	Loss 0.857 (0.857)	test_acc   0.42 (  0.42)	test_minacc   0.39 (  0.39)	test_majacc   0.69 (  0.69)	Loss_d 0.857 (0.857)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 0.857 (0.857)	test_acc   0.42 (  0.42)	test_minacc   0.39 (  0.39)	test_majacc   0.69 (  0.69)	Loss_d 0.857 (0.857)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.38 (  0.38)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/20/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0383 (0.0654)	validation_time 0.0004 (0.0036)	train_time 0.0379 (0.0520)
record: (train_acc, test_acc) (0.7165000321865082, 0.4180000126361847)
last accs (train_acc, test_acc) (0.7165000321865082, 0.4180000126361847)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.52it/s] 19%|#9        | 5/26 [00:00<00:00, 22.28it/s] 31%|###       | 8/26 [00:00<00:00, 25.01it/s] 42%|####2     | 11/26 [00:00<00:00, 25.22it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.77it/s] 65%|######5   | 17/26 [00:00<00:00, 26.83it/s] 81%|########  | 21/26 [00:00<00:00, 27.76it/s] 92%|#########2| 24/26 [00:00<00:00, 28.35it/s]100%|##########| 26/26 [00:01<00:00, 25.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.002 (0.004)	train_nll   0.56 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.69 (  0.67)	train_minacc   0.29 (  0.56)	train_majacc   0.74 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 23%|##3       | 6/26 [00:00<00:00, 25.87it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.87it/s] 42%|####2     | 11/26 [00:00<00:00, 34.98it/s] 65%|######5   | 17/26 [00:00<00:00, 39.70it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.70it/s] 88%|########8 | 23/26 [00:00<00:00, 45.02it/s]100%|##########| 26/26 [00:00<00:00, 36.09it/s]
Test: [   0/  26]	Loss 0.491 (0.491)	test_acc   0.80 (  0.80)	test_minacc   0.41 (  0.41)	test_majacc   0.84 (  0.84)	Loss_d 0.491 (0.491)	test_acc_d   0.80 (  0.80)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.73 (  0.73)
Test: [  10/  26]	Loss 0.520 (0.501)	test_acc   0.74 (  0.76)	test_minacc   0.26 (  0.37)	test_majacc   0.80 (  0.83)	Loss_d 0.520 (0.501)	test_acc_d   0.74 (  0.76)	test_minacc_d   0.26 (  0.37)	test_majacc_d   0.80 (  0.83)	test_corr_d   0.74 (  0.74)
Test: [  20/  26]	Loss 0.530 (0.503)	test_acc   0.74 (  0.76)	test_minacc   0.37 (  0.36)	test_majacc   0.82 (  0.83)	Loss_d 0.530 (0.503)	test_acc_d   0.74 (  0.76)	test_minacc_d   0.37 (  0.36)	test_majacc_d   0.82 (  0.83)	test_corr_d   0.72 (  0.74)
Test: [  26/  26]	Loss 0.543 (0.504)	test_acc   0.71 (  0.76)	test_minacc   0.29 (  0.36)	test_majacc   0.77 (  0.83)	Loss_d 0.543 (0.504)	test_acc_d   0.71 (  0.76)	test_minacc_d   0.29 (  0.36)	test_majacc_d   0.77 (  0.83)	test_corr_d   0.67 (  0.74)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.31it/s]
Test: [  0/  1]	Loss 0.971 (0.971)	test_acc   0.35 (  0.35)	test_minacc   0.30 (  0.30)	test_majacc   0.79 (  0.79)	Loss_d 0.971 (0.971)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.62 (  0.62)
Test: [  1/  1]	Loss 0.971 (0.971)	test_acc   0.35 (  0.35)	test_minacc   0.30 (  0.30)	test_majacc   0.79 (  0.79)	Loss_d 0.971 (0.971)	test_acc_d   0.35 (  0.35)	test_minacc_d   0.30 (  0.30)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.62 (  0.62)
Overall Timing[  2/  1]	epoch_time 0.0400 (0.0570)	validation_time 0.0004 (0.0026)	train_time 0.0396 (0.0479)
record: (train_acc, test_acc) (0.7165000321865082, 0.4180000126361847)
last accs (train_acc, test_acc) (0.756700027167797, 0.3450000286102295)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.28it/s] 15%|#5        | 4/26 [00:00<00:01, 20.50it/s] 27%|##6       | 7/26 [00:00<00:00, 23.89it/s] 38%|###8      | 10/26 [00:00<00:00, 25.67it/s] 50%|#####     | 13/26 [00:00<00:00, 26.94it/s] 62%|######1   | 16/26 [00:00<00:00, 27.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.79it/s] 85%|########4 | 22/26 [00:00<00:00, 28.43it/s] 96%|#########6| 25/26 [00:00<00:00, 28.76it/s]100%|##########| 26/26 [00:01<00:00, 25.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.002 (0.004)	train_nll   0.62 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.63 (  0.69)	train_minacc   0.32 (  0.53)	train_majacc   0.67 (  0.72)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.87it/s] 23%|##3       | 6/26 [00:00<00:00, 29.85it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.85it/s] 42%|####2     | 11/26 [00:00<00:00, 37.62it/s] 65%|######5   | 17/26 [00:00<00:00, 42.44it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.44it/s] 88%|########8 | 23/26 [00:00<00:00, 47.12it/s]100%|##########| 26/26 [00:00<00:00, 38.80it/s]
Test: [   0/  26]	Loss 0.581 (0.581)	test_acc   0.68 (  0.68)	test_minacc   0.32 (  0.32)	test_majacc   0.72 (  0.72)	Loss_d 0.581 (0.581)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.32 (  0.32)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.509 (0.534)	test_acc   0.76 (  0.73)	test_minacc   0.38 (  0.37)	test_majacc   0.81 (  0.80)	Loss_d 0.509 (0.534)	test_acc_d   0.76 (  0.73)	test_minacc_d   0.38 (  0.37)	test_majacc_d   0.81 (  0.80)	test_corr_d   0.67 (  0.66)
Test: [  20/  26]	Loss 0.525 (0.527)	test_acc   0.76 (  0.75)	test_minacc   0.34 (  0.37)	test_majacc   0.85 (  0.81)	Loss_d 0.525 (0.527)	test_acc_d   0.76 (  0.75)	test_minacc_d   0.34 (  0.37)	test_majacc_d   0.85 (  0.81)	test_corr_d   0.69 (  0.67)
Test: [  26/  26]	Loss 0.571 (0.528)	test_acc   0.69 (  0.74)	test_minacc   0.29 (  0.36)	test_majacc   0.74 (  0.81)	Loss_d 0.571 (0.528)	test_acc_d   0.69 (  0.74)	test_minacc_d   0.29 (  0.36)	test_majacc_d   0.74 (  0.81)	test_corr_d   0.60 (  0.68)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.99it/s]
Test: [  0/  1]	Loss 0.938 (0.938)	test_acc   0.33 (  0.33)	test_minacc   0.28 (  0.28)	test_majacc   0.78 (  0.78)	Loss_d 0.938 (0.938)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.55 (  0.55)
Test: [  1/  1]	Loss 0.938 (0.938)	test_acc   0.33 (  0.33)	test_minacc   0.28 (  0.28)	test_majacc   0.78 (  0.78)	Loss_d 0.938 (0.938)	test_acc_d   0.33 (  0.33)	test_minacc_d   0.28 (  0.28)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.55 (  0.55)
Overall Timing[  3/  1]	epoch_time 0.0384 (0.0523)	validation_time 0.0005 (0.0020)	train_time 0.0379 (0.0454)
record: (train_acc, test_acc) (0.7165000321865082, 0.4180000126361847)
last accs (train_acc, test_acc) (0.7448000306487084, 0.3320000171661377)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.24it/s] 15%|#5        | 4/26 [00:00<00:01, 16.99it/s] 27%|##6       | 7/26 [00:00<00:00, 21.72it/s] 42%|####2     | 11/26 [00:00<00:00, 25.56it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.42it/s] 69%|######9   | 18/26 [00:00<00:00, 27.39it/s] 85%|########4 | 22/26 [00:00<00:00, 28.66it/s]100%|##########| 26/26 [00:00<00:00, 29.54it/s]100%|##########| 26/26 [00:01<00:00, 24.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.001 (0.006)	train_nll   0.57 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.68 (  0.68)	train_minacc   0.43 (  0.45)	train_majacc   0.71 (  0.72)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.48it/s] 23%|##3       | 6/26 [00:00<00:00, 24.90it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.90it/s] 46%|####6     | 12/26 [00:00<00:00, 36.73it/s] 65%|######5   | 17/26 [00:00<00:00, 39.78it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.78it/s] 88%|########8 | 23/26 [00:00<00:00, 45.75it/s]100%|##########| 26/26 [00:00<00:00, 36.34it/s]
Test: [   0/  26]	Loss 0.569 (0.569)	test_acc   0.71 (  0.71)	test_minacc   0.34 (  0.34)	test_majacc   0.75 (  0.75)	Loss_d 0.569 (0.569)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.469 (0.525)	test_acc   0.81 (  0.75)	test_minacc   0.53 (  0.45)	test_majacc   0.85 (  0.80)	Loss_d 0.469 (0.525)	test_acc_d   0.81 (  0.75)	test_minacc_d   0.53 (  0.45)	test_majacc_d   0.85 (  0.80)	test_corr_d   0.70 (  0.68)
Test: [  20/  26]	Loss 0.528 (0.521)	test_acc   0.76 (  0.76)	test_minacc   0.49 (  0.46)	test_majacc   0.82 (  0.81)	Loss_d 0.528 (0.521)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.49 (  0.46)	test_majacc_d   0.82 (  0.81)	test_corr_d   0.66 (  0.68)
Test: [  26/  26]	Loss 0.555 (0.520)	test_acc   0.74 (  0.76)	test_minacc   0.46 (  0.45)	test_majacc   0.78 (  0.81)	Loss_d 0.555 (0.520)	test_acc_d   0.74 (  0.76)	test_minacc_d   0.46 (  0.45)	test_majacc_d   0.78 (  0.81)	test_corr_d   0.63 (  0.69)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.74it/s]
Test: [  0/  1]	Loss 0.891 (0.891)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.77 (  0.77)	Loss_d 0.891 (0.891)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.50 (  0.50)
Test: [  1/  1]	Loss 0.891 (0.891)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.77 (  0.77)	Loss_d 0.891 (0.891)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.50 (  0.50)
Overall Timing[  4/  1]	epoch_time 0.0389 (0.0496)	validation_time 0.0004 (0.0017)	train_time 0.0385 (0.0440)
record: (train_acc, test_acc) (0.7165000321865082, 0.4180000126361847)
last accs (train_acc, test_acc) (0.7593000364899636, 0.3850000202655792)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.06it/s] 15%|#5        | 4/26 [00:00<00:01, 18.29it/s] 27%|##6       | 7/26 [00:00<00:00, 22.75it/s] 38%|###8      | 10/26 [00:00<00:00, 24.98it/s] 50%|#####     | 13/26 [00:00<00:00, 26.26it/s] 62%|######1   | 16/26 [00:00<00:00, 27.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.25it/s] 88%|########8 | 23/26 [00:00<00:00, 29.30it/s]100%|##########| 26/26 [00:01<00:00, 25.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.050 (0.006)	train_nll   0.73 (  0.59)	train_penalty   0.05 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.58 (  0.67)	train_minacc   0.57 (  0.59)	train_majacc   0.58 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.90it/s] 27%|##6       | 7/26 [00:00<00:00, 32.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.20it/s] 46%|####6     | 12/26 [00:00<00:00, 37.95it/s] 69%|######9   | 18/26 [00:00<00:00, 44.00it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.00it/s] 92%|#########2| 24/26 [00:00<00:00, 46.50it/s]100%|##########| 26/26 [00:00<00:00, 39.38it/s]
Test: [   0/  26]	Loss 0.546 (0.546)	test_acc   0.74 (  0.74)	test_minacc   0.49 (  0.49)	test_majacc   0.77 (  0.77)	Loss_d 0.546 (0.546)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.479 (0.519)	test_acc   0.78 (  0.73)	test_minacc   0.53 (  0.48)	test_majacc   0.81 (  0.78)	Loss_d 0.479 (0.519)	test_acc_d   0.78 (  0.73)	test_minacc_d   0.53 (  0.48)	test_majacc_d   0.81 (  0.78)	test_corr_d   0.62 (  0.57)
Test: [  20/  26]	Loss 0.519 (0.511)	test_acc   0.72 (  0.74)	test_minacc   0.50 (  0.50)	test_majacc   0.76 (  0.79)	Loss_d 0.519 (0.511)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.76 (  0.79)	test_corr_d   0.53 (  0.58)
Test: [  26/  26]	Loss 0.543 (0.510)	test_acc   0.71 (  0.74)	test_minacc   0.54 (  0.50)	test_majacc   0.73 (  0.79)	Loss_d 0.543 (0.510)	test_acc_d   0.71 (  0.74)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.73 (  0.79)	test_corr_d   0.54 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.99it/s]
Test: [  0/  1]	Loss 0.878 (0.878)	test_acc   0.46 (  0.46)	test_minacc   0.42 (  0.42)	test_majacc   0.78 (  0.78)	Loss_d 0.878 (0.878)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 0.878 (0.878)	test_acc   0.46 (  0.46)	test_minacc   0.42 (  0.42)	test_majacc   0.78 (  0.78)	Loss_d 0.878 (0.878)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.29 (  0.29)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/20/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0380 (0.0477)	validation_time 0.0004 (0.0015)	train_time 0.0375 (0.0429)
record: (train_acc, test_acc) (0.7431000303030014, 0.45600003004074097)
last accs (train_acc, test_acc) (0.7431000303030014, 0.45600003004074097)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.09it/s] 15%|#5        | 4/26 [00:00<00:01, 16.28it/s] 27%|##6       | 7/26 [00:00<00:00, 21.42it/s] 38%|###8      | 10/26 [00:00<00:00, 24.30it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.41it/s] 69%|######9   | 18/26 [00:00<00:00, 29.10it/s] 85%|########4 | 22/26 [00:00<00:00, 30.33it/s]100%|##########| 26/26 [00:00<00:00, 31.24it/s]100%|##########| 26/26 [00:01<00:00, 25.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.005 (0.007)	train_nll   0.66 (  0.57)	train_penalty   0.00 (  0.01)	weight_norm   7.78 (  7.78)	train_acc   0.52 (  0.69)	train_minacc   0.50 (  0.50)	train_majacc   0.52 (  0.72)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 27%|##6       | 7/26 [00:00<00:00, 28.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.89it/s] 50%|#####     | 13/26 [00:00<00:00, 39.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.11it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.11it/s] 96%|#########6| 25/26 [00:00<00:00, 47.03it/s]100%|##########| 26/26 [00:00<00:00, 38.09it/s]
Test: [   0/  26]	Loss 0.638 (0.638)	test_acc   0.59 (  0.59)	test_minacc   0.54 (  0.54)	test_majacc   0.59 (  0.59)	Loss_d 0.638 (0.638)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.667 (0.638)	test_acc   0.55 (  0.58)	test_minacc   0.45 (  0.52)	test_majacc   0.56 (  0.59)	Loss_d 0.667 (0.638)	test_acc_d   0.55 (  0.58)	test_minacc_d   0.45 (  0.52)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.43 (  0.41)
Test: [  20/  26]	Loss 0.655 (0.632)	test_acc   0.56 (  0.59)	test_minacc   0.51 (  0.54)	test_majacc   0.57 (  0.59)	Loss_d 0.655 (0.632)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.57 (  0.59)	test_corr_d   0.40 (  0.42)
Test: [  26/  26]	Loss 0.608 (0.631)	test_acc   0.58 (  0.59)	test_minacc   0.54 (  0.55)	test_majacc   0.59 (  0.59)	Loss_d 0.608 (0.631)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.48 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.14it/s]
Test: [  0/  1]	Loss 0.854 (0.854)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.62 (  0.62)	Loss_d 0.854 (0.854)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 0.854 (0.854)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.62 (  0.62)	Loss_d 0.854 (0.854)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.29 (  0.29)
Overall Timing[  6/  1]	epoch_time 0.0381 (0.0463)	validation_time 0.0004 (0.0014)	train_time 0.0377 (0.0422)
record: (train_acc, test_acc) (0.7431000303030014, 0.45600003004074097)
last accs (train_acc, test_acc) (0.5884000135660171, 0.5240000486373901)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.53it/s] 15%|#5        | 4/26 [00:00<00:01, 15.49it/s] 27%|##6       | 7/26 [00:00<00:00, 20.62it/s] 42%|####2     | 11/26 [00:00<00:00, 24.63it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.81it/s] 69%|######9   | 18/26 [00:00<00:00, 27.55it/s] 85%|########4 | 22/26 [00:00<00:00, 28.51it/s]100%|##########| 26/26 [00:01<00:00, 29.32it/s]100%|##########| 26/26 [00:01<00:00, 24.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.006 (0.003)	train_nll   0.49 (  0.60)	train_penalty   0.01 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.74 (  0.63)	train_minacc   0.57 (  0.57)	train_majacc   0.77 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 19%|#9        | 5/26 [00:00<00:00, 24.60it/s] 38%|###8      | 10/26 [00:00<00:00, 33.95it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.95it/s] 62%|######1   | 16/26 [00:00<00:00, 40.78it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.78it/s] 85%|########4 | 22/26 [00:00<00:00, 45.96it/s]100%|##########| 26/26 [00:00<00:00, 37.67it/s]
Test: [   0/  26]	Loss 0.588 (0.588)	test_acc   0.65 (  0.65)	test_minacc   0.59 (  0.59)	test_majacc   0.65 (  0.65)	Loss_d 0.588 (0.588)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.562 (0.572)	test_acc   0.67 (  0.67)	test_minacc   0.64 (  0.58)	test_majacc   0.68 (  0.68)	Loss_d 0.562 (0.572)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.64 (  0.58)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.46 (  0.48)
Test: [  20/  26]	Loss 0.565 (0.563)	test_acc   0.67 (  0.68)	test_minacc   0.57 (  0.59)	test_majacc   0.69 (  0.69)	Loss_d 0.565 (0.563)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.46 (  0.49)
Test: [  26/  26]	Loss 0.518 (0.564)	test_acc   0.72 (  0.68)	test_minacc   0.64 (  0.58)	test_majacc   0.73 (  0.69)	Loss_d 0.518 (0.564)	test_acc_d   0.72 (  0.68)	test_minacc_d   0.64 (  0.58)	test_majacc_d   0.73 (  0.69)	test_corr_d   0.57 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.13it/s]
Test: [  0/  1]	Loss 0.946 (0.946)	test_acc   0.48 (  0.48)	test_minacc   0.46 (  0.46)	test_majacc   0.71 (  0.71)	Loss_d 0.946 (0.946)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.946 (0.946)	test_acc   0.48 (  0.48)	test_minacc   0.46 (  0.46)	test_majacc   0.71 (  0.71)	Loss_d 0.946 (0.946)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.23 (  0.23)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/20/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0392 (0.0454)	validation_time 0.0004 (0.0012)	train_time 0.0387 (0.0417)
record: (train_acc, test_acc) (0.6778000288009643, 0.484000027179718)
last accs (train_acc, test_acc) (0.6778000288009643, 0.484000027179718)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.61it/s] 15%|#5        | 4/26 [00:00<00:01, 20.08it/s] 27%|##6       | 7/26 [00:00<00:00, 23.45it/s] 42%|####2     | 11/26 [00:00<00:00, 26.43it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.95it/s] 69%|######9   | 18/26 [00:00<00:00, 28.21it/s] 81%|########  | 21/26 [00:00<00:00, 28.60it/s] 96%|#########6| 25/26 [00:00<00:00, 29.78it/s]100%|##########| 26/26 [00:01<00:00, 25.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.002 (0.003)	train_nll   0.63 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.58 (  0.66)	train_minacc   0.75 (  0.60)	train_majacc   0.56 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 27%|##6       | 7/26 [00:00<00:00, 31.18it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.18it/s] 50%|#####     | 13/26 [00:00<00:00, 41.05it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.86it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.86it/s] 96%|#########6| 25/26 [00:00<00:00, 48.23it/s]100%|##########| 26/26 [00:00<00:00, 39.31it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.51 (  0.51)	test_minacc   0.66 (  0.66)	test_majacc   0.50 (  0.50)	Loss_d 0.667 (0.667)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.621 (0.657)	test_acc   0.62 (  0.54)	test_minacc   0.74 (  0.71)	test_majacc   0.60 (  0.51)	Loss_d 0.621 (0.657)	test_acc_d   0.62 (  0.54)	test_minacc_d   0.74 (  0.71)	test_majacc_d   0.60 (  0.51)	test_corr_d   0.30 (  0.21)
Test: [  20/  26]	Loss 0.641 (0.652)	test_acc   0.56 (  0.55)	test_minacc   0.77 (  0.71)	test_majacc   0.52 (  0.52)	Loss_d 0.641 (0.652)	test_acc_d   0.56 (  0.55)	test_minacc_d   0.77 (  0.71)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.16 (  0.21)
Test: [  26/  26]	Loss 0.654 (0.654)	test_acc   0.54 (  0.55)	test_minacc   0.75 (  0.71)	test_majacc   0.52 (  0.52)	Loss_d 0.654 (0.654)	test_acc_d   0.54 (  0.55)	test_minacc_d   0.75 (  0.71)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.24 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.24it/s]
Test: [  0/  1]	Loss 0.716 (0.716)	test_acc   0.64 (  0.64)	test_minacc   0.65 (  0.65)	test_majacc   0.51 (  0.51)	Loss_d 0.716 (0.716)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.716 (0.716)	test_acc   0.64 (  0.64)	test_minacc   0.65 (  0.65)	test_majacc   0.51 (  0.51)	Loss_d 0.716 (0.716)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.07 ( -0.07)
Overall Timing[  8/  1]	epoch_time 0.0375 (0.0446)	validation_time 0.0004 (0.0011)	train_time 0.0371 (0.0412)
record: (train_acc, test_acc) (0.6778000288009643, 0.484000027179718)
last accs (train_acc, test_acc) (0.5462000178098678, 0.6350000500679016)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 15%|#5        | 4/26 [00:00<00:01, 18.75it/s] 27%|##6       | 7/26 [00:00<00:00, 22.38it/s] 42%|####2     | 11/26 [00:00<00:00, 26.41it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.06it/s] 88%|########8 | 23/26 [00:00<00:00, 30.47it/s]100%|##########| 26/26 [00:00<00:00, 26.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.001 (0.002)	train_nll   0.69 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.48 (  0.55)	train_minacc   0.43 (  0.57)	train_majacc   0.49 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.65it/s] 27%|##6       | 7/26 [00:00<00:00, 33.47it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.47it/s] 46%|####6     | 12/26 [00:00<00:00, 38.52it/s] 69%|######9   | 18/26 [00:00<00:00, 45.47it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.47it/s] 92%|#########2| 24/26 [00:00<00:00, 46.10it/s]100%|##########| 26/26 [00:00<00:00, 38.91it/s]
Test: [   0/  26]	Loss 0.682 (0.682)	test_acc   0.50 (  0.50)	test_minacc   0.63 (  0.63)	test_majacc   0.49 (  0.49)	Loss_d 0.682 (0.682)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.675 (0.690)	test_acc   0.50 (  0.49)	test_minacc   0.60 (  0.60)	test_majacc   0.49 (  0.47)	Loss_d 0.675 (0.690)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.49 (  0.47)	test_corr_d   0.12 (  0.08)
Test: [  20/  26]	Loss 0.684 (0.687)	test_acc   0.51 (  0.49)	test_minacc   0.66 (  0.60)	test_majacc   0.48 (  0.47)	Loss_d 0.684 (0.687)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.66 (  0.60)	test_majacc_d   0.48 (  0.47)	test_corr_d   0.03 (  0.08)
Test: [  26/  26]	Loss 0.690 (0.688)	test_acc   0.48 (  0.49)	test_minacc   0.46 (  0.60)	test_majacc   0.48 (  0.47)	Loss_d 0.690 (0.688)	test_acc_d   0.48 (  0.49)	test_minacc_d   0.46 (  0.60)	test_majacc_d   0.48 (  0.47)	test_corr_d   0.13 (  0.08)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.29it/s]
Test: [  0/  1]	Loss 0.722 (0.722)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.43 (  0.43)	Loss_d 0.722 (0.722)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.722 (0.722)	test_acc   0.56 (  0.56)	test_minacc   0.57 (  0.57)	test_majacc   0.43 (  0.43)	Loss_d 0.722 (0.722)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.43 (  0.43)	test_corr_d  -0.02 ( -0.02)
Overall Timing[  9/  1]	epoch_time 0.0379 (0.0439)	validation_time 0.0004 (0.0011)	train_time 0.0375 (0.0408)
record: (train_acc, test_acc) (0.6778000288009643, 0.484000027179718)
last accs (train_acc, test_acc) (0.4879000116288662, 0.5600000023841858)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.38it/s] 15%|#5        | 4/26 [00:00<00:01, 16.94it/s] 27%|##6       | 7/26 [00:00<00:00, 21.32it/s] 38%|###8      | 10/26 [00:00<00:00, 23.92it/s] 50%|#####     | 13/26 [00:00<00:00, 25.46it/s] 65%|######5   | 17/26 [00:00<00:00, 27.61it/s] 81%|########  | 21/26 [00:00<00:00, 29.29it/s] 96%|#########6| 25/26 [00:00<00:00, 29.99it/s]100%|##########| 26/26 [00:01<00:00, 24.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.004 (0.002)	train_nll   0.55 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.70 (  0.60)	train_minacc   0.50 (  0.58)	train_majacc   0.73 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.53it/s] 19%|#9        | 5/26 [00:00<00:00, 23.75it/s] 38%|###8      | 10/26 [00:00<00:00, 34.06it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.06it/s] 58%|#####7    | 15/26 [00:00<00:00, 39.94it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.10it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.10it/s]100%|##########| 26/26 [00:00<00:00, 46.13it/s]100%|##########| 26/26 [00:00<00:00, 36.16it/s]
Test: [   0/  26]	Loss 0.569 (0.569)	test_acc   0.67 (  0.67)	test_minacc   0.61 (  0.61)	test_majacc   0.68 (  0.68)	Loss_d 0.569 (0.569)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.573 (0.585)	test_acc   0.65 (  0.62)	test_minacc   0.55 (  0.57)	test_majacc   0.66 (  0.63)	Loss_d 0.573 (0.585)	test_acc_d   0.65 (  0.62)	test_minacc_d   0.55 (  0.57)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.49 (  0.45)
Test: [  20/  26]	Loss 0.572 (0.577)	test_acc   0.65 (  0.64)	test_minacc   0.60 (  0.59)	test_majacc   0.66 (  0.65)	Loss_d 0.572 (0.577)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.60 (  0.59)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.44 (  0.46)
Test: [  26/  26]	Loss 0.564 (0.579)	test_acc   0.67 (  0.64)	test_minacc   0.46 (  0.58)	test_majacc   0.69 (  0.65)	Loss_d 0.564 (0.579)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.46 (  0.58)	test_majacc_d   0.69 (  0.65)	test_corr_d   0.54 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.43it/s]
Test: [  0/  1]	Loss 0.846 (0.846)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.70 (  0.70)	Loss_d 0.846 (0.846)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 0.846 (0.846)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.70 (  0.70)	Loss_d 0.846 (0.846)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.25 (  0.25)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/20/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0388 (0.0434)	validation_time 0.0004 (0.0010)	train_time 0.0383 (0.0406)
record: (train_acc, test_acc) (0.6369000198841095, 0.5170000195503235)
last accs (train_acc, test_acc) (0.6369000198841095, 0.5170000195503235)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.35it/s] 15%|#5        | 4/26 [00:00<00:01, 17.01it/s] 27%|##6       | 7/26 [00:00<00:00, 21.51it/s] 38%|###8      | 10/26 [00:00<00:00, 24.29it/s] 50%|#####     | 13/26 [00:00<00:00, 25.76it/s] 65%|######5   | 17/26 [00:00<00:00, 26.99it/s] 81%|########  | 21/26 [00:00<00:00, 28.57it/s] 96%|#########6| 25/26 [00:00<00:00, 29.87it/s]100%|##########| 26/26 [00:01<00:00, 24.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.57 (  0.61)	train_minacc   0.61 (  0.61)	train_majacc   0.57 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.33it/s] 23%|##3       | 6/26 [00:00<00:00, 30.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.50it/s] 42%|####2     | 11/26 [00:00<00:00, 37.42it/s] 65%|######5   | 17/26 [00:00<00:00, 41.74it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.74it/s] 88%|########8 | 23/26 [00:00<00:00, 47.08it/s]100%|##########| 26/26 [00:00<00:00, 38.77it/s]
Test: [   0/  26]	Loss 0.685 (0.685)	test_acc   0.55 (  0.55)	test_minacc   0.56 (  0.56)	test_majacc   0.55 (  0.55)	Loss_d 0.685 (0.685)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.676 (0.664)	test_acc   0.56 (  0.57)	test_minacc   0.55 (  0.52)	test_majacc   0.57 (  0.58)	Loss_d 0.676 (0.664)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.55 (  0.52)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.19 (  0.22)
Test: [  20/  26]	Loss 0.662 (0.657)	test_acc   0.58 (  0.59)	test_minacc   0.63 (  0.55)	test_majacc   0.57 (  0.59)	Loss_d 0.662 (0.657)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.63 (  0.55)	test_majacc_d   0.57 (  0.59)	test_corr_d   0.14 (  0.22)
Test: [  26/  26]	Loss 0.646 (0.657)	test_acc   0.60 (  0.59)	test_minacc   0.64 (  0.55)	test_majacc   0.60 (  0.59)	Loss_d 0.646 (0.657)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.64 (  0.55)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.28 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 42.11it/s]
Test: [  0/  1]	Loss 0.730 (0.730)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.54 (  0.54)	Loss_d 0.730 (0.730)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.730 (0.730)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.54 (  0.54)	Loss_d 0.730 (0.730)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.06 (  0.06)
Overall Timing[ 11/  1]	epoch_time 0.0386 (0.0430)	validation_time 0.0005 (0.0010)	train_time 0.0381 (0.0404)
record: (train_acc, test_acc) (0.6369000198841095, 0.5170000195503235)
last accs (train_acc, test_acc) (0.586400012075901, 0.5060000419616699)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 15%|#5        | 4/26 [00:00<00:01, 17.43it/s] 27%|##6       | 7/26 [00:00<00:00, 22.04it/s] 42%|####2     | 11/26 [00:00<00:00, 25.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.25it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.15it/s] 88%|########8 | 23/26 [00:00<00:00, 29.52it/s]100%|##########| 26/26 [00:01<00:00, 25.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.002 (0.002)	train_nll   0.58 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.70 (  0.62)	train_minacc   0.57 (  0.53)	train_majacc   0.72 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.53it/s] 23%|##3       | 6/26 [00:00<00:00, 30.99it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.99it/s] 46%|####6     | 12/26 [00:00<00:00, 41.63it/s] 65%|######5   | 17/26 [00:00<00:00, 42.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.37it/s] 88%|########8 | 23/26 [00:00<00:00, 46.85it/s]100%|##########| 26/26 [00:00<00:00, 39.01it/s]
Test: [   0/  26]	Loss 0.587 (0.587)	test_acc   0.67 (  0.67)	test_minacc   0.59 (  0.59)	test_majacc   0.68 (  0.68)	Loss_d 0.587 (0.587)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.615 (0.587)	test_acc   0.63 (  0.66)	test_minacc   0.51 (  0.56)	test_majacc   0.65 (  0.68)	Loss_d 0.615 (0.587)	test_acc_d   0.63 (  0.66)	test_minacc_d   0.51 (  0.56)	test_majacc_d   0.65 (  0.68)	test_corr_d   0.42 (  0.42)
Test: [  20/  26]	Loss 0.580 (0.574)	test_acc   0.67 (  0.67)	test_minacc   0.63 (  0.58)	test_majacc   0.68 (  0.69)	Loss_d 0.580 (0.574)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.63 (  0.58)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.40 (  0.43)
Test: [  26/  26]	Loss 0.584 (0.575)	test_acc   0.70 (  0.68)	test_minacc   0.57 (  0.58)	test_majacc   0.72 (  0.69)	Loss_d 0.584 (0.575)	test_acc_d   0.70 (  0.68)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.72 (  0.69)	test_corr_d   0.45 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.26it/s]
Test: [  0/  1]	Loss 0.906 (0.906)	test_acc   0.53 (  0.53)	test_minacc   0.52 (  0.52)	test_majacc   0.64 (  0.64)	Loss_d 0.906 (0.906)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.906 (0.906)	test_acc   0.53 (  0.53)	test_minacc   0.52 (  0.52)	test_majacc   0.64 (  0.64)	Loss_d 0.906 (0.906)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.11 (  0.11)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/20/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0382 (0.0427)	validation_time 0.0004 (0.0009)	train_time 0.0378 (0.0402)
record: (train_acc, test_acc) (0.6751000238060951, 0.5330000519752502)
last accs (train_acc, test_acc) (0.6751000238060951, 0.5330000519752502)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 19%|#9        | 5/26 [00:00<00:00, 21.54it/s] 35%|###4      | 9/26 [00:00<00:00, 25.51it/s] 50%|#####     | 13/26 [00:00<00:00, 27.41it/s] 65%|######5   | 17/26 [00:00<00:00, 28.42it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.80it/s] 88%|########8 | 23/26 [00:00<00:00, 28.85it/s]100%|##########| 26/26 [00:01<00:00, 25.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.002 (0.002)	train_nll   0.57 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.68 (  0.64)	train_minacc   0.64 (  0.62)	train_majacc   0.68 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 27%|##6       | 7/26 [00:00<00:00, 28.33it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.33it/s] 46%|####6     | 12/26 [00:00<00:00, 36.02it/s] 69%|######9   | 18/26 [00:00<00:00, 43.71it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.71it/s] 88%|########8 | 23/26 [00:00<00:00, 44.13it/s]100%|##########| 26/26 [00:00<00:00, 37.70it/s]
Test: [   0/  26]	Loss 0.548 (0.548)	test_acc   0.73 (  0.73)	test_minacc   0.59 (  0.59)	test_majacc   0.75 (  0.75)	Loss_d 0.548 (0.548)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.579 (0.570)	test_acc   0.68 (  0.67)	test_minacc   0.53 (  0.59)	test_majacc   0.70 (  0.68)	Loss_d 0.579 (0.570)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.53 (  0.59)	test_majacc_d   0.70 (  0.68)	test_corr_d   0.47 (  0.45)
Test: [  20/  26]	Loss 0.576 (0.570)	test_acc   0.64 (  0.67)	test_minacc   0.61 (  0.60)	test_majacc   0.65 (  0.68)	Loss_d 0.576 (0.570)	test_acc_d   0.64 (  0.67)	test_minacc_d   0.61 (  0.60)	test_majacc_d   0.65 (  0.68)	test_corr_d   0.45 (  0.45)
Test: [  26/  26]	Loss 0.567 (0.571)	test_acc   0.67 (  0.67)	test_minacc   0.54 (  0.59)	test_majacc   0.68 (  0.68)	Loss_d 0.567 (0.571)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.54 (  0.59)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.48 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.36it/s]
Test: [  0/  1]	Loss 0.849 (0.849)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.70 (  0.70)	Loss_d 0.849 (0.849)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.849 (0.849)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.70 (  0.70)	Loss_d 0.849 (0.849)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.15 (  0.15)
Overall Timing[ 13/  1]	epoch_time 0.0385 (0.0424)	validation_time 0.0004 (0.0009)	train_time 0.0381 (0.0401)
record: (train_acc, test_acc) (0.6751000238060951, 0.5330000519752502)
last accs (train_acc, test_acc) (0.6673000273704529, 0.5320000052452087)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.60it/s] 15%|#5        | 4/26 [00:00<00:01, 19.14it/s] 27%|##6       | 7/26 [00:00<00:00, 23.41it/s] 42%|####2     | 11/26 [00:00<00:00, 26.43it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.10it/s] 65%|######5   | 17/26 [00:00<00:00, 27.98it/s] 81%|########  | 21/26 [00:00<00:00, 28.77it/s] 92%|#########2| 24/26 [00:00<00:00, 28.47it/s]100%|##########| 26/26 [00:01<00:00, 25.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.001 (0.002)	train_nll   0.64 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.57 (  0.63)	train_minacc   0.57 (  0.62)	train_majacc   0.57 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.02it/s] 23%|##3       | 6/26 [00:00<00:00, 25.97it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.97it/s] 42%|####2     | 11/26 [00:00<00:00, 35.06it/s] 65%|######5   | 17/26 [00:00<00:00, 40.48it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.48it/s] 88%|########8 | 23/26 [00:00<00:00, 45.74it/s]100%|##########| 26/26 [00:00<00:00, 36.33it/s]
Test: [   0/  26]	Loss 0.588 (0.588)	test_acc   0.63 (  0.63)	test_minacc   0.54 (  0.54)	test_majacc   0.64 (  0.64)	Loss_d 0.588 (0.588)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.602 (0.592)	test_acc   0.61 (  0.64)	test_minacc   0.45 (  0.60)	test_majacc   0.64 (  0.64)	Loss_d 0.602 (0.592)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.45 (  0.60)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.46 (  0.41)
Test: [  20/  26]	Loss 0.594 (0.593)	test_acc   0.65 (  0.64)	test_minacc   0.59 (  0.61)	test_majacc   0.66 (  0.64)	Loss_d 0.594 (0.593)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.59 (  0.61)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.44 (  0.41)
Test: [  26/  26]	Loss 0.614 (0.593)	test_acc   0.62 (  0.64)	test_minacc   0.43 (  0.61)	test_majacc   0.64 (  0.65)	Loss_d 0.614 (0.593)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.43 (  0.61)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.41 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.33it/s]
Test: [  0/  1]	Loss 0.797 (0.797)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.59 (  0.59)	Loss_d 0.797 (0.797)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.797 (0.797)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.59 (  0.59)	Loss_d 0.797 (0.797)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.09 (  0.09)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/20/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0390 (0.0421)	validation_time 0.0004 (0.0009)	train_time 0.0386 (0.0400)
record: (train_acc, test_acc) (0.6414000198841096, 0.5470000505447388)
last accs (train_acc, test_acc) (0.6414000198841096, 0.5470000505447388)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.34it/s] 12%|#1        | 3/26 [00:00<00:02,  9.55it/s] 23%|##3       | 6/26 [00:00<00:01, 16.35it/s] 35%|###4      | 9/26 [00:00<00:00, 20.72it/s] 46%|####6     | 12/26 [00:00<00:00, 23.60it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.99it/s] 85%|########4 | 22/26 [00:00<00:00, 27.81it/s] 96%|#########6| 25/26 [00:01<00:00, 28.41it/s]100%|##########| 26/26 [00:01<00:00, 22.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0066, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(5.6869e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(3.9765e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.002 (0.004)	train_nll   0.63 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.62 (  0.64)	train_minacc   0.50 (  0.53)	train_majacc   0.63 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.46it/s] 31%|###       | 8/26 [00:00<00:00, 38.74it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.74it/s] 50%|#####     | 13/26 [00:00<00:00, 41.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.64it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.64it/s] 96%|#########6| 25/26 [00:00<00:00, 48.48it/s]100%|##########| 26/26 [00:00<00:00, 41.54it/s]
Test: [   0/  26]	Loss 0.586 (0.586)	test_acc   0.70 (  0.70)	test_minacc   0.49 (  0.49)	test_majacc   0.73 (  0.73)	Loss_d 0.586 (0.586)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.571 (0.585)	test_acc   0.72 (  0.68)	test_minacc   0.47 (  0.50)	test_majacc   0.76 (  0.70)	Loss_d 0.571 (0.585)	test_acc_d   0.72 (  0.68)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.76 (  0.70)	test_corr_d   0.57 (  0.50)
Test: [  20/  26]	Loss 0.604 (0.589)	test_acc   0.62 (  0.66)	test_minacc   0.50 (  0.49)	test_majacc   0.65 (  0.69)	Loss_d 0.604 (0.589)	test_acc_d   0.62 (  0.66)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.65 (  0.69)	test_corr_d   0.48 (  0.50)
Test: [  26/  26]	Loss 0.590 (0.590)	test_acc   0.66 (  0.66)	test_minacc   0.43 (  0.49)	test_majacc   0.68 (  0.69)	Loss_d 0.590 (0.590)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.43 (  0.49)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.52 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.59it/s]
Test: [  0/  1]	Loss 0.802 (0.802)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.65 (  0.65)	Loss_d 0.802 (0.802)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 0.802 (0.802)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.65 (  0.65)	Loss_d 0.802 (0.802)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.31 (  0.31)
Overall Timing[ 15/  1]	epoch_time 0.0403 (0.0420)	validation_time 0.0004 (0.0008)	train_time 0.0398 (0.0399)
record: (train_acc, test_acc) (0.6414000198841096, 0.5470000505447388)
last accs (train_acc, test_acc) (0.6636000176668168, 0.45500001311302185)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.70it/s] 12%|#1        | 3/26 [00:00<00:02, 10.04it/s] 23%|##3       | 6/26 [00:00<00:01, 16.76it/s] 35%|###4      | 9/26 [00:00<00:00, 20.40it/s] 46%|####6     | 12/26 [00:00<00:00, 22.91it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.29it/s] 69%|######9   | 18/26 [00:00<00:00, 25.59it/s] 81%|########  | 21/26 [00:00<00:00, 26.63it/s] 96%|#########6| 25/26 [00:01<00:00, 27.68it/s]100%|##########| 26/26 [00:01<00:00, 21.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0048, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(4.3612e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: tensor(1.1990e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.003 (0.002)	train_nll   0.60 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.66 (  0.62)	train_minacc   0.50 (  0.53)	train_majacc   0.68 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.25it/s] 23%|##3       | 6/26 [00:00<00:00, 30.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.50it/s] 46%|####6     | 12/26 [00:00<00:00, 41.54it/s] 65%|######5   | 17/26 [00:00<00:00, 42.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.58it/s] 88%|########8 | 23/26 [00:00<00:00, 47.85it/s]100%|##########| 26/26 [00:00<00:00, 39.41it/s]
Test: [   0/  26]	Loss 0.541 (0.541)	test_acc   0.73 (  0.73)	test_minacc   0.46 (  0.46)	test_majacc   0.76 (  0.76)	Loss_d 0.541 (0.541)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.535 (0.543)	test_acc   0.74 (  0.72)	test_minacc   0.43 (  0.49)	test_majacc   0.78 (  0.76)	Loss_d 0.535 (0.543)	test_acc_d   0.74 (  0.72)	test_minacc_d   0.43 (  0.49)	test_majacc_d   0.78 (  0.76)	test_corr_d   0.61 (  0.58)
Test: [  20/  26]	Loss 0.555 (0.543)	test_acc   0.71 (  0.73)	test_minacc   0.47 (  0.50)	test_majacc   0.76 (  0.77)	Loss_d 0.555 (0.543)	test_acc_d   0.71 (  0.73)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.76 (  0.77)	test_corr_d   0.58 (  0.58)
Test: [  26/  26]	Loss 0.551 (0.545)	test_acc   0.70 (  0.72)	test_minacc   0.43 (  0.49)	test_majacc   0.73 (  0.76)	Loss_d 0.551 (0.545)	test_acc_d   0.70 (  0.72)	test_minacc_d   0.43 (  0.49)	test_majacc_d   0.73 (  0.76)	test_corr_d   0.57 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.36it/s]
Test: [  0/  1]	Loss 0.838 (0.838)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.80 (  0.80)	Loss_d 0.838 (0.838)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 0.838 (0.838)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.80 (  0.80)	Loss_d 0.838 (0.838)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.31 (  0.31)
Overall Timing[ 16/  1]	epoch_time 0.0406 (0.0419)	validation_time 0.0004 (0.0008)	train_time 0.0400 (0.0399)
record: (train_acc, test_acc) (0.6414000198841096, 0.5470000505447388)
last accs (train_acc, test_acc) (0.723600027680397, 0.4750000238418579)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.13it/s] 12%|#1        | 3/26 [00:00<00:01, 12.48it/s] 23%|##3       | 6/26 [00:00<00:01, 19.10it/s] 35%|###4      | 9/26 [00:00<00:00, 22.14it/s] 46%|####6     | 12/26 [00:00<00:00, 24.43it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.94it/s] 69%|######9   | 18/26 [00:00<00:00, 26.60it/s] 81%|########  | 21/26 [00:00<00:00, 26.96it/s] 96%|#########6| 25/26 [00:01<00:00, 28.18it/s]100%|##########| 26/26 [00:01<00:00, 23.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0042, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(9.1237e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.003 (0.009)	train_nll   0.65 (  0.62)	train_penalty   0.00 (  0.01)	weight_norm   7.78 (  7.78)	train_acc   0.55 (  0.63)	train_minacc   0.36 (  0.52)	train_majacc   0.57 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.43it/s] 23%|##3       | 6/26 [00:00<00:00, 28.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.84it/s] 46%|####6     | 12/26 [00:00<00:00, 39.70it/s] 65%|######5   | 17/26 [00:00<00:00, 42.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.33it/s] 88%|########8 | 23/26 [00:00<00:00, 47.61it/s]100%|##########| 26/26 [00:00<00:00, 38.55it/s]
Test: [   0/  26]	Loss 0.553 (0.553)	test_acc   0.75 (  0.75)	test_minacc   0.46 (  0.46)	test_majacc   0.78 (  0.78)	Loss_d 0.553 (0.553)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.579 (0.567)	test_acc   0.71 (  0.73)	test_minacc   0.47 (  0.50)	test_majacc   0.75 (  0.77)	Loss_d 0.579 (0.567)	test_acc_d   0.71 (  0.73)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.75 (  0.77)	test_corr_d   0.58 (  0.55)
Test: [  20/  26]	Loss 0.566 (0.567)	test_acc   0.73 (  0.73)	test_minacc   0.51 (  0.50)	test_majacc   0.78 (  0.77)	Loss_d 0.566 (0.567)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.57 (  0.55)
Test: [  26/  26]	Loss 0.581 (0.567)	test_acc   0.71 (  0.73)	test_minacc   0.36 (  0.49)	test_majacc   0.75 (  0.77)	Loss_d 0.581 (0.567)	test_acc_d   0.71 (  0.73)	test_minacc_d   0.36 (  0.49)	test_majacc_d   0.75 (  0.77)	test_corr_d   0.55 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.78it/s]
Test: [  0/  1]	Loss 0.739 (0.739)	test_acc   0.51 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.70 (  0.70)	Loss_d 0.739 (0.739)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.739 (0.739)	test_acc   0.51 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.70 (  0.70)	Loss_d 0.739 (0.739)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.13 (  0.13)
Overall Timing[ 17/  1]	epoch_time 0.0409 (0.0419)	validation_time 0.0004 (0.0008)	train_time 0.0404 (0.0400)
record: (train_acc, test_acc) (0.6414000198841096, 0.5470000505447388)
last accs (train_acc, test_acc) (0.7291000297665596, 0.5080000162124634)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 15%|#5        | 4/26 [00:00<00:01, 17.63it/s] 27%|##6       | 7/26 [00:00<00:00, 22.34it/s] 38%|###8      | 10/26 [00:00<00:00, 25.06it/s] 50%|#####     | 13/26 [00:00<00:00, 26.13it/s] 62%|######1   | 16/26 [00:00<00:00, 26.83it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.53it/s] 85%|########4 | 22/26 [00:00<00:00, 28.03it/s] 96%|#########6| 25/26 [00:00<00:00, 28.49it/s]100%|##########| 26/26 [00:01<00:00, 24.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0032, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.003 (0.003)	train_nll   0.67 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.62 (  0.61)	train_minacc   0.57 (  0.61)	train_majacc   0.62 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.36it/s] 23%|##3       | 6/26 [00:00<00:00, 25.38it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.38it/s] 46%|####6     | 12/26 [00:00<00:00, 35.74it/s] 65%|######5   | 17/26 [00:00<00:00, 40.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.29it/s] 88%|########8 | 23/26 [00:00<00:00, 45.77it/s]100%|##########| 26/26 [00:00<00:00, 36.21it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.61 (  0.61)	test_minacc   0.56 (  0.56)	test_majacc   0.61 (  0.61)	Loss_d 0.639 (0.639)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.619 (0.619)	test_acc   0.67 (  0.65)	test_minacc   0.66 (  0.64)	test_majacc   0.67 (  0.65)	Loss_d 0.619 (0.619)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.66 (  0.64)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.33 (  0.28)
Test: [  20/  26]	Loss 0.607 (0.614)	test_acc   0.66 (  0.66)	test_minacc   0.61 (  0.64)	test_majacc   0.68 (  0.66)	Loss_d 0.607 (0.614)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.61 (  0.64)	test_majacc_d   0.68 (  0.66)	test_corr_d   0.30 (  0.29)
Test: [  26/  26]	Loss 0.628 (0.614)	test_acc   0.65 (  0.66)	test_minacc   0.50 (  0.63)	test_majacc   0.67 (  0.66)	Loss_d 0.628 (0.614)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.50 (  0.63)	test_majacc_d   0.67 (  0.66)	test_corr_d   0.30 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.54it/s]
Test: [  0/  1]	Loss 0.660 (0.660)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.56 (  0.56)	Loss_d 0.660 (0.660)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.25 ( -0.25)
Test: [  1/  1]	Loss 0.660 (0.660)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.56 (  0.56)	Loss_d 0.660 (0.660)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.25 ( -0.25)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/20/checkpoints/model_best.pth
Overall Timing[ 18/  1]	epoch_time 0.0395 (0.0418)	validation_time 0.0004 (0.0008)	train_time 0.0391 (0.0399)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.13it/s] 15%|#5        | 4/26 [00:00<00:01, 13.73it/s] 27%|##6       | 7/26 [00:00<00:01, 18.90it/s] 38%|###8      | 10/26 [00:00<00:00, 21.95it/s] 50%|#####     | 13/26 [00:00<00:00, 24.02it/s] 62%|######1   | 16/26 [00:00<00:00, 25.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.98it/s] 85%|########4 | 22/26 [00:00<00:00, 26.43it/s]100%|##########| 26/26 [00:01<00:00, 28.01it/s]100%|##########| 26/26 [00:01<00:00, 22.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0030, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: tensor(1.4426e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.001 (0.002)	train_nll   0.64 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.64 (  0.60)	train_minacc   0.71 (  0.59)	train_majacc   0.63 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.48it/s] 27%|##6       | 7/26 [00:00<00:00, 35.22it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.22it/s] 50%|#####     | 13/26 [00:00<00:00, 40.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.92it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.92it/s] 96%|#########6| 25/26 [00:00<00:00, 47.93it/s]100%|##########| 26/26 [00:00<00:00, 41.19it/s]
Test: [   0/  26]	Loss 0.599 (0.599)	test_acc   0.66 (  0.66)	test_minacc   0.63 (  0.63)	test_majacc   0.67 (  0.67)	Loss_d 0.599 (0.599)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.583 (0.591)	test_acc   0.71 (  0.68)	test_minacc   0.62 (  0.61)	test_majacc   0.72 (  0.70)	Loss_d 0.583 (0.591)	test_acc_d   0.71 (  0.68)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.43 (  0.41)
Test: [  20/  26]	Loss 0.585 (0.590)	test_acc   0.71 (  0.69)	test_minacc   0.61 (  0.59)	test_majacc   0.73 (  0.71)	Loss_d 0.585 (0.590)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.73 (  0.71)	test_corr_d   0.43 (  0.42)
Test: [  26/  26]	Loss 0.586 (0.590)	test_acc   0.74 (  0.69)	test_minacc   0.68 (  0.59)	test_majacc   0.74 (  0.71)	Loss_d 0.586 (0.590)	test_acc_d   0.74 (  0.69)	test_minacc_d   0.68 (  0.59)	test_majacc_d   0.74 (  0.71)	test_corr_d   0.42 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.68it/s]
Test: [  0/  1]	Loss 0.718 (0.718)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.63 (  0.63)	Loss_d 0.718 (0.718)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.718 (0.718)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.63 (  0.63)	Loss_d 0.718 (0.718)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 19/  1]	epoch_time 0.0403 (0.0417)	validation_time 0.0004 (0.0007)	train_time 0.0399 (0.0399)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6911000393033028, 0.5680000185966492)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.55it/s] 15%|#5        | 4/26 [00:00<00:01, 16.84it/s] 31%|###       | 8/26 [00:00<00:00, 23.22it/s] 42%|####2     | 11/26 [00:00<00:00, 25.26it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.61it/s] 69%|######9   | 18/26 [00:00<00:00, 27.99it/s] 85%|########4 | 22/26 [00:00<00:00, 28.69it/s] 96%|#########6| 25/26 [00:00<00:00, 28.87it/s]100%|##########| 26/26 [00:01<00:00, 24.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0030, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.001 (0.002)	train_nll   0.62 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.66 (  0.64)	train_minacc   0.68 (  0.63)	train_majacc   0.66 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.63it/s] 27%|##6       | 7/26 [00:00<00:00, 35.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.36it/s] 50%|#####     | 13/26 [00:00<00:00, 41.74it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.75it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.75it/s] 96%|#########6| 25/26 [00:00<00:00, 48.38it/s]100%|##########| 26/26 [00:00<00:00, 40.74it/s]
Test: [   0/  26]	Loss 0.607 (0.607)	test_acc   0.65 (  0.65)	test_minacc   0.61 (  0.61)	test_majacc   0.66 (  0.66)	Loss_d 0.607 (0.607)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.600 (0.602)	test_acc   0.68 (  0.67)	test_minacc   0.64 (  0.60)	test_majacc   0.69 (  0.68)	Loss_d 0.600 (0.602)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.64 (  0.60)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.41 (  0.38)
Test: [  20/  26]	Loss 0.601 (0.599)	test_acc   0.69 (  0.67)	test_minacc   0.61 (  0.60)	test_majacc   0.71 (  0.69)	Loss_d 0.601 (0.599)	test_acc_d   0.69 (  0.67)	test_minacc_d   0.61 (  0.60)	test_majacc_d   0.71 (  0.69)	test_corr_d   0.38 (  0.38)
Test: [  26/  26]	Loss 0.607 (0.599)	test_acc   0.67 (  0.68)	test_minacc   0.54 (  0.59)	test_majacc   0.68 (  0.69)	Loss_d 0.607 (0.599)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.54 (  0.59)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.39 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.92it/s]
Test: [  0/  1]	Loss 0.713 (0.713)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.64 (  0.64)	Loss_d 0.713 (0.713)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.713 (0.713)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.64 (  0.64)	Loss_d 0.713 (0.713)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 20/  1]	epoch_time 0.0381 (0.0415)	validation_time 0.0004 (0.0007)	train_time 0.0377 (0.0398)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6758000349998474, 0.6020000576972961)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.86it/s] 15%|#5        | 4/26 [00:00<00:01, 15.78it/s] 27%|##6       | 7/26 [00:00<00:00, 20.88it/s] 38%|###8      | 10/26 [00:00<00:00, 24.00it/s] 50%|#####     | 13/26 [00:00<00:00, 25.62it/s] 62%|######1   | 16/26 [00:00<00:00, 26.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.31it/s] 88%|########8 | 23/26 [00:00<00:00, 28.29it/s]100%|##########| 26/26 [00:01<00:00, 23.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0026, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.032 (0.008)	train_nll   0.72 (  0.64)	train_penalty   0.03 (  0.01)	weight_norm   7.79 (  7.78)	train_acc   0.49 (  0.61)	train_minacc   0.39 (  0.49)	train_majacc   0.50 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.14it/s] 23%|##3       | 6/26 [00:00<00:00, 30.45it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.45it/s] 42%|####2     | 11/26 [00:00<00:00, 38.51it/s] 65%|######5   | 17/26 [00:00<00:00, 41.82it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.82it/s] 85%|########4 | 22/26 [00:00<00:00, 43.90it/s]100%|##########| 26/26 [00:00<00:00, 36.99it/s]
Test: [   0/  26]	Loss 0.545 (0.545)	test_acc   0.72 (  0.72)	test_minacc   0.41 (  0.41)	test_majacc   0.76 (  0.76)	Loss_d 0.545 (0.545)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.76 (  0.76)
Test: [  10/  26]	Loss 0.622 (0.579)	test_acc   0.62 (  0.68)	test_minacc   0.26 (  0.38)	test_majacc   0.67 (  0.73)	Loss_d 0.622 (0.579)	test_acc_d   0.62 (  0.68)	test_minacc_d   0.26 (  0.38)	test_majacc_d   0.67 (  0.73)	test_corr_d   0.75 (  0.75)
Test: [  20/  26]	Loss 0.605 (0.581)	test_acc   0.65 (  0.68)	test_minacc   0.44 (  0.40)	test_majacc   0.70 (  0.73)	Loss_d 0.605 (0.581)	test_acc_d   0.65 (  0.68)	test_minacc_d   0.44 (  0.40)	test_majacc_d   0.70 (  0.73)	test_corr_d   0.75 (  0.75)
Test: [  26/  26]	Loss 0.579 (0.580)	test_acc   0.69 (  0.68)	test_minacc   0.32 (  0.40)	test_majacc   0.73 (  0.73)	Loss_d 0.579 (0.580)	test_acc_d   0.69 (  0.68)	test_minacc_d   0.32 (  0.40)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.76 (  0.75)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.47it/s]
Test: [  0/  1]	Loss 0.856 (0.856)	test_acc   0.42 (  0.42)	test_minacc   0.39 (  0.39)	test_majacc   0.66 (  0.66)	Loss_d 0.856 (0.856)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.60 (  0.60)
Test: [  1/  1]	Loss 0.856 (0.856)	test_acc   0.42 (  0.42)	test_minacc   0.39 (  0.39)	test_majacc   0.66 (  0.66)	Loss_d 0.856 (0.856)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.60 (  0.60)
Overall Timing[ 21/  1]	epoch_time 0.0389 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0385 (0.0398)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6819000225663185, 0.4150000214576721)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.69it/s] 15%|#5        | 4/26 [00:00<00:01, 17.40it/s] 27%|##6       | 7/26 [00:00<00:00, 21.66it/s] 42%|####2     | 11/26 [00:00<00:00, 25.16it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.96it/s] 69%|######9   | 18/26 [00:00<00:00, 27.68it/s] 81%|########  | 21/26 [00:00<00:00, 27.88it/s] 92%|#########2| 24/26 [00:00<00:00, 28.40it/s]100%|##########| 26/26 [00:01<00:00, 24.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0014, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.001 (0.003)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.63 (  0.58)	train_minacc   0.57 (  0.54)	train_majacc   0.64 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.78it/s] 23%|##3       | 6/26 [00:00<00:00, 32.78it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.78it/s] 46%|####6     | 12/26 [00:00<00:00, 42.93it/s] 65%|######5   | 17/26 [00:00<00:00, 43.88it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.88it/s] 88%|########8 | 23/26 [00:00<00:00, 48.65it/s]100%|##########| 26/26 [00:00<00:00, 40.35it/s]
Test: [   0/  26]	Loss 0.685 (0.685)	test_acc   0.55 (  0.55)	test_minacc   0.46 (  0.46)	test_majacc   0.56 (  0.56)	Loss_d 0.685 (0.685)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.768 (0.715)	test_acc   0.42 (  0.50)	test_minacc   0.34 (  0.48)	test_majacc   0.43 (  0.50)	Loss_d 0.768 (0.715)	test_acc_d   0.42 (  0.50)	test_minacc_d   0.34 (  0.48)	test_majacc_d   0.43 (  0.50)	test_corr_d   0.35 (  0.39)
Test: [  20/  26]	Loss 0.736 (0.714)	test_acc   0.47 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.47 (  0.50)	Loss_d 0.736 (0.714)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.47 (  0.50)	test_corr_d   0.43 (  0.41)
Test: [  26/  26]	Loss 0.714 (0.712)	test_acc   0.49 (  0.50)	test_minacc   0.39 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.714 (0.712)	test_acc_d   0.49 (  0.50)	test_minacc_d   0.39 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.45 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.50it/s]
Test: [  0/  1]	Loss 0.762 (0.762)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.762 (0.762)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 0.762 (0.762)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.762 (0.762)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Overall Timing[ 22/  1]	epoch_time 0.0378 (0.0412)	validation_time 0.0004 (0.0007)	train_time 0.0374 (0.0397)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.5000000159740448, 0.5)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.82it/s] 15%|#5        | 4/26 [00:00<00:01, 15.57it/s] 27%|##6       | 7/26 [00:00<00:00, 20.22it/s] 38%|###8      | 10/26 [00:00<00:00, 22.88it/s] 50%|#####     | 13/26 [00:00<00:00, 24.48it/s] 62%|######1   | 16/26 [00:00<00:00, 25.52it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.52it/s] 88%|########8 | 23/26 [00:00<00:00, 28.19it/s]100%|##########| 26/26 [00:01<00:00, 23.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.001 (0.002)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.50 (  0.55)	train_minacc   0.39 (  0.54)	train_majacc   0.51 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.51it/s] 23%|##3       | 6/26 [00:00<00:00, 32.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.20it/s] 42%|####2     | 11/26 [00:00<00:00, 39.72it/s] 65%|######5   | 17/26 [00:00<00:00, 43.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.58it/s] 88%|########8 | 23/26 [00:00<00:00, 48.07it/s]100%|##########| 26/26 [00:00<00:00, 39.97it/s]
Test: [   0/  26]	Loss 0.681 (0.681)	test_acc   0.55 (  0.55)	test_minacc   0.51 (  0.51)	test_majacc   0.55 (  0.55)	Loss_d 0.681 (0.681)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.666 (0.674)	test_acc   0.68 (  0.60)	test_minacc   0.60 (  0.49)	test_majacc   0.69 (  0.62)	Loss_d 0.666 (0.674)	test_acc_d   0.68 (  0.60)	test_minacc_d   0.60 (  0.49)	test_majacc_d   0.69 (  0.62)	test_corr_d   0.35 (  0.35)
Test: [  20/  26]	Loss 0.672 (0.673)	test_acc   0.61 (  0.60)	test_minacc   0.49 (  0.49)	test_majacc   0.63 (  0.63)	Loss_d 0.672 (0.673)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.32 (  0.35)
Test: [  26/  26]	Loss 0.672 (0.673)	test_acc   0.62 (  0.60)	test_minacc   0.61 (  0.48)	test_majacc   0.62 (  0.62)	Loss_d 0.672 (0.673)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.61 (  0.48)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.36 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.61it/s]
Test: [  0/  1]	Loss 0.687 (0.687)	test_acc   0.53 (  0.53)	test_minacc   0.52 (  0.52)	test_majacc   0.63 (  0.63)	Loss_d 0.687 (0.687)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.687 (0.687)	test_acc   0.53 (  0.53)	test_minacc   0.52 (  0.52)	test_majacc   0.63 (  0.63)	Loss_d 0.687 (0.687)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 23/  1]	epoch_time 0.0402 (0.0412)	validation_time 0.0004 (0.0007)	train_time 0.0398 (0.0397)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6025000094175339, 0.5270000100135803)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.12it/s] 15%|#5        | 4/26 [00:00<00:01, 16.56it/s] 31%|###       | 8/26 [00:00<00:00, 23.08it/s] 42%|####2     | 11/26 [00:00<00:00, 25.28it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.33it/s] 69%|######9   | 18/26 [00:00<00:00, 26.76it/s] 81%|########  | 21/26 [00:00<00:00, 27.13it/s] 92%|#########2| 24/26 [00:00<00:00, 27.52it/s]100%|##########| 26/26 [00:01<00:00, 23.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: tensor(0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.002 (0.002)	train_nll   0.66 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.62 (  0.56)	train_minacc   0.61 (  0.54)	train_majacc   0.63 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.84it/s] 27%|##6       | 7/26 [00:00<00:00, 34.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.12it/s] 50%|#####     | 13/26 [00:00<00:00, 40.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.26it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.26it/s] 96%|#########6| 25/26 [00:00<00:00, 47.22it/s]100%|##########| 26/26 [00:00<00:00, 40.31it/s]
Test: [   0/  26]	Loss 0.721 (0.721)	test_acc   0.46 (  0.46)	test_minacc   0.54 (  0.54)	test_majacc   0.45 (  0.45)	Loss_d 0.721 (0.721)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.651 (0.694)	test_acc   0.58 (  0.50)	test_minacc   0.66 (  0.52)	test_majacc   0.57 (  0.50)	Loss_d 0.651 (0.694)	test_acc_d   0.58 (  0.50)	test_minacc_d   0.66 (  0.52)	test_majacc_d   0.57 (  0.50)	test_corr_d   0.41 (  0.35)
Test: [  20/  26]	Loss 0.676 (0.692)	test_acc   0.53 (  0.50)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.50)	Loss_d 0.676 (0.692)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.35 (  0.36)
Test: [  26/  26]	Loss 0.690 (0.692)	test_acc   0.51 (  0.50)	test_minacc   0.61 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.690 (0.692)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.61 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.34 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.29it/s]
Test: [  0/  1]	Loss 0.714 (0.714)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.714 (0.714)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.714 (0.714)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.714 (0.714)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 24/  1]	epoch_time 0.0387 (0.0411)	validation_time 0.0004 (0.0007)	train_time 0.0382 (0.0396)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.5021000132858753, 0.5)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.93it/s] 15%|#5        | 4/26 [00:00<00:01, 14.46it/s] 27%|##6       | 7/26 [00:00<00:00, 19.83it/s] 42%|####2     | 11/26 [00:00<00:00, 24.42it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.62it/s] 88%|########8 | 23/26 [00:00<00:00, 29.22it/s]100%|##########| 26/26 [00:01<00:00, 24.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: tensor(0.0008, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.003 (0.003)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.53 (  0.58)	train_minacc   0.61 (  0.53)	train_majacc   0.52 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.45it/s] 35%|###4      | 9/26 [00:00<00:00, 38.13it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 45.15it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 45.15it/s] 81%|########  | 21/26 [00:00<00:00, 46.79it/s]100%|##########| 26/26 [00:00<00:00, 41.92it/s]
Test: [   0/  26]	Loss 0.727 (0.727)	test_acc   0.45 (  0.45)	test_minacc   0.54 (  0.54)	test_majacc   0.44 (  0.44)	Loss_d 0.727 (0.727)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.44 (  0.44)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.646 (0.694)	test_acc   0.58 (  0.51)	test_minacc   0.66 (  0.52)	test_majacc   0.57 (  0.50)	Loss_d 0.646 (0.694)	test_acc_d   0.58 (  0.51)	test_minacc_d   0.66 (  0.52)	test_majacc_d   0.57 (  0.50)	test_corr_d   0.41 (  0.37)
Test: [  20/  26]	Loss 0.674 (0.692)	test_acc   0.53 (  0.51)	test_minacc   0.53 (  0.51)	test_majacc   0.53 (  0.51)	Loss_d 0.674 (0.692)	test_acc_d   0.53 (  0.51)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.37 (  0.38)
Test: [  26/  26]	Loss 0.691 (0.693)	test_acc   0.52 (  0.51)	test_minacc   0.61 (  0.50)	test_majacc   0.50 (  0.51)	Loss_d 0.691 (0.693)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.61 (  0.50)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.38 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.37it/s]
Test: [  0/  1]	Loss 0.734 (0.734)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.734 (0.734)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.734 (0.734)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.734 (0.734)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.00 ( -0.00)
Overall Timing[ 25/  1]	epoch_time 0.0391 (0.0410)	validation_time 0.0004 (0.0007)	train_time 0.0386 (0.0396)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.5058000167608261, 0.49800002574920654)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.58it/s] 15%|#5        | 4/26 [00:00<00:01, 16.88it/s] 27%|##6       | 7/26 [00:00<00:00, 21.60it/s] 38%|###8      | 10/26 [00:00<00:00, 24.40it/s] 50%|#####     | 13/26 [00:00<00:00, 25.96it/s] 62%|######1   | 16/26 [00:00<00:00, 26.93it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.44it/s] 85%|########4 | 22/26 [00:00<00:00, 28.03it/s]100%|##########| 26/26 [00:01<00:00, 29.11it/s]100%|##########| 26/26 [00:01<00:00, 24.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.001 (0.003)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.58 (  0.59)	train_minacc   0.71 (  0.56)	train_majacc   0.56 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 29.05it/s] 31%|###       | 8/26 [00:00<00:00, 39.43it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.43it/s] 50%|#####     | 13/26 [00:00<00:00, 42.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.63it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.63it/s] 96%|#########6| 25/26 [00:00<00:00, 48.18it/s]100%|##########| 26/26 [00:00<00:00, 41.98it/s]
Test: [   0/  26]	Loss 0.681 (0.681)	test_acc   0.56 (  0.56)	test_minacc   0.68 (  0.68)	test_majacc   0.54 (  0.54)	Loss_d 0.681 (0.681)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.668 (0.674)	test_acc   0.64 (  0.60)	test_minacc   0.60 (  0.65)	test_majacc   0.65 (  0.59)	Loss_d 0.668 (0.674)	test_acc_d   0.64 (  0.60)	test_minacc_d   0.60 (  0.65)	test_majacc_d   0.65 (  0.59)	test_corr_d   0.22 (  0.14)
Test: [  20/  26]	Loss 0.667 (0.672)	test_acc   0.63 (  0.61)	test_minacc   0.71 (  0.67)	test_majacc   0.62 (  0.60)	Loss_d 0.667 (0.672)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.71 (  0.67)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.13 (  0.14)
Test: [  26/  26]	Loss 0.680 (0.672)	test_acc   0.58 (  0.61)	test_minacc   0.57 (  0.66)	test_majacc   0.59 (  0.60)	Loss_d 0.680 (0.672)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.57 (  0.66)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.11 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.05it/s]
Test: [  0/  1]	Loss 0.668 (0.668)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.54 (  0.54)	Loss_d 0.668 (0.668)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.29 ( -0.29)
Test: [  1/  1]	Loss 0.668 (0.668)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.54 (  0.54)	Loss_d 0.668 (0.668)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.29 ( -0.29)
Overall Timing[ 26/  1]	epoch_time 0.0394 (0.0410)	validation_time 0.0004 (0.0007)	train_time 0.0389 (0.0395)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6102000145912171, 0.6340000033378601)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.44it/s] 15%|#5        | 4/26 [00:00<00:01, 17.48it/s] 27%|##6       | 7/26 [00:00<00:00, 21.65it/s] 42%|####2     | 11/26 [00:00<00:00, 25.10it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.45it/s] 69%|######9   | 18/26 [00:00<00:00, 28.03it/s] 85%|########4 | 22/26 [00:00<00:00, 29.33it/s]100%|##########| 26/26 [00:00<00:00, 30.41it/s]100%|##########| 26/26 [00:01<00:00, 25.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.58 (  0.57)	train_minacc   0.64 (  0.53)	train_majacc   0.57 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.55it/s] 12%|#1        | 3/26 [00:00<00:01, 14.55it/s] 31%|###       | 8/26 [00:00<00:00, 29.91it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.91it/s] 54%|#####3    | 14/26 [00:00<00:00, 40.05it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.48it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.48it/s] 96%|#########6| 25/26 [00:00<00:00, 46.57it/s]100%|##########| 26/26 [00:00<00:00, 36.75it/s]
Test: [   0/  26]	Loss 0.685 (0.685)	test_acc   0.49 (  0.49)	test_minacc   0.54 (  0.54)	test_majacc   0.49 (  0.49)	Loss_d 0.685 (0.685)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.633 (0.666)	test_acc   0.63 (  0.55)	test_minacc   0.68 (  0.52)	test_majacc   0.63 (  0.55)	Loss_d 0.633 (0.666)	test_acc_d   0.63 (  0.55)	test_minacc_d   0.68 (  0.52)	test_majacc_d   0.63 (  0.55)	test_corr_d   0.46 (  0.40)
Test: [  20/  26]	Loss 0.658 (0.665)	test_acc   0.56 (  0.54)	test_minacc   0.53 (  0.50)	test_majacc   0.57 (  0.55)	Loss_d 0.658 (0.665)	test_acc_d   0.56 (  0.54)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.57 (  0.55)	test_corr_d   0.37 (  0.40)
Test: [  26/  26]	Loss 0.665 (0.665)	test_acc   0.56 (  0.54)	test_minacc   0.61 (  0.50)	test_majacc   0.56 (  0.55)	Loss_d 0.665 (0.665)	test_acc_d   0.56 (  0.54)	test_minacc_d   0.61 (  0.50)	test_majacc_d   0.56 (  0.55)	test_corr_d   0.39 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.13it/s]
Test: [  0/  1]	Loss 0.702 (0.702)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.52 (  0.52)	Loss_d 0.702 (0.702)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.702 (0.702)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.52 (  0.52)	Loss_d 0.702 (0.702)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 27/  1]	epoch_time 0.0401 (0.0409)	validation_time 0.0004 (0.0007)	train_time 0.0397 (0.0395)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.5444000116586685, 0.4930000305175781)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 15%|#5        | 4/26 [00:00<00:01, 16.82it/s] 27%|##6       | 7/26 [00:00<00:00, 20.82it/s] 38%|###8      | 10/26 [00:00<00:00, 23.65it/s] 50%|#####     | 13/26 [00:00<00:00, 25.21it/s] 62%|######1   | 16/26 [00:00<00:00, 26.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.91it/s] 88%|########8 | 23/26 [00:00<00:00, 28.04it/s]100%|##########| 26/26 [00:01<00:00, 23.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.002 (0.003)	train_nll   0.64 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.66 (  0.59)	train_minacc   0.54 (  0.55)	train_majacc   0.68 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.76it/s] 27%|##6       | 7/26 [00:00<00:00, 29.05it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.05it/s] 50%|#####     | 13/26 [00:00<00:00, 38.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.86it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.86it/s] 96%|#########6| 25/26 [00:00<00:00, 46.58it/s]100%|##########| 26/26 [00:00<00:00, 37.49it/s]
Test: [   0/  26]	Loss 0.666 (0.666)	test_acc   0.59 (  0.59)	test_minacc   0.54 (  0.54)	test_majacc   0.60 (  0.60)	Loss_d 0.666 (0.666)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.588 (0.634)	test_acc   0.70 (  0.64)	test_minacc   0.70 (  0.54)	test_majacc   0.70 (  0.65)	Loss_d 0.588 (0.634)	test_acc_d   0.70 (  0.64)	test_minacc_d   0.70 (  0.54)	test_majacc_d   0.70 (  0.65)	test_corr_d   0.49 (  0.42)
Test: [  20/  26]	Loss 0.627 (0.635)	test_acc   0.66 (  0.64)	test_minacc   0.59 (  0.53)	test_majacc   0.68 (  0.66)	Loss_d 0.627 (0.635)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.59 (  0.53)	test_majacc_d   0.68 (  0.66)	test_corr_d   0.39 (  0.41)
Test: [  26/  26]	Loss 0.642 (0.636)	test_acc   0.64 (  0.64)	test_minacc   0.57 (  0.53)	test_majacc   0.64 (  0.66)	Loss_d 0.642 (0.636)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.57 (  0.53)	test_majacc_d   0.64 (  0.66)	test_corr_d   0.39 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.95it/s]
Test: [  0/  1]	Loss 0.716 (0.716)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.61 (  0.61)	Loss_d 0.716 (0.716)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.716 (0.716)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.61 (  0.61)	Loss_d 0.716 (0.716)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 28/  1]	epoch_time 0.0396 (0.0409)	validation_time 0.0004 (0.0006)	train_time 0.0392 (0.0395)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.636600013911724, 0.5139999985694885)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.53it/s] 15%|#5        | 4/26 [00:00<00:01, 15.87it/s] 27%|##6       | 7/26 [00:00<00:00, 20.99it/s] 38%|###8      | 10/26 [00:00<00:00, 23.91it/s] 50%|#####     | 13/26 [00:00<00:00, 25.38it/s] 62%|######1   | 16/26 [00:00<00:00, 26.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.29it/s] 85%|########4 | 22/26 [00:00<00:00, 27.88it/s] 96%|#########6| 25/26 [00:01<00:00, 28.14it/s]100%|##########| 26/26 [00:01<00:00, 23.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.005 (0.002)	train_nll   0.69 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.53 (  0.62)	train_minacc   0.64 (  0.60)	train_majacc   0.52 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.11it/s] 23%|##3       | 6/26 [00:00<00:00, 28.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.29it/s] 42%|####2     | 11/26 [00:00<00:00, 37.03it/s] 65%|######5   | 17/26 [00:00<00:00, 40.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.58it/s] 88%|########8 | 23/26 [00:00<00:00, 45.70it/s]100%|##########| 26/26 [00:00<00:00, 36.99it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.60 (  0.60)	Loss_d 0.657 (0.657)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.673 (0.661)	test_acc   0.57 (  0.59)	test_minacc   0.51 (  0.60)	test_majacc   0.58 (  0.59)	Loss_d 0.673 (0.661)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.51 (  0.60)	test_majacc_d   0.58 (  0.59)	test_corr_d   0.29 (  0.22)
Test: [  20/  26]	Loss 0.668 (0.661)	test_acc   0.58 (  0.60)	test_minacc   0.57 (  0.61)	test_majacc   0.59 (  0.59)	Loss_d 0.668 (0.661)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.57 (  0.61)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.23 (  0.22)
Test: [  26/  26]	Loss 0.677 (0.661)	test_acc   0.58 (  0.60)	test_minacc   0.50 (  0.62)	test_majacc   0.59 (  0.59)	Loss_d 0.677 (0.661)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.50 (  0.62)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.19 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.14it/s]
Test: [  0/  1]	Loss 0.673 (0.673)	test_acc   0.58 (  0.58)	test_minacc   0.59 (  0.59)	test_majacc   0.51 (  0.51)	Loss_d 0.673 (0.673)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.21 ( -0.21)
Test: [  1/  1]	Loss 0.673 (0.673)	test_acc   0.58 (  0.58)	test_minacc   0.59 (  0.59)	test_majacc   0.51 (  0.51)	Loss_d 0.673 (0.673)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.21 ( -0.21)
Overall Timing[ 29/  1]	epoch_time 0.0387 (0.0408)	validation_time 0.0004 (0.0006)	train_time 0.0383 (0.0395)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.5985000118017196, 0.578000009059906)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 15%|#5        | 4/26 [00:00<00:01, 19.01it/s] 27%|##6       | 7/26 [00:00<00:00, 23.38it/s] 42%|####2     | 11/26 [00:00<00:00, 26.42it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.87it/s] 88%|########8 | 23/26 [00:00<00:00, 29.63it/s]100%|##########| 26/26 [00:01<00:00, 25.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.001 (0.001)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.58 (  0.59)	train_minacc   0.64 (  0.64)	train_majacc   0.57 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.03it/s] 23%|##3       | 6/26 [00:00<00:00, 31.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.49it/s] 42%|####2     | 11/26 [00:00<00:00, 38.64it/s] 65%|######5   | 17/26 [00:00<00:00, 42.28it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.28it/s] 88%|########8 | 23/26 [00:00<00:00, 47.32it/s]100%|##########| 26/26 [00:00<00:00, 38.57it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.53 (  0.53)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.693 (0.693)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.09 (  0.09)
Test: [  10/  26]	Loss 0.655 (0.676)	test_acc   0.65 (  0.59)	test_minacc   0.74 (  0.66)	test_majacc   0.64 (  0.57)	Loss_d 0.655 (0.676)	test_acc_d   0.65 (  0.59)	test_minacc_d   0.74 (  0.66)	test_majacc_d   0.64 (  0.57)	test_corr_d   0.16 (  0.09)
Test: [  20/  26]	Loss 0.668 (0.675)	test_acc   0.58 (  0.58)	test_minacc   0.63 (  0.65)	test_majacc   0.57 (  0.57)	Loss_d 0.668 (0.675)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.63 (  0.65)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.11 (  0.09)
Test: [  26/  26]	Loss 0.685 (0.675)	test_acc   0.51 (  0.58)	test_minacc   0.64 (  0.64)	test_majacc   0.50 (  0.57)	Loss_d 0.685 (0.675)	test_acc_d   0.51 (  0.58)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.50 (  0.57)	test_corr_d   0.04 (  0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.02it/s]
Test: [  0/  1]	Loss 0.657 (0.657)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.50 (  0.50)	Loss_d 0.657 (0.657)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.34 ( -0.34)
Test: [  1/  1]	Loss 0.657 (0.657)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.50 (  0.50)	Loss_d 0.657 (0.657)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.34 ( -0.34)
Overall Timing[ 30/  1]	epoch_time 0.0387 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0383 (0.0395)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.580900012075901, 0.6330000162124634)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.63it/s] 15%|#5        | 4/26 [00:00<00:01, 17.77it/s] 27%|##6       | 7/26 [00:00<00:00, 21.36it/s] 38%|###8      | 10/26 [00:00<00:00, 23.43it/s] 50%|#####     | 13/26 [00:00<00:00, 24.98it/s] 65%|######5   | 17/26 [00:00<00:00, 26.62it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.24it/s] 88%|########8 | 23/26 [00:00<00:00, 27.79it/s]100%|##########| 26/26 [00:01<00:00, 24.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.001 (0.001)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.57 (  0.57)	train_minacc   0.61 (  0.61)	train_majacc   0.57 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 23%|##3       | 6/26 [00:00<00:00, 31.34it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.34it/s] 46%|####6     | 12/26 [00:00<00:00, 41.11it/s] 65%|######5   | 17/26 [00:00<00:00, 40.95it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.95it/s] 88%|########8 | 23/26 [00:00<00:00, 45.15it/s]100%|##########| 26/26 [00:00<00:00, 38.26it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.61 (  0.61)	test_minacc   0.59 (  0.59)	test_majacc   0.61 (  0.61)	Loss_d 0.667 (0.667)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.661 (0.661)	test_acc   0.65 (  0.64)	test_minacc   0.60 (  0.62)	test_majacc   0.66 (  0.64)	Loss_d 0.661 (0.661)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.60 (  0.62)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.33 (  0.27)
Test: [  20/  26]	Loss 0.662 (0.660)	test_acc   0.64 (  0.64)	test_minacc   0.59 (  0.62)	test_majacc   0.66 (  0.65)	Loss_d 0.662 (0.660)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.59 (  0.62)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.27 (  0.27)
Test: [  26/  26]	Loss 0.667 (0.660)	test_acc   0.63 (  0.64)	test_minacc   0.57 (  0.62)	test_majacc   0.64 (  0.65)	Loss_d 0.667 (0.660)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.57 (  0.62)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.26 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.61it/s]
Test: [  0/  1]	Loss 0.676 (0.676)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.61 (  0.61)	Loss_d 0.676 (0.676)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 0.676 (0.676)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.61 (  0.61)	Loss_d 0.676 (0.676)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.17 ( -0.17)
Overall Timing[ 31/  1]	epoch_time 0.0394 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0390 (0.0394)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.643900015592575, 0.6000000238418579)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.92it/s] 15%|#5        | 4/26 [00:00<00:01, 17.77it/s] 27%|##6       | 7/26 [00:00<00:00, 22.16it/s] 42%|####2     | 11/26 [00:00<00:00, 25.97it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.87it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.17it/s] 88%|########8 | 23/26 [00:00<00:00, 30.01it/s]100%|##########| 26/26 [00:01<00:00, 25.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.001 (0.001)	train_nll   0.70 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.49 (  0.57)	train_minacc   0.39 (  0.57)	train_majacc   0.50 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.51it/s] 27%|##6       | 7/26 [00:00<00:00, 36.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.58it/s] 50%|#####     | 13/26 [00:00<00:00, 43.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.59it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.59it/s] 96%|#########6| 25/26 [00:00<00:00, 48.49it/s]100%|##########| 26/26 [00:00<00:00, 41.30it/s]
Test: [   0/  26]	Loss 0.669 (0.669)	test_acc   0.59 (  0.59)	test_minacc   0.54 (  0.54)	test_majacc   0.60 (  0.60)	Loss_d 0.669 (0.669)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.687 (0.676)	test_acc   0.50 (  0.55)	test_minacc   0.43 (  0.53)	test_majacc   0.51 (  0.56)	Loss_d 0.687 (0.676)	test_acc_d   0.50 (  0.55)	test_minacc_d   0.43 (  0.53)	test_majacc_d   0.51 (  0.56)	test_corr_d   0.28 (  0.24)
Test: [  20/  26]	Loss 0.684 (0.676)	test_acc   0.53 (  0.56)	test_minacc   0.49 (  0.55)	test_majacc   0.54 (  0.55)	Loss_d 0.684 (0.676)	test_acc_d   0.53 (  0.56)	test_minacc_d   0.49 (  0.55)	test_majacc_d   0.54 (  0.55)	test_corr_d   0.21 (  0.24)
Test: [  26/  26]	Loss 0.680 (0.675)	test_acc   0.53 (  0.56)	test_minacc   0.50 (  0.56)	test_majacc   0.54 (  0.56)	Loss_d 0.680 (0.675)	test_acc_d   0.53 (  0.56)	test_minacc_d   0.50 (  0.56)	test_majacc_d   0.54 (  0.56)	test_corr_d   0.24 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.14it/s]
Test: [  0/  1]	Loss 0.685 (0.685)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 0.685 (0.685)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.15 ( -0.15)
Test: [  1/  1]	Loss 0.685 (0.685)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.54)	test_majacc   0.47 (  0.47)	Loss_d 0.685 (0.685)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.47 (  0.47)	test_corr_d  -0.15 ( -0.15)
Overall Timing[ 32/  1]	epoch_time 0.0377 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0373 (0.0394)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.557200008392334, 0.5290000438690186)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 15%|#5        | 4/26 [00:00<00:01, 18.39it/s] 27%|##6       | 7/26 [00:00<00:00, 21.59it/s] 38%|###8      | 10/26 [00:00<00:00, 24.04it/s] 50%|#####     | 13/26 [00:00<00:00, 25.43it/s] 65%|######5   | 17/26 [00:00<00:00, 27.21it/s] 81%|########  | 21/26 [00:00<00:00, 28.05it/s] 92%|#########2| 24/26 [00:00<00:00, 28.27it/s]100%|##########| 26/26 [00:01<00:00, 24.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.004 (0.002)	train_nll   0.70 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.51 (  0.56)	train_minacc   0.61 (  0.54)	train_majacc   0.50 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.18it/s] 23%|##3       | 6/26 [00:00<00:00, 28.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.50it/s] 46%|####6     | 12/26 [00:00<00:00, 39.59it/s] 65%|######5   | 17/26 [00:00<00:00, 41.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.79it/s] 88%|########8 | 23/26 [00:00<00:00, 47.42it/s]100%|##########| 26/26 [00:00<00:00, 38.07it/s]
Test: [   0/  26]	Loss 0.669 (0.669)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.61 (  0.61)	Loss_d 0.669 (0.669)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.669 (0.667)	test_acc   0.61 (  0.63)	test_minacc   0.51 (  0.61)	test_majacc   0.62 (  0.63)	Loss_d 0.669 (0.667)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.51 (  0.61)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.32 (  0.29)
Test: [  20/  26]	Loss 0.667 (0.666)	test_acc   0.65 (  0.64)	test_minacc   0.59 (  0.61)	test_majacc   0.66 (  0.64)	Loss_d 0.667 (0.666)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.59 (  0.61)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.29 (  0.29)
Test: [  26/  26]	Loss 0.668 (0.665)	test_acc   0.65 (  0.64)	test_minacc   0.64 (  0.61)	test_majacc   0.65 (  0.64)	Loss_d 0.668 (0.665)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.64 (  0.61)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.30 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.80it/s]
Test: [  0/  1]	Loss 0.683 (0.683)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.683 (0.683)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.683 (0.683)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.683 (0.683)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 33/  1]	epoch_time 0.0397 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0393 (0.0394)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6361000121235848, 0.5830000042915344)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.05it/s] 15%|#5        | 4/26 [00:00<00:01, 19.68it/s] 27%|##6       | 7/26 [00:00<00:00, 23.20it/s] 38%|###8      | 10/26 [00:00<00:00, 25.34it/s] 50%|#####     | 13/26 [00:00<00:00, 26.20it/s] 65%|######5   | 17/26 [00:00<00:00, 27.85it/s] 81%|########  | 21/26 [00:00<00:00, 28.82it/s] 96%|#########6| 25/26 [00:00<00:00, 29.14it/s]100%|##########| 26/26 [00:01<00:00, 25.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.60 (  0.55)	train_minacc   0.57 (  0.56)	train_majacc   0.60 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.01it/s] 27%|##6       | 7/26 [00:00<00:00, 34.62it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.62it/s] 46%|####6     | 12/26 [00:00<00:00, 41.18it/s] 65%|######5   | 17/26 [00:00<00:00, 43.67it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.67it/s] 88%|########8 | 23/26 [00:00<00:00, 48.36it/s]100%|##########| 26/26 [00:00<00:00, 40.80it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.60 (  0.60)	test_minacc   0.51 (  0.51)	test_majacc   0.61 (  0.61)	Loss_d 0.665 (0.665)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.677 (0.668)	test_acc   0.53 (  0.59)	test_minacc   0.38 (  0.53)	test_majacc   0.55 (  0.60)	Loss_d 0.677 (0.668)	test_acc_d   0.53 (  0.59)	test_minacc_d   0.38 (  0.53)	test_majacc_d   0.55 (  0.60)	test_corr_d   0.38 (  0.32)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.58 (  0.60)	test_minacc   0.53 (  0.55)	test_majacc   0.59 (  0.60)	Loss_d 0.674 (0.668)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.53 (  0.55)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.29 (  0.32)
Test: [  26/  26]	Loss 0.671 (0.667)	test_acc   0.58 (  0.60)	test_minacc   0.43 (  0.55)	test_majacc   0.59 (  0.60)	Loss_d 0.671 (0.667)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.43 (  0.55)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.32 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.65it/s]
Test: [  0/  1]	Loss 0.687 (0.687)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.54 (  0.54)	Loss_d 0.687 (0.687)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.687 (0.687)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.54 (  0.54)	Loss_d 0.687 (0.687)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 34/  1]	epoch_time 0.0380 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0376 (0.0393)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.5971000021696091, 0.5300000309944153)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.48it/s] 15%|#5        | 4/26 [00:00<00:01, 17.66it/s] 27%|##6       | 7/26 [00:00<00:00, 21.65it/s] 38%|###8      | 10/26 [00:00<00:00, 24.43it/s] 50%|#####     | 13/26 [00:00<00:00, 25.58it/s] 62%|######1   | 16/26 [00:00<00:00, 26.57it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.43it/s] 85%|########4 | 22/26 [00:00<00:00, 27.89it/s] 96%|#########6| 25/26 [00:00<00:00, 27.80it/s]100%|##########| 26/26 [00:01<00:00, 23.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.002 (0.004)	train_nll   0.65 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.78)	train_acc   0.63 (  0.56)	train_minacc   0.50 (  0.52)	train_majacc   0.64 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.20it/s] 23%|##3       | 6/26 [00:00<00:00, 28.78it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.78it/s] 42%|####2     | 11/26 [00:00<00:00, 37.65it/s] 65%|######5   | 17/26 [00:00<00:00, 41.62it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.62it/s] 88%|########8 | 23/26 [00:00<00:00, 46.70it/s]100%|##########| 26/26 [00:00<00:00, 37.43it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.57 (  0.57)	test_minacc   0.46 (  0.46)	test_majacc   0.58 (  0.58)	Loss_d 0.648 (0.648)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.716 (0.675)	test_acc   0.44 (  0.52)	test_minacc   0.34 (  0.48)	test_majacc   0.45 (  0.53)	Loss_d 0.716 (0.675)	test_acc_d   0.44 (  0.52)	test_minacc_d   0.34 (  0.48)	test_majacc_d   0.45 (  0.53)	test_corr_d   0.52 (  0.47)
Test: [  20/  26]	Loss 0.695 (0.675)	test_acc   0.50 (  0.52)	test_minacc   0.46 (  0.49)	test_majacc   0.51 (  0.52)	Loss_d 0.695 (0.675)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.47 (  0.47)
Test: [  26/  26]	Loss 0.686 (0.674)	test_acc   0.51 (  0.52)	test_minacc   0.39 (  0.50)	test_majacc   0.52 (  0.52)	Loss_d 0.686 (0.674)	test_acc_d   0.51 (  0.52)	test_minacc_d   0.39 (  0.50)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.47 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.61it/s]
Test: [  0/  1]	Loss 0.751 (0.751)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.751 (0.751)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.751 (0.751)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.751 (0.751)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.08 (  0.08)
Overall Timing[ 35/  1]	epoch_time 0.0392 (0.0405)	validation_time 0.0005 (0.0006)	train_time 0.0388 (0.0393)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.5204000096619129, 0.503000020980835)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.35it/s] 15%|#5        | 4/26 [00:00<00:01, 16.58it/s] 27%|##6       | 7/26 [00:00<00:00, 21.05it/s] 38%|###8      | 10/26 [00:00<00:00, 23.68it/s] 50%|#####     | 13/26 [00:00<00:00, 25.18it/s] 62%|######1   | 16/26 [00:00<00:00, 26.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.77it/s] 85%|########4 | 22/26 [00:00<00:00, 27.42it/s]100%|##########| 26/26 [00:01<00:00, 28.88it/s]100%|##########| 26/26 [00:01<00:00, 23.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.002 (0.005)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.66 (  0.64)	train_minacc   0.57 (  0.54)	train_majacc   0.67 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.88it/s] 23%|##3       | 6/26 [00:00<00:00, 27.88it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.88it/s] 42%|####2     | 11/26 [00:00<00:00, 34.32it/s] 65%|######5   | 17/26 [00:00<00:00, 41.44it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.44it/s] 88%|########8 | 23/26 [00:00<00:00, 45.32it/s]100%|##########| 26/26 [00:00<00:00, 36.82it/s]
Test: [   0/  26]	Loss 0.650 (0.650)	test_acc   0.62 (  0.62)	test_minacc   0.59 (  0.59)	test_majacc   0.62 (  0.62)	Loss_d 0.650 (0.650)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.578 (0.625)	test_acc   0.71 (  0.66)	test_minacc   0.68 (  0.63)	test_majacc   0.71 (  0.66)	Loss_d 0.578 (0.625)	test_acc_d   0.71 (  0.66)	test_minacc_d   0.68 (  0.63)	test_majacc_d   0.71 (  0.66)	test_corr_d   0.44 (  0.36)
Test: [  20/  26]	Loss 0.615 (0.625)	test_acc   0.66 (  0.66)	test_minacc   0.59 (  0.61)	test_majacc   0.68 (  0.67)	Loss_d 0.615 (0.625)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.59 (  0.61)	test_majacc_d   0.68 (  0.67)	test_corr_d   0.35 (  0.36)
Test: [  26/  26]	Loss 0.637 (0.626)	test_acc   0.62 (  0.65)	test_minacc   0.57 (  0.60)	test_majacc   0.62 (  0.66)	Loss_d 0.637 (0.626)	test_acc_d   0.62 (  0.65)	test_minacc_d   0.57 (  0.60)	test_majacc_d   0.62 (  0.66)	test_corr_d   0.33 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.71it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.701 (0.701)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.701 (0.701)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 36/  1]	epoch_time 0.0398 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0393 (0.0393)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6542000191211701, 0.5710000395774841)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.51it/s] 15%|#5        | 4/26 [00:00<00:01, 18.39it/s] 31%|###       | 8/26 [00:00<00:00, 24.33it/s] 46%|####6     | 12/26 [00:00<00:00, 27.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.92it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.21it/s] 88%|########8 | 23/26 [00:00<00:00, 29.53it/s]100%|##########| 26/26 [00:00<00:00, 29.58it/s]100%|##########| 26/26 [00:01<00:00, 25.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.59 (  0.63)	train_minacc   0.61 (  0.64)	train_majacc   0.59 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.87it/s] 27%|##6       | 7/26 [00:00<00:00, 29.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.00it/s] 50%|#####     | 13/26 [00:00<00:00, 39.71it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.75it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.75it/s] 96%|#########6| 25/26 [00:00<00:00, 48.42it/s]100%|##########| 26/26 [00:00<00:00, 39.58it/s]
Test: [   0/  26]	Loss 0.651 (0.651)	test_acc   0.62 (  0.62)	test_minacc   0.66 (  0.66)	test_majacc   0.62 (  0.62)	Loss_d 0.651 (0.651)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.625 (0.637)	test_acc   0.68 (  0.64)	test_minacc   0.62 (  0.65)	test_majacc   0.69 (  0.64)	Loss_d 0.625 (0.637)	test_acc_d   0.68 (  0.64)	test_minacc_d   0.62 (  0.65)	test_majacc_d   0.69 (  0.64)	test_corr_d   0.32 (  0.25)
Test: [  20/  26]	Loss 0.631 (0.635)	test_acc   0.67 (  0.65)	test_minacc   0.67 (  0.65)	test_majacc   0.67 (  0.65)	Loss_d 0.631 (0.635)	test_acc_d   0.67 (  0.65)	test_minacc_d   0.67 (  0.65)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.26 (  0.26)
Test: [  26/  26]	Loss 0.649 (0.635)	test_acc   0.61 (  0.65)	test_minacc   0.64 (  0.65)	test_majacc   0.61 (  0.65)	Loss_d 0.649 (0.635)	test_acc_d   0.61 (  0.65)	test_minacc_d   0.64 (  0.65)	test_majacc_d   0.61 (  0.65)	test_corr_d   0.23 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.77it/s]
Test: [  0/  1]	Loss 0.654 (0.654)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.59 (  0.59)	Loss_d 0.654 (0.654)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.25 ( -0.25)
Test: [  1/  1]	Loss 0.654 (0.654)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.59 (  0.59)	Loss_d 0.654 (0.654)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.25 ( -0.25)
Overall Timing[ 37/  1]	epoch_time 0.0398 (0.0404)	validation_time 0.0004 (0.0006)	train_time 0.0393 (0.0393)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6466000205278397, 0.6350000500679016)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.59it/s] 15%|#5        | 4/26 [00:00<00:01, 16.92it/s] 27%|##6       | 7/26 [00:00<00:00, 22.07it/s] 42%|####2     | 11/26 [00:00<00:00, 25.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.83it/s] 65%|######5   | 17/26 [00:00<00:00, 27.67it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.32it/s] 92%|#########2| 24/26 [00:00<00:00, 29.24it/s]100%|##########| 26/26 [00:01<00:00, 24.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.003 (0.003)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.58 (  0.61)	train_minacc   0.64 (  0.58)	train_majacc   0.57 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.55it/s] 27%|##6       | 7/26 [00:00<00:00, 34.47it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.47it/s] 50%|#####     | 13/26 [00:00<00:00, 40.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.44it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.44it/s] 96%|#########6| 25/26 [00:00<00:00, 47.49it/s]100%|##########| 26/26 [00:00<00:00, 40.46it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.61 (  0.61)	test_minacc   0.51 (  0.51)	test_majacc   0.62 (  0.62)	Loss_d 0.655 (0.655)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.695 (0.671)	test_acc   0.50 (  0.57)	test_minacc   0.40 (  0.54)	test_majacc   0.52 (  0.57)	Loss_d 0.695 (0.671)	test_acc_d   0.50 (  0.57)	test_minacc_d   0.40 (  0.54)	test_majacc_d   0.52 (  0.57)	test_corr_d   0.31 (  0.24)
Test: [  20/  26]	Loss 0.681 (0.670)	test_acc   0.55 (  0.57)	test_minacc   0.50 (  0.56)	test_majacc   0.56 (  0.57)	Loss_d 0.681 (0.670)	test_acc_d   0.55 (  0.57)	test_minacc_d   0.50 (  0.56)	test_majacc_d   0.56 (  0.57)	test_corr_d   0.27 (  0.24)
Test: [  26/  26]	Loss 0.685 (0.670)	test_acc   0.55 (  0.57)	test_minacc   0.43 (  0.56)	test_majacc   0.56 (  0.57)	Loss_d 0.685 (0.670)	test_acc_d   0.55 (  0.57)	test_minacc_d   0.43 (  0.56)	test_majacc_d   0.56 (  0.57)	test_corr_d   0.23 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.11it/s]
Test: [  0/  1]	Loss 0.684 (0.684)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.49 (  0.49)	Loss_d 0.684 (0.684)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.22 ( -0.22)
Test: [  1/  1]	Loss 0.684 (0.684)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.49 (  0.49)	Loss_d 0.684 (0.684)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.22 ( -0.22)
Overall Timing[ 38/  1]	epoch_time 0.0391 (0.0404)	validation_time 0.0004 (0.0006)	train_time 0.0387 (0.0393)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.5726000083088875, 0.5430000424385071)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.64it/s] 15%|#5        | 4/26 [00:00<00:01, 17.95it/s] 27%|##6       | 7/26 [00:00<00:00, 22.72it/s] 42%|####2     | 11/26 [00:00<00:00, 25.89it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.22it/s] 88%|########8 | 23/26 [00:00<00:00, 28.50it/s]100%|##########| 26/26 [00:00<00:00, 28.83it/s]100%|##########| 26/26 [00:01<00:00, 24.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.001 (0.001)	train_nll   0.69 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.55 (  0.60)	train_minacc   0.68 (  0.62)	train_majacc   0.54 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.12it/s] 27%|##6       | 7/26 [00:00<00:00, 33.02it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.02it/s] 46%|####6     | 12/26 [00:00<00:00, 39.32it/s] 69%|######9   | 18/26 [00:00<00:00, 43.70it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.70it/s] 92%|#########2| 24/26 [00:00<00:00, 45.64it/s]100%|##########| 26/26 [00:00<00:00, 38.44it/s]
Test: [   0/  26]	Loss 0.676 (0.676)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.57 (  0.57)	Loss_d 0.676 (0.676)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.700 (0.686)	test_acc   0.48 (  0.55)	test_minacc   0.53 (  0.62)	test_majacc   0.48 (  0.53)	Loss_d 0.700 (0.686)	test_acc_d   0.48 (  0.55)	test_minacc_d   0.53 (  0.62)	test_majacc_d   0.48 (  0.53)	test_corr_d   0.09 (  0.03)
Test: [  20/  26]	Loss 0.691 (0.685)	test_acc   0.52 (  0.55)	test_minacc   0.54 (  0.63)	test_majacc   0.52 (  0.54)	Loss_d 0.691 (0.685)	test_acc_d   0.52 (  0.55)	test_minacc_d   0.54 (  0.63)	test_majacc_d   0.52 (  0.54)	test_corr_d   0.05 (  0.03)
Test: [  26/  26]	Loss 0.694 (0.685)	test_acc   0.54 (  0.55)	test_minacc   0.50 (  0.63)	test_majacc   0.55 (  0.54)	Loss_d 0.694 (0.685)	test_acc_d   0.54 (  0.55)	test_minacc_d   0.50 (  0.63)	test_majacc_d   0.55 (  0.54)	test_corr_d   0.02 (  0.03)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.31it/s]
Test: [  0/  1]	Loss 0.660 (0.660)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 0.660 (0.660)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.43 ( -0.43)
Test: [  1/  1]	Loss 0.660 (0.660)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.46 (  0.46)	Loss_d 0.660 (0.660)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.43 ( -0.43)
Overall Timing[ 39/  1]	epoch_time 0.0393 (0.0404)	validation_time 0.0004 (0.0006)	train_time 0.0389 (0.0393)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.5539000148177147, 0.5910000205039978)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.77it/s] 15%|#5        | 4/26 [00:00<00:01, 19.48it/s] 27%|##6       | 7/26 [00:00<00:00, 23.61it/s] 42%|####2     | 11/26 [00:00<00:00, 27.05it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.26it/s] 69%|######9   | 18/26 [00:00<00:00, 28.71it/s] 85%|########4 | 22/26 [00:00<00:00, 29.30it/s] 96%|#########6| 25/26 [00:00<00:00, 29.50it/s]100%|##########| 26/26 [00:00<00:00, 26.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.009 (0.007)	train_nll   0.66 (  0.67)	train_penalty   0.01 (  0.01)	weight_norm   7.77 (  7.77)	train_acc   0.59 (  0.58)	train_minacc   0.39 (  0.54)	train_majacc   0.62 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 23%|##3       | 6/26 [00:00<00:00, 28.71it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.71it/s] 46%|####6     | 12/26 [00:00<00:00, 40.13it/s] 65%|######5   | 17/26 [00:00<00:00, 41.93it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.93it/s] 88%|########8 | 23/26 [00:00<00:00, 47.36it/s]100%|##########| 26/26 [00:00<00:00, 38.64it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.66 (  0.66)	test_minacc   0.49 (  0.49)	test_majacc   0.68 (  0.68)	Loss_d 0.609 (0.609)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.668 (0.636)	test_acc   0.59 (  0.63)	test_minacc   0.34 (  0.48)	test_majacc   0.62 (  0.65)	Loss_d 0.668 (0.636)	test_acc_d   0.59 (  0.63)	test_minacc_d   0.34 (  0.48)	test_majacc_d   0.62 (  0.65)	test_corr_d   0.51 (  0.45)
Test: [  20/  26]	Loss 0.662 (0.638)	test_acc   0.61 (  0.63)	test_minacc   0.44 (  0.50)	test_majacc   0.65 (  0.65)	Loss_d 0.662 (0.638)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.44 (  0.44)
Test: [  26/  26]	Loss 0.670 (0.639)	test_acc   0.61 (  0.63)	test_minacc   0.43 (  0.50)	test_majacc   0.63 (  0.65)	Loss_d 0.670 (0.639)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.63 (  0.65)	test_corr_d   0.43 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.25it/s]
Test: [  0/  1]	Loss 0.773 (0.773)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.57 (  0.57)	Loss_d 0.773 (0.773)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.773 (0.773)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.57 (  0.57)	Loss_d 0.773 (0.773)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 40/  1]	epoch_time 0.0376 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0372 (0.0392)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6309000119566918, 0.5070000290870667)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.26it/s] 15%|#5        | 4/26 [00:00<00:01, 19.17it/s] 27%|##6       | 7/26 [00:00<00:00, 22.78it/s] 38%|###8      | 10/26 [00:00<00:00, 25.39it/s] 50%|#####     | 13/26 [00:00<00:00, 26.31it/s] 62%|######1   | 16/26 [00:00<00:00, 26.97it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.55it/s] 88%|########8 | 23/26 [00:00<00:00, 28.42it/s]100%|##########| 26/26 [00:01<00:00, 24.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.002 (0.002)	train_nll   0.65 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.62 (  0.67)	train_minacc   0.57 (  0.56)	train_majacc   0.63 (  0.69)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.11it/s] 27%|##6       | 7/26 [00:00<00:00, 33.84it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.84it/s] 46%|####6     | 12/26 [00:00<00:00, 39.11it/s] 69%|######9   | 18/26 [00:00<00:00, 43.39it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.39it/s] 92%|#########2| 24/26 [00:00<00:00, 47.09it/s]100%|##########| 26/26 [00:00<00:00, 39.83it/s]
Test: [   0/  26]	Loss 0.627 (0.627)	test_acc   0.64 (  0.64)	test_minacc   0.61 (  0.61)	test_majacc   0.65 (  0.65)	Loss_d 0.627 (0.627)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.574 (0.613)	test_acc   0.69 (  0.65)	test_minacc   0.66 (  0.63)	test_majacc   0.70 (  0.66)	Loss_d 0.574 (0.613)	test_acc_d   0.69 (  0.65)	test_minacc_d   0.66 (  0.63)	test_majacc_d   0.70 (  0.66)	test_corr_d   0.41 (  0.33)
Test: [  20/  26]	Loss 0.610 (0.611)	test_acc   0.66 (  0.65)	test_minacc   0.61 (  0.62)	test_majacc   0.67 (  0.66)	Loss_d 0.610 (0.611)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.61 (  0.62)	test_majacc_d   0.67 (  0.66)	test_corr_d   0.33 (  0.33)
Test: [  26/  26]	Loss 0.629 (0.613)	test_acc   0.64 (  0.65)	test_minacc   0.61 (  0.61)	test_majacc   0.65 (  0.66)	Loss_d 0.629 (0.613)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.65 (  0.66)	test_corr_d   0.31 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.93it/s]
Test: [  0/  1]	Loss 0.680 (0.680)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.64 (  0.64)	Loss_d 0.680 (0.680)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.16 ( -0.16)
Test: [  1/  1]	Loss 0.680 (0.680)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.64 (  0.64)	Loss_d 0.680 (0.680)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.16 ( -0.16)
Overall Timing[ 41/  1]	epoch_time 0.0395 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0390 (0.0392)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6508000158071517, 0.6000000238418579)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 15%|#5        | 4/26 [00:00<00:01, 16.97it/s] 27%|##6       | 7/26 [00:00<00:00, 20.54it/s] 38%|###8      | 10/26 [00:00<00:00, 23.16it/s] 50%|#####     | 13/26 [00:00<00:00, 24.80it/s] 62%|######1   | 16/26 [00:00<00:00, 26.05it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.85it/s] 85%|########4 | 22/26 [00:00<00:00, 27.29it/s] 96%|#########6| 25/26 [00:01<00:00, 27.91it/s]100%|##########| 26/26 [00:01<00:00, 23.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.60 (  0.64)	train_minacc   0.57 (  0.62)	train_majacc   0.60 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.23it/s] 23%|##3       | 6/26 [00:00<00:00, 29.80it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.80it/s] 42%|####2     | 11/26 [00:00<00:00, 35.07it/s] 65%|######5   | 17/26 [00:00<00:00, 43.82it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.82it/s] 88%|########8 | 23/26 [00:00<00:00, 47.65it/s]100%|##########| 26/26 [00:00<00:00, 38.87it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.65 (  0.65)	test_minacc   0.76 (  0.76)	test_majacc   0.64 (  0.64)	Loss_d 0.635 (0.635)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.622 (0.633)	test_acc   0.67 (  0.64)	test_minacc   0.55 (  0.65)	test_majacc   0.69 (  0.64)	Loss_d 0.622 (0.633)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.55 (  0.65)	test_majacc_d   0.69 (  0.64)	test_corr_d   0.32 (  0.25)
Test: [  20/  26]	Loss 0.632 (0.631)	test_acc   0.63 (  0.64)	test_minacc   0.64 (  0.65)	test_majacc   0.62 (  0.64)	Loss_d 0.632 (0.631)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.64 (  0.65)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.25 (  0.26)
Test: [  26/  26]	Loss 0.642 (0.632)	test_acc   0.60 (  0.64)	test_minacc   0.57 (  0.64)	test_majacc   0.61 (  0.64)	Loss_d 0.642 (0.632)	test_acc_d   0.60 (  0.64)	test_minacc_d   0.57 (  0.64)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.23 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.49it/s]
Test: [  0/  1]	Loss 0.649 (0.649)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.60 (  0.60)	Loss_d 0.649 (0.649)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.25 ( -0.25)
Test: [  1/  1]	Loss 0.649 (0.649)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.60 (  0.60)	Loss_d 0.649 (0.649)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.25 ( -0.25)
Overall Timing[ 42/  1]	epoch_time 0.0410 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0405 (0.0393)
record: (train_acc, test_acc) (0.6560000177025795, 0.6350000500679016)
last accs (train_acc, test_acc) (0.6399000216722488, 0.625)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.90it/s] 15%|#5        | 4/26 [00:00<00:01, 18.09it/s] 27%|##6       | 7/26 [00:00<00:00, 22.52it/s] 38%|###8      | 10/26 [00:00<00:00, 24.53it/s] 50%|#####     | 13/26 [00:00<00:00, 25.59it/s] 65%|######5   | 17/26 [00:00<00:00, 27.33it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.88it/s] 88%|########8 | 23/26 [00:00<00:00, 28.08it/s]100%|##########| 26/26 [00:01<00:00, 24.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1118 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1119 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1120 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1121 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1122 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1123 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1124 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1125 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1126 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1127 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1128 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1129 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1130 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1131 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1132 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1133 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1134 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1135 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1136 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1137 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1138 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1139 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1140 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1141 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1142 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1143 364.00000000000006
constrain score by whole: 0
Epoch: [43][  26/  26]	Loss 0.002 (0.002)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.60 (  0.61)	train_minacc   0.68 (  0.64)	train_majacc   0.59 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.64it/s] 23%|##3       | 6/26 [00:00<00:00, 25.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.24it/s] 42%|####2     | 11/26 [00:00<00:00, 34.62it/s] 65%|######5   | 17/26 [00:00<00:00, 39.84it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.84it/s] 88%|########8 | 23/26 [00:00<00:00, 44.02it/s]100%|##########| 26/26 [00:00<00:00, 35.21it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.62 (  0.62)	test_minacc   0.66 (  0.66)	test_majacc   0.62 (  0.62)	Loss_d 0.645 (0.645)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.646 (0.648)	test_acc   0.62 (  0.61)	test_minacc   0.57 (  0.66)	test_majacc   0.63 (  0.61)	Loss_d 0.646 (0.648)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.57 (  0.66)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.27 (  0.20)
Test: [  20/  26]	Loss 0.649 (0.647)	test_acc   0.62 (  0.62)	test_minacc   0.66 (  0.65)	test_majacc   0.61 (  0.61)	Loss_d 0.649 (0.647)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.66 (  0.65)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.653 (0.647)	test_acc   0.61 (  0.61)	test_minacc   0.68 (  0.65)	test_majacc   0.60 (  0.61)	Loss_d 0.653 (0.647)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.68 (  0.65)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.19 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.64it/s]
Test: [  0/  1]	Loss 0.652 (0.652)	test_acc   0.64 (  0.64)	test_minacc   0.65 (  0.65)	test_majacc   0.57 (  0.57)	Loss_d 0.652 (0.652)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.25 ( -0.25)
Test: [  1/  1]	Loss 0.652 (0.652)	test_acc   0.64 (  0.64)	test_minacc   0.65 (  0.65)	test_majacc   0.57 (  0.57)	Loss_d 0.652 (0.652)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.25 ( -0.25)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/20/checkpoints/model_best.pth
Overall Timing[ 43/  1]	epoch_time 0.0391 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0386 (0.0392)
record: (train_acc, test_acc) (0.6145000059604645, 0.6380000114440918)
last accs (train_acc, test_acc) (0.6145000059604645, 0.6380000114440918)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.68it/s] 15%|#5        | 4/26 [00:00<00:01, 17.08it/s] 27%|##6       | 7/26 [00:00<00:00, 21.14it/s] 38%|###8      | 10/26 [00:00<00:00, 23.95it/s] 50%|#####     | 13/26 [00:00<00:00, 25.17it/s] 62%|######1   | 16/26 [00:00<00:00, 26.49it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.10it/s] 88%|########8 | 23/26 [00:00<00:00, 28.18it/s]100%|##########| 26/26 [00:01<00:00, 24.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1144 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1145 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1146 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1147 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1148 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1149 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1150 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1151 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1152 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1153 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1154 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1155 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1156 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1157 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1158 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1159 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1160 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1161 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1162 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1163 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1164 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1165 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1166 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1167 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1168 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1169 364.00000000000006
constrain score by whole: 0
Epoch: [44][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.62 (  0.61)	train_minacc   0.68 (  0.65)	train_majacc   0.61 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.86it/s] 23%|##3       | 6/26 [00:00<00:00, 28.61it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.61it/s] 42%|####2     | 11/26 [00:00<00:00, 32.46it/s] 62%|######1   | 16/26 [00:00<00:00, 38.30it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.30it/s] 81%|########  | 21/26 [00:00<00:00, 41.95it/s]100%|##########| 26/26 [00:00<00:00, 36.39it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.60 (  0.60)	test_minacc   0.66 (  0.66)	test_majacc   0.59 (  0.59)	Loss_d 0.657 (0.657)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.661 (0.660)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.66)	test_majacc   0.60 (  0.59)	Loss_d 0.661 (0.660)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.66)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.22 (  0.15)
Test: [  20/  26]	Loss 0.662 (0.658)	test_acc   0.60 (  0.61)	test_minacc   0.67 (  0.66)	test_majacc   0.58 (  0.60)	Loss_d 0.662 (0.658)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.67 (  0.66)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.14 (  0.16)
Test: [  26/  26]	Loss 0.667 (0.659)	test_acc   0.58 (  0.61)	test_minacc   0.61 (  0.66)	test_majacc   0.57 (  0.60)	Loss_d 0.667 (0.659)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.61 (  0.66)	test_majacc_d   0.57 (  0.60)	test_corr_d   0.15 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.42it/s]
Test: [  0/  1]	Loss 0.651 (0.651)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.58 (  0.58)	Loss_d 0.651 (0.651)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.28 ( -0.28)
Test: [  1/  1]	Loss 0.651 (0.651)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.58 (  0.58)	Loss_d 0.651 (0.651)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.28 ( -0.28)
Overall Timing[ 44/  1]	epoch_time 0.0411 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0406 (0.0393)
record: (train_acc, test_acc) (0.6145000059604645, 0.6380000114440918)
last accs (train_acc, test_acc) (0.6062000074386596, 0.6360000371932983)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 15%|#5        | 4/26 [00:00<00:01, 16.03it/s] 27%|##6       | 7/26 [00:00<00:00, 20.24it/s] 38%|###8      | 10/26 [00:00<00:00, 23.04it/s] 50%|#####     | 13/26 [00:00<00:00, 24.14it/s] 62%|######1   | 16/26 [00:00<00:00, 24.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.35it/s] 88%|########8 | 23/26 [00:00<00:00, 27.11it/s]100%|##########| 26/26 [00:01<00:00, 23.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1170 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1171 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1172 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1173 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1174 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1175 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1176 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1177 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1178 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1179 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1180 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1181 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1182 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1183 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1184 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1185 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1186 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1187 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1188 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1189 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1190 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1191 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1192 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1193 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1194 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1195 364.00000000000006
constrain score by whole: 0
Epoch: [45][  26/  26]	Loss 0.002 (0.002)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.77)	train_acc   0.59 (  0.60)	train_minacc   0.68 (  0.62)	train_majacc   0.58 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.69it/s] 23%|##3       | 6/26 [00:00<00:00, 27.50it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.50it/s] 42%|####2     | 11/26 [00:00<00:00, 36.18it/s] 65%|######5   | 17/26 [00:00<00:00, 41.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.11it/s] 88%|########8 | 23/26 [00:00<00:00, 46.64it/s]100%|##########| 26/26 [00:00<00:00, 36.98it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.64 (  0.64)	Loss_d 0.648 (0.648)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.653 (0.652)	test_acc   0.60 (  0.61)	test_minacc   0.55 (  0.65)	test_majacc   0.61 (  0.61)	Loss_d 0.653 (0.652)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.55 (  0.65)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.28 (  0.21)
Test: [  20/  26]	Loss 0.653 (0.650)	test_acc   0.61 (  0.62)	test_minacc   0.59 (  0.65)	test_majacc   0.62 (  0.61)	Loss_d 0.653 (0.650)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.59 (  0.65)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.20 (  0.21)
Test: [  26/  26]	Loss 0.662 (0.651)	test_acc   0.60 (  0.62)	test_minacc   0.71 (  0.65)	test_majacc   0.59 (  0.61)	Loss_d 0.662 (0.651)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.71 (  0.65)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.19 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.82it/s]
Test: [  0/  1]	Loss 0.656 (0.656)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.55 (  0.55)	Loss_d 0.656 (0.656)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.26 ( -0.26)
Test: [  1/  1]	Loss 0.656 (0.656)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.55 (  0.55)	Loss_d 0.656 (0.656)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.26 ( -0.26)
Overall Timing[ 45/  1]	epoch_time 0.0397 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0392 (0.0393)
record: (train_acc, test_acc) (0.6145000059604645, 0.6380000114440918)
last accs (train_acc, test_acc) (0.6186000087857246, 0.628000020980835)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.07it/s] 15%|#5        | 4/26 [00:00<00:01, 18.01it/s] 27%|##6       | 7/26 [00:00<00:00, 22.16it/s] 38%|###8      | 10/26 [00:00<00:00, 24.04it/s] 50%|#####     | 13/26 [00:00<00:00, 25.66it/s] 62%|######1   | 16/26 [00:00<00:00, 27.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.80it/s] 85%|########4 | 22/26 [00:00<00:00, 27.33it/s] 96%|#########6| 25/26 [00:00<00:00, 27.76it/s]100%|##########| 26/26 [00:01<00:00, 24.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1196 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1197 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1198 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1199 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1200 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1201 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1202 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1203 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1204 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1205 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1206 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1207 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1208 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1209 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1210 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1211 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1212 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1213 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1214 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1215 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1216 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1217 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1218 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1219 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1220 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1221 364.00000000000006
constrain score by whole: 0
Epoch: [46][  26/  26]	Loss 0.002 (0.005)	train_nll   0.62 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.65 (  0.62)	train_minacc   0.54 (  0.58)	train_majacc   0.67 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.94it/s] 23%|##3       | 6/26 [00:00<00:00, 28.07it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.07it/s] 42%|####2     | 11/26 [00:00<00:00, 35.38it/s] 65%|######5   | 17/26 [00:00<00:00, 39.66it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.66it/s] 85%|########4 | 22/26 [00:00<00:00, 42.24it/s]100%|##########| 26/26 [00:00<00:00, 35.56it/s]
Test: [   0/  26]	Loss 0.626 (0.626)	test_acc   0.64 (  0.64)	test_minacc   0.54 (  0.54)	test_majacc   0.65 (  0.65)	Loss_d 0.626 (0.626)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.578 (0.612)	test_acc   0.72 (  0.66)	test_minacc   0.74 (  0.61)	test_majacc   0.71 (  0.67)	Loss_d 0.578 (0.612)	test_acc_d   0.72 (  0.66)	test_minacc_d   0.74 (  0.61)	test_majacc_d   0.71 (  0.67)	test_corr_d   0.41 (  0.37)
Test: [  20/  26]	Loss 0.605 (0.611)	test_acc   0.67 (  0.66)	test_minacc   0.59 (  0.59)	test_majacc   0.68 (  0.67)	Loss_d 0.605 (0.611)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.68 (  0.67)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.626 (0.614)	test_acc   0.65 (  0.65)	test_minacc   0.61 (  0.59)	test_majacc   0.65 (  0.67)	Loss_d 0.626 (0.614)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.35 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.37it/s]
Test: [  0/  1]	Loss 0.710 (0.710)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.63 (  0.63)	Loss_d 0.710 (0.710)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.710 (0.710)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.63 (  0.63)	Loss_d 0.710 (0.710)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 46/  1]	epoch_time 0.0410 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0406 (0.0393)
record: (train_acc, test_acc) (0.6145000059604645, 0.6380000114440918)
last accs (train_acc, test_acc) (0.6539000143408775, 0.5710000395774841)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.59it/s] 15%|#5        | 4/26 [00:00<00:01, 18.50it/s] 27%|##6       | 7/26 [00:00<00:00, 22.22it/s] 38%|###8      | 10/26 [00:00<00:00, 24.74it/s] 50%|#####     | 13/26 [00:00<00:00, 25.77it/s] 62%|######1   | 16/26 [00:00<00:00, 26.51it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.35it/s] 85%|########4 | 22/26 [00:00<00:00, 27.84it/s] 96%|#########6| 25/26 [00:00<00:00, 28.13it/s]100%|##########| 26/26 [00:01<00:00, 24.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1222 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1223 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1224 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1225 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1226 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1227 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1228 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1229 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1230 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1231 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1232 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1233 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1234 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1235 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1236 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1237 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1238 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1239 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1240 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1241 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1242 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1243 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1244 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1245 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1246 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1247 364.00000000000006
constrain score by whole: 0
Epoch: [47][  26/  26]	Loss 0.002 (0.005)	train_nll   0.61 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.68 (  0.65)	train_minacc   0.54 (  0.57)	train_majacc   0.70 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.61it/s] 23%|##3       | 6/26 [00:00<00:00, 30.44it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.44it/s] 42%|####2     | 11/26 [00:00<00:00, 36.54it/s] 62%|######1   | 16/26 [00:00<00:00, 40.83it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.83it/s] 85%|########4 | 22/26 [00:00<00:00, 43.33it/s]100%|##########| 26/26 [00:00<00:00, 37.85it/s]
Test: [   0/  26]	Loss 0.614 (0.614)	test_acc   0.67 (  0.67)	test_minacc   0.59 (  0.59)	test_majacc   0.68 (  0.68)	Loss_d 0.614 (0.614)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.571 (0.598)	test_acc   0.72 (  0.68)	test_minacc   0.62 (  0.60)	test_majacc   0.73 (  0.70)	Loss_d 0.571 (0.598)	test_acc_d   0.72 (  0.68)	test_minacc_d   0.62 (  0.60)	test_majacc_d   0.73 (  0.70)	test_corr_d   0.46 (  0.40)
Test: [  20/  26]	Loss 0.576 (0.595)	test_acc   0.71 (  0.69)	test_minacc   0.63 (  0.59)	test_majacc   0.73 (  0.70)	Loss_d 0.576 (0.595)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.63 (  0.59)	test_majacc_d   0.73 (  0.70)	test_corr_d   0.43 (  0.41)
Test: [  26/  26]	Loss 0.614 (0.597)	test_acc   0.66 (  0.68)	test_minacc   0.57 (  0.58)	test_majacc   0.68 (  0.70)	Loss_d 0.614 (0.597)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.68 (  0.70)	test_corr_d   0.39 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.51it/s]
Test: [  0/  1]	Loss 0.706 (0.706)	test_acc   0.57 (  0.57)	test_minacc   0.55 (  0.55)	test_majacc   0.69 (  0.69)	Loss_d 0.706 (0.706)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.706 (0.706)	test_acc   0.57 (  0.57)	test_minacc   0.55 (  0.55)	test_majacc   0.69 (  0.69)	Loss_d 0.706 (0.706)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 47/  1]	epoch_time 0.0391 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0386 (0.0393)
record: (train_acc, test_acc) (0.6145000059604645, 0.6380000114440918)
last accs (train_acc, test_acc) (0.6849000295996666, 0.5670000314712524)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.02it/s] 15%|#5        | 4/26 [00:00<00:01, 16.26it/s] 27%|##6       | 7/26 [00:00<00:00, 21.08it/s] 42%|####2     | 11/26 [00:00<00:00, 24.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.36it/s] 65%|######5   | 17/26 [00:00<00:00, 27.11it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.78it/s] 88%|########8 | 23/26 [00:00<00:00, 28.14it/s]100%|##########| 26/26 [00:01<00:00, 24.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1248 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1249 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1250 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1251 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1252 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1253 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1254 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1255 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1256 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1257 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1258 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1259 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1260 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1261 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1262 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1263 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1264 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1265 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1266 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1267 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1268 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1269 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1270 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1271 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1272 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1273 364.00000000000006
constrain score by whole: 0
Epoch: [48][  26/  26]	Loss 0.002 (0.003)	train_nll   0.62 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.66 (  0.64)	train_minacc   0.64 (  0.56)	train_majacc   0.67 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.49it/s] 27%|##6       | 7/26 [00:00<00:00, 34.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.17it/s] 50%|#####     | 13/26 [00:00<00:00, 40.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.60it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.60it/s] 96%|#########6| 25/26 [00:00<00:00, 47.69it/s]100%|##########| 26/26 [00:00<00:00, 40.77it/s]
Test: [   0/  26]	Loss 0.617 (0.617)	test_acc   0.66 (  0.66)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.617 (0.617)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.593 (0.603)	test_acc   0.69 (  0.68)	test_minacc   0.51 (  0.58)	test_majacc   0.71 (  0.70)	Loss_d 0.593 (0.603)	test_acc_d   0.69 (  0.68)	test_minacc_d   0.51 (  0.58)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.44 (  0.40)
Test: [  20/  26]	Loss 0.586 (0.600)	test_acc   0.72 (  0.69)	test_minacc   0.61 (  0.58)	test_majacc   0.74 (  0.71)	Loss_d 0.586 (0.600)	test_acc_d   0.72 (  0.69)	test_minacc_d   0.61 (  0.58)	test_majacc_d   0.74 (  0.71)	test_corr_d   0.42 (  0.40)
Test: [  26/  26]	Loss 0.613 (0.601)	test_acc   0.70 (  0.69)	test_minacc   0.57 (  0.58)	test_majacc   0.71 (  0.71)	Loss_d 0.613 (0.601)	test_acc_d   0.70 (  0.69)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.41 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.91it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.63 (  0.63)	Loss_d 0.690 (0.690)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.63 (  0.63)	Loss_d 0.690 (0.690)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 48/  1]	epoch_time 0.0389 (0.0402)	validation_time 0.0005 (0.0006)	train_time 0.0384 (0.0393)
record: (train_acc, test_acc) (0.6145000059604645, 0.6380000114440918)
last accs (train_acc, test_acc) (0.6889000295400619, 0.5950000286102295)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.68it/s] 15%|#5        | 4/26 [00:00<00:01, 15.31it/s] 27%|##6       | 7/26 [00:00<00:00, 20.04it/s] 38%|###8      | 10/26 [00:00<00:00, 23.26it/s] 50%|#####     | 13/26 [00:00<00:00, 25.19it/s] 62%|######1   | 16/26 [00:00<00:00, 26.42it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.99it/s] 88%|########8 | 23/26 [00:00<00:00, 28.48it/s]100%|##########| 26/26 [00:01<00:00, 28.78it/s]100%|##########| 26/26 [00:01<00:00, 23.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1274 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1275 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1276 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1277 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1278 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1279 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1280 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1281 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1282 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1283 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1284 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1285 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1286 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1287 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1288 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1289 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1290 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1291 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1292 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1293 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1294 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1295 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1296 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1297 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1298 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1299 364.00000000000006
constrain score by whole: 0
Epoch: [49][  26/  26]	Loss 0.002 (0.003)	train_nll   0.65 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.62 (  0.66)	train_minacc   0.64 (  0.60)	train_majacc   0.62 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.94it/s] 27%|##6       | 7/26 [00:00<00:00, 29.97it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.97it/s] 50%|#####     | 13/26 [00:00<00:00, 38.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.05it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.05it/s] 96%|#########6| 25/26 [00:00<00:00, 46.14it/s]100%|##########| 26/26 [00:00<00:00, 37.64it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.58 (  0.58)	Loss_d 0.665 (0.665)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.617 (0.630)	test_acc   0.64 (  0.64)	test_minacc   0.60 (  0.61)	test_majacc   0.65 (  0.64)	Loss_d 0.617 (0.630)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.60 (  0.61)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.32 (  0.28)
Test: [  20/  26]	Loss 0.602 (0.623)	test_acc   0.68 (  0.65)	test_minacc   0.66 (  0.62)	test_majacc   0.68 (  0.66)	Loss_d 0.602 (0.623)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.66 (  0.62)	test_majacc_d   0.68 (  0.66)	test_corr_d   0.29 (  0.29)
Test: [  26/  26]	Loss 0.652 (0.624)	test_acc   0.63 (  0.65)	test_minacc   0.61 (  0.62)	test_majacc   0.63 (  0.66)	Loss_d 0.652 (0.624)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.61 (  0.62)	test_majacc_d   0.63 (  0.66)	test_corr_d   0.26 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.53it/s]
Test: [  0/  1]	Loss 0.672 (0.672)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.60 (  0.60)	Loss_d 0.672 (0.672)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.19 ( -0.19)
Test: [  1/  1]	Loss 0.672 (0.672)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.60 (  0.60)	Loss_d 0.672 (0.672)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.19 ( -0.19)
Overall Timing[ 49/  1]	epoch_time 0.0395 (0.0402)	validation_time 0.0004 (0.0005)	train_time 0.0390 (0.0393)
record: (train_acc, test_acc) (0.6145000059604645, 0.6380000114440918)
last accs (train_acc, test_acc) (0.6529000253081322, 0.6160000562667847)
wandb: - 0.166 MB of 0.166 MB uploadedwandb: \ 0.166 MB of 0.166 MB uploadedwandb: | 0.166 MB of 0.166 MB uploadedwandb: / 0.166 MB of 0.166 MB uploadedwandb: - 0.166 MB of 0.166 MB uploadedwandb: \ 0.166 MB of 0.166 MB uploadedwandb: | 0.166 MB of 0.166 MB uploadedwandb: / 0.166 MB of 0.166 MB uploadedwandb: - 0.166 MB of 0.166 MB uploadedwandb: \ 0.166 MB of 0.166 MB uploadedwandb: | 0.166 MB of 0.166 MB uploadedwandb: / 0.187 MB of 0.563 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/diagnostics/epoch_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/diagnostics/train_time_val █▁▂▁▁▁▁▁▁▁▁▁▂▂▂▁▁▁▁▂▁▁▂▂▁▁▁▂▁▂▂▁▁▁▂▁▂▂▁▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/Loss_avg ▅▆█▇▆▅▇▂▅▃▇▅▄▅▃▁▂▅▃▂▃▁▂▂▁▂▂▂▃▂▁▂▄▂▁▁▁▂▂▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/Loss_d_avg ▅▆█▇▆▅▇▂▅▃▇▅▄▅▃▁▂▅▃▂▃▁▂▂▁▂▂▂▃▂▁▂▄▂▁▁▁▂▂▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/Loss_d_val ▅▆█▇▆▅▇▂▅▃▇▅▄▅▃▁▂▅▃▂▃▁▂▂▁▂▂▂▃▂▁▂▄▂▁▁▁▂▂▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/Loss_val ▅▆█▇▆▅▇▂▅▃▇▅▄▅▃▁▂▅▃▂▃▁▂▂▁▂▂▂▃▂▁▂▄▂▁▁▁▂▂▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_acc_avg ▃▃▁▁▄▅▄█▅▅▆▆▄▄▅█▇▃▅▅▅█▅▅█▇▆▇▅▆█▆▅▇███▆▆▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_acc_d_avg ▃▃▁▁▄▅▄█▅▅▆▆▄▄▅█▇▃▅▅▅█▅▅█▇▆▇▅▆█▆▅▇███▆▆▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_acc_d_val ▃▃▁▁▄▅▄█▅▅▆▆▄▄▅█▇▃▅▅▅█▅▅█▇▆▇▅▆█▆▅▇███▆▆▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_acc_val ▃▃▁▁▄▅▄█▅▅▆▆▄▄▅█▇▃▅▅▅█▅▅█▇▆▇▅▆█▆▅▇███▆▆▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_corr_d_avg ▆▆██▆▆▅▃▅▄▄▅▆▆▄▂▃█▅▃▃▁▃▃▁▂▂▃▄▃▂▂▃▂▂▂▂▃▃▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_corr_d_val ▆▆██▆▆▅▃▅▄▄▅▆▆▄▂▃█▅▃▃▁▃▃▁▂▂▃▄▃▂▂▃▂▂▂▂▃▃▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_majacc_avg ▇▆███▄▆▂▆▂▅▆▅█▆▃▅▅▂▄▂▂▂▄▂▄▁▄▂▅▄▁▃▅▄▃▃▄▆▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_majacc_d_avg ▇▆███▄▆▂▆▂▅▆▅█▆▃▅▅▂▄▂▂▂▄▂▄▁▄▂▅▄▁▃▅▄▃▃▄▆▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_majacc_d_val ▇▆███▄▆▂▆▂▅▆▅█▆▃▅▅▂▄▂▂▂▄▂▄▁▄▂▅▄▁▃▅▄▃▃▄▆▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_majacc_val ▇▆███▄▆▂▆▂▅▆▅█▆▃▅▅▂▄▂▂▂▄▂▄▁▄▂▅▄▁▃▅▄▃▃▄▆▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_minacc_avg ▃▃▁▁▄▅▄█▅▅▆▅▄▄▅█▇▃▅▅▅█▅▅█▇▆▇▅▆█▆▅▇███▆▆▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_minacc_d_avg ▃▃▁▁▄▅▄█▅▅▆▅▄▄▅█▇▃▅▅▅█▅▅█▇▆▇▅▆█▆▅▇███▆▆▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_minacc_d_val ▃▃▁▁▄▅▄█▅▅▆▅▄▄▅█▇▃▅▅▅█▅▅█▇▆▇▅▆█▆▅▇███▆▆▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_minacc_val ▃▃▁▁▄▅▄█▅▅▆▅▄▄▅█▇▃▅▅▅█▅▅█▇▆▇▅▆█▆▅▇███▆▆▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/Loss_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/Loss_val ▂▁▁▁█▂▂▁▂▁▁▁▁▁▁▁▁▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_acc_avg █▄▅▆▅▆▄▅▃▃▃▄▄▃▄▃▄▃▂▁▂▂▂▃▂▂▁▁▁▅▄▃▂▆▄▃▃▄▅▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_acc_val ▇▅▆▅▄▂█▄▇▃▇▆▅▆▃▅▆▁▅▁▂▄▃▆▃▃▁▂▅▆▄▃▄▅▄▄▄▅▆▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_majacc_avg █▃▄▅▄▅▃▄▂▃▃▃▄▃▄▂▃▃▂▁▂▂▂▂▂▁▁▁▁▄▃▂▂▅▃▂▂▃▄▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_majacc_val █▅▇▅▃▁█▃▇▃▆▆▄▅▃▄▅▁▄▁▂▃▃▆▃▃▁▁▅▅▃▃▄▄▄▃▃▅▆▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_minacc_avg ▁▆▆▆▇▅▇▇▇▇▆█▆▆▆▇█▅▆▆▆▇▆▆█▇▇▆▆▆█▇▆▆███▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_minacc_val ▁▂▂▂▆▅▆█▅▆▆▇▅▅▃▆▇▃▆▃▆█▇▅▇▆▃▆▅▆▆▇▃▆▆▇▇▅▅▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_nll_avg ▃▅▃▁▂▁▃▂▄▄▅▃▃▅▄▆▄▅▇█▇▇█▇▇████▄▅▇▇▃▅▆▇▆▅▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_nll_val ▂▅▃▅█▆▁▅▃▆▄▃▅▄▆▆▅█▆▇▇▇▆▅▇▆▇▇▆▅▆▆▆▆▅▆▆▅▅▆
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_penalty_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_penalty_val ▂▁▁▁█▂▂▁▂▁▁▁▁▁▁▁▁▅▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/weight_norm_avg █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/weight_norm_val █▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/diagnostics/epoch_time_val 0.03946
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/diagnostics/train_time_val 0.03902
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/diagnostics/validation_time_val 0.00042
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/Loss_avg 0.67172
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/Loss_d_avg 0.67172
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/Loss_d_val 0.67172
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/Loss_val 0.67172
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_acc_avg 0.616
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_acc_d_avg 0.616
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_acc_d_val 0.616
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_acc_val 0.616
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_corr_d_avg -0.19309
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_corr_d_val -0.19309
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_majacc_avg 0.6
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_majacc_d_avg 0.6
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_majacc_d_val 0.6
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_majacc_val 0.6
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_minacc_avg 0.61778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_minacc_d_avg 0.61778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_minacc_d_val 0.61778
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/test/test_minacc_val 0.61778
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/Loss_avg 0.00273
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/Loss_val 0.00159
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_acc_avg 0.6609
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_acc_val 0.62
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_majacc_avg 0.67141
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_majacc_val 0.61712
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_minacc_avg 0.60323
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_minacc_val 0.64286
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_nll_avg 0.62003
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_nll_val 0.64957
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_penalty_avg 0.00189
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/train_penalty_val 0.00075
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/weight_norm_avg 7.76158
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/20/logs/train/weight_norm_val 7.76104
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/8tvyb517
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240904_234536-8tvyb517/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240904_234816-2msphlq0
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/2msphlq0
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, classes_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=13, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1215
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5985, 3, 32, 32) (6015, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:41,  1.65s/it] 19%|#9        | 5/26 [00:01<00:05,  3.65it/s] 35%|###4      | 9/26 [00:01<00:02,  7.05it/s] 50%|#####     | 13/26 [00:02<00:01, 10.68it/s] 65%|######5   | 17/26 [00:02<00:00, 14.35it/s] 81%|########  | 21/26 [00:02<00:00, 17.78it/s] 96%|#########6| 25/26 [00:02<00:00, 20.56it/s]100%|##########| 26/26 [00:02<00:00,  9.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 13
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.059 (4.901)	train_nll   0.36 (  0.58)	train_penalty   0.06 (  0.18)	weight_norm   7.93 (  8.57)	train_acc   0.88 (  0.76)	train_minacc   0.00 (  0.23)	train_majacc   1.00 (  0.86)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.37it/s] 35%|###4      | 9/26 [00:00<00:00, 41.74it/s]                                               35%|###4      | 9/26 [00:00<00:00, 41.74it/s] 58%|#####7    | 15/26 [00:00<00:00, 46.06it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 46.06it/s] 81%|########  | 21/26 [00:00<00:00, 48.60it/s]100%|##########| 26/26 [00:00<00:00, 43.60it/s]
Test: [   0/  26]	Loss 0.419 (0.419)	test_acc   0.86 (  0.86)	test_minacc   0.02 (  0.02)	test_majacc   0.98 (  0.98)	Loss_d 0.419 (0.419)	test_acc_d   0.86 (  0.86)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.98 (  0.98)	test_corr_d   0.96 (  0.96)
Test: [  10/  26]	Loss 0.370 (0.403)	test_acc   0.86 (  0.85)	test_minacc   0.05 (  0.03)	test_majacc   0.99 (  0.99)	Loss_d 0.370 (0.403)	test_acc_d   0.86 (  0.85)	test_minacc_d   0.05 (  0.03)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  20/  26]	Loss 0.451 (0.411)	test_acc   0.82 (  0.85)	test_minacc   0.01 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.451 (0.411)	test_acc_d   0.82 (  0.85)	test_minacc_d   0.01 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
Test: [  26/  26]	Loss 0.371 (0.412)	test_acc   0.88 (  0.85)	test_minacc   0.00 (  0.03)	test_majacc   1.00 (  0.99)	Loss_d 0.371 (0.412)	test_acc_d   0.88 (  0.85)	test_minacc_d   0.00 (  0.03)	test_majacc_d   1.00 (  0.99)	test_corr_d   0.97 (  0.97)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.46it/s]100%|##########| 1/1 [00:00<00:00,  2.46it/s]
Test: [  0/  1]	Loss 1.606 (1.606)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.606 (1.606)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
Test: [  1/  1]	Loss 1.606 (1.606)	test_acc   0.12 (  0.12)	test_minacc   0.02 (  0.02)	test_majacc   0.99 (  0.99)	Loss_d 1.606 (1.606)	test_acc_d   0.12 (  0.12)	test_minacc_d   0.02 (  0.02)	test_majacc_d   0.99 (  0.99)	test_corr_d   0.95 (  0.95)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/21/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0782 (0.0782)	validation_time 0.0068 (0.0068)	train_time 0.0671 (0.0671)
record: (train_acc, test_acc) (0.8482000255584716, 0.11600000411272049)
last accs (train_acc, test_acc) (0.8482000255584716, 0.11600000411272049)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.88it/s] 15%|#5        | 4/26 [00:00<00:01, 17.81it/s] 31%|###       | 8/26 [00:00<00:00, 23.83it/s] 42%|####2     | 11/26 [00:00<00:00, 25.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.99it/s] 88%|########8 | 23/26 [00:00<00:00, 29.70it/s]100%|##########| 26/26 [00:01<00:00, 25.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.006 (0.011)	train_nll   0.65 (  0.58)	train_penalty   0.00 (  0.01)	weight_norm   7.77 (  7.81)	train_acc   0.60 (  0.68)	train_minacc   0.69 (  0.42)	train_majacc   0.58 (  0.73)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.15it/s] 31%|###       | 8/26 [00:00<00:00, 38.93it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.93it/s] 50%|#####     | 13/26 [00:00<00:00, 40.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.26it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.26it/s] 96%|#########6| 25/26 [00:00<00:00, 47.43it/s]100%|##########| 26/26 [00:00<00:00, 41.54it/s]
Test: [   0/  26]	Loss 0.599 (0.599)	test_acc   0.65 (  0.65)	test_minacc   0.53 (  0.53)	test_majacc   0.66 (  0.66)	Loss_d 0.599 (0.599)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.604 (0.602)	test_acc   0.64 (  0.64)	test_minacc   0.52 (  0.58)	test_majacc   0.66 (  0.65)	Loss_d 0.604 (0.602)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.52 (  0.58)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.36 (  0.37)
Test: [  20/  26]	Loss 0.634 (0.613)	test_acc   0.62 (  0.63)	test_minacc   0.59 (  0.59)	test_majacc   0.62 (  0.64)	Loss_d 0.634 (0.613)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.32 (  0.35)
Test: [  26/  26]	Loss 0.619 (0.613)	test_acc   0.62 (  0.63)	test_minacc   0.69 (  0.59)	test_majacc   0.61 (  0.64)	Loss_d 0.619 (0.613)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.69 (  0.59)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.29 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.75it/s]
Test: [  0/  1]	Loss 0.835 (0.835)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.74 (  0.74)	Loss_d 0.835 (0.835)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.835 (0.835)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.74 (  0.74)	Loss_d 0.835 (0.835)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.17 (  0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/21/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0389 (0.0586)	validation_time 0.0004 (0.0036)	train_time 0.0385 (0.0528)
record: (train_acc, test_acc) (0.6336000110507012, 0.5180000066757202)
last accs (train_acc, test_acc) (0.6336000110507012, 0.5180000066757202)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.06it/s] 15%|#5        | 4/26 [00:00<00:01, 15.44it/s] 27%|##6       | 7/26 [00:00<00:00, 20.68it/s] 42%|####2     | 11/26 [00:00<00:00, 25.03it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.45it/s] 69%|######9   | 18/26 [00:00<00:00, 28.01it/s] 81%|########  | 21/26 [00:00<00:00, 28.38it/s] 92%|#########2| 24/26 [00:00<00:00, 28.74it/s]100%|##########| 26/26 [00:01<00:00, 24.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.002 (0.002)	train_nll   0.56 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.76)	train_acc   0.66 (  0.65)	train_minacc   0.66 (  0.61)	train_majacc   0.66 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 23%|##3       | 6/26 [00:00<00:00, 25.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.58it/s] 42%|####2     | 11/26 [00:00<00:00, 35.08it/s] 65%|######5   | 17/26 [00:00<00:00, 41.00it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.00it/s] 88%|########8 | 23/26 [00:00<00:00, 46.70it/s]100%|##########| 26/26 [00:00<00:00, 36.64it/s]
Test: [   0/  26]	Loss 0.577 (0.577)	test_acc   0.69 (  0.69)	test_minacc   0.49 (  0.49)	test_majacc   0.72 (  0.72)	Loss_d 0.577 (0.577)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.587 (0.587)	test_acc   0.66 (  0.67)	test_minacc   0.54 (  0.58)	test_majacc   0.68 (  0.69)	Loss_d 0.587 (0.587)	test_acc_d   0.66 (  0.67)	test_minacc_d   0.54 (  0.58)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.40 (  0.40)
Test: [  20/  26]	Loss 0.618 (0.595)	test_acc   0.62 (  0.66)	test_minacc   0.54 (  0.58)	test_majacc   0.64 (  0.67)	Loss_d 0.618 (0.595)	test_acc_d   0.62 (  0.66)	test_minacc_d   0.54 (  0.58)	test_majacc_d   0.64 (  0.67)	test_corr_d   0.33 (  0.38)
Test: [  26/  26]	Loss 0.582 (0.595)	test_acc   0.62 (  0.66)	test_minacc   0.66 (  0.58)	test_majacc   0.62 (  0.67)	Loss_d 0.582 (0.595)	test_acc_d   0.62 (  0.66)	test_minacc_d   0.66 (  0.58)	test_majacc_d   0.62 (  0.67)	test_corr_d   0.37 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.16it/s]
Test: [  0/  1]	Loss 0.843 (0.843)	test_acc   0.51 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.75 (  0.75)	Loss_d 0.843 (0.843)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 0.843 (0.843)	test_acc   0.51 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.75 (  0.75)	Loss_d 0.843 (0.843)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.19 (  0.19)
Overall Timing[  2/  1]	epoch_time 0.0391 (0.0521)	validation_time 0.0005 (0.0026)	train_time 0.0386 (0.0481)
record: (train_acc, test_acc) (0.6336000110507012, 0.5180000066757202)
last accs (train_acc, test_acc) (0.6578000271320343, 0.5120000243186951)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.46it/s] 15%|#5        | 4/26 [00:00<00:01, 18.43it/s] 31%|###       | 8/26 [00:00<00:00, 24.46it/s] 42%|####2     | 11/26 [00:00<00:00, 25.56it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.92it/s] 65%|######5   | 17/26 [00:00<00:00, 27.78it/s] 81%|########  | 21/26 [00:00<00:00, 29.40it/s] 96%|#########6| 25/26 [00:00<00:00, 29.76it/s]100%|##########| 26/26 [00:01<00:00, 25.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.001 (0.002)	train_nll   0.57 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.65 (  0.65)	train_minacc   0.62 (  0.60)	train_majacc   0.65 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.98it/s] 27%|##6       | 7/26 [00:00<00:00, 36.80it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.80it/s] 46%|####6     | 12/26 [00:00<00:00, 42.13it/s] 69%|######9   | 18/26 [00:00<00:00, 44.77it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.77it/s] 92%|#########2| 24/26 [00:00<00:00, 48.50it/s]100%|##########| 26/26 [00:00<00:00, 41.36it/s]
Test: [   0/  26]	Loss 0.534 (0.534)	test_acc   0.70 (  0.70)	test_minacc   0.38 (  0.38)	test_majacc   0.74 (  0.74)	Loss_d 0.534 (0.534)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.541 (0.537)	test_acc   0.69 (  0.70)	test_minacc   0.52 (  0.53)	test_majacc   0.72 (  0.73)	Loss_d 0.541 (0.537)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.52 (  0.53)	test_majacc_d   0.72 (  0.73)	test_corr_d   0.53 (  0.55)
Test: [  20/  26]	Loss 0.567 (0.544)	test_acc   0.67 (  0.70)	test_minacc   0.50 (  0.53)	test_majacc   0.71 (  0.73)	Loss_d 0.567 (0.544)	test_acc_d   0.67 (  0.70)	test_minacc_d   0.50 (  0.53)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.52 (  0.54)
Test: [  26/  26]	Loss 0.539 (0.544)	test_acc   0.68 (  0.70)	test_minacc   0.62 (  0.53)	test_majacc   0.69 (  0.72)	Loss_d 0.539 (0.544)	test_acc_d   0.68 (  0.70)	test_minacc_d   0.62 (  0.53)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.52 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.34it/s]
Test: [  0/  1]	Loss 0.912 (0.912)	test_acc   0.47 (  0.47)	test_minacc   0.43 (  0.43)	test_majacc   0.78 (  0.78)	Loss_d 0.912 (0.912)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 0.912 (0.912)	test_acc   0.47 (  0.47)	test_minacc   0.43 (  0.43)	test_majacc   0.78 (  0.78)	Loss_d 0.912 (0.912)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.35 (  0.35)
Overall Timing[  3/  1]	epoch_time 0.0385 (0.0487)	validation_time 0.0004 (0.0020)	train_time 0.0381 (0.0456)
record: (train_acc, test_acc) (0.6336000110507012, 0.5180000066757202)
last accs (train_acc, test_acc) (0.6957000296711922, 0.4660000205039978)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.39it/s] 12%|#1        | 3/26 [00:00<00:01, 14.38it/s] 23%|##3       | 6/26 [00:00<00:00, 20.89it/s] 35%|###4      | 9/26 [00:00<00:00, 24.31it/s] 50%|#####     | 13/26 [00:00<00:00, 26.77it/s] 65%|######5   | 17/26 [00:00<00:00, 28.05it/s] 81%|########  | 21/26 [00:00<00:00, 28.98it/s] 96%|#########6| 25/26 [00:00<00:00, 29.34it/s]100%|##########| 26/26 [00:01<00:00, 25.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.005 (0.003)	train_nll   0.67 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.57 (  0.66)	train_minacc   0.66 (  0.57)	train_majacc   0.56 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.18it/s] 23%|##3       | 6/26 [00:00<00:00, 26.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.58it/s] 46%|####6     | 12/26 [00:00<00:00, 38.14it/s] 65%|######5   | 17/26 [00:00<00:00, 40.39it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.39it/s] 88%|########8 | 23/26 [00:00<00:00, 45.00it/s]100%|##########| 26/26 [00:00<00:00, 36.34it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.63 (  0.63)	Loss_d 0.634 (0.634)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.619 (0.612)	test_acc   0.63 (  0.64)	test_minacc   0.75 (  0.67)	test_majacc   0.61 (  0.63)	Loss_d 0.619 (0.612)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.75 (  0.67)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.27 (  0.30)
Test: [  20/  26]	Loss 0.640 (0.624)	test_acc   0.61 (  0.63)	test_minacc   0.63 (  0.66)	test_majacc   0.61 (  0.62)	Loss_d 0.640 (0.624)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.63 (  0.66)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.24 (  0.28)
Test: [  26/  26]	Loss 0.631 (0.624)	test_acc   0.60 (  0.62)	test_minacc   0.66 (  0.66)	test_majacc   0.60 (  0.62)	Loss_d 0.631 (0.624)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.26 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.41it/s]
Test: [  0/  1]	Loss 0.748 (0.748)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.66 (  0.66)	Loss_d 0.748 (0.748)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.748 (0.748)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.66 (  0.66)	Loss_d 0.748 (0.748)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.04 (  0.04)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/21/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0401 (0.0470)	validation_time 0.0004 (0.0017)	train_time 0.0396 (0.0444)
record: (train_acc, test_acc) (0.6242000098228455, 0.5580000281333923)
last accs (train_acc, test_acc) (0.6242000098228455, 0.5580000281333923)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.75it/s] 15%|#5        | 4/26 [00:00<00:01, 17.76it/s] 27%|##6       | 7/26 [00:00<00:00, 22.15it/s] 42%|####2     | 11/26 [00:00<00:00, 25.84it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.14it/s] 88%|########8 | 23/26 [00:00<00:00, 29.80it/s]100%|##########| 26/26 [00:01<00:00, 25.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.001 (0.002)	train_nll   0.63 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.62 (  0.65)	train_minacc   0.55 (  0.59)	train_majacc   0.63 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.01it/s] 23%|##3       | 6/26 [00:00<00:00, 29.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.66it/s] 42%|####2     | 11/26 [00:00<00:00, 38.30it/s] 65%|######5   | 17/26 [00:00<00:00, 41.97it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.97it/s] 88%|########8 | 23/26 [00:00<00:00, 46.64it/s]100%|##########| 26/26 [00:00<00:00, 38.66it/s]
Test: [   0/  26]	Loss 0.720 (0.720)	test_acc   0.50 (  0.50)	test_minacc   0.66 (  0.66)	test_majacc   0.48 (  0.48)	Loss_d 0.720 (0.720)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.01 ( -0.01)
Test: [  10/  26]	Loss 0.681 (0.699)	test_acc   0.56 (  0.54)	test_minacc   0.79 (  0.73)	test_majacc   0.52 (  0.50)	Loss_d 0.681 (0.699)	test_acc_d   0.56 (  0.54)	test_minacc_d   0.79 (  0.73)	test_majacc_d   0.52 (  0.50)	test_corr_d  -0.04 ( -0.05)
Test: [  20/  26]	Loss 0.701 (0.705)	test_acc   0.54 (  0.53)	test_minacc   0.64 (  0.73)	test_majacc   0.52 (  0.50)	Loss_d 0.701 (0.705)	test_acc_d   0.54 (  0.53)	test_minacc_d   0.64 (  0.73)	test_majacc_d   0.52 (  0.50)	test_corr_d  -0.08 ( -0.07)
Test: [  26/  26]	Loss 0.681 (0.704)	test_acc   0.58 (  0.54)	test_minacc   0.66 (  0.72)	test_majacc   0.57 (  0.50)	Loss_d 0.681 (0.704)	test_acc_d   0.58 (  0.54)	test_minacc_d   0.66 (  0.72)	test_majacc_d   0.57 (  0.50)	test_corr_d   0.03 ( -0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.52it/s]
Test: [  0/  1]	Loss 0.643 (0.643)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.53 (  0.53)	Loss_d 0.643 (0.643)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.53 (  0.53)	test_corr_d  -0.31 ( -0.31)
Test: [  1/  1]	Loss 0.643 (0.643)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.53 (  0.53)	Loss_d 0.643 (0.643)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.53 (  0.53)	test_corr_d  -0.31 ( -0.31)
Overall Timing[  5/  1]	epoch_time 0.0386 (0.0456)	validation_time 0.0004 (0.0015)	train_time 0.0381 (0.0434)
record: (train_acc, test_acc) (0.6242000098228455, 0.5580000281333923)
last accs (train_acc, test_acc) (0.5350000200271606, 0.6320000290870667)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.02it/s] 15%|#5        | 4/26 [00:00<00:01, 17.74it/s] 27%|##6       | 7/26 [00:00<00:00, 22.15it/s] 38%|###8      | 10/26 [00:00<00:00, 24.94it/s] 50%|#####     | 13/26 [00:00<00:00, 26.56it/s] 65%|######5   | 17/26 [00:00<00:00, 28.68it/s] 81%|########  | 21/26 [00:00<00:00, 30.17it/s] 96%|#########6| 25/26 [00:00<00:00, 30.29it/s]100%|##########| 26/26 [00:01<00:00, 25.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.002 (0.002)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.61 (  0.63)	train_minacc   0.59 (  0.60)	train_majacc   0.61 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.44it/s] 31%|###       | 8/26 [00:00<00:00, 41.23it/s]                                               31%|###       | 8/26 [00:00<00:00, 41.23it/s] 50%|#####     | 13/26 [00:00<00:00, 41.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.28it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.28it/s] 92%|#########2| 24/26 [00:00<00:00, 46.72it/s]100%|##########| 26/26 [00:00<00:00, 39.93it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.62)	test_majacc   0.65 (  0.65)	Loss_d 0.594 (0.594)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.575 (0.610)	test_acc   0.67 (  0.62)	test_minacc   0.77 (  0.70)	test_majacc   0.65 (  0.61)	Loss_d 0.575 (0.610)	test_acc_d   0.67 (  0.62)	test_minacc_d   0.77 (  0.70)	test_majacc_d   0.65 (  0.61)	test_corr_d   0.38 (  0.34)
Test: [  20/  26]	Loss 0.614 (0.614)	test_acc   0.61 (  0.61)	test_minacc   0.70 (  0.69)	test_majacc   0.59 (  0.60)	Loss_d 0.614 (0.614)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.70 (  0.69)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.30 (  0.32)
Test: [  26/  26]	Loss 0.595 (0.613)	test_acc   0.60 (  0.61)	test_minacc   0.66 (  0.68)	test_majacc   0.59 (  0.60)	Loss_d 0.595 (0.613)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.66 (  0.68)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.35 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 42.26it/s]
Test: [  0/  1]	Loss 0.738 (0.738)	test_acc   0.58 (  0.58)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.738 (0.738)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.738 (0.738)	test_acc   0.58 (  0.58)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.738 (0.738)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.05 (  0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/21/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0393 (0.0447)	validation_time 0.0005 (0.0013)	train_time 0.0388 (0.0427)
record: (train_acc, test_acc) (0.6091000137925148, 0.5750000476837158)
last accs (train_acc, test_acc) (0.6091000137925148, 0.5750000476837158)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.98it/s] 15%|#5        | 4/26 [00:00<00:01, 20.08it/s] 27%|##6       | 7/26 [00:00<00:00, 23.40it/s] 42%|####2     | 11/26 [00:00<00:00, 27.01it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.97it/s] 88%|########8 | 23/26 [00:00<00:00, 31.00it/s]100%|##########| 26/26 [00:00<00:00, 26.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.002 (0.003)	train_nll   0.57 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.64 (  0.64)	train_minacc   0.52 (  0.62)	train_majacc   0.66 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.16it/s] 23%|##3       | 6/26 [00:00<00:00, 30.40it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.40it/s] 42%|####2     | 11/26 [00:00<00:00, 38.63it/s] 65%|######5   | 17/26 [00:00<00:00, 43.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.14it/s] 88%|########8 | 23/26 [00:00<00:00, 47.65it/s]100%|##########| 26/26 [00:00<00:00, 39.11it/s]
Test: [   0/  26]	Loss 0.580 (0.580)	test_acc   0.69 (  0.69)	test_minacc   0.57 (  0.57)	test_majacc   0.70 (  0.70)	Loss_d 0.580 (0.580)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.594 (0.604)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.60)	test_majacc   0.64 (  0.64)	Loss_d 0.594 (0.604)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.60)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.38 (  0.37)
Test: [  20/  26]	Loss 0.595 (0.597)	test_acc   0.61 (  0.64)	test_minacc   0.69 (  0.63)	test_majacc   0.59 (  0.65)	Loss_d 0.595 (0.597)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.69 (  0.63)	test_majacc_d   0.59 (  0.65)	test_corr_d   0.31 (  0.37)
Test: [  26/  26]	Loss 0.600 (0.597)	test_acc   0.62 (  0.64)	test_minacc   0.62 (  0.63)	test_majacc   0.62 (  0.65)	Loss_d 0.600 (0.597)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.62 (  0.63)	test_majacc_d   0.62 (  0.65)	test_corr_d   0.38 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.50it/s]
Test: [  0/  1]	Loss 0.763 (0.763)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.71 (  0.71)	Loss_d 0.763 (0.763)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.763 (0.763)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.71 (  0.71)	Loss_d 0.763 (0.763)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.09 (  0.09)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/21/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0371 (0.0437)	validation_time 0.0004 (0.0012)	train_time 0.0366 (0.0419)
record: (train_acc, test_acc) (0.644400014936924, 0.5860000252723694)
last accs (train_acc, test_acc) (0.644400014936924, 0.5860000252723694)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.97it/s] 15%|#5        | 4/26 [00:00<00:01, 17.96it/s] 31%|###       | 8/26 [00:00<00:00, 24.28it/s] 46%|####6     | 12/26 [00:00<00:00, 26.79it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.65it/s] 69%|######9   | 18/26 [00:00<00:00, 27.86it/s] 81%|########  | 21/26 [00:00<00:00, 28.50it/s] 96%|#########6| 25/26 [00:00<00:00, 29.46it/s]100%|##########| 26/26 [00:01<00:00, 25.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.003 (0.002)	train_nll   0.68 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.60 (  0.64)	train_minacc   0.62 (  0.61)	train_majacc   0.59 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 23%|##3       | 6/26 [00:00<00:00, 28.17it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.17it/s] 42%|####2     | 11/26 [00:00<00:00, 37.11it/s] 65%|######5   | 17/26 [00:00<00:00, 42.29it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.29it/s] 88%|########8 | 23/26 [00:00<00:00, 47.58it/s]100%|##########| 26/26 [00:00<00:00, 38.11it/s]
Test: [   0/  26]	Loss 0.624 (0.624)	test_acc   0.62 (  0.62)	test_minacc   0.49 (  0.49)	test_majacc   0.64 (  0.64)	Loss_d 0.624 (0.624)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.636 (0.620)	test_acc   0.63 (  0.66)	test_minacc   0.70 (  0.61)	test_majacc   0.62 (  0.66)	Loss_d 0.636 (0.620)	test_acc_d   0.63 (  0.66)	test_minacc_d   0.70 (  0.61)	test_majacc_d   0.62 (  0.66)	test_corr_d   0.21 (  0.30)
Test: [  20/  26]	Loss 0.637 (0.624)	test_acc   0.61 (  0.65)	test_minacc   0.59 (  0.62)	test_majacc   0.61 (  0.65)	Loss_d 0.637 (0.624)	test_acc_d   0.61 (  0.65)	test_minacc_d   0.59 (  0.62)	test_majacc_d   0.61 (  0.65)	test_corr_d   0.23 (  0.28)
Test: [  26/  26]	Loss 0.646 (0.626)	test_acc   0.59 (  0.64)	test_minacc   0.62 (  0.61)	test_majacc   0.59 (  0.65)	Loss_d 0.646 (0.626)	test_acc_d   0.59 (  0.64)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.59 (  0.65)	test_corr_d   0.25 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.84it/s]
Test: [  0/  1]	Loss 0.693 (0.693)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.69 (  0.69)	Loss_d 0.693 (0.693)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.693 (0.693)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.69 (  0.69)	Loss_d 0.693 (0.693)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.05 ( -0.05)
Overall Timing[  8/  1]	epoch_time 0.0392 (0.0432)	validation_time 0.0004 (0.0011)	train_time 0.0388 (0.0416)
record: (train_acc, test_acc) (0.644400014936924, 0.5860000252723694)
last accs (train_acc, test_acc) (0.6419000197649002, 0.5550000071525574)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.12it/s] 15%|#5        | 4/26 [00:00<00:01, 16.78it/s] 27%|##6       | 7/26 [00:00<00:00, 21.26it/s] 42%|####2     | 11/26 [00:00<00:00, 25.24it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.50it/s] 88%|########8 | 23/26 [00:00<00:00, 30.23it/s]100%|##########| 26/26 [00:01<00:00, 25.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.004 (0.002)	train_nll   0.55 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.69 (  0.63)	train_minacc   0.45 (  0.62)	train_majacc   0.72 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.03it/s] 27%|##6       | 7/26 [00:00<00:00, 33.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.00it/s] 46%|####6     | 12/26 [00:00<00:00, 37.45it/s] 69%|######9   | 18/26 [00:00<00:00, 43.65it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.65it/s] 92%|#########2| 24/26 [00:00<00:00, 45.50it/s]100%|##########| 26/26 [00:00<00:00, 38.42it/s]
Test: [   0/  26]	Loss 0.542 (0.542)	test_acc   0.71 (  0.71)	test_minacc   0.36 (  0.36)	test_majacc   0.76 (  0.76)	Loss_d 0.542 (0.542)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.571 (0.557)	test_acc   0.69 (  0.70)	test_minacc   0.46 (  0.48)	test_majacc   0.73 (  0.74)	Loss_d 0.571 (0.557)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.46 (  0.48)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.49 (  0.53)
Test: [  20/  26]	Loss 0.579 (0.557)	test_acc   0.66 (  0.71)	test_minacc   0.51 (  0.50)	test_majacc   0.70 (  0.74)	Loss_d 0.579 (0.557)	test_acc_d   0.66 (  0.71)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.70 (  0.74)	test_corr_d   0.47 (  0.52)
Test: [  26/  26]	Loss 0.552 (0.557)	test_acc   0.69 (  0.71)	test_minacc   0.48 (  0.50)	test_majacc   0.71 (  0.74)	Loss_d 0.552 (0.557)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.55 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.82it/s]
Test: [  0/  1]	Loss 0.823 (0.823)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.79 (  0.79)	Loss_d 0.823 (0.823)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.823 (0.823)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.79 (  0.79)	Loss_d 0.823 (0.823)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.24 (  0.24)
Overall Timing[  9/  1]	epoch_time 0.0377 (0.0427)	validation_time 0.0004 (0.0011)	train_time 0.0373 (0.0412)
record: (train_acc, test_acc) (0.644400014936924, 0.5860000252723694)
last accs (train_acc, test_acc) (0.7058000339269638, 0.5120000243186951)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.85it/s] 15%|#5        | 4/26 [00:00<00:01, 20.31it/s] 27%|##6       | 7/26 [00:00<00:00, 24.31it/s] 42%|####2     | 11/26 [00:00<00:00, 27.70it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.84it/s] 88%|########8 | 23/26 [00:00<00:00, 31.67it/s]100%|##########| 26/26 [00:00<00:00, 27.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.001 (0.002)	train_nll   0.59 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.66 (  0.63)	train_minacc   0.55 (  0.58)	train_majacc   0.67 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.91it/s] 23%|##3       | 6/26 [00:00<00:00, 22.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.84it/s] 42%|####2     | 11/26 [00:00<00:00, 32.72it/s] 65%|######5   | 17/26 [00:00<00:00, 36.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.94it/s] 88%|########8 | 23/26 [00:00<00:00, 43.07it/s]100%|##########| 26/26 [00:00<00:00, 34.00it/s]
Test: [   0/  26]	Loss 0.578 (0.578)	test_acc   0.72 (  0.72)	test_minacc   0.40 (  0.40)	test_majacc   0.76 (  0.76)	Loss_d 0.578 (0.578)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.585 (0.580)	test_acc   0.68 (  0.68)	test_minacc   0.39 (  0.45)	test_majacc   0.72 (  0.72)	Loss_d 0.585 (0.580)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.39 (  0.45)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.50 (  0.51)
Test: [  20/  26]	Loss 0.593 (0.577)	test_acc   0.65 (  0.69)	test_minacc   0.56 (  0.50)	test_majacc   0.68 (  0.72)	Loss_d 0.593 (0.577)	test_acc_d   0.65 (  0.69)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.68 (  0.72)	test_corr_d   0.44 (  0.51)
Test: [  26/  26]	Loss 0.579 (0.576)	test_acc   0.70 (  0.69)	test_minacc   0.52 (  0.50)	test_majacc   0.72 (  0.72)	Loss_d 0.579 (0.576)	test_acc_d   0.70 (  0.69)	test_minacc_d   0.52 (  0.50)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.52 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.23it/s]
Test: [  0/  1]	Loss 0.766 (0.766)	test_acc   0.52 (  0.52)	test_minacc   0.48 (  0.48)	test_majacc   0.83 (  0.83)	Loss_d 0.766 (0.766)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.766 (0.766)	test_acc   0.52 (  0.52)	test_minacc   0.48 (  0.48)	test_majacc   0.83 (  0.83)	Loss_d 0.766 (0.766)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.22 (  0.22)
Overall Timing[ 10/  1]	epoch_time 0.0389 (0.0423)	validation_time 0.0004 (0.0010)	train_time 0.0384 (0.0409)
record: (train_acc, test_acc) (0.644400014936924, 0.5860000252723694)
last accs (train_acc, test_acc) (0.6900000273585319, 0.5160000324249268)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 15%|#5        | 4/26 [00:00<00:01, 17.13it/s] 31%|###       | 8/26 [00:00<00:00, 23.64it/s] 46%|####6     | 12/26 [00:00<00:00, 27.19it/s] 62%|######1   | 16/26 [00:00<00:00, 29.24it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.94it/s] 92%|#########2| 24/26 [00:00<00:00, 30.13it/s]100%|##########| 26/26 [00:01<00:00, 25.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.011 (0.004)	train_nll   0.74 (  0.61)	train_penalty   0.01 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.44 (  0.64)	train_minacc   0.59 (  0.52)	train_majacc   0.42 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.83it/s] 27%|##6       | 7/26 [00:00<00:00, 34.08it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.08it/s] 50%|#####     | 13/26 [00:00<00:00, 41.56it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.96it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.96it/s] 92%|#########2| 24/26 [00:00<00:00, 46.97it/s]100%|##########| 26/26 [00:00<00:00, 40.02it/s]
Test: [   0/  26]	Loss 0.701 (0.701)	test_acc   0.52 (  0.52)	test_minacc   0.60 (  0.60)	test_majacc   0.50 (  0.50)	Loss_d 0.701 (0.701)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.676 (0.679)	test_acc   0.53 (  0.53)	test_minacc   0.73 (  0.67)	test_majacc   0.49 (  0.50)	Loss_d 0.676 (0.679)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.73 (  0.67)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.06 (  0.08)
Test: [  20/  26]	Loss 0.658 (0.673)	test_acc   0.56 (  0.53)	test_minacc   0.74 (  0.70)	test_majacc   0.52 (  0.50)	Loss_d 0.658 (0.673)	test_acc_d   0.56 (  0.53)	test_minacc_d   0.74 (  0.70)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.06 (  0.08)
Test: [  26/  26]	Loss 0.677 (0.673)	test_acc   0.51 (  0.53)	test_minacc   0.59 (  0.70)	test_majacc   0.50 (  0.50)	Loss_d 0.677 (0.673)	test_acc_d   0.51 (  0.53)	test_minacc_d   0.59 (  0.70)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.14 (  0.08)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.87it/s]
Test: [  0/  1]	Loss 0.661 (0.661)	test_acc   0.65 (  0.65)	test_minacc   0.66 (  0.66)	test_majacc   0.55 (  0.55)	Loss_d 0.661 (0.661)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.20 ( -0.20)
Test: [  1/  1]	Loss 0.661 (0.661)	test_acc   0.65 (  0.65)	test_minacc   0.66 (  0.66)	test_majacc   0.55 (  0.55)	Loss_d 0.661 (0.661)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.20 ( -0.20)
Overall Timing[ 11/  1]	epoch_time 0.0375 (0.0419)	validation_time 0.0004 (0.0010)	train_time 0.0371 (0.0406)
record: (train_acc, test_acc) (0.644400014936924, 0.5860000252723694)
last accs (train_acc, test_acc) (0.5342000181376934, 0.6520000100135803)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 15%|#5        | 4/26 [00:00<00:01, 17.36it/s] 31%|###       | 8/26 [00:00<00:00, 23.87it/s] 46%|####6     | 12/26 [00:00<00:00, 27.35it/s] 62%|######1   | 16/26 [00:00<00:00, 29.22it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.50it/s] 92%|#########2| 24/26 [00:00<00:00, 30.61it/s]100%|##########| 26/26 [00:00<00:00, 26.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.002 (0.002)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.66 (  0.64)	train_minacc   0.48 (  0.62)	train_majacc   0.68 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.37it/s] 23%|##3       | 6/26 [00:00<00:00, 32.44it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.44it/s] 46%|####6     | 12/26 [00:00<00:00, 42.38it/s] 69%|######9   | 18/26 [00:00<00:00, 44.40it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.40it/s] 92%|#########2| 24/26 [00:00<00:00, 48.36it/s]100%|##########| 26/26 [00:00<00:00, 40.81it/s]
Test: [   0/  26]	Loss 0.649 (0.649)	test_acc   0.65 (  0.65)	test_minacc   0.49 (  0.49)	test_majacc   0.68 (  0.68)	Loss_d 0.649 (0.649)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.673 (0.683)	test_acc   0.59 (  0.59)	test_minacc   0.48 (  0.49)	test_majacc   0.60 (  0.61)	Loss_d 0.673 (0.683)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.48 (  0.49)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.23 (  0.21)
Test: [  20/  26]	Loss 0.649 (0.669)	test_acc   0.60 (  0.60)	test_minacc   0.71 (  0.55)	test_majacc   0.57 (  0.61)	Loss_d 0.649 (0.669)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.71 (  0.55)	test_majacc_d   0.57 (  0.61)	test_corr_d   0.19 (  0.22)
Test: [  26/  26]	Loss 0.625 (0.667)	test_acc   0.64 (  0.61)	test_minacc   0.45 (  0.55)	test_majacc   0.67 (  0.62)	Loss_d 0.625 (0.667)	test_acc_d   0.64 (  0.61)	test_minacc_d   0.45 (  0.55)	test_majacc_d   0.67 (  0.62)	test_corr_d   0.40 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.15it/s]
Test: [  0/  1]	Loss 0.718 (0.718)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.68 (  0.68)	Loss_d 0.718 (0.718)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.718 (0.718)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.68 (  0.68)	Loss_d 0.718 (0.718)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 12/  1]	epoch_time 0.0372 (0.0416)	validation_time 0.0004 (0.0009)	train_time 0.0368 (0.0403)
record: (train_acc, test_acc) (0.644400014936924, 0.5860000252723694)
last accs (train_acc, test_acc) (0.6073000056147575, 0.527999997138977)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 15%|#5        | 4/26 [00:00<00:01, 19.20it/s] 27%|##6       | 7/26 [00:00<00:00, 23.37it/s] 38%|###8      | 10/26 [00:00<00:00, 25.43it/s] 50%|#####     | 13/26 [00:00<00:00, 26.74it/s] 65%|######5   | 17/26 [00:00<00:00, 28.24it/s] 81%|########  | 21/26 [00:00<00:00, 29.26it/s] 96%|#########6| 25/26 [00:00<00:00, 29.96it/s]100%|##########| 26/26 [00:01<00:00, 25.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.001 (0.003)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.66 (  0.65)	train_minacc   0.59 (  0.55)	train_majacc   0.67 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.29it/s] 23%|##3       | 6/26 [00:00<00:00, 29.95it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.95it/s] 42%|####2     | 11/26 [00:00<00:00, 37.12it/s] 65%|######5   | 17/26 [00:00<00:00, 41.75it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.75it/s] 88%|########8 | 23/26 [00:00<00:00, 46.92it/s]100%|##########| 26/26 [00:00<00:00, 38.05it/s]
Test: [   0/  26]	Loss 0.611 (0.611)	test_acc   0.68 (  0.68)	test_minacc   0.49 (  0.49)	test_majacc   0.71 (  0.71)	Loss_d 0.611 (0.611)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.632 (0.653)	test_acc   0.63 (  0.61)	test_minacc   0.45 (  0.47)	test_majacc   0.66 (  0.63)	Loss_d 0.632 (0.653)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.32 (  0.30)
Test: [  20/  26]	Loss 0.645 (0.641)	test_acc   0.62 (  0.62)	test_minacc   0.66 (  0.53)	test_majacc   0.61 (  0.64)	Loss_d 0.645 (0.641)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.66 (  0.53)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.23 (  0.30)
Test: [  26/  26]	Loss 0.618 (0.641)	test_acc   0.65 (  0.62)	test_minacc   0.55 (  0.53)	test_majacc   0.66 (  0.64)	Loss_d 0.618 (0.641)	test_acc_d   0.65 (  0.62)	test_minacc_d   0.55 (  0.53)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.39 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.18it/s]
Test: [  0/  1]	Loss 0.753 (0.753)	test_acc   0.51 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.72 (  0.72)	Loss_d 0.753 (0.753)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.753 (0.753)	test_acc   0.51 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.72 (  0.72)	Loss_d 0.753 (0.753)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.07 (  0.07)
Overall Timing[ 13/  1]	epoch_time 0.0388 (0.0414)	validation_time 0.0004 (0.0009)	train_time 0.0384 (0.0402)
record: (train_acc, test_acc) (0.644400014936924, 0.5860000252723694)
last accs (train_acc, test_acc) (0.6237000114917756, 0.5100000500679016)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.72it/s] 15%|#5        | 4/26 [00:00<00:01, 17.08it/s] 27%|##6       | 7/26 [00:00<00:00, 21.31it/s] 38%|###8      | 10/26 [00:00<00:00, 23.98it/s] 50%|#####     | 13/26 [00:00<00:00, 25.53it/s] 62%|######1   | 16/26 [00:00<00:00, 26.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.58it/s] 88%|########8 | 23/26 [00:00<00:00, 28.47it/s]100%|##########| 26/26 [00:01<00:00, 28.87it/s]100%|##########| 26/26 [00:01<00:00, 24.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.001 (0.002)	train_nll   0.60 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.58 (  0.64)	train_minacc   0.62 (  0.61)	train_majacc   0.57 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.27it/s] 31%|###       | 8/26 [00:00<00:00, 35.58it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.58it/s] 54%|#####3    | 14/26 [00:00<00:00, 42.75it/s] 77%|#######6  | 20/26 [00:00<00:00, 47.02it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 47.02it/s]100%|##########| 26/26 [00:00<00:00, 50.33it/s]100%|##########| 26/26 [00:00<00:00, 41.43it/s]
Test: [   0/  26]	Loss 0.598 (0.598)	test_acc   0.68 (  0.68)	test_minacc   0.60 (  0.60)	test_majacc   0.69 (  0.69)	Loss_d 0.598 (0.598)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.604 (0.616)	test_acc   0.64 (  0.62)	test_minacc   0.59 (  0.58)	test_majacc   0.65 (  0.62)	Loss_d 0.604 (0.616)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.59 (  0.58)	test_majacc_d   0.65 (  0.62)	test_corr_d   0.36 (  0.35)
Test: [  20/  26]	Loss 0.612 (0.609)	test_acc   0.60 (  0.63)	test_minacc   0.60 (  0.62)	test_majacc   0.60 (  0.63)	Loss_d 0.612 (0.609)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.60 (  0.62)	test_majacc_d   0.60 (  0.63)	test_corr_d   0.31 (  0.35)
Test: [  26/  26]	Loss 0.607 (0.610)	test_acc   0.60 (  0.63)	test_minacc   0.59 (  0.62)	test_majacc   0.60 (  0.63)	Loss_d 0.607 (0.610)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.59 (  0.62)	test_majacc_d   0.60 (  0.63)	test_corr_d   0.39 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.15it/s]
Test: [  0/  1]	Loss 0.737 (0.737)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.76 (  0.76)	Loss_d 0.737 (0.737)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.737 (0.737)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.76 (  0.76)	Loss_d 0.737 (0.737)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.08 (  0.08)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/21/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0400 (0.0413)	validation_time 0.0007 (0.0009)	train_time 0.0393 (0.0401)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.24it/s] 12%|#1        | 3/26 [00:00<00:02, 11.29it/s] 23%|##3       | 6/26 [00:00<00:01, 17.49it/s] 35%|###4      | 9/26 [00:00<00:00, 20.85it/s] 46%|####6     | 12/26 [00:00<00:00, 23.11it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.48it/s] 69%|######9   | 18/26 [00:00<00:00, 25.61it/s] 81%|########  | 21/26 [00:00<00:00, 26.33it/s] 92%|#########2| 24/26 [00:01<00:00, 27.08it/s]100%|##########| 26/26 [00:01<00:00, 22.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0064, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(5.9761e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(3.9769e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.001 (0.004)	train_nll   0.59 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.68 (  0.63)	train_minacc   0.48 (  0.53)	train_majacc   0.71 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.81it/s] 27%|##6       | 7/26 [00:00<00:00, 31.50it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.50it/s] 46%|####6     | 12/26 [00:00<00:00, 38.88it/s] 65%|######5   | 17/26 [00:00<00:00, 41.42it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.42it/s] 88%|########8 | 23/26 [00:00<00:00, 46.43it/s]100%|##########| 26/26 [00:00<00:00, 37.99it/s]
Test: [   0/  26]	Loss 0.551 (0.551)	test_acc   0.72 (  0.72)	test_minacc   0.36 (  0.36)	test_majacc   0.77 (  0.77)	Loss_d 0.551 (0.551)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.575 (0.573)	test_acc   0.67 (  0.68)	test_minacc   0.39 (  0.43)	test_majacc   0.71 (  0.73)	Loss_d 0.575 (0.573)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.39 (  0.43)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.51 (  0.51)
Test: [  20/  26]	Loss 0.611 (0.573)	test_acc   0.65 (  0.69)	test_minacc   0.49 (  0.47)	test_majacc   0.69 (  0.73)	Loss_d 0.611 (0.573)	test_acc_d   0.65 (  0.69)	test_minacc_d   0.49 (  0.47)	test_majacc_d   0.69 (  0.73)	test_corr_d   0.45 (  0.51)
Test: [  26/  26]	Loss 0.562 (0.572)	test_acc   0.70 (  0.69)	test_minacc   0.45 (  0.47)	test_majacc   0.74 (  0.73)	Loss_d 0.562 (0.572)	test_acc_d   0.70 (  0.69)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.74 (  0.73)	test_corr_d   0.54 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.73it/s]
Test: [  0/  1]	Loss 0.905 (0.905)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.78 (  0.78)	Loss_d 0.905 (0.905)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.905 (0.905)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.78 (  0.78)	Loss_d 0.905 (0.905)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.23 (  0.23)
Overall Timing[ 15/  1]	epoch_time 0.0417 (0.0413)	validation_time 0.0004 (0.0008)	train_time 0.0412 (0.0402)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.6921000297665596, 0.4780000150203705)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.40it/s] 12%|#1        | 3/26 [00:00<00:02,  9.49it/s] 27%|##6       | 7/26 [00:00<00:01, 17.76it/s] 42%|####2     | 11/26 [00:00<00:00, 22.37it/s] 58%|#####7    | 15/26 [00:00<00:00, 24.88it/s] 69%|######9   | 18/26 [00:00<00:00, 25.50it/s] 81%|########  | 21/26 [00:00<00:00, 25.93it/s] 92%|#########2| 24/26 [00:01<00:00, 26.68it/s]100%|##########| 26/26 [00:01<00:00, 21.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0046, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(3.5007e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: tensor(1.0072e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.005 (0.003)	train_nll   0.60 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.67 (  0.62)	train_minacc   0.48 (  0.57)	train_majacc   0.69 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.25it/s] 23%|##3       | 6/26 [00:00<00:00, 29.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.77it/s] 42%|####2     | 11/26 [00:00<00:00, 36.99it/s] 62%|######1   | 16/26 [00:00<00:00, 40.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.50it/s] 81%|########  | 21/26 [00:00<00:00, 43.48it/s]100%|##########| 26/26 [00:00<00:00, 38.41it/s]
Test: [   0/  26]	Loss 0.544 (0.544)	test_acc   0.72 (  0.72)	test_minacc   0.38 (  0.38)	test_majacc   0.77 (  0.77)	Loss_d 0.544 (0.544)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.586 (0.570)	test_acc   0.68 (  0.69)	test_minacc   0.36 (  0.42)	test_majacc   0.73 (  0.74)	Loss_d 0.586 (0.570)	test_acc_d   0.68 (  0.69)	test_minacc_d   0.36 (  0.42)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.52 (  0.54)
Test: [  20/  26]	Loss 0.632 (0.569)	test_acc   0.64 (  0.70)	test_minacc   0.44 (  0.45)	test_majacc   0.68 (  0.74)	Loss_d 0.632 (0.569)	test_acc_d   0.64 (  0.70)	test_minacc_d   0.44 (  0.45)	test_majacc_d   0.68 (  0.74)	test_corr_d   0.47 (  0.53)
Test: [  26/  26]	Loss 0.568 (0.568)	test_acc   0.70 (  0.70)	test_minacc   0.41 (  0.46)	test_majacc   0.73 (  0.74)	Loss_d 0.568 (0.568)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.41 (  0.46)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.56 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.75it/s]
Test: [  0/  1]	Loss 0.997 (0.997)	test_acc   0.47 (  0.47)	test_minacc   0.44 (  0.44)	test_majacc   0.79 (  0.79)	Loss_d 0.997 (0.997)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.997 (0.997)	test_acc   0.47 (  0.47)	test_minacc   0.44 (  0.44)	test_majacc   0.79 (  0.79)	Loss_d 0.997 (0.997)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.24 (  0.24)
Overall Timing[ 16/  1]	epoch_time 0.0410 (0.0413)	validation_time 0.0004 (0.0008)	train_time 0.0405 (0.0402)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.6962000325918197, 0.47200003266334534)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.45it/s] 12%|#1        | 3/26 [00:00<00:01, 12.83it/s] 23%|##3       | 6/26 [00:00<00:01, 19.33it/s] 35%|###4      | 9/26 [00:00<00:00, 22.36it/s] 46%|####6     | 12/26 [00:00<00:00, 24.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.44it/s] 69%|######9   | 18/26 [00:00<00:00, 26.30it/s] 85%|########4 | 22/26 [00:00<00:00, 27.94it/s] 96%|#########6| 25/26 [00:01<00:00, 28.28it/s]100%|##########| 26/26 [00:01<00:00, 23.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0047, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(1.3925e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.002 (0.003)	train_nll   0.59 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.64 (  0.63)	train_minacc   0.45 (  0.55)	train_majacc   0.67 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.37it/s] 27%|##6       | 7/26 [00:00<00:00, 33.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.79it/s] 50%|#####     | 13/26 [00:00<00:00, 43.08it/s] 69%|######9   | 18/26 [00:00<00:00, 44.01it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.01it/s] 92%|#########2| 24/26 [00:00<00:00, 48.02it/s]100%|##########| 26/26 [00:00<00:00, 40.79it/s]
Test: [   0/  26]	Loss 0.543 (0.543)	test_acc   0.75 (  0.75)	test_minacc   0.38 (  0.38)	test_majacc   0.80 (  0.80)	Loss_d 0.543 (0.543)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.568 (0.560)	test_acc   0.69 (  0.70)	test_minacc   0.34 (  0.43)	test_majacc   0.75 (  0.75)	Loss_d 0.568 (0.560)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.34 (  0.43)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.50 (  0.53)
Test: [  20/  26]	Loss 0.590 (0.562)	test_acc   0.65 (  0.71)	test_minacc   0.46 (  0.45)	test_majacc   0.69 (  0.75)	Loss_d 0.590 (0.562)	test_acc_d   0.65 (  0.71)	test_minacc_d   0.46 (  0.45)	test_majacc_d   0.69 (  0.75)	test_corr_d   0.48 (  0.53)
Test: [  26/  26]	Loss 0.546 (0.561)	test_acc   0.71 (  0.71)	test_minacc   0.41 (  0.45)	test_majacc   0.75 (  0.75)	Loss_d 0.546 (0.561)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.41 (  0.45)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.56 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.01it/s]
Test: [  0/  1]	Loss 0.910 (0.910)	test_acc   0.45 (  0.45)	test_minacc   0.41 (  0.41)	test_majacc   0.82 (  0.82)	Loss_d 0.910 (0.910)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 0.910 (0.910)	test_acc   0.45 (  0.45)	test_minacc   0.41 (  0.41)	test_majacc   0.82 (  0.82)	Loss_d 0.910 (0.910)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.28 (  0.28)
Overall Timing[ 17/  1]	epoch_time 0.0393 (0.0412)	validation_time 0.0004 (0.0008)	train_time 0.0388 (0.0401)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.705500026524067, 0.4540000259876251)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.34it/s] 15%|#5        | 4/26 [00:00<00:01, 18.02it/s] 27%|##6       | 7/26 [00:00<00:00, 21.79it/s] 38%|###8      | 10/26 [00:00<00:00, 24.39it/s] 50%|#####     | 13/26 [00:00<00:00, 25.43it/s] 62%|######1   | 16/26 [00:00<00:00, 25.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.79it/s] 88%|########8 | 23/26 [00:00<00:00, 28.37it/s]100%|##########| 26/26 [00:01<00:00, 24.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0037, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.024 (0.002)	train_nll   0.71 (  0.63)	train_penalty   0.02 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.58 (  0.60)	train_minacc   0.48 (  0.63)	train_majacc   0.59 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.49it/s] 27%|##6       | 7/26 [00:00<00:00, 35.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.00it/s] 50%|#####     | 13/26 [00:00<00:00, 39.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.04it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.04it/s] 96%|#########6| 25/26 [00:00<00:00, 46.88it/s]100%|##########| 26/26 [00:00<00:00, 40.29it/s]
Test: [   0/  26]	Loss 0.554 (0.554)	test_acc   0.74 (  0.74)	test_minacc   0.38 (  0.38)	test_majacc   0.78 (  0.78)	Loss_d 0.554 (0.554)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.556 (0.555)	test_acc   0.72 (  0.73)	test_minacc   0.52 (  0.47)	test_majacc   0.75 (  0.78)	Loss_d 0.556 (0.555)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.52 (  0.47)	test_majacc_d   0.75 (  0.78)	test_corr_d   0.52 (  0.55)
Test: [  20/  26]	Loss 0.582 (0.560)	test_acc   0.66 (  0.72)	test_minacc   0.44 (  0.47)	test_majacc   0.71 (  0.77)	Loss_d 0.582 (0.560)	test_acc_d   0.66 (  0.72)	test_minacc_d   0.44 (  0.47)	test_majacc_d   0.71 (  0.77)	test_corr_d   0.49 (  0.54)
Test: [  26/  26]	Loss 0.547 (0.559)	test_acc   0.72 (  0.72)	test_minacc   0.38 (  0.46)	test_majacc   0.76 (  0.77)	Loss_d 0.547 (0.559)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.38 (  0.46)	test_majacc_d   0.76 (  0.77)	test_corr_d   0.57 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.09it/s]
Test: [  0/  1]	Loss 0.875 (0.875)	test_acc   0.45 (  0.45)	test_minacc   0.41 (  0.41)	test_majacc   0.82 (  0.82)	Loss_d 0.875 (0.875)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 0.875 (0.875)	test_acc   0.45 (  0.45)	test_minacc   0.41 (  0.41)	test_majacc   0.82 (  0.82)	Loss_d 0.875 (0.875)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.30 (  0.30)
Overall Timing[ 18/  1]	epoch_time 0.0401 (0.0411)	validation_time 0.0004 (0.0008)	train_time 0.0397 (0.0401)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.7243000318408013, 0.45100003480911255)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.34it/s] 15%|#5        | 4/26 [00:00<00:01, 15.42it/s] 27%|##6       | 7/26 [00:00<00:00, 20.73it/s] 38%|###8      | 10/26 [00:00<00:00, 23.66it/s] 50%|#####     | 13/26 [00:00<00:00, 25.11it/s] 62%|######1   | 16/26 [00:00<00:00, 26.33it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.47it/s] 85%|########4 | 22/26 [00:00<00:00, 26.40it/s] 96%|#########6| 25/26 [00:01<00:00, 27.34it/s]100%|##########| 26/26 [00:01<00:00, 23.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0038, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.004 (0.003)	train_nll   0.56 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.68 (  0.66)	train_minacc   0.55 (  0.54)	train_majacc   0.70 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.52it/s] 27%|##6       | 7/26 [00:00<00:00, 30.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.19it/s] 50%|#####     | 13/26 [00:00<00:00, 38.29it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.63it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.63it/s] 96%|#########6| 25/26 [00:00<00:00, 44.95it/s]100%|##########| 26/26 [00:00<00:00, 37.37it/s]
Test: [   0/  26]	Loss 0.583 (0.583)	test_acc   0.67 (  0.67)	test_minacc   0.47 (  0.47)	test_majacc   0.69 (  0.69)	Loss_d 0.583 (0.583)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.571 (0.572)	test_acc   0.69 (  0.69)	test_minacc   0.54 (  0.56)	test_majacc   0.71 (  0.71)	Loss_d 0.571 (0.572)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.54 (  0.56)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.46 (  0.48)
Test: [  20/  26]	Loss 0.615 (0.582)	test_acc   0.60 (  0.67)	test_minacc   0.46 (  0.53)	test_majacc   0.63 (  0.70)	Loss_d 0.615 (0.582)	test_acc_d   0.60 (  0.67)	test_minacc_d   0.46 (  0.53)	test_majacc_d   0.63 (  0.70)	test_corr_d   0.40 (  0.47)
Test: [  26/  26]	Loss 0.563 (0.582)	test_acc   0.68 (  0.67)	test_minacc   0.45 (  0.53)	test_majacc   0.71 (  0.70)	Loss_d 0.563 (0.582)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.45 (  0.53)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.52 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.96it/s]
Test: [  0/  1]	Loss 0.874 (0.874)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.75 (  0.75)	Loss_d 0.874 (0.874)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.874 (0.874)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.75 (  0.75)	Loss_d 0.874 (0.874)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.13 (  0.13)
Overall Timing[ 19/  1]	epoch_time 0.0409 (0.0411)	validation_time 0.0004 (0.0008)	train_time 0.0404 (0.0401)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.6711000229120254, 0.5300000309944153)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.30it/s] 15%|#5        | 4/26 [00:00<00:01, 15.39it/s] 27%|##6       | 7/26 [00:00<00:00, 20.46it/s] 42%|####2     | 11/26 [00:00<00:00, 24.59it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.48it/s] 65%|######5   | 17/26 [00:00<00:00, 26.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.34it/s] 88%|########8 | 23/26 [00:00<00:00, 27.29it/s]100%|##########| 26/26 [00:01<00:00, 23.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0026, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.006 (0.003)	train_nll   0.71 (  0.61)	train_penalty   0.01 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.52 (  0.65)	train_minacc   0.52 (  0.54)	train_majacc   0.52 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.47it/s] 23%|##3       | 6/26 [00:00<00:00, 27.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.03it/s] 46%|####6     | 12/26 [00:00<00:00, 38.47it/s] 65%|######5   | 17/26 [00:00<00:00, 41.03it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.03it/s] 88%|########8 | 23/26 [00:00<00:00, 46.28it/s]100%|##########| 26/26 [00:00<00:00, 37.27it/s]
Test: [   0/  26]	Loss 0.580 (0.580)	test_acc   0.75 (  0.75)	test_minacc   0.40 (  0.40)	test_majacc   0.80 (  0.80)	Loss_d 0.580 (0.580)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.580 (0.583)	test_acc   0.68 (  0.71)	test_minacc   0.27 (  0.37)	test_majacc   0.75 (  0.77)	Loss_d 0.580 (0.583)	test_acc_d   0.68 (  0.71)	test_minacc_d   0.27 (  0.37)	test_majacc_d   0.75 (  0.77)	test_corr_d   0.55 (  0.53)
Test: [  20/  26]	Loss 0.598 (0.583)	test_acc   0.66 (  0.71)	test_minacc   0.46 (  0.40)	test_majacc   0.70 (  0.76)	Loss_d 0.598 (0.583)	test_acc_d   0.66 (  0.71)	test_minacc_d   0.46 (  0.40)	test_majacc_d   0.70 (  0.76)	test_corr_d   0.46 (  0.52)
Test: [  26/  26]	Loss 0.566 (0.581)	test_acc   0.75 (  0.71)	test_minacc   0.38 (  0.40)	test_majacc   0.80 (  0.76)	Loss_d 0.566 (0.581)	test_acc_d   0.75 (  0.71)	test_minacc_d   0.38 (  0.40)	test_majacc_d   0.80 (  0.76)	test_corr_d   0.56 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.70it/s]
Test: [  0/  1]	Loss 0.862 (0.862)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.87 (  0.87)	Loss_d 0.862 (0.862)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 0.862 (0.862)	test_acc   0.42 (  0.42)	test_minacc   0.37 (  0.37)	test_majacc   0.87 (  0.87)	Loss_d 0.862 (0.862)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.87 (  0.87)	test_corr_d   0.40 (  0.40)
Overall Timing[ 20/  1]	epoch_time 0.0412 (0.0411)	validation_time 0.0004 (0.0007)	train_time 0.0408 (0.0401)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.7099000361561775, 0.41600000858306885)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.55it/s] 15%|#5        | 4/26 [00:00<00:01, 17.11it/s] 27%|##6       | 7/26 [00:00<00:00, 21.85it/s] 38%|###8      | 10/26 [00:00<00:00, 24.19it/s] 50%|#####     | 13/26 [00:00<00:00, 26.12it/s] 62%|######1   | 16/26 [00:00<00:00, 27.34it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.83it/s] 88%|########8 | 23/26 [00:00<00:00, 28.74it/s]100%|##########| 26/26 [00:01<00:00, 24.55it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0022, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.003 (0.004)	train_nll   0.55 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.73 (  0.62)	train_minacc   0.55 (  0.52)	train_majacc   0.76 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.08it/s] 23%|##3       | 6/26 [00:00<00:00, 26.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.29it/s] 42%|####2     | 11/26 [00:00<00:00, 35.52it/s] 65%|######5   | 17/26 [00:00<00:00, 40.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.98it/s] 88%|########8 | 23/26 [00:00<00:00, 46.10it/s]100%|##########| 26/26 [00:00<00:00, 36.53it/s]
Test: [   0/  26]	Loss 0.584 (0.584)	test_acc   0.73 (  0.73)	test_minacc   0.45 (  0.45)	test_majacc   0.77 (  0.77)	Loss_d 0.584 (0.584)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.587 (0.563)	test_acc   0.69 (  0.72)	test_minacc   0.45 (  0.50)	test_majacc   0.73 (  0.76)	Loss_d 0.587 (0.563)	test_acc_d   0.69 (  0.72)	test_minacc_d   0.45 (  0.50)	test_majacc_d   0.73 (  0.76)	test_corr_d   0.48 (  0.51)
Test: [  20/  26]	Loss 0.610 (0.573)	test_acc   0.67 (  0.71)	test_minacc   0.49 (  0.50)	test_majacc   0.71 (  0.75)	Loss_d 0.610 (0.573)	test_acc_d   0.67 (  0.71)	test_minacc_d   0.49 (  0.50)	test_majacc_d   0.71 (  0.75)	test_corr_d   0.44 (  0.50)
Test: [  26/  26]	Loss 0.557 (0.572)	test_acc   0.71 (  0.71)	test_minacc   0.45 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 0.557 (0.572)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.45 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.55 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.48it/s]
Test: [  0/  1]	Loss 0.999 (0.999)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.80 (  0.80)	Loss_d 0.999 (0.999)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.999 (0.999)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.80 (  0.80)	Loss_d 0.999 (0.999)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.13 (  0.13)
Overall Timing[ 21/  1]	epoch_time 0.0385 (0.0410)	validation_time 0.0004 (0.0007)	train_time 0.0381 (0.0400)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.7137000320553779, 0.5170000195503235)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.27it/s] 15%|#5        | 4/26 [00:00<00:01, 17.92it/s] 27%|##6       | 7/26 [00:00<00:00, 22.63it/s] 42%|####2     | 11/26 [00:00<00:00, 26.07it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.81it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.84it/s] 88%|########8 | 23/26 [00:00<00:00, 29.34it/s]100%|##########| 26/26 [00:01<00:00, 25.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.007 (0.004)	train_nll   0.57 (  0.61)	train_penalty   0.01 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.74 (  0.65)	train_minacc   0.48 (  0.53)	train_majacc   0.77 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.35it/s] 31%|###       | 8/26 [00:00<00:00, 39.81it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.81it/s] 50%|#####     | 13/26 [00:00<00:00, 43.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.99it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.99it/s] 96%|#########6| 25/26 [00:00<00:00, 48.13it/s]100%|##########| 26/26 [00:00<00:00, 41.63it/s]
Test: [   0/  26]	Loss 0.553 (0.553)	test_acc   0.72 (  0.72)	test_minacc   0.45 (  0.45)	test_majacc   0.76 (  0.76)	Loss_d 0.553 (0.553)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.58 (  0.58)
Test: [  10/  26]	Loss 0.569 (0.554)	test_acc   0.67 (  0.70)	test_minacc   0.46 (  0.51)	test_majacc   0.71 (  0.74)	Loss_d 0.569 (0.554)	test_acc_d   0.67 (  0.70)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.48 (  0.50)
Test: [  20/  26]	Loss 0.595 (0.560)	test_acc   0.64 (  0.70)	test_minacc   0.47 (  0.52)	test_majacc   0.68 (  0.73)	Loss_d 0.595 (0.560)	test_acc_d   0.64 (  0.70)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.68 (  0.73)	test_corr_d   0.44 (  0.49)
Test: [  26/  26]	Loss 0.565 (0.560)	test_acc   0.68 (  0.70)	test_minacc   0.52 (  0.52)	test_majacc   0.71 (  0.73)	Loss_d 0.565 (0.560)	test_acc_d   0.68 (  0.70)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.53 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.20it/s]
Test: [  0/  1]	Loss 0.917 (0.917)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.52)	test_majacc   0.80 (  0.80)	Loss_d 0.917 (0.917)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.917 (0.917)	test_acc   0.55 (  0.55)	test_minacc   0.52 (  0.52)	test_majacc   0.80 (  0.80)	Loss_d 0.917 (0.917)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.11 (  0.11)
Overall Timing[ 22/  1]	epoch_time 0.0370 (0.0408)	validation_time 0.0004 (0.0007)	train_time 0.0366 (0.0399)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.697500031888485, 0.5509999990463257)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.49it/s] 15%|#5        | 4/26 [00:00<00:01, 15.61it/s] 27%|##6       | 7/26 [00:00<00:00, 20.47it/s] 42%|####2     | 11/26 [00:00<00:00, 24.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.08it/s] 69%|######9   | 18/26 [00:00<00:00, 27.56it/s] 85%|########4 | 22/26 [00:00<00:00, 28.72it/s] 96%|#########6| 25/26 [00:00<00:00, 28.86it/s]100%|##########| 26/26 [00:01<00:00, 24.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.015 (0.006)	train_nll   0.73 (  0.58)	train_penalty   0.01 (  0.01)	weight_norm   7.76 (  7.76)	train_acc   0.53 (  0.68)	train_minacc   0.48 (  0.53)	train_majacc   0.54 (  0.70)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.56it/s] 27%|##6       | 7/26 [00:00<00:00, 34.59it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.59it/s] 46%|####6     | 12/26 [00:00<00:00, 41.11it/s] 65%|######5   | 17/26 [00:00<00:00, 42.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.79it/s] 88%|########8 | 23/26 [00:00<00:00, 47.19it/s]100%|##########| 26/26 [00:00<00:00, 40.07it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.56 (  0.56)	Loss_d 0.665 (0.665)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.642 (0.640)	test_acc   0.59 (  0.60)	test_minacc   0.64 (  0.60)	test_majacc   0.59 (  0.61)	Loss_d 0.642 (0.640)	test_acc_d   0.59 (  0.60)	test_minacc_d   0.64 (  0.60)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.32 (  0.34)
Test: [  20/  26]	Loss 0.644 (0.646)	test_acc   0.60 (  0.59)	test_minacc   0.49 (  0.56)	test_majacc   0.62 (  0.60)	Loss_d 0.644 (0.646)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.49 (  0.56)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.31 (  0.34)
Test: [  26/  26]	Loss 0.646 (0.646)	test_acc   0.60 (  0.59)	test_minacc   0.55 (  0.56)	test_majacc   0.61 (  0.60)	Loss_d 0.646 (0.646)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.38 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.86it/s]
Test: [  0/  1]	Loss 0.713 (0.713)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.64 (  0.64)	Loss_d 0.713 (0.713)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.713 (0.713)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.64 (  0.64)	Loss_d 0.713 (0.713)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.04 (  0.04)
Overall Timing[ 23/  1]	epoch_time 0.0392 (0.0407)	validation_time 0.0004 (0.0007)	train_time 0.0387 (0.0398)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.5924000126719475, 0.5570000410079956)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.95it/s] 15%|#5        | 4/26 [00:00<00:01, 14.64it/s] 27%|##6       | 7/26 [00:00<00:00, 19.48it/s] 38%|###8      | 10/26 [00:00<00:00, 22.80it/s] 50%|#####     | 13/26 [00:00<00:00, 24.49it/s] 62%|######1   | 16/26 [00:00<00:00, 25.65it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.59it/s] 85%|########4 | 22/26 [00:00<00:00, 26.27it/s]100%|##########| 26/26 [00:01<00:00, 28.30it/s]100%|##########| 26/26 [00:01<00:00, 22.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.004 (0.006)	train_nll   0.58 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.70 (  0.64)	train_minacc   0.31 (  0.48)	train_majacc   0.75 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.83it/s] 23%|##3       | 6/26 [00:00<00:00, 23.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 23.14it/s] 46%|####6     | 12/26 [00:00<00:00, 35.40it/s] 65%|######5   | 17/26 [00:00<00:00, 38.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.81it/s] 88%|########8 | 23/26 [00:00<00:00, 44.97it/s]100%|##########| 26/26 [00:00<00:00, 34.98it/s]
Test: [   0/  26]	Loss 0.559 (0.559)	test_acc   0.77 (  0.77)	test_minacc   0.40 (  0.40)	test_majacc   0.82 (  0.82)	Loss_d 0.559 (0.559)	test_acc_d   0.77 (  0.77)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.551 (0.558)	test_acc   0.71 (  0.72)	test_minacc   0.34 (  0.39)	test_majacc   0.77 (  0.78)	Loss_d 0.551 (0.558)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.34 (  0.39)	test_majacc_d   0.77 (  0.78)	test_corr_d   0.56 (  0.57)
Test: [  20/  26]	Loss 0.573 (0.560)	test_acc   0.68 (  0.72)	test_minacc   0.46 (  0.42)	test_majacc   0.73 (  0.77)	Loss_d 0.573 (0.560)	test_acc_d   0.68 (  0.72)	test_minacc_d   0.46 (  0.42)	test_majacc_d   0.73 (  0.77)	test_corr_d   0.51 (  0.56)
Test: [  26/  26]	Loss 0.556 (0.560)	test_acc   0.72 (  0.72)	test_minacc   0.41 (  0.42)	test_majacc   0.76 (  0.77)	Loss_d 0.556 (0.560)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.41 (  0.42)	test_majacc_d   0.76 (  0.77)	test_corr_d   0.58 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.79it/s]
Test: [  0/  1]	Loss 0.955 (0.955)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.86 (  0.86)	Loss_d 0.955 (0.955)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 0.955 (0.955)	test_acc   0.44 (  0.44)	test_minacc   0.39 (  0.39)	test_majacc   0.86 (  0.86)	Loss_d 0.955 (0.955)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.86 (  0.86)	test_corr_d   0.37 (  0.37)
Overall Timing[ 24/  1]	epoch_time 0.0406 (0.0407)	validation_time 0.0004 (0.0007)	train_time 0.0402 (0.0399)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.7170000250935554, 0.43700000643730164)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.15it/s] 15%|#5        | 4/26 [00:00<00:01, 14.94it/s] 27%|##6       | 7/26 [00:00<00:00, 19.93it/s] 38%|###8      | 10/26 [00:00<00:00, 23.01it/s] 50%|#####     | 13/26 [00:00<00:00, 25.02it/s] 62%|######1   | 16/26 [00:00<00:00, 26.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.25it/s] 85%|########4 | 22/26 [00:00<00:00, 27.98it/s] 96%|#########6| 25/26 [00:01<00:00, 28.06it/s]100%|##########| 26/26 [00:01<00:00, 23.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: tensor(4.0010e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.001 (0.002)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.61 (  0.63)	train_minacc   0.66 (  0.57)	train_majacc   0.60 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.27it/s] 23%|##3       | 6/26 [00:00<00:00, 30.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.84it/s] 46%|####6     | 12/26 [00:00<00:00, 41.23it/s] 65%|######5   | 17/26 [00:00<00:00, 42.52it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.52it/s] 88%|########8 | 23/26 [00:00<00:00, 47.91it/s]100%|##########| 26/26 [00:00<00:00, 39.21it/s]
Test: [   0/  26]	Loss 0.674 (0.674)	test_acc   0.56 (  0.56)	test_minacc   0.51 (  0.51)	test_majacc   0.57 (  0.57)	Loss_d 0.674 (0.674)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.630 (0.629)	test_acc   0.62 (  0.60)	test_minacc   0.68 (  0.57)	test_majacc   0.60 (  0.61)	Loss_d 0.630 (0.629)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.68 (  0.57)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.34 (  0.39)
Test: [  20/  26]	Loss 0.651 (0.644)	test_acc   0.61 (  0.59)	test_minacc   0.50 (  0.53)	test_majacc   0.63 (  0.60)	Loss_d 0.651 (0.644)	test_acc_d   0.61 (  0.59)	test_minacc_d   0.50 (  0.53)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.31 (  0.37)
Test: [  26/  26]	Loss 0.644 (0.645)	test_acc   0.60 (  0.59)	test_minacc   0.41 (  0.52)	test_majacc   0.63 (  0.60)	Loss_d 0.644 (0.645)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.41 (  0.52)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.42 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.62it/s]
Test: [  0/  1]	Loss 0.914 (0.914)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.56 (  0.56)	Loss_d 0.914 (0.914)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.914 (0.914)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.56 (  0.56)	Loss_d 0.914 (0.914)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 25/  1]	epoch_time 0.0396 (0.0407)	validation_time 0.0004 (0.0007)	train_time 0.0392 (0.0398)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.5892000119090081, 0.5190000534057617)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.18it/s] 15%|#5        | 4/26 [00:00<00:01, 18.61it/s] 27%|##6       | 7/26 [00:00<00:00, 23.05it/s] 42%|####2     | 11/26 [00:00<00:00, 26.00it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.39it/s] 69%|######9   | 18/26 [00:00<00:00, 27.84it/s] 81%|########  | 21/26 [00:00<00:00, 27.92it/s] 96%|#########6| 25/26 [00:00<00:00, 28.47it/s]100%|##########| 26/26 [00:01<00:00, 24.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.61 (  0.59)	train_minacc   0.55 (  0.66)	train_majacc   0.62 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 23%|##3       | 6/26 [00:00<00:00, 26.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.51it/s] 42%|####2     | 11/26 [00:00<00:00, 35.71it/s] 65%|######5   | 17/26 [00:00<00:00, 39.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.11it/s] 88%|########8 | 23/26 [00:00<00:00, 43.94it/s]100%|##########| 26/26 [00:00<00:00, 35.75it/s]
Test: [   0/  26]	Loss 0.576 (0.576)	test_acc   0.70 (  0.70)	test_minacc   0.51 (  0.51)	test_majacc   0.72 (  0.72)	Loss_d 0.576 (0.576)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.573 (0.570)	test_acc   0.63 (  0.68)	test_minacc   0.59 (  0.61)	test_majacc   0.64 (  0.70)	Loss_d 0.573 (0.570)	test_acc_d   0.63 (  0.68)	test_minacc_d   0.59 (  0.61)	test_majacc_d   0.64 (  0.70)	test_corr_d   0.44 (  0.47)
Test: [  20/  26]	Loss 0.588 (0.575)	test_acc   0.61 (  0.68)	test_minacc   0.50 (  0.61)	test_majacc   0.63 (  0.69)	Loss_d 0.588 (0.575)	test_acc_d   0.61 (  0.68)	test_minacc_d   0.50 (  0.61)	test_majacc_d   0.63 (  0.69)	test_corr_d   0.42 (  0.46)
Test: [  26/  26]	Loss 0.574 (0.576)	test_acc   0.65 (  0.67)	test_minacc   0.48 (  0.60)	test_majacc   0.67 (  0.69)	Loss_d 0.574 (0.576)	test_acc_d   0.65 (  0.67)	test_minacc_d   0.48 (  0.60)	test_majacc_d   0.67 (  0.69)	test_corr_d   0.49 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.92it/s]
Test: [  0/  1]	Loss 0.838 (0.838)	test_acc   0.58 (  0.58)	test_minacc   0.56 (  0.56)	test_majacc   0.76 (  0.76)	Loss_d 0.838 (0.838)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.838 (0.838)	test_acc   0.58 (  0.58)	test_minacc   0.56 (  0.56)	test_majacc   0.76 (  0.76)	Loss_d 0.838 (0.838)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.15 (  0.15)
Overall Timing[ 26/  1]	epoch_time 0.0400 (0.0407)	validation_time 0.0004 (0.0007)	train_time 0.0395 (0.0398)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.6738000273108482, 0.5790000557899475)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.65it/s] 15%|#5        | 4/26 [00:00<00:01, 18.21it/s] 27%|##6       | 7/26 [00:00<00:00, 22.32it/s] 38%|###8      | 10/26 [00:00<00:00, 24.63it/s] 50%|#####     | 13/26 [00:00<00:00, 25.86it/s] 65%|######5   | 17/26 [00:00<00:00, 27.11it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.55it/s] 88%|########8 | 23/26 [00:00<00:00, 27.82it/s]100%|##########| 26/26 [00:01<00:00, 28.18it/s]100%|##########| 26/26 [00:01<00:00, 24.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.002 (0.002)	train_nll   0.56 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.70 (  0.61)	train_minacc   0.52 (  0.58)	train_majacc   0.73 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.69it/s] 23%|##3       | 6/26 [00:00<00:00, 31.20it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.20it/s] 42%|####2     | 11/26 [00:00<00:00, 38.02it/s] 65%|######5   | 17/26 [00:00<00:00, 43.36it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.36it/s] 88%|########8 | 23/26 [00:00<00:00, 46.18it/s]100%|##########| 26/26 [00:00<00:00, 39.36it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.72 (  0.72)	test_minacc   0.43 (  0.43)	test_majacc   0.76 (  0.76)	Loss_d 0.564 (0.564)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.565 (0.548)	test_acc   0.67 (  0.70)	test_minacc   0.48 (  0.51)	test_majacc   0.70 (  0.73)	Loss_d 0.565 (0.548)	test_acc_d   0.67 (  0.70)	test_minacc_d   0.48 (  0.51)	test_majacc_d   0.70 (  0.73)	test_corr_d   0.49 (  0.53)
Test: [  20/  26]	Loss 0.587 (0.554)	test_acc   0.66 (  0.70)	test_minacc   0.50 (  0.53)	test_majacc   0.69 (  0.73)	Loss_d 0.587 (0.554)	test_acc_d   0.66 (  0.70)	test_minacc_d   0.50 (  0.53)	test_majacc_d   0.69 (  0.73)	test_corr_d   0.47 (  0.52)
Test: [  26/  26]	Loss 0.558 (0.555)	test_acc   0.68 (  0.70)	test_minacc   0.48 (  0.53)	test_majacc   0.70 (  0.73)	Loss_d 0.558 (0.555)	test_acc_d   0.68 (  0.70)	test_minacc_d   0.48 (  0.53)	test_majacc_d   0.70 (  0.73)	test_corr_d   0.55 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.25it/s]
Test: [  0/  1]	Loss 1.112 (1.112)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.79 (  0.79)	Loss_d 1.112 (1.112)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 1.112 (1.112)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.79 (  0.79)	Loss_d 1.112 (1.112)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.15 (  0.15)
Overall Timing[ 27/  1]	epoch_time 0.0397 (0.0406)	validation_time 0.0004 (0.0007)	train_time 0.0392 (0.0398)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.6968000295162201, 0.531000018119812)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.68it/s] 15%|#5        | 4/26 [00:00<00:01, 19.39it/s] 27%|##6       | 7/26 [00:00<00:00, 22.75it/s] 38%|###8      | 10/26 [00:00<00:00, 25.15it/s] 50%|#####     | 13/26 [00:00<00:00, 25.51it/s] 62%|######1   | 16/26 [00:00<00:00, 26.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.02it/s] 88%|########8 | 23/26 [00:00<00:00, 28.36it/s]100%|##########| 26/26 [00:01<00:00, 24.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.016 (0.003)	train_nll   0.66 (  0.61)	train_penalty   0.02 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.59 (  0.63)	train_minacc   0.48 (  0.52)	train_majacc   0.61 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.35it/s] 23%|##3       | 6/26 [00:00<00:00, 32.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.47it/s] 42%|####2     | 11/26 [00:00<00:00, 39.97it/s] 65%|######5   | 17/26 [00:00<00:00, 42.84it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.84it/s] 88%|########8 | 23/26 [00:00<00:00, 46.96it/s]100%|##########| 26/26 [00:00<00:00, 39.38it/s]
Test: [   0/  26]	Loss 0.607 (0.607)	test_acc   0.64 (  0.64)	test_minacc   0.47 (  0.47)	test_majacc   0.66 (  0.66)	Loss_d 0.607 (0.607)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.676 (0.666)	test_acc   0.56 (  0.57)	test_minacc   0.34 (  0.43)	test_majacc   0.60 (  0.60)	Loss_d 0.676 (0.666)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.34 (  0.43)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.44 (  0.45)
Test: [  20/  26]	Loss 0.684 (0.658)	test_acc   0.56 (  0.58)	test_minacc   0.54 (  0.48)	test_majacc   0.56 (  0.60)	Loss_d 0.684 (0.658)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.54 (  0.48)	test_majacc_d   0.56 (  0.60)	test_corr_d   0.38 (  0.44)
Test: [  26/  26]	Loss 0.654 (0.657)	test_acc   0.58 (  0.59)	test_minacc   0.48 (  0.48)	test_majacc   0.59 (  0.60)	Loss_d 0.654 (0.657)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.49 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.83it/s]
Test: [  0/  1]	Loss 0.858 (0.858)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.67 (  0.67)	Loss_d 0.858 (0.858)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.858 (0.858)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.67 (  0.67)	Loss_d 0.858 (0.858)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.22 (  0.22)
Overall Timing[ 28/  1]	epoch_time 0.0402 (0.0406)	validation_time 0.0004 (0.0007)	train_time 0.0397 (0.0398)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.5856000053882598, 0.47600001096725464)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.27it/s] 15%|#5        | 4/26 [00:00<00:01, 15.20it/s] 27%|##6       | 7/26 [00:00<00:00, 20.07it/s] 42%|####2     | 11/26 [00:00<00:00, 24.55it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.07it/s] 88%|########8 | 23/26 [00:00<00:00, 28.99it/s]100%|##########| 26/26 [00:01<00:00, 24.07it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.001 (0.004)	train_nll   0.57 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.70 (  0.65)	train_minacc   0.48 (  0.52)	train_majacc   0.73 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.78it/s] 23%|##3       | 6/26 [00:00<00:00, 26.53it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.53it/s] 46%|####6     | 12/26 [00:00<00:00, 39.64it/s] 65%|######5   | 17/26 [00:00<00:00, 40.81it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.81it/s] 88%|########8 | 23/26 [00:00<00:00, 46.45it/s]100%|##########| 26/26 [00:00<00:00, 37.48it/s]
Test: [   0/  26]	Loss 0.553 (0.553)	test_acc   0.72 (  0.72)	test_minacc   0.60 (  0.60)	test_majacc   0.74 (  0.74)	Loss_d 0.553 (0.553)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.583 (0.578)	test_acc   0.64 (  0.67)	test_minacc   0.50 (  0.56)	test_majacc   0.66 (  0.69)	Loss_d 0.583 (0.578)	test_acc_d   0.64 (  0.67)	test_minacc_d   0.50 (  0.56)	test_majacc_d   0.66 (  0.69)	test_corr_d   0.42 (  0.45)
Test: [  20/  26]	Loss 0.612 (0.582)	test_acc   0.58 (  0.66)	test_minacc   0.53 (  0.58)	test_majacc   0.59 (  0.68)	Loss_d 0.612 (0.582)	test_acc_d   0.58 (  0.66)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.59 (  0.68)	test_corr_d   0.37 (  0.43)
Test: [  26/  26]	Loss 0.570 (0.581)	test_acc   0.65 (  0.67)	test_minacc   0.55 (  0.59)	test_majacc   0.67 (  0.68)	Loss_d 0.570 (0.581)	test_acc_d   0.65 (  0.67)	test_minacc_d   0.55 (  0.59)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.47 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.36it/s]
Test: [  0/  1]	Loss 0.881 (0.881)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.78 (  0.78)	Loss_d 0.881 (0.881)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.881 (0.881)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.78 (  0.78)	Loss_d 0.881 (0.881)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.10 (  0.10)
Overall Timing[ 29/  1]	epoch_time 0.0398 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0394 (0.0398)
record: (train_acc, test_acc) (0.6263000141382218, 0.5890000462532043)
last accs (train_acc, test_acc) (0.6660000231266022, 0.5560000538825989)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.22it/s] 15%|#5        | 4/26 [00:00<00:01, 15.89it/s] 27%|##6       | 7/26 [00:00<00:00, 21.18it/s] 38%|###8      | 10/26 [00:00<00:00, 23.63it/s] 50%|#####     | 13/26 [00:00<00:00, 24.95it/s] 65%|######5   | 17/26 [00:00<00:00, 27.15it/s] 81%|########  | 21/26 [00:00<00:00, 28.32it/s] 92%|#########2| 24/26 [00:00<00:00, 28.07it/s]100%|##########| 26/26 [00:01<00:00, 23.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.001 (0.002)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.62 (  0.61)	train_minacc   0.62 (  0.58)	train_majacc   0.62 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.79it/s] 27%|##6       | 7/26 [00:00<00:00, 32.52it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.52it/s] 50%|#####     | 13/26 [00:00<00:00, 38.52it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.04it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.04it/s] 96%|#########6| 25/26 [00:00<00:00, 45.99it/s]100%|##########| 26/26 [00:00<00:00, 38.58it/s]
Test: [   0/  26]	Loss 0.600 (0.600)	test_acc   0.64 (  0.64)	test_minacc   0.60 (  0.60)	test_majacc   0.64 (  0.64)	Loss_d 0.600 (0.600)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.603 (0.602)	test_acc   0.59 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.58 (  0.64)	Loss_d 0.603 (0.602)	test_acc_d   0.59 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.58 (  0.64)	test_corr_d   0.34 (  0.38)
Test: [  20/  26]	Loss 0.620 (0.606)	test_acc   0.58 (  0.63)	test_minacc   0.57 (  0.64)	test_majacc   0.59 (  0.63)	Loss_d 0.620 (0.606)	test_acc_d   0.58 (  0.63)	test_minacc_d   0.57 (  0.64)	test_majacc_d   0.59 (  0.63)	test_corr_d   0.32 (  0.37)
Test: [  26/  26]	Loss 0.600 (0.605)	test_acc   0.64 (  0.63)	test_minacc   0.72 (  0.65)	test_majacc   0.63 (  0.62)	Loss_d 0.600 (0.605)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.72 (  0.65)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.41 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.04it/s]
Test: [  0/  1]	Loss 0.811 (0.811)	test_acc   0.63 (  0.63)	test_minacc   0.63 (  0.63)	test_majacc   0.70 (  0.70)	Loss_d 0.811 (0.811)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.811 (0.811)	test_acc   0.63 (  0.63)	test_minacc   0.63 (  0.63)	test_majacc   0.70 (  0.70)	Loss_d 0.811 (0.811)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.05 (  0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/21/checkpoints/model_best.pth
Overall Timing[ 30/  1]	epoch_time 0.0397 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0393 (0.0398)
record: (train_acc, test_acc) (0.6276000111699104, 0.6330000162124634)
last accs (train_acc, test_acc) (0.6276000111699104, 0.6330000162124634)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.44it/s] 15%|#5        | 4/26 [00:00<00:01, 17.40it/s] 27%|##6       | 7/26 [00:00<00:00, 21.78it/s] 38%|###8      | 10/26 [00:00<00:00, 23.81it/s] 50%|#####     | 13/26 [00:00<00:00, 25.55it/s] 65%|######5   | 17/26 [00:00<00:00, 27.14it/s] 81%|########  | 21/26 [00:00<00:00, 28.47it/s] 92%|#########2| 24/26 [00:00<00:00, 27.94it/s]100%|##########| 26/26 [00:01<00:00, 24.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.59 (  0.59)	train_minacc   0.55 (  0.68)	train_majacc   0.59 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.29it/s] 27%|##6       | 7/26 [00:00<00:00, 35.84it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.84it/s] 50%|#####     | 13/26 [00:00<00:00, 43.45it/s] 69%|######9   | 18/26 [00:00<00:00, 42.09it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.09it/s] 88%|########8 | 23/26 [00:00<00:00, 44.45it/s]100%|##########| 26/26 [00:00<00:00, 40.53it/s]
Test: [   0/  26]	Loss 0.611 (0.611)	test_acc   0.64 (  0.64)	test_minacc   0.55 (  0.55)	test_majacc   0.65 (  0.65)	Loss_d 0.611 (0.611)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.635 (0.629)	test_acc   0.55 (  0.58)	test_minacc   0.52 (  0.56)	test_majacc   0.55 (  0.59)	Loss_d 0.635 (0.629)	test_acc_d   0.55 (  0.58)	test_minacc_d   0.52 (  0.56)	test_majacc_d   0.55 (  0.59)	test_corr_d   0.28 (  0.30)
Test: [  20/  26]	Loss 0.642 (0.630)	test_acc   0.54 (  0.59)	test_minacc   0.56 (  0.59)	test_majacc   0.53 (  0.59)	Loss_d 0.642 (0.630)	test_acc_d   0.54 (  0.59)	test_minacc_d   0.56 (  0.59)	test_majacc_d   0.53 (  0.59)	test_corr_d   0.25 (  0.29)
Test: [  26/  26]	Loss 0.627 (0.630)	test_acc   0.53 (  0.59)	test_minacc   0.62 (  0.60)	test_majacc   0.52 (  0.59)	Loss_d 0.627 (0.630)	test_acc_d   0.53 (  0.59)	test_minacc_d   0.62 (  0.60)	test_majacc_d   0.52 (  0.59)	test_corr_d   0.32 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.55it/s]
Test: [  0/  1]	Loss 0.767 (0.767)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.75 (  0.75)	Loss_d 0.767 (0.767)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.767 (0.767)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.75 (  0.75)	Loss_d 0.767 (0.767)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.03 (  0.03)
Overall Timing[ 31/  1]	epoch_time 0.0398 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0393 (0.0398)
record: (train_acc, test_acc) (0.6276000111699104, 0.6330000162124634)
last accs (train_acc, test_acc) (0.5871000100970268, 0.5850000381469727)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.67it/s] 15%|#5        | 4/26 [00:00<00:01, 20.08it/s] 27%|##6       | 7/26 [00:00<00:00, 23.01it/s] 42%|####2     | 11/26 [00:00<00:00, 25.75it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.96it/s] 65%|######5   | 17/26 [00:00<00:00, 27.37it/s] 81%|########  | 21/26 [00:00<00:00, 28.55it/s] 96%|#########6| 25/26 [00:00<00:00, 29.35it/s]100%|##########| 26/26 [00:01<00:00, 24.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.001 (0.001)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.57 (  0.58)	train_minacc   0.59 (  0.63)	train_majacc   0.57 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.43it/s] 27%|##6       | 7/26 [00:00<00:00, 34.63it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.63it/s] 46%|####6     | 12/26 [00:00<00:00, 41.10it/s] 65%|######5   | 17/26 [00:00<00:00, 43.15it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.15it/s] 85%|########4 | 22/26 [00:00<00:00, 42.81it/s]100%|##########| 26/26 [00:00<00:00, 38.49it/s]
Test: [   0/  26]	Loss 0.622 (0.622)	test_acc   0.63 (  0.63)	test_minacc   0.70 (  0.70)	test_majacc   0.62 (  0.62)	Loss_d 0.622 (0.622)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.606 (0.611)	test_acc   0.59 (  0.61)	test_minacc   0.73 (  0.65)	test_majacc   0.56 (  0.60)	Loss_d 0.606 (0.611)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.73 (  0.65)	test_majacc_d   0.56 (  0.60)	test_corr_d   0.33 (  0.36)
Test: [  20/  26]	Loss 0.628 (0.616)	test_acc   0.56 (  0.60)	test_minacc   0.54 (  0.64)	test_majacc   0.56 (  0.59)	Loss_d 0.628 (0.616)	test_acc_d   0.56 (  0.60)	test_minacc_d   0.54 (  0.64)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.32 (  0.35)
Test: [  26/  26]	Loss 0.622 (0.616)	test_acc   0.56 (  0.60)	test_minacc   0.59 (  0.64)	test_majacc   0.56 (  0.59)	Loss_d 0.622 (0.616)	test_acc_d   0.56 (  0.60)	test_minacc_d   0.59 (  0.64)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.37 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.74it/s]
Test: [  0/  1]	Loss 0.856 (0.856)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.71 (  0.71)	Loss_d 0.856 (0.856)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.856 (0.856)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.71 (  0.71)	Loss_d 0.856 (0.856)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.06 (  0.06)
Overall Timing[ 32/  1]	epoch_time 0.0382 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0377 (0.0397)
record: (train_acc, test_acc) (0.6276000111699104, 0.6330000162124634)
last accs (train_acc, test_acc) (0.5978000084757805, 0.628000020980835)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 15%|#5        | 4/26 [00:00<00:01, 16.91it/s] 27%|##6       | 7/26 [00:00<00:00, 20.74it/s] 38%|###8      | 10/26 [00:00<00:00, 23.53it/s] 50%|#####     | 13/26 [00:00<00:00, 25.08it/s] 65%|######5   | 17/26 [00:00<00:00, 26.93it/s] 81%|########  | 21/26 [00:00<00:00, 27.98it/s] 96%|#########6| 25/26 [00:00<00:00, 28.93it/s]100%|##########| 26/26 [00:01<00:00, 24.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.52 (  0.57)	train_minacc   0.72 (  0.67)	train_majacc   0.50 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.34it/s] 27%|##6       | 7/26 [00:00<00:00, 36.29it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.29it/s] 50%|#####     | 13/26 [00:00<00:00, 41.87it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.48it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.48it/s] 96%|#########6| 25/26 [00:00<00:00, 48.68it/s]100%|##########| 26/26 [00:00<00:00, 41.43it/s]
Test: [   0/  26]	Loss 0.619 (0.619)	test_acc   0.61 (  0.61)	test_minacc   0.55 (  0.55)	test_majacc   0.62 (  0.62)	Loss_d 0.619 (0.619)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.615 (0.619)	test_acc   0.58 (  0.60)	test_minacc   0.68 (  0.64)	test_majacc   0.56 (  0.59)	Loss_d 0.615 (0.619)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.68 (  0.64)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.32 (  0.34)
Test: [  20/  26]	Loss 0.630 (0.622)	test_acc   0.55 (  0.60)	test_minacc   0.51 (  0.65)	test_majacc   0.56 (  0.59)	Loss_d 0.630 (0.622)	test_acc_d   0.55 (  0.60)	test_minacc_d   0.51 (  0.65)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.29 (  0.32)
Test: [  26/  26]	Loss 0.622 (0.622)	test_acc   0.56 (  0.59)	test_minacc   0.55 (  0.64)	test_majacc   0.56 (  0.59)	Loss_d 0.622 (0.622)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.55 (  0.64)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.36 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 38.33it/s]
Test: [  0/  1]	Loss 0.824 (0.824)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.67 (  0.67)	Loss_d 0.824 (0.824)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.824 (0.824)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.67 (  0.67)	Loss_d 0.824 (0.824)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.05 (  0.05)
Overall Timing[ 33/  1]	epoch_time 0.0403 (0.0405)	validation_time 0.0006 (0.0006)	train_time 0.0397 (0.0397)
record: (train_acc, test_acc) (0.6276000111699104, 0.6330000162124634)
last accs (train_acc, test_acc) (0.5947000108957291, 0.628000020980835)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 15%|#5        | 4/26 [00:00<00:01, 17.32it/s] 27%|##6       | 7/26 [00:00<00:00, 21.83it/s] 38%|###8      | 10/26 [00:00<00:00, 23.83it/s] 50%|#####     | 13/26 [00:00<00:00, 25.51it/s] 62%|######1   | 16/26 [00:00<00:00, 26.33it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.72it/s] 85%|########4 | 22/26 [00:00<00:00, 26.74it/s] 96%|#########6| 25/26 [00:01<00:00, 26.87it/s]100%|##########| 26/26 [00:01<00:00, 23.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.002 (0.001)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.56 (  0.58)	train_minacc   0.41 (  0.65)	train_majacc   0.58 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.21it/s] 27%|##6       | 7/26 [00:00<00:00, 33.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.79it/s] 50%|#####     | 13/26 [00:00<00:00, 38.35it/s] 69%|######9   | 18/26 [00:00<00:00, 42.02it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.02it/s] 88%|########8 | 23/26 [00:00<00:00, 43.97it/s]100%|##########| 26/26 [00:00<00:00, 37.85it/s]
Test: [   0/  26]	Loss 0.610 (0.610)	test_acc   0.61 (  0.61)	test_minacc   0.47 (  0.47)	test_majacc   0.62 (  0.62)	Loss_d 0.610 (0.610)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.623 (0.624)	test_acc   0.55 (  0.58)	test_minacc   0.50 (  0.54)	test_majacc   0.55 (  0.58)	Loss_d 0.623 (0.624)	test_acc_d   0.55 (  0.58)	test_minacc_d   0.50 (  0.54)	test_majacc_d   0.55 (  0.58)	test_corr_d   0.32 (  0.32)
Test: [  20/  26]	Loss 0.631 (0.624)	test_acc   0.56 (  0.58)	test_minacc   0.60 (  0.59)	test_majacc   0.55 (  0.58)	Loss_d 0.631 (0.624)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.60 (  0.59)	test_majacc_d   0.55 (  0.58)	test_corr_d   0.27 (  0.31)
Test: [  26/  26]	Loss 0.615 (0.623)	test_acc   0.58 (  0.58)	test_minacc   0.62 (  0.60)	test_majacc   0.57 (  0.58)	Loss_d 0.615 (0.623)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.62 (  0.60)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.35 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.38it/s]
Test: [  0/  1]	Loss 0.787 (0.787)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.78 (  0.78)	Loss_d 0.787 (0.787)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.787 (0.787)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.78 (  0.78)	Loss_d 0.787 (0.787)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.09 (  0.09)
Overall Timing[ 34/  1]	epoch_time 0.0396 (0.0404)	validation_time 0.0004 (0.0006)	train_time 0.0392 (0.0397)
record: (train_acc, test_acc) (0.6276000111699104, 0.6330000162124634)
last accs (train_acc, test_acc) (0.5841000089645386, 0.5640000104904175)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 15%|#5        | 4/26 [00:00<00:01, 17.38it/s] 31%|###       | 8/26 [00:00<00:00, 23.64it/s] 46%|####6     | 12/26 [00:00<00:00, 26.76it/s] 62%|######1   | 16/26 [00:00<00:00, 28.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.87it/s] 85%|########4 | 22/26 [00:00<00:00, 28.86it/s] 96%|#########6| 25/26 [00:00<00:00, 27.89it/s]100%|##########| 26/26 [00:01<00:00, 24.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.50 (  0.58)	train_minacc   0.52 (  0.64)	train_majacc   0.50 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.99it/s] 27%|##6       | 7/26 [00:00<00:00, 32.90it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.90it/s] 50%|#####     | 13/26 [00:00<00:00, 39.12it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.00it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.00it/s] 96%|#########6| 25/26 [00:00<00:00, 45.95it/s]100%|##########| 26/26 [00:00<00:00, 38.43it/s]
Test: [   0/  26]	Loss 0.598 (0.598)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.64 (  0.64)	Loss_d 0.598 (0.598)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.606 (0.609)	test_acc   0.58 (  0.60)	test_minacc   0.59 (  0.63)	test_majacc   0.57 (  0.60)	Loss_d 0.606 (0.609)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.59 (  0.63)	test_majacc_d   0.57 (  0.60)	test_corr_d   0.36 (  0.37)
Test: [  20/  26]	Loss 0.619 (0.611)	test_acc   0.54 (  0.59)	test_minacc   0.61 (  0.64)	test_majacc   0.53 (  0.58)	Loss_d 0.619 (0.611)	test_acc_d   0.54 (  0.59)	test_minacc_d   0.61 (  0.64)	test_majacc_d   0.53 (  0.58)	test_corr_d   0.31 (  0.35)
Test: [  26/  26]	Loss 0.607 (0.610)	test_acc   0.56 (  0.59)	test_minacc   0.62 (  0.64)	test_majacc   0.56 (  0.58)	Loss_d 0.607 (0.610)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.62 (  0.64)	test_majacc_d   0.56 (  0.58)	test_corr_d   0.39 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.78it/s]
Test: [  0/  1]	Loss 0.852 (0.852)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.76 (  0.76)	Loss_d 0.852 (0.852)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.852 (0.852)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.76 (  0.76)	Loss_d 0.852 (0.852)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.12 (  0.12)
Overall Timing[ 35/  1]	epoch_time 0.0398 (0.0404)	validation_time 0.0004 (0.0006)	train_time 0.0394 (0.0397)
record: (train_acc, test_acc) (0.6276000111699104, 0.6330000162124634)
last accs (train_acc, test_acc) (0.5917000123262406, 0.6180000305175781)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 15%|#5        | 4/26 [00:00<00:01, 15.23it/s] 27%|##6       | 7/26 [00:00<00:00, 20.50it/s] 38%|###8      | 10/26 [00:00<00:00, 23.37it/s] 50%|#####     | 13/26 [00:00<00:00, 25.47it/s] 65%|######5   | 17/26 [00:00<00:00, 27.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.37it/s] 88%|########8 | 23/26 [00:00<00:00, 27.49it/s]100%|##########| 26/26 [00:01<00:00, 23.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.001 (0.001)	train_nll   0.61 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.62 (  0.58)	train_minacc   0.48 (  0.56)	train_majacc   0.64 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.48it/s] 31%|###       | 8/26 [00:00<00:00, 34.64it/s]                                               31%|###       | 8/26 [00:00<00:00, 34.64it/s] 50%|#####     | 13/26 [00:00<00:00, 36.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.96it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.96it/s] 96%|#########6| 25/26 [00:00<00:00, 44.65it/s]100%|##########| 26/26 [00:00<00:00, 37.44it/s]
Test: [   0/  26]	Loss 0.579 (0.579)	test_acc   0.68 (  0.68)	test_minacc   0.43 (  0.43)	test_majacc   0.71 (  0.71)	Loss_d 0.579 (0.579)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.643 (0.632)	test_acc   0.59 (  0.61)	test_minacc   0.32 (  0.41)	test_majacc   0.64 (  0.64)	Loss_d 0.643 (0.632)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.32 (  0.41)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.39 (  0.40)
Test: [  20/  26]	Loss 0.645 (0.627)	test_acc   0.61 (  0.62)	test_minacc   0.53 (  0.46)	test_majacc   0.62 (  0.64)	Loss_d 0.645 (0.627)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.53 (  0.46)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.35 (  0.39)
Test: [  26/  26]	Loss 0.621 (0.626)	test_acc   0.61 (  0.62)	test_minacc   0.48 (  0.47)	test_majacc   0.63 (  0.65)	Loss_d 0.621 (0.626)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.48 (  0.47)	test_majacc_d   0.63 (  0.65)	test_corr_d   0.43 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.09it/s]
Test: [  0/  1]	Loss 0.870 (0.870)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.77 (  0.77)	Loss_d 0.870 (0.870)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.870 (0.870)	test_acc   0.48 (  0.48)	test_minacc   0.44 (  0.44)	test_majacc   0.77 (  0.77)	Loss_d 0.870 (0.870)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.16 (  0.16)
Overall Timing[ 36/  1]	epoch_time 0.0405 (0.0404)	validation_time 0.0004 (0.0006)	train_time 0.0400 (0.0397)
record: (train_acc, test_acc) (0.6276000111699104, 0.6330000162124634)
last accs (train_acc, test_acc) (0.619000008225441, 0.47700002789497375)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.71it/s] 15%|#5        | 4/26 [00:00<00:01, 17.49it/s] 27%|##6       | 7/26 [00:00<00:00, 21.60it/s] 38%|###8      | 10/26 [00:00<00:00, 23.96it/s] 50%|#####     | 13/26 [00:00<00:00, 25.33it/s] 62%|######1   | 16/26 [00:00<00:00, 26.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.49it/s] 88%|########8 | 23/26 [00:00<00:00, 28.95it/s]100%|##########| 26/26 [00:01<00:00, 24.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.54 (  0.59)	train_minacc   0.62 (  0.57)	train_majacc   0.53 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.42it/s] 27%|##6       | 7/26 [00:00<00:00, 29.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.92it/s] 46%|####6     | 12/26 [00:00<00:00, 37.55it/s] 65%|######5   | 17/26 [00:00<00:00, 37.62it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.62it/s] 88%|########8 | 23/26 [00:00<00:00, 42.55it/s]100%|##########| 26/26 [00:00<00:00, 35.18it/s]
Test: [   0/  26]	Loss 0.625 (0.625)	test_acc   0.62 (  0.62)	test_minacc   0.47 (  0.47)	test_majacc   0.64 (  0.64)	Loss_d 0.625 (0.625)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.649 (0.646)	test_acc   0.57 (  0.58)	test_minacc   0.46 (  0.52)	test_majacc   0.58 (  0.59)	Loss_d 0.649 (0.646)	test_acc_d   0.57 (  0.58)	test_minacc_d   0.46 (  0.52)	test_majacc_d   0.58 (  0.59)	test_corr_d   0.25 (  0.27)
Test: [  20/  26]	Loss 0.654 (0.643)	test_acc   0.57 (  0.58)	test_minacc   0.63 (  0.57)	test_majacc   0.56 (  0.58)	Loss_d 0.654 (0.643)	test_acc_d   0.57 (  0.58)	test_minacc_d   0.63 (  0.57)	test_majacc_d   0.56 (  0.58)	test_corr_d   0.20 (  0.26)
Test: [  26/  26]	Loss 0.629 (0.642)	test_acc   0.59 (  0.58)	test_minacc   0.55 (  0.57)	test_majacc   0.59 (  0.59)	Loss_d 0.629 (0.642)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.55 (  0.57)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.32 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 19.56it/s]
Test: [  0/  1]	Loss 0.768 (0.768)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.78 (  0.78)	Loss_d 0.768 (0.768)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.768 (0.768)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.78 (  0.78)	Loss_d 0.768 (0.768)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.07 (  0.07)
Overall Timing[ 37/  1]	epoch_time 0.0421 (0.0405)	validation_time 0.0009 (0.0006)	train_time 0.0411 (0.0397)
record: (train_acc, test_acc) (0.6276000111699104, 0.6330000162124634)
last accs (train_acc, test_acc) (0.5832000067830085, 0.5330000519752502)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 15%|#5        | 4/26 [00:00<00:01, 17.89it/s] 27%|##6       | 7/26 [00:00<00:00, 21.91it/s] 38%|###8      | 10/26 [00:00<00:00, 24.47it/s] 50%|#####     | 13/26 [00:00<00:00, 25.76it/s] 62%|######1   | 16/26 [00:00<00:00, 27.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.74it/s] 88%|########8 | 23/26 [00:00<00:00, 29.27it/s]100%|##########| 26/26 [00:01<00:00, 24.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.002 (0.001)	train_nll   0.59 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.69 (  0.59)	train_minacc   0.69 (  0.59)	train_majacc   0.69 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.24it/s] 23%|##3       | 6/26 [00:00<00:00, 28.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.03it/s] 42%|####2     | 11/26 [00:00<00:00, 36.67it/s] 65%|######5   | 17/26 [00:00<00:00, 44.18it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.18it/s] 85%|########4 | 22/26 [00:00<00:00, 44.28it/s]100%|##########| 26/26 [00:00<00:00, 38.71it/s]
Test: [   0/  26]	Loss 0.588 (0.588)	test_acc   0.66 (  0.66)	test_minacc   0.55 (  0.55)	test_majacc   0.67 (  0.67)	Loss_d 0.588 (0.588)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.595 (0.589)	test_acc   0.63 (  0.67)	test_minacc   0.55 (  0.63)	test_majacc   0.64 (  0.68)	Loss_d 0.595 (0.589)	test_acc_d   0.63 (  0.67)	test_minacc_d   0.55 (  0.63)	test_majacc_d   0.64 (  0.68)	test_corr_d   0.39 (  0.41)
Test: [  20/  26]	Loss 0.606 (0.592)	test_acc   0.62 (  0.66)	test_minacc   0.59 (  0.63)	test_majacc   0.63 (  0.67)	Loss_d 0.606 (0.592)	test_acc_d   0.62 (  0.66)	test_minacc_d   0.59 (  0.63)	test_majacc_d   0.63 (  0.67)	test_corr_d   0.34 (  0.40)
Test: [  26/  26]	Loss 0.584 (0.592)	test_acc   0.67 (  0.66)	test_minacc   0.59 (  0.63)	test_majacc   0.68 (  0.67)	Loss_d 0.584 (0.592)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.59 (  0.63)	test_majacc_d   0.68 (  0.67)	test_corr_d   0.45 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.55it/s]
Test: [  0/  1]	Loss 0.833 (0.833)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.69 (  0.69)	Loss_d 0.833 (0.833)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.833 (0.833)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.69 (  0.69)	Loss_d 0.833 (0.833)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.07 (  0.07)
Overall Timing[ 38/  1]	epoch_time 0.0388 (0.0404)	validation_time 0.0004 (0.0006)	train_time 0.0384 (0.0397)
record: (train_acc, test_acc) (0.6276000111699104, 0.6330000162124634)
last accs (train_acc, test_acc) (0.6620000195503235, 0.6210000514984131)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.81it/s] 15%|#5        | 4/26 [00:00<00:01, 19.14it/s] 27%|##6       | 7/26 [00:00<00:00, 23.51it/s] 42%|####2     | 11/26 [00:00<00:00, 26.48it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.58it/s] 88%|########8 | 23/26 [00:00<00:00, 29.84it/s]100%|##########| 26/26 [00:00<00:00, 26.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.001 (0.001)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.61 (  0.62)	train_minacc   0.59 (  0.65)	train_majacc   0.61 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.62it/s] 27%|##6       | 7/26 [00:00<00:00, 31.24it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.24it/s] 50%|#####     | 13/26 [00:00<00:00, 37.83it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.31it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.31it/s] 96%|#########6| 25/26 [00:00<00:00, 43.61it/s]100%|##########| 26/26 [00:00<00:00, 37.07it/s]
Test: [   0/  26]	Loss 0.592 (0.592)	test_acc   0.63 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.64 (  0.64)	Loss_d 0.592 (0.592)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.612 (0.605)	test_acc   0.59 (  0.62)	test_minacc   0.68 (  0.68)	test_majacc   0.58 (  0.61)	Loss_d 0.612 (0.605)	test_acc_d   0.59 (  0.62)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.31 (  0.34)
Test: [  20/  26]	Loss 0.627 (0.610)	test_acc   0.56 (  0.61)	test_minacc   0.59 (  0.69)	test_majacc   0.55 (  0.60)	Loss_d 0.627 (0.610)	test_acc_d   0.56 (  0.61)	test_minacc_d   0.59 (  0.69)	test_majacc_d   0.55 (  0.60)	test_corr_d   0.27 (  0.33)
Test: [  26/  26]	Loss 0.600 (0.610)	test_acc   0.58 (  0.61)	test_minacc   0.66 (  0.69)	test_majacc   0.57 (  0.60)	Loss_d 0.600 (0.610)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.66 (  0.69)	test_majacc_d   0.57 (  0.60)	test_corr_d   0.38 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.81it/s]
Test: [  0/  1]	Loss 0.797 (0.797)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.68 (  0.68)	Loss_d 0.797 (0.797)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.797 (0.797)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.68 (  0.68)	Loss_d 0.797 (0.797)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.03 ( -0.03)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/21/checkpoints/model_best.pth
Overall Timing[ 39/  1]	epoch_time 0.0388 (0.0404)	validation_time 0.0004 (0.0006)	train_time 0.0384 (0.0397)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.35it/s] 15%|#5        | 4/26 [00:00<00:01, 19.45it/s] 27%|##6       | 7/26 [00:00<00:00, 23.82it/s] 42%|####2     | 11/26 [00:00<00:00, 26.64it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.17it/s] 69%|######9   | 18/26 [00:00<00:00, 28.64it/s] 85%|########4 | 22/26 [00:00<00:00, 29.41it/s] 96%|#########6| 25/26 [00:00<00:00, 29.10it/s]100%|##########| 26/26 [00:01<00:00, 25.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.63 (  0.59)	train_minacc   0.55 (  0.66)	train_majacc   0.64 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.58it/s] 27%|##6       | 7/26 [00:00<00:00, 36.72it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.72it/s] 46%|####6     | 12/26 [00:00<00:00, 41.44it/s] 65%|######5   | 17/26 [00:00<00:00, 42.16it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.16it/s] 88%|########8 | 23/26 [00:00<00:00, 47.16it/s]100%|##########| 26/26 [00:00<00:00, 39.46it/s]
Test: [   0/  26]	Loss 0.578 (0.578)	test_acc   0.70 (  0.70)	test_minacc   0.49 (  0.49)	test_majacc   0.73 (  0.73)	Loss_d 0.578 (0.578)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.602 (0.595)	test_acc   0.64 (  0.65)	test_minacc   0.54 (  0.54)	test_majacc   0.65 (  0.67)	Loss_d 0.602 (0.595)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.39 (  0.41)
Test: [  20/  26]	Loss 0.612 (0.594)	test_acc   0.62 (  0.65)	test_minacc   0.54 (  0.57)	test_majacc   0.63 (  0.67)	Loss_d 0.612 (0.594)	test_acc_d   0.62 (  0.65)	test_minacc_d   0.54 (  0.57)	test_majacc_d   0.63 (  0.67)	test_corr_d   0.34 (  0.39)
Test: [  26/  26]	Loss 0.592 (0.593)	test_acc   0.65 (  0.65)	test_minacc   0.55 (  0.57)	test_majacc   0.66 (  0.67)	Loss_d 0.592 (0.593)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.55 (  0.57)	test_majacc_d   0.66 (  0.67)	test_corr_d   0.43 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.53it/s]
Test: [  0/  1]	Loss 0.868 (0.868)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.79 (  0.79)	Loss_d 0.868 (0.868)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.868 (0.868)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.79 (  0.79)	Loss_d 0.868 (0.868)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.07 (  0.07)
Overall Timing[ 40/  1]	epoch_time 0.0395 (0.0404)	validation_time 0.0004 (0.0006)	train_time 0.0391 (0.0396)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.6526000179052353, 0.5550000071525574)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.66it/s] 15%|#5        | 4/26 [00:00<00:01, 15.95it/s] 27%|##6       | 7/26 [00:00<00:00, 20.73it/s] 42%|####2     | 11/26 [00:00<00:00, 24.40it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.34it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.51it/s] 88%|########8 | 23/26 [00:00<00:00, 28.24it/s]100%|##########| 26/26 [00:01<00:00, 24.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.75 (  7.75)	train_acc   0.54 (  0.59)	train_minacc   0.69 (  0.62)	train_majacc   0.52 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.50it/s] 35%|###4      | 9/26 [00:00<00:00, 38.05it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.05it/s] 58%|#####7    | 15/26 [00:00<00:00, 45.58it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 45.58it/s] 81%|########  | 21/26 [00:00<00:00, 46.60it/s]100%|##########| 26/26 [00:00<00:00, 42.71it/s]
Test: [   0/  26]	Loss 0.631 (0.631)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.60 (  0.60)	Loss_d 0.631 (0.631)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.623 (0.623)	test_acc   0.59 (  0.60)	test_minacc   0.73 (  0.66)	test_majacc   0.56 (  0.58)	Loss_d 0.623 (0.623)	test_acc_d   0.59 (  0.60)	test_minacc_d   0.73 (  0.66)	test_majacc_d   0.56 (  0.58)	test_corr_d   0.31 (  0.32)
Test: [  20/  26]	Loss 0.624 (0.626)	test_acc   0.58 (  0.59)	test_minacc   0.63 (  0.65)	test_majacc   0.57 (  0.58)	Loss_d 0.624 (0.626)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.63 (  0.65)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.26 (  0.31)
Test: [  26/  26]	Loss 0.623 (0.626)	test_acc   0.61 (  0.59)	test_minacc   0.59 (  0.65)	test_majacc   0.61 (  0.58)	Loss_d 0.623 (0.626)	test_acc_d   0.61 (  0.59)	test_minacc_d   0.59 (  0.65)	test_majacc_d   0.61 (  0.58)	test_corr_d   0.36 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.52it/s]
Test: [  0/  1]	Loss 0.788 (0.788)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.59 (  0.59)	Loss_d 0.788 (0.788)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.788 (0.788)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.59 (  0.59)	Loss_d 0.788 (0.788)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 41/  1]	epoch_time 0.0390 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0385 (0.0396)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.5882000156641006, 0.6340000033378601)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.23it/s] 15%|#5        | 4/26 [00:00<00:01, 17.13it/s] 27%|##6       | 7/26 [00:00<00:00, 22.11it/s] 42%|####2     | 11/26 [00:00<00:00, 25.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.19it/s] 88%|########8 | 23/26 [00:00<00:00, 29.99it/s]100%|##########| 26/26 [00:01<00:00, 25.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.74 (  7.75)	train_acc   0.53 (  0.59)	train_minacc   0.69 (  0.65)	train_majacc   0.51 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.70it/s] 23%|##3       | 6/26 [00:00<00:00, 27.01it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.01it/s] 46%|####6     | 12/26 [00:00<00:00, 38.33it/s] 69%|######9   | 18/26 [00:00<00:00, 43.39it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.39it/s] 92%|#########2| 24/26 [00:00<00:00, 46.52it/s]100%|##########| 26/26 [00:00<00:00, 38.78it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.61 (  0.61)	test_minacc   0.64 (  0.64)	test_majacc   0.61 (  0.61)	Loss_d 0.634 (0.634)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.649 (0.648)	test_acc   0.53 (  0.56)	test_minacc   0.46 (  0.57)	test_majacc   0.54 (  0.56)	Loss_d 0.649 (0.648)	test_acc_d   0.53 (  0.56)	test_minacc_d   0.46 (  0.57)	test_majacc_d   0.54 (  0.56)	test_corr_d   0.25 (  0.25)
Test: [  20/  26]	Loss 0.641 (0.646)	test_acc   0.56 (  0.57)	test_minacc   0.63 (  0.61)	test_majacc   0.55 (  0.56)	Loss_d 0.641 (0.646)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.63 (  0.61)	test_majacc_d   0.55 (  0.56)	test_corr_d   0.23 (  0.24)
Test: [  26/  26]	Loss 0.648 (0.645)	test_acc   0.54 (  0.57)	test_minacc   0.48 (  0.61)	test_majacc   0.54 (  0.56)	Loss_d 0.648 (0.645)	test_acc_d   0.54 (  0.57)	test_minacc_d   0.48 (  0.61)	test_majacc_d   0.54 (  0.56)	test_corr_d   0.28 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.12it/s]
Test: [  0/  1]	Loss 0.743 (0.743)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.66 (  0.66)	Loss_d 0.743 (0.743)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.743 (0.743)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.66 (  0.66)	Loss_d 0.743 (0.743)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.05 (  0.05)
Overall Timing[ 42/  1]	epoch_time 0.0378 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0373 (0.0396)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.5674000068306922, 0.5820000171661377)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 15%|#5        | 4/26 [00:00<00:01, 18.62it/s] 27%|##6       | 7/26 [00:00<00:00, 22.71it/s] 38%|###8      | 10/26 [00:00<00:00, 25.13it/s] 50%|#####     | 13/26 [00:00<00:00, 26.19it/s] 65%|######5   | 17/26 [00:00<00:00, 27.92it/s] 81%|########  | 21/26 [00:00<00:00, 29.16it/s] 96%|#########6| 25/26 [00:00<00:00, 29.89it/s]100%|##########| 26/26 [00:01<00:00, 25.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1118 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1119 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1120 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1121 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1122 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1123 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1124 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1125 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1126 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1127 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1128 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1129 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1130 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1131 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1132 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1133 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1134 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1135 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1136 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1137 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1138 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1139 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1140 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1141 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1142 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1143 364.00000000000006
constrain score by whole: 0
Epoch: [43][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.74 (  7.74)	train_acc   0.55 (  0.56)	train_minacc   0.69 (  0.67)	train_majacc   0.53 (  0.54)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.46it/s] 27%|##6       | 7/26 [00:00<00:00, 34.74it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.74it/s] 46%|####6     | 12/26 [00:00<00:00, 39.65it/s] 69%|######9   | 18/26 [00:00<00:00, 45.93it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.93it/s] 92%|#########2| 24/26 [00:00<00:00, 45.86it/s]100%|##########| 26/26 [00:00<00:00, 40.49it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.57 (  0.57)	test_minacc   0.72 (  0.72)	test_majacc   0.55 (  0.55)	Loss_d 0.639 (0.639)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.629 (0.629)	test_acc   0.56 (  0.57)	test_minacc   0.79 (  0.71)	test_majacc   0.52 (  0.55)	Loss_d 0.629 (0.629)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.79 (  0.71)	test_majacc_d   0.52 (  0.55)	test_corr_d   0.30 (  0.31)
Test: [  20/  26]	Loss 0.634 (0.632)	test_acc   0.56 (  0.56)	test_minacc   0.71 (  0.70)	test_majacc   0.53 (  0.54)	Loss_d 0.634 (0.632)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.71 (  0.70)	test_majacc_d   0.53 (  0.54)	test_corr_d   0.25 (  0.30)
Test: [  26/  26]	Loss 0.628 (0.632)	test_acc   0.58 (  0.56)	test_minacc   0.72 (  0.70)	test_majacc   0.56 (  0.54)	Loss_d 0.628 (0.632)	test_acc_d   0.58 (  0.56)	test_minacc_d   0.72 (  0.70)	test_majacc_d   0.56 (  0.54)	test_corr_d   0.34 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.01it/s]
Test: [  0/  1]	Loss 0.846 (0.846)	test_acc   0.66 (  0.66)	test_minacc   0.67 (  0.67)	test_majacc   0.56 (  0.56)	Loss_d 0.846 (0.846)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.846 (0.846)	test_acc   0.66 (  0.66)	test_minacc   0.67 (  0.67)	test_majacc   0.56 (  0.56)	Loss_d 0.846 (0.846)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.06 (  0.06)
Overall Timing[ 43/  1]	epoch_time 0.0375 (0.0402)	validation_time 0.0004 (0.0006)	train_time 0.0371 (0.0395)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.5601000136733055, 0.6600000262260437)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 15%|#5        | 4/26 [00:00<00:01, 16.27it/s] 27%|##6       | 7/26 [00:00<00:00, 21.11it/s] 42%|####2     | 11/26 [00:00<00:00, 24.74it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.51it/s] 69%|######9   | 18/26 [00:00<00:00, 27.13it/s] 85%|########4 | 22/26 [00:00<00:00, 28.38it/s] 96%|#########6| 25/26 [00:01<00:00, 27.84it/s]100%|##########| 26/26 [00:01<00:00, 23.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1144 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1145 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1146 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1147 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1148 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1149 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1150 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1151 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1152 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1153 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1154 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1155 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1156 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1157 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1158 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1159 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1160 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1161 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1162 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1163 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1164 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1165 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1166 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1167 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1168 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1169 364.00000000000006
constrain score by whole: 0
Epoch: [44][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.74 (  7.74)	train_acc   0.59 (  0.58)	train_minacc   0.55 (  0.63)	train_majacc   0.59 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.55it/s] 23%|##3       | 6/26 [00:00<00:00, 26.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.84it/s] 46%|####6     | 12/26 [00:00<00:00, 38.93it/s] 65%|######5   | 17/26 [00:00<00:00, 40.72it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.72it/s] 88%|########8 | 23/26 [00:00<00:00, 44.98it/s]100%|##########| 26/26 [00:00<00:00, 37.55it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.56 (  0.56)	Loss_d 0.630 (0.630)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.628 (0.625)	test_acc   0.53 (  0.56)	test_minacc   0.64 (  0.67)	test_majacc   0.51 (  0.54)	Loss_d 0.628 (0.625)	test_acc_d   0.53 (  0.56)	test_minacc_d   0.64 (  0.67)	test_majacc_d   0.51 (  0.54)	test_corr_d   0.30 (  0.31)
Test: [  20/  26]	Loss 0.633 (0.628)	test_acc   0.56 (  0.56)	test_minacc   0.69 (  0.69)	test_majacc   0.54 (  0.54)	Loss_d 0.633 (0.628)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.27 (  0.30)
Test: [  26/  26]	Loss 0.625 (0.628)	test_acc   0.56 (  0.56)	test_minacc   0.62 (  0.69)	test_majacc   0.56 (  0.54)	Loss_d 0.625 (0.628)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.62 (  0.69)	test_majacc_d   0.56 (  0.54)	test_corr_d   0.35 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.40it/s]
Test: [  0/  1]	Loss 0.810 (0.810)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.62 (  0.62)	Loss_d 0.810 (0.810)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.810 (0.810)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.62 (  0.62)	Loss_d 0.810 (0.810)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.06 (  0.06)
Overall Timing[ 44/  1]	epoch_time 0.0388 (0.0402)	validation_time 0.0005 (0.0006)	train_time 0.0383 (0.0395)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.5638000128269196, 0.6500000357627869)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.48it/s] 15%|#5        | 4/26 [00:00<00:01, 18.89it/s] 27%|##6       | 7/26 [00:00<00:00, 22.26it/s] 38%|###8      | 10/26 [00:00<00:00, 24.46it/s] 50%|#####     | 13/26 [00:00<00:00, 25.65it/s] 65%|######5   | 17/26 [00:00<00:00, 27.26it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.87it/s] 88%|########8 | 23/26 [00:00<00:00, 28.03it/s]100%|##########| 26/26 [00:01<00:00, 24.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1170 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1171 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1172 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1173 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1174 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1175 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1176 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1177 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1178 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1179 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1180 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1181 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1182 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1183 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1184 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1185 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1186 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1187 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1188 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1189 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1190 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1191 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1192 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1193 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1194 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1195 364.00000000000006
constrain score by whole: 0
Epoch: [45][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.74 (  7.74)	train_acc   0.53 (  0.56)	train_minacc   0.69 (  0.67)	train_majacc   0.51 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.54it/s] 27%|##6       | 7/26 [00:00<00:00, 35.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.93it/s] 46%|####6     | 12/26 [00:00<00:00, 40.49it/s] 65%|######5   | 17/26 [00:00<00:00, 43.54it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.54it/s] 85%|########4 | 22/26 [00:00<00:00, 45.59it/s]100%|##########| 26/26 [00:00<00:00, 39.99it/s]
Test: [   0/  26]	Loss 0.616 (0.616)	test_acc   0.58 (  0.58)	test_minacc   0.51 (  0.51)	test_majacc   0.59 (  0.59)	Loss_d 0.616 (0.616)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.617 (0.624)	test_acc   0.57 (  0.57)	test_minacc   0.52 (  0.56)	test_majacc   0.57 (  0.57)	Loss_d 0.617 (0.624)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.52 (  0.56)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.34 (  0.33)
Test: [  20/  26]	Loss 0.627 (0.623)	test_acc   0.58 (  0.58)	test_minacc   0.70 (  0.59)	test_majacc   0.55 (  0.58)	Loss_d 0.627 (0.623)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.55 (  0.58)	test_corr_d   0.28 (  0.32)
Test: [  26/  26]	Loss 0.618 (0.622)	test_acc   0.56 (  0.58)	test_minacc   0.52 (  0.59)	test_majacc   0.57 (  0.58)	Loss_d 0.618 (0.622)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.52 (  0.59)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.38 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.13it/s]
Test: [  0/  1]	Loss 0.802 (0.802)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.70 (  0.70)	Loss_d 0.802 (0.802)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.802 (0.802)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.70 (  0.70)	Loss_d 0.802 (0.802)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.09 (  0.09)
Overall Timing[ 45/  1]	epoch_time 0.0400 (0.0402)	validation_time 0.0006 (0.0006)	train_time 0.0394 (0.0395)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.5803000130057335, 0.5720000267028809)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.24it/s] 15%|#5        | 4/26 [00:00<00:01, 14.75it/s] 27%|##6       | 7/26 [00:00<00:00, 19.96it/s] 38%|###8      | 10/26 [00:00<00:00, 23.18it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.92it/s] 65%|######5   | 17/26 [00:00<00:00, 27.07it/s] 81%|########  | 21/26 [00:00<00:00, 28.25it/s] 92%|#########2| 24/26 [00:00<00:00, 28.68it/s]100%|##########| 26/26 [00:01<00:00, 23.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1196 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1197 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1198 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1199 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1200 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1201 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1202 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1203 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1204 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1205 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1206 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1207 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1208 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1209 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1210 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1211 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1212 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1213 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1214 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1215 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1216 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1217 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1218 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1219 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1220 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1221 364.00000000000006
constrain score by whole: 0
Epoch: [46][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.74 (  7.74)	train_acc   0.54 (  0.56)	train_minacc   0.45 (  0.65)	train_majacc   0.55 (  0.54)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 27%|##6       | 7/26 [00:00<00:00, 30.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.55it/s] 50%|#####     | 13/26 [00:00<00:00, 37.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.82it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.82it/s] 96%|#########6| 25/26 [00:00<00:00, 45.00it/s]100%|##########| 26/26 [00:00<00:00, 37.13it/s]
Test: [   0/  26]	Loss 0.633 (0.633)	test_acc   0.54 (  0.54)	test_minacc   0.72 (  0.72)	test_majacc   0.51 (  0.51)	Loss_d 0.633 (0.633)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.626 (0.629)	test_acc   0.50 (  0.52)	test_minacc   0.66 (  0.68)	test_majacc   0.47 (  0.49)	Loss_d 0.626 (0.629)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.66 (  0.68)	test_majacc_d   0.47 (  0.49)	test_corr_d   0.30 (  0.30)
Test: [  20/  26]	Loss 0.631 (0.630)	test_acc   0.55 (  0.52)	test_minacc   0.76 (  0.70)	test_majacc   0.50 (  0.49)	Loss_d 0.631 (0.630)	test_acc_d   0.55 (  0.52)	test_minacc_d   0.76 (  0.70)	test_majacc_d   0.50 (  0.49)	test_corr_d   0.25 (  0.29)
Test: [  26/  26]	Loss 0.624 (0.630)	test_acc   0.51 (  0.52)	test_minacc   0.66 (  0.70)	test_majacc   0.49 (  0.49)	Loss_d 0.624 (0.630)	test_acc_d   0.51 (  0.52)	test_minacc_d   0.66 (  0.70)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.34 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.26it/s]
Test: [  0/  1]	Loss 0.785 (0.785)	test_acc   0.63 (  0.63)	test_minacc   0.63 (  0.63)	test_majacc   0.57 (  0.57)	Loss_d 0.785 (0.785)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.785 (0.785)	test_acc   0.63 (  0.63)	test_minacc   0.63 (  0.63)	test_majacc   0.57 (  0.57)	Loss_d 0.785 (0.785)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.06 (  0.06)
Overall Timing[ 46/  1]	epoch_time 0.0392 (0.0402)	validation_time 0.0004 (0.0006)	train_time 0.0388 (0.0395)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.5202000096738338, 0.6270000338554382)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.36it/s] 15%|#5        | 4/26 [00:00<00:01, 14.98it/s] 27%|##6       | 7/26 [00:00<00:00, 20.08it/s] 42%|####2     | 11/26 [00:00<00:00, 24.06it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.24it/s] 85%|########4 | 22/26 [00:00<00:00, 28.64it/s]100%|##########| 26/26 [00:01<00:00, 29.61it/s]100%|##########| 26/26 [00:01<00:00, 24.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1222 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1223 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1224 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1225 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1226 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1227 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1228 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1229 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1230 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1231 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1232 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1233 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1234 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1235 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1236 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1237 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1238 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1239 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1240 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1241 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1242 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1243 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1244 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1245 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1246 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1247 364.00000000000006
constrain score by whole: 0
Epoch: [47][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.74 (  7.74)	train_acc   0.46 (  0.58)	train_minacc   0.69 (  0.63)	train_majacc   0.43 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.50it/s] 23%|##3       | 6/26 [00:00<00:00, 30.86it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.86it/s] 42%|####2     | 11/26 [00:00<00:00, 37.88it/s] 65%|######5   | 17/26 [00:00<00:00, 42.80it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.80it/s] 85%|########4 | 22/26 [00:00<00:00, 43.39it/s]100%|##########| 26/26 [00:00<00:00, 38.55it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.64 (  0.64)	Loss_d 0.609 (0.609)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.620 (0.620)	test_acc   0.58 (  0.59)	test_minacc   0.50 (  0.57)	test_majacc   0.59 (  0.59)	Loss_d 0.620 (0.620)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.50 (  0.57)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.32 (  0.32)
Test: [  20/  26]	Loss 0.624 (0.621)	test_acc   0.58 (  0.59)	test_minacc   0.66 (  0.62)	test_majacc   0.57 (  0.59)	Loss_d 0.624 (0.621)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.66 (  0.62)	test_majacc_d   0.57 (  0.59)	test_corr_d   0.27 (  0.31)
Test: [  26/  26]	Loss 0.618 (0.621)	test_acc   0.57 (  0.59)	test_minacc   0.55 (  0.61)	test_majacc   0.57 (  0.59)	Loss_d 0.618 (0.621)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.55 (  0.61)	test_majacc_d   0.57 (  0.59)	test_corr_d   0.36 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.78it/s]
Test: [  0/  1]	Loss 0.817 (0.817)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.66 (  0.66)	Loss_d 0.817 (0.817)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.817 (0.817)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.66 (  0.66)	Loss_d 0.817 (0.817)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.04 (  0.04)
Overall Timing[ 47/  1]	epoch_time 0.0406 (0.0402)	validation_time 0.0004 (0.0006)	train_time 0.0401 (0.0395)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.5908000162839889, 0.5690000057220459)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.97it/s] 15%|#5        | 4/26 [00:00<00:01, 19.91it/s] 27%|##6       | 7/26 [00:00<00:00, 23.93it/s] 42%|####2     | 11/26 [00:00<00:00, 26.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.35it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.24it/s] 85%|########4 | 22/26 [00:00<00:00, 29.31it/s] 96%|#########6| 25/26 [00:00<00:00, 28.62it/s]100%|##########| 26/26 [00:01<00:00, 25.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1248 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1249 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1250 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1251 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1252 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1253 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1254 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1255 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1256 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1257 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1258 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1259 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1260 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1261 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1262 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1263 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1264 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1265 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1266 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1267 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1268 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1269 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1270 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1271 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1272 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1273 364.00000000000006
constrain score by whole: 0
Epoch: [48][  26/  26]	Loss 0.001 (0.001)	train_nll   0.62 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.74 (  7.74)	train_acc   0.59 (  0.55)	train_minacc   0.59 (  0.64)	train_majacc   0.59 (  0.53)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.95it/s] 23%|##3       | 6/26 [00:00<00:00, 28.06it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.06it/s] 42%|####2     | 11/26 [00:00<00:00, 36.68it/s] 65%|######5   | 17/26 [00:00<00:00, 41.70it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.70it/s] 88%|########8 | 23/26 [00:00<00:00, 47.19it/s]100%|##########| 26/26 [00:00<00:00, 37.88it/s]
Test: [   0/  26]	Loss 0.642 (0.642)	test_acc   0.55 (  0.55)	test_minacc   0.57 (  0.57)	test_majacc   0.55 (  0.55)	Loss_d 0.642 (0.642)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.621 (0.629)	test_acc   0.59 (  0.58)	test_minacc   0.75 (  0.66)	test_majacc   0.57 (  0.56)	Loss_d 0.621 (0.629)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.75 (  0.66)	test_majacc_d   0.57 (  0.56)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.634 (0.633)	test_acc   0.56 (  0.57)	test_minacc   0.66 (  0.63)	test_majacc   0.54 (  0.56)	Loss_d 0.634 (0.633)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.66 (  0.63)	test_majacc_d   0.54 (  0.56)	test_corr_d   0.28 (  0.32)
Test: [  26/  26]	Loss 0.624 (0.633)	test_acc   0.59 (  0.57)	test_minacc   0.59 (  0.63)	test_majacc   0.59 (  0.56)	Loss_d 0.624 (0.633)	test_acc_d   0.59 (  0.57)	test_minacc_d   0.59 (  0.63)	test_majacc_d   0.59 (  0.56)	test_corr_d   0.37 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.56it/s]
Test: [  0/  1]	Loss 0.798 (0.798)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.54 (  0.54)	Loss_d 0.798 (0.798)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.798 (0.798)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.54 (  0.54)	Loss_d 0.798 (0.798)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.05 (  0.05)
Overall Timing[ 48/  1]	epoch_time 0.0393 (0.0401)	validation_time 0.0004 (0.0006)	train_time 0.0388 (0.0395)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.5678000067472457, 0.5920000076293945)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 15%|#5        | 4/26 [00:00<00:01, 16.05it/s] 27%|##6       | 7/26 [00:00<00:00, 20.67it/s] 42%|####2     | 11/26 [00:00<00:00, 24.54it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.20it/s] 69%|######9   | 18/26 [00:00<00:00, 27.77it/s] 81%|########  | 21/26 [00:00<00:00, 27.91it/s] 96%|#########6| 25/26 [00:00<00:00, 29.00it/s]100%|##########| 26/26 [00:01<00:00, 24.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1274 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1275 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1276 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1277 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1278 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1279 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1280 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1281 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1282 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1283 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1284 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1285 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1286 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1287 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1288 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1289 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1290 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1291 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1292 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1293 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1294 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1295 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1296 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1297 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1298 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1299 364.00000000000006
constrain score by whole: 0
Epoch: [49][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.73 (  7.73)	train_acc   0.50 (  0.55)	train_minacc   0.72 (  0.64)	train_majacc   0.47 (  0.54)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.05it/s] 23%|##3       | 6/26 [00:00<00:00, 29.10it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.10it/s] 42%|####2     | 11/26 [00:00<00:00, 37.59it/s] 65%|######5   | 17/26 [00:00<00:00, 44.22it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.22it/s] 85%|########4 | 22/26 [00:00<00:00, 46.06it/s]100%|##########| 26/26 [00:00<00:00, 39.44it/s]
Test: [   0/  26]	Loss 0.622 (0.622)	test_acc   0.66 (  0.66)	test_minacc   0.55 (  0.55)	test_majacc   0.67 (  0.67)	Loss_d 0.622 (0.622)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.625 (0.626)	test_acc   0.58 (  0.61)	test_minacc   0.46 (  0.54)	test_majacc   0.60 (  0.62)	Loss_d 0.625 (0.626)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.46 (  0.54)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.29 (  0.30)
Test: [  20/  26]	Loss 0.635 (0.627)	test_acc   0.58 (  0.61)	test_minacc   0.59 (  0.57)	test_majacc   0.57 (  0.62)	Loss_d 0.635 (0.627)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.59 (  0.57)	test_majacc_d   0.57 (  0.62)	test_corr_d   0.25 (  0.29)
Test: [  26/  26]	Loss 0.627 (0.626)	test_acc   0.58 (  0.61)	test_minacc   0.59 (  0.58)	test_majacc   0.57 (  0.62)	Loss_d 0.627 (0.626)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.59 (  0.58)	test_majacc_d   0.57 (  0.62)	test_corr_d   0.33 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.08it/s]
Test: [  0/  1]	Loss 0.819 (0.819)	test_acc   0.55 (  0.55)	test_minacc   0.53 (  0.53)	test_majacc   0.77 (  0.77)	Loss_d 0.819 (0.819)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.819 (0.819)	test_acc   0.55 (  0.55)	test_minacc   0.53 (  0.53)	test_majacc   0.77 (  0.77)	Loss_d 0.819 (0.819)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.05 (  0.05)
Overall Timing[ 49/  1]	epoch_time 0.0451 (0.0402)	validation_time 0.0004 (0.0006)	train_time 0.0446 (0.0396)
record: (train_acc, test_acc) (0.6120000084638596, 0.6510000228881836)
last accs (train_acc, test_acc) (0.6111000083088874, 0.550000011920929)
wandb: - 0.166 MB of 0.166 MB uploadedwandb: \ 0.166 MB of 0.166 MB uploadedwandb: | 0.166 MB of 0.166 MB uploadedwandb: / 0.166 MB of 0.166 MB uploadedwandb: - 0.166 MB of 0.166 MB uploadedwandb: \ 0.187 MB of 0.564 MB uploaded (0.003 MB deduped)wandb: | 0.564 MB of 0.564 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/diagnostics/epoch_time_val █▁▁▁▁▁▁▁▁▁▁▁▂▂▁▂▂▁▁▁▁▂▁▂▁▁▁▂▁▂▂▁▁▁▁▁▂▁▂▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/diagnostics/train_time_val █▁▁▁▁▂▁▂▁▁▁▁▂▂▂▂▂▁▁▁▂▂▂▂▂▂▁▂▂▂▂▁▂▁▁▁▂▂▂▃
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/Loss_avg █▂▂▃▁▂▂▁▂▁▂▂▃▄▃▃▃▄▃▂▃▂▄▃▂▂▃▂▃▃▂▂▃▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/Loss_d_avg █▂▂▃▁▂▂▁▂▁▂▂▃▄▃▃▃▄▃▂▃▂▄▃▂▂▃▂▃▃▂▂▃▂▂▂▂▂▂▂
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/Loss_d_val █▂▂▃▁▂▂▁▂▁▂▂▃▄▃▃▃▄▃▂▃▂▄▃▂▂▃▂▃▃▂▂▃▂▂▂▂▂▂▂
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/Loss_val █▂▂▃▁▂▂▁▂▁▂▂▃▄▃▃▃▄▃▂▃▂▄▃▂▂▃▂▃▃▂▂▃▂▂▂▂▂▂▂
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_acc_avg ▁▆▆▆█▇▇▇▆█▆▆▆▆▅▅▅▆▇▇▆▇▆▆█▇██▇▆▆▇▇█▇█▇█▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_acc_d_avg ▁▆▆▆█▇▇▇▆█▆▆▆▆▅▅▅▆▇▇▆▇▆▆█▇██▇▆▆▇▇█▇█▇█▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_acc_d_val ▁▆▆▆█▇▇▇▆█▆▆▆▆▅▅▅▆▇▇▆▇▆▆█▇██▇▆▆▇▇█▇█▇█▇▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_acc_val ▁▆▆▆█▇▇▇▆█▆▆▆▆▅▅▅▆▇▇▆▇▆▆█▇██▇▆▆▇▇█▇█▇█▇▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_corr_d_avg █▄▄▅▁▃▃▂▄▂▃▃▄▄▄▄▅▃▃▃▃▄▄▄▃▃▃▃▃▄▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_corr_d_val █▄▄▅▁▃▃▂▄▂▃▃▄▄▄▄▅▃▃▃▃▄▄▄▃▃▃▃▃▄▃▃▃▃▃▃▃▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_majacc_avg █▄▄▅▁▃▄▃▆▁▃▄▅▅▅▅▆▅▅▃▁▅▅▃▄▄▄▃▅▅▅▃▅▂▃▁▄▂▃▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_majacc_d_avg █▄▄▅▁▃▄▃▆▁▃▄▅▅▅▅▆▅▅▃▁▅▅▃▄▄▄▃▅▅▅▃▅▂▃▁▄▂▃▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_majacc_d_val █▄▄▅▁▃▄▃▆▁▃▄▅▅▅▅▆▅▅▃▁▅▅▃▄▄▄▃▅▅▅▃▅▂▃▁▄▂▃▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_majacc_val █▄▄▅▁▃▄▃▆▁▃▄▅▅▅▅▆▅▅▃▁▅▅▃▄▄▄▃▅▅▅▃▅▂▃▁▄▂▃▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_minacc_avg ▁▆▆▅█▇▇▇▆█▆▆▆▅▅▅▅▆▆▇▆▇▆▆█▇▇▇▇▆▆▇▆█▇█▇█▇▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_minacc_d_avg ▁▆▆▅█▇▇▇▆█▆▆▆▅▅▅▅▆▆▇▆▇▆▆█▇▇▇▇▆▆▇▆█▇█▇█▇▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_minacc_d_val ▁▆▆▅█▇▇▇▆█▆▆▆▅▅▅▅▆▆▇▆▇▆▆█▇▇▇▇▆▆▇▆█▇█▇█▇▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_minacc_val ▁▆▆▅█▇▇▇▆█▆▆▆▅▅▅▅▆▆▇▆▇▆▆█▇▇▇▇▆▆▇▆█▇█▇█▇▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/Loss_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/Loss_val █▂▁▁▁▁▁▁▁▂▁▁▁▁▁▄▂▁▂▃▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_acc_avg █▅▄▄▄▄▄▄▄▄▄▄▄▃▃▂▄▃▄▅▃▂▃▃▃▂▂▁▂▂▂▂▂▂▂▁▁▁▂▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_acc_val █▃▄▄▄▄▄▃▄▁▄▄▅▅▄▃▂▆▆▂▄▄▅▃▄▃▃▂▂▄▃▅▄▃▂▃▂▃▁▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_majacc_avg █▅▄▄▄▃▃▃▃▄▃▄▃▃▃▂▄▃▄▅▃▂▃▃▃▂▂▁▂▂▂▂▂▂▂▁▁▁▂▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_majacc_val █▃▄▄▄▃▄▃▄▁▄▄▄▄▄▃▂▅▅▂▃▃▅▃▃▃▃▂▂▄▂▄▄▂▂▂▂▃▁▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_minacc_avg ▁▄▇▇▇▇▇▇▆▆▇▆▆▆▆▇▆▆▆▆▆█▆▅▆█▇█▇▆▆▇█▇████▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_minacc_val ▁█▇▇▆▇▆▇▆▇▆▇▆▆▅▆▆▆▆▆▇▆▆▆▇▆▇█▆▆▇█▆████▅██
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_nll_avg ▁▂▄▃▃▄▂▅▅▅▃▃▆▇▆█▅▇▅▂▅▆▆▅▆▇▇▇▇▇▇▇▇▆▆▇▇▇▇█
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_nll_val ▁▆▅▅▆▅▅▇▅█▅▅▅▅▅▇▇▅▅█▆▅▅▇▆▆▆▆▆▆▆▅▅▆▆▆▆▆▆▆
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_penalty_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_penalty_val █▂▁▁▁▁▁▁▁▂▁▁▁▁▁▄▂▁▂▃▁▁▁▃▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/weight_norm_avg █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/weight_norm_val █▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/diagnostics/epoch_time_val 0.0451
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/diagnostics/train_time_val 0.04463
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/diagnostics/validation_time_val 0.00043
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/Loss_avg 0.81902
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/Loss_d_avg 0.81902
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/Loss_d_val 0.81902
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/Loss_val 0.81902
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_acc_avg 0.55
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_acc_d_avg 0.55
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_acc_d_val 0.55
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_acc_val 0.55
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_corr_d_avg 0.04544
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_corr_d_val 0.04544
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_majacc_avg 0.77
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_majacc_d_avg 0.77
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_majacc_d_val 0.77
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_majacc_val 0.77
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_minacc_avg 0.52556
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_minacc_d_avg 0.52556
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_minacc_d_val 0.52556
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/test/test_minacc_val 0.52556
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/Loss_avg 0.00096
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/Loss_val 0.00089
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_acc_avg 0.5545
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_acc_val 0.496
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_majacc_avg 0.54028
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_majacc_val 0.46606
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_minacc_avg 0.63511
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_minacc_val 0.72414
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_nll_avg 0.63663
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_nll_val 0.63432
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_penalty_avg 0.00012
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/train_penalty_val 6e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/weight_norm_avg 7.73474
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/21/logs/train/weight_norm_val 7.73394
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/2msphlq0
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240904_234816-2msphlq0/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240904_235102-kdzls0wz
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/kdzls0wz
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, classes_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=13, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1233
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5981, 3, 32, 32) (6019, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:40,  1.60s/it] 19%|#9        | 5/26 [00:01<00:05,  3.76it/s] 35%|###4      | 9/26 [00:01<00:02,  7.30it/s] 50%|#####     | 13/26 [00:01<00:01, 11.04it/s] 65%|######5   | 17/26 [00:02<00:00, 14.72it/s] 81%|########  | 21/26 [00:02<00:00, 17.96it/s] 92%|#########2| 24/26 [00:02<00:00, 19.60it/s]100%|##########| 26/26 [00:02<00:00,  9.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 13
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.007 (4.952)	train_nll   0.54 (  0.63)	train_penalty   0.01 (  0.32)	weight_norm   7.99 (  8.60)	train_acc   0.68 (  0.74)	train_minacc   0.30 (  0.25)	train_majacc   0.75 (  0.82)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.80it/s] 27%|##6       | 7/26 [00:00<00:00, 35.61it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.61it/s] 46%|####6     | 12/26 [00:00<00:00, 38.68it/s] 69%|######9   | 18/26 [00:00<00:00, 45.24it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.24it/s] 92%|#########2| 24/26 [00:00<00:00, 46.83it/s]100%|##########| 26/26 [00:00<00:00, 40.09it/s]
Test: [   0/  26]	Loss 0.516 (0.516)	test_acc   0.74 (  0.74)	test_minacc   0.37 (  0.37)	test_majacc   0.80 (  0.80)	Loss_d 0.516 (0.516)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.69 (  0.69)
Test: [  10/  26]	Loss 0.477 (0.522)	test_acc   0.78 (  0.74)	test_minacc   0.55 (  0.49)	test_majacc   0.81 (  0.78)	Loss_d 0.477 (0.522)	test_acc_d   0.78 (  0.74)	test_minacc_d   0.55 (  0.49)	test_majacc_d   0.81 (  0.78)	test_corr_d   0.63 (  0.59)
Test: [  20/  26]	Loss 0.526 (0.520)	test_acc   0.72 (  0.74)	test_minacc   0.46 (  0.50)	test_majacc   0.76 (  0.78)	Loss_d 0.526 (0.520)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.59 (  0.60)
Test: [  26/  26]	Loss 0.533 (0.520)	test_acc   0.71 (  0.74)	test_minacc   0.33 (  0.49)	test_majacc   0.79 (  0.78)	Loss_d 0.533 (0.520)	test_acc_d   0.71 (  0.74)	test_minacc_d   0.33 (  0.49)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.63 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.46it/s]100%|##########| 1/1 [00:00<00:00,  2.46it/s]
Test: [  0/  1]	Loss 0.979 (0.979)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.81 (  0.81)	Loss_d 0.979 (0.979)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.43 (  0.43)
Test: [  1/  1]	Loss 0.979 (0.979)	test_acc   0.44 (  0.44)	test_minacc   0.40 (  0.40)	test_majacc   0.81 (  0.81)	Loss_d 0.979 (0.979)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.43 (  0.43)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0915 (0.0915)	validation_time 0.0068 (0.0068)	train_time 0.0656 (0.0656)
record: (train_acc, test_acc) (0.7391000282168388, 0.4390000104904175)
last accs (train_acc, test_acc) (0.7391000282168388, 0.4390000104904175)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.44it/s] 19%|#9        | 5/26 [00:00<00:00, 21.86it/s] 31%|###       | 8/26 [00:00<00:00, 24.32it/s] 46%|####6     | 12/26 [00:00<00:00, 27.69it/s] 62%|######1   | 16/26 [00:00<00:00, 28.94it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.06it/s] 92%|#########2| 24/26 [00:00<00:00, 30.51it/s]100%|##########| 26/26 [00:00<00:00, 26.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.001 (0.004)	train_nll   0.64 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.84 (  7.88)	train_acc   0.63 (  0.66)	train_minacc   0.55 (  0.53)	train_majacc   0.65 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.07it/s] 35%|###4      | 9/26 [00:00<00:00, 37.58it/s]                                               35%|###4      | 9/26 [00:00<00:00, 37.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 44.82it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 44.82it/s] 81%|########  | 21/26 [00:00<00:00, 45.91it/s]100%|##########| 26/26 [00:00<00:00, 42.02it/s]
Test: [   0/  26]	Loss 0.724 (0.724)	test_acc   0.52 (  0.52)	test_minacc   0.58 (  0.58)	test_majacc   0.51 (  0.51)	Loss_d 0.724 (0.724)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.01 ( -0.01)
Test: [  10/  26]	Loss 0.721 (0.712)	test_acc   0.53 (  0.55)	test_minacc   0.64 (  0.67)	test_majacc   0.51 (  0.53)	Loss_d 0.721 (0.712)	test_acc_d   0.53 (  0.55)	test_minacc_d   0.64 (  0.67)	test_majacc_d   0.51 (  0.53)	test_corr_d  -0.01 ( -0.00)
Test: [  20/  26]	Loss 0.697 (0.704)	test_acc   0.56 (  0.56)	test_minacc   0.62 (  0.69)	test_majacc   0.55 (  0.54)	Loss_d 0.697 (0.704)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.62 (  0.69)	test_majacc_d   0.55 (  0.54)	test_corr_d   0.05 (  0.01)
Test: [  26/  26]	Loss 0.673 (0.701)	test_acc   0.58 (  0.56)	test_minacc   0.65 (  0.68)	test_majacc   0.57 (  0.54)	Loss_d 0.673 (0.701)	test_acc_d   0.58 (  0.56)	test_minacc_d   0.65 (  0.68)	test_majacc_d   0.57 (  0.54)	test_corr_d   0.06 (  0.01)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 20.03it/s]
Test: [  0/  1]	Loss 0.659 (0.659)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.56 (  0.56)	Loss_d 0.659 (0.659)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.23 ( -0.23)
Test: [  1/  1]	Loss 0.659 (0.659)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.56 (  0.56)	Loss_d 0.659 (0.659)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.23 ( -0.23)
Overall Timing[  1/  1]	epoch_time 0.0377 (0.0646)	validation_time 0.0012 (0.0040)	train_time 0.0363 (0.0509)
record: (train_acc, test_acc) (0.7391000282168388, 0.4390000104904175)
last accs (train_acc, test_acc) (0.563100013911724, 0.609000027179718)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.29it/s] 15%|#5        | 4/26 [00:00<00:01, 16.74it/s] 27%|##6       | 7/26 [00:00<00:00, 21.67it/s] 38%|###8      | 10/26 [00:00<00:00, 24.37it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.79it/s] 69%|######9   | 18/26 [00:00<00:00, 28.31it/s] 85%|########4 | 22/26 [00:00<00:00, 29.20it/s]100%|##########| 26/26 [00:00<00:00, 30.38it/s]100%|##########| 26/26 [00:01<00:00, 25.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.002 (0.008)	train_nll   0.61 (  0.58)	train_penalty   0.00 (  0.01)	weight_norm   7.83 (  7.83)	train_acc   0.67 (  0.69)	train_minacc   0.55 (  0.44)	train_majacc   0.70 (  0.74)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.09it/s] 35%|###4      | 9/26 [00:00<00:00, 39.65it/s]                                               35%|###4      | 9/26 [00:00<00:00, 39.65it/s] 58%|#####7    | 15/26 [00:00<00:00, 43.64it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 43.64it/s] 81%|########  | 21/26 [00:00<00:00, 45.39it/s]100%|##########| 26/26 [00:00<00:00, 40.87it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.71 (  0.71)	test_minacc   0.48 (  0.48)	test_majacc   0.75 (  0.75)	Loss_d 0.570 (0.570)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.639 (0.620)	test_acc   0.65 (  0.67)	test_minacc   0.43 (  0.56)	test_majacc   0.69 (  0.69)	Loss_d 0.639 (0.620)	test_acc_d   0.65 (  0.67)	test_minacc_d   0.43 (  0.56)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.32 (  0.33)
Test: [  20/  26]	Loss 0.624 (0.619)	test_acc   0.67 (  0.67)	test_minacc   0.56 (  0.56)	test_majacc   0.69 (  0.69)	Loss_d 0.624 (0.619)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.34 (  0.34)
Test: [  26/  26]	Loss 0.583 (0.615)	test_acc   0.70 (  0.68)	test_minacc   0.53 (  0.56)	test_majacc   0.74 (  0.70)	Loss_d 0.583 (0.615)	test_acc_d   0.70 (  0.68)	test_minacc_d   0.53 (  0.56)	test_majacc_d   0.74 (  0.70)	test_corr_d   0.40 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.13it/s]
Test: [  0/  1]	Loss 0.827 (0.827)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.71 (  0.71)	Loss_d 0.827 (0.827)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.827 (0.827)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.71 (  0.71)	Loss_d 0.827 (0.827)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.15 (  0.15)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0395 (0.0562)	validation_time 0.0006 (0.0029)	train_time 0.0378 (0.0466)
record: (train_acc, test_acc) (0.6771000329852104, 0.47300001978874207)
last accs (train_acc, test_acc) (0.6771000329852104, 0.47300001978874207)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 19%|#9        | 5/26 [00:00<00:01, 20.08it/s] 35%|###4      | 9/26 [00:00<00:00, 25.03it/s] 50%|#####     | 13/26 [00:00<00:00, 28.05it/s] 65%|######5   | 17/26 [00:00<00:00, 29.51it/s] 81%|########  | 21/26 [00:00<00:00, 30.66it/s] 96%|#########6| 25/26 [00:00<00:00, 30.48it/s]100%|##########| 26/26 [00:00<00:00, 26.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.003 (0.004)	train_nll   0.56 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.70 (  0.68)	train_minacc   0.68 (  0.56)	train_majacc   0.71 (  0.70)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 27%|##6       | 7/26 [00:00<00:00, 34.42it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.42it/s] 50%|#####     | 13/26 [00:00<00:00, 42.17it/s] 69%|######9   | 18/26 [00:00<00:00, 44.76it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.76it/s] 92%|#########2| 24/26 [00:00<00:00, 47.93it/s]100%|##########| 26/26 [00:00<00:00, 40.17it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.54 (  0.54)	test_minacc   0.75 (  0.75)	test_majacc   0.50 (  0.50)	Loss_d 0.664 (0.664)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.632 (0.659)	test_acc   0.61 (  0.57)	test_minacc   0.87 (  0.76)	test_majacc   0.57 (  0.54)	Loss_d 0.632 (0.659)	test_acc_d   0.61 (  0.57)	test_minacc_d   0.87 (  0.76)	test_majacc_d   0.57 (  0.54)	test_corr_d   0.20 (  0.14)
Test: [  20/  26]	Loss 0.654 (0.656)	test_acc   0.56 (  0.57)	test_minacc   0.74 (  0.77)	test_majacc   0.53 (  0.54)	Loss_d 0.654 (0.656)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.74 (  0.77)	test_majacc_d   0.53 (  0.54)	test_corr_d   0.16 (  0.14)
Test: [  26/  26]	Loss 0.621 (0.654)	test_acc   0.59 (  0.58)	test_minacc   0.70 (  0.77)	test_majacc   0.57 (  0.54)	Loss_d 0.621 (0.654)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.70 (  0.77)	test_majacc_d   0.57 (  0.54)	test_corr_d   0.22 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.42it/s]
Test: [  0/  1]	Loss 0.708 (0.708)	test_acc   0.65 (  0.65)	test_minacc   0.67 (  0.67)	test_majacc   0.53 (  0.53)	Loss_d 0.708 (0.708)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.53 (  0.53)	test_corr_d  -0.15 ( -0.15)
Test: [  1/  1]	Loss 0.708 (0.708)	test_acc   0.65 (  0.65)	test_minacc   0.67 (  0.67)	test_majacc   0.53 (  0.53)	Loss_d 0.708 (0.708)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.53 (  0.53)	test_corr_d  -0.15 ( -0.15)
Overall Timing[  3/  1]	epoch_time 0.0375 (0.0516)	validation_time 0.0006 (0.0023)	train_time 0.0369 (0.0441)
record: (train_acc, test_acc) (0.6771000329852104, 0.47300001978874207)
last accs (train_acc, test_acc) (0.5753000060915947, 0.6530000567436218)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.97it/s] 15%|#5        | 4/26 [00:00<00:01, 20.34it/s] 27%|##6       | 7/26 [00:00<00:00, 24.12it/s] 42%|####2     | 11/26 [00:00<00:00, 27.46it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.04it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.05it/s] 85%|########4 | 22/26 [00:00<00:00, 29.82it/s] 96%|#########6| 25/26 [00:00<00:00, 29.33it/s]100%|##########| 26/26 [00:00<00:00, 26.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.001 (0.002)	train_nll   0.59 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.65 (  0.66)	train_minacc   0.60 (  0.60)	train_majacc   0.66 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.87it/s] 27%|##6       | 7/26 [00:00<00:00, 26.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 26.96it/s] 50%|#####     | 13/26 [00:00<00:00, 35.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.84it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.84it/s] 96%|#########6| 25/26 [00:00<00:00, 44.90it/s]100%|##########| 26/26 [00:00<00:00, 35.94it/s]
Test: [   0/  26]	Loss 0.569 (0.569)	test_acc   0.66 (  0.66)	test_minacc   0.65 (  0.65)	test_majacc   0.67 (  0.67)	Loss_d 0.569 (0.569)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.567 (0.598)	test_acc   0.66 (  0.63)	test_minacc   0.64 (  0.65)	test_majacc   0.67 (  0.63)	Loss_d 0.567 (0.598)	test_acc_d   0.66 (  0.63)	test_minacc_d   0.64 (  0.65)	test_majacc_d   0.67 (  0.63)	test_corr_d   0.40 (  0.35)
Test: [  20/  26]	Loss 0.596 (0.594)	test_acc   0.62 (  0.64)	test_minacc   0.64 (  0.65)	test_majacc   0.61 (  0.63)	Loss_d 0.596 (0.594)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.64 (  0.65)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.35 (  0.35)
Test: [  26/  26]	Loss 0.584 (0.595)	test_acc   0.66 (  0.64)	test_minacc   0.57 (  0.65)	test_majacc   0.67 (  0.64)	Loss_d 0.584 (0.595)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.57 (  0.65)	test_majacc_d   0.67 (  0.64)	test_corr_d   0.39 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.55it/s]
Test: [  0/  1]	Loss 0.855 (0.855)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.855 (0.855)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.855 (0.855)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.855 (0.855)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.16 (  0.16)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0369 (0.0486)	validation_time 0.0005 (0.0020)	train_time 0.0364 (0.0426)
record: (train_acc, test_acc) (0.6384000191688538, 0.5610000491142273)
last accs (train_acc, test_acc) (0.6384000191688538, 0.5610000491142273)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 15%|#5        | 4/26 [00:00<00:01, 18.24it/s] 31%|###       | 8/26 [00:00<00:00, 24.40it/s] 46%|####6     | 12/26 [00:00<00:00, 27.19it/s] 62%|######1   | 16/26 [00:00<00:00, 28.86it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.19it/s] 92%|#########2| 24/26 [00:00<00:00, 30.92it/s]100%|##########| 26/26 [00:00<00:00, 26.61it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.003 (0.003)	train_nll   0.60 (  0.58)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.66 (  0.65)	train_minacc   0.45 (  0.60)	train_majacc   0.70 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.96it/s] 27%|##6       | 7/26 [00:00<00:00, 35.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.34it/s] 50%|#####     | 13/26 [00:00<00:00, 41.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.54it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.54it/s] 96%|#########6| 25/26 [00:00<00:00, 47.92it/s]100%|##########| 26/26 [00:00<00:00, 41.19it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.61 (  0.61)	test_minacc   0.52 (  0.52)	test_majacc   0.62 (  0.62)	Loss_d 0.629 (0.629)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.599 (0.622)	test_acc   0.67 (  0.64)	test_minacc   0.62 (  0.47)	test_majacc   0.67 (  0.67)	Loss_d 0.599 (0.622)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.62 (  0.47)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.51 (  0.48)
Test: [  20/  26]	Loss 0.601 (0.618)	test_acc   0.67 (  0.64)	test_minacc   0.52 (  0.47)	test_majacc   0.69 (  0.67)	Loss_d 0.601 (0.618)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.52 (  0.47)	test_majacc_d   0.69 (  0.67)	test_corr_d   0.48 (  0.48)
Test: [  26/  26]	Loss 0.632 (0.620)	test_acc   0.62 (  0.64)	test_minacc   0.43 (  0.48)	test_majacc   0.65 (  0.67)	Loss_d 0.632 (0.620)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.43 (  0.48)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.45 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.65it/s]
Test: [  0/  1]	Loss 0.822 (0.822)	test_acc   0.43 (  0.43)	test_minacc   0.40 (  0.40)	test_majacc   0.65 (  0.65)	Loss_d 0.822 (0.822)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 0.822 (0.822)	test_acc   0.43 (  0.43)	test_minacc   0.40 (  0.40)	test_majacc   0.65 (  0.65)	Loss_d 0.822 (0.822)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.42 (  0.42)
Overall Timing[  5/  1]	epoch_time 0.0380 (0.0469)	validation_time 0.0004 (0.0017)	train_time 0.0375 (0.0417)
record: (train_acc, test_acc) (0.6384000191688538, 0.5610000491142273)
last accs (train_acc, test_acc) (0.63840001308918, 0.4270000159740448)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.59it/s] 19%|#9        | 5/26 [00:00<00:01, 18.30it/s] 35%|###4      | 9/26 [00:00<00:00, 24.08it/s] 50%|#####     | 13/26 [00:00<00:00, 27.27it/s] 65%|######5   | 17/26 [00:00<00:00, 29.14it/s] 81%|########  | 21/26 [00:00<00:00, 30.17it/s] 96%|#########6| 25/26 [00:00<00:00, 29.80it/s]100%|##########| 26/26 [00:01<00:00, 25.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.003 (0.003)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.65 (  0.63)	train_minacc   0.40 (  0.50)	train_majacc   0.70 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.19it/s] 12%|#1        | 3/26 [00:00<00:01, 15.24it/s] 31%|###       | 8/26 [00:00<00:00, 29.62it/s]                                               31%|###       | 8/26 [00:00<00:00, 29.62it/s] 50%|#####     | 13/26 [00:00<00:00, 36.62it/s] 69%|######9   | 18/26 [00:00<00:00, 40.22it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.22it/s] 88%|########8 | 23/26 [00:00<00:00, 42.29it/s]100%|##########| 26/26 [00:00<00:00, 35.56it/s]
Test: [   0/  26]	Loss 0.613 (0.613)	test_acc   0.63 (  0.63)	test_minacc   0.56 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.613 (0.613)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.558 (0.576)	test_acc   0.71 (  0.69)	test_minacc   0.57 (  0.44)	test_majacc   0.73 (  0.73)	Loss_d 0.558 (0.576)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.57 (  0.44)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.52 (  0.51)
Test: [  20/  26]	Loss 0.572 (0.574)	test_acc   0.68 (  0.68)	test_minacc   0.38 (  0.43)	test_majacc   0.73 (  0.73)	Loss_d 0.572 (0.574)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.38 (  0.43)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.51 (  0.51)
Test: [  26/  26]	Loss 0.592 (0.576)	test_acc   0.67 (  0.68)	test_minacc   0.45 (  0.44)	test_majacc   0.71 (  0.72)	Loss_d 0.592 (0.576)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.45 (  0.44)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.50 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.53it/s]
Test: [  0/  1]	Loss 0.898 (0.898)	test_acc   0.42 (  0.42)	test_minacc   0.38 (  0.38)	test_majacc   0.73 (  0.73)	Loss_d 0.898 (0.898)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 0.898 (0.898)	test_acc   0.42 (  0.42)	test_minacc   0.38 (  0.38)	test_majacc   0.73 (  0.73)	Loss_d 0.898 (0.898)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.31 (  0.31)
Overall Timing[  6/  1]	epoch_time 0.0395 (0.0458)	validation_time 0.0012 (0.0016)	train_time 0.0383 (0.0413)
record: (train_acc, test_acc) (0.6384000191688538, 0.5610000491142273)
last accs (train_acc, test_acc) (0.6811000288724899, 0.41700002551078796)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.05it/s] 15%|#5        | 4/26 [00:00<00:01, 14.15it/s] 27%|##6       | 7/26 [00:00<00:00, 19.20it/s] 38%|###8      | 10/26 [00:00<00:00, 22.59it/s] 50%|#####     | 13/26 [00:00<00:00, 24.76it/s] 65%|######5   | 17/26 [00:00<00:00, 26.66it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.59it/s] 92%|#########2| 24/26 [00:00<00:00, 28.71it/s]100%|##########| 26/26 [00:01<00:00, 23.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.003 (0.003)	train_nll   0.55 (  0.57)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.68 (  0.66)	train_minacc   0.60 (  0.62)	train_majacc   0.69 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.58it/s] 15%|#5        | 4/26 [00:00<00:01, 21.02it/s] 35%|###4      | 9/26 [00:00<00:00, 33.66it/s]                                               35%|###4      | 9/26 [00:00<00:00, 33.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 38.27it/s] 77%|#######6  | 20/26 [00:00<00:00, 45.43it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 45.43it/s]100%|##########| 26/26 [00:00<00:00, 48.88it/s]100%|##########| 26/26 [00:00<00:00, 38.27it/s]
Test: [   0/  26]	Loss 0.586 (0.586)	test_acc   0.61 (  0.61)	test_minacc   0.65 (  0.65)	test_majacc   0.60 (  0.60)	Loss_d 0.586 (0.586)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.584 (0.586)	test_acc   0.61 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.61 (  0.64)	Loss_d 0.584 (0.586)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.42 (  0.42)
Test: [  20/  26]	Loss 0.580 (0.583)	test_acc   0.62 (  0.63)	test_minacc   0.58 (  0.62)	test_majacc   0.63 (  0.64)	Loss_d 0.580 (0.583)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.58 (  0.62)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.43 (  0.43)
Test: [  26/  26]	Loss 0.565 (0.583)	test_acc   0.65 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.65 (  0.64)	Loss_d 0.565 (0.583)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.43 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.59it/s]
Test: [  0/  1]	Loss 0.856 (0.856)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.65 (  0.65)	Loss_d 0.856 (0.856)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.856 (0.856)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.65 (  0.65)	Loss_d 0.856 (0.856)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.24 (  0.24)
Overall Timing[  7/  1]	epoch_time 0.0394 (0.0450)	validation_time 0.0007 (0.0015)	train_time 0.0387 (0.0409)
record: (train_acc, test_acc) (0.6384000191688538, 0.5610000491142273)
last accs (train_acc, test_acc) (0.633700010895729, 0.5350000262260437)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.37it/s] 15%|#5        | 4/26 [00:00<00:01, 17.50it/s] 31%|###       | 8/26 [00:00<00:00, 24.20it/s] 46%|####6     | 12/26 [00:00<00:00, 27.32it/s] 62%|######1   | 16/26 [00:00<00:00, 29.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.58it/s] 92%|#########2| 24/26 [00:00<00:00, 31.01it/s]100%|##########| 26/26 [00:00<00:00, 26.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.001 (0.002)	train_nll   0.62 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.59 (  0.61)	train_minacc   0.68 (  0.63)	train_majacc   0.58 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.31it/s] 31%|###       | 8/26 [00:00<00:00, 40.01it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.01it/s] 50%|#####     | 13/26 [00:00<00:00, 43.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.83it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.83it/s] 96%|#########6| 25/26 [00:00<00:00, 49.46it/s]100%|##########| 26/26 [00:00<00:00, 42.77it/s]
Test: [   0/  26]	Loss 0.563 (0.563)	test_acc   0.69 (  0.69)	test_minacc   0.48 (  0.48)	test_majacc   0.73 (  0.73)	Loss_d 0.563 (0.563)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.587 (0.583)	test_acc   0.63 (  0.65)	test_minacc   0.36 (  0.56)	test_majacc   0.66 (  0.66)	Loss_d 0.587 (0.583)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.36 (  0.56)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.41 (  0.42)
Test: [  20/  26]	Loss 0.564 (0.578)	test_acc   0.66 (  0.66)	test_minacc   0.58 (  0.57)	test_majacc   0.67 (  0.67)	Loss_d 0.564 (0.578)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.46 (  0.43)
Test: [  26/  26]	Loss 0.588 (0.578)	test_acc   0.64 (  0.66)	test_minacc   0.62 (  0.56)	test_majacc   0.64 (  0.68)	Loss_d 0.588 (0.578)	test_acc_d   0.64 (  0.66)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.64 (  0.68)	test_corr_d   0.39 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.13it/s]
Test: [  0/  1]	Loss 0.887 (0.887)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.70 (  0.70)	Loss_d 0.887 (0.887)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 0.887 (0.887)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.70 (  0.70)	Loss_d 0.887 (0.887)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.26 (  0.26)
Overall Timing[  8/  1]	epoch_time 0.0373 (0.0442)	validation_time 0.0006 (0.0014)	train_time 0.0367 (0.0405)
record: (train_acc, test_acc) (0.6384000191688538, 0.5610000491142273)
last accs (train_acc, test_acc) (0.6607000243067741, 0.5)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.92it/s] 19%|#9        | 5/26 [00:00<00:01, 20.74it/s] 35%|###4      | 9/26 [00:00<00:00, 26.07it/s] 50%|#####     | 13/26 [00:00<00:00, 28.99it/s] 65%|######5   | 17/26 [00:00<00:00, 30.59it/s] 81%|########  | 21/26 [00:00<00:00, 31.71it/s] 96%|#########6| 25/26 [00:00<00:00, 31.89it/s]100%|##########| 26/26 [00:00<00:00, 27.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.001 (0.001)	train_nll   0.62 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.61 (  0.63)	train_minacc   0.70 (  0.63)	train_majacc   0.59 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.87it/s] 27%|##6       | 7/26 [00:00<00:00, 30.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.89it/s] 50%|#####     | 13/26 [00:00<00:00, 37.29it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.12it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.12it/s] 96%|#########6| 25/26 [00:00<00:00, 45.29it/s]100%|##########| 26/26 [00:00<00:00, 37.69it/s]
Test: [   0/  26]	Loss 0.642 (0.642)	test_acc   0.55 (  0.55)	test_minacc   0.67 (  0.67)	test_majacc   0.53 (  0.53)	Loss_d 0.642 (0.642)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.620 (0.616)	test_acc   0.60 (  0.61)	test_minacc   0.72 (  0.61)	test_majacc   0.58 (  0.61)	Loss_d 0.620 (0.616)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.72 (  0.61)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.34 (  0.35)
Test: [  20/  26]	Loss 0.601 (0.616)	test_acc   0.60 (  0.61)	test_minacc   0.56 (  0.59)	test_majacc   0.61 (  0.61)	Loss_d 0.601 (0.616)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.56 (  0.59)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.40 (  0.36)
Test: [  26/  26]	Loss 0.608 (0.615)	test_acc   0.61 (  0.61)	test_minacc   0.68 (  0.60)	test_majacc   0.60 (  0.61)	Loss_d 0.608 (0.615)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.68 (  0.60)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.34 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.80it/s]
Test: [  0/  1]	Loss 0.817 (0.817)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.55 (  0.55)	Loss_d 0.817 (0.817)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.817 (0.817)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.55 (  0.55)	Loss_d 0.817 (0.817)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.17 (  0.17)
Overall Timing[  9/  1]	epoch_time 0.0371 (0.0434)	validation_time 0.0007 (0.0013)	train_time 0.0363 (0.0401)
record: (train_acc, test_acc) (0.6384000191688538, 0.5610000491142273)
last accs (train_acc, test_acc) (0.6061000078320503, 0.5240000486373901)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.95it/s] 15%|#5        | 4/26 [00:00<00:01, 18.83it/s] 27%|##6       | 7/26 [00:00<00:00, 23.09it/s] 42%|####2     | 11/26 [00:00<00:00, 26.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.22it/s] 69%|######9   | 18/26 [00:00<00:00, 28.01it/s] 81%|########  | 21/26 [00:00<00:00, 28.44it/s] 96%|#########6| 25/26 [00:00<00:00, 29.41it/s]100%|##########| 26/26 [00:01<00:00, 25.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.001 (0.002)	train_nll   0.63 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.83)	train_acc   0.59 (  0.65)	train_minacc   0.57 (  0.59)	train_majacc   0.60 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.35it/s] 23%|##3       | 6/26 [00:00<00:00, 30.04it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.04it/s] 46%|####6     | 12/26 [00:00<00:00, 41.34it/s] 69%|######9   | 18/26 [00:00<00:00, 44.00it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.00it/s] 92%|#########2| 24/26 [00:00<00:00, 48.43it/s]100%|##########| 26/26 [00:00<00:00, 40.48it/s]
Test: [   0/  26]	Loss 0.599 (0.599)	test_acc   0.67 (  0.67)	test_minacc   0.58 (  0.58)	test_majacc   0.68 (  0.68)	Loss_d 0.599 (0.599)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.641 (0.638)	test_acc   0.56 (  0.59)	test_minacc   0.55 (  0.66)	test_majacc   0.57 (  0.58)	Loss_d 0.641 (0.638)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.55 (  0.66)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.25 (  0.24)
Test: [  20/  26]	Loss 0.621 (0.632)	test_acc   0.59 (  0.59)	test_minacc   0.64 (  0.66)	test_majacc   0.59 (  0.58)	Loss_d 0.621 (0.632)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.64 (  0.66)	test_majacc_d   0.59 (  0.58)	test_corr_d   0.31 (  0.26)
Test: [  26/  26]	Loss 0.627 (0.630)	test_acc   0.59 (  0.60)	test_minacc   0.60 (  0.66)	test_majacc   0.59 (  0.59)	Loss_d 0.627 (0.630)	test_acc_d   0.59 (  0.60)	test_minacc_d   0.60 (  0.66)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.27 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.97it/s]
Test: [  0/  1]	Loss 0.770 (0.770)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.54 (  0.54)	Loss_d 0.770 (0.770)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.770 (0.770)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.54 (  0.54)	Loss_d 0.770 (0.770)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.05 (  0.05)
Overall Timing[ 10/  1]	epoch_time 0.0400 (0.0431)	validation_time 0.0007 (0.0013)	train_time 0.0393 (0.0400)
record: (train_acc, test_acc) (0.6384000191688538, 0.5610000491142273)
last accs (train_acc, test_acc) (0.5987000153660774, 0.5700000524520874)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.06it/s] 15%|#5        | 4/26 [00:00<00:01, 19.63it/s] 27%|##6       | 7/26 [00:00<00:00, 23.34it/s] 38%|###8      | 10/26 [00:00<00:00, 25.77it/s] 50%|#####     | 13/26 [00:00<00:00, 27.17it/s] 65%|######5   | 17/26 [00:00<00:00, 28.67it/s] 81%|########  | 21/26 [00:00<00:00, 30.12it/s] 96%|#########6| 25/26 [00:00<00:00, 30.11it/s]100%|##########| 26/26 [00:00<00:00, 26.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.001 (0.002)	train_nll   0.57 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.65 (  0.62)	train_minacc   0.53 (  0.65)	train_majacc   0.67 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.82it/s] 31%|###       | 8/26 [00:00<00:00, 38.92it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.92it/s] 50%|#####     | 13/26 [00:00<00:00, 41.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.50it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.50it/s] 96%|#########6| 25/26 [00:00<00:00, 47.99it/s]100%|##########| 26/26 [00:00<00:00, 41.84it/s]
Test: [   0/  26]	Loss 0.588 (0.588)	test_acc   0.66 (  0.66)	test_minacc   0.54 (  0.54)	test_majacc   0.67 (  0.67)	Loss_d 0.588 (0.588)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.623 (0.616)	test_acc   0.59 (  0.61)	test_minacc   0.49 (  0.62)	test_majacc   0.60 (  0.61)	Loss_d 0.623 (0.616)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.49 (  0.62)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.31 (  0.33)
Test: [  20/  26]	Loss 0.593 (0.606)	test_acc   0.63 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.63 (  0.62)	Loss_d 0.593 (0.606)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.38 (  0.35)
Test: [  26/  26]	Loss 0.577 (0.603)	test_acc   0.62 (  0.63)	test_minacc   0.50 (  0.62)	test_majacc   0.64 (  0.63)	Loss_d 0.577 (0.603)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.50 (  0.62)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.40 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.97it/s]
Test: [  0/  1]	Loss 0.882 (0.882)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.65 (  0.65)	Loss_d 0.882 (0.882)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.882 (0.882)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.65 (  0.65)	Loss_d 0.882 (0.882)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.12 (  0.12)
Overall Timing[ 11/  1]	epoch_time 0.0377 (0.0427)	validation_time 0.0004 (0.0012)	train_time 0.0373 (0.0398)
record: (train_acc, test_acc) (0.6384000191688538, 0.5610000491142273)
last accs (train_acc, test_acc) (0.6257000125646591, 0.5420000553131104)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.05it/s] 19%|#9        | 5/26 [00:00<00:01, 17.89it/s] 35%|###4      | 9/26 [00:00<00:00, 23.38it/s] 50%|#####     | 13/26 [00:00<00:00, 26.93it/s] 65%|######5   | 17/26 [00:00<00:00, 29.07it/s] 81%|########  | 21/26 [00:00<00:00, 30.42it/s] 96%|#########6| 25/26 [00:00<00:00, 31.38it/s]100%|##########| 26/26 [00:01<00:00, 25.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.002 (0.001)	train_nll   0.59 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.60 (  0.60)	train_minacc   0.68 (  0.60)	train_majacc   0.58 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.40it/s] 27%|##6       | 7/26 [00:00<00:00, 32.99it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.99it/s] 46%|####6     | 12/26 [00:00<00:00, 39.94it/s] 65%|######5   | 17/26 [00:00<00:00, 43.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.41it/s] 85%|########4 | 22/26 [00:00<00:00, 43.36it/s]100%|##########| 26/26 [00:00<00:00, 39.33it/s]
Test: [   0/  26]	Loss 0.604 (0.604)	test_acc   0.58 (  0.58)	test_minacc   0.63 (  0.63)	test_majacc   0.57 (  0.57)	Loss_d 0.604 (0.604)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.619 (0.603)	test_acc   0.58 (  0.62)	test_minacc   0.72 (  0.66)	test_majacc   0.57 (  0.61)	Loss_d 0.619 (0.603)	test_acc_d   0.58 (  0.62)	test_minacc_d   0.72 (  0.66)	test_majacc_d   0.57 (  0.61)	test_corr_d   0.31 (  0.37)
Test: [  20/  26]	Loss 0.585 (0.599)	test_acc   0.64 (  0.62)	test_minacc   0.70 (  0.66)	test_majacc   0.63 (  0.61)	Loss_d 0.585 (0.599)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.70 (  0.66)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.41 (  0.38)
Test: [  26/  26]	Loss 0.596 (0.600)	test_acc   0.60 (  0.62)	test_minacc   0.68 (  0.66)	test_majacc   0.58 (  0.61)	Loss_d 0.596 (0.600)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.68 (  0.66)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.37 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.53it/s]
Test: [  0/  1]	Loss 0.797 (0.797)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.58 (  0.58)	Loss_d 0.797 (0.797)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.797 (0.797)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.58 (  0.58)	Loss_d 0.797 (0.797)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.16 (  0.16)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[ 12/  1]	epoch_time 0.0380 (0.0423)	validation_time 0.0005 (0.0012)	train_time 0.0375 (0.0396)
record: (train_acc, test_acc) (0.6174000121355057, 0.5630000233650208)
last accs (train_acc, test_acc) (0.6174000121355057, 0.5630000233650208)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.80it/s] 15%|#5        | 4/26 [00:00<00:01, 19.02it/s] 27%|##6       | 7/26 [00:00<00:00, 23.34it/s] 42%|####2     | 11/26 [00:00<00:00, 26.78it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.03it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.60it/s] 88%|########8 | 23/26 [00:00<00:00, 30.36it/s]100%|##########| 26/26 [00:00<00:00, 26.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.001 (0.001)	train_nll   0.62 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.56 (  0.62)	train_minacc   0.60 (  0.66)	train_majacc   0.56 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.45it/s] 15%|#5        | 4/26 [00:00<00:01, 17.07it/s] 35%|###4      | 9/26 [00:00<00:00, 29.38it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.38it/s] 54%|#####3    | 14/26 [00:00<00:00, 36.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.40it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.40it/s]100%|##########| 26/26 [00:00<00:00, 45.96it/s]100%|##########| 26/26 [00:00<00:00, 34.61it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.60 (  0.60)	test_minacc   0.63 (  0.63)	test_majacc   0.59 (  0.59)	Loss_d 0.609 (0.609)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.623 (0.609)	test_acc   0.53 (  0.59)	test_minacc   0.62 (  0.69)	test_majacc   0.52 (  0.57)	Loss_d 0.623 (0.609)	test_acc_d   0.53 (  0.59)	test_minacc_d   0.62 (  0.69)	test_majacc_d   0.52 (  0.57)	test_corr_d   0.28 (  0.33)
Test: [  20/  26]	Loss 0.586 (0.608)	test_acc   0.65 (  0.59)	test_minacc   0.70 (  0.69)	test_majacc   0.64 (  0.58)	Loss_d 0.586 (0.608)	test_acc_d   0.65 (  0.59)	test_minacc_d   0.70 (  0.69)	test_majacc_d   0.64 (  0.58)	test_corr_d   0.39 (  0.33)
Test: [  26/  26]	Loss 0.626 (0.609)	test_acc   0.54 (  0.59)	test_minacc   0.65 (  0.69)	test_majacc   0.51 (  0.58)	Loss_d 0.626 (0.609)	test_acc_d   0.54 (  0.59)	test_minacc_d   0.65 (  0.69)	test_majacc_d   0.51 (  0.58)	test_corr_d   0.28 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.92it/s]
Test: [  0/  1]	Loss 0.777 (0.777)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.57 (  0.57)	Loss_d 0.777 (0.777)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.777 (0.777)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.57 (  0.57)	Loss_d 0.777 (0.777)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.09 (  0.09)
Overall Timing[ 13/  1]	epoch_time 0.0465 (0.0426)	validation_time 0.0004 (0.0011)	train_time 0.0460 (0.0400)
record: (train_acc, test_acc) (0.6174000121355057, 0.5630000233650208)
last accs (train_acc, test_acc) (0.5926000123023987, 0.5950000286102295)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.63it/s] 15%|#5        | 4/26 [00:00<00:01, 15.73it/s] 31%|###       | 8/26 [00:00<00:00, 22.39it/s] 46%|####6     | 12/26 [00:00<00:00, 25.74it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.87it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.54it/s] 88%|########8 | 23/26 [00:00<00:00, 29.36it/s]100%|##########| 26/26 [00:01<00:00, 24.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.001 (0.001)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.57 (  0.59)	train_minacc   0.68 (  0.67)	train_majacc   0.55 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.71it/s] 27%|##6       | 7/26 [00:00<00:00, 36.15it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.15it/s] 46%|####6     | 12/26 [00:00<00:00, 42.14it/s] 65%|######5   | 17/26 [00:00<00:00, 43.44it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.44it/s] 88%|########8 | 23/26 [00:00<00:00, 47.76it/s]100%|##########| 26/26 [00:00<00:00, 40.76it/s]
Test: [   0/  26]	Loss 0.633 (0.633)	test_acc   0.52 (  0.52)	test_minacc   0.71 (  0.71)	test_majacc   0.49 (  0.49)	Loss_d 0.633 (0.633)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.613 (0.621)	test_acc   0.56 (  0.58)	test_minacc   0.83 (  0.71)	test_majacc   0.52 (  0.56)	Loss_d 0.613 (0.621)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.83 (  0.71)	test_majacc_d   0.52 (  0.56)	test_corr_d   0.30 (  0.32)
Test: [  20/  26]	Loss 0.608 (0.622)	test_acc   0.59 (  0.58)	test_minacc   0.60 (  0.70)	test_majacc   0.59 (  0.56)	Loss_d 0.608 (0.622)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.60 (  0.70)	test_majacc_d   0.59 (  0.56)	test_corr_d   0.35 (  0.31)
Test: [  26/  26]	Loss 0.619 (0.621)	test_acc   0.55 (  0.58)	test_minacc   0.68 (  0.69)	test_majacc   0.52 (  0.56)	Loss_d 0.619 (0.621)	test_acc_d   0.55 (  0.58)	test_minacc_d   0.68 (  0.69)	test_majacc_d   0.52 (  0.56)	test_corr_d   0.30 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.70it/s]
Test: [  0/  1]	Loss 0.761 (0.761)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.48 (  0.48)	Loss_d 0.761 (0.761)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.761 (0.761)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.48 (  0.48)	Loss_d 0.761 (0.761)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.09 (  0.09)
Overall Timing[ 14/  1]	epoch_time 0.0383 (0.0423)	validation_time 0.0005 (0.0011)	train_time 0.0378 (0.0399)
record: (train_acc, test_acc) (0.6174000121355057, 0.5630000233650208)
last accs (train_acc, test_acc) (0.5811000066399574, 0.5920000076293945)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.94it/s] 12%|#1        | 3/26 [00:00<00:01, 11.87it/s] 23%|##3       | 6/26 [00:00<00:01, 17.06it/s] 35%|###4      | 9/26 [00:00<00:00, 21.16it/s] 46%|####6     | 12/26 [00:00<00:00, 23.73it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.79it/s] 85%|########4 | 22/26 [00:00<00:00, 27.59it/s] 96%|#########6| 25/26 [00:01<00:00, 27.97it/s]100%|##########| 26/26 [00:01<00:00, 22.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0068, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(6.5446e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(5.1254e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: tensor(3.3538e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.001 (0.003)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.57 (  0.60)	train_minacc   0.68 (  0.52)	train_majacc   0.55 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.31it/s] 23%|##3       | 6/26 [00:00<00:00, 31.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.00it/s] 42%|####2     | 11/26 [00:00<00:00, 36.04it/s] 65%|######5   | 17/26 [00:00<00:00, 43.47it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.47it/s] 85%|########4 | 22/26 [00:00<00:00, 40.88it/s]100%|##########| 26/26 [00:00<00:00, 37.56it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.60 (  0.60)	test_minacc   0.73 (  0.73)	test_majacc   0.58 (  0.58)	Loss_d 0.645 (0.645)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.592 (0.616)	test_acc   0.63 (  0.63)	test_minacc   0.74 (  0.65)	test_majacc   0.62 (  0.62)	Loss_d 0.592 (0.616)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.74 (  0.65)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.38 (  0.34)
Test: [  20/  26]	Loss 0.603 (0.620)	test_acc   0.63 (  0.62)	test_minacc   0.58 (  0.61)	test_majacc   0.64 (  0.62)	Loss_d 0.603 (0.620)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.58 (  0.61)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.38 (  0.34)
Test: [  26/  26]	Loss 0.611 (0.621)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.61)	test_majacc   0.62 (  0.62)	Loss_d 0.611 (0.621)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.61)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.37 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.27it/s]
Test: [  0/  1]	Loss 0.785 (0.785)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.64 (  0.64)	Loss_d 0.785 (0.785)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.785 (0.785)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.64 (  0.64)	Loss_d 0.785 (0.785)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.08 (  0.08)
Overall Timing[ 15/  1]	epoch_time 0.0415 (0.0423)	validation_time 0.0005 (0.0010)	train_time 0.0410 (0.0400)
record: (train_acc, test_acc) (0.6174000121355057, 0.5630000233650208)
last accs (train_acc, test_acc) (0.6167000084519386, 0.5440000295639038)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.47it/s] 15%|#5        | 4/26 [00:00<00:01, 13.04it/s] 31%|###       | 8/26 [00:00<00:00, 20.32it/s] 46%|####6     | 12/26 [00:00<00:00, 24.40it/s] 62%|######1   | 16/26 [00:00<00:00, 26.66it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.22it/s] 92%|#########2| 24/26 [00:00<00:00, 29.01it/s]100%|##########| 26/26 [00:01<00:00, 23.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0049, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(4.6512e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.002 (0.004)	train_nll   0.66 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.58 (  0.62)	train_minacc   0.38 (  0.53)	train_majacc   0.62 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.02it/s] 27%|##6       | 7/26 [00:00<00:00, 30.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.87it/s] 50%|#####     | 13/26 [00:00<00:00, 37.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.54it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.54it/s] 96%|#########6| 25/26 [00:00<00:00, 45.48it/s]100%|##########| 26/26 [00:00<00:00, 37.92it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.61 (  0.61)	test_minacc   0.56 (  0.56)	test_majacc   0.62 (  0.62)	Loss_d 0.645 (0.645)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.622 (0.634)	test_acc   0.64 (  0.63)	test_minacc   0.53 (  0.50)	test_majacc   0.65 (  0.65)	Loss_d 0.622 (0.634)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.40 (  0.38)
Test: [  20/  26]	Loss 0.617 (0.633)	test_acc   0.66 (  0.63)	test_minacc   0.46 (  0.49)	test_majacc   0.69 (  0.66)	Loss_d 0.617 (0.633)	test_acc_d   0.66 (  0.63)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.69 (  0.66)	test_corr_d   0.44 (  0.39)
Test: [  26/  26]	Loss 0.643 (0.634)	test_acc   0.62 (  0.63)	test_minacc   0.40 (  0.50)	test_majacc   0.66 (  0.65)	Loss_d 0.643 (0.634)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.40 (  0.50)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.38 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.97it/s]
Test: [  0/  1]	Loss 0.762 (0.762)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.59 (  0.59)	Loss_d 0.762 (0.762)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.762 (0.762)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.59 (  0.59)	Loss_d 0.762 (0.762)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.08 (  0.08)
Overall Timing[ 16/  1]	epoch_time 0.0383 (0.0420)	validation_time 0.0004 (0.0010)	train_time 0.0378 (0.0398)
record: (train_acc, test_acc) (0.6174000121355057, 0.5630000233650208)
last accs (train_acc, test_acc) (0.6292000111937522, 0.49900001287460327)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 15%|#5        | 4/26 [00:00<00:01, 16.43it/s] 31%|###       | 8/26 [00:00<00:00, 23.04it/s] 46%|####6     | 12/26 [00:00<00:00, 26.25it/s] 62%|######1   | 16/26 [00:00<00:00, 28.08it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.23it/s] 88%|########8 | 23/26 [00:00<00:00, 28.72it/s]100%|##########| 26/26 [00:00<00:00, 28.87it/s]100%|##########| 26/26 [00:01<00:00, 25.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0040, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(1.4871e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.002 (0.005)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.62 (  0.65)	train_minacc   0.50 (  0.50)	train_majacc   0.64 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.32it/s] 27%|##6       | 7/26 [00:00<00:00, 31.70it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.70it/s] 46%|####6     | 12/26 [00:00<00:00, 38.72it/s] 69%|######9   | 18/26 [00:00<00:00, 44.24it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.24it/s] 92%|#########2| 24/26 [00:00<00:00, 48.44it/s]100%|##########| 26/26 [00:00<00:00, 39.18it/s]
Test: [   0/  26]	Loss 0.641 (0.641)	test_acc   0.59 (  0.59)	test_minacc   0.62 (  0.62)	test_majacc   0.59 (  0.59)	Loss_d 0.641 (0.641)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.624 (0.621)	test_acc   0.62 (  0.64)	test_minacc   0.70 (  0.63)	test_majacc   0.61 (  0.64)	Loss_d 0.624 (0.621)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.70 (  0.63)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.30 (  0.33)
Test: [  20/  26]	Loss 0.606 (0.620)	test_acc   0.64 (  0.63)	test_minacc   0.58 (  0.60)	test_majacc   0.65 (  0.64)	Loss_d 0.606 (0.620)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.58 (  0.60)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.36 (  0.34)
Test: [  26/  26]	Loss 0.603 (0.620)	test_acc   0.60 (  0.63)	test_minacc   0.53 (  0.60)	test_majacc   0.61 (  0.64)	Loss_d 0.603 (0.620)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.53 (  0.60)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.39 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.12it/s]
Test: [  0/  1]	Loss 0.778 (0.778)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.62 (  0.62)	Loss_d 0.778 (0.778)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.778 (0.778)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.62 (  0.62)	Loss_d 0.778 (0.778)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.05 ( -0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0392 (0.0419)	validation_time 0.0007 (0.0010)	train_time 0.0384 (0.0398)
record: (train_acc, test_acc) (0.6310000103712082, 0.5730000138282776)
last accs (train_acc, test_acc) (0.6310000103712082, 0.5730000138282776)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 15%|#5        | 4/26 [00:00<00:01, 15.36it/s] 27%|##6       | 7/26 [00:00<00:00, 20.40it/s] 42%|####2     | 11/26 [00:00<00:00, 24.39it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.41it/s] 88%|########8 | 23/26 [00:00<00:00, 29.11it/s]100%|##########| 26/26 [00:01<00:00, 24.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0035, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.030 (0.004)	train_nll   0.61 (  0.64)	train_penalty   0.03 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.68 (  0.59)	train_minacc   0.43 (  0.52)	train_majacc   0.73 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.79it/s] 27%|##6       | 7/26 [00:00<00:00, 33.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.39it/s] 50%|#####     | 13/26 [00:00<00:00, 43.70it/s] 69%|######9   | 18/26 [00:00<00:00, 45.90it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.90it/s] 88%|########8 | 23/26 [00:00<00:00, 44.89it/s]100%|##########| 26/26 [00:00<00:00, 40.88it/s]
Test: [   0/  26]	Loss 0.517 (0.517)	test_acc   0.76 (  0.76)	test_minacc   0.48 (  0.48)	test_majacc   0.81 (  0.81)	Loss_d 0.517 (0.517)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.529 (0.538)	test_acc   0.72 (  0.71)	test_minacc   0.43 (  0.48)	test_majacc   0.76 (  0.75)	Loss_d 0.529 (0.538)	test_acc_d   0.72 (  0.71)	test_minacc_d   0.43 (  0.48)	test_majacc_d   0.76 (  0.75)	test_corr_d   0.56 (  0.56)
Test: [  20/  26]	Loss 0.529 (0.539)	test_acc   0.73 (  0.71)	test_minacc   0.48 (  0.47)	test_majacc   0.76 (  0.75)	Loss_d 0.529 (0.539)	test_acc_d   0.73 (  0.71)	test_minacc_d   0.48 (  0.47)	test_majacc_d   0.76 (  0.75)	test_corr_d   0.56 (  0.57)
Test: [  26/  26]	Loss 0.525 (0.539)	test_acc   0.70 (  0.71)	test_minacc   0.33 (  0.46)	test_majacc   0.77 (  0.76)	Loss_d 0.525 (0.539)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.33 (  0.46)	test_majacc_d   0.77 (  0.76)	test_corr_d   0.60 (  0.57)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.80it/s]
Test: [  0/  1]	Loss 0.995 (0.995)	test_acc   0.45 (  0.45)	test_minacc   0.41 (  0.41)	test_majacc   0.79 (  0.79)	Loss_d 0.995 (0.995)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 0.995 (0.995)	test_acc   0.45 (  0.45)	test_minacc   0.41 (  0.41)	test_majacc   0.79 (  0.79)	Loss_d 0.995 (0.995)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.32 (  0.32)
Overall Timing[ 18/  1]	epoch_time 0.0379 (0.0417)	validation_time 0.0004 (0.0009)	train_time 0.0375 (0.0396)
record: (train_acc, test_acc) (0.6310000103712082, 0.5730000138282776)
last accs (train_acc, test_acc) (0.711400033056736, 0.4520000219345093)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.69it/s] 15%|#5        | 4/26 [00:00<00:01, 14.54it/s] 31%|###       | 8/26 [00:00<00:00, 21.72it/s] 46%|####6     | 12/26 [00:00<00:00, 25.45it/s] 62%|######1   | 16/26 [00:00<00:00, 27.78it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.04it/s] 92%|#########2| 24/26 [00:00<00:00, 29.48it/s]100%|##########| 26/26 [00:01<00:00, 24.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0029, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.56 (  0.60)	train_minacc   0.45 (  0.57)	train_majacc   0.59 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.62it/s] 31%|###       | 8/26 [00:00<00:00, 38.01it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.01it/s] 50%|#####     | 13/26 [00:00<00:00, 41.78it/s] 69%|######9   | 18/26 [00:00<00:00, 42.56it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.56it/s] 88%|########8 | 23/26 [00:00<00:00, 44.14it/s]100%|##########| 26/26 [00:00<00:00, 40.22it/s]
Test: [   0/  26]	Loss 0.587 (0.587)	test_acc   0.72 (  0.72)	test_minacc   0.56 (  0.56)	test_majacc   0.74 (  0.74)	Loss_d 0.587 (0.587)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.578 (0.588)	test_acc   0.75 (  0.72)	test_minacc   0.53 (  0.49)	test_majacc   0.78 (  0.77)	Loss_d 0.578 (0.588)	test_acc_d   0.75 (  0.72)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.53 (  0.53)
Test: [  20/  26]	Loss 0.579 (0.588)	test_acc   0.72 (  0.72)	test_minacc   0.48 (  0.47)	test_majacc   0.75 (  0.76)	Loss_d 0.579 (0.588)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.48 (  0.47)	test_majacc_d   0.75 (  0.76)	test_corr_d   0.54 (  0.53)
Test: [  26/  26]	Loss 0.578 (0.588)	test_acc   0.71 (  0.72)	test_minacc   0.43 (  0.48)	test_majacc   0.76 (  0.76)	Loss_d 0.578 (0.588)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.43 (  0.48)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.55 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.75it/s]
Test: [  0/  1]	Loss 0.763 (0.763)	test_acc   0.45 (  0.45)	test_minacc   0.42 (  0.42)	test_majacc   0.72 (  0.72)	Loss_d 0.763 (0.763)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 0.763 (0.763)	test_acc   0.45 (  0.45)	test_minacc   0.42 (  0.42)	test_majacc   0.72 (  0.72)	Loss_d 0.763 (0.763)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.28 (  0.28)
Overall Timing[ 19/  1]	epoch_time 0.0532 (0.0422)	validation_time 0.0082 (0.0013)	train_time 0.0449 (0.0399)
record: (train_acc, test_acc) (0.6310000103712082, 0.5730000138282776)
last accs (train_acc, test_acc) (0.7181000327467918, 0.4490000307559967)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.30it/s] 15%|#5        | 4/26 [00:00<00:01, 14.55it/s] 27%|##6       | 7/26 [00:00<00:00, 19.70it/s] 42%|####2     | 11/26 [00:00<00:00, 24.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.91it/s] 88%|########8 | 23/26 [00:00<00:00, 28.86it/s]100%|##########| 26/26 [00:01<00:00, 28.89it/s]100%|##########| 26/26 [00:01<00:00, 23.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0029, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.001 (0.002)	train_nll   0.62 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.66 (  0.64)	train_minacc   0.53 (  0.53)	train_majacc   0.68 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.22it/s] 19%|#9        | 5/26 [00:00<00:00, 23.45it/s]                                               19%|#9        | 5/26 [00:00<00:00, 23.45it/s] 42%|####2     | 11/26 [00:00<00:00, 36.98it/s] 62%|######1   | 16/26 [00:00<00:00, 37.74it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.74it/s] 85%|########4 | 22/26 [00:00<00:00, 43.28it/s]100%|##########| 26/26 [00:00<00:00, 35.80it/s]
Test: [   0/  26]	Loss 0.625 (0.625)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.62)	test_majacc   0.64 (  0.64)	Loss_d 0.625 (0.625)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.629 (0.622)	test_acc   0.58 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.58 (  0.61)	Loss_d 0.629 (0.622)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.32 (  0.33)
Test: [  20/  26]	Loss 0.609 (0.620)	test_acc   0.64 (  0.62)	test_minacc   0.62 (  0.61)	test_majacc   0.64 (  0.62)	Loss_d 0.609 (0.620)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.35 (  0.34)
Test: [  26/  26]	Loss 0.578 (0.619)	test_acc   0.65 (  0.62)	test_minacc   0.55 (  0.61)	test_majacc   0.67 (  0.62)	Loss_d 0.578 (0.619)	test_acc_d   0.65 (  0.62)	test_minacc_d   0.55 (  0.61)	test_majacc_d   0.67 (  0.62)	test_corr_d   0.42 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.48it/s]
Test: [  0/  1]	Loss 0.766 (0.766)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.65 (  0.65)	Loss_d 0.766 (0.766)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.766 (0.766)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.65 (  0.65)	Loss_d 0.766 (0.766)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.02 (  0.02)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[ 20/  1]	epoch_time 0.0391 (0.0421)	validation_time 0.0004 (0.0013)	train_time 0.0387 (0.0398)
record: (train_acc, test_acc) (0.6219000106453896, 0.5940000414848328)
last accs (train_acc, test_acc) (0.6219000106453896, 0.5940000414848328)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.14it/s] 19%|#9        | 5/26 [00:00<00:01, 20.24it/s] 31%|###       | 8/26 [00:00<00:00, 23.76it/s] 42%|####2     | 11/26 [00:00<00:00, 25.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.53it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.72it/s] 88%|########8 | 23/26 [00:00<00:00, 29.19it/s]100%|##########| 26/26 [00:00<00:00, 29.33it/s]100%|##########| 26/26 [00:01<00:00, 25.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0022, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.003 (0.003)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.66 (  0.60)	train_minacc   0.47 (  0.52)	train_majacc   0.70 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.21it/s] 23%|##3       | 6/26 [00:00<00:00, 31.54it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.54it/s] 42%|####2     | 11/26 [00:00<00:00, 36.09it/s] 65%|######5   | 17/26 [00:00<00:00, 44.33it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.33it/s] 85%|########4 | 22/26 [00:00<00:00, 45.95it/s]100%|##########| 26/26 [00:00<00:00, 40.28it/s]
Test: [   0/  26]	Loss 0.554 (0.554)	test_acc   0.72 (  0.72)	test_minacc   0.50 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 0.554 (0.554)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.584 (0.576)	test_acc   0.66 (  0.68)	test_minacc   0.45 (  0.53)	test_majacc   0.69 (  0.70)	Loss_d 0.584 (0.576)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.45 (  0.53)	test_majacc_d   0.69 (  0.70)	test_corr_d   0.44 (  0.46)
Test: [  20/  26]	Loss 0.586 (0.576)	test_acc   0.69 (  0.68)	test_minacc   0.44 (  0.52)	test_majacc   0.72 (  0.70)	Loss_d 0.586 (0.576)	test_acc_d   0.69 (  0.68)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.45 (  0.46)
Test: [  26/  26]	Loss 0.548 (0.574)	test_acc   0.71 (  0.68)	test_minacc   0.53 (  0.53)	test_majacc   0.75 (  0.71)	Loss_d 0.548 (0.574)	test_acc_d   0.71 (  0.68)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.75 (  0.71)	test_corr_d   0.50 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.22it/s]
Test: [  0/  1]	Loss 0.810 (0.810)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.76 (  0.76)	Loss_d 0.810 (0.810)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.810 (0.810)	test_acc   0.54 (  0.54)	test_minacc   0.51 (  0.51)	test_majacc   0.76 (  0.76)	Loss_d 0.810 (0.810)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.15 (  0.15)
Overall Timing[ 21/  1]	epoch_time 0.0389 (0.0420)	validation_time 0.0007 (0.0012)	train_time 0.0382 (0.0398)
record: (train_acc, test_acc) (0.6219000106453896, 0.5940000414848328)
last accs (train_acc, test_acc) (0.6798000259399414, 0.5350000262260437)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.11it/s] 15%|#5        | 4/26 [00:00<00:01, 14.56it/s] 27%|##6       | 7/26 [00:00<00:00, 19.58it/s] 42%|####2     | 11/26 [00:00<00:00, 23.88it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.10it/s] 65%|######5   | 17/26 [00:00<00:00, 26.28it/s] 81%|########  | 21/26 [00:00<00:00, 27.63it/s] 92%|#########2| 24/26 [00:00<00:00, 28.12it/s]100%|##########| 26/26 [00:01<00:00, 23.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0018, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.002 (0.002)	train_nll   0.57 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.83)	train_acc   0.67 (  0.63)	train_minacc   0.68 (  0.59)	train_majacc   0.67 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.78it/s] 23%|##3       | 6/26 [00:00<00:00, 27.23it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.23it/s] 42%|####2     | 11/26 [00:00<00:00, 36.35it/s] 65%|######5   | 17/26 [00:00<00:00, 41.49it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.49it/s] 88%|########8 | 23/26 [00:00<00:00, 46.23it/s]100%|##########| 26/26 [00:00<00:00, 37.89it/s]
Test: [   0/  26]	Loss 0.606 (0.606)	test_acc   0.65 (  0.65)	test_minacc   0.63 (  0.63)	test_majacc   0.65 (  0.65)	Loss_d 0.606 (0.606)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.623 (0.605)	test_acc   0.61 (  0.65)	test_minacc   0.62 (  0.64)	test_majacc   0.60 (  0.65)	Loss_d 0.623 (0.605)	test_acc_d   0.61 (  0.65)	test_minacc_d   0.62 (  0.64)	test_majacc_d   0.60 (  0.65)	test_corr_d   0.31 (  0.35)
Test: [  20/  26]	Loss 0.596 (0.606)	test_acc   0.66 (  0.64)	test_minacc   0.62 (  0.61)	test_majacc   0.67 (  0.65)	Loss_d 0.596 (0.606)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.563 (0.605)	test_acc   0.66 (  0.64)	test_minacc   0.65 (  0.61)	test_majacc   0.66 (  0.65)	Loss_d 0.563 (0.605)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.65 (  0.61)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.42 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.31it/s]
Test: [  0/  1]	Loss 0.834 (0.834)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.834 (0.834)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.834 (0.834)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.834 (0.834)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.03 (  0.03)
Overall Timing[ 22/  1]	epoch_time 0.0386 (0.0418)	validation_time 0.0004 (0.0012)	train_time 0.0381 (0.0397)
record: (train_acc, test_acc) (0.6219000106453896, 0.5940000414848328)
last accs (train_acc, test_acc) (0.6442000155448914, 0.5720000267028809)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.03it/s] 15%|#5        | 4/26 [00:00<00:01, 20.81it/s] 27%|##6       | 7/26 [00:00<00:00, 23.91it/s] 38%|###8      | 10/26 [00:00<00:00, 25.27it/s] 50%|#####     | 13/26 [00:00<00:00, 26.32it/s] 62%|######1   | 16/26 [00:00<00:00, 27.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.58it/s] 85%|########4 | 22/26 [00:00<00:00, 28.23it/s] 96%|#########6| 25/26 [00:00<00:00, 28.38it/s]100%|##########| 26/26 [00:01<00:00, 25.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0013, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.002 (0.003)	train_nll   0.53 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.69 (  0.61)	train_minacc   0.43 (  0.56)	train_majacc   0.74 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.63it/s] 31%|###       | 8/26 [00:00<00:00, 38.46it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.46it/s] 50%|#####     | 13/26 [00:00<00:00, 42.70it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.22it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.22it/s] 92%|#########2| 24/26 [00:00<00:00, 47.43it/s]100%|##########| 26/26 [00:00<00:00, 41.59it/s]
Test: [   0/  26]	Loss 0.556 (0.556)	test_acc   0.72 (  0.72)	test_minacc   0.48 (  0.48)	test_majacc   0.76 (  0.76)	Loss_d 0.556 (0.556)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.568 (0.566)	test_acc   0.68 (  0.69)	test_minacc   0.47 (  0.52)	test_majacc   0.71 (  0.72)	Loss_d 0.568 (0.566)	test_acc_d   0.68 (  0.69)	test_minacc_d   0.47 (  0.52)	test_majacc_d   0.71 (  0.72)	test_corr_d   0.50 (  0.50)
Test: [  20/  26]	Loss 0.557 (0.567)	test_acc   0.71 (  0.69)	test_minacc   0.50 (  0.51)	test_majacc   0.74 (  0.72)	Loss_d 0.557 (0.567)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.74 (  0.72)	test_corr_d   0.51 (  0.50)
Test: [  26/  26]	Loss 0.519 (0.564)	test_acc   0.72 (  0.69)	test_minacc   0.43 (  0.51)	test_majacc   0.77 (  0.73)	Loss_d 0.519 (0.564)	test_acc_d   0.72 (  0.69)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.77 (  0.73)	test_corr_d   0.55 (  0.50)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.96it/s]
Test: [  0/  1]	Loss 1.031 (1.031)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.74 (  0.74)	Loss_d 1.031 (1.031)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 1.031 (1.031)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.74 (  0.74)	Loss_d 1.031 (1.031)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.20 (  0.20)
Overall Timing[ 23/  1]	epoch_time 0.0389 (0.0417)	validation_time 0.0031 (0.0013)	train_time 0.0358 (0.0395)
record: (train_acc, test_acc) (0.6219000106453896, 0.5940000414848328)
last accs (train_acc, test_acc) (0.6931000346541405, 0.49400001764297485)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.51it/s] 15%|#5        | 4/26 [00:00<00:01, 15.39it/s] 27%|##6       | 7/26 [00:00<00:00, 20.38it/s] 38%|###8      | 10/26 [00:00<00:00, 22.84it/s] 50%|#####     | 13/26 [00:00<00:00, 24.47it/s] 62%|######1   | 16/26 [00:00<00:00, 25.71it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.03it/s] 85%|########4 | 22/26 [00:00<00:00, 27.01it/s] 96%|#########6| 25/26 [00:01<00:00, 27.67it/s]100%|##########| 26/26 [00:01<00:00, 23.12it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: tensor(0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.002 (0.004)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.82)	train_acc   0.66 (  0.63)	train_minacc   0.70 (  0.51)	train_majacc   0.66 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 27%|##6       | 7/26 [00:00<00:00, 31.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.79it/s] 46%|####6     | 12/26 [00:00<00:00, 38.59it/s] 65%|######5   | 17/26 [00:00<00:00, 41.36it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.36it/s] 85%|########4 | 22/26 [00:00<00:00, 43.74it/s]100%|##########| 26/26 [00:00<00:00, 37.96it/s]
Test: [   0/  26]	Loss 0.682 (0.682)	test_acc   0.56 (  0.56)	test_minacc   0.65 (  0.65)	test_majacc   0.54 (  0.54)	Loss_d 0.682 (0.682)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.664 (0.650)	test_acc   0.63 (  0.60)	test_minacc   0.70 (  0.59)	test_majacc   0.62 (  0.60)	Loss_d 0.664 (0.650)	test_acc_d   0.63 (  0.60)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.29 (  0.33)
Test: [  20/  26]	Loss 0.638 (0.652)	test_acc   0.62 (  0.60)	test_minacc   0.62 (  0.57)	test_majacc   0.61 (  0.60)	Loss_d 0.638 (0.652)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.33 (  0.33)
Test: [  26/  26]	Loss 0.612 (0.652)	test_acc   0.63 (  0.60)	test_minacc   0.65 (  0.57)	test_majacc   0.62 (  0.60)	Loss_d 0.612 (0.652)	test_acc_d   0.63 (  0.60)	test_minacc_d   0.65 (  0.57)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.38 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.71it/s]
Test: [  0/  1]	Loss 0.791 (0.791)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.59 (  0.59)	Loss_d 0.791 (0.791)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.791 (0.791)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.59 (  0.59)	Loss_d 0.791 (0.791)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 24/  1]	epoch_time 0.0407 (0.0416)	validation_time 0.0005 (0.0013)	train_time 0.0401 (0.0396)
record: (train_acc, test_acc) (0.6219000106453896, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5983000146150589, 0.5430000424385071)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.02it/s] 15%|#5        | 4/26 [00:00<00:01, 15.90it/s] 27%|##6       | 7/26 [00:00<00:00, 20.65it/s] 38%|###8      | 10/26 [00:00<00:00, 23.05it/s] 50%|#####     | 13/26 [00:00<00:00, 24.91it/s] 62%|######1   | 16/26 [00:00<00:00, 26.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.06it/s] 85%|########4 | 22/26 [00:00<00:00, 27.80it/s] 96%|#########6| 25/26 [00:01<00:00, 28.39it/s]100%|##########| 26/26 [00:01<00:00, 23.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.005 (0.003)	train_nll   0.72 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.51 (  0.62)	train_minacc   0.45 (  0.55)	train_majacc   0.52 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.66it/s] 23%|##3       | 6/26 [00:00<00:00, 29.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.32it/s] 42%|####2     | 11/26 [00:00<00:00, 37.37it/s] 65%|######5   | 17/26 [00:00<00:00, 40.14it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.14it/s] 88%|########8 | 23/26 [00:00<00:00, 45.03it/s]100%|##########| 26/26 [00:00<00:00, 36.71it/s]
Test: [   0/  26]	Loss 0.778 (0.778)	test_acc   0.45 (  0.45)	test_minacc   0.67 (  0.67)	test_majacc   0.41 (  0.41)	Loss_d 0.778 (0.778)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.41 (  0.41)	test_corr_d  -0.05 ( -0.05)
Test: [  10/  26]	Loss 0.732 (0.746)	test_acc   0.52 (  0.50)	test_minacc   0.60 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.732 (0.746)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.60 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.01 ( -0.09)
Test: [  20/  26]	Loss 0.735 (0.745)	test_acc   0.51 (  0.50)	test_minacc   0.48 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.735 (0.745)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.48 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d  -0.09 ( -0.08)
Test: [  26/  26]	Loss 0.730 (0.747)	test_acc   0.52 (  0.50)	test_minacc   0.55 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.730 (0.747)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.55 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d  -0.08 ( -0.09)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.51it/s]
Test: [  0/  1]	Loss 0.742 (0.742)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.742 (0.742)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.742 (0.742)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.742 (0.742)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 25/  1]	epoch_time 0.0411 (0.0416)	validation_time 0.0005 (0.0012)	train_time 0.0405 (0.0396)
record: (train_acc, test_acc) (0.6219000106453896, 0.5940000414848328)
last accs (train_acc, test_acc) (0.4973000102937222, 0.5070000290870667)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.47it/s] 15%|#5        | 4/26 [00:00<00:01, 15.38it/s] 27%|##6       | 7/26 [00:00<00:00, 20.17it/s] 38%|###8      | 10/26 [00:00<00:00, 23.42it/s] 50%|#####     | 13/26 [00:00<00:00, 25.18it/s] 62%|######1   | 16/26 [00:00<00:00, 26.34it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.04it/s] 85%|########4 | 22/26 [00:00<00:00, 27.45it/s] 96%|#########6| 25/26 [00:01<00:00, 28.05it/s]100%|##########| 26/26 [00:01<00:00, 23.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: tensor(8.4395e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.002 (0.002)	train_nll   0.61 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.66 (  0.57)	train_minacc   0.50 (  0.53)	train_majacc   0.69 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.78it/s] 27%|##6       | 7/26 [00:00<00:00, 34.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.55it/s] 50%|#####     | 13/26 [00:00<00:00, 39.14it/s] 69%|######9   | 18/26 [00:00<00:00, 42.35it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.35it/s] 88%|########8 | 23/26 [00:00<00:00, 44.37it/s]100%|##########| 26/26 [00:00<00:00, 38.23it/s]
Test: [   0/  26]	Loss 0.591 (0.591)	test_acc   0.70 (  0.70)	test_minacc   0.44 (  0.44)	test_majacc   0.74 (  0.74)	Loss_d 0.591 (0.591)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.641 (0.623)	test_acc   0.61 (  0.64)	test_minacc   0.40 (  0.51)	test_majacc   0.64 (  0.66)	Loss_d 0.641 (0.623)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.40 (  0.51)	test_majacc_d   0.64 (  0.66)	test_corr_d   0.32 (  0.35)
Test: [  20/  26]	Loss 0.624 (0.621)	test_acc   0.63 (  0.64)	test_minacc   0.42 (  0.51)	test_majacc   0.66 (  0.67)	Loss_d 0.624 (0.621)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.42 (  0.51)	test_majacc_d   0.66 (  0.67)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.594 (0.620)	test_acc   0.66 (  0.65)	test_minacc   0.50 (  0.51)	test_majacc   0.69 (  0.67)	Loss_d 0.594 (0.620)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.50 (  0.51)	test_majacc_d   0.69 (  0.67)	test_corr_d   0.42 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.52it/s]
Test: [  0/  1]	Loss 0.795 (0.795)	test_acc   0.48 (  0.48)	test_minacc   0.46 (  0.46)	test_majacc   0.70 (  0.70)	Loss_d 0.795 (0.795)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.795 (0.795)	test_acc   0.48 (  0.48)	test_minacc   0.46 (  0.46)	test_majacc   0.70 (  0.70)	Loss_d 0.795 (0.795)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.14 (  0.14)
Overall Timing[ 26/  1]	epoch_time 0.0420 (0.0416)	validation_time 0.0007 (0.0012)	train_time 0.0412 (0.0397)
record: (train_acc, test_acc) (0.6219000106453896, 0.5940000414848328)
last accs (train_acc, test_acc) (0.645900016605854, 0.4820000231266022)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.21it/s]  8%|7         | 2/26 [00:00<00:03,  7.41it/s] 19%|#9        | 5/26 [00:00<00:01, 15.62it/s] 31%|###       | 8/26 [00:00<00:00, 20.08it/s] 42%|####2     | 11/26 [00:00<00:00, 22.28it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.36it/s] 65%|######5   | 17/26 [00:00<00:00, 25.63it/s] 77%|#######6  | 20/26 [00:00<00:00, 26.85it/s] 88%|########8 | 23/26 [00:01<00:00, 27.28it/s]100%|##########| 26/26 [00:01<00:00, 27.92it/s]100%|##########| 26/26 [00:01<00:00, 22.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.017 (0.004)	train_nll   0.71 (  0.63)	train_penalty   0.02 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.52 (  0.61)	train_minacc   0.55 (  0.53)	train_majacc   0.51 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 23%|##3       | 6/26 [00:00<00:00, 25.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.47it/s] 46%|####6     | 12/26 [00:00<00:00, 37.33it/s] 69%|######9   | 18/26 [00:00<00:00, 42.26it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.26it/s] 88%|########8 | 23/26 [00:00<00:00, 44.60it/s]100%|##########| 26/26 [00:00<00:00, 37.79it/s]
Test: [   0/  26]	Loss 0.754 (0.754)	test_acc   0.50 (  0.50)	test_minacc   0.65 (  0.65)	test_majacc   0.47 (  0.47)	Loss_d 0.754 (0.754)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.692 (0.706)	test_acc   0.54 (  0.54)	test_minacc   0.62 (  0.51)	test_majacc   0.53 (  0.55)	Loss_d 0.692 (0.706)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.62 (  0.51)	test_majacc_d   0.53 (  0.55)	test_corr_d   0.41 (  0.41)
Test: [  20/  26]	Loss 0.682 (0.705)	test_acc   0.55 (  0.54)	test_minacc   0.52 (  0.51)	test_majacc   0.56 (  0.55)	Loss_d 0.682 (0.705)	test_acc_d   0.55 (  0.54)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.56 (  0.55)	test_corr_d   0.45 (  0.42)
Test: [  26/  26]	Loss 0.686 (0.707)	test_acc   0.57 (  0.54)	test_minacc   0.57 (  0.51)	test_majacc   0.57 (  0.54)	Loss_d 0.686 (0.707)	test_acc_d   0.57 (  0.54)	test_minacc_d   0.57 (  0.51)	test_majacc_d   0.57 (  0.54)	test_corr_d   0.44 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.11it/s]
Test: [  0/  1]	Loss 0.827 (0.827)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.54 (  0.54)	Loss_d 0.827 (0.827)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.827 (0.827)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.54 (  0.54)	Loss_d 0.827 (0.827)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.08 (  0.08)
Overall Timing[ 27/  1]	epoch_time 0.0407 (0.0416)	validation_time 0.0005 (0.0012)	train_time 0.0401 (0.0397)
record: (train_acc, test_acc) (0.6219000106453896, 0.5940000414848328)
last accs (train_acc, test_acc) (0.5399000179469585, 0.5040000081062317)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.59it/s] 15%|#5        | 4/26 [00:00<00:01, 16.67it/s] 27%|##6       | 7/26 [00:00<00:00, 21.37it/s] 38%|###8      | 10/26 [00:00<00:00, 23.67it/s] 50%|#####     | 13/26 [00:00<00:00, 25.06it/s] 65%|######5   | 17/26 [00:00<00:00, 26.94it/s] 81%|########  | 21/26 [00:00<00:00, 28.08it/s] 92%|#########2| 24/26 [00:00<00:00, 28.53it/s]100%|##########| 26/26 [00:01<00:00, 24.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.002 (0.002)	train_nll   0.63 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.62 (  0.64)	train_minacc   0.57 (  0.59)	train_majacc   0.63 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.25it/s] 27%|##6       | 7/26 [00:00<00:00, 30.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.09it/s] 50%|#####     | 13/26 [00:00<00:00, 39.25it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.09it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.09it/s] 96%|#########6| 25/26 [00:00<00:00, 47.01it/s]100%|##########| 26/26 [00:00<00:00, 38.24it/s]
Test: [   0/  26]	Loss 0.604 (0.604)	test_acc   0.66 (  0.66)	test_minacc   0.60 (  0.60)	test_majacc   0.67 (  0.67)	Loss_d 0.604 (0.604)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.638 (0.632)	test_acc   0.63 (  0.63)	test_minacc   0.53 (  0.62)	test_majacc   0.64 (  0.63)	Loss_d 0.638 (0.632)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.53 (  0.62)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.30 (  0.28)
Test: [  20/  26]	Loss 0.623 (0.630)	test_acc   0.63 (  0.63)	test_minacc   0.54 (  0.61)	test_majacc   0.64 (  0.63)	Loss_d 0.623 (0.630)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.54 (  0.61)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.33 (  0.29)
Test: [  26/  26]	Loss 0.620 (0.630)	test_acc   0.61 (  0.63)	test_minacc   0.57 (  0.61)	test_majacc   0.62 (  0.63)	Loss_d 0.620 (0.630)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.57 (  0.61)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.32 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.29it/s]
Test: [  0/  1]	Loss 0.684 (0.684)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.62 (  0.62)	Loss_d 0.684 (0.684)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.14 ( -0.14)
Test: [  1/  1]	Loss 0.684 (0.684)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.62 (  0.62)	Loss_d 0.684 (0.684)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.14 ( -0.14)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[ 28/  1]	epoch_time 0.0382 (0.0415)	validation_time 0.0007 (0.0012)	train_time 0.0375 (0.0396)
record: (train_acc, test_acc) (0.6302000168561935, 0.6000000238418579)
last accs (train_acc, test_acc) (0.6302000168561935, 0.6000000238418579)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.75it/s] 15%|#5        | 4/26 [00:00<00:01, 20.36it/s] 27%|##6       | 7/26 [00:00<00:00, 24.22it/s] 42%|####2     | 11/26 [00:00<00:00, 26.80it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.80it/s] 85%|########4 | 22/26 [00:00<00:00, 29.13it/s] 96%|#########6| 25/26 [00:00<00:00, 29.05it/s]100%|##########| 26/26 [00:01<00:00, 25.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.005 (0.002)	train_nll   0.59 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.65 (  0.61)	train_minacc   0.47 (  0.63)	train_majacc   0.68 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.57it/s] 27%|##6       | 7/26 [00:00<00:00, 35.97it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.97it/s] 50%|#####     | 13/26 [00:00<00:00, 42.35it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.68it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.68it/s] 96%|#########6| 25/26 [00:00<00:00, 48.32it/s]100%|##########| 26/26 [00:00<00:00, 41.54it/s]
Test: [   0/  26]	Loss 0.579 (0.579)	test_acc   0.69 (  0.69)	test_minacc   0.52 (  0.52)	test_majacc   0.72 (  0.72)	Loss_d 0.579 (0.579)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.629 (0.619)	test_acc   0.61 (  0.64)	test_minacc   0.45 (  0.55)	test_majacc   0.63 (  0.66)	Loss_d 0.629 (0.619)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.45 (  0.55)	test_majacc_d   0.63 (  0.66)	test_corr_d   0.39 (  0.40)
Test: [  20/  26]	Loss 0.621 (0.618)	test_acc   0.64 (  0.64)	test_minacc   0.54 (  0.55)	test_majacc   0.65 (  0.65)	Loss_d 0.621 (0.618)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.41 (  0.40)
Test: [  26/  26]	Loss 0.614 (0.618)	test_acc   0.65 (  0.64)	test_minacc   0.50 (  0.56)	test_majacc   0.68 (  0.66)	Loss_d 0.614 (0.618)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.50 (  0.56)	test_majacc_d   0.68 (  0.66)	test_corr_d   0.44 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.40it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.65 (  0.65)	Loss_d 0.759 (0.759)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.65 (  0.65)	Loss_d 0.759 (0.759)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.09 (  0.09)
Overall Timing[ 29/  1]	epoch_time 0.0364 (0.0413)	validation_time 0.0004 (0.0011)	train_time 0.0360 (0.0395)
record: (train_acc, test_acc) (0.6302000168561935, 0.6000000238418579)
last accs (train_acc, test_acc) (0.6410000139474868, 0.5190000534057617)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.10it/s] 15%|#5        | 4/26 [00:00<00:01, 20.41it/s] 27%|##6       | 7/26 [00:00<00:00, 24.49it/s] 42%|####2     | 11/26 [00:00<00:00, 27.01it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.40it/s] 88%|########8 | 23/26 [00:00<00:00, 29.42it/s]100%|##########| 26/26 [00:00<00:00, 26.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.002 (0.003)	train_nll   0.64 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.62 (  0.64)	train_minacc   0.50 (  0.54)	train_majacc   0.64 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.77it/s] 31%|###       | 8/26 [00:00<00:00, 42.14it/s]                                               31%|###       | 8/26 [00:00<00:00, 42.14it/s] 50%|#####     | 13/26 [00:00<00:00, 42.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.37it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.37it/s] 96%|#########6| 25/26 [00:00<00:00, 48.42it/s]100%|##########| 26/26 [00:00<00:00, 43.14it/s]
Test: [   0/  26]	Loss 0.625 (0.625)	test_acc   0.66 (  0.66)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.625 (0.625)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.630 (0.636)	test_acc   0.64 (  0.62)	test_minacc   0.49 (  0.58)	test_majacc   0.66 (  0.63)	Loss_d 0.630 (0.636)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.49 (  0.58)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.35 (  0.31)
Test: [  20/  26]	Loss 0.631 (0.634)	test_acc   0.64 (  0.63)	test_minacc   0.54 (  0.57)	test_majacc   0.66 (  0.64)	Loss_d 0.631 (0.634)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.54 (  0.57)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.36 (  0.32)
Test: [  26/  26]	Loss 0.642 (0.635)	test_acc   0.63 (  0.63)	test_minacc   0.53 (  0.58)	test_majacc   0.65 (  0.64)	Loss_d 0.642 (0.635)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.33 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.42it/s]
Test: [  0/  1]	Loss 0.684 (0.684)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.684 (0.684)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.684 (0.684)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.684 (0.684)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 30/  1]	epoch_time 0.0385 (0.0412)	validation_time 0.0005 (0.0011)	train_time 0.0380 (0.0394)
record: (train_acc, test_acc) (0.6302000168561935, 0.6000000238418579)
last accs (train_acc, test_acc) (0.6298000199198723, 0.5840000510215759)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.68it/s] 15%|#5        | 4/26 [00:00<00:01, 18.57it/s] 27%|##6       | 7/26 [00:00<00:00, 23.17it/s] 42%|####2     | 11/26 [00:00<00:00, 26.42it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.09it/s] 69%|######9   | 18/26 [00:00<00:00, 28.27it/s] 81%|########  | 21/26 [00:00<00:00, 28.43it/s] 96%|#########6| 25/26 [00:00<00:00, 29.39it/s]100%|##########| 26/26 [00:01<00:00, 25.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.60 (  0.62)	train_minacc   0.53 (  0.59)	train_majacc   0.62 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.58it/s] 27%|##6       | 7/26 [00:00<00:00, 29.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.00it/s] 50%|#####     | 13/26 [00:00<00:00, 36.63it/s] 69%|######9   | 18/26 [00:00<00:00, 40.51it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.51it/s] 92%|#########2| 24/26 [00:00<00:00, 44.76it/s]100%|##########| 26/26 [00:00<00:00, 34.84it/s]
Test: [   0/  26]	Loss 0.621 (0.621)	test_acc   0.62 (  0.62)	test_minacc   0.75 (  0.75)	test_majacc   0.60 (  0.60)	Loss_d 0.621 (0.621)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.75 (  0.75)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.628 (0.622)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.63)	test_majacc   0.64 (  0.64)	Loss_d 0.628 (0.622)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.63)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.29 (  0.30)
Test: [  20/  26]	Loss 0.605 (0.619)	test_acc   0.67 (  0.64)	test_minacc   0.56 (  0.60)	test_majacc   0.69 (  0.65)	Loss_d 0.605 (0.619)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.56 (  0.60)	test_majacc_d   0.69 (  0.65)	test_corr_d   0.35 (  0.31)
Test: [  26/  26]	Loss 0.614 (0.620)	test_acc   0.62 (  0.64)	test_minacc   0.55 (  0.60)	test_majacc   0.64 (  0.65)	Loss_d 0.614 (0.620)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.55 (  0.60)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.33 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.12it/s]
Test: [  0/  1]	Loss 0.686 (0.686)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.63 (  0.63)	Loss_d 0.686 (0.686)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.686 (0.686)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.63 (  0.63)	Loss_d 0.686 (0.686)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.11 ( -0.11)
Overall Timing[ 31/  1]	epoch_time 0.0395 (0.0412)	validation_time 0.0005 (0.0011)	train_time 0.0390 (0.0394)
record: (train_acc, test_acc) (0.6302000168561935, 0.6000000238418579)
last accs (train_acc, test_acc) (0.6421000199317932, 0.5830000042915344)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 22.67it/s] 23%|##3       | 6/26 [00:00<00:00, 25.72it/s] 35%|###4      | 9/26 [00:00<00:00, 26.75it/s] 50%|#####     | 13/26 [00:00<00:00, 28.84it/s] 62%|######1   | 16/26 [00:00<00:00, 29.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.32it/s] 88%|########8 | 23/26 [00:00<00:00, 29.98it/s]100%|##########| 26/26 [00:00<00:00, 27.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.002 (0.002)	train_nll   0.61 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.62 (  0.61)	train_minacc   0.53 (  0.62)	train_majacc   0.64 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s] 27%|##6       | 7/26 [00:00<00:00, 30.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.17it/s] 50%|#####     | 13/26 [00:00<00:00, 37.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.00it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.00it/s] 96%|#########6| 25/26 [00:00<00:00, 45.62it/s]100%|##########| 26/26 [00:00<00:00, 38.09it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.61 (  0.61)	test_minacc   0.71 (  0.71)	test_majacc   0.60 (  0.60)	Loss_d 0.639 (0.639)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.632 (0.631)	test_acc   0.63 (  0.64)	test_minacc   0.66 (  0.62)	test_majacc   0.63 (  0.65)	Loss_d 0.632 (0.631)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.66 (  0.62)	test_majacc_d   0.63 (  0.65)	test_corr_d   0.31 (  0.31)
Test: [  20/  26]	Loss 0.617 (0.628)	test_acc   0.65 (  0.64)	test_minacc   0.56 (  0.59)	test_majacc   0.67 (  0.65)	Loss_d 0.617 (0.628)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.56 (  0.59)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.36 (  0.32)
Test: [  26/  26]	Loss 0.615 (0.629)	test_acc   0.62 (  0.64)	test_minacc   0.50 (  0.59)	test_majacc   0.65 (  0.64)	Loss_d 0.615 (0.629)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.50 (  0.59)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.37 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.11it/s]
Test: [  0/  1]	Loss 0.710 (0.710)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.63 (  0.63)	Loss_d 0.710 (0.710)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.710 (0.710)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.63 (  0.63)	Loss_d 0.710 (0.710)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 32/  1]	epoch_time 0.0429 (0.0412)	validation_time 0.0005 (0.0011)	train_time 0.0423 (0.0395)
record: (train_acc, test_acc) (0.6302000168561935, 0.6000000238418579)
last accs (train_acc, test_acc) (0.6355000156760215, 0.5760000348091125)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 13.67it/s] 19%|#9        | 5/26 [00:00<00:01, 19.77it/s] 31%|###       | 8/26 [00:00<00:00, 23.29it/s] 42%|####2     | 11/26 [00:00<00:00, 25.22it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.18it/s] 65%|######5   | 17/26 [00:00<00:00, 26.65it/s] 77%|#######6  | 20/26 [00:00<00:00, 25.93it/s] 88%|########8 | 23/26 [00:00<00:00, 26.49it/s]100%|##########| 26/26 [00:01<00:00, 24.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.004 (0.007)	train_nll   0.59 (  0.61)	train_penalty   0.00 (  0.01)	weight_norm   7.82 (  7.82)	train_acc   0.67 (  0.64)	train_minacc   0.45 (  0.49)	train_majacc   0.71 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.48it/s] 23%|##3       | 6/26 [00:00<00:00, 22.03it/s]                                               23%|##3       | 6/26 [00:00<00:00, 22.03it/s] 42%|####2     | 11/26 [00:00<00:00, 30.96it/s] 62%|######1   | 16/26 [00:00<00:00, 36.72it/s]                                                62%|######1   | 16/26 [00:00<00:00, 36.72it/s] 81%|########  | 21/26 [00:00<00:00, 38.71it/s]100%|##########| 26/26 [00:00<00:00, 32.67it/s]
Test: [   0/  26]	Loss 0.542 (0.542)	test_acc   0.76 (  0.76)	test_minacc   0.42 (  0.42)	test_majacc   0.81 (  0.81)	Loss_d 0.542 (0.542)	test_acc_d   0.76 (  0.76)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.561 (0.556)	test_acc   0.72 (  0.72)	test_minacc   0.40 (  0.47)	test_majacc   0.76 (  0.77)	Loss_d 0.561 (0.556)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.40 (  0.47)	test_majacc_d   0.76 (  0.77)	test_corr_d   0.56 (  0.57)
Test: [  20/  26]	Loss 0.550 (0.555)	test_acc   0.72 (  0.73)	test_minacc   0.46 (  0.47)	test_majacc   0.76 (  0.77)	Loss_d 0.550 (0.555)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.46 (  0.47)	test_majacc_d   0.76 (  0.77)	test_corr_d   0.59 (  0.58)
Test: [  26/  26]	Loss 0.544 (0.553)	test_acc   0.74 (  0.73)	test_minacc   0.45 (  0.47)	test_majacc   0.80 (  0.78)	Loss_d 0.544 (0.553)	test_acc_d   0.74 (  0.73)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.80 (  0.78)	test_corr_d   0.61 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.65it/s]
Test: [  0/  1]	Loss 0.802 (0.802)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.84 (  0.84)	Loss_d 0.802 (0.802)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.30 (  0.30)
Test: [  1/  1]	Loss 0.802 (0.802)	test_acc   0.46 (  0.46)	test_minacc   0.41 (  0.41)	test_majacc   0.84 (  0.84)	Loss_d 0.802 (0.802)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.84 (  0.84)	test_corr_d   0.30 (  0.30)
Overall Timing[ 33/  1]	epoch_time 0.0416 (0.0412)	validation_time 0.0005 (0.0011)	train_time 0.0410 (0.0395)
record: (train_acc, test_acc) (0.6302000168561935, 0.6000000238418579)
last accs (train_acc, test_acc) (0.7301000345349312, 0.45600003004074097)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.90it/s] 15%|#5        | 4/26 [00:00<00:01, 16.22it/s] 27%|##6       | 7/26 [00:00<00:00, 20.19it/s] 38%|###8      | 10/26 [00:00<00:00, 23.13it/s] 50%|#####     | 13/26 [00:00<00:00, 24.34it/s] 62%|######1   | 16/26 [00:00<00:00, 25.53it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.97it/s] 85%|########4 | 22/26 [00:00<00:00, 26.58it/s] 96%|#########6| 25/26 [00:01<00:00, 27.21it/s]100%|##########| 26/26 [00:01<00:00, 23.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.001 (0.003)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.63 (  0.64)	train_minacc   0.53 (  0.59)	train_majacc   0.65 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.17it/s] 31%|###       | 8/26 [00:00<00:00, 39.80it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.80it/s] 50%|#####     | 13/26 [00:00<00:00, 42.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.66it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.66it/s] 96%|#########6| 25/26 [00:00<00:00, 49.25it/s]100%|##########| 26/26 [00:00<00:00, 42.21it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.65 (  0.65)	test_minacc   0.58 (  0.58)	test_majacc   0.66 (  0.66)	Loss_d 0.635 (0.635)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.682 (0.669)	test_acc   0.58 (  0.61)	test_minacc   0.49 (  0.58)	test_majacc   0.60 (  0.61)	Loss_d 0.682 (0.669)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.49 (  0.58)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.26 (  0.26)
Test: [  20/  26]	Loss 0.674 (0.665)	test_acc   0.61 (  0.61)	test_minacc   0.56 (  0.58)	test_majacc   0.62 (  0.61)	Loss_d 0.674 (0.665)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.31 (  0.27)
Test: [  26/  26]	Loss 0.669 (0.663)	test_acc   0.61 (  0.61)	test_minacc   0.53 (  0.58)	test_majacc   0.63 (  0.62)	Loss_d 0.669 (0.663)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.28 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.94it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.65 (  0.65)	Loss_d 0.691 (0.691)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.18 ( -0.18)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.65 (  0.65)	Loss_d 0.691 (0.691)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.18 ( -0.18)
Overall Timing[ 34/  1]	epoch_time 0.0440 (0.0413)	validation_time 0.0007 (0.0011)	train_time 0.0433 (0.0397)
record: (train_acc, test_acc) (0.6302000168561935, 0.6000000238418579)
last accs (train_acc, test_acc) (0.6118000109791756, 0.5560000538825989)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.61it/s] 15%|#5        | 4/26 [00:00<00:01, 18.39it/s] 27%|##6       | 7/26 [00:00<00:00, 22.84it/s] 42%|####2     | 11/26 [00:00<00:00, 26.32it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.73it/s] 85%|########4 | 22/26 [00:00<00:00, 28.60it/s] 96%|#########6| 25/26 [00:00<00:00, 28.94it/s]100%|##########| 26/26 [00:01<00:00, 25.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.001 (0.003)	train_nll   0.61 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.63 (  0.65)	train_minacc   0.60 (  0.59)	train_majacc   0.63 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.38it/s] 23%|##3       | 6/26 [00:00<00:00, 32.32it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.32it/s] 42%|####2     | 11/26 [00:00<00:00, 38.56it/s] 65%|######5   | 17/26 [00:00<00:00, 42.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.35it/s] 88%|########8 | 23/26 [00:00<00:00, 46.78it/s]100%|##########| 26/26 [00:00<00:00, 38.97it/s]
Test: [   0/  26]	Loss 0.628 (0.628)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.62)	test_majacc   0.64 (  0.64)	Loss_d 0.628 (0.628)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.638 (0.633)	test_acc   0.61 (  0.62)	test_minacc   0.60 (  0.64)	test_majacc   0.61 (  0.62)	Loss_d 0.638 (0.633)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.60 (  0.64)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.25 (  0.25)
Test: [  20/  26]	Loss 0.631 (0.631)	test_acc   0.63 (  0.63)	test_minacc   0.56 (  0.62)	test_majacc   0.64 (  0.63)	Loss_d 0.631 (0.631)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.56 (  0.62)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.30 (  0.26)
Test: [  26/  26]	Loss 0.621 (0.630)	test_acc   0.65 (  0.63)	test_minacc   0.62 (  0.62)	test_majacc   0.65 (  0.63)	Loss_d 0.621 (0.630)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.30 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.80it/s]
Test: [  0/  1]	Loss 0.678 (0.678)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.64 (  0.64)	Loss_d 0.678 (0.678)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 0.678 (0.678)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.64 (  0.64)	Loss_d 0.678 (0.678)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.17 ( -0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[ 35/  1]	epoch_time 0.0389 (0.0412)	validation_time 0.0004 (0.0010)	train_time 0.0385 (0.0396)
record: (train_acc, test_acc) (0.6250000102519989, 0.6140000224113464)
last accs (train_acc, test_acc) (0.6250000102519989, 0.6140000224113464)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.93it/s] 15%|#5        | 4/26 [00:00<00:01, 16.93it/s] 27%|##6       | 7/26 [00:00<00:00, 21.58it/s] 38%|###8      | 10/26 [00:00<00:00, 24.45it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.84it/s] 65%|######5   | 17/26 [00:00<00:00, 27.48it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.41it/s] 88%|########8 | 23/26 [00:00<00:00, 27.37it/s]100%|##########| 26/26 [00:01<00:00, 27.53it/s]100%|##########| 26/26 [00:01<00:00, 23.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.002 (0.002)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.57 (  0.62)	train_minacc   0.68 (  0.64)	train_majacc   0.55 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.56it/s] 27%|##6       | 7/26 [00:00<00:00, 32.99it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.99it/s] 46%|####6     | 12/26 [00:00<00:00, 39.06it/s] 65%|######5   | 17/26 [00:00<00:00, 41.39it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.39it/s] 88%|########8 | 23/26 [00:00<00:00, 46.55it/s]100%|##########| 26/26 [00:00<00:00, 38.42it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.62 (  0.62)	Loss_d 0.645 (0.645)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.662 (0.652)	test_acc   0.59 (  0.60)	test_minacc   0.55 (  0.63)	test_majacc   0.59 (  0.60)	Loss_d 0.662 (0.652)	test_acc_d   0.59 (  0.60)	test_minacc_d   0.55 (  0.63)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.18 (  0.18)
Test: [  20/  26]	Loss 0.650 (0.651)	test_acc   0.63 (  0.61)	test_minacc   0.60 (  0.63)	test_majacc   0.63 (  0.60)	Loss_d 0.650 (0.651)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.60 (  0.63)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.24 (  0.20)
Test: [  26/  26]	Loss 0.644 (0.650)	test_acc   0.60 (  0.61)	test_minacc   0.55 (  0.64)	test_majacc   0.61 (  0.60)	Loss_d 0.644 (0.650)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.55 (  0.64)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.22 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.18it/s]
Test: [  0/  1]	Loss 0.647 (0.647)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.57 (  0.57)	Loss_d 0.647 (0.647)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.26 ( -0.26)
Test: [  1/  1]	Loss 0.647 (0.647)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.57 (  0.57)	Loss_d 0.647 (0.647)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.26 ( -0.26)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[ 36/  1]	epoch_time 0.0386 (0.0412)	validation_time 0.0005 (0.0010)	train_time 0.0380 (0.0396)
record: (train_acc, test_acc) (0.6071000120043755, 0.6190000176429749)
last accs (train_acc, test_acc) (0.6071000120043755, 0.6190000176429749)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.98it/s] 15%|#5        | 4/26 [00:00<00:01, 17.67it/s] 31%|###       | 8/26 [00:00<00:00, 23.78it/s] 46%|####6     | 12/26 [00:00<00:00, 26.55it/s] 62%|######1   | 16/26 [00:00<00:00, 28.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.07it/s] 88%|########8 | 23/26 [00:00<00:00, 28.97it/s]100%|##########| 26/26 [00:01<00:00, 25.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.63 (  0.60)	train_minacc   0.55 (  0.66)	train_majacc   0.64 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.40it/s] 27%|##6       | 7/26 [00:00<00:00, 32.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.66it/s] 50%|#####     | 13/26 [00:00<00:00, 42.41it/s] 69%|######9   | 18/26 [00:00<00:00, 44.15it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.15it/s] 92%|#########2| 24/26 [00:00<00:00, 48.06it/s]100%|##########| 26/26 [00:00<00:00, 41.19it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.62 (  0.62)	test_minacc   0.58 (  0.58)	test_majacc   0.63 (  0.63)	Loss_d 0.635 (0.635)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.656 (0.650)	test_acc   0.57 (  0.60)	test_minacc   0.57 (  0.62)	test_majacc   0.57 (  0.60)	Loss_d 0.656 (0.650)	test_acc_d   0.57 (  0.60)	test_minacc_d   0.57 (  0.62)	test_majacc_d   0.57 (  0.60)	test_corr_d   0.22 (  0.21)
Test: [  20/  26]	Loss 0.649 (0.649)	test_acc   0.62 (  0.60)	test_minacc   0.60 (  0.63)	test_majacc   0.62 (  0.60)	Loss_d 0.649 (0.649)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.60 (  0.63)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.26 (  0.22)
Test: [  26/  26]	Loss 0.642 (0.648)	test_acc   0.62 (  0.61)	test_minacc   0.55 (  0.63)	test_majacc   0.64 (  0.60)	Loss_d 0.642 (0.648)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.55 (  0.63)	test_majacc_d   0.64 (  0.60)	test_corr_d   0.25 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.90it/s]
Test: [  0/  1]	Loss 0.663 (0.663)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.59 (  0.59)	Loss_d 0.663 (0.663)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.21 ( -0.21)
Test: [  1/  1]	Loss 0.663 (0.663)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.59 (  0.59)	Loss_d 0.663 (0.663)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.21 ( -0.21)
Overall Timing[ 37/  1]	epoch_time 0.0379 (0.0411)	validation_time 0.0005 (0.0010)	train_time 0.0374 (0.0395)
record: (train_acc, test_acc) (0.6071000120043755, 0.6190000176429749)
last accs (train_acc, test_acc) (0.6081000103354454, 0.6020000576972961)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.74it/s] 15%|#5        | 4/26 [00:00<00:01, 17.02it/s] 27%|##6       | 7/26 [00:00<00:00, 22.15it/s] 42%|####2     | 11/26 [00:00<00:00, 26.04it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.53it/s] 85%|########4 | 22/26 [00:00<00:00, 28.71it/s] 96%|#########6| 25/26 [00:00<00:00, 28.38it/s]100%|##########| 26/26 [00:01<00:00, 24.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.001 (0.001)	train_nll   0.62 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.62 (  0.62)	train_minacc   0.60 (  0.65)	train_majacc   0.62 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 23%|##3       | 6/26 [00:00<00:00, 28.56it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.56it/s] 42%|####2     | 11/26 [00:00<00:00, 36.90it/s] 62%|######1   | 16/26 [00:00<00:00, 40.10it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.10it/s] 81%|########  | 21/26 [00:00<00:00, 42.80it/s]100%|##########| 26/26 [00:00<00:00, 37.14it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.59 (  0.59)	test_minacc   0.62 (  0.62)	test_majacc   0.59 (  0.59)	Loss_d 0.644 (0.644)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.638 (0.636)	test_acc   0.62 (  0.62)	test_minacc   0.72 (  0.67)	test_majacc   0.60 (  0.61)	Loss_d 0.638 (0.636)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.72 (  0.67)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.24 (  0.24)
Test: [  20/  26]	Loss 0.628 (0.634)	test_acc   0.65 (  0.62)	test_minacc   0.62 (  0.65)	test_majacc   0.65 (  0.61)	Loss_d 0.628 (0.634)	test_acc_d   0.65 (  0.62)	test_minacc_d   0.62 (  0.65)	test_majacc_d   0.65 (  0.61)	test_corr_d   0.27 (  0.25)
Test: [  26/  26]	Loss 0.613 (0.634)	test_acc   0.63 (  0.61)	test_minacc   0.75 (  0.65)	test_majacc   0.61 (  0.61)	Loss_d 0.613 (0.634)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.75 (  0.65)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.29 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.47it/s]
Test: [  0/  1]	Loss 0.675 (0.675)	test_acc   0.63 (  0.63)	test_minacc   0.63 (  0.63)	test_majacc   0.62 (  0.62)	Loss_d 0.675 (0.675)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 0.675 (0.675)	test_acc   0.63 (  0.63)	test_minacc   0.63 (  0.63)	test_majacc   0.62 (  0.62)	Loss_d 0.675 (0.675)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.17 ( -0.17)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[ 38/  1]	epoch_time 0.0408 (0.0411)	validation_time 0.0005 (0.0010)	train_time 0.0403 (0.0395)
record: (train_acc, test_acc) (0.6143000057339668, 0.6310000419616699)
last accs (train_acc, test_acc) (0.6143000057339668, 0.6310000419616699)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 15%|#5        | 4/26 [00:00<00:01, 17.00it/s] 27%|##6       | 7/26 [00:00<00:00, 20.99it/s] 38%|###8      | 10/26 [00:00<00:00, 23.87it/s] 50%|#####     | 13/26 [00:00<00:00, 25.47it/s] 62%|######1   | 16/26 [00:00<00:00, 26.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.78it/s] 88%|########8 | 23/26 [00:00<00:00, 28.01it/s]100%|##########| 26/26 [00:01<00:00, 24.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.004 (0.004)	train_nll   0.60 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.65 (  0.62)	train_minacc   0.60 (  0.58)	train_majacc   0.66 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.28it/s] 27%|##6       | 7/26 [00:00<00:00, 34.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.53it/s] 46%|####6     | 12/26 [00:00<00:00, 40.77it/s] 65%|######5   | 17/26 [00:00<00:00, 42.64it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.64it/s] 88%|########8 | 23/26 [00:00<00:00, 47.69it/s]100%|##########| 26/26 [00:00<00:00, 39.38it/s]
Test: [   0/  26]	Loss 0.617 (0.617)	test_acc   0.66 (  0.66)	test_minacc   0.62 (  0.62)	test_majacc   0.67 (  0.67)	Loss_d 0.617 (0.617)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.610 (0.612)	test_acc   0.65 (  0.66)	test_minacc   0.57 (  0.58)	test_majacc   0.66 (  0.68)	Loss_d 0.610 (0.612)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.66 (  0.68)	test_corr_d   0.40 (  0.40)
Test: [  20/  26]	Loss 0.605 (0.611)	test_acc   0.64 (  0.66)	test_minacc   0.48 (  0.57)	test_majacc   0.67 (  0.68)	Loss_d 0.605 (0.611)	test_acc_d   0.64 (  0.66)	test_minacc_d   0.48 (  0.57)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.42 (  0.41)
Test: [  26/  26]	Loss 0.591 (0.611)	test_acc   0.65 (  0.66)	test_minacc   0.53 (  0.57)	test_majacc   0.67 (  0.67)	Loss_d 0.591 (0.611)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.53 (  0.57)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.45 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.98it/s]
Test: [  0/  1]	Loss 0.730 (0.730)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.730 (0.730)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.730 (0.730)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.730 (0.730)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.05 (  0.05)
Overall Timing[ 39/  1]	epoch_time 0.0389 (0.0410)	validation_time 0.0005 (0.0010)	train_time 0.0383 (0.0395)
record: (train_acc, test_acc) (0.6143000057339668, 0.6310000419616699)
last accs (train_acc, test_acc) (0.65880002450943, 0.5680000185966492)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.07it/s] 15%|#5        | 4/26 [00:00<00:01, 16.03it/s] 27%|##6       | 7/26 [00:00<00:00, 20.17it/s] 42%|####2     | 11/26 [00:00<00:00, 24.15it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.45it/s] 88%|########8 | 23/26 [00:00<00:00, 27.89it/s]100%|##########| 26/26 [00:01<00:00, 27.79it/s]100%|##########| 26/26 [00:01<00:00, 23.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.001 (0.002)	train_nll   0.62 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.62 (  0.61)	train_minacc   0.62 (  0.61)	train_majacc   0.62 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.53it/s] 27%|##6       | 7/26 [00:00<00:00, 34.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.46it/s] 50%|#####     | 13/26 [00:00<00:00, 41.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.93it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.93it/s] 92%|#########2| 24/26 [00:00<00:00, 46.60it/s]100%|##########| 26/26 [00:00<00:00, 38.50it/s]
Test: [   0/  26]	Loss 0.624 (0.624)	test_acc   0.66 (  0.66)	test_minacc   0.62 (  0.62)	test_majacc   0.67 (  0.67)	Loss_d 0.624 (0.624)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.623 (0.624)	test_acc   0.65 (  0.65)	test_minacc   0.60 (  0.65)	test_majacc   0.65 (  0.65)	Loss_d 0.623 (0.624)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.60 (  0.65)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.30 (  0.29)
Test: [  20/  26]	Loss 0.619 (0.623)	test_acc   0.67 (  0.64)	test_minacc   0.58 (  0.63)	test_majacc   0.68 (  0.64)	Loss_d 0.619 (0.623)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.58 (  0.63)	test_majacc_d   0.68 (  0.64)	test_corr_d   0.32 (  0.30)
Test: [  26/  26]	Loss 0.610 (0.623)	test_acc   0.66 (  0.64)	test_minacc   0.68 (  0.63)	test_majacc   0.65 (  0.64)	Loss_d 0.610 (0.623)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.68 (  0.63)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.33 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.91it/s]
Test: [  0/  1]	Loss 0.679 (0.679)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.66 (  0.66)	Loss_d 0.679 (0.679)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.679 (0.679)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.66 (  0.66)	Loss_d 0.679 (0.679)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 40/  1]	epoch_time 0.0390 (0.0410)	validation_time 0.0004 (0.0010)	train_time 0.0386 (0.0395)
record: (train_acc, test_acc) (0.6143000057339668, 0.6310000419616699)
last accs (train_acc, test_acc) (0.6401000179052353, 0.6130000352859497)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.01it/s] 15%|#5        | 4/26 [00:00<00:01, 18.24it/s] 27%|##6       | 7/26 [00:00<00:00, 22.00it/s] 42%|####2     | 11/26 [00:00<00:00, 25.78it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.72it/s] 65%|######5   | 17/26 [00:00<00:00, 27.53it/s] 81%|########  | 21/26 [00:00<00:00, 28.58it/s] 96%|#########6| 25/26 [00:00<00:00, 29.69it/s]100%|##########| 26/26 [00:01<00:00, 25.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.82)	train_acc   0.60 (  0.62)	train_minacc   0.57 (  0.64)	train_majacc   0.61 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 27%|##6       | 7/26 [00:00<00:00, 30.16it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.16it/s] 46%|####6     | 12/26 [00:00<00:00, 37.41it/s] 65%|######5   | 17/26 [00:00<00:00, 40.08it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.08it/s] 88%|########8 | 23/26 [00:00<00:00, 45.69it/s]100%|##########| 26/26 [00:00<00:00, 37.22it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.64 (  0.64)	test_minacc   0.60 (  0.60)	test_majacc   0.64 (  0.64)	Loss_d 0.636 (0.636)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.635 (0.632)	test_acc   0.64 (  0.64)	test_minacc   0.60 (  0.64)	test_majacc   0.65 (  0.64)	Loss_d 0.635 (0.632)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.60 (  0.64)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.28 (  0.27)
Test: [  20/  26]	Loss 0.630 (0.631)	test_acc   0.64 (  0.64)	test_minacc   0.56 (  0.62)	test_majacc   0.65 (  0.64)	Loss_d 0.630 (0.631)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.56 (  0.62)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.30 (  0.28)
Test: [  26/  26]	Loss 0.626 (0.631)	test_acc   0.61 (  0.64)	test_minacc   0.60 (  0.62)	test_majacc   0.61 (  0.64)	Loss_d 0.626 (0.631)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.60 (  0.62)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.30 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 43.81it/s]
Test: [  0/  1]	Loss 0.675 (0.675)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.65 (  0.65)	Loss_d 0.675 (0.675)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.675 (0.675)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.65 (  0.65)	Loss_d 0.675 (0.675)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 41/  1]	epoch_time 0.0450 (0.0411)	validation_time 0.0005 (0.0010)	train_time 0.0445 (0.0396)
record: (train_acc, test_acc) (0.6143000057339668, 0.6310000419616699)
last accs (train_acc, test_acc) (0.637600014090538, 0.6140000224113464)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.32it/s] 15%|#5        | 4/26 [00:00<00:01, 18.16it/s] 27%|##6       | 7/26 [00:00<00:00, 22.35it/s] 42%|####2     | 11/26 [00:00<00:00, 25.59it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.89it/s] 65%|######5   | 17/26 [00:00<00:00, 27.32it/s] 81%|########  | 21/26 [00:00<00:00, 28.55it/s] 96%|#########6| 25/26 [00:00<00:00, 29.24it/s]100%|##########| 26/26 [00:01<00:00, 25.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.61 (  0.60)	train_minacc   0.73 (  0.62)	train_majacc   0.59 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 27%|##6       | 7/26 [00:00<00:00, 33.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.39it/s] 50%|#####     | 13/26 [00:00<00:00, 39.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.87it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.87it/s] 96%|#########6| 25/26 [00:00<00:00, 47.19it/s]100%|##########| 26/26 [00:00<00:00, 39.90it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.62 (  0.62)	Loss_d 0.640 (0.640)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.644 (0.640)	test_acc   0.63 (  0.62)	test_minacc   0.64 (  0.65)	test_majacc   0.63 (  0.62)	Loss_d 0.644 (0.640)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.64 (  0.65)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.24 (  0.23)
Test: [  20/  26]	Loss 0.643 (0.640)	test_acc   0.64 (  0.62)	test_minacc   0.60 (  0.64)	test_majacc   0.64 (  0.62)	Loss_d 0.643 (0.640)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.60 (  0.64)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.26 (  0.24)
Test: [  26/  26]	Loss 0.634 (0.639)	test_acc   0.63 (  0.62)	test_minacc   0.65 (  0.64)	test_majacc   0.62 (  0.62)	Loss_d 0.634 (0.639)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.65 (  0.64)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.26 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.34it/s]
Test: [  0/  1]	Loss 0.665 (0.665)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.63 (  0.63)	Loss_d 0.665 (0.665)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.18 ( -0.18)
Test: [  1/  1]	Loss 0.665 (0.665)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.63 (  0.63)	Loss_d 0.665 (0.665)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.18 ( -0.18)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/22/checkpoints/model_best.pth
Overall Timing[ 42/  1]	epoch_time 0.0433 (0.0411)	validation_time 0.0069 (0.0011)	train_time 0.0362 (0.0395)
record: (train_acc, test_acc) (0.6208000167608261, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6208000167608261, 0.6490000486373901)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 15%|#5        | 4/26 [00:00<00:01, 15.92it/s] 27%|##6       | 7/26 [00:00<00:00, 20.74it/s] 42%|####2     | 11/26 [00:00<00:00, 24.68it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.29it/s] 65%|######5   | 17/26 [00:00<00:00, 26.76it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.13it/s] 88%|########8 | 23/26 [00:00<00:00, 27.75it/s]100%|##########| 26/26 [00:01<00:00, 23.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1118 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1119 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1120 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1121 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1122 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1123 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1124 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1125 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1126 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1127 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1128 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1129 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1130 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1131 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1132 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1133 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1134 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1135 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1136 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1137 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1138 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1139 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1140 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1141 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1142 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1143 364.00000000000006
constrain score by whole: 0
Epoch: [43][  26/  26]	Loss 0.002 (0.001)	train_nll   0.62 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.62 (  0.61)	train_minacc   0.68 (  0.62)	train_majacc   0.60 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 27%|##6       | 7/26 [00:00<00:00, 28.98it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.98it/s] 50%|#####     | 13/26 [00:00<00:00, 38.25it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.93it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.93it/s] 96%|#########6| 25/26 [00:00<00:00, 44.48it/s]100%|##########| 26/26 [00:00<00:00, 36.92it/s]
Test: [   0/  26]	Loss 0.615 (0.615)	test_acc   0.65 (  0.65)	test_minacc   0.56 (  0.56)	test_majacc   0.66 (  0.66)	Loss_d 0.615 (0.615)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.646 (0.640)	test_acc   0.59 (  0.61)	test_minacc   0.49 (  0.57)	test_majacc   0.60 (  0.62)	Loss_d 0.646 (0.640)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.49 (  0.57)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.29 (  0.29)
Test: [  20/  26]	Loss 0.646 (0.639)	test_acc   0.60 (  0.62)	test_minacc   0.56 (  0.59)	test_majacc   0.61 (  0.62)	Loss_d 0.646 (0.639)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.56 (  0.59)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.31 (  0.30)
Test: [  26/  26]	Loss 0.638 (0.638)	test_acc   0.63 (  0.62)	test_minacc   0.55 (  0.59)	test_majacc   0.65 (  0.63)	Loss_d 0.638 (0.638)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.55 (  0.59)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.33 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.18it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.61 (  0.61)	Loss_d 0.701 (0.701)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.61 (  0.61)	Loss_d 0.701 (0.701)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.09 ( -0.09)
Overall Timing[ 43/  1]	epoch_time 0.0425 (0.0412)	validation_time 0.0007 (0.0011)	train_time 0.0418 (0.0396)
record: (train_acc, test_acc) (0.6208000167608261, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6216000087857246, 0.5600000023841858)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.48it/s] 15%|#5        | 4/26 [00:00<00:01, 16.38it/s] 27%|##6       | 7/26 [00:00<00:00, 21.16it/s] 42%|####2     | 11/26 [00:00<00:00, 25.10it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.23it/s] 69%|######9   | 18/26 [00:00<00:00, 27.93it/s] 81%|########  | 21/26 [00:00<00:00, 27.84it/s] 92%|#########2| 24/26 [00:00<00:00, 27.78it/s]100%|##########| 26/26 [00:01<00:00, 24.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1144 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1145 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1146 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1147 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1148 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1149 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1150 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1151 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1152 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1153 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1154 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1155 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1156 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1157 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1158 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1159 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1160 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1161 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1162 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1163 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1164 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1165 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1166 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1167 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1168 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1169 364.00000000000006
constrain score by whole: 0
Epoch: [44][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.60 (  0.61)	train_minacc   0.65 (  0.63)	train_majacc   0.59 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.28it/s] 19%|#9        | 5/26 [00:00<00:00, 26.66it/s]                                               19%|#9        | 5/26 [00:00<00:00, 26.66it/s] 42%|####2     | 11/26 [00:00<00:00, 39.66it/s] 65%|######5   | 17/26 [00:00<00:00, 44.24it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.24it/s] 88%|########8 | 23/26 [00:00<00:00, 48.15it/s]100%|##########| 26/26 [00:00<00:00, 39.56it/s]
Test: [   0/  26]	Loss 0.620 (0.620)	test_acc   0.65 (  0.65)	test_minacc   0.62 (  0.62)	test_majacc   0.65 (  0.65)	Loss_d 0.620 (0.620)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.625 (0.625)	test_acc   0.62 (  0.63)	test_minacc   0.55 (  0.63)	test_majacc   0.62 (  0.62)	Loss_d 0.625 (0.625)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.55 (  0.63)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.29 (  0.28)
Test: [  20/  26]	Loss 0.625 (0.624)	test_acc   0.64 (  0.62)	test_minacc   0.58 (  0.61)	test_majacc   0.64 (  0.63)	Loss_d 0.625 (0.624)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.58 (  0.61)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.32 (  0.29)
Test: [  26/  26]	Loss 0.617 (0.624)	test_acc   0.62 (  0.62)	test_minacc   0.55 (  0.62)	test_majacc   0.63 (  0.62)	Loss_d 0.617 (0.624)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.55 (  0.62)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.32 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.06it/s]
Test: [  0/  1]	Loss 0.687 (0.687)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.62 (  0.62)	Loss_d 0.687 (0.687)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.687 (0.687)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.62 (  0.62)	Loss_d 0.687 (0.687)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 44/  1]	epoch_time 0.0430 (0.0412)	validation_time 0.0005 (0.0011)	train_time 0.0425 (0.0396)
record: (train_acc, test_acc) (0.6208000167608261, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6216000139713287, 0.6160000562667847)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 15%|#5        | 4/26 [00:00<00:01, 15.70it/s] 27%|##6       | 7/26 [00:00<00:00, 19.65it/s] 38%|###8      | 10/26 [00:00<00:00, 21.64it/s] 50%|#####     | 13/26 [00:00<00:00, 23.57it/s] 65%|######5   | 17/26 [00:00<00:00, 26.05it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.07it/s] 88%|########8 | 23/26 [00:00<00:00, 27.26it/s]100%|##########| 26/26 [00:01<00:00, 27.56it/s]100%|##########| 26/26 [00:01<00:00, 22.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1170 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1171 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1172 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1173 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1174 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1175 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1176 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1177 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1178 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1179 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1180 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1181 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1182 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1183 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1184 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1185 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1186 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1187 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1188 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1189 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1190 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1191 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1192 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1193 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1194 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1195 364.00000000000006
constrain score by whole: 0
Epoch: [45][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.59 (  0.61)	train_minacc   0.65 (  0.62)	train_majacc   0.58 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.84it/s] 27%|##6       | 7/26 [00:00<00:00, 34.47it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.47it/s] 46%|####6     | 12/26 [00:00<00:00, 40.54it/s] 65%|######5   | 17/26 [00:00<00:00, 42.27it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.27it/s] 88%|########8 | 23/26 [00:00<00:00, 46.23it/s]100%|##########| 26/26 [00:00<00:00, 40.29it/s]
Test: [   0/  26]	Loss 0.661 (0.661)	test_acc   0.55 (  0.55)	test_minacc   0.69 (  0.69)	test_majacc   0.53 (  0.53)	Loss_d 0.661 (0.661)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.655 (0.651)	test_acc   0.59 (  0.60)	test_minacc   0.74 (  0.67)	test_majacc   0.57 (  0.59)	Loss_d 0.655 (0.651)	test_acc_d   0.59 (  0.60)	test_minacc_d   0.74 (  0.67)	test_majacc_d   0.57 (  0.59)	test_corr_d   0.18 (  0.20)
Test: [  20/  26]	Loss 0.648 (0.650)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.64)	test_majacc   0.60 (  0.59)	Loss_d 0.648 (0.650)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.64)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.23 (  0.21)
Test: [  26/  26]	Loss 0.637 (0.651)	test_acc   0.58 (  0.59)	test_minacc   0.70 (  0.64)	test_majacc   0.56 (  0.58)	Loss_d 0.637 (0.651)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.70 (  0.64)	test_majacc_d   0.56 (  0.58)	test_corr_d   0.22 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.09it/s]
Test: [  0/  1]	Loss 0.671 (0.671)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.60 (  0.60)	Loss_d 0.671 (0.671)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.20 ( -0.20)
Test: [  1/  1]	Loss 0.671 (0.671)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.60 (  0.60)	Loss_d 0.671 (0.671)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.20 ( -0.20)
Overall Timing[ 45/  1]	epoch_time 0.0402 (0.0412)	validation_time 0.0007 (0.0011)	train_time 0.0394 (0.0396)
record: (train_acc, test_acc) (0.6208000167608261, 0.6490000486373901)
last accs (train_acc, test_acc) (0.5929000121355057, 0.609000027179718)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 15%|#5        | 4/26 [00:00<00:01, 16.51it/s] 27%|##6       | 7/26 [00:00<00:00, 20.77it/s] 38%|###8      | 10/26 [00:00<00:00, 23.54it/s] 50%|#####     | 13/26 [00:00<00:00, 25.01it/s] 62%|######1   | 16/26 [00:00<00:00, 26.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.32it/s] 85%|########4 | 22/26 [00:00<00:00, 26.88it/s] 96%|#########6| 25/26 [00:01<00:00, 27.08it/s]100%|##########| 26/26 [00:01<00:00, 23.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1196 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1197 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1198 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1199 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1200 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1201 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1202 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1203 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1204 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1205 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1206 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1207 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1208 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1209 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1210 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1211 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1212 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1213 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1214 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1215 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1216 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1217 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1218 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1219 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1220 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1221 364.00000000000006
constrain score by whole: 0
Epoch: [46][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.62 (  0.60)	train_minacc   0.60 (  0.63)	train_majacc   0.62 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.66it/s] 23%|##3       | 6/26 [00:00<00:00, 29.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.14it/s] 46%|####6     | 12/26 [00:00<00:00, 40.01it/s] 65%|######5   | 17/26 [00:00<00:00, 41.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.94it/s] 88%|########8 | 23/26 [00:00<00:00, 46.95it/s]100%|##########| 26/26 [00:00<00:00, 38.78it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.62 (  0.62)	test_minacc   0.58 (  0.58)	test_majacc   0.63 (  0.63)	Loss_d 0.639 (0.639)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.651 (0.645)	test_acc   0.60 (  0.61)	test_minacc   0.51 (  0.61)	test_majacc   0.61 (  0.61)	Loss_d 0.651 (0.645)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.51 (  0.61)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.22 (  0.23)
Test: [  20/  26]	Loss 0.646 (0.644)	test_acc   0.60 (  0.61)	test_minacc   0.54 (  0.61)	test_majacc   0.61 (  0.61)	Loss_d 0.646 (0.644)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.54 (  0.61)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.26 (  0.25)
Test: [  26/  26]	Loss 0.636 (0.644)	test_acc   0.62 (  0.61)	test_minacc   0.60 (  0.62)	test_majacc   0.63 (  0.61)	Loss_d 0.636 (0.644)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.60 (  0.62)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.28 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.34it/s]
Test: [  0/  1]	Loss 0.674 (0.674)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.59 (  0.59)	Loss_d 0.674 (0.674)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.15 ( -0.15)
Test: [  1/  1]	Loss 0.674 (0.674)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.59 (  0.59)	Loss_d 0.674 (0.674)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.15 ( -0.15)
Overall Timing[ 46/  1]	epoch_time 0.0503 (0.0414)	validation_time 0.0031 (0.0011)	train_time 0.0472 (0.0398)
record: (train_acc, test_acc) (0.6208000167608261, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6087000126242638, 0.6360000371932983)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 15%|#5        | 4/26 [00:00<00:01, 17.31it/s] 27%|##6       | 7/26 [00:00<00:00, 21.81it/s] 42%|####2     | 11/26 [00:00<00:00, 25.62it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.88it/s] 65%|######5   | 17/26 [00:00<00:00, 27.60it/s] 81%|########  | 21/26 [00:00<00:00, 28.24it/s] 96%|#########6| 25/26 [00:00<00:00, 28.81it/s]100%|##########| 26/26 [00:01<00:00, 24.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1222 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1223 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1224 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1225 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1226 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1227 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1228 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1229 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1230 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1231 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1232 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1233 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1234 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1235 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1236 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1237 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1238 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1239 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1240 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1241 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1242 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1243 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1244 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1245 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1246 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1247 364.00000000000006
constrain score by whole: 0
Epoch: [47][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.58 (  0.59)	train_minacc   0.68 (  0.65)	train_majacc   0.56 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.12it/s] 23%|##3       | 6/26 [00:00<00:00, 21.00it/s]                                               23%|##3       | 6/26 [00:00<00:00, 21.00it/s] 46%|####6     | 12/26 [00:00<00:00, 33.07it/s] 65%|######5   | 17/26 [00:00<00:00, 36.94it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.94it/s] 88%|########8 | 23/26 [00:00<00:00, 42.66it/s]100%|##########| 26/26 [00:00<00:00, 32.35it/s]
Test: [   0/  26]	Loss 0.650 (0.650)	test_acc   0.63 (  0.63)	test_minacc   0.67 (  0.67)	test_majacc   0.62 (  0.62)	Loss_d 0.650 (0.650)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.657 (0.655)	test_acc   0.58 (  0.60)	test_minacc   0.60 (  0.66)	test_majacc   0.58 (  0.59)	Loss_d 0.657 (0.655)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.60 (  0.66)	test_majacc_d   0.58 (  0.59)	test_corr_d   0.19 (  0.18)
Test: [  20/  26]	Loss 0.659 (0.653)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.64)	test_majacc   0.60 (  0.59)	Loss_d 0.659 (0.653)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.64)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.647 (0.653)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.65)	test_majacc   0.61 (  0.59)	Loss_d 0.647 (0.653)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.65)	test_majacc_d   0.61 (  0.59)	test_corr_d   0.22 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.66it/s]
Test: [  0/  1]	Loss 0.665 (0.665)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.56 (  0.56)	Loss_d 0.665 (0.665)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.19 ( -0.19)
Test: [  1/  1]	Loss 0.665 (0.665)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.56 (  0.56)	Loss_d 0.665 (0.665)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.19 ( -0.19)
Overall Timing[ 47/  1]	epoch_time 0.0480 (0.0415)	validation_time 0.0005 (0.0011)	train_time 0.0474 (0.0400)
record: (train_acc, test_acc) (0.6208000167608261, 0.6490000486373901)
last accs (train_acc, test_acc) (0.5981000102162362, 0.6300000548362732)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.90it/s] 15%|#5        | 4/26 [00:00<00:01, 17.19it/s] 27%|##6       | 7/26 [00:00<00:00, 21.48it/s] 38%|###8      | 10/26 [00:00<00:00, 24.13it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.36it/s] 65%|######5   | 17/26 [00:00<00:00, 27.01it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.77it/s] 88%|########8 | 23/26 [00:00<00:00, 27.72it/s]100%|##########| 26/26 [00:01<00:00, 28.37it/s]100%|##########| 26/26 [00:01<00:00, 24.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1248 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1249 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1250 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1251 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1252 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1253 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1254 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1255 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1256 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1257 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1258 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1259 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1260 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1261 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1262 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1263 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1264 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1265 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1266 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1267 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1268 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1269 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1270 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1271 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1272 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1273 364.00000000000006
constrain score by whole: 0
Epoch: [48][  26/  26]	Loss 0.001 (0.003)	train_nll   0.62 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.81)	train_acc   0.65 (  0.60)	train_minacc   0.57 (  0.57)	train_majacc   0.66 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.41it/s] 27%|##6       | 7/26 [00:00<00:00, 34.95it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.95it/s] 50%|#####     | 13/26 [00:00<00:00, 41.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.42it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.42it/s] 96%|#########6| 25/26 [00:00<00:00, 48.15it/s]100%|##########| 26/26 [00:00<00:00, 41.01it/s]
Test: [   0/  26]	Loss 0.624 (0.624)	test_acc   0.65 (  0.65)	test_minacc   0.48 (  0.48)	test_majacc   0.67 (  0.67)	Loss_d 0.624 (0.624)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.662 (0.656)	test_acc   0.59 (  0.61)	test_minacc   0.47 (  0.56)	test_majacc   0.61 (  0.62)	Loss_d 0.662 (0.656)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.47 (  0.56)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.30 (  0.29)
Test: [  20/  26]	Loss 0.661 (0.654)	test_acc   0.59 (  0.62)	test_minacc   0.54 (  0.56)	test_majacc   0.60 (  0.63)	Loss_d 0.661 (0.654)	test_acc_d   0.59 (  0.62)	test_minacc_d   0.54 (  0.56)	test_majacc_d   0.60 (  0.63)	test_corr_d   0.33 (  0.31)
Test: [  26/  26]	Loss 0.660 (0.653)	test_acc   0.62 (  0.62)	test_minacc   0.53 (  0.56)	test_majacc   0.63 (  0.63)	Loss_d 0.660 (0.653)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.53 (  0.56)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.29 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.78it/s]
Test: [  0/  1]	Loss 0.712 (0.712)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.58 (  0.58)	Loss_d 0.712 (0.712)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.712 (0.712)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.58 (  0.58)	Loss_d 0.712 (0.712)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 48/  1]	epoch_time 0.0398 (0.0415)	validation_time 0.0009 (0.0011)	train_time 0.0388 (0.0399)
record: (train_acc, test_acc) (0.6208000167608261, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6184000142812729, 0.5190000534057617)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.66it/s] 15%|#5        | 4/26 [00:00<00:01, 17.31it/s] 27%|##6       | 7/26 [00:00<00:00, 22.11it/s] 42%|####2     | 11/26 [00:00<00:00, 25.78it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.02it/s] 65%|######5   | 17/26 [00:00<00:00, 27.92it/s] 81%|########  | 21/26 [00:00<00:00, 28.80it/s] 96%|#########6| 25/26 [00:00<00:00, 28.60it/s]100%|##########| 26/26 [00:01<00:00, 24.73it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1274 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1275 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1276 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1277 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1278 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1279 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1280 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1281 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1282 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1283 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1284 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1285 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1286 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1287 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1288 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1289 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1290 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1291 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1292 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1293 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1294 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1295 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1296 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1297 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1298 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1299 364.00000000000006
constrain score by whole: 0
Epoch: [49][  26/  26]	Loss 0.001 (0.002)	train_nll   0.61 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.63 (  0.63)	train_minacc   0.60 (  0.61)	train_majacc   0.63 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.71it/s] 23%|##3       | 6/26 [00:00<00:00, 31.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.27it/s] 42%|####2     | 11/26 [00:00<00:00, 39.15it/s] 65%|######5   | 17/26 [00:00<00:00, 41.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.35it/s] 88%|########8 | 23/26 [00:00<00:00, 46.04it/s]100%|##########| 26/26 [00:00<00:00, 38.01it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.57 (  0.57)	test_minacc   0.69 (  0.69)	test_majacc   0.55 (  0.55)	Loss_d 0.648 (0.648)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.623 (0.629)	test_acc   0.63 (  0.62)	test_minacc   0.77 (  0.63)	test_majacc   0.61 (  0.61)	Loss_d 0.623 (0.629)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.77 (  0.63)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.33 (  0.33)
Test: [  20/  26]	Loss 0.618 (0.628)	test_acc   0.63 (  0.62)	test_minacc   0.56 (  0.61)	test_majacc   0.64 (  0.62)	Loss_d 0.618 (0.628)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.56 (  0.61)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.37 (  0.34)
Test: [  26/  26]	Loss 0.614 (0.629)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.61)	test_majacc   0.60 (  0.61)	Loss_d 0.614 (0.629)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.34 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.36it/s]
Test: [  0/  1]	Loss 0.744 (0.744)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.744 (0.744)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.744 (0.744)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.744 (0.744)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 49/  1]	epoch_time 0.0526 (0.0417)	validation_time 0.0005 (0.0011)	train_time 0.0521 (0.0402)
record: (train_acc, test_acc) (0.6208000167608261, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6121000084280968, 0.5820000171661377)
wandb: - 0.160 MB of 0.160 MB uploadedwandb: \ 0.160 MB of 0.160 MB uploadedwandb: | 0.160 MB of 0.160 MB uploadedwandb: / 0.160 MB of 0.160 MB uploadedwandb: - 0.160 MB of 0.160 MB uploadedwandb: \ 0.181 MB of 0.181 MB uploaded (0.003 MB deduped)wandb: | 0.564 MB of 0.564 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/diagnostics/epoch_time_val █▁▁▁▁▁▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▂▁▁▁▁▂▂▁▁▁▁▁▂▂▂▁▃▂▃
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/diagnostics/train_time_val █▁▁▁▁▂▂▁▂▁▁▃▂▁▂▁▂▂▂▁▂▂▂▁▂▂▃▂▂▂▁▂▂▃▁▂▂▄▄▅
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/diagnostics/validation_time_val █▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁▄▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/Loss_avg ▇▁▄▂▄▆▅▅▃▅▄▃▄▃▃▇▃▄▄█▃▄▄▂▂▂▂▄▂▁▁▁▂▂▁▂▁▁▁▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/Loss_d_avg ▇▁▄▂▄▆▅▅▃▅▄▃▄▃▃▇▃▄▄█▃▄▄▂▂▂▂▄▂▁▁▁▂▂▁▂▁▁▁▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/Loss_d_val ▇▁▄▂▄▆▅▅▃▅▄▃▄▃▃▇▃▄▄█▃▄▄▂▂▂▂▄▂▁▁▁▂▂▁▂▁▁▁▃
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/Loss_val ▇▁▄▂▄▆▅▅▃▅▄▃▄▃▃▇▃▄▄█▃▄▄▂▂▂▂▄▂▁▁▁▂▂▁▂▁▁▁▃
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_acc_avg ▂▇▃█▁▁▄▃▆▅▅▆▅▃▆▂▆▄▆▃▄▃▄▆▆▆▆▂▇▇▆▇▇▇█▅▇▇▇▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_acc_d_avg ▂▇▃█▁▁▄▃▆▅▅▆▅▃▆▂▆▄▆▃▄▃▄▆▆▆▆▂▇▇▆▇▇▇█▅▇▇▇▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_acc_d_val ▂▇▃█▁▁▄▃▆▅▅▆▅▃▆▂▆▄▆▃▄▃▄▆▆▆▆▂▇▇▆▇▇▇█▅▇▇▇▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_acc_val ▂▇▃█▁▁▄▃▆▅▅▆▅▃▆▂▆▄▆▃▄▃▄▆▆▆▆▂▇▇▆▇▇▇█▅▇▇▇▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_corr_d_avg █▁▅▂█▇▆▆▄▅▅▅▄▄▃▇▄▅▄▆▃▅▄▂▃▃▃▇▂▁▂▂▂▂▂▃▂▂▂▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_corr_d_val █▁▅▂█▇▆▆▄▅▅▅▄▄▃▇▄▅▄▆▃▅▄▂▃▃▃▇▂▁▂▂▂▂▂▃▂▂▂▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_majacc_avg ▇▂▅▂▄▆▄▅▂▄▃▂▄▃▃▇▄▆▄▆▁▅▂▃▃▄▄█▄▂▃▃▄▄▄▃▃▃▂▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_majacc_d_avg ▇▂▅▂▄▆▄▅▂▄▃▂▄▃▃▇▄▆▄▆▁▅▂▃▃▄▄█▄▂▃▃▄▄▄▃▃▃▂▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_majacc_d_val ▇▂▅▂▄▆▄▅▂▄▃▂▄▃▃▇▄▆▄▆▁▅▂▃▃▄▄█▄▂▃▃▄▄▄▃▃▃▂▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_majacc_val ▇▂▅▂▄▆▄▅▂▄▃▂▄▃▃▇▄▆▄▆▁▅▂▃▃▄▄█▄▂▃▃▄▄▄▃▃▃▂▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_minacc_avg ▁▇▃█▁▁▄▃▆▅▅▆▅▄▆▂▆▄▅▃▄▃▄▆▆▆▆▂▇▇▆▇▇▇█▅▇▇▇▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_minacc_d_avg ▁▇▃█▁▁▄▃▆▅▅▆▅▄▆▂▆▄▅▃▄▃▄▆▆▆▆▂▇▇▆▇▇▇█▅▇▇▇▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_minacc_d_val ▁▇▃█▁▁▄▃▆▅▅▆▅▄▆▂▆▄▅▃▄▃▄▆▆▆▆▂▇▇▆▇▇▇█▅▇▇▇▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_minacc_val ▁▇▃█▁▁▄▃▆▅▅▆▅▄▆▂▆▄▅▃▄▃▄▆▆▆▆▂▇▇▆▇▇▇█▅▇▇▇▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/Loss_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/Loss_val ▂▁▁▁▂▂▂▁▁▁▁▁▁▁▁█▁▁▁▁▂▁▅▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_acc_avg █▅▆▆▅▄▅▃▄▃▂▃▂▃▄▂▄▂▃▃▃▁▃▄▄▃▃▄▄▃▂▃▃▃▂▃▃▂▂▃
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_acc_val ▇▅▇█▆▆▇▄▄▆▄▃▃▄▅▇▆▇▇█▁▆▁▅▅▄▅▇▅▃▅▅▅▄▅▅▄▅▃▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_majacc_avg █▄▆▅▃▃▄▂▃▂▂▂▂▃▄▂▃▂▃▂▃▁▂▃▃▂▂▄▃▂▂▂▂▂▂▂▂▁▁▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_majacc_val █▅▆▇▆▆▆▃▃▆▃▂▂▄▅▇▆▆▆█▁▆▁▅▅▄▅▇▅▂▅▄▄▄▃▄▃▄▂▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_minacc_avg ▁▆▄▆▇▅▇█▇█▇█▆▆▅▆▆▆▇▆▆▆▆▇▆▇▇▅▇███▇█▇▇▇██▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_minacc_val ▁▅▅▇▃▃▆▇▆▅▇▆▇▂▄▃▅▄▇▃▃▄▅▆▄▅▅▃▆▇▅▆▆▆█▇▇▆▇▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_nll_avg ▆▅▂▁▂▆▁▅▃▄▄▄▆▆▅▇▅▇▅▆▇█▆▅▅▇▇▅▆▇▇▇█▇▇▇▇▇█▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_nll_val ▁▅▄▂▄▄▂▄▅▂▃▄▅▆▄▄▄▅▂▁█▄█▄▅▅▄▃▄▅▅▄▄▄▅▄▅▅▅▄
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_penalty_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_penalty_val ▂▁▁▁▂▂▂▁▁▁▁▁▁▁▁█▁▁▁▁▂▁▅▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/weight_norm_avg █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/weight_norm_val █▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/diagnostics/epoch_time_val 0.05265
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/diagnostics/train_time_val 0.05211
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/diagnostics/validation_time_val 0.00051
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/Loss_avg 0.74359
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/Loss_d_avg 0.74359
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/Loss_d_val 0.74359
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/Loss_val 0.74359
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_acc_avg 0.582
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_acc_d_avg 0.582
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_acc_d_val 0.582
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_acc_val 0.582
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_corr_d_avg -0.06561
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_corr_d_val -0.06561
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_majacc_avg 0.59
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_majacc_d_avg 0.59
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_majacc_d_val 0.59
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_majacc_val 0.59
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_minacc_avg 0.58111
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_minacc_d_avg 0.58111
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_minacc_d_val 0.58111
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/test/test_minacc_val 0.58111
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/Loss_avg 0.00186
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/Loss_val 0.00112
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_acc_avg 0.628
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_acc_val 0.628
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_majacc_avg 0.63156
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_majacc_val 0.63333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_minacc_avg 0.60949
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_minacc_val 0.6
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_nll_avg 0.62845
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_nll_val 0.61153
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_penalty_avg 0.00101
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/train_penalty_val 0.00028
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/weight_norm_avg 7.80409
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/22/logs/train/weight_norm_val 7.80356
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/kdzls0wz
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240904_235102-kdzls0wz/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240904_235402-xhdiy5mb
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/xhdiy5mb
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, classes_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=13, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1227
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6021, 3, 32, 32) (5979, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:42,  1.72s/it] 15%|#5        | 4/26 [00:01<00:07,  2.83it/s] 31%|###       | 8/26 [00:01<00:02,  6.32it/s] 46%|####6     | 12/26 [00:02<00:01, 10.08it/s] 62%|######1   | 16/26 [00:02<00:00, 13.85it/s] 77%|#######6  | 20/26 [00:02<00:00, 17.37it/s] 92%|#########2| 24/26 [00:02<00:00, 20.52it/s]100%|##########| 26/26 [00:02<00:00,  9.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 13
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.008 (4.911)	train_nll   0.64 (  0.62)	train_penalty   0.01 (  0.25)	weight_norm   7.94 (  8.57)	train_acc   0.63 (  0.74)	train_minacc   0.41 (  0.25)	train_majacc   0.67 (  0.83)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.58it/s] 27%|##6       | 7/26 [00:00<00:00, 34.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.19it/s] 50%|#####     | 13/26 [00:00<00:00, 40.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.52it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.52it/s] 92%|#########2| 24/26 [00:00<00:00, 44.58it/s]100%|##########| 26/26 [00:00<00:00, 38.56it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.62 (  0.62)	test_minacc   0.39 (  0.39)	test_majacc   0.66 (  0.66)	Loss_d 0.609 (0.609)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.565 (0.598)	test_acc   0.70 (  0.65)	test_minacc   0.69 (  0.54)	test_majacc   0.70 (  0.67)	Loss_d 0.565 (0.598)	test_acc_d   0.70 (  0.65)	test_minacc_d   0.69 (  0.54)	test_majacc_d   0.70 (  0.67)	test_corr_d   0.51 (  0.53)
Test: [  20/  26]	Loss 0.616 (0.594)	test_acc   0.61 (  0.65)	test_minacc   0.46 (  0.55)	test_majacc   0.63 (  0.67)	Loss_d 0.616 (0.594)	test_acc_d   0.61 (  0.65)	test_minacc_d   0.46 (  0.55)	test_majacc_d   0.63 (  0.67)	test_corr_d   0.45 (  0.52)
Test: [  26/  26]	Loss 0.630 (0.596)	test_acc   0.64 (  0.65)	test_minacc   0.44 (  0.55)	test_majacc   0.68 (  0.67)	Loss_d 0.630 (0.596)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.44 (  0.55)	test_majacc_d   0.68 (  0.67)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.38it/s]100%|##########| 1/1 [00:00<00:00,  2.38it/s]
Test: [  0/  1]	Loss 0.788 (0.788)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.60 (  0.60)	Loss_d 0.788 (0.788)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 0.788 (0.788)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.60 (  0.60)	Loss_d 0.788 (0.788)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.21 (  0.21)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/23/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.1038 (0.1038)	validation_time 0.0074 (0.0074)	train_time 0.0695 (0.0695)
record: (train_acc, test_acc) (0.6536000235676765, 0.5120000243186951)
last accs (train_acc, test_acc) (0.6536000235676765, 0.5120000243186951)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.40it/s] 15%|#5        | 4/26 [00:00<00:01, 17.07it/s] 27%|##6       | 7/26 [00:00<00:00, 21.33it/s] 42%|####2     | 11/26 [00:00<00:00, 25.29it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.87it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.02it/s] 88%|########8 | 23/26 [00:00<00:00, 30.02it/s]100%|##########| 26/26 [00:01<00:00, 25.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.002 (0.006)	train_nll   0.59 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.83)	train_acc   0.69 (  0.65)	train_minacc   0.44 (  0.51)	train_majacc   0.74 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.90it/s] 27%|##6       | 7/26 [00:00<00:00, 31.21it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.21it/s] 50%|#####     | 13/26 [00:00<00:00, 38.70it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.88it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.88it/s] 96%|#########6| 25/26 [00:00<00:00, 47.19it/s]100%|##########| 26/26 [00:00<00:00, 38.52it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.70 (  0.70)	test_minacc   0.52 (  0.52)	test_majacc   0.73 (  0.73)	Loss_d 0.595 (0.595)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.612 (0.613)	test_acc   0.65 (  0.67)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.69)	Loss_d 0.612 (0.613)	test_acc_d   0.65 (  0.67)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.69)	test_corr_d   0.35 (  0.39)
Test: [  20/  26]	Loss 0.627 (0.607)	test_acc   0.68 (  0.68)	test_minacc   0.56 (  0.56)	test_majacc   0.70 (  0.70)	Loss_d 0.627 (0.607)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.38 (  0.40)
Test: [  26/  26]	Loss 0.618 (0.608)	test_acc   0.66 (  0.68)	test_minacc   0.41 (  0.57)	test_majacc   0.71 (  0.70)	Loss_d 0.618 (0.608)	test_acc_d   0.66 (  0.68)	test_minacc_d   0.41 (  0.57)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.43 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.53it/s]
Test: [  0/  1]	Loss 0.806 (0.806)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.72 (  0.72)	Loss_d 0.806 (0.806)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.806 (0.806)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.72 (  0.72)	Loss_d 0.806 (0.806)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.04 (  0.04)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/23/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0403 (0.0721)	validation_time 0.0005 (0.0040)	train_time 0.0396 (0.0546)
record: (train_acc, test_acc) (0.6773000263571739, 0.5440000295639038)
last accs (train_acc, test_acc) (0.6773000263571739, 0.5440000295639038)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 19%|#9        | 5/26 [00:00<00:01, 20.52it/s] 35%|###4      | 9/26 [00:00<00:00, 25.11it/s] 50%|#####     | 13/26 [00:00<00:00, 27.91it/s] 65%|######5   | 17/26 [00:00<00:00, 29.51it/s] 81%|########  | 21/26 [00:00<00:00, 30.64it/s] 96%|#########6| 25/26 [00:00<00:00, 30.80it/s]100%|##########| 26/26 [00:00<00:00, 26.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.007 (0.004)	train_nll   0.54 (  0.64)	train_penalty   0.01 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.72 (  0.64)	train_minacc   0.37 (  0.54)	train_majacc   0.79 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.44it/s] 23%|##3       | 6/26 [00:00<00:00, 27.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.24it/s] 42%|####2     | 11/26 [00:00<00:00, 35.99it/s] 65%|######5   | 17/26 [00:00<00:00, 43.43it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.43it/s] 85%|########4 | 22/26 [00:00<00:00, 44.26it/s]100%|##########| 26/26 [00:00<00:00, 37.69it/s]
Test: [   0/  26]	Loss 0.513 (0.513)	test_acc   0.75 (  0.75)	test_minacc   0.58 (  0.58)	test_majacc   0.78 (  0.78)	Loss_d 0.513 (0.513)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.59 (  0.59)
Test: [  10/  26]	Loss 0.548 (0.542)	test_acc   0.68 (  0.71)	test_minacc   0.47 (  0.51)	test_majacc   0.72 (  0.75)	Loss_d 0.548 (0.542)	test_acc_d   0.68 (  0.71)	test_minacc_d   0.47 (  0.51)	test_majacc_d   0.72 (  0.75)	test_corr_d   0.50 (  0.55)
Test: [  20/  26]	Loss 0.529 (0.544)	test_acc   0.75 (  0.71)	test_minacc   0.53 (  0.50)	test_majacc   0.79 (  0.75)	Loss_d 0.529 (0.544)	test_acc_d   0.75 (  0.71)	test_minacc_d   0.53 (  0.50)	test_majacc_d   0.79 (  0.75)	test_corr_d   0.58 (  0.55)
Test: [  26/  26]	Loss 0.553 (0.547)	test_acc   0.70 (  0.71)	test_minacc   0.44 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 0.553 (0.547)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.57 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.64it/s]
Test: [  0/  1]	Loss 0.886 (0.886)	test_acc   0.47 (  0.47)	test_minacc   0.44 (  0.44)	test_majacc   0.77 (  0.77)	Loss_d 0.886 (0.886)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 0.886 (0.886)	test_acc   0.47 (  0.47)	test_minacc   0.44 (  0.44)	test_majacc   0.77 (  0.77)	Loss_d 0.886 (0.886)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.31 (  0.31)
Overall Timing[  2/  1]	epoch_time 0.0399 (0.0613)	validation_time 0.0010 (0.0030)	train_time 0.0386 (0.0493)
record: (train_acc, test_acc) (0.6773000263571739, 0.5440000295639038)
last accs (train_acc, test_acc) (0.7094000318050384, 0.4690000116825104)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.68it/s] 15%|#5        | 4/26 [00:00<00:01, 19.31it/s] 27%|##6       | 7/26 [00:00<00:00, 23.21it/s] 38%|###8      | 10/26 [00:00<00:00, 25.59it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.69it/s] 69%|######9   | 18/26 [00:00<00:00, 28.18it/s] 81%|########  | 21/26 [00:00<00:00, 27.70it/s] 96%|#########6| 25/26 [00:00<00:00, 28.64it/s]100%|##########| 26/26 [00:01<00:00, 25.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.003 (0.006)	train_nll   0.66 (  0.61)	train_penalty   0.00 (  0.01)	weight_norm   7.77 (  7.77)	train_acc   0.60 (  0.66)	train_minacc   0.49 (  0.51)	train_majacc   0.63 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.80it/s] 27%|##6       | 7/26 [00:00<00:00, 34.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.34it/s] 50%|#####     | 13/26 [00:00<00:00, 40.86it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.28it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.28it/s] 96%|#########6| 25/26 [00:00<00:00, 48.20it/s]100%|##########| 26/26 [00:00<00:00, 40.05it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.61 (  0.61)	test_minacc   0.55 (  0.55)	test_majacc   0.62 (  0.62)	Loss_d 0.657 (0.657)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.626 (0.643)	test_acc   0.67 (  0.64)	test_minacc   0.73 (  0.59)	test_majacc   0.67 (  0.65)	Loss_d 0.626 (0.643)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.73 (  0.59)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.27 (  0.26)
Test: [  20/  26]	Loss 0.654 (0.644)	test_acc   0.63 (  0.63)	test_minacc   0.56 (  0.60)	test_majacc   0.64 (  0.64)	Loss_d 0.654 (0.644)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.56 (  0.60)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.26 (  0.25)
Test: [  26/  26]	Loss 0.678 (0.648)	test_acc   0.57 (  0.63)	test_minacc   0.49 (  0.59)	test_majacc   0.59 (  0.63)	Loss_d 0.678 (0.648)	test_acc_d   0.57 (  0.63)	test_minacc_d   0.49 (  0.59)	test_majacc_d   0.59 (  0.63)	test_corr_d   0.20 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.83it/s]
Test: [  0/  1]	Loss 0.736 (0.736)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.69 (  0.69)	Loss_d 0.736 (0.736)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.736 (0.736)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.69 (  0.69)	Loss_d 0.736 (0.736)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.02 (  0.02)
Overall Timing[  3/  1]	epoch_time 0.0403 (0.0561)	validation_time 0.0004 (0.0023)	train_time 0.0399 (0.0469)
record: (train_acc, test_acc) (0.6773000263571739, 0.5440000295639038)
last accs (train_acc, test_acc) (0.6278000140786171, 0.5440000295639038)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.98it/s] 19%|#9        | 5/26 [00:00<00:00, 22.70it/s] 35%|###4      | 9/26 [00:00<00:00, 27.45it/s] 50%|#####     | 13/26 [00:00<00:00, 29.50it/s] 65%|######5   | 17/26 [00:00<00:00, 30.95it/s] 81%|########  | 21/26 [00:00<00:00, 31.75it/s] 96%|#########6| 25/26 [00:00<00:00, 30.81it/s]100%|##########| 26/26 [00:00<00:00, 27.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.001 (0.002)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.61 (  0.61)	train_minacc   0.63 (  0.69)	train_majacc   0.61 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.84it/s] 27%|##6       | 7/26 [00:00<00:00, 30.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.89it/s] 50%|#####     | 13/26 [00:00<00:00, 39.11it/s] 69%|######9   | 18/26 [00:00<00:00, 41.88it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.88it/s] 92%|#########2| 24/26 [00:00<00:00, 46.11it/s]100%|##########| 26/26 [00:00<00:00, 36.75it/s]
Test: [   0/  26]	Loss 0.580 (0.580)	test_acc   0.66 (  0.66)	test_minacc   0.71 (  0.71)	test_majacc   0.66 (  0.66)	Loss_d 0.580 (0.580)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.578 (0.583)	test_acc   0.62 (  0.65)	test_minacc   0.71 (  0.68)	test_majacc   0.61 (  0.64)	Loss_d 0.578 (0.583)	test_acc_d   0.62 (  0.65)	test_minacc_d   0.71 (  0.68)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.38 (  0.39)
Test: [  20/  26]	Loss 0.608 (0.587)	test_acc   0.64 (  0.64)	test_minacc   0.69 (  0.68)	test_majacc   0.63 (  0.63)	Loss_d 0.608 (0.587)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.69 (  0.68)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.36 (  0.38)
Test: [  26/  26]	Loss 0.603 (0.591)	test_acc   0.63 (  0.64)	test_minacc   0.63 (  0.67)	test_majacc   0.63 (  0.63)	Loss_d 0.603 (0.591)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.63 (  0.67)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.38 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.35it/s]
Test: [  0/  1]	Loss 0.757 (0.757)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.74 (  0.74)	Loss_d 0.757 (0.757)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.757 (0.757)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.74 (  0.74)	Loss_d 0.757 (0.757)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.07 (  0.07)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/23/checkpoints/model_best.pth
Overall Timing[  4/  1]	epoch_time 0.0393 (0.0527)	validation_time 0.0007 (0.0020)	train_time 0.0385 (0.0452)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.31it/s] 15%|#5        | 4/26 [00:00<00:01, 20.18it/s] 27%|##6       | 7/26 [00:00<00:00, 23.53it/s] 38%|###8      | 10/26 [00:00<00:00, 24.86it/s] 50%|#####     | 13/26 [00:00<00:00, 26.06it/s] 62%|######1   | 16/26 [00:00<00:00, 26.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.62it/s] 88%|########8 | 23/26 [00:00<00:00, 29.33it/s]100%|##########| 26/26 [00:01<00:00, 25.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.002 (0.002)	train_nll   0.59 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.65 (  0.64)	train_minacc   0.44 (  0.66)	train_majacc   0.69 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.33it/s] 31%|###       | 8/26 [00:00<00:00, 40.04it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.04it/s] 50%|#####     | 13/26 [00:00<00:00, 41.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.00it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.00it/s] 96%|#########6| 25/26 [00:00<00:00, 48.51it/s]100%|##########| 26/26 [00:00<00:00, 41.23it/s]
Test: [   0/  26]	Loss 0.564 (0.564)	test_acc   0.68 (  0.68)	test_minacc   0.61 (  0.61)	test_majacc   0.69 (  0.69)	Loss_d 0.564 (0.564)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.560 (0.559)	test_acc   0.67 (  0.69)	test_minacc   0.64 (  0.61)	test_majacc   0.67 (  0.70)	Loss_d 0.560 (0.559)	test_acc_d   0.67 (  0.69)	test_minacc_d   0.64 (  0.61)	test_majacc_d   0.67 (  0.70)	test_corr_d   0.43 (  0.47)
Test: [  20/  26]	Loss 0.571 (0.566)	test_acc   0.71 (  0.69)	test_minacc   0.64 (  0.60)	test_majacc   0.72 (  0.70)	Loss_d 0.571 (0.566)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.64 (  0.60)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.45 (  0.46)
Test: [  26/  26]	Loss 0.589 (0.568)	test_acc   0.65 (  0.69)	test_minacc   0.46 (  0.60)	test_majacc   0.69 (  0.70)	Loss_d 0.589 (0.568)	test_acc_d   0.65 (  0.69)	test_minacc_d   0.46 (  0.60)	test_majacc_d   0.69 (  0.70)	test_corr_d   0.46 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.48it/s]
Test: [  0/  1]	Loss 0.812 (0.812)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.82 (  0.82)	Loss_d 0.812 (0.812)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.812 (0.812)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.82 (  0.82)	Loss_d 0.812 (0.812)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.16 (  0.16)
Overall Timing[  5/  1]	epoch_time 0.0388 (0.0504)	validation_time 0.0004 (0.0017)	train_time 0.0384 (0.0441)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.686000033557415, 0.5610000491142273)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.23it/s] 19%|#9        | 5/26 [00:00<00:01, 20.60it/s] 35%|###4      | 9/26 [00:00<00:00, 25.43it/s] 50%|#####     | 13/26 [00:00<00:00, 28.41it/s] 65%|######5   | 17/26 [00:00<00:00, 29.61it/s] 81%|########  | 21/26 [00:00<00:00, 30.19it/s] 96%|#########6| 25/26 [00:00<00:00, 30.80it/s]100%|##########| 26/26 [00:00<00:00, 26.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.68 (  0.62)	train_minacc   0.49 (  0.64)	train_majacc   0.71 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.38it/s] 27%|##6       | 7/26 [00:00<00:00, 36.35it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.35it/s] 50%|#####     | 13/26 [00:00<00:00, 42.57it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.16it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.16it/s] 96%|#########6| 25/26 [00:00<00:00, 49.33it/s]100%|##########| 26/26 [00:00<00:00, 40.92it/s]
Test: [   0/  26]	Loss 0.585 (0.585)	test_acc   0.69 (  0.69)	test_minacc   0.56 (  0.56)	test_majacc   0.71 (  0.71)	Loss_d 0.585 (0.585)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.557 (0.567)	test_acc   0.72 (  0.72)	test_minacc   0.67 (  0.55)	test_majacc   0.73 (  0.74)	Loss_d 0.557 (0.567)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.67 (  0.55)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.46 (  0.47)
Test: [  20/  26]	Loss 0.578 (0.576)	test_acc   0.73 (  0.71)	test_minacc   0.61 (  0.54)	test_majacc   0.75 (  0.74)	Loss_d 0.578 (0.576)	test_acc_d   0.73 (  0.71)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.75 (  0.74)	test_corr_d   0.47 (  0.46)
Test: [  26/  26]	Loss 0.597 (0.578)	test_acc   0.67 (  0.71)	test_minacc   0.44 (  0.53)	test_majacc   0.71 (  0.74)	Loss_d 0.597 (0.578)	test_acc_d   0.67 (  0.71)	test_minacc_d   0.44 (  0.53)	test_majacc_d   0.71 (  0.74)	test_corr_d   0.44 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.31it/s]
Test: [  0/  1]	Loss 0.796 (0.796)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.80 (  0.80)	Loss_d 0.796 (0.796)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.796 (0.796)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.80 (  0.80)	Loss_d 0.796 (0.796)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.17 (  0.17)
Overall Timing[  6/  1]	epoch_time 0.0385 (0.0487)	validation_time 0.0005 (0.0016)	train_time 0.0380 (0.0432)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.7051000344157219, 0.5139999985694885)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.19it/s] 15%|#5        | 4/26 [00:00<00:01, 18.47it/s] 31%|###       | 8/26 [00:00<00:00, 24.46it/s] 46%|####6     | 12/26 [00:00<00:00, 27.76it/s] 62%|######1   | 16/26 [00:00<00:00, 29.27it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.04it/s] 92%|#########2| 24/26 [00:00<00:00, 30.74it/s]100%|##########| 26/26 [00:00<00:00, 26.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.002 (0.002)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.61 (  0.63)	train_minacc   0.49 (  0.58)	train_majacc   0.64 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 27%|##6       | 7/26 [00:00<00:00, 32.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.54it/s] 50%|#####     | 13/26 [00:00<00:00, 39.41it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.97it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.97it/s] 96%|#########6| 25/26 [00:00<00:00, 47.56it/s]100%|##########| 26/26 [00:00<00:00, 38.93it/s]
Test: [   0/  26]	Loss 0.573 (0.573)	test_acc   0.68 (  0.68)	test_minacc   0.52 (  0.52)	test_majacc   0.71 (  0.71)	Loss_d 0.573 (0.573)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.520 (0.544)	test_acc   0.75 (  0.72)	test_minacc   0.58 (  0.56)	test_majacc   0.77 (  0.75)	Loss_d 0.520 (0.544)	test_acc_d   0.75 (  0.72)	test_minacc_d   0.58 (  0.56)	test_majacc_d   0.77 (  0.75)	test_corr_d   0.59 (  0.57)
Test: [  20/  26]	Loss 0.556 (0.552)	test_acc   0.72 (  0.71)	test_minacc   0.53 (  0.54)	test_majacc   0.76 (  0.74)	Loss_d 0.556 (0.552)	test_acc_d   0.72 (  0.71)	test_minacc_d   0.53 (  0.54)	test_majacc_d   0.76 (  0.74)	test_corr_d   0.57 (  0.56)
Test: [  26/  26]	Loss 0.587 (0.554)	test_acc   0.62 (  0.71)	test_minacc   0.34 (  0.54)	test_majacc   0.67 (  0.74)	Loss_d 0.587 (0.554)	test_acc_d   0.62 (  0.71)	test_minacc_d   0.34 (  0.54)	test_majacc_d   0.67 (  0.74)	test_corr_d   0.52 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.60it/s]
Test: [  0/  1]	Loss 0.825 (0.825)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.80 (  0.80)	Loss_d 0.825 (0.825)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 0.825 (0.825)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.80 (  0.80)	Loss_d 0.825 (0.825)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.33 (  0.33)
Overall Timing[  7/  1]	epoch_time 0.0416 (0.0478)	validation_time 0.0005 (0.0014)	train_time 0.0410 (0.0429)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.7088000321388245, 0.4970000088214874)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.24it/s] 15%|#5        | 4/26 [00:00<00:01, 18.41it/s] 31%|###       | 8/26 [00:00<00:00, 24.42it/s] 46%|####6     | 12/26 [00:00<00:00, 27.22it/s] 62%|######1   | 16/26 [00:00<00:00, 28.88it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.67it/s] 88%|########8 | 23/26 [00:00<00:00, 29.39it/s]100%|##########| 26/26 [00:01<00:00, 25.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.003 (0.002)	train_nll   0.70 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.54 (  0.63)	train_minacc   0.49 (  0.61)	train_majacc   0.55 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.93it/s] 27%|##6       | 7/26 [00:00<00:00, 34.59it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.59it/s] 46%|####6     | 12/26 [00:00<00:00, 40.94it/s] 65%|######5   | 17/26 [00:00<00:00, 44.40it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.40it/s] 88%|########8 | 23/26 [00:00<00:00, 46.86it/s]100%|##########| 26/26 [00:00<00:00, 40.22it/s]
Test: [   0/  26]	Loss 0.676 (0.676)	test_acc   0.58 (  0.58)	test_minacc   0.50 (  0.50)	test_majacc   0.59 (  0.59)	Loss_d 0.676 (0.676)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.625 (0.644)	test_acc   0.65 (  0.62)	test_minacc   0.58 (  0.55)	test_majacc   0.66 (  0.63)	Loss_d 0.625 (0.644)	test_acc_d   0.65 (  0.62)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.39 (  0.33)
Test: [  20/  26]	Loss 0.661 (0.647)	test_acc   0.59 (  0.61)	test_minacc   0.54 (  0.55)	test_majacc   0.60 (  0.63)	Loss_d 0.661 (0.647)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.60 (  0.63)	test_corr_d   0.31 (  0.34)
Test: [  26/  26]	Loss 0.671 (0.648)	test_acc   0.58 (  0.61)	test_minacc   0.49 (  0.54)	test_majacc   0.59 (  0.63)	Loss_d 0.671 (0.648)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.49 (  0.54)	test_majacc_d   0.59 (  0.63)	test_corr_d   0.27 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.76it/s]
Test: [  0/  1]	Loss 0.721 (0.721)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.70 (  0.70)	Loss_d 0.721 (0.721)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.721 (0.721)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.70 (  0.70)	Loss_d 0.721 (0.721)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.04 (  0.04)
Overall Timing[  8/  1]	epoch_time 0.0386 (0.0468)	validation_time 0.0005 (0.0013)	train_time 0.0381 (0.0424)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6134000116586685, 0.5060000419616699)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s] 15%|#5        | 4/26 [00:00<00:01, 18.71it/s] 27%|##6       | 7/26 [00:00<00:00, 23.34it/s] 42%|####2     | 11/26 [00:00<00:00, 26.57it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.62it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.94it/s] 88%|########8 | 23/26 [00:00<00:00, 30.93it/s]100%|##########| 26/26 [00:00<00:00, 26.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.002 (0.002)	train_nll   0.64 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.63 (  0.66)	train_minacc   0.71 (  0.56)	train_majacc   0.62 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 27%|##6       | 7/26 [00:00<00:00, 36.43it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.43it/s] 50%|#####     | 13/26 [00:00<00:00, 42.15it/s] 69%|######9   | 18/26 [00:00<00:00, 43.81it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.81it/s] 88%|########8 | 23/26 [00:00<00:00, 45.34it/s]100%|##########| 26/26 [00:00<00:00, 38.83it/s]
Test: [   0/  26]	Loss 0.694 (0.694)	test_acc   0.49 (  0.49)	test_minacc   0.74 (  0.74)	test_majacc   0.45 (  0.45)	Loss_d 0.694 (0.694)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.45 (  0.45)	test_corr_d  -0.05 ( -0.05)
Test: [  10/  26]	Loss 0.655 (0.682)	test_acc   0.58 (  0.54)	test_minacc   0.67 (  0.73)	test_majacc   0.57 (  0.51)	Loss_d 0.655 (0.682)	test_acc_d   0.58 (  0.54)	test_minacc_d   0.67 (  0.73)	test_majacc_d   0.57 (  0.51)	test_corr_d   0.11 (  0.01)
Test: [  20/  26]	Loss 0.681 (0.685)	test_acc   0.55 (  0.53)	test_minacc   0.76 (  0.72)	test_majacc   0.51 (  0.50)	Loss_d 0.681 (0.685)	test_acc_d   0.55 (  0.53)	test_minacc_d   0.76 (  0.72)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.01 (  0.00)
Test: [  26/  26]	Loss 0.667 (0.684)	test_acc   0.61 (  0.53)	test_minacc   0.83 (  0.71)	test_majacc   0.57 (  0.50)	Loss_d 0.667 (0.684)	test_acc_d   0.61 (  0.53)	test_minacc_d   0.83 (  0.71)	test_majacc_d   0.57 (  0.50)	test_corr_d   0.04 (  0.01)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.32it/s]
Test: [  0/  1]	Loss 0.662 (0.662)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.51 (  0.51)	Loss_d 0.662 (0.662)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.21 ( -0.21)
Test: [  1/  1]	Loss 0.662 (0.662)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.51 (  0.51)	Loss_d 0.662 (0.662)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.21 ( -0.21)
Overall Timing[  9/  1]	epoch_time 0.0385 (0.0460)	validation_time 0.0005 (0.0013)	train_time 0.0380 (0.0420)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.5320000157356263, 0.6140000224113464)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 15%|#5        | 4/26 [00:00<00:01, 17.44it/s] 27%|##6       | 7/26 [00:00<00:00, 21.41it/s] 38%|###8      | 10/26 [00:00<00:00, 24.16it/s] 50%|#####     | 13/26 [00:00<00:00, 26.10it/s] 65%|######5   | 17/26 [00:00<00:00, 28.38it/s] 81%|########  | 21/26 [00:00<00:00, 29.17it/s] 96%|#########6| 25/26 [00:00<00:00, 29.83it/s]100%|##########| 26/26 [00:01<00:00, 24.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.003 (0.003)	train_nll   0.67 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.50 (  0.60)	train_minacc   0.51 (  0.54)	train_majacc   0.50 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.73it/s] 23%|##3       | 6/26 [00:00<00:00, 27.88it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.88it/s] 42%|####2     | 11/26 [00:00<00:00, 35.53it/s] 65%|######5   | 17/26 [00:00<00:00, 42.49it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.49it/s] 88%|########8 | 23/26 [00:00<00:00, 44.08it/s]100%|##########| 26/26 [00:00<00:00, 37.43it/s]
Test: [   0/  26]	Loss 0.658 (0.658)	test_acc   0.51 (  0.51)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.658 (0.658)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.605 (0.655)	test_acc   0.62 (  0.54)	test_minacc   0.55 (  0.51)	test_majacc   0.63 (  0.54)	Loss_d 0.605 (0.655)	test_acc_d   0.62 (  0.54)	test_minacc_d   0.55 (  0.51)	test_majacc_d   0.63 (  0.54)	test_corr_d   0.44 (  0.30)
Test: [  20/  26]	Loss 0.678 (0.660)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.52)	test_majacc   0.53 (  0.53)	Loss_d 0.678 (0.660)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.52)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.30 (  0.29)
Test: [  26/  26]	Loss 0.665 (0.662)	test_acc   0.53 (  0.53)	test_minacc   0.54 (  0.51)	test_majacc   0.53 (  0.53)	Loss_d 0.665 (0.662)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.54 (  0.51)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.28 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.67it/s]
Test: [  0/  1]	Loss 0.801 (0.801)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.61 (  0.61)	Loss_d 0.801 (0.801)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.801 (0.801)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.61 (  0.61)	Loss_d 0.801 (0.801)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.20 (  0.20)
Overall Timing[ 10/  1]	epoch_time 0.0397 (0.0454)	validation_time 0.0005 (0.0012)	train_time 0.0391 (0.0417)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.530800008803606, 0.49500003457069397)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.67it/s] 15%|#5        | 4/26 [00:00<00:01, 21.01it/s] 27%|##6       | 7/26 [00:00<00:00, 24.49it/s] 42%|####2     | 11/26 [00:00<00:00, 27.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.85it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.31it/s] 88%|########8 | 23/26 [00:00<00:00, 30.71it/s]100%|##########| 26/26 [00:00<00:00, 26.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.002 (0.002)	train_nll   0.61 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.64 (  0.61)	train_minacc   0.63 (  0.63)	train_majacc   0.64 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.77it/s] 23%|##3       | 6/26 [00:00<00:00, 27.51it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.51it/s] 42%|####2     | 11/26 [00:00<00:00, 36.13it/s] 62%|######1   | 16/26 [00:00<00:00, 40.92it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.92it/s] 81%|########  | 21/26 [00:00<00:00, 41.65it/s]100%|##########| 26/26 [00:00<00:00, 35.41it/s]
Test: [   0/  26]	Loss 0.616 (0.616)	test_acc   0.64 (  0.64)	test_minacc   0.66 (  0.66)	test_majacc   0.63 (  0.63)	Loss_d 0.616 (0.616)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.610 (0.632)	test_acc   0.61 (  0.60)	test_minacc   0.67 (  0.64)	test_majacc   0.60 (  0.60)	Loss_d 0.610 (0.632)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.67 (  0.64)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.31 (  0.28)
Test: [  20/  26]	Loss 0.622 (0.627)	test_acc   0.64 (  0.62)	test_minacc   0.71 (  0.66)	test_majacc   0.63 (  0.61)	Loss_d 0.622 (0.627)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.71 (  0.66)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.29 (  0.29)
Test: [  26/  26]	Loss 0.625 (0.627)	test_acc   0.62 (  0.62)	test_minacc   0.66 (  0.66)	test_majacc   0.62 (  0.61)	Loss_d 0.625 (0.627)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.31 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.58it/s]
Test: [  0/  1]	Loss 0.696 (0.696)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.68 (  0.68)	Loss_d 0.696 (0.696)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.696 (0.696)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.68 (  0.68)	Loss_d 0.696 (0.696)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 11/  1]	epoch_time 0.0393 (0.0449)	validation_time 0.0005 (0.0011)	train_time 0.0388 (0.0415)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6151000099182129, 0.6110000014305115)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.06it/s] 19%|#9        | 5/26 [00:00<00:00, 21.16it/s] 35%|###4      | 9/26 [00:00<00:00, 25.61it/s] 50%|#####     | 13/26 [00:00<00:00, 27.68it/s] 65%|######5   | 17/26 [00:00<00:00, 29.13it/s] 81%|########  | 21/26 [00:00<00:00, 30.13it/s] 96%|#########6| 25/26 [00:00<00:00, 31.01it/s]100%|##########| 26/26 [00:00<00:00, 26.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.59 (  0.62)	train_minacc   0.59 (  0.64)	train_majacc   0.59 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.61it/s] 12%|#1        | 3/26 [00:00<00:02,  9.42it/s] 31%|###       | 8/26 [00:00<00:00, 22.67it/s]                                               31%|###       | 8/26 [00:00<00:00, 22.67it/s] 50%|#####     | 13/26 [00:00<00:00, 30.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 35.34it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 35.34it/s] 96%|#########6| 25/26 [00:00<00:00, 41.34it/s]100%|##########| 26/26 [00:00<00:00, 29.46it/s]
Test: [   0/  26]	Loss 0.633 (0.633)	test_acc   0.61 (  0.61)	test_minacc   0.65 (  0.65)	test_majacc   0.60 (  0.60)	Loss_d 0.633 (0.633)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.624 (0.640)	test_acc   0.60 (  0.59)	test_minacc   0.56 (  0.62)	test_majacc   0.60 (  0.59)	Loss_d 0.624 (0.640)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.56 (  0.62)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.30 (  0.26)
Test: [  20/  26]	Loss 0.647 (0.634)	test_acc   0.60 (  0.60)	test_minacc   0.63 (  0.62)	test_majacc   0.59 (  0.60)	Loss_d 0.647 (0.634)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.63 (  0.62)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.25 (  0.28)
Test: [  26/  26]	Loss 0.634 (0.636)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.62)	test_majacc   0.61 (  0.60)	Loss_d 0.634 (0.636)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.62)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.28 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.71it/s]
Test: [  0/  1]	Loss 0.734 (0.734)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.62 (  0.62)	Loss_d 0.734 (0.734)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.734 (0.734)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.62 (  0.62)	Loss_d 0.734 (0.734)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.01 (  0.01)
Overall Timing[ 12/  1]	epoch_time 0.0402 (0.0445)	validation_time 0.0004 (0.0011)	train_time 0.0397 (0.0413)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6035000122189522, 0.578000009059906)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.04it/s] 19%|#9        | 5/26 [00:00<00:01, 20.58it/s] 35%|###4      | 9/26 [00:00<00:00, 25.28it/s] 50%|#####     | 13/26 [00:00<00:00, 28.09it/s] 65%|######5   | 17/26 [00:00<00:00, 29.64it/s] 81%|########  | 21/26 [00:00<00:00, 30.61it/s] 96%|#########6| 25/26 [00:00<00:00, 31.19it/s]100%|##########| 26/26 [00:00<00:00, 26.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.003 (0.001)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.62 (  0.60)	train_minacc   0.49 (  0.68)	train_majacc   0.65 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.33it/s] 27%|##6       | 7/26 [00:00<00:00, 33.40it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.40it/s] 50%|#####     | 13/26 [00:00<00:00, 37.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.67it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.67it/s] 96%|#########6| 25/26 [00:00<00:00, 44.68it/s]100%|##########| 26/26 [00:00<00:00, 37.64it/s]
Test: [   0/  26]	Loss 0.574 (0.574)	test_acc   0.65 (  0.65)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.574 (0.574)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.590 (0.598)	test_acc   0.64 (  0.63)	test_minacc   0.62 (  0.61)	test_majacc   0.64 (  0.63)	Loss_d 0.590 (0.598)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.39 (  0.38)
Test: [  20/  26]	Loss 0.591 (0.592)	test_acc   0.67 (  0.64)	test_minacc   0.64 (  0.61)	test_majacc   0.68 (  0.65)	Loss_d 0.591 (0.592)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.64 (  0.61)	test_majacc_d   0.68 (  0.65)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.598 (0.592)	test_acc   0.62 (  0.64)	test_minacc   0.49 (  0.61)	test_majacc   0.65 (  0.65)	Loss_d 0.598 (0.592)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.49 (  0.61)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.43 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.23it/s]
Test: [  0/  1]	Loss 0.781 (0.781)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.73 (  0.73)	Loss_d 0.781 (0.781)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.781 (0.781)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.73 (  0.73)	Loss_d 0.781 (0.781)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.05 (  0.05)
Overall Timing[ 13/  1]	epoch_time 0.0386 (0.0441)	validation_time 0.0007 (0.0010)	train_time 0.0379 (0.0411)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6429000185132027, 0.5860000252723694)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.80it/s] 12%|#1        | 3/26 [00:00<00:01, 12.23it/s] 27%|##6       | 7/26 [00:00<00:00, 20.59it/s] 42%|####2     | 11/26 [00:00<00:00, 24.37it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.96it/s] 69%|######9   | 18/26 [00:00<00:00, 27.67it/s] 85%|########4 | 22/26 [00:00<00:00, 28.99it/s]100%|##########| 26/26 [00:01<00:00, 29.81it/s]100%|##########| 26/26 [00:01<00:00, 24.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.004 (0.001)	train_nll   0.59 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.64 (  0.61)	train_minacc   0.44 (  0.63)	train_majacc   0.67 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.64it/s] 27%|##6       | 7/26 [00:00<00:00, 38.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 38.58it/s] 50%|#####     | 13/26 [00:00<00:00, 43.89it/s] 73%|#######3  | 19/26 [00:00<00:00, 49.41it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 49.41it/s] 96%|#########6| 25/26 [00:00<00:00, 49.48it/s]100%|##########| 26/26 [00:00<00:00, 41.93it/s]
Test: [   0/  26]	Loss 0.571 (0.571)	test_acc   0.69 (  0.69)	test_minacc   0.58 (  0.58)	test_majacc   0.71 (  0.71)	Loss_d 0.571 (0.571)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.594 (0.593)	test_acc   0.65 (  0.65)	test_minacc   0.56 (  0.57)	test_majacc   0.67 (  0.67)	Loss_d 0.594 (0.593)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.56 (  0.57)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.39 (  0.40)
Test: [  20/  26]	Loss 0.591 (0.587)	test_acc   0.68 (  0.66)	test_minacc   0.59 (  0.56)	test_majacc   0.69 (  0.68)	Loss_d 0.591 (0.587)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.40 (  0.41)
Test: [  26/  26]	Loss 0.588 (0.588)	test_acc   0.63 (  0.66)	test_minacc   0.44 (  0.56)	test_majacc   0.67 (  0.68)	Loss_d 0.588 (0.588)	test_acc_d   0.63 (  0.66)	test_minacc_d   0.44 (  0.56)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.45 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.21it/s]
Test: [  0/  1]	Loss 0.825 (0.825)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.75 (  0.75)	Loss_d 0.825 (0.825)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.825 (0.825)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.54)	test_majacc   0.75 (  0.75)	Loss_d 0.825 (0.825)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.08 (  0.08)
Overall Timing[ 14/  1]	epoch_time 0.0384 (0.0437)	validation_time 0.0004 (0.0010)	train_time 0.0380 (0.0409)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6599000216126442, 0.5570000410079956)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.26it/s] 12%|#1        | 3/26 [00:00<00:02, 11.44it/s] 23%|##3       | 6/26 [00:00<00:01, 17.80it/s] 35%|###4      | 9/26 [00:00<00:00, 21.23it/s] 46%|####6     | 12/26 [00:00<00:00, 23.69it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.53it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.68it/s] 88%|########8 | 23/26 [00:00<00:00, 28.64it/s]100%|##########| 26/26 [00:01<00:00, 23.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0067, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(6.0760e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(4.0728e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.014 (0.003)	train_nll   0.67 (  0.63)	train_penalty   0.01 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.50 (  0.61)	train_minacc   0.49 (  0.58)	train_majacc   0.50 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.28it/s] 31%|###       | 8/26 [00:00<00:00, 40.67it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.67it/s] 50%|#####     | 13/26 [00:00<00:00, 42.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.26it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.26it/s] 96%|#########6| 25/26 [00:00<00:00, 48.21it/s]100%|##########| 26/26 [00:00<00:00, 41.38it/s]
Test: [   0/  26]	Loss 0.573 (0.573)	test_acc   0.66 (  0.66)	test_minacc   0.44 (  0.44)	test_majacc   0.71 (  0.71)	Loss_d 0.573 (0.573)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.578 (0.579)	test_acc   0.66 (  0.67)	test_minacc   0.53 (  0.52)	test_majacc   0.69 (  0.69)	Loss_d 0.578 (0.579)	test_acc_d   0.66 (  0.67)	test_minacc_d   0.53 (  0.52)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.43 (  0.44)
Test: [  20/  26]	Loss 0.609 (0.580)	test_acc   0.67 (  0.67)	test_minacc   0.54 (  0.51)	test_majacc   0.69 (  0.70)	Loss_d 0.609 (0.580)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.54 (  0.51)	test_majacc_d   0.69 (  0.70)	test_corr_d   0.43 (  0.46)
Test: [  26/  26]	Loss 0.556 (0.582)	test_acc   0.67 (  0.67)	test_minacc   0.41 (  0.52)	test_majacc   0.72 (  0.70)	Loss_d 0.556 (0.582)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.41 (  0.52)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.50 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.73it/s]
Test: [  0/  1]	Loss 0.912 (0.912)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.72 (  0.72)	Loss_d 0.912 (0.912)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.912 (0.912)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.72 (  0.72)	Loss_d 0.912 (0.912)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.13 (  0.13)
Overall Timing[ 15/  1]	epoch_time 0.0417 (0.0436)	validation_time 0.0005 (0.0010)	train_time 0.0412 (0.0409)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6688000330924988, 0.5330000519752502)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.50it/s] 12%|#1        | 3/26 [00:00<00:01, 13.46it/s] 27%|##6       | 7/26 [00:00<00:00, 21.92it/s] 42%|####2     | 11/26 [00:00<00:00, 25.53it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.88it/s] 88%|########8 | 23/26 [00:00<00:00, 28.87it/s]100%|##########| 26/26 [00:00<00:00, 28.70it/s]100%|##########| 26/26 [00:01<00:00, 24.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0050, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(5.4184e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: tensor(3.4050e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.007 (0.004)	train_nll   0.72 (  0.62)	train_penalty   0.01 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.46 (  0.64)	train_minacc   0.66 (  0.53)	train_majacc   0.43 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.31it/s] 15%|#5        | 4/26 [00:00<00:01, 19.97it/s] 35%|###4      | 9/26 [00:00<00:00, 32.34it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.34it/s] 58%|#####7    | 15/26 [00:00<00:00, 40.45it/s] 77%|#######6  | 20/26 [00:00<00:00, 43.12it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 43.12it/s]100%|##########| 26/26 [00:00<00:00, 48.17it/s]100%|##########| 26/26 [00:00<00:00, 37.13it/s]
Test: [   0/  26]	Loss 0.596 (0.596)	test_acc   0.65 (  0.65)	test_minacc   0.50 (  0.50)	test_majacc   0.68 (  0.68)	Loss_d 0.596 (0.596)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.592 (0.596)	test_acc   0.66 (  0.65)	test_minacc   0.58 (  0.54)	test_majacc   0.67 (  0.67)	Loss_d 0.592 (0.596)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.47 (  0.49)
Test: [  20/  26]	Loss 0.589 (0.596)	test_acc   0.65 (  0.65)	test_minacc   0.56 (  0.53)	test_majacc   0.66 (  0.67)	Loss_d 0.589 (0.596)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.56 (  0.53)	test_majacc_d   0.66 (  0.67)	test_corr_d   0.48 (  0.49)
Test: [  26/  26]	Loss 0.592 (0.596)	test_acc   0.68 (  0.65)	test_minacc   0.51 (  0.54)	test_majacc   0.72 (  0.67)	Loss_d 0.592 (0.596)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.72 (  0.67)	test_corr_d   0.52 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.37it/s]
Test: [  0/  1]	Loss 0.844 (0.844)	test_acc   0.51 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.73 (  0.73)	Loss_d 0.844 (0.844)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.844 (0.844)	test_acc   0.51 (  0.51)	test_minacc   0.49 (  0.49)	test_majacc   0.73 (  0.73)	Loss_d 0.844 (0.844)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.24 (  0.24)
Overall Timing[ 16/  1]	epoch_time 0.0405 (0.0434)	validation_time 0.0005 (0.0009)	train_time 0.0400 (0.0409)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6526000171303749, 0.5130000114440918)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.37it/s] 12%|#1        | 3/26 [00:00<00:02, 10.01it/s] 23%|##3       | 6/26 [00:00<00:01, 16.57it/s] 35%|###4      | 9/26 [00:00<00:00, 20.66it/s] 46%|####6     | 12/26 [00:00<00:00, 23.51it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.73it/s] 88%|########8 | 23/26 [00:01<00:00, 28.27it/s]100%|##########| 26/26 [00:01<00:00, 22.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0041, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(1.1045e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.007 (0.003)	train_nll   0.54 (  0.61)	train_penalty   0.01 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.72 (  0.66)	train_minacc   0.59 (  0.56)	train_majacc   0.75 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.17it/s] 23%|##3       | 6/26 [00:00<00:00, 26.58it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.58it/s] 42%|####2     | 11/26 [00:00<00:00, 35.62it/s] 62%|######1   | 16/26 [00:00<00:00, 40.23it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.23it/s] 81%|########  | 21/26 [00:00<00:00, 41.57it/s]100%|##########| 26/26 [00:00<00:00, 35.60it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.71 (  0.71)	test_minacc   0.40 (  0.40)	test_majacc   0.76 (  0.76)	Loss_d 0.550 (0.550)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.549 (0.548)	test_acc   0.68 (  0.69)	test_minacc   0.47 (  0.49)	test_majacc   0.71 (  0.73)	Loss_d 0.549 (0.548)	test_acc_d   0.68 (  0.69)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.54 (  0.55)
Test: [  20/  26]	Loss 0.549 (0.549)	test_acc   0.70 (  0.69)	test_minacc   0.56 (  0.49)	test_majacc   0.73 (  0.73)	Loss_d 0.549 (0.549)	test_acc_d   0.70 (  0.69)	test_minacc_d   0.56 (  0.49)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.54 (  0.56)
Test: [  26/  26]	Loss 0.539 (0.548)	test_acc   0.70 (  0.70)	test_minacc   0.46 (  0.50)	test_majacc   0.75 (  0.73)	Loss_d 0.539 (0.548)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.75 (  0.73)	test_corr_d   0.60 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.53it/s]
Test: [  0/  1]	Loss 0.880 (0.880)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.81 (  0.81)	Loss_d 0.880 (0.880)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.880 (0.880)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.81 (  0.81)	Loss_d 0.880 (0.880)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.23 (  0.23)
Overall Timing[ 17/  1]	epoch_time 0.0410 (0.0433)	validation_time 0.0005 (0.0009)	train_time 0.0405 (0.0408)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6972000362277031, 0.5130000114440918)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.71it/s] 15%|#5        | 4/26 [00:00<00:01, 16.00it/s] 31%|###       | 8/26 [00:00<00:00, 22.61it/s] 46%|####6     | 12/26 [00:00<00:00, 25.82it/s] 62%|######1   | 16/26 [00:00<00:00, 27.86it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.83it/s] 92%|#########2| 24/26 [00:00<00:00, 29.66it/s]100%|##########| 26/26 [00:01<00:00, 24.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0033, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.004 (0.002)	train_nll   0.58 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.66 (  0.62)	train_minacc   0.44 (  0.57)	train_majacc   0.71 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.54it/s] 27%|##6       | 7/26 [00:00<00:00, 35.15it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.15it/s] 50%|#####     | 13/26 [00:00<00:00, 40.33it/s] 69%|######9   | 18/26 [00:00<00:00, 43.38it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.38it/s] 92%|#########2| 24/26 [00:00<00:00, 48.57it/s]100%|##########| 26/26 [00:00<00:00, 39.18it/s]
Test: [   0/  26]	Loss 0.559 (0.559)	test_acc   0.71 (  0.71)	test_minacc   0.56 (  0.56)	test_majacc   0.73 (  0.73)	Loss_d 0.559 (0.559)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.569 (0.569)	test_acc   0.67 (  0.68)	test_minacc   0.51 (  0.54)	test_majacc   0.70 (  0.70)	Loss_d 0.569 (0.569)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.47 (  0.47)
Test: [  20/  26]	Loss 0.572 (0.567)	test_acc   0.71 (  0.68)	test_minacc   0.58 (  0.54)	test_majacc   0.73 (  0.71)	Loss_d 0.572 (0.567)	test_acc_d   0.71 (  0.68)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.73 (  0.71)	test_corr_d   0.46 (  0.48)
Test: [  26/  26]	Loss 0.571 (0.566)	test_acc   0.66 (  0.69)	test_minacc   0.39 (  0.54)	test_majacc   0.72 (  0.71)	Loss_d 0.571 (0.566)	test_acc_d   0.66 (  0.69)	test_minacc_d   0.39 (  0.54)	test_majacc_d   0.72 (  0.71)	test_corr_d   0.53 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.47it/s]
Test: [  0/  1]	Loss 0.968 (0.968)	test_acc   0.55 (  0.55)	test_minacc   0.53 (  0.53)	test_majacc   0.81 (  0.81)	Loss_d 0.968 (0.968)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.968 (0.968)	test_acc   0.55 (  0.55)	test_minacc   0.53 (  0.53)	test_majacc   0.81 (  0.81)	Loss_d 0.968 (0.968)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.10 (  0.10)
Overall Timing[ 18/  1]	epoch_time 0.0390 (0.0431)	validation_time 0.0005 (0.0009)	train_time 0.0385 (0.0407)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6860000330209732, 0.5540000200271606)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.72it/s] 15%|#5        | 4/26 [00:00<00:01, 15.41it/s] 31%|###       | 8/26 [00:00<00:00, 22.27it/s] 42%|####2     | 11/26 [00:00<00:00, 24.61it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.17it/s] 65%|######5   | 17/26 [00:00<00:00, 27.25it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.74it/s] 88%|########8 | 23/26 [00:00<00:00, 28.30it/s]100%|##########| 26/26 [00:01<00:00, 23.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0031, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.002 (0.002)	train_nll   0.54 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.70 (  0.64)	train_minacc   0.51 (  0.62)	train_majacc   0.74 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.00it/s] 27%|##6       | 7/26 [00:00<00:00, 34.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.79it/s] 50%|#####     | 13/26 [00:00<00:00, 40.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.22it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.22it/s] 96%|#########6| 25/26 [00:00<00:00, 47.66it/s]100%|##########| 26/26 [00:00<00:00, 39.52it/s]
Test: [   0/  26]	Loss 0.601 (0.601)	test_acc   0.67 (  0.67)	test_minacc   0.47 (  0.47)	test_majacc   0.71 (  0.71)	Loss_d 0.601 (0.601)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.624 (0.615)	test_acc   0.66 (  0.66)	test_minacc   0.51 (  0.51)	test_majacc   0.68 (  0.69)	Loss_d 0.624 (0.615)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.44 (  0.46)
Test: [  20/  26]	Loss 0.608 (0.614)	test_acc   0.67 (  0.67)	test_minacc   0.51 (  0.50)	test_majacc   0.70 (  0.70)	Loss_d 0.608 (0.614)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.45 (  0.47)
Test: [  26/  26]	Loss 0.604 (0.612)	test_acc   0.67 (  0.67)	test_minacc   0.41 (  0.51)	test_majacc   0.72 (  0.70)	Loss_d 0.604 (0.612)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.41 (  0.51)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.52 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.51it/s]
Test: [  0/  1]	Loss 1.108 (1.108)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.73 (  0.73)	Loss_d 1.108 (1.108)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 1.108 (1.108)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.73 (  0.73)	Loss_d 1.108 (1.108)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.10 (  0.10)
Overall Timing[ 19/  1]	epoch_time 0.0409 (0.0430)	validation_time 0.0005 (0.0009)	train_time 0.0404 (0.0407)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6713000261783599, 0.5250000357627869)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.29it/s] 15%|#5        | 4/26 [00:00<00:01, 15.14it/s] 27%|##6       | 7/26 [00:00<00:00, 19.82it/s] 38%|###8      | 10/26 [00:00<00:00, 23.15it/s] 50%|#####     | 13/26 [00:00<00:00, 24.75it/s] 65%|######5   | 17/26 [00:00<00:00, 26.74it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.66it/s] 92%|#########2| 24/26 [00:00<00:00, 28.67it/s]100%|##########| 26/26 [00:01<00:00, 23.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0028, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.002 (0.003)	train_nll   0.67 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.58 (  0.64)	train_minacc   0.68 (  0.55)	train_majacc   0.56 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.20it/s] 27%|##6       | 7/26 [00:00<00:00, 35.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.09it/s] 50%|#####     | 13/26 [00:00<00:00, 42.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.39it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.39it/s] 92%|#########2| 24/26 [00:00<00:00, 47.54it/s]100%|##########| 26/26 [00:00<00:00, 39.55it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.64 (  0.64)	Loss_d 0.659 (0.659)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.666 (0.657)	test_acc   0.61 (  0.63)	test_minacc   0.65 (  0.63)	test_majacc   0.61 (  0.62)	Loss_d 0.666 (0.657)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.65 (  0.63)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.23 (  0.26)
Test: [  20/  26]	Loss 0.660 (0.656)	test_acc   0.63 (  0.63)	test_minacc   0.68 (  0.63)	test_majacc   0.63 (  0.63)	Loss_d 0.660 (0.656)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.68 (  0.63)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.21 (  0.26)
Test: [  26/  26]	Loss 0.647 (0.654)	test_acc   0.65 (  0.63)	test_minacc   0.56 (  0.63)	test_majacc   0.67 (  0.63)	Loss_d 0.647 (0.654)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.56 (  0.63)	test_majacc_d   0.67 (  0.63)	test_corr_d   0.36 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.76it/s]
Test: [  0/  1]	Loss 0.683 (0.683)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.71 (  0.71)	Loss_d 0.683 (0.683)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.71 (  0.71)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 0.683 (0.683)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.71 (  0.71)	Loss_d 0.683 (0.683)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.71 (  0.71)	test_corr_d  -0.17 ( -0.17)
Overall Timing[ 20/  1]	epoch_time 0.0410 (0.0429)	validation_time 0.0013 (0.0009)	train_time 0.0397 (0.0406)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6297000125050545, 0.6010000109672546)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.70it/s] 15%|#5        | 4/26 [00:00<00:01, 15.82it/s] 27%|##6       | 7/26 [00:00<00:00, 21.00it/s] 42%|####2     | 11/26 [00:00<00:00, 24.85it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.11it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.48it/s] 88%|########8 | 23/26 [00:00<00:00, 29.26it/s]100%|##########| 26/26 [00:01<00:00, 24.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0019, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.001 (0.002)	train_nll   0.63 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.53 (  0.60)	train_minacc   0.51 (  0.62)	train_majacc   0.53 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.88it/s] 31%|###       | 8/26 [00:00<00:00, 38.90it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.90it/s] 50%|#####     | 13/26 [00:00<00:00, 42.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.62it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.62it/s] 96%|#########6| 25/26 [00:00<00:00, 47.94it/s]100%|##########| 26/26 [00:00<00:00, 40.44it/s]
Test: [   0/  26]	Loss 0.605 (0.605)	test_acc   0.67 (  0.67)	test_minacc   0.47 (  0.47)	test_majacc   0.71 (  0.71)	Loss_d 0.605 (0.605)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.610 (0.612)	test_acc   0.66 (  0.66)	test_minacc   0.45 (  0.47)	test_majacc   0.70 (  0.70)	Loss_d 0.610 (0.612)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.45 (  0.47)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.44 (  0.44)
Test: [  20/  26]	Loss 0.614 (0.612)	test_acc   0.67 (  0.67)	test_minacc   0.47 (  0.48)	test_majacc   0.70 (  0.70)	Loss_d 0.614 (0.612)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.47 (  0.48)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.43 (  0.45)
Test: [  26/  26]	Loss 0.597 (0.611)	test_acc   0.70 (  0.67)	test_minacc   0.46 (  0.48)	test_majacc   0.75 (  0.71)	Loss_d 0.597 (0.611)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.46 (  0.48)	test_majacc_d   0.75 (  0.71)	test_corr_d   0.50 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.90it/s]
Test: [  0/  1]	Loss 0.737 (0.737)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.77 (  0.77)	Loss_d 0.737 (0.737)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.737 (0.737)	test_acc   0.51 (  0.51)	test_minacc   0.48 (  0.48)	test_majacc   0.77 (  0.77)	Loss_d 0.737 (0.737)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.17 (  0.17)
Overall Timing[ 21/  1]	epoch_time 0.0391 (0.0427)	validation_time 0.0005 (0.0009)	train_time 0.0385 (0.0406)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6714000284671784, 0.5060000419616699)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.23it/s] 15%|#5        | 4/26 [00:00<00:01, 15.06it/s] 27%|##6       | 7/26 [00:00<00:00, 20.19it/s] 38%|###8      | 10/26 [00:00<00:00, 23.42it/s] 50%|#####     | 13/26 [00:00<00:00, 25.53it/s] 65%|######5   | 17/26 [00:00<00:00, 27.42it/s] 81%|########  | 21/26 [00:00<00:00, 28.65it/s] 96%|#########6| 25/26 [00:00<00:00, 29.61it/s]100%|##########| 26/26 [00:01<00:00, 24.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0017, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.005 (0.004)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.56 (  0.59)	train_minacc   0.49 (  0.54)	train_majacc   0.58 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.76it/s] 23%|##3       | 6/26 [00:00<00:00, 28.11it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.11it/s] 50%|#####     | 13/26 [00:00<00:00, 40.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.76it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.76it/s] 96%|#########6| 25/26 [00:00<00:00, 47.50it/s]100%|##########| 26/26 [00:00<00:00, 38.83it/s]
Test: [   0/  26]	Loss 0.575 (0.575)	test_acc   0.70 (  0.70)	test_minacc   0.55 (  0.55)	test_majacc   0.73 (  0.73)	Loss_d 0.575 (0.575)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.583 (0.575)	test_acc   0.70 (  0.69)	test_minacc   0.51 (  0.49)	test_majacc   0.73 (  0.72)	Loss_d 0.583 (0.575)	test_acc_d   0.70 (  0.69)	test_minacc_d   0.51 (  0.49)	test_majacc_d   0.73 (  0.72)	test_corr_d   0.59 (  0.62)
Test: [  20/  26]	Loss 0.584 (0.578)	test_acc   0.68 (  0.68)	test_minacc   0.54 (  0.50)	test_majacc   0.70 (  0.72)	Loss_d 0.584 (0.578)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.70 (  0.72)	test_corr_d   0.55 (  0.61)
Test: [  26/  26]	Loss 0.574 (0.577)	test_acc   0.68 (  0.69)	test_minacc   0.46 (  0.50)	test_majacc   0.73 (  0.72)	Loss_d 0.574 (0.577)	test_acc_d   0.68 (  0.69)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.73 (  0.72)	test_corr_d   0.66 (  0.62)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.91it/s]
Test: [  0/  1]	Loss 0.772 (0.772)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.80 (  0.80)	Loss_d 0.772 (0.772)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 0.772 (0.772)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.80 (  0.80)	Loss_d 0.772 (0.772)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.25 (  0.25)
Overall Timing[ 22/  1]	epoch_time 0.0382 (0.0425)	validation_time 0.0004 (0.0009)	train_time 0.0378 (0.0404)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.6864000360369682, 0.5070000290870667)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.30it/s] 15%|#5        | 4/26 [00:00<00:01, 15.48it/s] 27%|##6       | 7/26 [00:00<00:00, 20.79it/s] 38%|###8      | 10/26 [00:00<00:00, 23.96it/s] 50%|#####     | 13/26 [00:00<00:00, 25.59it/s] 65%|######5   | 17/26 [00:00<00:00, 27.18it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.72it/s] 88%|########8 | 23/26 [00:00<00:00, 28.15it/s]100%|##########| 26/26 [00:01<00:00, 23.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0012, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.003 (0.005)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.64 (  0.64)	train_minacc   0.41 (  0.49)	train_majacc   0.69 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.75it/s] 27%|##6       | 7/26 [00:00<00:00, 35.38it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.38it/s] 50%|#####     | 13/26 [00:00<00:00, 41.03it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.93it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.93it/s] 96%|#########6| 25/26 [00:00<00:00, 47.88it/s]100%|##########| 26/26 [00:00<00:00, 40.28it/s]
Test: [   0/  26]	Loss 0.575 (0.575)	test_acc   0.73 (  0.73)	test_minacc   0.42 (  0.42)	test_majacc   0.79 (  0.79)	Loss_d 0.575 (0.575)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.586 (0.582)	test_acc   0.71 (  0.73)	test_minacc   0.45 (  0.44)	test_majacc   0.75 (  0.77)	Loss_d 0.586 (0.582)	test_acc_d   0.71 (  0.73)	test_minacc_d   0.45 (  0.44)	test_majacc_d   0.75 (  0.77)	test_corr_d   0.50 (  0.52)
Test: [  20/  26]	Loss 0.579 (0.583)	test_acc   0.74 (  0.73)	test_minacc   0.49 (  0.43)	test_majacc   0.78 (  0.78)	Loss_d 0.579 (0.583)	test_acc_d   0.74 (  0.73)	test_minacc_d   0.49 (  0.43)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.48 (  0.53)
Test: [  26/  26]	Loss 0.583 (0.583)	test_acc   0.70 (  0.73)	test_minacc   0.37 (  0.43)	test_majacc   0.76 (  0.78)	Loss_d 0.583 (0.583)	test_acc_d   0.70 (  0.73)	test_minacc_d   0.37 (  0.43)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.51 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 40.04it/s]
Test: [  0/  1]	Loss 0.807 (0.807)	test_acc   0.46 (  0.46)	test_minacc   0.42 (  0.42)	test_majacc   0.83 (  0.83)	Loss_d 0.807 (0.807)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 0.807 (0.807)	test_acc   0.46 (  0.46)	test_minacc   0.42 (  0.42)	test_majacc   0.83 (  0.83)	Loss_d 0.807 (0.807)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.25 (  0.25)
Overall Timing[ 23/  1]	epoch_time 0.0439 (0.0426)	validation_time 0.0006 (0.0008)	train_time 0.0433 (0.0406)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.7289000318050385, 0.4610000252723694)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.56it/s] 15%|#5        | 4/26 [00:00<00:01, 19.06it/s] 27%|##6       | 7/26 [00:00<00:00, 22.71it/s] 38%|###8      | 10/26 [00:00<00:00, 25.19it/s] 50%|#####     | 13/26 [00:00<00:00, 26.76it/s] 65%|######5   | 17/26 [00:00<00:00, 28.12it/s] 81%|########  | 21/26 [00:00<00:00, 28.96it/s] 92%|#########2| 24/26 [00:00<00:00, 29.15it/s]100%|##########| 26/26 [00:01<00:00, 24.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.007 (0.007)	train_nll   0.61 (  0.61)	train_penalty   0.01 (  0.01)	weight_norm   7.78 (  7.77)	train_acc   0.63 (  0.65)	train_minacc   0.44 (  0.49)	train_majacc   0.67 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.67it/s] 23%|##3       | 6/26 [00:00<00:00, 31.53it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.53it/s] 46%|####6     | 12/26 [00:00<00:00, 41.81it/s] 65%|######5   | 17/26 [00:00<00:00, 42.83it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.83it/s] 85%|########4 | 22/26 [00:00<00:00, 43.35it/s]100%|##########| 26/26 [00:00<00:00, 38.56it/s]
Test: [   0/  26]	Loss 0.554 (0.554)	test_acc   0.75 (  0.75)	test_minacc   0.47 (  0.47)	test_majacc   0.80 (  0.80)	Loss_d 0.554 (0.554)	test_acc_d   0.75 (  0.75)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.53 (  0.53)
Test: [  10/  26]	Loss 0.562 (0.555)	test_acc   0.74 (  0.74)	test_minacc   0.38 (  0.45)	test_majacc   0.80 (  0.79)	Loss_d 0.562 (0.555)	test_acc_d   0.74 (  0.74)	test_minacc_d   0.38 (  0.45)	test_majacc_d   0.80 (  0.79)	test_corr_d   0.55 (  0.54)
Test: [  20/  26]	Loss 0.573 (0.557)	test_acc   0.76 (  0.74)	test_minacc   0.51 (  0.45)	test_majacc   0.80 (  0.79)	Loss_d 0.573 (0.557)	test_acc_d   0.76 (  0.74)	test_minacc_d   0.51 (  0.45)	test_majacc_d   0.80 (  0.79)	test_corr_d   0.51 (  0.55)
Test: [  26/  26]	Loss 0.551 (0.556)	test_acc   0.74 (  0.75)	test_minacc   0.34 (  0.45)	test_majacc   0.81 (  0.80)	Loss_d 0.551 (0.556)	test_acc_d   0.74 (  0.75)	test_minacc_d   0.34 (  0.45)	test_majacc_d   0.81 (  0.80)	test_corr_d   0.58 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.88it/s]
Test: [  0/  1]	Loss 0.861 (0.861)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.90 (  0.90)	Loss_d 0.861 (0.861)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.861 (0.861)	test_acc   0.48 (  0.48)	test_minacc   0.43 (  0.43)	test_majacc   0.90 (  0.90)	Loss_d 0.861 (0.861)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.90 (  0.90)	test_corr_d   0.20 (  0.20)
Overall Timing[ 24/  1]	epoch_time 0.0406 (0.0425)	validation_time 0.0005 (0.0008)	train_time 0.0401 (0.0405)
record: (train_acc, test_acc) (0.6377000136375427, 0.612000048160553)
last accs (train_acc, test_acc) (0.7476000301241875, 0.4790000319480896)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.55it/s] 15%|#5        | 4/26 [00:00<00:01, 17.17it/s] 27%|##6       | 7/26 [00:00<00:00, 21.27it/s] 38%|###8      | 10/26 [00:00<00:00, 23.85it/s] 50%|#####     | 13/26 [00:00<00:00, 25.66it/s] 65%|######5   | 17/26 [00:00<00:00, 27.21it/s] 81%|########  | 21/26 [00:00<00:00, 28.56it/s] 96%|#########6| 25/26 [00:00<00:00, 29.20it/s]100%|##########| 26/26 [00:01<00:00, 24.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.004 (0.006)	train_nll   0.55 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.74 (  0.66)	train_minacc   0.44 (  0.49)	train_majacc   0.80 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.97it/s] 23%|##3       | 6/26 [00:00<00:00, 28.38it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.38it/s] 46%|####6     | 12/26 [00:00<00:00, 39.69it/s] 65%|######5   | 17/26 [00:00<00:00, 42.53it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.53it/s] 88%|########8 | 23/26 [00:00<00:00, 47.90it/s]100%|##########| 26/26 [00:00<00:00, 38.37it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.67 (  0.67)	test_minacc   0.65 (  0.65)	test_majacc   0.68 (  0.68)	Loss_d 0.639 (0.639)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.652 (0.617)	test_acc   0.62 (  0.67)	test_minacc   0.58 (  0.59)	test_majacc   0.63 (  0.68)	Loss_d 0.652 (0.617)	test_acc_d   0.62 (  0.67)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.63 (  0.68)	test_corr_d   0.27 (  0.32)
Test: [  20/  26]	Loss 0.630 (0.616)	test_acc   0.67 (  0.67)	test_minacc   0.64 (  0.60)	test_majacc   0.67 (  0.69)	Loss_d 0.630 (0.616)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.64 (  0.60)	test_majacc_d   0.67 (  0.69)	test_corr_d   0.27 (  0.32)
Test: [  26/  26]	Loss 0.595 (0.612)	test_acc   0.69 (  0.68)	test_minacc   0.54 (  0.60)	test_majacc   0.72 (  0.69)	Loss_d 0.595 (0.612)	test_acc_d   0.69 (  0.68)	test_minacc_d   0.54 (  0.60)	test_majacc_d   0.72 (  0.69)	test_corr_d   0.42 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.04it/s]
Test: [  0/  1]	Loss 0.662 (0.662)	test_acc   0.65 (  0.65)	test_minacc   0.63 (  0.63)	test_majacc   0.79 (  0.79)	Loss_d 0.662 (0.662)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.79 (  0.79)	test_corr_d  -0.21 ( -0.21)
Test: [  1/  1]	Loss 0.662 (0.662)	test_acc   0.65 (  0.65)	test_minacc   0.63 (  0.63)	test_majacc   0.79 (  0.79)	Loss_d 0.662 (0.662)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.79 (  0.79)	test_corr_d  -0.21 ( -0.21)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/23/checkpoints/model_best.pth
Overall Timing[ 25/  1]	epoch_time 0.0401 (0.0424)	validation_time 0.0004 (0.0008)	train_time 0.0396 (0.0405)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.26it/s] 15%|#5        | 4/26 [00:00<00:01, 18.85it/s] 27%|##6       | 7/26 [00:00<00:00, 23.46it/s] 42%|####2     | 11/26 [00:00<00:00, 26.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.79it/s] 88%|########8 | 23/26 [00:00<00:00, 29.23it/s]100%|##########| 26/26 [00:01<00:00, 25.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.003 (0.004)	train_nll   0.57 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.76 (  0.65)	train_minacc   0.49 (  0.54)	train_majacc   0.81 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.92it/s] 27%|##6       | 7/26 [00:00<00:00, 34.69it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.69it/s] 50%|#####     | 13/26 [00:00<00:00, 42.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.96it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.96it/s] 96%|#########6| 25/26 [00:00<00:00, 46.24it/s]100%|##########| 26/26 [00:00<00:00, 39.25it/s]
Test: [   0/  26]	Loss 0.550 (0.550)	test_acc   0.70 (  0.70)	test_minacc   0.39 (  0.39)	test_majacc   0.76 (  0.76)	Loss_d 0.550 (0.550)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.573 (0.559)	test_acc   0.70 (  0.71)	test_minacc   0.44 (  0.44)	test_majacc   0.74 (  0.75)	Loss_d 0.573 (0.559)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.74 (  0.75)	test_corr_d   0.55 (  0.56)
Test: [  20/  26]	Loss 0.563 (0.556)	test_acc   0.70 (  0.71)	test_minacc   0.47 (  0.42)	test_majacc   0.74 (  0.76)	Loss_d 0.563 (0.556)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.47 (  0.42)	test_majacc_d   0.74 (  0.76)	test_corr_d   0.51 (  0.56)
Test: [  26/  26]	Loss 0.545 (0.555)	test_acc   0.70 (  0.71)	test_minacc   0.46 (  0.42)	test_majacc   0.74 (  0.76)	Loss_d 0.545 (0.555)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.46 (  0.42)	test_majacc_d   0.74 (  0.76)	test_corr_d   0.56 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.75it/s]
Test: [  0/  1]	Loss 1.007 (1.007)	test_acc   0.43 (  0.43)	test_minacc   0.39 (  0.39)	test_majacc   0.83 (  0.83)	Loss_d 1.007 (1.007)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 1.007 (1.007)	test_acc   0.43 (  0.43)	test_minacc   0.39 (  0.39)	test_majacc   0.83 (  0.83)	Loss_d 1.007 (1.007)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.31 (  0.31)
Overall Timing[ 26/  1]	epoch_time 0.0401 (0.0423)	validation_time 0.0007 (0.0008)	train_time 0.0394 (0.0405)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.70740003657341, 0.43400001525878906)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 15%|#5        | 4/26 [00:00<00:01, 14.70it/s] 27%|##6       | 7/26 [00:00<00:00, 20.04it/s] 38%|###8      | 10/26 [00:00<00:00, 23.23it/s] 50%|#####     | 13/26 [00:00<00:00, 25.15it/s] 62%|######1   | 16/26 [00:00<00:00, 26.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.04it/s] 88%|########8 | 23/26 [00:00<00:00, 28.42it/s]100%|##########| 26/26 [00:01<00:00, 23.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.001 (0.002)	train_nll   0.64 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.60 (  0.64)	train_minacc   0.68 (  0.59)	train_majacc   0.58 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.97it/s] 27%|##6       | 7/26 [00:00<00:00, 31.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.55it/s] 50%|#####     | 13/26 [00:00<00:00, 38.12it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.74it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.74it/s] 96%|#########6| 25/26 [00:00<00:00, 46.31it/s]100%|##########| 26/26 [00:00<00:00, 37.97it/s]
Test: [   0/  26]	Loss 0.611 (0.611)	test_acc   0.65 (  0.65)	test_minacc   0.66 (  0.66)	test_majacc   0.65 (  0.65)	Loss_d 0.611 (0.611)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.629 (0.612)	test_acc   0.61 (  0.63)	test_minacc   0.56 (  0.60)	test_majacc   0.61 (  0.64)	Loss_d 0.629 (0.612)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.56 (  0.60)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.30 (  0.34)
Test: [  20/  26]	Loss 0.610 (0.607)	test_acc   0.66 (  0.64)	test_minacc   0.68 (  0.61)	test_majacc   0.66 (  0.65)	Loss_d 0.610 (0.607)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.68 (  0.61)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.30 (  0.34)
Test: [  26/  26]	Loss 0.595 (0.606)	test_acc   0.66 (  0.64)	test_minacc   0.56 (  0.62)	test_majacc   0.68 (  0.65)	Loss_d 0.595 (0.606)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.56 (  0.62)	test_majacc_d   0.68 (  0.65)	test_corr_d   0.35 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.34it/s]
Test: [  0/  1]	Loss 0.770 (0.770)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.71 (  0.71)	Loss_d 0.770 (0.770)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.71 (  0.71)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.770 (0.770)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.71 (  0.71)	Loss_d 0.770 (0.770)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.71 (  0.71)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 27/  1]	epoch_time 0.0407 (0.0422)	validation_time 0.0005 (0.0008)	train_time 0.0402 (0.0404)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.643200015604496, 0.5890000462532043)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.90it/s] 15%|#5        | 4/26 [00:00<00:01, 17.80it/s] 27%|##6       | 7/26 [00:00<00:00, 22.10it/s] 38%|###8      | 10/26 [00:00<00:00, 24.82it/s] 50%|#####     | 13/26 [00:00<00:00, 26.42it/s] 65%|######5   | 17/26 [00:00<00:00, 27.90it/s] 81%|########  | 21/26 [00:00<00:00, 28.68it/s] 96%|#########6| 25/26 [00:00<00:00, 29.33it/s]100%|##########| 26/26 [00:01<00:00, 24.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.002 (0.002)	train_nll   0.58 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.69 (  0.61)	train_minacc   0.51 (  0.58)	train_majacc   0.72 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.62it/s] 27%|##6       | 7/26 [00:00<00:00, 32.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.19it/s] 46%|####6     | 12/26 [00:00<00:00, 37.91it/s] 65%|######5   | 17/26 [00:00<00:00, 42.15it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.15it/s] 88%|########8 | 23/26 [00:00<00:00, 46.70it/s]100%|##########| 26/26 [00:00<00:00, 37.54it/s]
Test: [   0/  26]	Loss 0.569 (0.569)	test_acc   0.69 (  0.69)	test_minacc   0.53 (  0.53)	test_majacc   0.72 (  0.72)	Loss_d 0.569 (0.569)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.577 (0.573)	test_acc   0.70 (  0.71)	test_minacc   0.53 (  0.55)	test_majacc   0.73 (  0.73)	Loss_d 0.577 (0.573)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.53 (  0.55)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.46 (  0.48)
Test: [  20/  26]	Loss 0.580 (0.573)	test_acc   0.69 (  0.71)	test_minacc   0.59 (  0.56)	test_majacc   0.71 (  0.73)	Loss_d 0.580 (0.573)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.44 (  0.48)
Test: [  26/  26]	Loss 0.558 (0.573)	test_acc   0.72 (  0.71)	test_minacc   0.51 (  0.56)	test_majacc   0.76 (  0.73)	Loss_d 0.558 (0.573)	test_acc_d   0.72 (  0.71)	test_minacc_d   0.51 (  0.56)	test_majacc_d   0.76 (  0.73)	test_corr_d   0.50 (  0.48)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 34.72it/s]
Test: [  0/  1]	Loss 0.838 (0.838)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.81 (  0.81)	Loss_d 0.838 (0.838)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.838 (0.838)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.81 (  0.81)	Loss_d 0.838 (0.838)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.81 (  0.81)	test_corr_d   0.09 (  0.09)
Overall Timing[ 28/  1]	epoch_time 0.0400 (0.0422)	validation_time 0.0006 (0.0008)	train_time 0.0393 (0.0404)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.7090000339150428, 0.5610000491142273)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 15%|#5        | 4/26 [00:00<00:01, 15.71it/s] 31%|###       | 8/26 [00:00<00:00, 22.37it/s] 46%|####6     | 12/26 [00:00<00:00, 25.57it/s] 62%|######1   | 16/26 [00:00<00:00, 27.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.00it/s] 88%|########8 | 23/26 [00:00<00:00, 29.15it/s]100%|##########| 26/26 [00:01<00:00, 24.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.59 (  0.61)	train_minacc   0.54 (  0.62)	train_majacc   0.60 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.95it/s] 27%|##6       | 7/26 [00:00<00:00, 35.22it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.22it/s] 46%|####6     | 12/26 [00:00<00:00, 41.02it/s] 69%|######9   | 18/26 [00:00<00:00, 46.06it/s]                                                69%|######9   | 18/26 [00:00<00:00, 46.06it/s] 88%|########8 | 23/26 [00:00<00:00, 46.48it/s]100%|##########| 26/26 [00:00<00:00, 38.96it/s]
Test: [   0/  26]	Loss 0.642 (0.642)	test_acc   0.63 (  0.63)	test_minacc   0.50 (  0.50)	test_majacc   0.65 (  0.65)	Loss_d 0.642 (0.642)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.653 (0.648)	test_acc   0.62 (  0.61)	test_minacc   0.53 (  0.52)	test_majacc   0.64 (  0.63)	Loss_d 0.653 (0.648)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.53 (  0.52)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.28 (  0.27)
Test: [  20/  26]	Loss 0.657 (0.646)	test_acc   0.62 (  0.62)	test_minacc   0.56 (  0.52)	test_majacc   0.63 (  0.63)	Loss_d 0.657 (0.646)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.56 (  0.52)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.22 (  0.27)
Test: [  26/  26]	Loss 0.625 (0.645)	test_acc   0.64 (  0.62)	test_minacc   0.51 (  0.53)	test_majacc   0.67 (  0.63)	Loss_d 0.625 (0.645)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.51 (  0.53)	test_majacc_d   0.67 (  0.63)	test_corr_d   0.31 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.89it/s]
Test: [  0/  1]	Loss 0.757 (0.757)	test_acc   0.55 (  0.55)	test_minacc   0.53 (  0.53)	test_majacc   0.70 (  0.70)	Loss_d 0.757 (0.757)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.70 (  0.70)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.757 (0.757)	test_acc   0.55 (  0.55)	test_minacc   0.53 (  0.53)	test_majacc   0.70 (  0.70)	Loss_d 0.757 (0.757)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.70 (  0.70)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 29/  1]	epoch_time 0.0382 (0.0420)	validation_time 0.0004 (0.0008)	train_time 0.0376 (0.0403)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6170000141263008, 0.5460000038146973)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.52it/s] 15%|#5        | 4/26 [00:00<00:01, 15.61it/s] 27%|##6       | 7/26 [00:00<00:00, 20.14it/s] 38%|###8      | 10/26 [00:00<00:00, 22.78it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.80it/s] 69%|######9   | 18/26 [00:00<00:00, 27.52it/s] 85%|########4 | 22/26 [00:00<00:00, 28.60it/s]100%|##########| 26/26 [00:01<00:00, 29.42it/s]100%|##########| 26/26 [00:01<00:00, 24.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.001 (0.001)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.62 (  0.60)	train_minacc   0.71 (  0.66)	train_majacc   0.60 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.30it/s] 15%|#5        | 4/26 [00:00<00:01, 18.06it/s] 38%|###8      | 10/26 [00:00<00:00, 33.43it/s]                                                38%|###8      | 10/26 [00:00<00:00, 33.43it/s] 62%|######1   | 16/26 [00:00<00:00, 37.37it/s]                                                62%|######1   | 16/26 [00:00<00:00, 37.37it/s] 85%|########4 | 22/26 [00:00<00:00, 42.93it/s]100%|##########| 26/26 [00:00<00:00, 35.55it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.53 (  0.53)	test_minacc   0.68 (  0.68)	test_majacc   0.50 (  0.50)	Loss_d 0.644 (0.644)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.643 (0.649)	test_acc   0.55 (  0.54)	test_minacc   0.67 (  0.69)	test_majacc   0.53 (  0.51)	Loss_d 0.643 (0.649)	test_acc_d   0.55 (  0.54)	test_minacc_d   0.67 (  0.69)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.25 (  0.23)
Test: [  20/  26]	Loss 0.661 (0.649)	test_acc   0.49 (  0.54)	test_minacc   0.71 (  0.71)	test_majacc   0.45 (  0.51)	Loss_d 0.661 (0.649)	test_acc_d   0.49 (  0.54)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.45 (  0.51)	test_corr_d   0.15 (  0.22)
Test: [  26/  26]	Loss 0.626 (0.648)	test_acc   0.57 (  0.54)	test_minacc   0.73 (  0.71)	test_majacc   0.54 (  0.51)	Loss_d 0.626 (0.648)	test_acc_d   0.57 (  0.54)	test_minacc_d   0.73 (  0.71)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.28 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.33it/s]
Test: [  0/  1]	Loss 0.715 (0.715)	test_acc   0.70 (  0.70)	test_minacc   0.72 (  0.72)	test_majacc   0.56 (  0.56)	Loss_d 0.715 (0.715)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.18 ( -0.18)
Test: [  1/  1]	Loss 0.715 (0.715)	test_acc   0.70 (  0.70)	test_minacc   0.72 (  0.72)	test_majacc   0.56 (  0.56)	Loss_d 0.715 (0.715)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.72 (  0.72)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.18 ( -0.18)
Overall Timing[ 30/  1]	epoch_time 0.0403 (0.0420)	validation_time 0.0005 (0.0008)	train_time 0.0398 (0.0403)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.5422000166475773, 0.7040000557899475)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.39it/s] 15%|#5        | 4/26 [00:00<00:01, 17.29it/s] 27%|##6       | 7/26 [00:00<00:00, 22.23it/s] 42%|####2     | 11/26 [00:00<00:00, 25.82it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.00it/s] 85%|########4 | 22/26 [00:00<00:00, 28.96it/s] 96%|#########6| 25/26 [00:00<00:00, 28.60it/s]100%|##########| 26/26 [00:01<00:00, 24.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.001 (0.003)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.64 (  0.61)	train_minacc   0.51 (  0.57)	train_majacc   0.67 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.64it/s] 27%|##6       | 7/26 [00:00<00:00, 30.72it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.72it/s] 50%|#####     | 13/26 [00:00<00:00, 38.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.63it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.63it/s] 96%|#########6| 25/26 [00:00<00:00, 46.83it/s]100%|##########| 26/26 [00:00<00:00, 37.72it/s]
Test: [   0/  26]	Loss 0.621 (0.621)	test_acc   0.63 (  0.63)	test_minacc   0.58 (  0.58)	test_majacc   0.63 (  0.63)	Loss_d 0.621 (0.621)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.628 (0.616)	test_acc   0.60 (  0.64)	test_minacc   0.49 (  0.56)	test_majacc   0.62 (  0.65)	Loss_d 0.628 (0.616)	test_acc_d   0.60 (  0.64)	test_minacc_d   0.49 (  0.56)	test_majacc_d   0.62 (  0.65)	test_corr_d   0.34 (  0.37)
Test: [  20/  26]	Loss 0.651 (0.623)	test_acc   0.58 (  0.64)	test_minacc   0.54 (  0.56)	test_majacc   0.59 (  0.65)	Loss_d 0.651 (0.623)	test_acc_d   0.58 (  0.64)	test_minacc_d   0.54 (  0.56)	test_majacc_d   0.59 (  0.65)	test_corr_d   0.27 (  0.37)
Test: [  26/  26]	Loss 0.596 (0.622)	test_acc   0.67 (  0.64)	test_minacc   0.56 (  0.55)	test_majacc   0.69 (  0.65)	Loss_d 0.596 (0.622)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.69 (  0.65)	test_corr_d   0.43 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.83it/s]
Test: [  0/  1]	Loss 0.753 (0.753)	test_acc   0.57 (  0.57)	test_minacc   0.55 (  0.55)	test_majacc   0.69 (  0.69)	Loss_d 0.753 (0.753)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.753 (0.753)	test_acc   0.57 (  0.57)	test_minacc   0.55 (  0.55)	test_majacc   0.69 (  0.69)	Loss_d 0.753 (0.753)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 31/  1]	epoch_time 0.0417 (0.0420)	validation_time 0.0005 (0.0008)	train_time 0.0411 (0.0403)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6376000186800956, 0.5660000443458557)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 15.38it/s] 19%|#9        | 5/26 [00:00<00:00, 22.45it/s] 31%|###       | 8/26 [00:00<00:00, 25.52it/s] 42%|####2     | 11/26 [00:00<00:00, 25.93it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.99it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.96it/s] 88%|########8 | 23/26 [00:00<00:00, 29.50it/s]100%|##########| 26/26 [00:00<00:00, 26.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.002 (0.003)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.60 (  0.63)	train_minacc   0.54 (  0.56)	train_majacc   0.61 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.98it/s] 27%|##6       | 7/26 [00:00<00:00, 34.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.79it/s] 46%|####6     | 12/26 [00:00<00:00, 40.79it/s] 69%|######9   | 18/26 [00:00<00:00, 45.94it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.94it/s] 92%|#########2| 24/26 [00:00<00:00, 50.29it/s]100%|##########| 26/26 [00:00<00:00, 39.93it/s]
Test: [   0/  26]	Loss 0.626 (0.626)	test_acc   0.59 (  0.59)	test_minacc   0.66 (  0.66)	test_majacc   0.58 (  0.58)	Loss_d 0.626 (0.626)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.637 (0.632)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.59)	test_majacc   0.61 (  0.62)	Loss_d 0.637 (0.632)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.59)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.34 (  0.34)
Test: [  20/  26]	Loss 0.648 (0.632)	test_acc   0.56 (  0.62)	test_minacc   0.63 (  0.60)	test_majacc   0.55 (  0.62)	Loss_d 0.648 (0.632)	test_acc_d   0.56 (  0.62)	test_minacc_d   0.63 (  0.60)	test_majacc_d   0.55 (  0.62)	test_corr_d   0.31 (  0.34)
Test: [  26/  26]	Loss 0.624 (0.631)	test_acc   0.58 (  0.62)	test_minacc   0.51 (  0.59)	test_majacc   0.59 (  0.62)	Loss_d 0.624 (0.631)	test_acc_d   0.58 (  0.62)	test_minacc_d   0.51 (  0.59)	test_majacc_d   0.59 (  0.62)	test_corr_d   0.35 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 22.80it/s]
Test: [  0/  1]	Loss 0.750 (0.750)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.66 (  0.66)	Loss_d 0.750 (0.750)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.750 (0.750)	test_acc   0.64 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.66 (  0.66)	Loss_d 0.750 (0.750)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.02 (  0.02)
Overall Timing[ 32/  1]	epoch_time 0.0407 (0.0419)	validation_time 0.0008 (0.0008)	train_time 0.0398 (0.0403)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6160000091791153, 0.6390000581741333)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.76it/s] 15%|#5        | 4/26 [00:00<00:01, 16.35it/s] 27%|##6       | 7/26 [00:00<00:00, 21.40it/s] 42%|####2     | 11/26 [00:00<00:00, 25.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.37it/s] 88%|########8 | 23/26 [00:00<00:00, 28.72it/s]100%|##########| 26/26 [00:01<00:00, 24.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.53 (  0.57)	train_minacc   0.68 (  0.58)	train_majacc   0.50 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.11it/s] 27%|##6       | 7/26 [00:00<00:00, 35.72it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.72it/s] 50%|#####     | 13/26 [00:00<00:00, 41.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.09it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.09it/s] 96%|#########6| 25/26 [00:00<00:00, 44.65it/s]100%|##########| 26/26 [00:00<00:00, 38.67it/s]
Test: [   0/  26]	Loss 0.651 (0.651)	test_acc   0.56 (  0.56)	test_minacc   0.73 (  0.73)	test_majacc   0.53 (  0.53)	Loss_d 0.651 (0.651)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.665 (0.655)	test_acc   0.52 (  0.55)	test_minacc   0.69 (  0.68)	test_majacc   0.49 (  0.52)	Loss_d 0.665 (0.655)	test_acc_d   0.52 (  0.55)	test_minacc_d   0.69 (  0.68)	test_majacc_d   0.49 (  0.52)	test_corr_d   0.19 (  0.20)
Test: [  20/  26]	Loss 0.657 (0.655)	test_acc   0.57 (  0.55)	test_minacc   0.75 (  0.69)	test_majacc   0.53 (  0.53)	Loss_d 0.657 (0.655)	test_acc_d   0.57 (  0.55)	test_minacc_d   0.75 (  0.69)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.18 (  0.19)
Test: [  26/  26]	Loss 0.650 (0.654)	test_acc   0.55 (  0.56)	test_minacc   0.71 (  0.69)	test_majacc   0.52 (  0.53)	Loss_d 0.650 (0.654)	test_acc_d   0.55 (  0.56)	test_minacc_d   0.71 (  0.69)	test_majacc_d   0.52 (  0.53)	test_corr_d   0.19 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.59it/s]
Test: [  0/  1]	Loss 0.672 (0.672)	test_acc   0.68 (  0.68)	test_minacc   0.69 (  0.69)	test_majacc   0.59 (  0.59)	Loss_d 0.672 (0.672)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.14 ( -0.14)
Test: [  1/  1]	Loss 0.672 (0.672)	test_acc   0.68 (  0.68)	test_minacc   0.69 (  0.69)	test_majacc   0.59 (  0.59)	Loss_d 0.672 (0.672)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.14 ( -0.14)
Overall Timing[ 33/  1]	epoch_time 0.0432 (0.0420)	validation_time 0.0005 (0.0008)	train_time 0.0426 (0.0404)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.555100009560585, 0.6780000329017639)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.82it/s] 15%|#5        | 4/26 [00:00<00:01, 16.59it/s] 27%|##6       | 7/26 [00:00<00:00, 20.17it/s] 42%|####2     | 11/26 [00:00<00:00, 24.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.63it/s] 69%|######9   | 18/26 [00:00<00:00, 27.48it/s] 81%|########  | 21/26 [00:00<00:00, 28.13it/s] 92%|#########2| 24/26 [00:00<00:00, 27.87it/s]100%|##########| 26/26 [00:01<00:00, 23.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.002 (0.002)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.78)	train_acc   0.63 (  0.62)	train_minacc   0.61 (  0.64)	train_majacc   0.64 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.33it/s] 27%|##6       | 7/26 [00:00<00:00, 32.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.12it/s] 46%|####6     | 12/26 [00:00<00:00, 39.01it/s] 65%|######5   | 17/26 [00:00<00:00, 38.67it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.67it/s] 85%|########4 | 22/26 [00:00<00:00, 41.19it/s]100%|##########| 26/26 [00:00<00:00, 35.68it/s]
Test: [   0/  26]	Loss 0.627 (0.627)	test_acc   0.56 (  0.56)	test_minacc   0.74 (  0.74)	test_majacc   0.53 (  0.53)	Loss_d 0.627 (0.627)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.651 (0.642)	test_acc   0.56 (  0.56)	test_minacc   0.67 (  0.68)	test_majacc   0.54 (  0.53)	Loss_d 0.651 (0.642)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.67 (  0.68)	test_majacc_d   0.54 (  0.53)	test_corr_d   0.29 (  0.28)
Test: [  20/  26]	Loss 0.665 (0.640)	test_acc   0.52 (  0.56)	test_minacc   0.68 (  0.69)	test_majacc   0.49 (  0.54)	Loss_d 0.665 (0.640)	test_acc_d   0.52 (  0.56)	test_minacc_d   0.68 (  0.69)	test_majacc_d   0.49 (  0.54)	test_corr_d   0.22 (  0.28)
Test: [  26/  26]	Loss 0.621 (0.639)	test_acc   0.56 (  0.57)	test_minacc   0.56 (  0.69)	test_majacc   0.56 (  0.54)	Loss_d 0.621 (0.639)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.56 (  0.69)	test_majacc_d   0.56 (  0.54)	test_corr_d   0.32 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.07it/s]
Test: [  0/  1]	Loss 0.819 (0.819)	test_acc   0.69 (  0.69)	test_minacc   0.70 (  0.70)	test_majacc   0.55 (  0.55)	Loss_d 0.819 (0.819)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.819 (0.819)	test_acc   0.69 (  0.69)	test_minacc   0.70 (  0.70)	test_majacc   0.55 (  0.55)	Loss_d 0.819 (0.819)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 34/  1]	epoch_time 0.0418 (0.0420)	validation_time 0.0005 (0.0007)	train_time 0.0413 (0.0404)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.5670000067353249, 0.6850000619888306)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.16it/s] 15%|#5        | 4/26 [00:00<00:01, 15.39it/s] 27%|##6       | 7/26 [00:00<00:00, 20.41it/s] 42%|####2     | 11/26 [00:00<00:00, 24.64it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.98it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.31it/s] 88%|########8 | 23/26 [00:00<00:00, 29.13it/s]100%|##########| 26/26 [00:01<00:00, 24.19it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.57 (  0.57)	train_minacc   0.63 (  0.70)	train_majacc   0.56 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.83it/s] 27%|##6       | 7/26 [00:00<00:00, 37.37it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.37it/s] 46%|####6     | 12/26 [00:00<00:00, 40.70it/s] 65%|######5   | 17/26 [00:00<00:00, 43.54it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.54it/s] 88%|########8 | 23/26 [00:00<00:00, 48.05it/s]100%|##########| 26/26 [00:00<00:00, 39.93it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.60 (  0.60)	test_minacc   0.55 (  0.55)	test_majacc   0.61 (  0.61)	Loss_d 0.648 (0.648)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.661 (0.654)	test_acc   0.58 (  0.59)	test_minacc   0.51 (  0.54)	test_majacc   0.59 (  0.60)	Loss_d 0.661 (0.654)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.24 (  0.24)
Test: [  20/  26]	Loss 0.660 (0.655)	test_acc   0.59 (  0.59)	test_minacc   0.49 (  0.53)	test_majacc   0.60 (  0.60)	Loss_d 0.660 (0.655)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.49 (  0.53)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.21 (  0.24)
Test: [  26/  26]	Loss 0.650 (0.654)	test_acc   0.60 (  0.59)	test_minacc   0.56 (  0.54)	test_majacc   0.60 (  0.60)	Loss_d 0.650 (0.654)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.23 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.48it/s]
Test: [  0/  1]	Loss 0.719 (0.719)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.62 (  0.62)	Loss_d 0.719 (0.719)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.719 (0.719)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.62 (  0.62)	Loss_d 0.719 (0.719)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 35/  1]	epoch_time 0.0391 (0.0419)	validation_time 0.0005 (0.0007)	train_time 0.0386 (0.0403)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.5880000045895577, 0.5100000500679016)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.27it/s] 15%|#5        | 4/26 [00:00<00:01, 18.90it/s] 27%|##6       | 7/26 [00:00<00:00, 22.18it/s] 38%|###8      | 10/26 [00:00<00:00, 24.65it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.95it/s] 65%|######5   | 17/26 [00:00<00:00, 27.39it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.93it/s] 88%|########8 | 23/26 [00:00<00:00, 28.51it/s]100%|##########| 26/26 [00:01<00:00, 24.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.001 (0.001)	train_nll   0.62 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.64 (  0.57)	train_minacc   0.61 (  0.64)	train_majacc   0.65 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.55it/s] 27%|##6       | 7/26 [00:00<00:00, 28.90it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.90it/s] 50%|#####     | 13/26 [00:00<00:00, 36.30it/s] 69%|######9   | 18/26 [00:00<00:00, 40.33it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.33it/s] 92%|#########2| 24/26 [00:00<00:00, 45.14it/s]100%|##########| 26/26 [00:00<00:00, 34.58it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.62 (  0.62)	test_minacc   0.50 (  0.50)	test_majacc   0.64 (  0.64)	Loss_d 0.634 (0.634)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.647 (0.642)	test_acc   0.62 (  0.62)	test_minacc   0.51 (  0.53)	test_majacc   0.64 (  0.63)	Loss_d 0.647 (0.642)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.51 (  0.53)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.28 (  0.27)
Test: [  20/  26]	Loss 0.648 (0.643)	test_acc   0.61 (  0.62)	test_minacc   0.51 (  0.51)	test_majacc   0.63 (  0.64)	Loss_d 0.648 (0.643)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.22 (  0.27)
Test: [  26/  26]	Loss 0.630 (0.642)	test_acc   0.63 (  0.62)	test_minacc   0.54 (  0.52)	test_majacc   0.65 (  0.63)	Loss_d 0.630 (0.642)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.30 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.46it/s]
Test: [  0/  1]	Loss 0.741 (0.741)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.68 (  0.68)	Loss_d 0.741 (0.741)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.741 (0.741)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.68 (  0.68)	Loss_d 0.741 (0.741)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 36/  1]	epoch_time 0.0408 (0.0418)	validation_time 0.0004 (0.0007)	train_time 0.0404 (0.0403)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.61650001257658, 0.5180000066757202)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.97it/s] 15%|#5        | 4/26 [00:00<00:01, 14.20it/s] 27%|##6       | 7/26 [00:00<00:01, 18.93it/s] 38%|###8      | 10/26 [00:00<00:00, 22.37it/s] 50%|#####     | 13/26 [00:00<00:00, 24.75it/s] 65%|######5   | 17/26 [00:00<00:00, 26.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.29it/s] 92%|#########2| 24/26 [00:01<00:00, 28.44it/s]100%|##########| 26/26 [00:01<00:00, 23.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.63 (  0.56)	train_minacc   0.63 (  0.65)	train_majacc   0.63 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.52it/s] 27%|##6       | 7/26 [00:00<00:00, 35.05it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.05it/s] 50%|#####     | 13/26 [00:00<00:00, 41.12it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.95it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.95it/s] 96%|#########6| 25/26 [00:00<00:00, 48.40it/s]100%|##########| 26/26 [00:00<00:00, 40.25it/s]
Test: [   0/  26]	Loss 0.617 (0.617)	test_acc   0.63 (  0.63)	test_minacc   0.52 (  0.52)	test_majacc   0.65 (  0.65)	Loss_d 0.617 (0.617)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.628 (0.626)	test_acc   0.62 (  0.62)	test_minacc   0.51 (  0.56)	test_majacc   0.64 (  0.63)	Loss_d 0.628 (0.626)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.51 (  0.56)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.33 (  0.32)
Test: [  20/  26]	Loss 0.633 (0.626)	test_acc   0.61 (  0.62)	test_minacc   0.59 (  0.55)	test_majacc   0.61 (  0.64)	Loss_d 0.633 (0.626)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.29 (  0.32)
Test: [  26/  26]	Loss 0.621 (0.626)	test_acc   0.64 (  0.62)	test_minacc   0.49 (  0.55)	test_majacc   0.67 (  0.64)	Loss_d 0.621 (0.626)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.49 (  0.55)	test_majacc_d   0.67 (  0.64)	test_corr_d   0.35 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.39it/s]
Test: [  0/  1]	Loss 0.738 (0.738)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.66 (  0.66)	Loss_d 0.738 (0.738)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.738 (0.738)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.66 (  0.66)	Loss_d 0.738 (0.738)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 37/  1]	epoch_time 0.0403 (0.0418)	validation_time 0.0005 (0.0007)	train_time 0.0397 (0.0403)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6224000077843667, 0.5370000004768372)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.51it/s] 12%|#1        | 3/26 [00:00<00:01, 12.56it/s] 23%|##3       | 6/26 [00:00<00:01, 19.06it/s] 38%|###8      | 10/26 [00:00<00:00, 23.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.34it/s] 65%|######5   | 17/26 [00:00<00:00, 27.24it/s] 81%|########  | 21/26 [00:00<00:00, 28.54it/s] 92%|#########2| 24/26 [00:00<00:00, 27.84it/s]100%|##########| 26/26 [00:01<00:00, 23.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.56 (  0.62)	train_minacc   0.73 (  0.61)	train_majacc   0.53 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.93it/s] 23%|##3       | 6/26 [00:00<00:00, 30.14it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.14it/s] 42%|####2     | 11/26 [00:00<00:00, 37.83it/s] 65%|######5   | 17/26 [00:00<00:00, 39.95it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.95it/s] 88%|########8 | 23/26 [00:00<00:00, 44.92it/s]100%|##########| 26/26 [00:00<00:00, 36.66it/s]
Test: [   0/  26]	Loss 0.621 (0.621)	test_acc   0.61 (  0.61)	test_minacc   0.66 (  0.66)	test_majacc   0.59 (  0.59)	Loss_d 0.621 (0.621)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.631 (0.628)	test_acc   0.57 (  0.59)	test_minacc   0.71 (  0.70)	test_majacc   0.55 (  0.57)	Loss_d 0.631 (0.628)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.71 (  0.70)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.31 (  0.30)
Test: [  20/  26]	Loss 0.635 (0.629)	test_acc   0.58 (  0.59)	test_minacc   0.73 (  0.70)	test_majacc   0.55 (  0.57)	Loss_d 0.635 (0.629)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.73 (  0.70)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.27 (  0.30)
Test: [  26/  26]	Loss 0.626 (0.630)	test_acc   0.56 (  0.59)	test_minacc   0.56 (  0.70)	test_majacc   0.56 (  0.57)	Loss_d 0.626 (0.630)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.56 (  0.70)	test_majacc_d   0.56 (  0.57)	test_corr_d   0.31 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.30it/s]
Test: [  0/  1]	Loss 0.768 (0.768)	test_acc   0.70 (  0.70)	test_minacc   0.70 (  0.70)	test_majacc   0.62 (  0.62)	Loss_d 0.768 (0.768)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.768 (0.768)	test_acc   0.70 (  0.70)	test_minacc   0.70 (  0.70)	test_majacc   0.62 (  0.62)	Loss_d 0.768 (0.768)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 38/  1]	epoch_time 0.0448 (0.0419)	validation_time 0.0004 (0.0007)	train_time 0.0444 (0.0404)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.5892000089883804, 0.6950000524520874)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.78it/s] 15%|#5        | 4/26 [00:00<00:01, 17.08it/s] 27%|##6       | 7/26 [00:00<00:00, 21.67it/s] 38%|###8      | 10/26 [00:00<00:00, 24.21it/s] 50%|#####     | 13/26 [00:00<00:00, 25.14it/s] 62%|######1   | 16/26 [00:00<00:00, 26.30it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.30it/s] 85%|########4 | 22/26 [00:00<00:00, 27.37it/s] 96%|#########6| 25/26 [00:01<00:00, 27.40it/s]100%|##########| 26/26 [00:01<00:00, 23.78it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.002 (0.001)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.64 (  0.59)	train_minacc   0.66 (  0.65)	train_majacc   0.64 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.37it/s] 27%|##6       | 7/26 [00:00<00:00, 30.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.12it/s] 42%|####2     | 11/26 [00:00<00:00, 28.67it/s] 69%|######9   | 18/26 [00:00<00:00, 41.32it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.32it/s] 96%|#########6| 25/26 [00:00<00:00, 47.61it/s]100%|##########| 26/26 [00:00<00:00, 36.34it/s]
Test: [   0/  26]	Loss 0.621 (0.621)	test_acc   0.63 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.64 (  0.64)	Loss_d 0.621 (0.621)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.629 (0.627)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.61)	test_majacc   0.62 (  0.62)	Loss_d 0.629 (0.627)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.61)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.29 (  0.28)
Test: [  20/  26]	Loss 0.641 (0.628)	test_acc   0.61 (  0.62)	test_minacc   0.63 (  0.62)	test_majacc   0.60 (  0.62)	Loss_d 0.641 (0.628)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.63 (  0.62)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.22 (  0.28)
Test: [  26/  26]	Loss 0.617 (0.627)	test_acc   0.66 (  0.62)	test_minacc   0.59 (  0.62)	test_majacc   0.67 (  0.62)	Loss_d 0.617 (0.627)	test_acc_d   0.66 (  0.62)	test_minacc_d   0.59 (  0.62)	test_majacc_d   0.67 (  0.62)	test_corr_d   0.31 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.36it/s]
Test: [  0/  1]	Loss 0.721 (0.721)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.67 (  0.67)	Loss_d 0.721 (0.721)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.721 (0.721)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.67 (  0.67)	Loss_d 0.721 (0.721)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 39/  1]	epoch_time 0.0413 (0.0419)	validation_time 0.0005 (0.0007)	train_time 0.0408 (0.0404)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6197000074982643, 0.5830000042915344)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.08it/s] 15%|#5        | 4/26 [00:00<00:01, 16.20it/s] 27%|##6       | 7/26 [00:00<00:00, 21.11it/s] 38%|###8      | 10/26 [00:00<00:00, 23.96it/s] 50%|#####     | 13/26 [00:00<00:00, 25.65it/s] 62%|######1   | 16/26 [00:00<00:00, 26.73it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.48it/s] 88%|########8 | 23/26 [00:00<00:00, 28.34it/s]100%|##########| 26/26 [00:01<00:00, 28.49it/s]100%|##########| 26/26 [00:01<00:00, 23.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.64 (  0.58)	train_minacc   0.63 (  0.65)	train_majacc   0.64 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 27%|##6       | 7/26 [00:00<00:00, 30.22it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.22it/s] 50%|#####     | 13/26 [00:00<00:00, 35.60it/s] 69%|######9   | 18/26 [00:00<00:00, 40.10it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.10it/s] 88%|########8 | 23/26 [00:00<00:00, 42.60it/s]100%|##########| 26/26 [00:00<00:00, 35.12it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.62 (  0.62)	test_minacc   0.71 (  0.71)	test_majacc   0.60 (  0.60)	Loss_d 0.648 (0.648)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.651 (0.647)	test_acc   0.56 (  0.59)	test_minacc   0.64 (  0.68)	test_majacc   0.55 (  0.57)	Loss_d 0.651 (0.647)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.64 (  0.68)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.24 (  0.23)
Test: [  20/  26]	Loss 0.654 (0.647)	test_acc   0.59 (  0.59)	test_minacc   0.71 (  0.68)	test_majacc   0.57 (  0.57)	Loss_d 0.654 (0.647)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.71 (  0.68)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.19 (  0.22)
Test: [  26/  26]	Loss 0.647 (0.647)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.69)	test_majacc   0.59 (  0.57)	Loss_d 0.647 (0.647)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.69)	test_majacc_d   0.59 (  0.57)	test_corr_d   0.21 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.94it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.61 (  0.61)	Loss_d 0.695 (0.695)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.61 (  0.61)	Loss_d 0.695 (0.695)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.09 ( -0.09)
Overall Timing[ 40/  1]	epoch_time 0.0412 (0.0419)	validation_time 0.0005 (0.0007)	train_time 0.0407 (0.0404)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.5915000111460685, 0.6200000047683716)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.06it/s] 15%|#5        | 4/26 [00:00<00:01, 19.77it/s] 27%|##6       | 7/26 [00:00<00:00, 23.53it/s] 38%|###8      | 10/26 [00:00<00:00, 25.08it/s] 50%|#####     | 13/26 [00:00<00:00, 26.35it/s] 65%|######5   | 17/26 [00:00<00:00, 27.81it/s] 81%|########  | 21/26 [00:00<00:00, 28.84it/s] 96%|#########6| 25/26 [00:00<00:00, 29.58it/s]100%|##########| 26/26 [00:01<00:00, 25.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.52 (  0.57)	train_minacc   0.54 (  0.66)	train_majacc   0.51 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.65it/s] 23%|##3       | 6/26 [00:00<00:00, 29.41it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.41it/s] 42%|####2     | 11/26 [00:00<00:00, 37.41it/s] 65%|######5   | 17/26 [00:00<00:00, 40.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.58it/s] 88%|########8 | 23/26 [00:00<00:00, 45.00it/s]100%|##########| 26/26 [00:00<00:00, 37.17it/s]
Test: [   0/  26]	Loss 0.646 (0.646)	test_acc   0.62 (  0.62)	test_minacc   0.52 (  0.52)	test_majacc   0.64 (  0.64)	Loss_d 0.646 (0.646)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.650 (0.650)	test_acc   0.61 (  0.61)	test_minacc   0.49 (  0.50)	test_majacc   0.63 (  0.63)	Loss_d 0.650 (0.650)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.49 (  0.50)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.27 (  0.25)
Test: [  20/  26]	Loss 0.657 (0.651)	test_acc   0.61 (  0.61)	test_minacc   0.46 (  0.48)	test_majacc   0.63 (  0.63)	Loss_d 0.657 (0.651)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.46 (  0.48)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.22 (  0.25)
Test: [  26/  26]	Loss 0.642 (0.650)	test_acc   0.62 (  0.61)	test_minacc   0.54 (  0.49)	test_majacc   0.64 (  0.63)	Loss_d 0.642 (0.650)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.54 (  0.49)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.25 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.83it/s]
Test: [  0/  1]	Loss 0.731 (0.731)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.66 (  0.66)	Loss_d 0.731 (0.731)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.731 (0.731)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.66 (  0.66)	Loss_d 0.731 (0.731)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 41/  1]	epoch_time 0.0410 (0.0418)	validation_time 0.0021 (0.0007)	train_time 0.0389 (0.0404)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.606900006711483, 0.5010000467300415)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.55it/s] 15%|#5        | 4/26 [00:00<00:01, 19.84it/s] 27%|##6       | 7/26 [00:00<00:00, 23.70it/s] 38%|###8      | 10/26 [00:00<00:00, 24.96it/s] 50%|#####     | 13/26 [00:00<00:00, 26.09it/s] 65%|######5   | 17/26 [00:00<00:00, 27.43it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.75it/s] 92%|#########2| 24/26 [00:00<00:00, 28.76it/s]100%|##########| 26/26 [00:01<00:00, 25.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.002 (0.003)	train_nll   0.58 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.71 (  0.65)	train_minacc   0.54 (  0.57)	train_majacc   0.74 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.20it/s] 31%|###       | 8/26 [00:00<00:00, 39.40it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.40it/s] 50%|#####     | 13/26 [00:00<00:00, 41.52it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.83it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.83it/s] 92%|#########2| 24/26 [00:00<00:00, 44.62it/s]100%|##########| 26/26 [00:00<00:00, 39.35it/s]
Test: [   0/  26]	Loss 0.617 (0.617)	test_acc   0.57 (  0.57)	test_minacc   0.61 (  0.61)	test_majacc   0.57 (  0.57)	Loss_d 0.617 (0.617)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.619 (0.615)	test_acc   0.58 (  0.62)	test_minacc   0.58 (  0.61)	test_majacc   0.59 (  0.62)	Loss_d 0.619 (0.615)	test_acc_d   0.58 (  0.62)	test_minacc_d   0.58 (  0.61)	test_majacc_d   0.59 (  0.62)	test_corr_d   0.37 (  0.37)
Test: [  20/  26]	Loss 0.635 (0.618)	test_acc   0.55 (  0.62)	test_minacc   0.63 (  0.62)	test_majacc   0.53 (  0.62)	Loss_d 0.635 (0.618)	test_acc_d   0.55 (  0.62)	test_minacc_d   0.63 (  0.62)	test_majacc_d   0.53 (  0.62)	test_corr_d   0.30 (  0.37)
Test: [  26/  26]	Loss 0.610 (0.619)	test_acc   0.63 (  0.62)	test_minacc   0.66 (  0.61)	test_majacc   0.63 (  0.62)	Loss_d 0.610 (0.619)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.66 (  0.61)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.37 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.29it/s]
Test: [  0/  1]	Loss 0.800 (0.800)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.69 (  0.69)	Loss_d 0.800 (0.800)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.800 (0.800)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.69 (  0.69)	Loss_d 0.800 (0.800)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 42/  1]	epoch_time 0.0493 (0.0420)	validation_time 0.0098 (0.0010)	train_time 0.0395 (0.0404)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6216000064611434, 0.6070000529289246)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.61it/s] 15%|#5        | 4/26 [00:00<00:01, 17.25it/s] 27%|##6       | 7/26 [00:00<00:00, 21.61it/s] 38%|###8      | 10/26 [00:00<00:00, 22.81it/s] 50%|#####     | 13/26 [00:00<00:00, 24.68it/s] 62%|######1   | 16/26 [00:00<00:00, 26.29it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.62it/s] 85%|########4 | 22/26 [00:00<00:00, 27.63it/s]100%|##########| 26/26 [00:01<00:00, 29.09it/s]100%|##########| 26/26 [00:01<00:00, 23.85it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1118 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1119 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1120 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1121 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1122 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1123 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1124 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1125 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1126 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1127 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1128 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1129 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1130 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1131 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1132 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1133 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1134 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1135 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1136 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1137 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1138 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1139 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1140 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1141 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1142 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1143 364.00000000000006
constrain score by whole: 0
Epoch: [43][  26/  26]	Loss 0.002 (0.001)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.68 (  0.62)	train_minacc   0.59 (  0.66)	train_majacc   0.69 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.89it/s] 31%|###       | 8/26 [00:00<00:00, 40.15it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.15it/s] 50%|#####     | 13/26 [00:00<00:00, 42.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.76it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.76it/s] 96%|#########6| 25/26 [00:00<00:00, 47.90it/s]100%|##########| 26/26 [00:00<00:00, 40.69it/s]
Test: [   0/  26]	Loss 0.619 (0.619)	test_acc   0.64 (  0.64)	test_minacc   0.55 (  0.55)	test_majacc   0.66 (  0.66)	Loss_d 0.619 (0.619)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.622 (0.619)	test_acc   0.63 (  0.62)	test_minacc   0.53 (  0.58)	test_majacc   0.64 (  0.63)	Loss_d 0.622 (0.619)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.32 (  0.32)
Test: [  20/  26]	Loss 0.635 (0.621)	test_acc   0.61 (  0.62)	test_minacc   0.59 (  0.58)	test_majacc   0.61 (  0.63)	Loss_d 0.635 (0.621)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.59 (  0.58)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.26 (  0.32)
Test: [  26/  26]	Loss 0.625 (0.622)	test_acc   0.63 (  0.62)	test_minacc   0.54 (  0.57)	test_majacc   0.65 (  0.63)	Loss_d 0.625 (0.622)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.54 (  0.57)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.31 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.13it/s]
Test: [  0/  1]	Loss 0.770 (0.770)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.69 (  0.69)	Loss_d 0.770 (0.770)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.770 (0.770)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.69 (  0.69)	Loss_d 0.770 (0.770)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 43/  1]	epoch_time 0.0390 (0.0419)	validation_time 0.0007 (0.0009)	train_time 0.0383 (0.0403)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6225000075697898, 0.5630000233650208)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.97it/s] 15%|#5        | 4/26 [00:00<00:01, 16.45it/s] 27%|##6       | 7/26 [00:00<00:00, 20.88it/s] 42%|####2     | 11/26 [00:00<00:00, 24.38it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.59it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.82it/s] 88%|########8 | 23/26 [00:00<00:00, 28.67it/s]100%|##########| 26/26 [00:01<00:00, 24.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1144 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1145 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1146 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1147 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1148 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1149 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1150 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1151 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1152 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1153 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1154 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1155 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1156 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1157 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1158 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1159 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1160 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1161 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1162 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1163 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1164 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1165 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1166 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1167 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1168 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1169 364.00000000000006
constrain score by whole: 0
Epoch: [44][  26/  26]	Loss 0.002 (0.002)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.61 (  0.60)	train_minacc   0.51 (  0.64)	train_majacc   0.63 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 31%|###       | 8/26 [00:00<00:00, 38.02it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.02it/s] 50%|#####     | 13/26 [00:00<00:00, 40.75it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.35it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.35it/s] 96%|#########6| 25/26 [00:00<00:00, 48.78it/s]100%|##########| 26/26 [00:00<00:00, 39.87it/s]
Test: [   0/  26]	Loss 0.625 (0.625)	test_acc   0.62 (  0.62)	test_minacc   0.52 (  0.52)	test_majacc   0.64 (  0.64)	Loss_d 0.625 (0.625)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.618 (0.625)	test_acc   0.63 (  0.61)	test_minacc   0.51 (  0.52)	test_majacc   0.65 (  0.63)	Loss_d 0.618 (0.625)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.51 (  0.52)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.35 (  0.33)
Test: [  20/  26]	Loss 0.629 (0.625)	test_acc   0.63 (  0.62)	test_minacc   0.54 (  0.51)	test_majacc   0.64 (  0.63)	Loss_d 0.629 (0.625)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.54 (  0.51)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.30 (  0.34)
Test: [  26/  26]	Loss 0.625 (0.625)	test_acc   0.62 (  0.61)	test_minacc   0.51 (  0.52)	test_majacc   0.65 (  0.63)	Loss_d 0.625 (0.625)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.51 (  0.52)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.35 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.57it/s]
Test: [  0/  1]	Loss 0.807 (0.807)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.68 (  0.68)	Loss_d 0.807 (0.807)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.807 (0.807)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.68 (  0.68)	Loss_d 0.807 (0.807)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.00 ( -0.00)
Overall Timing[ 44/  1]	epoch_time 0.0414 (0.0419)	validation_time 0.0005 (0.0009)	train_time 0.0409 (0.0404)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6149000052809716, 0.5220000147819519)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.69it/s] 15%|#5        | 4/26 [00:00<00:01, 16.91it/s] 27%|##6       | 7/26 [00:00<00:00, 21.48it/s] 42%|####2     | 11/26 [00:00<00:00, 25.14it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.73it/s] 88%|########8 | 23/26 [00:00<00:00, 29.38it/s]100%|##########| 26/26 [00:01<00:00, 25.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1170 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1171 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1172 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1173 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1174 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1175 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1176 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1177 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1178 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1179 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1180 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1181 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1182 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1183 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1184 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1185 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1186 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1187 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1188 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1189 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1190 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1191 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1192 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1193 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1194 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1195 364.00000000000006
constrain score by whole: 0
Epoch: [45][  26/  26]	Loss 0.001 (0.002)	train_nll   0.63 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.62 (  0.61)	train_minacc   0.54 (  0.57)	train_majacc   0.64 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.90it/s] 27%|##6       | 7/26 [00:00<00:00, 33.96it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.96it/s] 46%|####6     | 12/26 [00:00<00:00, 39.23it/s] 65%|######5   | 17/26 [00:00<00:00, 41.78it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.78it/s] 88%|########8 | 23/26 [00:00<00:00, 45.84it/s]100%|##########| 26/26 [00:00<00:00, 37.61it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.62 (  0.62)	test_minacc   0.45 (  0.45)	test_majacc   0.65 (  0.65)	Loss_d 0.629 (0.629)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.623 (0.628)	test_acc   0.63 (  0.61)	test_minacc   0.51 (  0.51)	test_majacc   0.65 (  0.63)	Loss_d 0.623 (0.628)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.35 (  0.33)
Test: [  20/  26]	Loss 0.631 (0.627)	test_acc   0.63 (  0.62)	test_minacc   0.58 (  0.51)	test_majacc   0.63 (  0.63)	Loss_d 0.631 (0.627)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.58 (  0.51)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.29 (  0.33)
Test: [  26/  26]	Loss 0.616 (0.626)	test_acc   0.63 (  0.62)	test_minacc   0.54 (  0.52)	test_majacc   0.65 (  0.63)	Loss_d 0.616 (0.626)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.34 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.69it/s]
Test: [  0/  1]	Loss 0.773 (0.773)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.68 (  0.68)	Loss_d 0.773 (0.773)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 0.773 (0.773)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.68 (  0.68)	Loss_d 0.773 (0.773)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.00 (  0.00)
Overall Timing[ 45/  1]	epoch_time 0.0394 (0.0419)	validation_time 0.0005 (0.0009)	train_time 0.0389 (0.0403)
record: (train_acc, test_acc) (0.6793000287413598, 0.6490000486373901)
last accs (train_acc, test_acc) (0.6156000100970268, 0.5300000309944153)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.80it/s] 15%|#5        | 4/26 [00:00<00:01, 18.07it/s] 27%|##6       | 7/26 [00:00<00:00, 22.93it/s] 42%|####2     | 11/26 [00:00<00:00, 25.71it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.77it/s] 65%|######5   | 17/26 [00:00<00:00, 26.93it/s] 81%|########  | 21/26 [00:00<00:00, 28.42it/s] 92%|#########2| 24/26 [00:00<00:00, 28.31it/s]100%|##########| 26/26 [00:01<00:00, 24.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1196 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1197 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1198 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1199 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1200 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1201 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1202 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1203 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1204 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1205 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1206 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1207 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1208 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1209 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1210 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1211 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1212 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1213 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1214 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1215 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1216 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1217 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1218 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1219 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1220 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1221 364.00000000000006
constrain score by whole: 0
Epoch: [46][  26/  26]	Loss 0.002 (0.002)	train_nll   0.61 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.62 (  0.58)	train_minacc   0.63 (  0.68)	train_majacc   0.62 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.60it/s] 27%|##6       | 7/26 [00:00<00:00, 28.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.19it/s] 50%|#####     | 13/26 [00:00<00:00, 36.21it/s] 69%|######9   | 18/26 [00:00<00:00, 40.00it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.00it/s] 92%|#########2| 24/26 [00:00<00:00, 44.27it/s]100%|##########| 26/26 [00:00<00:00, 35.81it/s]
Test: [   0/  26]	Loss 0.631 (0.631)	test_acc   0.58 (  0.58)	test_minacc   0.69 (  0.69)	test_majacc   0.56 (  0.56)	Loss_d 0.631 (0.631)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.629 (0.634)	test_acc   0.58 (  0.59)	test_minacc   0.65 (  0.67)	test_majacc   0.56 (  0.58)	Loss_d 0.629 (0.634)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.65 (  0.67)	test_majacc_d   0.56 (  0.58)	test_corr_d   0.32 (  0.30)
Test: [  20/  26]	Loss 0.642 (0.633)	test_acc   0.54 (  0.60)	test_minacc   0.64 (  0.68)	test_majacc   0.52 (  0.58)	Loss_d 0.642 (0.633)	test_acc_d   0.54 (  0.60)	test_minacc_d   0.64 (  0.68)	test_majacc_d   0.52 (  0.58)	test_corr_d   0.26 (  0.30)
Test: [  26/  26]	Loss 0.622 (0.632)	test_acc   0.62 (  0.60)	test_minacc   0.76 (  0.69)	test_majacc   0.59 (  0.59)	Loss_d 0.622 (0.632)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.76 (  0.69)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.31 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.92it/s]
Test: [  0/  1]	Loss 0.759 (0.759)	test_acc   0.70 (  0.70)	test_minacc   0.70 (  0.70)	test_majacc   0.64 (  0.64)	Loss_d 0.759 (0.759)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.759 (0.759)	test_acc   0.70 (  0.70)	test_minacc   0.70 (  0.70)	test_majacc   0.64 (  0.64)	Loss_d 0.759 (0.759)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.70 (  0.70)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.03 ( -0.03)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/23/checkpoints/model_best.pth
Overall Timing[ 46/  1]	epoch_time 0.0408 (0.0419)	validation_time 0.0004 (0.0009)	train_time 0.0404 (0.0403)
record: (train_acc, test_acc) (0.6011000118255615, 0.6950000524520874)
last accs (train_acc, test_acc) (0.6011000118255615, 0.6950000524520874)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.47it/s] 15%|#5        | 4/26 [00:00<00:01, 16.48it/s] 27%|##6       | 7/26 [00:00<00:00, 20.92it/s] 38%|###8      | 10/26 [00:00<00:00, 23.41it/s] 50%|#####     | 13/26 [00:00<00:00, 25.40it/s] 62%|######1   | 16/26 [00:00<00:00, 26.78it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.92it/s] 85%|########4 | 22/26 [00:00<00:00, 27.61it/s] 96%|#########6| 25/26 [00:01<00:00, 28.18it/s]100%|##########| 26/26 [00:01<00:00, 23.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1222 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1223 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1224 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1225 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1226 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1227 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1228 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1229 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1230 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1231 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1232 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1233 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1234 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1235 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1236 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1237 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1238 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1239 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1240 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1241 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1242 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1243 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1244 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1245 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1246 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1247 364.00000000000006
constrain score by whole: 0
Epoch: [47][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.66 (  0.63)	train_minacc   0.63 (  0.61)	train_majacc   0.67 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.42it/s] 23%|##3       | 6/26 [00:00<00:00, 24.70it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.70it/s] 42%|####2     | 11/26 [00:00<00:00, 33.67it/s] 65%|######5   | 17/26 [00:00<00:00, 38.96it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.96it/s] 88%|########8 | 23/26 [00:00<00:00, 43.82it/s]100%|##########| 26/26 [00:00<00:00, 34.76it/s]
Test: [   0/  26]	Loss 0.602 (0.602)	test_acc   0.66 (  0.66)	test_minacc   0.61 (  0.61)	test_majacc   0.66 (  0.66)	Loss_d 0.602 (0.602)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.609 (0.612)	test_acc   0.64 (  0.63)	test_minacc   0.56 (  0.63)	test_majacc   0.65 (  0.64)	Loss_d 0.609 (0.612)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.56 (  0.63)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.35 (  0.33)
Test: [  20/  26]	Loss 0.632 (0.614)	test_acc   0.62 (  0.64)	test_minacc   0.64 (  0.64)	test_majacc   0.62 (  0.64)	Loss_d 0.632 (0.614)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.27 (  0.33)
Test: [  26/  26]	Loss 0.595 (0.613)	test_acc   0.67 (  0.64)	test_minacc   0.61 (  0.64)	test_majacc   0.68 (  0.64)	Loss_d 0.595 (0.613)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.61 (  0.64)	test_majacc_d   0.68 (  0.64)	test_corr_d   0.36 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.94it/s]
Test: [  0/  1]	Loss 0.848 (0.848)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.69 (  0.69)	Loss_d 0.848 (0.848)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.848 (0.848)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.61)	test_majacc   0.69 (  0.69)	Loss_d 0.848 (0.848)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.69 (  0.69)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 47/  1]	epoch_time 0.0417 (0.0419)	validation_time 0.0005 (0.0009)	train_time 0.0412 (0.0403)
record: (train_acc, test_acc) (0.6011000118255615, 0.6950000524520874)
last accs (train_acc, test_acc) (0.6364000141024589, 0.6150000095367432)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 15%|#5        | 4/26 [00:00<00:01, 17.11it/s] 27%|##6       | 7/26 [00:00<00:00, 21.50it/s] 42%|####2     | 11/26 [00:00<00:00, 25.42it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.54it/s] 85%|########4 | 22/26 [00:00<00:00, 28.87it/s]100%|##########| 26/26 [00:00<00:00, 29.70it/s]100%|##########| 26/26 [00:01<00:00, 24.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1248 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1249 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1250 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1251 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1252 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1253 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1254 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1255 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1256 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1257 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1258 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1259 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1260 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1261 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1262 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1263 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1264 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1265 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1266 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1267 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1268 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1269 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1270 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1271 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1272 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1273 364.00000000000006
constrain score by whole: 0
Epoch: [48][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.60 (  0.60)	train_minacc   0.76 (  0.68)	train_majacc   0.57 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.93it/s] 27%|##6       | 7/26 [00:00<00:00, 32.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.46it/s] 46%|####6     | 12/26 [00:00<00:00, 38.84it/s] 65%|######5   | 17/26 [00:00<00:00, 40.44it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.44it/s] 88%|########8 | 23/26 [00:00<00:00, 45.06it/s]100%|##########| 26/26 [00:00<00:00, 35.78it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.51 (  0.51)	test_minacc   0.76 (  0.76)	test_majacc   0.47 (  0.47)	Loss_d 0.639 (0.639)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.76 (  0.76)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.638 (0.639)	test_acc   0.51 (  0.54)	test_minacc   0.73 (  0.75)	test_majacc   0.47 (  0.51)	Loss_d 0.638 (0.639)	test_acc_d   0.51 (  0.54)	test_minacc_d   0.73 (  0.75)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.29 (  0.26)
Test: [  20/  26]	Loss 0.649 (0.641)	test_acc   0.51 (  0.55)	test_minacc   0.73 (  0.76)	test_majacc   0.47 (  0.51)	Loss_d 0.649 (0.641)	test_acc_d   0.51 (  0.55)	test_minacc_d   0.73 (  0.76)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.21 (  0.26)
Test: [  26/  26]	Loss 0.630 (0.640)	test_acc   0.57 (  0.55)	test_minacc   0.78 (  0.76)	test_majacc   0.53 (  0.51)	Loss_d 0.630 (0.640)	test_acc_d   0.57 (  0.55)	test_minacc_d   0.78 (  0.76)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.27 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.49it/s]
Test: [  0/  1]	Loss 0.807 (0.807)	test_acc   0.72 (  0.72)	test_minacc   0.74 (  0.74)	test_majacc   0.57 (  0.57)	Loss_d 0.807 (0.807)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.807 (0.807)	test_acc   0.72 (  0.72)	test_minacc   0.74 (  0.74)	test_majacc   0.57 (  0.57)	Loss_d 0.807 (0.807)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 48/  1]	epoch_time 0.0447 (0.0419)	validation_time 0.0005 (0.0009)	train_time 0.0441 (0.0404)
record: (train_acc, test_acc) (0.6011000118255615, 0.6950000524520874)
last accs (train_acc, test_acc) (0.5501000059247017, 0.7230000495910645)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.00it/s] 15%|#5        | 4/26 [00:00<00:01, 16.05it/s] 27%|##6       | 7/26 [00:00<00:00, 20.35it/s] 38%|###8      | 10/26 [00:00<00:00, 23.14it/s] 50%|#####     | 13/26 [00:00<00:00, 24.53it/s] 62%|######1   | 16/26 [00:00<00:00, 25.51it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.38it/s] 85%|########4 | 22/26 [00:00<00:00, 27.35it/s] 96%|#########6| 25/26 [00:01<00:00, 27.50it/s]100%|##########| 26/26 [00:01<00:00, 23.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1274 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1275 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1276 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1277 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1278 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1279 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1280 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1281 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1282 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1283 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1284 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1285 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1286 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1287 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1288 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1289 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1290 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1291 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1292 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1293 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1294 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1295 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1296 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1297 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1298 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1299 364.00000000000006
constrain score by whole: 0
Epoch: [49][  26/  26]	Loss 0.001 (0.001)	train_nll   0.62 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.76 (  7.76)	train_acc   0.60 (  0.56)	train_minacc   0.61 (  0.70)	train_majacc   0.60 (  0.54)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.16it/s] 27%|##6       | 7/26 [00:00<00:00, 34.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.66it/s] 46%|####6     | 12/26 [00:00<00:00, 39.08it/s] 69%|######9   | 18/26 [00:00<00:00, 45.89it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.89it/s] 88%|########8 | 23/26 [00:00<00:00, 45.33it/s]100%|##########| 26/26 [00:00<00:00, 40.58it/s]
Test: [   0/  26]	Loss 0.628 (0.628)	test_acc   0.62 (  0.62)	test_minacc   0.73 (  0.73)	test_majacc   0.59 (  0.59)	Loss_d 0.628 (0.628)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.629 (0.631)	test_acc   0.57 (  0.59)	test_minacc   0.62 (  0.69)	test_majacc   0.56 (  0.57)	Loss_d 0.629 (0.631)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.62 (  0.69)	test_majacc_d   0.56 (  0.57)	test_corr_d   0.29 (  0.28)
Test: [  20/  26]	Loss 0.635 (0.632)	test_acc   0.59 (  0.59)	test_minacc   0.71 (  0.69)	test_majacc   0.57 (  0.58)	Loss_d 0.635 (0.632)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.71 (  0.69)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.24 (  0.28)
Test: [  26/  26]	Loss 0.624 (0.632)	test_acc   0.63 (  0.60)	test_minacc   0.66 (  0.68)	test_majacc   0.63 (  0.58)	Loss_d 0.624 (0.632)	test_acc_d   0.63 (  0.60)	test_minacc_d   0.66 (  0.68)	test_majacc_d   0.63 (  0.58)	test_corr_d   0.28 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.43it/s]
Test: [  0/  1]	Loss 0.773 (0.773)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.66 (  0.66)	Loss_d 0.773 (0.773)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.773 (0.773)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.66 (  0.66)	Loss_d 0.773 (0.773)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 49/  1]	epoch_time 0.0423 (0.0419)	validation_time 0.0004 (0.0009)	train_time 0.0419 (0.0405)
record: (train_acc, test_acc) (0.6011000118255615, 0.6950000524520874)
last accs (train_acc, test_acc) (0.5966000102758408, 0.6360000371932983)
wandb: - 0.160 MB of 0.160 MB uploadedwandb: \ 0.160 MB of 0.160 MB uploadedwandb: | 0.160 MB of 0.160 MB uploadedwandb: / 0.160 MB of 0.160 MB uploadedwandb: - 0.160 MB of 0.160 MB uploadedwandb: \ 0.160 MB of 0.160 MB uploadedwandb: | 0.181 MB of 0.190 MB uploaded (0.003 MB deduped)wandb: / 0.563 MB of 0.563 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/diagnostics/epoch_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▂▁▁▁▂▁▁▂▁▁▁▁▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/diagnostics/train_time_val █▁▁▁▁▁▂▁▁▁▁▁▂▁▂▁▁▁▁▂▁▁▂▁▁▂▁▂▁▂▁▂▂▁▁▁▁▂▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/diagnostics/validation_time_val ▆▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂█▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/Loss_avg ▄▄▆▃▄▄▄▂▄▂▂▃▆▅▅▇▁▃▃▄▁█▃▅▂▃▃▁▂▃▃▃▂▂▄▃▃▃▅▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/Loss_d_avg ▄▄▆▃▄▄▄▂▄▂▂▃▆▅▅▇▁▃▃▄▁█▃▅▂▃▃▁▂▃▃▃▂▂▄▃▃▃▅▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/Loss_d_val ▄▄▆▃▄▄▄▂▄▂▂▃▆▅▅▇▁▃▃▄▁█▃▅▂▃▃▁▂▃▃▃▂▂▄▃▃▃▅▃
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/Loss_val ▄▄▆▃▄▄▄▂▄▂▂▃▆▅▅▇▁▃▃▄▁█▃▅▂▃▃▁▂▃▃▃▂▂▄▃▃▃▅▃
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_acc_avg ▃▄▂▄▄▃▃▃▃▆▅▅▄▃▃▄▅▃▃▂▇▁▅▄█▄▆▇▃▃▄█▆▃▅▄▃█▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_acc_d_avg ▃▄▂▄▄▃▃▃▃▆▅▅▄▃▃▄▅▃▃▂▇▁▅▄█▄▆▇▃▃▄█▆▃▅▄▃█▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_acc_d_val ▃▄▂▄▄▃▃▃▃▆▅▅▄▃▃▄▅▃▃▂▇▁▅▄█▄▆▇▃▃▄█▆▃▅▄▃█▆▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_acc_val ▃▄▂▄▄▃▃▃▃▆▅▅▄▃▃▄▅▃▃▂▇▁▅▄█▄▆▇▃▃▄█▆▃▅▄▃█▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_corr_d_avg ▆▄█▄▆▆█▄▆▃▄▄▅▇▇▅▁▆▇▇▁█▃▅▁▃▄▂▃▃▃▃▃▃▃▃▄▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_corr_d_val ▆▄█▄▆▆█▄▆▃▄▄▅▇▇▅▁▆▇▇▁█▃▅▁▃▄▂▃▃▃▃▃▃▃▃▄▃▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_majacc_avg ▂▅▆▄█▇▇▅▂▄▃▅▅▅▇▇▅▆▇█▇█▅▇▁▄▄▂▃▄▄▃▂▄▄▄▄▃▄▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_majacc_d_avg ▂▅▆▄█▇▇▅▂▄▃▅▅▅▇▇▅▆▇█▇█▅▇▁▄▄▂▃▄▄▃▂▄▄▄▄▃▄▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_majacc_d_val ▂▅▆▄█▇▇▅▂▄▃▅▅▅▇▇▅▆▇█▇█▅▇▁▄▄▂▃▄▄▃▂▄▄▄▄▃▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_majacc_val ▂▅▆▄█▇▇▅▂▄▃▅▅▅▇▇▅▆▇█▇█▅▇▁▄▄▂▃▄▄▃▂▄▄▄▄▃▄▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_minacc_avg ▃▄▂▄▄▃▃▃▃▆▅▅▄▃▃▄▅▃▃▂▆▁▅▄█▄▆▇▃▃▄█▆▃▅▄▄█▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_minacc_d_avg ▃▄▂▄▄▃▃▃▃▆▅▅▄▃▃▄▅▃▃▂▆▁▅▄█▄▆▇▃▃▄█▆▃▅▄▄█▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_minacc_d_val ▃▄▂▄▄▃▃▃▃▆▅▅▄▃▃▄▅▃▃▂▆▁▅▄█▄▆▇▃▃▄█▆▃▅▄▄█▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_minacc_val ▃▄▂▄▄▃▃▃▃▆▅▅▄▃▃▄▅▃▃▂▆▁▅▄█▄▆▇▃▃▄█▆▃▅▄▄█▆▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/Loss_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/Loss_val ▅▂▄▂▂▁▁▂▂▂▁▂█▄▄▃▂▁▃▂▃▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_acc_avg █▄▄▅▄▃▄▄▂▃▃▃▃▄▅▃▄▃▂▄▅▅▄▃▂▃▃▁▁▁▁▃▂▁▄▃▃▂▄▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_acc_val ▅▆▇▄▆▆▅▃▂▅▄▅▂▁▇▆▄▃▃▅██▄▆▅▅▄▃▄▅▅▃▅▂▇▆▅▅▆▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_majacc_avg █▄▄▅▄▃▃▃▃▃▃▂▃▄▄▃▄▂▂▄▅▄▄▃▂▃▃▂▁▂▁▃▂▂▄▃▃▂▃▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_majacc_val ▆▇█▅▆▆▅▃▂▅▄▅▂▁▇▆▃▃▄▆██▄▆▄▅▄▂▃▅▅▃▅▃▇▆▅▅▅▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_minacc_avg ▁▅▅▅▇▇▆▇▆▇▇█▆▅▆▆▆▇▆▅▅▆▆▆▇▆▆▆█▇▇▇▇▇▆▇▆█▇█
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_minacc_val ▂▂▁▃▂▃▃▃▄▆▅▃▃▇▅▂▇▄▃▂▂▃▇▄█▄▄▇▆▆▆█▆▄▄▅▄▆▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_nll_avg ▃▂▆▂▂▃▃▁▆▃▆▄▅▄▂▄▂▇▇▃▁▄▃▃▆▄▅█▇██▅▇▇▄▅▄▇▃▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_nll_val ▅▃▁▅▃▃▄▇▆▄▅▃▆█▁▃▆▄▅▃▁▂▅▂▄▄▄▆▆▄▄▄▅▅▃▄▄▄▃▄
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_penalty_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_penalty_val ▅▂▄▂▂▁▁▂▂▂▁▂█▄▄▃▂▁▃▂▃▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/weight_norm_avg █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/weight_norm_val █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/diagnostics/epoch_time_val 0.04234
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/diagnostics/train_time_val 0.04188
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/diagnostics/validation_time_val 0.00043
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/Loss_avg 0.77273
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/Loss_d_avg 0.77273
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/Loss_d_val 0.77273
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/Loss_val 0.77273
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_acc_avg 0.636
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_acc_d_avg 0.636
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_acc_d_val 0.636
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_acc_val 0.636
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_corr_d_avg -0.04651
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_corr_d_val -0.04651
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_majacc_avg 0.66
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_majacc_d_avg 0.66
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_majacc_d_val 0.66
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_majacc_val 0.66
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_minacc_avg 0.63333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_minacc_d_avg 0.63333
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_minacc_d_val 0.63333
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/test/test_minacc_val 0.63333
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/Loss_avg 0.00105
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/Loss_val 0.00123
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_acc_avg 0.5624
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_acc_val 0.604
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_majacc_avg 0.53729
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_majacc_val 0.60287
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_minacc_avg 0.70437
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_minacc_val 0.60976
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_nll_avg 0.6421
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_nll_val 0.62489
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_penalty_avg 0.00021
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/train_penalty_val 0.00039
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/weight_norm_avg 7.75875
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/23/logs/train/weight_norm_val 7.75798
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/xhdiy5mb
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240904_235402-xhdiy5mb/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240904_235708-1diaidyi
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/1diaidyi
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, classes_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=13, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1210
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5994, 3, 32, 32) (6006, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:46,  1.86s/it] 19%|#9        | 5/26 [00:01<00:06,  3.29it/s] 31%|###       | 8/26 [00:02<00:03,  5.69it/s] 42%|####2     | 11/26 [00:02<00:01,  8.41it/s] 54%|#####3    | 14/26 [00:02<00:01, 11.35it/s] 65%|######5   | 17/26 [00:02<00:00, 14.32it/s] 81%|########  | 21/26 [00:02<00:00, 18.43it/s] 96%|#########6| 25/26 [00:02<00:00, 21.72it/s]100%|##########| 26/26 [00:03<00:00,  8.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 13
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.014 (4.917)	train_nll   0.70 (  0.60)	train_penalty   0.01 (  0.22)	weight_norm   7.96 (  8.58)	train_acc   0.51 (  0.74)	train_minacc   0.69 (  0.25)	train_majacc   0.48 (  0.83)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.64it/s] 23%|##3       | 6/26 [00:00<00:00, 24.29it/s]                                               23%|##3       | 6/26 [00:00<00:00, 24.29it/s] 42%|####2     | 11/26 [00:00<00:00, 33.51it/s] 65%|######5   | 17/26 [00:00<00:00, 41.78it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.78it/s] 85%|########4 | 22/26 [00:00<00:00, 43.82it/s]100%|##########| 26/26 [00:00<00:00, 35.61it/s]
Test: [   0/  26]	Loss 0.678 (0.678)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.54 (  0.54)	Loss_d 0.678 (0.678)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.613 (0.651)	test_acc   0.60 (  0.57)	test_minacc   0.76 (  0.65)	test_majacc   0.58 (  0.56)	Loss_d 0.613 (0.651)	test_acc_d   0.60 (  0.57)	test_minacc_d   0.76 (  0.65)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.24 (  0.23)
Test: [  20/  26]	Loss 0.677 (0.653)	test_acc   0.55 (  0.57)	test_minacc   0.69 (  0.66)	test_majacc   0.53 (  0.56)	Loss_d 0.677 (0.653)	test_acc_d   0.55 (  0.57)	test_minacc_d   0.69 (  0.66)	test_majacc_d   0.53 (  0.56)	test_corr_d   0.15 (  0.22)
Test: [  26/  26]	Loss 0.639 (0.658)	test_acc   0.56 (  0.57)	test_minacc   0.66 (  0.66)	test_majacc   0.55 (  0.55)	Loss_d 0.639 (0.658)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.25 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.44it/s]100%|##########| 1/1 [00:00<00:00,  2.44it/s]
Test: [  0/  1]	Loss 0.784 (0.784)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.49 (  0.49)	Loss_d 0.784 (0.784)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.784 (0.784)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.49 (  0.49)	Loss_d 0.784 (0.784)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Overall Timing[  0/  1]	epoch_time 0.1082 (0.1082)	validation_time 0.0069 (0.0069)	train_time 0.0722 (0.0722)
record: (train_acc, test_acc) None
last accs (train_acc, test_acc) (0.5684000125527382, 0.5440000295639038)
Traceback (most recent call last):
  File "/scratch/users/zd16/sparseIRM-resnet-ver/main.py", line 464, in <module>
    main()
  File "/scratch/users/zd16/sparseIRM-resnet-ver/main.py", line 59, in main
    main_worker(args)
  File "/scratch/users/zd16/sparseIRM-resnet-ver/main.py", line 214, in main_worker
    "record_train_acc": record_test_best[0],
TypeError: 'NoneType' object is not subscriptable
wandb: - 0.015 MB of 0.015 MB uploadedwandb: \ 0.015 MB of 0.015 MB uploadedwandb: | 0.015 MB of 0.015 MB uploadedwandb: / 0.036 MB of 0.071 MB uploaded (0.003 MB deduped)wandb: - 0.042 MB of 0.071 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/diagnostics/epoch_time_val ▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/diagnostics/train_time_val ▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/diagnostics/validation_time_val ▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/global_step ▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/Loss_avg ▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/Loss_d_avg ▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/Loss_d_val ▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/Loss_val ▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_acc_avg ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_acc_d_avg ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_acc_d_val ▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_acc_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_corr_d_avg ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_corr_d_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_majacc_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_majacc_d_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_majacc_d_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_majacc_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_minacc_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_minacc_d_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_minacc_d_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_minacc_val ▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/Loss_avg ▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/Loss_val ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_acc_avg ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_acc_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_corr_avg ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_corr_val ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_majacc_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_majacc_val ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_minacc_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_minacc_val ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_nll_avg ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_nll_val ▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_penalty_avg ▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_penalty_val ▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/weight_norm_avg ▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/weight_norm_val ▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 0
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/diagnostics/epoch_time_val 0.10818
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/diagnostics/train_time_val 0.07223
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/diagnostics/validation_time_val 0.00693
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/global_step 0
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/Loss_avg 0.78409
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/Loss_d_avg 0.78409
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/Loss_d_val 0.78409
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/Loss_val 0.78409
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_acc_avg 0.544
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_acc_d_avg 0.544
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_acc_d_val 0.544
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_acc_val 0.544
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_corr_d_avg 0.04053
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_corr_d_val 0.04053
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_majacc_avg 0.49
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_majacc_d_avg 0.49
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_majacc_d_val 0.49
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_majacc_val 0.49
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_minacc_avg 0.55
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_minacc_d_avg 0.55
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_minacc_d_val 0.55
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/test/test_minacc_val 0.55
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/Loss_avg 4.91658
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/Loss_val 0.01384
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_acc_avg 0.7448
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_acc_val 0.512
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_majacc_avg 0.83268
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_majacc_val 0.48372
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_minacc_avg 0.25177
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_minacc_val 0.68571
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_nll_avg 0.60487
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_nll_val 0.69898
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_penalty_avg 0.22354
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/train_penalty_val 0.01298
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/weight_norm_avg 8.57936
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/24/logs/train/weight_norm_val 7.95815
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/1diaidyi
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240904_235708-1diaidyi/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240904_235817-yquo5fr7
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/yquo5fr7
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, classes_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=13, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1152
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6028, 3, 32, 32) (5972, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:38,  1.54s/it] 19%|#9        | 5/26 [00:01<00:05,  3.90it/s] 35%|###4      | 9/26 [00:01<00:02,  7.53it/s] 50%|#####     | 13/26 [00:01<00:01, 11.33it/s] 65%|######5   | 17/26 [00:02<00:00, 14.96it/s] 81%|########  | 21/26 [00:02<00:00, 18.51it/s] 96%|#########6| 25/26 [00:02<00:00, 21.51it/s]100%|##########| 26/26 [00:02<00:00,  9.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 13
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.016 (4.965)	train_nll   0.61 (  0.68)	train_penalty   0.02 (  0.32)	weight_norm   7.99 (  8.60)	train_acc   0.70 (  0.71)	train_minacc   0.24 (  0.29)	train_majacc   0.80 (  0.78)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.52it/s] 27%|##6       | 7/26 [00:00<00:00, 34.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.32it/s] 46%|####6     | 12/26 [00:00<00:00, 40.70it/s] 65%|######5   | 17/26 [00:00<00:00, 42.13it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.13it/s] 88%|########8 | 23/26 [00:00<00:00, 46.45it/s]100%|##########| 26/26 [00:00<00:00, 39.17it/s]
Test: [   0/  26]	Loss 0.599 (0.599)	test_acc   0.67 (  0.67)	test_minacc   0.37 (  0.37)	test_majacc   0.73 (  0.73)	Loss_d 0.599 (0.599)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.63 (  0.63)
Test: [  10/  26]	Loss 0.564 (0.583)	test_acc   0.71 (  0.69)	test_minacc   0.43 (  0.35)	test_majacc   0.77 (  0.76)	Loss_d 0.564 (0.583)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.43 (  0.35)	test_majacc_d   0.77 (  0.76)	test_corr_d   0.58 (  0.62)
Test: [  20/  26]	Loss 0.589 (0.579)	test_acc   0.71 (  0.70)	test_minacc   0.30 (  0.37)	test_majacc   0.76 (  0.76)	Loss_d 0.589 (0.579)	test_acc_d   0.71 (  0.70)	test_minacc_d   0.30 (  0.37)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.62 (  0.62)
Test: [  26/  26]	Loss 0.625 (0.582)	test_acc   0.65 (  0.70)	test_minacc   0.24 (  0.36)	test_majacc   0.74 (  0.76)	Loss_d 0.625 (0.582)	test_acc_d   0.65 (  0.70)	test_minacc_d   0.24 (  0.36)	test_majacc_d   0.74 (  0.76)	test_corr_d   0.65 (  0.63)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.47it/s]100%|##########| 1/1 [00:00<00:00,  2.47it/s]
Test: [  0/  1]	Loss 0.968 (0.968)	test_acc   0.32 (  0.32)	test_minacc   0.27 (  0.27)	test_majacc   0.76 (  0.76)	Loss_d 0.968 (0.968)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.58 (  0.58)
Test: [  1/  1]	Loss 0.968 (0.968)	test_acc   0.32 (  0.32)	test_minacc   0.27 (  0.27)	test_majacc   0.76 (  0.76)	Loss_d 0.968 (0.968)	test_acc_d   0.32 (  0.32)	test_minacc_d   0.27 (  0.27)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.58 (  0.58)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/25/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0926 (0.0926)	validation_time 0.0068 (0.0068)	train_time 0.0672 (0.0672)
record: (train_acc, test_acc) (0.6968000305891037, 0.3160000145435333)
last accs (train_acc, test_acc) (0.6968000305891037, 0.3160000145435333)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.79it/s] 15%|#5        | 4/26 [00:00<00:01, 15.01it/s] 31%|###       | 8/26 [00:00<00:00, 22.36it/s] 46%|####6     | 12/26 [00:00<00:00, 26.65it/s] 62%|######1   | 16/26 [00:00<00:00, 28.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.68it/s] 88%|########8 | 23/26 [00:00<00:00, 29.95it/s]100%|##########| 26/26 [00:01<00:00, 24.64it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.004 (0.002)	train_nll   0.63 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.84 (  7.88)	train_acc   0.62 (  0.58)	train_minacc   0.71 (  0.61)	train_majacc   0.60 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 23%|##3       | 6/26 [00:00<00:00, 26.26it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.26it/s] 42%|####2     | 11/26 [00:00<00:00, 34.71it/s] 62%|######1   | 16/26 [00:00<00:00, 38.44it/s]                                                62%|######1   | 16/26 [00:00<00:00, 38.44it/s] 81%|########  | 21/26 [00:00<00:00, 41.00it/s]100%|##########| 26/26 [00:00<00:00, 43.57it/s]100%|##########| 26/26 [00:00<00:00, 34.92it/s]
Test: [   0/  26]	Loss 0.627 (0.627)	test_acc   0.62 (  0.62)	test_minacc   0.56 (  0.56)	test_majacc   0.62 (  0.62)	Loss_d 0.627 (0.627)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.635 (0.618)	test_acc   0.57 (  0.61)	test_minacc   0.59 (  0.54)	test_majacc   0.56 (  0.62)	Loss_d 0.635 (0.618)	test_acc_d   0.57 (  0.61)	test_minacc_d   0.59 (  0.54)	test_majacc_d   0.56 (  0.62)	test_corr_d   0.27 (  0.40)
Test: [  20/  26]	Loss 0.638 (0.616)	test_acc   0.57 (  0.62)	test_minacc   0.51 (  0.56)	test_majacc   0.58 (  0.63)	Loss_d 0.638 (0.616)	test_acc_d   0.57 (  0.62)	test_minacc_d   0.51 (  0.56)	test_majacc_d   0.58 (  0.63)	test_corr_d   0.38 (  0.39)
Test: [  26/  26]	Loss 0.599 (0.616)	test_acc   0.66 (  0.62)	test_minacc   0.67 (  0.57)	test_majacc   0.66 (  0.62)	Loss_d 0.599 (0.616)	test_acc_d   0.66 (  0.62)	test_minacc_d   0.67 (  0.57)	test_majacc_d   0.66 (  0.62)	test_corr_d   0.38 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.36it/s]
Test: [  0/  1]	Loss 0.755 (0.755)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.58 (  0.58)	Loss_d 0.755 (0.755)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.755 (0.755)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.58 (  0.58)	Loss_d 0.755 (0.755)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.04 (  0.04)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/25/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0415 (0.0671)	validation_time 0.0004 (0.0036)	train_time 0.0402 (0.0537)
record: (train_acc, test_acc) (0.6161000067591668, 0.5540000200271606)
last accs (train_acc, test_acc) (0.6161000067591668, 0.5540000200271606)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.91it/s] 15%|#5        | 4/26 [00:00<00:01, 21.27it/s] 27%|##6       | 7/26 [00:00<00:00, 25.10it/s] 42%|####2     | 11/26 [00:00<00:00, 28.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.70it/s] 73%|#######3  | 19/26 [00:00<00:00, 30.32it/s] 88%|########8 | 23/26 [00:00<00:00, 30.35it/s]100%|##########| 26/26 [00:00<00:00, 26.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.001 (0.002)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.83)	train_acc   0.66 (  0.63)	train_minacc   0.58 (  0.61)	train_majacc   0.68 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.95it/s] 27%|##6       | 7/26 [00:00<00:00, 33.07it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.07it/s] 46%|####6     | 12/26 [00:00<00:00, 39.14it/s] 65%|######5   | 17/26 [00:00<00:00, 39.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.79it/s] 85%|########4 | 22/26 [00:00<00:00, 42.26it/s]100%|##########| 26/26 [00:00<00:00, 36.46it/s]
Test: [   0/  26]	Loss 0.622 (0.622)	test_acc   0.63 (  0.63)	test_minacc   0.58 (  0.58)	test_majacc   0.64 (  0.64)	Loss_d 0.622 (0.622)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.645 (0.614)	test_acc   0.60 (  0.64)	test_minacc   0.64 (  0.57)	test_majacc   0.59 (  0.65)	Loss_d 0.645 (0.614)	test_acc_d   0.60 (  0.64)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.59 (  0.65)	test_corr_d   0.21 (  0.34)
Test: [  20/  26]	Loss 0.633 (0.611)	test_acc   0.64 (  0.65)	test_minacc   0.55 (  0.61)	test_majacc   0.65 (  0.66)	Loss_d 0.633 (0.611)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.55 (  0.61)	test_majacc_d   0.65 (  0.66)	test_corr_d   0.34 (  0.33)
Test: [  26/  26]	Loss 0.596 (0.611)	test_acc   0.66 (  0.65)	test_minacc   0.60 (  0.61)	test_majacc   0.68 (  0.66)	Loss_d 0.596 (0.611)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.60 (  0.61)	test_majacc_d   0.68 (  0.66)	test_corr_d   0.36 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.72it/s]
Test: [  0/  1]	Loss 0.762 (0.762)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.60 (  0.60)	Loss_d 0.762 (0.762)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.762 (0.762)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.60 (  0.60)	Loss_d 0.762 (0.762)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.02 ( -0.02)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/25/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0402 (0.0581)	validation_time 0.0004 (0.0026)	train_time 0.0397 (0.0490)
record: (train_acc, test_acc) (0.6484000166654587, 0.5790000557899475)
last accs (train_acc, test_acc) (0.6484000166654587, 0.5790000557899475)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.48it/s] 15%|#5        | 4/26 [00:00<00:01, 15.66it/s] 31%|###       | 8/26 [00:00<00:00, 22.38it/s] 42%|####2     | 11/26 [00:00<00:00, 24.41it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.13it/s] 65%|######5   | 17/26 [00:00<00:00, 27.20it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.72it/s] 88%|########8 | 23/26 [00:00<00:00, 28.18it/s]100%|##########| 26/26 [00:01<00:00, 28.24it/s]100%|##########| 26/26 [00:01<00:00, 23.76it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.001 (0.003)	train_nll   0.62 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.63 (  0.63)	train_minacc   0.53 (  0.58)	train_majacc   0.65 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.34it/s] 31%|###       | 8/26 [00:00<00:00, 38.95it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.95it/s] 50%|#####     | 13/26 [00:00<00:00, 41.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.43it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.43it/s] 92%|#########2| 24/26 [00:00<00:00, 46.55it/s]100%|##########| 26/26 [00:00<00:00, 40.34it/s]
Test: [   0/  26]	Loss 0.638 (0.638)	test_acc   0.61 (  0.61)	test_minacc   0.42 (  0.42)	test_majacc   0.64 (  0.64)	Loss_d 0.638 (0.638)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.657 (0.639)	test_acc   0.59 (  0.61)	test_minacc   0.51 (  0.47)	test_majacc   0.60 (  0.64)	Loss_d 0.657 (0.639)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.51 (  0.47)	test_majacc_d   0.60 (  0.64)	test_corr_d   0.36 (  0.51)
Test: [  20/  26]	Loss 0.661 (0.637)	test_acc   0.59 (  0.61)	test_minacc   0.47 (  0.46)	test_majacc   0.61 (  0.64)	Loss_d 0.661 (0.637)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.47 (  0.46)	test_majacc_d   0.61 (  0.64)	test_corr_d   0.47 (  0.51)
Test: [  26/  26]	Loss 0.632 (0.637)	test_acc   0.63 (  0.61)	test_minacc   0.53 (  0.46)	test_majacc   0.65 (  0.64)	Loss_d 0.632 (0.637)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.53 (  0.46)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.52 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.54it/s]
Test: [  0/  1]	Loss 0.768 (0.768)	test_acc   0.45 (  0.45)	test_minacc   0.43 (  0.43)	test_majacc   0.63 (  0.63)	Loss_d 0.768 (0.768)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.31 (  0.31)
Test: [  1/  1]	Loss 0.768 (0.768)	test_acc   0.45 (  0.45)	test_minacc   0.43 (  0.43)	test_majacc   0.63 (  0.63)	Loss_d 0.768 (0.768)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.31 (  0.31)
Overall Timing[  3/  1]	epoch_time 0.0387 (0.0533)	validation_time 0.0004 (0.0020)	train_time 0.0383 (0.0464)
record: (train_acc, test_acc) (0.6484000166654587, 0.5790000557899475)
last accs (train_acc, test_acc) (0.6124000079631805, 0.4540000259876251)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 19%|#9        | 5/26 [00:00<00:00, 21.66it/s] 35%|###4      | 9/26 [00:00<00:00, 26.33it/s] 50%|#####     | 13/26 [00:00<00:00, 28.76it/s] 65%|######5   | 17/26 [00:00<00:00, 29.46it/s] 81%|########  | 21/26 [00:00<00:00, 30.40it/s] 96%|#########6| 25/26 [00:00<00:00, 31.25it/s]100%|##########| 26/26 [00:00<00:00, 27.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.003 (0.002)	train_nll   0.68 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.52 (  0.59)	train_minacc   0.58 (  0.57)	train_majacc   0.51 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.70it/s] 27%|##6       | 7/26 [00:00<00:00, 34.68it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.68it/s] 50%|#####     | 13/26 [00:00<00:00, 40.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.72it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.72it/s] 96%|#########6| 25/26 [00:00<00:00, 46.59it/s]100%|##########| 26/26 [00:00<00:00, 38.77it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.51 (  0.51)	test_minacc   0.71 (  0.71)	test_majacc   0.48 (  0.48)	Loss_d 0.672 (0.672)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.703 (0.673)	test_acc   0.51 (  0.53)	test_minacc   0.74 (  0.64)	test_majacc   0.45 (  0.51)	Loss_d 0.703 (0.673)	test_acc_d   0.51 (  0.53)	test_minacc_d   0.74 (  0.64)	test_majacc_d   0.45 (  0.51)	test_corr_d   0.03 (  0.15)
Test: [  20/  26]	Loss 0.717 (0.672)	test_acc   0.49 (  0.53)	test_minacc   0.51 (  0.65)	test_majacc   0.49 (  0.51)	Loss_d 0.717 (0.672)	test_acc_d   0.49 (  0.53)	test_minacc_d   0.51 (  0.65)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.10 (  0.14)
Test: [  26/  26]	Loss 0.684 (0.672)	test_acc   0.54 (  0.53)	test_minacc   0.67 (  0.65)	test_majacc   0.51 (  0.51)	Loss_d 0.684 (0.672)	test_acc_d   0.54 (  0.53)	test_minacc_d   0.67 (  0.65)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.14 (  0.14)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.11it/s]
Test: [  0/  1]	Loss 0.756 (0.756)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 0.756 (0.756)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.756 (0.756)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.45 (  0.45)	Loss_d 0.756 (0.756)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.45 (  0.45)	test_corr_d  -0.05 ( -0.05)
Overall Timing[  4/  1]	epoch_time 0.0386 (0.0503)	validation_time 0.0005 (0.0017)	train_time 0.0381 (0.0447)
record: (train_acc, test_acc) (0.6484000166654587, 0.5790000557899475)
last accs (train_acc, test_acc) (0.5349000171124935, 0.5840000510215759)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.68it/s] 15%|#5        | 4/26 [00:00<00:01, 21.11it/s] 31%|###       | 8/26 [00:00<00:00, 26.30it/s] 42%|####2     | 11/26 [00:00<00:00, 26.55it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.85it/s] 65%|######5   | 17/26 [00:00<00:00, 27.27it/s] 81%|########  | 21/26 [00:00<00:00, 28.73it/s] 96%|#########6| 25/26 [00:00<00:00, 29.26it/s]100%|##########| 26/26 [00:01<00:00, 25.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.001 (0.003)	train_nll   0.62 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.64 (  0.60)	train_minacc   0.69 (  0.59)	train_majacc   0.63 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 27%|##6       | 7/26 [00:00<00:00, 34.71it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.71it/s] 50%|#####     | 13/26 [00:00<00:00, 40.59it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.49it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.49it/s] 92%|#########2| 24/26 [00:00<00:00, 46.40it/s]100%|##########| 26/26 [00:00<00:00, 39.82it/s]
Test: [   0/  26]	Loss 0.637 (0.637)	test_acc   0.56 (  0.56)	test_minacc   0.77 (  0.77)	test_majacc   0.52 (  0.52)	Loss_d 0.637 (0.637)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.77 (  0.77)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.649 (0.644)	test_acc   0.51 (  0.55)	test_minacc   0.80 (  0.74)	test_majacc   0.45 (  0.51)	Loss_d 0.649 (0.644)	test_acc_d   0.51 (  0.55)	test_minacc_d   0.80 (  0.74)	test_majacc_d   0.45 (  0.51)	test_corr_d   0.12 (  0.21)
Test: [  20/  26]	Loss 0.680 (0.644)	test_acc   0.49 (  0.55)	test_minacc   0.68 (  0.75)	test_majacc   0.46 (  0.51)	Loss_d 0.680 (0.644)	test_acc_d   0.49 (  0.55)	test_minacc_d   0.68 (  0.75)	test_majacc_d   0.46 (  0.51)	test_corr_d   0.17 (  0.21)
Test: [  26/  26]	Loss 0.640 (0.647)	test_acc   0.57 (  0.54)	test_minacc   0.69 (  0.75)	test_majacc   0.55 (  0.51)	Loss_d 0.640 (0.647)	test_acc_d   0.57 (  0.54)	test_minacc_d   0.69 (  0.75)	test_majacc_d   0.55 (  0.51)	test_corr_d   0.26 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.20it/s]
Test: [  0/  1]	Loss 0.734 (0.734)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.46 (  0.46)	Loss_d 0.734 (0.734)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.734 (0.734)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.46 (  0.46)	Loss_d 0.734 (0.734)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.46 (  0.46)	test_corr_d  -0.11 ( -0.11)
Overall Timing[  5/  1]	epoch_time 0.0396 (0.0485)	validation_time 0.0004 (0.0015)	train_time 0.0391 (0.0438)
record: (train_acc, test_acc) (0.6484000166654587, 0.5790000557899475)
last accs (train_acc, test_acc) (0.5431000121533871, 0.6670000553131104)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.96it/s] 19%|#9        | 5/26 [00:00<00:00, 21.45it/s] 35%|###4      | 9/26 [00:00<00:00, 26.13it/s] 50%|#####     | 13/26 [00:00<00:00, 28.51it/s] 65%|######5   | 17/26 [00:00<00:00, 29.94it/s] 81%|########  | 21/26 [00:00<00:00, 30.48it/s] 96%|#########6| 25/26 [00:00<00:00, 30.05it/s]100%|##########| 26/26 [00:00<00:00, 26.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.002 (0.002)	train_nll   0.68 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.58 (  0.60)	train_minacc   0.49 (  0.64)	train_majacc   0.60 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.75it/s] 27%|##6       | 7/26 [00:00<00:00, 37.91it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.91it/s] 50%|#####     | 13/26 [00:00<00:00, 43.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.38it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.38it/s] 96%|#########6| 25/26 [00:00<00:00, 47.61it/s]100%|##########| 26/26 [00:00<00:00, 40.92it/s]
Test: [   0/  26]	Loss 0.660 (0.660)	test_acc   0.58 (  0.58)	test_minacc   0.42 (  0.42)	test_majacc   0.61 (  0.61)	Loss_d 0.660 (0.660)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.659 (0.658)	test_acc   0.58 (  0.59)	test_minacc   0.55 (  0.50)	test_majacc   0.58 (  0.60)	Loss_d 0.659 (0.658)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.55 (  0.50)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.37 (  0.43)
Test: [  20/  26]	Loss 0.692 (0.660)	test_acc   0.55 (  0.59)	test_minacc   0.51 (  0.49)	test_majacc   0.55 (  0.61)	Loss_d 0.692 (0.660)	test_acc_d   0.55 (  0.59)	test_minacc_d   0.51 (  0.49)	test_majacc_d   0.55 (  0.61)	test_corr_d   0.35 (  0.43)
Test: [  26/  26]	Loss 0.668 (0.665)	test_acc   0.59 (  0.59)	test_minacc   0.49 (  0.48)	test_majacc   0.61 (  0.60)	Loss_d 0.668 (0.665)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.49 (  0.48)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.44 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.47it/s]
Test: [  0/  1]	Loss 0.799 (0.799)	test_acc   0.46 (  0.46)	test_minacc   0.44 (  0.44)	test_majacc   0.65 (  0.65)	Loss_d 0.799 (0.799)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.38 (  0.38)
Test: [  1/  1]	Loss 0.799 (0.799)	test_acc   0.46 (  0.46)	test_minacc   0.44 (  0.44)	test_majacc   0.65 (  0.65)	Loss_d 0.799 (0.799)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.38 (  0.38)
Overall Timing[  6/  1]	epoch_time 0.0382 (0.0470)	validation_time 0.0004 (0.0013)	train_time 0.0377 (0.0429)
record: (train_acc, test_acc) (0.6484000166654587, 0.5790000557899475)
last accs (train_acc, test_acc) (0.5853000115156174, 0.45900002121925354)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 19%|#9        | 5/26 [00:00<00:01, 19.61it/s] 35%|###4      | 9/26 [00:00<00:00, 24.25it/s] 50%|#####     | 13/26 [00:00<00:00, 26.79it/s] 65%|######5   | 17/26 [00:00<00:00, 28.35it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.87it/s] 92%|#########2| 24/26 [00:00<00:00, 29.22it/s]100%|##########| 26/26 [00:01<00:00, 25.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.005 (0.004)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.63 (  0.62)	train_minacc   0.38 (  0.46)	train_majacc   0.68 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.33it/s] 27%|##6       | 7/26 [00:00<00:00, 30.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.34it/s] 50%|#####     | 13/26 [00:00<00:00, 37.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.01it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.01it/s] 96%|#########6| 25/26 [00:00<00:00, 46.09it/s]100%|##########| 26/26 [00:00<00:00, 37.41it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.64 (  0.64)	test_minacc   0.48 (  0.48)	test_majacc   0.67 (  0.67)	Loss_d 0.608 (0.608)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.599 (0.607)	test_acc   0.66 (  0.65)	test_minacc   0.52 (  0.46)	test_majacc   0.69 (  0.68)	Loss_d 0.599 (0.607)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.52 (  0.46)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.38 (  0.42)
Test: [  20/  26]	Loss 0.630 (0.608)	test_acc   0.65 (  0.65)	test_minacc   0.36 (  0.48)	test_majacc   0.69 (  0.68)	Loss_d 0.630 (0.608)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.36 (  0.48)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.40 (  0.41)
Test: [  26/  26]	Loss 0.617 (0.610)	test_acc   0.63 (  0.65)	test_minacc   0.38 (  0.47)	test_majacc   0.69 (  0.68)	Loss_d 0.617 (0.610)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.38 (  0.47)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.45 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.54it/s]
Test: [  0/  1]	Loss 0.828 (0.828)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.66 (  0.66)	Loss_d 0.828 (0.828)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 0.828 (0.828)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.66 (  0.66)	Loss_d 0.828 (0.828)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.19 (  0.19)
Overall Timing[  7/  1]	epoch_time 0.0391 (0.0461)	validation_time 0.0004 (0.0012)	train_time 0.0379 (0.0423)
record: (train_acc, test_acc) (0.6484000166654587, 0.5790000557899475)
last accs (train_acc, test_acc) (0.6495000175833702, 0.46700000762939453)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.68it/s] 19%|#9        | 5/26 [00:00<00:01, 18.58it/s] 35%|###4      | 9/26 [00:00<00:00, 24.19it/s] 50%|#####     | 13/26 [00:00<00:00, 27.06it/s] 65%|######5   | 17/26 [00:00<00:00, 29.01it/s] 81%|########  | 21/26 [00:00<00:00, 30.22it/s] 96%|#########6| 25/26 [00:00<00:00, 31.12it/s]100%|##########| 26/26 [00:01<00:00, 25.86it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.002 (0.003)	train_nll   0.57 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.71 (  0.64)	train_minacc   0.73 (  0.62)	train_majacc   0.71 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.46it/s] 27%|##6       | 7/26 [00:00<00:00, 35.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.19it/s] 50%|#####     | 13/26 [00:00<00:00, 41.66it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.38it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.38it/s] 96%|#########6| 25/26 [00:00<00:00, 48.43it/s]100%|##########| 26/26 [00:00<00:00, 40.47it/s]
Test: [   0/  26]	Loss 0.613 (0.613)	test_acc   0.61 (  0.61)	test_minacc   0.65 (  0.65)	test_majacc   0.60 (  0.60)	Loss_d 0.613 (0.613)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.610 (0.616)	test_acc   0.62 (  0.60)	test_minacc   0.78 (  0.68)	test_majacc   0.58 (  0.59)	Loss_d 0.610 (0.616)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.78 (  0.68)	test_majacc_d   0.58 (  0.59)	test_corr_d   0.23 (  0.32)
Test: [  20/  26]	Loss 0.632 (0.614)	test_acc   0.58 (  0.60)	test_minacc   0.74 (  0.70)	test_majacc   0.56 (  0.59)	Loss_d 0.632 (0.614)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.74 (  0.70)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.32 (  0.31)
Test: [  26/  26]	Loss 0.580 (0.614)	test_acc   0.70 (  0.60)	test_minacc   0.76 (  0.70)	test_majacc   0.68 (  0.59)	Loss_d 0.580 (0.614)	test_acc_d   0.70 (  0.60)	test_minacc_d   0.76 (  0.70)	test_majacc_d   0.68 (  0.59)	test_corr_d   0.40 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.51it/s]
Test: [  0/  1]	Loss 0.861 (0.861)	test_acc   0.64 (  0.64)	test_minacc   0.65 (  0.65)	test_majacc   0.53 (  0.53)	Loss_d 0.861 (0.861)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.53 (  0.53)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.861 (0.861)	test_acc   0.64 (  0.64)	test_minacc   0.65 (  0.65)	test_majacc   0.53 (  0.53)	Loss_d 0.861 (0.861)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.53 (  0.53)	test_corr_d  -0.00 ( -0.00)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/25/checkpoints/model_best.pth
Overall Timing[  8/  1]	epoch_time 0.0369 (0.0450)	validation_time 0.0004 (0.0011)	train_time 0.0364 (0.0416)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 19%|#9        | 5/26 [00:00<00:01, 19.98it/s] 35%|###4      | 9/26 [00:00<00:00, 25.34it/s] 50%|#####     | 13/26 [00:00<00:00, 28.04it/s] 65%|######5   | 17/26 [00:00<00:00, 29.50it/s] 81%|########  | 21/26 [00:00<00:00, 30.44it/s] 96%|#########6| 25/26 [00:00<00:00, 30.31it/s]100%|##########| 26/26 [00:00<00:00, 26.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.003 (0.002)	train_nll   0.58 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.69 (  0.60)	train_minacc   0.58 (  0.66)	train_majacc   0.71 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.45it/s] 23%|##3       | 6/26 [00:00<00:00, 27.12it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.12it/s] 46%|####6     | 12/26 [00:00<00:00, 38.46it/s] 65%|######5   | 17/26 [00:00<00:00, 40.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.79it/s] 88%|########8 | 23/26 [00:00<00:00, 45.08it/s]100%|##########| 26/26 [00:00<00:00, 37.14it/s]
Test: [   0/  26]	Loss 0.582 (0.582)	test_acc   0.67 (  0.67)	test_minacc   0.61 (  0.61)	test_majacc   0.68 (  0.68)	Loss_d 0.582 (0.582)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.600 (0.585)	test_acc   0.65 (  0.67)	test_minacc   0.59 (  0.56)	test_majacc   0.67 (  0.68)	Loss_d 0.600 (0.585)	test_acc_d   0.65 (  0.67)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.36 (  0.44)
Test: [  20/  26]	Loss 0.590 (0.584)	test_acc   0.69 (  0.66)	test_minacc   0.53 (  0.58)	test_majacc   0.72 (  0.68)	Loss_d 0.590 (0.584)	test_acc_d   0.69 (  0.66)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.72 (  0.68)	test_corr_d   0.45 (  0.42)
Test: [  26/  26]	Loss 0.575 (0.585)	test_acc   0.70 (  0.67)	test_minacc   0.53 (  0.58)	test_majacc   0.74 (  0.68)	Loss_d 0.575 (0.585)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.74 (  0.68)	test_corr_d   0.46 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.48it/s]
Test: [  0/  1]	Loss 0.839 (0.839)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.66 (  0.66)	Loss_d 0.839 (0.839)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.839 (0.839)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.66 (  0.66)	Loss_d 0.839 (0.839)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.15 (  0.15)
Overall Timing[  9/  1]	epoch_time 0.0393 (0.0445)	validation_time 0.0016 (0.0012)	train_time 0.0377 (0.0412)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6655000230073929, 0.5270000100135803)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.80it/s] 19%|#9        | 5/26 [00:00<00:01, 19.04it/s] 35%|###4      | 9/26 [00:00<00:00, 24.47it/s] 46%|####6     | 12/26 [00:00<00:00, 25.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.75it/s] 69%|######9   | 18/26 [00:00<00:00, 27.14it/s] 85%|########4 | 22/26 [00:00<00:00, 28.21it/s] 96%|#########6| 25/26 [00:00<00:00, 28.38it/s]100%|##########| 26/26 [00:01<00:00, 24.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.002 (0.002)	train_nll   0.63 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.65 (  0.59)	train_minacc   0.67 (  0.56)	train_majacc   0.65 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.57it/s] 27%|##6       | 7/26 [00:00<00:00, 34.55it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.55it/s] 50%|#####     | 13/26 [00:00<00:00, 39.98it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.37it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.37it/s] 96%|#########6| 25/26 [00:00<00:00, 48.21it/s]100%|##########| 26/26 [00:00<00:00, 39.88it/s]
Test: [   0/  26]	Loss 0.617 (0.617)	test_acc   0.61 (  0.61)	test_minacc   0.50 (  0.50)	test_majacc   0.63 (  0.63)	Loss_d 0.617 (0.617)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.619 (0.607)	test_acc   0.63 (  0.65)	test_minacc   0.55 (  0.54)	test_majacc   0.64 (  0.67)	Loss_d 0.619 (0.607)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.55 (  0.54)	test_majacc_d   0.64 (  0.67)	test_corr_d   0.38 (  0.43)
Test: [  20/  26]	Loss 0.608 (0.608)	test_acc   0.65 (  0.65)	test_minacc   0.60 (  0.54)	test_majacc   0.66 (  0.67)	Loss_d 0.608 (0.608)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.66 (  0.67)	test_corr_d   0.45 (  0.42)
Test: [  26/  26]	Loss 0.622 (0.611)	test_acc   0.64 (  0.64)	test_minacc   0.62 (  0.54)	test_majacc   0.65 (  0.66)	Loss_d 0.622 (0.611)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.62 (  0.54)	test_majacc_d   0.65 (  0.66)	test_corr_d   0.40 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.43it/s]
Test: [  0/  1]	Loss 0.755 (0.755)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.67 (  0.67)	Loss_d 0.755 (0.755)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 0.755 (0.755)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.67 (  0.67)	Loss_d 0.755 (0.755)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.19 (  0.19)
Overall Timing[ 10/  1]	epoch_time 0.0391 (0.0440)	validation_time 0.0004 (0.0011)	train_time 0.0387 (0.0410)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6439000173807145, 0.5250000357627869)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 15%|#5        | 4/26 [00:00<00:01, 16.63it/s] 31%|###       | 8/26 [00:00<00:00, 23.10it/s] 46%|####6     | 12/26 [00:00<00:00, 26.79it/s] 62%|######1   | 16/26 [00:00<00:00, 29.13it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.58it/s] 92%|#########2| 24/26 [00:00<00:00, 31.20it/s]100%|##########| 26/26 [00:01<00:00, 25.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.55 (  0.62)	train_minacc   0.47 (  0.57)	train_majacc   0.57 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 23%|##3       | 6/26 [00:00<00:00, 29.79it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.79it/s] 42%|####2     | 11/26 [00:00<00:00, 38.20it/s] 62%|######1   | 16/26 [00:00<00:00, 41.58it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.58it/s] 85%|########4 | 22/26 [00:00<00:00, 46.84it/s]100%|##########| 26/26 [00:00<00:00, 38.39it/s]
Test: [   0/  26]	Loss 0.650 (0.650)	test_acc   0.60 (  0.60)	test_minacc   0.69 (  0.69)	test_majacc   0.58 (  0.58)	Loss_d 0.650 (0.650)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.648 (0.628)	test_acc   0.60 (  0.61)	test_minacc   0.57 (  0.59)	test_majacc   0.60 (  0.61)	Loss_d 0.648 (0.628)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.29 (  0.34)
Test: [  20/  26]	Loss 0.631 (0.629)	test_acc   0.61 (  0.60)	test_minacc   0.51 (  0.60)	test_majacc   0.62 (  0.59)	Loss_d 0.631 (0.629)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.51 (  0.60)	test_majacc_d   0.62 (  0.59)	test_corr_d   0.36 (  0.33)
Test: [  26/  26]	Loss 0.657 (0.631)	test_acc   0.54 (  0.59)	test_minacc   0.49 (  0.59)	test_majacc   0.55 (  0.59)	Loss_d 0.657 (0.631)	test_acc_d   0.54 (  0.59)	test_minacc_d   0.49 (  0.59)	test_majacc_d   0.55 (  0.59)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.26it/s]
Test: [  0/  1]	Loss 0.764 (0.764)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.58 (  0.58)	Loss_d 0.764 (0.764)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.764 (0.764)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.58 (  0.58)	Loss_d 0.764 (0.764)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.13 (  0.13)
Overall Timing[ 11/  1]	epoch_time 0.0381 (0.0435)	validation_time 0.0004 (0.0011)	train_time 0.0377 (0.0407)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5913000135421753, 0.5350000262260437)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.06it/s] 15%|#5        | 4/26 [00:00<00:01, 18.47it/s] 31%|###       | 8/26 [00:00<00:00, 24.93it/s] 46%|####6     | 12/26 [00:00<00:00, 27.98it/s] 62%|######1   | 16/26 [00:00<00:00, 29.84it/s] 77%|#######6  | 20/26 [00:00<00:00, 31.19it/s] 92%|#########2| 24/26 [00:00<00:00, 30.96it/s]100%|##########| 26/26 [00:00<00:00, 26.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.002 (0.002)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.65 (  0.58)	train_minacc   0.44 (  0.59)	train_majacc   0.70 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.98it/s] 27%|##6       | 7/26 [00:00<00:00, 37.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.87it/s] 50%|#####     | 13/26 [00:00<00:00, 40.51it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.83it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.83it/s] 96%|#########6| 25/26 [00:00<00:00, 47.17it/s]100%|##########| 26/26 [00:00<00:00, 39.93it/s]
Test: [   0/  26]	Loss 0.617 (0.617)	test_acc   0.65 (  0.65)	test_minacc   0.52 (  0.52)	test_majacc   0.68 (  0.68)	Loss_d 0.617 (0.617)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.595 (0.607)	test_acc   0.65 (  0.66)	test_minacc   0.57 (  0.50)	test_majacc   0.67 (  0.68)	Loss_d 0.595 (0.607)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.37 (  0.39)
Test: [  20/  26]	Loss 0.615 (0.608)	test_acc   0.66 (  0.65)	test_minacc   0.43 (  0.51)	test_majacc   0.69 (  0.68)	Loss_d 0.615 (0.608)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.40 (  0.38)
Test: [  26/  26]	Loss 0.633 (0.611)	test_acc   0.63 (  0.65)	test_minacc   0.44 (  0.50)	test_majacc   0.67 (  0.68)	Loss_d 0.633 (0.611)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.39 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.87it/s]
Test: [  0/  1]	Loss 0.859 (0.859)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.66 (  0.66)	Loss_d 0.859 (0.859)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.859 (0.859)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.66 (  0.66)	Loss_d 0.859 (0.859)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.22 (  0.22)
Overall Timing[ 12/  1]	epoch_time 0.0385 (0.0431)	validation_time 0.0005 (0.0010)	train_time 0.0381 (0.0405)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6527000136971474, 0.46700000762939453)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.67it/s] 15%|#5        | 4/26 [00:00<00:01, 16.38it/s] 31%|###       | 8/26 [00:00<00:00, 23.52it/s] 46%|####6     | 12/26 [00:00<00:00, 27.15it/s] 62%|######1   | 16/26 [00:00<00:00, 28.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.66it/s] 92%|#########2| 24/26 [00:00<00:00, 30.53it/s]100%|##########| 26/26 [00:01<00:00, 25.80it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.62 (  0.64)	train_minacc   0.56 (  0.52)	train_majacc   0.63 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.79it/s] 27%|##6       | 7/26 [00:00<00:00, 30.01it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.01it/s] 50%|#####     | 13/26 [00:00<00:00, 35.74it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.01it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.01it/s] 96%|#########6| 25/26 [00:00<00:00, 44.38it/s]100%|##########| 26/26 [00:00<00:00, 36.17it/s]
Test: [   0/  26]	Loss 0.620 (0.620)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.62 (  0.62)	Loss_d 0.620 (0.620)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.609 (0.605)	test_acc   0.65 (  0.64)	test_minacc   0.64 (  0.59)	test_majacc   0.65 (  0.66)	Loss_d 0.609 (0.605)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.64 (  0.59)	test_majacc_d   0.65 (  0.66)	test_corr_d   0.31 (  0.36)
Test: [  20/  26]	Loss 0.610 (0.604)	test_acc   0.66 (  0.64)	test_minacc   0.51 (  0.61)	test_majacc   0.68 (  0.65)	Loss_d 0.610 (0.604)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.51 (  0.61)	test_majacc_d   0.68 (  0.65)	test_corr_d   0.39 (  0.36)
Test: [  26/  26]	Loss 0.624 (0.607)	test_acc   0.61 (  0.64)	test_minacc   0.56 (  0.60)	test_majacc   0.62 (  0.65)	Loss_d 0.624 (0.607)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.56 (  0.60)	test_majacc_d   0.62 (  0.65)	test_corr_d   0.35 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.62it/s]
Test: [  0/  1]	Loss 0.823 (0.823)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.56 (  0.56)	Loss_d 0.823 (0.823)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.823 (0.823)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.56 (  0.56)	Loss_d 0.823 (0.823)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.10 (  0.10)
Overall Timing[ 13/  1]	epoch_time 0.0378 (0.0427)	validation_time 0.0004 (0.0010)	train_time 0.0374 (0.0403)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6395000128149986, 0.5420000553131104)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.00it/s] 15%|#5        | 4/26 [00:00<00:01, 18.79it/s] 27%|##6       | 7/26 [00:00<00:00, 22.54it/s] 38%|###8      | 10/26 [00:00<00:00, 24.72it/s] 50%|#####     | 13/26 [00:00<00:00, 25.75it/s] 62%|######1   | 16/26 [00:00<00:00, 26.86it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.40it/s] 85%|########4 | 22/26 [00:00<00:00, 27.63it/s] 96%|#########6| 25/26 [00:00<00:00, 28.08it/s]100%|##########| 26/26 [00:01<00:00, 24.38it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.001 (0.001)	train_nll   0.62 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.63 (  0.58)	train_minacc   0.56 (  0.63)	train_majacc   0.65 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.50it/s] 23%|##3       | 6/26 [00:00<00:00, 28.65it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.65it/s] 46%|####6     | 12/26 [00:00<00:00, 39.90it/s] 65%|######5   | 17/26 [00:00<00:00, 40.47it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.47it/s] 88%|########8 | 23/26 [00:00<00:00, 46.31it/s]100%|##########| 26/26 [00:00<00:00, 38.29it/s]
Test: [   0/  26]	Loss 0.602 (0.602)	test_acc   0.64 (  0.64)	test_minacc   0.58 (  0.58)	test_majacc   0.65 (  0.65)	Loss_d 0.602 (0.602)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.629 (0.593)	test_acc   0.58 (  0.64)	test_minacc   0.57 (  0.55)	test_majacc   0.59 (  0.65)	Loss_d 0.629 (0.593)	test_acc_d   0.58 (  0.64)	test_minacc_d   0.57 (  0.55)	test_majacc_d   0.59 (  0.65)	test_corr_d   0.32 (  0.42)
Test: [  20/  26]	Loss 0.577 (0.588)	test_acc   0.65 (  0.64)	test_minacc   0.55 (  0.58)	test_majacc   0.67 (  0.65)	Loss_d 0.577 (0.588)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.55 (  0.58)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.45 (  0.41)
Test: [  26/  26]	Loss 0.593 (0.590)	test_acc   0.66 (  0.64)	test_minacc   0.56 (  0.59)	test_majacc   0.68 (  0.65)	Loss_d 0.593 (0.590)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.56 (  0.59)	test_majacc_d   0.68 (  0.65)	test_corr_d   0.44 (  0.41)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.98it/s]
Test: [  0/  1]	Loss 0.885 (0.885)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.885 (0.885)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.885 (0.885)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.885 (0.885)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.09 (  0.09)
Overall Timing[ 14/  1]	epoch_time 0.0399 (0.0425)	validation_time 0.0004 (0.0009)	train_time 0.0394 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6425000084638596, 0.5680000185966492)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.82it/s] 12%|#1        | 3/26 [00:00<00:01, 13.03it/s] 27%|##6       | 7/26 [00:00<00:00, 21.32it/s] 42%|####2     | 11/26 [00:00<00:00, 24.77it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.81it/s] 88%|########8 | 23/26 [00:00<00:00, 28.62it/s]100%|##########| 26/26 [00:01<00:00, 24.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0068, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(4.6371e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(3.4014e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.002 (0.003)	train_nll   0.60 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.69 (  0.63)	train_minacc   0.58 (  0.49)	train_majacc   0.72 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.85it/s] 27%|##6       | 7/26 [00:00<00:00, 30.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.79it/s] 50%|#####     | 13/26 [00:00<00:00, 39.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.43it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.43it/s] 96%|#########6| 25/26 [00:00<00:00, 45.66it/s]100%|##########| 26/26 [00:00<00:00, 37.43it/s]
Test: [   0/  26]	Loss 0.584 (0.584)	test_acc   0.67 (  0.67)	test_minacc   0.52 (  0.52)	test_majacc   0.70 (  0.70)	Loss_d 0.584 (0.584)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.621 (0.579)	test_acc   0.60 (  0.67)	test_minacc   0.49 (  0.50)	test_majacc   0.62 (  0.70)	Loss_d 0.621 (0.579)	test_acc_d   0.60 (  0.67)	test_minacc_d   0.49 (  0.50)	test_majacc_d   0.62 (  0.70)	test_corr_d   0.37 (  0.47)
Test: [  20/  26]	Loss 0.575 (0.576)	test_acc   0.70 (  0.67)	test_minacc   0.53 (  0.54)	test_majacc   0.72 (  0.70)	Loss_d 0.575 (0.576)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.53 (  0.54)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.47 (  0.46)
Test: [  26/  26]	Loss 0.573 (0.576)	test_acc   0.70 (  0.67)	test_minacc   0.47 (  0.54)	test_majacc   0.75 (  0.70)	Loss_d 0.573 (0.576)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.47 (  0.54)	test_majacc_d   0.75 (  0.70)	test_corr_d   0.50 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.47it/s]
Test: [  0/  1]	Loss 0.812 (0.812)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.70 (  0.70)	Loss_d 0.812 (0.812)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.13 (  0.13)
Test: [  1/  1]	Loss 0.812 (0.812)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.70 (  0.70)	Loss_d 0.812 (0.812)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.13 (  0.13)
Overall Timing[ 15/  1]	epoch_time 0.0407 (0.0424)	validation_time 0.0004 (0.0009)	train_time 0.0402 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6741000280976296, 0.5380000472068787)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.19it/s] 12%|#1        | 3/26 [00:00<00:01, 11.89it/s] 23%|##3       | 6/26 [00:00<00:01, 18.64it/s] 38%|###8      | 10/26 [00:00<00:00, 23.50it/s] 50%|#####     | 13/26 [00:00<00:00, 24.94it/s] 62%|######1   | 16/26 [00:00<00:00, 26.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.46it/s] 88%|########8 | 23/26 [00:00<00:00, 28.62it/s]100%|##########| 26/26 [00:01<00:00, 23.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0049, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(3.8832e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: tensor(5.2756e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.002 (0.002)	train_nll   0.68 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.59 (  0.59)	train_minacc   0.42 (  0.60)	train_majacc   0.62 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 27%|##6       | 7/26 [00:00<00:00, 33.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.20it/s] 50%|#####     | 13/26 [00:00<00:00, 40.21it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.94it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.94it/s] 96%|#########6| 25/26 [00:00<00:00, 44.56it/s]100%|##########| 26/26 [00:00<00:00, 37.99it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.60 (  0.60)	test_minacc   0.50 (  0.50)	test_majacc   0.62 (  0.62)	Loss_d 0.657 (0.657)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.661 (0.655)	test_acc   0.60 (  0.61)	test_minacc   0.45 (  0.44)	test_majacc   0.63 (  0.64)	Loss_d 0.661 (0.655)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.45 (  0.44)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.26 (  0.28)
Test: [  20/  26]	Loss 0.654 (0.655)	test_acc   0.61 (  0.61)	test_minacc   0.36 (  0.47)	test_majacc   0.65 (  0.64)	Loss_d 0.654 (0.655)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.36 (  0.47)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.30 (  0.27)
Test: [  26/  26]	Loss 0.684 (0.656)	test_acc   0.58 (  0.61)	test_minacc   0.40 (  0.47)	test_majacc   0.62 (  0.64)	Loss_d 0.684 (0.656)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.40 (  0.47)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.23 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.51it/s]
Test: [  0/  1]	Loss 0.754 (0.754)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.64 (  0.64)	Loss_d 0.754 (0.754)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.754 (0.754)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.64 (  0.64)	Loss_d 0.754 (0.754)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.12 (  0.12)
Overall Timing[ 16/  1]	epoch_time 0.0408 (0.0423)	validation_time 0.0004 (0.0009)	train_time 0.0404 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6100000122785568, 0.4650000333786011)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.79it/s] 15%|#5        | 4/26 [00:00<00:01, 15.60it/s] 27%|##6       | 7/26 [00:00<00:00, 20.72it/s] 42%|####2     | 11/26 [00:00<00:00, 24.52it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.73it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.07it/s] 88%|########8 | 23/26 [00:00<00:00, 28.80it/s]100%|##########| 26/26 [00:01<00:00, 24.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0042, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(7.2016e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.004 (0.004)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.52 (  0.59)	train_minacc   0.58 (  0.50)	train_majacc   0.50 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.23it/s] 27%|##6       | 7/26 [00:00<00:00, 30.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.14it/s] 50%|#####     | 13/26 [00:00<00:00, 36.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.56it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.56it/s] 96%|#########6| 25/26 [00:00<00:00, 43.47it/s]100%|##########| 26/26 [00:00<00:00, 35.99it/s]
Test: [   0/  26]	Loss 0.665 (0.665)	test_acc   0.51 (  0.51)	test_minacc   0.47 (  0.47)	test_majacc   0.52 (  0.52)	Loss_d 0.665 (0.665)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.64 (  0.64)
Test: [  10/  26]	Loss 0.667 (0.664)	test_acc   0.51 (  0.50)	test_minacc   0.52 (  0.52)	test_majacc   0.51 (  0.50)	Loss_d 0.667 (0.664)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.60 (  0.66)
Test: [  20/  26]	Loss 0.660 (0.662)	test_acc   0.50 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.660 (0.662)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.67 (  0.65)
Test: [  26/  26]	Loss 0.657 (0.663)	test_acc   0.52 (  0.50)	test_minacc   0.58 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.657 (0.663)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.58 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.67 (  0.65)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.69it/s]
Test: [  0/  1]	Loss 0.951 (0.951)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.951 (0.951)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.48 (  0.48)
Test: [  1/  1]	Loss 0.951 (0.951)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.951 (0.951)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.48 (  0.48)
Overall Timing[ 17/  1]	epoch_time 0.0427 (0.0424)	validation_time 0.0004 (0.0009)	train_time 0.0422 (0.0404)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5001000089645385, 0.5)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.18it/s] 12%|#1        | 3/26 [00:00<00:01, 12.41it/s] 23%|##3       | 6/26 [00:00<00:01, 19.04it/s] 35%|###4      | 9/26 [00:00<00:00, 22.81it/s] 46%|####6     | 12/26 [00:00<00:00, 24.42it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.43it/s] 69%|######9   | 18/26 [00:00<00:00, 26.47it/s] 81%|########  | 21/26 [00:00<00:00, 27.45it/s] 92%|#########2| 24/26 [00:01<00:00, 27.56it/s]100%|##########| 26/26 [00:01<00:00, 22.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0037, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: tensor(1.4414e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.006 (0.006)	train_nll   0.68 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.55 (  0.64)	train_minacc   0.73 (  0.49)	train_majacc   0.51 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.81it/s] 27%|##6       | 7/26 [00:00<00:00, 32.56it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.56it/s] 50%|#####     | 13/26 [00:00<00:00, 39.05it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.44it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.44it/s] 92%|#########2| 24/26 [00:00<00:00, 45.66it/s]100%|##########| 26/26 [00:00<00:00, 36.91it/s]
Test: [   0/  26]	Loss 0.586 (0.586)	test_acc   0.65 (  0.65)	test_minacc   0.50 (  0.50)	test_majacc   0.68 (  0.68)	Loss_d 0.586 (0.586)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.43 (  0.43)
Test: [  10/  26]	Loss 0.613 (0.591)	test_acc   0.63 (  0.66)	test_minacc   0.52 (  0.52)	test_majacc   0.65 (  0.69)	Loss_d 0.613 (0.591)	test_acc_d   0.63 (  0.66)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.65 (  0.69)	test_corr_d   0.37 (  0.43)
Test: [  20/  26]	Loss 0.585 (0.591)	test_acc   0.67 (  0.66)	test_minacc   0.45 (  0.53)	test_majacc   0.70 (  0.69)	Loss_d 0.585 (0.591)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.45 (  0.53)	test_majacc_d   0.70 (  0.69)	test_corr_d   0.46 (  0.42)
Test: [  26/  26]	Loss 0.632 (0.593)	test_acc   0.65 (  0.66)	test_minacc   0.44 (  0.53)	test_majacc   0.70 (  0.69)	Loss_d 0.632 (0.593)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.44 (  0.53)	test_majacc_d   0.70 (  0.69)	test_corr_d   0.44 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.54it/s]
Test: [  0/  1]	Loss 0.956 (0.956)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.67 (  0.67)	Loss_d 0.956 (0.956)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.956 (0.956)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.67 (  0.67)	Loss_d 0.956 (0.956)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.15 (  0.15)
Overall Timing[ 18/  1]	epoch_time 0.0404 (0.0422)	validation_time 0.0005 (0.0008)	train_time 0.0399 (0.0403)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6646000232100486, 0.4960000216960907)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.21it/s] 15%|#5        | 4/26 [00:00<00:01, 16.02it/s] 27%|##6       | 7/26 [00:00<00:00, 20.56it/s] 38%|###8      | 10/26 [00:00<00:00, 23.63it/s] 50%|#####     | 13/26 [00:00<00:00, 25.42it/s] 62%|######1   | 16/26 [00:00<00:00, 26.34it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.25it/s] 85%|########4 | 22/26 [00:00<00:00, 28.06it/s] 96%|#########6| 25/26 [00:01<00:00, 28.38it/s]100%|##########| 26/26 [00:01<00:00, 23.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0023, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.004 (0.002)	train_nll   0.60 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.64 (  0.59)	train_minacc   0.42 (  0.55)	train_majacc   0.69 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.11it/s] 23%|##3       | 6/26 [00:00<00:00, 26.52it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.52it/s] 46%|####6     | 12/26 [00:00<00:00, 39.15it/s] 65%|######5   | 17/26 [00:00<00:00, 41.42it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.42it/s] 88%|########8 | 23/26 [00:00<00:00, 46.57it/s]100%|##########| 26/26 [00:00<00:00, 36.71it/s]
Test: [   0/  26]	Loss 0.558 (0.558)	test_acc   0.70 (  0.70)	test_minacc   0.44 (  0.44)	test_majacc   0.75 (  0.75)	Loss_d 0.558 (0.558)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.585 (0.550)	test_acc   0.66 (  0.70)	test_minacc   0.38 (  0.39)	test_majacc   0.72 (  0.76)	Loss_d 0.585 (0.550)	test_acc_d   0.66 (  0.70)	test_minacc_d   0.38 (  0.39)	test_majacc_d   0.72 (  0.76)	test_corr_d   0.54 (  0.59)
Test: [  20/  26]	Loss 0.545 (0.547)	test_acc   0.74 (  0.70)	test_minacc   0.40 (  0.42)	test_majacc   0.78 (  0.75)	Loss_d 0.545 (0.547)	test_acc_d   0.74 (  0.70)	test_minacc_d   0.40 (  0.42)	test_majacc_d   0.78 (  0.75)	test_corr_d   0.60 (  0.58)
Test: [  26/  26]	Loss 0.557 (0.548)	test_acc   0.70 (  0.71)	test_minacc   0.38 (  0.42)	test_majacc   0.77 (  0.76)	Loss_d 0.557 (0.548)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.38 (  0.42)	test_majacc_d   0.77 (  0.76)	test_corr_d   0.60 (  0.58)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.64it/s]
Test: [  0/  1]	Loss 0.991 (0.991)	test_acc   0.44 (  0.44)	test_minacc   0.41 (  0.41)	test_majacc   0.73 (  0.73)	Loss_d 0.991 (0.991)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 0.991 (0.991)	test_acc   0.44 (  0.44)	test_minacc   0.41 (  0.41)	test_majacc   0.73 (  0.73)	Loss_d 0.991 (0.991)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.35 (  0.35)
Overall Timing[ 19/  1]	epoch_time 0.0418 (0.0422)	validation_time 0.0004 (0.0008)	train_time 0.0413 (0.0404)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.7062000319957733, 0.4400000274181366)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.71it/s] 15%|#5        | 4/26 [00:00<00:01, 13.62it/s] 27%|##6       | 7/26 [00:00<00:00, 19.17it/s] 42%|####2     | 11/26 [00:00<00:00, 23.48it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.23it/s] 69%|######9   | 18/26 [00:00<00:00, 27.23it/s] 85%|########4 | 22/26 [00:00<00:00, 28.49it/s]100%|##########| 26/26 [00:01<00:00, 29.59it/s]100%|##########| 26/26 [00:01<00:00, 23.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0029, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.032 (0.004)	train_nll   0.70 (  0.61)	train_penalty   0.03 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.58 (  0.63)	train_minacc   0.38 (  0.52)	train_majacc   0.62 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.73it/s] 23%|##3       | 6/26 [00:00<00:00, 29.80it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.80it/s] 42%|####2     | 11/26 [00:00<00:00, 38.14it/s] 62%|######1   | 16/26 [00:00<00:00, 42.08it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.08it/s] 81%|########  | 21/26 [00:00<00:00, 41.01it/s]100%|##########| 26/26 [00:00<00:00, 36.59it/s]
Test: [   0/  26]	Loss 0.585 (0.585)	test_acc   0.65 (  0.65)	test_minacc   0.50 (  0.50)	test_majacc   0.68 (  0.68)	Loss_d 0.585 (0.585)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.52 (  0.52)
Test: [  10/  26]	Loss 0.599 (0.585)	test_acc   0.64 (  0.65)	test_minacc   0.45 (  0.43)	test_majacc   0.68 (  0.69)	Loss_d 0.599 (0.585)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.45 (  0.43)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.50 (  0.52)
Test: [  20/  26]	Loss 0.583 (0.584)	test_acc   0.64 (  0.65)	test_minacc   0.32 (  0.45)	test_majacc   0.68 (  0.68)	Loss_d 0.583 (0.584)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.32 (  0.45)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.53 (  0.52)
Test: [  26/  26]	Loss 0.604 (0.584)	test_acc   0.64 (  0.65)	test_minacc   0.42 (  0.45)	test_majacc   0.69 (  0.68)	Loss_d 0.604 (0.584)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.42 (  0.45)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.90it/s]
Test: [  0/  1]	Loss 0.941 (0.941)	test_acc   0.45 (  0.45)	test_minacc   0.42 (  0.42)	test_majacc   0.66 (  0.66)	Loss_d 0.941 (0.941)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.32 (  0.32)
Test: [  1/  1]	Loss 0.941 (0.941)	test_acc   0.45 (  0.45)	test_minacc   0.42 (  0.42)	test_majacc   0.66 (  0.66)	Loss_d 0.941 (0.941)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.32 (  0.32)
Overall Timing[ 20/  1]	epoch_time 0.0424 (0.0422)	validation_time 0.0025 (0.0009)	train_time 0.0399 (0.0404)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6488000168800354, 0.4480000138282776)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.12it/s] 15%|#5        | 4/26 [00:00<00:01, 18.96it/s] 27%|##6       | 7/26 [00:00<00:00, 23.50it/s] 42%|####2     | 11/26 [00:00<00:00, 26.48it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.16it/s] 85%|########4 | 22/26 [00:00<00:00, 28.19it/s] 96%|#########6| 25/26 [00:00<00:00, 28.65it/s]100%|##########| 26/26 [00:01<00:00, 25.16it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0016, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.007 (0.005)	train_nll   0.51 (  0.62)	train_penalty   0.01 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.76 (  0.64)	train_minacc   0.44 (  0.48)	train_majacc   0.83 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.96it/s] 23%|##3       | 6/26 [00:00<00:00, 30.31it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.31it/s] 42%|####2     | 11/26 [00:00<00:00, 36.68it/s] 65%|######5   | 17/26 [00:00<00:00, 43.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.11it/s] 85%|########4 | 22/26 [00:00<00:00, 45.08it/s]100%|##########| 26/26 [00:00<00:00, 38.37it/s]
Test: [   0/  26]	Loss 0.566 (0.566)	test_acc   0.70 (  0.70)	test_minacc   0.45 (  0.45)	test_majacc   0.74 (  0.74)	Loss_d 0.566 (0.566)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.578 (0.552)	test_acc   0.68 (  0.72)	test_minacc   0.51 (  0.51)	test_majacc   0.71 (  0.75)	Loss_d 0.578 (0.552)	test_acc_d   0.68 (  0.72)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.71 (  0.75)	test_corr_d   0.47 (  0.52)
Test: [  20/  26]	Loss 0.541 (0.550)	test_acc   0.73 (  0.72)	test_minacc   0.49 (  0.50)	test_majacc   0.76 (  0.76)	Loss_d 0.541 (0.550)	test_acc_d   0.73 (  0.72)	test_minacc_d   0.49 (  0.50)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.54 (  0.52)
Test: [  26/  26]	Loss 0.539 (0.550)	test_acc   0.76 (  0.72)	test_minacc   0.56 (  0.50)	test_majacc   0.80 (  0.76)	Loss_d 0.539 (0.550)	test_acc_d   0.76 (  0.72)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.80 (  0.76)	test_corr_d   0.54 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.66it/s]
Test: [  0/  1]	Loss 0.997 (0.997)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.74 (  0.74)	Loss_d 0.997 (0.997)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 0.997 (0.997)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.74 (  0.74)	Loss_d 0.997 (0.997)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.18 (  0.18)
Overall Timing[ 21/  1]	epoch_time 0.0418 (0.0422)	validation_time 0.0004 (0.0009)	train_time 0.0414 (0.0404)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.7199000326991081, 0.4970000088214874)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.56it/s] 15%|#5        | 4/26 [00:00<00:01, 15.44it/s] 27%|##6       | 7/26 [00:00<00:00, 20.40it/s] 42%|####2     | 11/26 [00:00<00:00, 24.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.93it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.47it/s] 85%|########4 | 22/26 [00:00<00:00, 28.85it/s]100%|##########| 26/26 [00:01<00:00, 29.75it/s]100%|##########| 26/26 [00:01<00:00, 24.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0010, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.002 (0.012)	train_nll   0.63 (  0.62)	train_penalty   0.00 (  0.01)	weight_norm   7.83 (  7.83)	train_acc   0.63 (  0.62)	train_minacc   0.49 (  0.44)	train_majacc   0.66 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.49it/s] 23%|##3       | 6/26 [00:00<00:00, 32.45it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.45it/s] 42%|####2     | 11/26 [00:00<00:00, 39.08it/s] 62%|######1   | 16/26 [00:00<00:00, 42.68it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.68it/s] 85%|########4 | 22/26 [00:00<00:00, 46.84it/s]100%|##########| 26/26 [00:00<00:00, 38.59it/s]
Test: [   0/  26]	Loss 0.627 (0.627)	test_acc   0.65 (  0.65)	test_minacc   0.47 (  0.47)	test_majacc   0.68 (  0.68)	Loss_d 0.627 (0.627)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.40 (  0.40)
Test: [  10/  26]	Loss 0.632 (0.614)	test_acc   0.66 (  0.66)	test_minacc   0.46 (  0.40)	test_majacc   0.71 (  0.70)	Loss_d 0.632 (0.614)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.46 (  0.40)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.38 (  0.43)
Test: [  20/  26]	Loss 0.610 (0.613)	test_acc   0.66 (  0.66)	test_minacc   0.32 (  0.43)	test_majacc   0.71 (  0.70)	Loss_d 0.610 (0.613)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.32 (  0.43)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.45 (  0.42)
Test: [  26/  26]	Loss 0.630 (0.613)	test_acc   0.65 (  0.66)	test_minacc   0.33 (  0.42)	test_majacc   0.72 (  0.70)	Loss_d 0.630 (0.613)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.33 (  0.42)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.43 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.85it/s]
Test: [  0/  1]	Loss 1.004 (1.004)	test_acc   0.42 (  0.42)	test_minacc   0.39 (  0.39)	test_majacc   0.68 (  0.68)	Loss_d 1.004 (1.004)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.19 (  0.19)
Test: [  1/  1]	Loss 1.004 (1.004)	test_acc   0.42 (  0.42)	test_minacc   0.39 (  0.39)	test_majacc   0.68 (  0.68)	Loss_d 1.004 (1.004)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.19 (  0.19)
Overall Timing[ 22/  1]	epoch_time 0.0399 (0.0421)	validation_time 0.0004 (0.0008)	train_time 0.0394 (0.0404)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6594000198245048, 0.4190000295639038)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 15%|#5        | 4/26 [00:00<00:01, 17.31it/s] 27%|##6       | 7/26 [00:00<00:00, 21.66it/s] 42%|####2     | 11/26 [00:00<00:00, 25.28it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.23it/s] 69%|######9   | 18/26 [00:00<00:00, 27.70it/s] 81%|########  | 21/26 [00:00<00:00, 27.39it/s] 96%|#########6| 25/26 [00:00<00:00, 28.41it/s]100%|##########| 26/26 [00:01<00:00, 24.39it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.005 (0.004)	train_nll   0.66 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.60 (  0.62)	train_minacc   0.51 (  0.48)	train_majacc   0.62 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.66it/s] 23%|##3       | 6/26 [00:00<00:00, 27.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.24it/s] 42%|####2     | 11/26 [00:00<00:00, 35.53it/s] 65%|######5   | 17/26 [00:00<00:00, 40.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.45it/s] 88%|########8 | 23/26 [00:00<00:00, 45.52it/s]100%|##########| 26/26 [00:00<00:00, 36.06it/s]
Test: [   0/  26]	Loss 0.624 (0.624)	test_acc   0.65 (  0.65)	test_minacc   0.50 (  0.50)	test_majacc   0.68 (  0.68)	Loss_d 0.624 (0.624)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.620 (0.617)	test_acc   0.65 (  0.66)	test_minacc   0.57 (  0.50)	test_majacc   0.66 (  0.69)	Loss_d 0.620 (0.617)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.66 (  0.69)	test_corr_d   0.34 (  0.37)
Test: [  20/  26]	Loss 0.613 (0.617)	test_acc   0.67 (  0.66)	test_minacc   0.49 (  0.53)	test_majacc   0.69 (  0.68)	Loss_d 0.613 (0.617)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.49 (  0.53)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.40 (  0.37)
Test: [  26/  26]	Loss 0.643 (0.617)	test_acc   0.64 (  0.66)	test_minacc   0.44 (  0.53)	test_majacc   0.68 (  0.68)	Loss_d 0.643 (0.617)	test_acc_d   0.64 (  0.66)	test_minacc_d   0.44 (  0.53)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.36 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.19it/s]
Test: [  0/  1]	Loss 0.910 (0.910)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.65 (  0.65)	Loss_d 0.910 (0.910)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.910 (0.910)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.65 (  0.65)	Loss_d 0.910 (0.910)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.11 (  0.11)
Overall Timing[ 23/  1]	epoch_time 0.0388 (0.0420)	validation_time 0.0004 (0.0008)	train_time 0.0384 (0.0403)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6597000229954719, 0.5210000276565552)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.39it/s] 15%|#5        | 4/26 [00:00<00:01, 14.23it/s] 31%|###       | 8/26 [00:00<00:00, 21.16it/s] 46%|####6     | 12/26 [00:00<00:00, 24.75it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.13it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.93it/s] 88%|########8 | 23/26 [00:00<00:00, 28.44it/s]100%|##########| 26/26 [00:01<00:00, 28.39it/s]100%|##########| 26/26 [00:01<00:00, 23.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.53 (  0.58)	train_minacc   0.62 (  0.62)	train_majacc   0.51 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.42it/s] 27%|##6       | 7/26 [00:00<00:00, 32.80it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.80it/s] 50%|#####     | 13/26 [00:00<00:00, 39.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.31it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.31it/s] 96%|#########6| 25/26 [00:00<00:00, 45.90it/s]100%|##########| 26/26 [00:00<00:00, 38.49it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.56 (  0.56)	test_minacc   0.65 (  0.65)	test_majacc   0.54 (  0.54)	Loss_d 0.648 (0.648)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.650 (0.643)	test_acc   0.54 (  0.57)	test_minacc   0.59 (  0.66)	test_majacc   0.53 (  0.55)	Loss_d 0.650 (0.643)	test_acc_d   0.54 (  0.57)	test_minacc_d   0.59 (  0.66)	test_majacc_d   0.53 (  0.55)	test_corr_d   0.21 (  0.26)
Test: [  20/  26]	Loss 0.637 (0.644)	test_acc   0.54 (  0.56)	test_minacc   0.60 (  0.68)	test_majacc   0.54 (  0.54)	Loss_d 0.637 (0.644)	test_acc_d   0.54 (  0.56)	test_minacc_d   0.60 (  0.68)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.28 (  0.25)
Test: [  26/  26]	Loss 0.662 (0.645)	test_acc   0.57 (  0.57)	test_minacc   0.73 (  0.69)	test_majacc   0.53 (  0.54)	Loss_d 0.662 (0.645)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.73 (  0.69)	test_majacc_d   0.53 (  0.54)	test_corr_d   0.21 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.13it/s]
Test: [  0/  1]	Loss 0.767 (0.767)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.54 (  0.54)	Loss_d 0.767 (0.767)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.767 (0.767)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.54 (  0.54)	Loss_d 0.767 (0.767)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.01 (  0.01)
Overall Timing[ 24/  1]	epoch_time 0.0403 (0.0419)	validation_time 0.0005 (0.0008)	train_time 0.0398 (0.0403)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5653000106215477, 0.6320000290870667)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.66it/s] 15%|#5        | 4/26 [00:00<00:01, 19.09it/s] 31%|###       | 8/26 [00:00<00:00, 24.69it/s] 42%|####2     | 11/26 [00:00<00:00, 22.84it/s] 54%|#####3    | 14/26 [00:00<00:00, 23.53it/s] 69%|######9   | 18/26 [00:00<00:00, 26.02it/s] 85%|########4 | 22/26 [00:00<00:00, 27.72it/s]100%|##########| 26/26 [00:01<00:00, 29.24it/s]100%|##########| 26/26 [00:01<00:00, 24.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: tensor(0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.56 (  0.56)	train_minacc   0.82 (  0.68)	train_majacc   0.50 (  0.53)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.43it/s] 27%|##6       | 7/26 [00:00<00:00, 34.27it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.27it/s] 50%|#####     | 13/26 [00:00<00:00, 39.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.91it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.91it/s] 96%|#########6| 25/26 [00:00<00:00, 47.49it/s]100%|##########| 26/26 [00:00<00:00, 39.10it/s]
Test: [   0/  26]	Loss 0.629 (0.629)	test_acc   0.62 (  0.62)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.629 (0.629)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.638 (0.628)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.54)	test_majacc   0.63 (  0.63)	Loss_d 0.638 (0.628)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.28 (  0.34)
Test: [  20/  26]	Loss 0.618 (0.627)	test_acc   0.61 (  0.62)	test_minacc   0.51 (  0.58)	test_majacc   0.63 (  0.62)	Loss_d 0.618 (0.627)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.51 (  0.58)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.36 (  0.33)
Test: [  26/  26]	Loss 0.642 (0.628)	test_acc   0.60 (  0.62)	test_minacc   0.51 (  0.58)	test_majacc   0.61 (  0.62)	Loss_d 0.642 (0.628)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.51 (  0.58)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.31 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.02it/s]
Test: [  0/  1]	Loss 0.797 (0.797)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.61 (  0.61)	Loss_d 0.797 (0.797)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.797 (0.797)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.61 (  0.61)	Loss_d 0.797 (0.797)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.07 (  0.07)
Overall Timing[ 25/  1]	epoch_time 0.0397 (0.0418)	validation_time 0.0004 (0.0008)	train_time 0.0392 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6168000075221062, 0.5470000505447388)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.69it/s] 19%|#9        | 5/26 [00:00<00:01, 18.55it/s] 35%|###4      | 9/26 [00:00<00:00, 23.91it/s] 50%|#####     | 13/26 [00:00<00:00, 26.79it/s] 65%|######5   | 17/26 [00:00<00:00, 28.55it/s] 81%|########  | 21/26 [00:00<00:00, 29.57it/s] 96%|#########6| 25/26 [00:00<00:00, 28.90it/s]100%|##########| 26/26 [00:01<00:00, 24.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: tensor(0.0004, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.60 (  0.56)	train_minacc   0.53 (  0.65)	train_majacc   0.61 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.95it/s] 23%|##3       | 6/26 [00:00<00:00, 28.94it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.94it/s] 42%|####2     | 11/26 [00:00<00:00, 37.12it/s] 65%|######5   | 17/26 [00:00<00:00, 40.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.12it/s] 88%|########8 | 23/26 [00:00<00:00, 45.39it/s]100%|##########| 26/26 [00:00<00:00, 36.96it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.61 (  0.61)	test_minacc   0.53 (  0.53)	test_majacc   0.62 (  0.62)	Loss_d 0.635 (0.635)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.640 (0.633)	test_acc   0.61 (  0.63)	test_minacc   0.52 (  0.54)	test_majacc   0.63 (  0.64)	Loss_d 0.640 (0.633)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.52 (  0.54)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.25 (  0.30)
Test: [  20/  26]	Loss 0.627 (0.633)	test_acc   0.64 (  0.62)	test_minacc   0.53 (  0.56)	test_majacc   0.66 (  0.64)	Loss_d 0.627 (0.633)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.53 (  0.56)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.32 (  0.30)
Test: [  26/  26]	Loss 0.650 (0.634)	test_acc   0.61 (  0.62)	test_minacc   0.47 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.650 (0.634)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.47 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.29 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.75it/s]
Test: [  0/  1]	Loss 0.812 (0.812)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.60 (  0.60)	Loss_d 0.812 (0.812)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.812 (0.812)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.60 (  0.60)	Loss_d 0.812 (0.812)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.04 (  0.04)
Overall Timing[ 26/  1]	epoch_time 0.0412 (0.0418)	validation_time 0.0028 (0.0009)	train_time 0.0384 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6249000113606453, 0.5450000166893005)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.72it/s] 15%|#5        | 4/26 [00:00<00:01, 14.42it/s] 31%|###       | 8/26 [00:00<00:00, 21.30it/s] 46%|####6     | 12/26 [00:00<00:00, 25.12it/s] 62%|######1   | 16/26 [00:00<00:00, 27.34it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.71it/s] 88%|########8 | 23/26 [00:00<00:00, 28.66it/s]100%|##########| 26/26 [00:01<00:00, 28.50it/s]100%|##########| 26/26 [00:01<00:00, 23.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.57 (  0.56)	train_minacc   0.62 (  0.62)	train_majacc   0.56 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.86it/s] 23%|##3       | 6/26 [00:00<00:00, 32.91it/s]                                               23%|##3       | 6/26 [00:00<00:00, 32.91it/s] 42%|####2     | 11/26 [00:00<00:00, 39.00it/s] 62%|######1   | 16/26 [00:00<00:00, 42.11it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.11it/s] 81%|########  | 21/26 [00:00<00:00, 41.38it/s]100%|##########| 26/26 [00:00<00:00, 37.38it/s]
Test: [   0/  26]	Loss 0.675 (0.675)	test_acc   0.58 (  0.58)	test_minacc   0.52 (  0.52)	test_majacc   0.59 (  0.59)	Loss_d 0.675 (0.675)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.684 (0.669)	test_acc   0.56 (  0.58)	test_minacc   0.48 (  0.46)	test_majacc   0.58 (  0.60)	Loss_d 0.684 (0.669)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.48 (  0.46)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.22 (  0.28)
Test: [  20/  26]	Loss 0.671 (0.670)	test_acc   0.59 (  0.58)	test_minacc   0.40 (  0.48)	test_majacc   0.61 (  0.60)	Loss_d 0.671 (0.670)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.40 (  0.48)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.28 (  0.27)
Test: [  26/  26]	Loss 0.678 (0.670)	test_acc   0.56 (  0.58)	test_minacc   0.38 (  0.48)	test_majacc   0.60 (  0.60)	Loss_d 0.678 (0.670)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.38 (  0.48)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.28 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.60it/s]
Test: [  0/  1]	Loss 0.743 (0.743)	test_acc   0.48 (  0.48)	test_minacc   0.46 (  0.46)	test_majacc   0.62 (  0.62)	Loss_d 0.743 (0.743)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.743 (0.743)	test_acc   0.48 (  0.48)	test_minacc   0.46 (  0.46)	test_majacc   0.62 (  0.62)	Loss_d 0.743 (0.743)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.08 (  0.08)
Overall Timing[ 27/  1]	epoch_time 0.0412 (0.0418)	validation_time 0.0004 (0.0009)	train_time 0.0408 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.581800011754036, 0.47600001096725464)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.03it/s] 15%|#5        | 4/26 [00:00<00:01, 18.85it/s] 27%|##6       | 7/26 [00:00<00:00, 22.77it/s] 42%|####2     | 11/26 [00:00<00:00, 26.17it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.14it/s] 65%|######5   | 17/26 [00:00<00:00, 27.11it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.47it/s] 88%|########8 | 23/26 [00:00<00:00, 27.62it/s]100%|##########| 26/26 [00:01<00:00, 24.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.004 (0.002)	train_nll   0.61 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.71 (  0.58)	train_minacc   0.49 (  0.54)	train_majacc   0.76 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.03it/s] 23%|##3       | 6/26 [00:00<00:00, 28.28it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.28it/s] 46%|####6     | 12/26 [00:00<00:00, 39.68it/s] 65%|######5   | 17/26 [00:00<00:00, 41.72it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.72it/s] 88%|########8 | 23/26 [00:00<00:00, 44.29it/s]100%|##########| 26/26 [00:00<00:00, 37.82it/s]
Test: [   0/  26]	Loss 0.595 (0.595)	test_acc   0.68 (  0.68)	test_minacc   0.45 (  0.45)	test_majacc   0.72 (  0.72)	Loss_d 0.595 (0.595)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.48 (  0.48)
Test: [  10/  26]	Loss 0.596 (0.591)	test_acc   0.64 (  0.69)	test_minacc   0.45 (  0.46)	test_majacc   0.68 (  0.74)	Loss_d 0.596 (0.591)	test_acc_d   0.64 (  0.69)	test_minacc_d   0.45 (  0.46)	test_majacc_d   0.68 (  0.74)	test_corr_d   0.46 (  0.50)
Test: [  20/  26]	Loss 0.573 (0.589)	test_acc   0.72 (  0.70)	test_minacc   0.49 (  0.48)	test_majacc   0.75 (  0.74)	Loss_d 0.573 (0.589)	test_acc_d   0.72 (  0.70)	test_minacc_d   0.49 (  0.48)	test_majacc_d   0.75 (  0.74)	test_corr_d   0.53 (  0.49)
Test: [  26/  26]	Loss 0.609 (0.590)	test_acc   0.73 (  0.70)	test_minacc   0.47 (  0.49)	test_majacc   0.79 (  0.74)	Loss_d 0.609 (0.590)	test_acc_d   0.73 (  0.70)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.79 (  0.74)	test_corr_d   0.51 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.56it/s]
Test: [  0/  1]	Loss 1.076 (1.076)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.73 (  0.73)	Loss_d 1.076 (1.076)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 1.076 (1.076)	test_acc   0.48 (  0.48)	test_minacc   0.45 (  0.45)	test_majacc   0.73 (  0.73)	Loss_d 1.076 (1.076)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.20 (  0.20)
Overall Timing[ 28/  1]	epoch_time 0.0402 (0.0417)	validation_time 0.0006 (0.0009)	train_time 0.0395 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.7029000325798989, 0.4820000231266022)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 15%|#5        | 4/26 [00:00<00:01, 16.57it/s] 31%|###       | 8/26 [00:00<00:00, 23.30it/s] 46%|####6     | 12/26 [00:00<00:00, 26.42it/s] 62%|######1   | 16/26 [00:00<00:00, 28.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.45it/s] 85%|########4 | 22/26 [00:00<00:00, 27.47it/s] 96%|#########6| 25/26 [00:00<00:00, 27.19it/s]100%|##########| 26/26 [00:01<00:00, 23.89it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.56 (  0.61)	train_minacc   0.47 (  0.60)	train_majacc   0.58 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.51it/s] 27%|##6       | 7/26 [00:00<00:00, 28.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.11it/s] 46%|####6     | 12/26 [00:00<00:00, 36.04it/s] 65%|######5   | 17/26 [00:00<00:00, 36.57it/s]                                                65%|######5   | 17/26 [00:00<00:00, 36.57it/s] 88%|########8 | 23/26 [00:00<00:00, 43.01it/s]100%|##########| 26/26 [00:00<00:00, 34.77it/s]
Test: [   0/  26]	Loss 0.649 (0.649)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.60 (  0.60)	Loss_d 0.649 (0.649)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.657 (0.647)	test_acc   0.58 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.57 (  0.60)	Loss_d 0.657 (0.647)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.57 (  0.60)	test_corr_d   0.21 (  0.26)
Test: [  20/  26]	Loss 0.647 (0.648)	test_acc   0.60 (  0.60)	test_minacc   0.64 (  0.64)	test_majacc   0.59 (  0.59)	Loss_d 0.647 (0.648)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.25 (  0.25)
Test: [  26/  26]	Loss 0.655 (0.648)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.63)	test_majacc   0.60 (  0.59)	Loss_d 0.655 (0.648)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.63)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.23 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.68it/s]
Test: [  0/  1]	Loss 0.712 (0.712)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.59 (  0.59)	Loss_d 0.712 (0.712)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.712 (0.712)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.59 (  0.59)	Loss_d 0.712 (0.712)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 29/  1]	epoch_time 0.0412 (0.0417)	validation_time 0.0004 (0.0008)	train_time 0.0407 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5954000101685524, 0.5649999976158142)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.73it/s] 15%|#5        | 4/26 [00:00<00:01, 20.44it/s] 27%|##6       | 7/26 [00:00<00:00, 22.91it/s] 38%|###8      | 10/26 [00:00<00:00, 25.15it/s] 50%|#####     | 13/26 [00:00<00:00, 25.79it/s] 62%|######1   | 16/26 [00:00<00:00, 25.52it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.42it/s] 88%|########8 | 23/26 [00:00<00:00, 27.76it/s]100%|##########| 26/26 [00:01<00:00, 24.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.003 (0.001)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.63 (  0.56)	train_minacc   0.56 (  0.59)	train_majacc   0.65 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.58it/s] 23%|##3       | 6/26 [00:00<00:00, 30.25it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.25it/s] 42%|####2     | 11/26 [00:00<00:00, 37.37it/s] 65%|######5   | 17/26 [00:00<00:00, 39.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.12it/s] 88%|########8 | 23/26 [00:00<00:00, 44.28it/s]100%|##########| 26/26 [00:00<00:00, 36.71it/s]
Test: [   0/  26]	Loss 0.642 (0.642)	test_acc   0.57 (  0.57)	test_minacc   0.50 (  0.50)	test_majacc   0.58 (  0.58)	Loss_d 0.642 (0.642)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.648 (0.643)	test_acc   0.56 (  0.56)	test_minacc   0.54 (  0.57)	test_majacc   0.56 (  0.56)	Loss_d 0.648 (0.643)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.54 (  0.57)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.31 (  0.34)
Test: [  20/  26]	Loss 0.631 (0.643)	test_acc   0.57 (  0.56)	test_minacc   0.66 (  0.55)	test_majacc   0.55 (  0.56)	Loss_d 0.631 (0.643)	test_acc_d   0.57 (  0.56)	test_minacc_d   0.66 (  0.55)	test_majacc_d   0.55 (  0.56)	test_corr_d   0.36 (  0.33)
Test: [  26/  26]	Loss 0.659 (0.644)	test_acc   0.58 (  0.56)	test_minacc   0.62 (  0.55)	test_majacc   0.58 (  0.56)	Loss_d 0.659 (0.644)	test_acc_d   0.58 (  0.56)	test_minacc_d   0.62 (  0.55)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.33 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.75it/s]
Test: [  0/  1]	Loss 0.870 (0.870)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.870 (0.870)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.870 (0.870)	test_acc   0.54 (  0.54)	test_minacc   0.55 (  0.55)	test_majacc   0.48 (  0.48)	Loss_d 0.870 (0.870)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.48 (  0.48)	test_corr_d   0.07 (  0.07)
Overall Timing[ 30/  1]	epoch_time 0.0411 (0.0417)	validation_time 0.0004 (0.0008)	train_time 0.0406 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5550000132322311, 0.5440000295639038)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.50it/s] 15%|#5        | 4/26 [00:00<00:01, 20.99it/s] 27%|##6       | 7/26 [00:00<00:00, 24.30it/s] 42%|####2     | 11/26 [00:00<00:00, 27.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.77it/s] 69%|######9   | 18/26 [00:00<00:00, 28.92it/s] 81%|########  | 21/26 [00:00<00:00, 29.04it/s] 96%|#########6| 25/26 [00:00<00:00, 29.58it/s]100%|##########| 26/26 [00:00<00:00, 26.10it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.56 (  0.56)	train_minacc   0.42 (  0.62)	train_majacc   0.59 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.92it/s] 31%|###       | 8/26 [00:00<00:00, 37.58it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.58it/s] 50%|#####     | 13/26 [00:00<00:00, 42.66it/s] 69%|######9   | 18/26 [00:00<00:00, 42.00it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.00it/s] 92%|#########2| 24/26 [00:00<00:00, 46.48it/s]100%|##########| 26/26 [00:00<00:00, 40.47it/s]
Test: [   0/  26]	Loss 0.637 (0.637)	test_acc   0.58 (  0.58)	test_minacc   0.63 (  0.63)	test_majacc   0.57 (  0.57)	Loss_d 0.637 (0.637)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.648 (0.637)	test_acc   0.58 (  0.60)	test_minacc   0.54 (  0.57)	test_majacc   0.59 (  0.60)	Loss_d 0.648 (0.637)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.54 (  0.57)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.22 (  0.28)
Test: [  20/  26]	Loss 0.633 (0.637)	test_acc   0.61 (  0.60)	test_minacc   0.62 (  0.61)	test_majacc   0.60 (  0.59)	Loss_d 0.633 (0.637)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.62 (  0.61)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.30 (  0.27)
Test: [  26/  26]	Loss 0.657 (0.639)	test_acc   0.58 (  0.60)	test_minacc   0.53 (  0.61)	test_majacc   0.59 (  0.59)	Loss_d 0.657 (0.639)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.53 (  0.61)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.26 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.84it/s]
Test: [  0/  1]	Loss 0.789 (0.789)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.62 (  0.62)	Loss_d 0.789 (0.789)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.789 (0.789)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.62 (  0.62)	Loss_d 0.789 (0.789)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.02 (  0.02)
Overall Timing[ 31/  1]	epoch_time 0.0476 (0.0419)	validation_time 0.0005 (0.0008)	train_time 0.0471 (0.0404)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5966000080108642, 0.5440000295639038)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.65it/s] 15%|#5        | 4/26 [00:00<00:01, 19.18it/s] 27%|##6       | 7/26 [00:00<00:00, 23.53it/s] 42%|####2     | 11/26 [00:00<00:00, 26.77it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.42it/s] 85%|########4 | 22/26 [00:00<00:00, 29.52it/s] 96%|#########6| 25/26 [00:00<00:00, 28.92it/s]100%|##########| 26/26 [00:01<00:00, 25.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.58 (  0.57)	train_minacc   0.56 (  0.62)	train_majacc   0.59 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.38it/s] 31%|###       | 8/26 [00:00<00:00, 39.91it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.91it/s] 50%|#####     | 13/26 [00:00<00:00, 41.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.39it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.39it/s] 96%|#########6| 25/26 [00:00<00:00, 46.79it/s]100%|##########| 26/26 [00:00<00:00, 40.54it/s]
Test: [   0/  26]	Loss 0.632 (0.632)	test_acc   0.59 (  0.59)	test_minacc   0.65 (  0.65)	test_majacc   0.59 (  0.59)	Loss_d 0.632 (0.632)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.640 (0.636)	test_acc   0.57 (  0.58)	test_minacc   0.72 (  0.68)	test_majacc   0.53 (  0.57)	Loss_d 0.640 (0.636)	test_acc_d   0.57 (  0.58)	test_minacc_d   0.72 (  0.68)	test_majacc_d   0.53 (  0.57)	test_corr_d   0.26 (  0.30)
Test: [  20/  26]	Loss 0.632 (0.636)	test_acc   0.56 (  0.58)	test_minacc   0.64 (  0.70)	test_majacc   0.55 (  0.56)	Loss_d 0.632 (0.636)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.64 (  0.70)	test_majacc_d   0.55 (  0.56)	test_corr_d   0.32 (  0.30)
Test: [  26/  26]	Loss 0.660 (0.638)	test_acc   0.60 (  0.58)	test_minacc   0.73 (  0.70)	test_majacc   0.58 (  0.56)	Loss_d 0.660 (0.638)	test_acc_d   0.60 (  0.58)	test_minacc_d   0.73 (  0.70)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.28 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.83it/s]
Test: [  0/  1]	Loss 0.825 (0.825)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.58 (  0.58)	Loss_d 0.825 (0.825)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.825 (0.825)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.58 (  0.58)	Loss_d 0.825 (0.825)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.04 (  0.04)
Overall Timing[ 32/  1]	epoch_time 0.0415 (0.0419)	validation_time 0.0007 (0.0008)	train_time 0.0408 (0.0404)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5783000090718269, 0.6470000147819519)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 15%|#5        | 4/26 [00:00<00:01, 16.60it/s] 27%|##6       | 7/26 [00:00<00:00, 21.37it/s] 42%|####2     | 11/26 [00:00<00:00, 25.17it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.35it/s] 88%|########8 | 23/26 [00:00<00:00, 29.09it/s]100%|##########| 26/26 [00:01<00:00, 24.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.83 (  7.83)	train_acc   0.58 (  0.54)	train_minacc   0.76 (  0.68)	train_majacc   0.54 (  0.52)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 25.59it/s] 31%|###       | 8/26 [00:00<00:00, 37.67it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.67it/s] 54%|#####3    | 14/26 [00:00<00:00, 44.52it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.50it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.50it/s] 96%|#########6| 25/26 [00:00<00:00, 46.96it/s]100%|##########| 26/26 [00:00<00:00, 41.13it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.55 (  0.55)	Loss_d 0.648 (0.648)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.656 (0.654)	test_acc   0.54 (  0.54)	test_minacc   0.61 (  0.59)	test_majacc   0.52 (  0.53)	Loss_d 0.656 (0.654)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.52 (  0.53)	test_corr_d   0.22 (  0.26)
Test: [  20/  26]	Loss 0.655 (0.654)	test_acc   0.53 (  0.54)	test_minacc   0.74 (  0.59)	test_majacc   0.50 (  0.53)	Loss_d 0.655 (0.654)	test_acc_d   0.53 (  0.54)	test_minacc_d   0.74 (  0.59)	test_majacc_d   0.50 (  0.53)	test_corr_d   0.25 (  0.25)
Test: [  26/  26]	Loss 0.659 (0.654)	test_acc   0.59 (  0.54)	test_minacc   0.69 (  0.59)	test_majacc   0.57 (  0.53)	Loss_d 0.659 (0.654)	test_acc_d   0.59 (  0.54)	test_minacc_d   0.69 (  0.59)	test_majacc_d   0.57 (  0.53)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.05it/s]
Test: [  0/  1]	Loss 0.772 (0.772)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.58 (  0.58)	Loss_d 0.772 (0.772)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.772 (0.772)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.58 (  0.58)	Loss_d 0.772 (0.772)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.03 (  0.03)
Overall Timing[ 33/  1]	epoch_time 0.0389 (0.0418)	validation_time 0.0004 (0.0008)	train_time 0.0385 (0.0404)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5404000128209591, 0.5870000123977661)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 15%|#5        | 4/26 [00:00<00:01, 17.14it/s] 27%|##6       | 7/26 [00:00<00:00, 21.91it/s] 42%|####2     | 11/26 [00:00<00:00, 25.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.46it/s] 88%|########8 | 23/26 [00:00<00:00, 29.16it/s]100%|##########| 26/26 [00:01<00:00, 24.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.83)	train_acc   0.60 (  0.55)	train_minacc   0.58 (  0.60)	train_majacc   0.60 (  0.54)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.33it/s] 27%|##6       | 7/26 [00:00<00:00, 34.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.83it/s] 50%|#####     | 13/26 [00:00<00:00, 41.44it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.94it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.94it/s] 96%|#########6| 25/26 [00:00<00:00, 47.35it/s]100%|##########| 26/26 [00:00<00:00, 39.67it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.53 (  0.53)	test_minacc   0.68 (  0.68)	test_majacc   0.50 (  0.50)	Loss_d 0.659 (0.659)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.665 (0.660)	test_acc   0.52 (  0.53)	test_minacc   0.70 (  0.65)	test_majacc   0.48 (  0.50)	Loss_d 0.665 (0.660)	test_acc_d   0.52 (  0.53)	test_minacc_d   0.70 (  0.65)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.18 (  0.22)
Test: [  20/  26]	Loss 0.663 (0.660)	test_acc   0.48 (  0.52)	test_minacc   0.60 (  0.66)	test_majacc   0.46 (  0.49)	Loss_d 0.663 (0.660)	test_acc_d   0.48 (  0.52)	test_minacc_d   0.60 (  0.66)	test_majacc_d   0.46 (  0.49)	test_corr_d   0.21 (  0.22)
Test: [  26/  26]	Loss 0.661 (0.661)	test_acc   0.56 (  0.52)	test_minacc   0.76 (  0.67)	test_majacc   0.51 (  0.49)	Loss_d 0.661 (0.661)	test_acc_d   0.56 (  0.52)	test_minacc_d   0.76 (  0.67)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.22 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.39it/s]
Test: [  0/  1]	Loss 0.733 (0.733)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.55 (  0.55)	Loss_d 0.733 (0.733)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.11 (  0.11)
Test: [  1/  1]	Loss 0.733 (0.733)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.55 (  0.55)	Loss_d 0.733 (0.733)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.11 (  0.11)
Overall Timing[ 34/  1]	epoch_time 0.0376 (0.0417)	validation_time 0.0005 (0.0008)	train_time 0.0371 (0.0403)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5205000106692315, 0.5770000219345093)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.38it/s] 15%|#5        | 4/26 [00:00<00:01, 15.85it/s] 27%|##6       | 7/26 [00:00<00:00, 21.15it/s] 42%|####2     | 11/26 [00:00<00:00, 25.19it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.15it/s] 88%|########8 | 23/26 [00:00<00:00, 29.04it/s]100%|##########| 26/26 [00:01<00:00, 24.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.53 (  0.50)	train_minacc   0.60 (  0.65)	train_majacc   0.51 (  0.48)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.44it/s] 27%|##6       | 7/26 [00:00<00:00, 35.66it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.66it/s] 50%|#####     | 13/26 [00:00<00:00, 41.91it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.08it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.08it/s] 96%|#########6| 25/26 [00:00<00:00, 47.68it/s]100%|##########| 26/26 [00:00<00:00, 40.66it/s]
Test: [   0/  26]	Loss 0.632 (0.632)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.62 (  0.62)	Loss_d 0.632 (0.632)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.640 (0.637)	test_acc   0.59 (  0.61)	test_minacc   0.59 (  0.57)	test_majacc   0.59 (  0.62)	Loss_d 0.640 (0.637)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.59 (  0.57)	test_majacc_d   0.59 (  0.62)	test_corr_d   0.26 (  0.30)
Test: [  20/  26]	Loss 0.630 (0.636)	test_acc   0.59 (  0.61)	test_minacc   0.51 (  0.60)	test_majacc   0.60 (  0.61)	Loss_d 0.630 (0.636)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.51 (  0.60)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.32 (  0.30)
Test: [  26/  26]	Loss 0.663 (0.638)	test_acc   0.57 (  0.61)	test_minacc   0.49 (  0.60)	test_majacc   0.59 (  0.61)	Loss_d 0.663 (0.638)	test_acc_d   0.57 (  0.61)	test_minacc_d   0.49 (  0.60)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.29 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.65it/s]
Test: [  0/  1]	Loss 0.835 (0.835)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.60 (  0.60)	Loss_d 0.835 (0.835)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.835 (0.835)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.60 (  0.60)	Loss_d 0.835 (0.835)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.08 (  0.08)
Overall Timing[ 35/  1]	epoch_time 0.0386 (0.0416)	validation_time 0.0004 (0.0008)	train_time 0.0381 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6090000115036964, 0.5670000314712524)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 19%|#9        | 5/26 [00:00<00:00, 21.27it/s] 31%|###       | 8/26 [00:00<00:00, 24.26it/s] 42%|####2     | 11/26 [00:00<00:00, 25.87it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.79it/s] 65%|######5   | 17/26 [00:00<00:00, 27.60it/s] 81%|########  | 21/26 [00:00<00:00, 28.34it/s] 96%|#########6| 25/26 [00:00<00:00, 29.01it/s]100%|##########| 26/26 [00:01<00:00, 25.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.48 (  0.55)	train_minacc   0.76 (  0.53)	train_majacc   0.42 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.12it/s] 27%|##6       | 7/26 [00:00<00:00, 32.77it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.77it/s] 50%|#####     | 13/26 [00:00<00:00, 40.61it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.33it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.33it/s] 96%|#########6| 25/26 [00:00<00:00, 47.63it/s]100%|##########| 26/26 [00:00<00:00, 39.11it/s]
Test: [   0/  26]	Loss 0.642 (0.642)	test_acc   0.60 (  0.60)	test_minacc   0.48 (  0.48)	test_majacc   0.62 (  0.62)	Loss_d 0.642 (0.642)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.648 (0.640)	test_acc   0.60 (  0.61)	test_minacc   0.48 (  0.46)	test_majacc   0.62 (  0.64)	Loss_d 0.648 (0.640)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.48 (  0.46)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.26 (  0.31)
Test: [  20/  26]	Loss 0.638 (0.640)	test_acc   0.61 (  0.61)	test_minacc   0.38 (  0.48)	test_majacc   0.64 (  0.64)	Loss_d 0.638 (0.640)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.38 (  0.48)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.31 (  0.30)
Test: [  26/  26]	Loss 0.655 (0.640)	test_acc   0.58 (  0.61)	test_minacc   0.42 (  0.48)	test_majacc   0.62 (  0.64)	Loss_d 0.655 (0.640)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.42 (  0.48)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.27 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.08it/s]
Test: [  0/  1]	Loss 0.758 (0.758)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.64 (  0.64)	Loss_d 0.758 (0.758)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.758 (0.758)	test_acc   0.48 (  0.48)	test_minacc   0.47 (  0.47)	test_majacc   0.64 (  0.64)	Loss_d 0.758 (0.758)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.10 (  0.10)
Overall Timing[ 36/  1]	epoch_time 0.0384 (0.0415)	validation_time 0.0005 (0.0008)	train_time 0.0379 (0.0401)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6133000109195709, 0.4830000102519989)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 15%|#5        | 4/26 [00:00<00:01, 17.37it/s] 27%|##6       | 7/26 [00:00<00:00, 22.13it/s] 42%|####2     | 11/26 [00:00<00:00, 25.86it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.95it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.20it/s] 88%|########8 | 23/26 [00:00<00:00, 29.51it/s]100%|##########| 26/26 [00:01<00:00, 25.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.002 (0.001)	train_nll   0.68 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.52 (  0.54)	train_minacc   0.60 (  0.58)	train_majacc   0.51 (  0.53)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.86it/s] 31%|###       | 8/26 [00:00<00:00, 40.40it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.40it/s] 50%|#####     | 13/26 [00:00<00:00, 44.34it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.17it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.17it/s] 96%|#########6| 25/26 [00:00<00:00, 49.41it/s]100%|##########| 26/26 [00:00<00:00, 41.59it/s]
Test: [   0/  26]	Loss 0.634 (0.634)	test_acc   0.61 (  0.61)	test_minacc   0.53 (  0.53)	test_majacc   0.62 (  0.62)	Loss_d 0.634 (0.634)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.646 (0.638)	test_acc   0.59 (  0.61)	test_minacc   0.52 (  0.55)	test_majacc   0.60 (  0.62)	Loss_d 0.646 (0.638)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.52 (  0.55)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.26 (  0.30)
Test: [  20/  26]	Loss 0.633 (0.638)	test_acc   0.58 (  0.61)	test_minacc   0.51 (  0.56)	test_majacc   0.59 (  0.61)	Loss_d 0.633 (0.638)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.51 (  0.56)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.32 (  0.30)
Test: [  26/  26]	Loss 0.662 (0.639)	test_acc   0.60 (  0.61)	test_minacc   0.56 (  0.56)	test_majacc   0.61 (  0.61)	Loss_d 0.662 (0.639)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.29 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.99it/s]
Test: [  0/  1]	Loss 0.794 (0.794)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.61 (  0.61)	Loss_d 0.794 (0.794)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.10 (  0.10)
Test: [  1/  1]	Loss 0.794 (0.794)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.61 (  0.61)	Loss_d 0.794 (0.794)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.10 (  0.10)
Overall Timing[ 37/  1]	epoch_time 0.0392 (0.0414)	validation_time 0.0004 (0.0008)	train_time 0.0388 (0.0401)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6064000132083893, 0.5400000214576721)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.75it/s] 15%|#5        | 4/26 [00:00<00:01, 17.92it/s] 27%|##6       | 7/26 [00:00<00:00, 22.79it/s] 42%|####2     | 11/26 [00:00<00:00, 26.33it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.04it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.14it/s] 88%|########8 | 23/26 [00:00<00:00, 29.66it/s]100%|##########| 26/26 [00:01<00:00, 25.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.001 (0.001)	train_nll   0.68 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.38 (  0.56)	train_minacc   0.84 (  0.62)	train_majacc   0.28 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 27%|##6       | 7/26 [00:00<00:00, 31.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.34it/s] 50%|#####     | 13/26 [00:00<00:00, 38.26it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.36it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.36it/s] 96%|#########6| 25/26 [00:00<00:00, 46.33it/s]100%|##########| 26/26 [00:00<00:00, 38.17it/s]
Test: [   0/  26]	Loss 0.651 (0.651)	test_acc   0.53 (  0.53)	test_minacc   0.63 (  0.63)	test_majacc   0.51 (  0.51)	Loss_d 0.651 (0.651)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.653 (0.653)	test_acc   0.53 (  0.53)	test_minacc   0.68 (  0.62)	test_majacc   0.50 (  0.52)	Loss_d 0.653 (0.653)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.68 (  0.62)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.22 (  0.25)
Test: [  20/  26]	Loss 0.648 (0.652)	test_acc   0.51 (  0.53)	test_minacc   0.57 (  0.61)	test_majacc   0.50 (  0.52)	Loss_d 0.648 (0.652)	test_acc_d   0.51 (  0.53)	test_minacc_d   0.57 (  0.61)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.27 (  0.25)
Test: [  26/  26]	Loss 0.671 (0.653)	test_acc   0.51 (  0.53)	test_minacc   0.58 (  0.61)	test_majacc   0.50 (  0.52)	Loss_d 0.671 (0.653)	test_acc_d   0.51 (  0.53)	test_minacc_d   0.58 (  0.61)	test_majacc_d   0.50 (  0.52)	test_corr_d   0.23 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.58it/s]
Test: [  0/  1]	Loss 0.832 (0.832)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.43 (  0.43)	Loss_d 0.832 (0.832)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.832 (0.832)	test_acc   0.59 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.43 (  0.43)	Loss_d 0.832 (0.832)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.43 (  0.43)	test_corr_d   0.08 (  0.08)
Overall Timing[ 38/  1]	epoch_time 0.0387 (0.0414)	validation_time 0.0004 (0.0008)	train_time 0.0383 (0.0401)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5325000103116035, 0.5890000462532043)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.54it/s] 15%|#5        | 4/26 [00:00<00:01, 20.16it/s] 27%|##6       | 7/26 [00:00<00:00, 24.33it/s] 42%|####2     | 11/26 [00:00<00:00, 27.49it/s] 58%|#####7    | 15/26 [00:00<00:00, 29.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.84it/s] 88%|########8 | 23/26 [00:00<00:00, 30.49it/s]100%|##########| 26/26 [00:00<00:00, 26.21it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.001 (0.001)	train_nll   0.68 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.51 (  0.54)	train_minacc   0.71 (  0.62)	train_majacc   0.46 (  0.52)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.36it/s] 23%|##3       | 6/26 [00:00<00:00, 30.64it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.64it/s] 42%|####2     | 11/26 [00:00<00:00, 34.60it/s] 62%|######1   | 16/26 [00:00<00:00, 40.04it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.04it/s] 85%|########4 | 22/26 [00:00<00:00, 45.08it/s]100%|##########| 26/26 [00:00<00:00, 37.62it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.61 (  0.61)	test_minacc   0.63 (  0.63)	test_majacc   0.60 (  0.60)	Loss_d 0.640 (0.640)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.649 (0.642)	test_acc   0.58 (  0.60)	test_minacc   0.59 (  0.60)	test_majacc   0.58 (  0.60)	Loss_d 0.649 (0.642)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.59 (  0.60)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.24 (  0.29)
Test: [  20/  26]	Loss 0.635 (0.641)	test_acc   0.59 (  0.60)	test_minacc   0.53 (  0.63)	test_majacc   0.60 (  0.59)	Loss_d 0.635 (0.641)	test_acc_d   0.59 (  0.60)	test_minacc_d   0.53 (  0.63)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.30 (  0.28)
Test: [  26/  26]	Loss 0.656 (0.642)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.63)	test_majacc   0.60 (  0.59)	Loss_d 0.656 (0.642)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.63)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.28 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.65it/s]
Test: [  0/  1]	Loss 0.805 (0.805)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.57 (  0.57)	Loss_d 0.805 (0.805)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.805 (0.805)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.57 (  0.57)	Loss_d 0.805 (0.805)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.07 (  0.07)
Overall Timing[ 39/  1]	epoch_time 0.0481 (0.0415)	validation_time 0.0005 (0.0007)	train_time 0.0476 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5980000086426734, 0.5680000185966492)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 15%|#5        | 4/26 [00:00<00:01, 17.84it/s] 27%|##6       | 7/26 [00:00<00:00, 21.84it/s] 38%|###8      | 10/26 [00:00<00:00, 24.48it/s] 50%|#####     | 13/26 [00:00<00:00, 24.79it/s] 65%|######5   | 17/26 [00:00<00:00, 26.94it/s] 81%|########  | 21/26 [00:00<00:00, 28.03it/s] 92%|#########2| 24/26 [00:00<00:00, 28.12it/s]100%|##########| 26/26 [00:01<00:00, 24.20it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.002 (0.001)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.60 (  0.57)	train_minacc   0.47 (  0.55)	train_majacc   0.63 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.84it/s] 31%|###       | 8/26 [00:00<00:00, 39.50it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.50it/s] 50%|#####     | 13/26 [00:00<00:00, 40.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.57it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.57it/s] 92%|#########2| 24/26 [00:00<00:00, 47.69it/s]100%|##########| 26/26 [00:00<00:00, 40.78it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.60 (  0.60)	test_minacc   0.56 (  0.56)	test_majacc   0.61 (  0.61)	Loss_d 0.639 (0.639)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.648 (0.636)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.57)	test_majacc   0.62 (  0.62)	Loss_d 0.648 (0.636)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.23 (  0.31)
Test: [  20/  26]	Loss 0.633 (0.635)	test_acc   0.61 (  0.61)	test_minacc   0.51 (  0.59)	test_majacc   0.62 (  0.62)	Loss_d 0.633 (0.635)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.51 (  0.59)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.31 (  0.30)
Test: [  26/  26]	Loss 0.646 (0.635)	test_acc   0.58 (  0.61)	test_minacc   0.51 (  0.59)	test_majacc   0.59 (  0.62)	Loss_d 0.646 (0.635)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.51 (  0.59)	test_majacc_d   0.59 (  0.62)	test_corr_d   0.30 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.80it/s]
Test: [  0/  1]	Loss 0.758 (0.758)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.60 (  0.60)	Loss_d 0.758 (0.758)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.758 (0.758)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.60 (  0.60)	Loss_d 0.758 (0.758)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.02 (  0.02)
Overall Timing[ 40/  1]	epoch_time 0.0393 (0.0415)	validation_time 0.0004 (0.0007)	train_time 0.0389 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6138000116348267, 0.593000054359436)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.32it/s] 15%|#5        | 4/26 [00:00<00:01, 18.33it/s] 27%|##6       | 7/26 [00:00<00:00, 23.08it/s] 42%|####2     | 11/26 [00:00<00:00, 25.95it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.88it/s] 65%|######5   | 17/26 [00:00<00:00, 26.91it/s] 81%|########  | 21/26 [00:00<00:00, 28.32it/s] 92%|#########2| 24/26 [00:00<00:00, 28.36it/s]100%|##########| 26/26 [00:01<00:00, 24.58it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.002 (0.001)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.58 (  0.56)	train_minacc   0.42 (  0.57)	train_majacc   0.62 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.40it/s] 27%|##6       | 7/26 [00:00<00:00, 29.81it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.81it/s] 50%|#####     | 13/26 [00:00<00:00, 37.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.70it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.70it/s] 96%|#########6| 25/26 [00:00<00:00, 44.74it/s]100%|##########| 26/26 [00:00<00:00, 36.56it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.61 (  0.61)	test_minacc   0.53 (  0.53)	test_majacc   0.62 (  0.62)	Loss_d 0.640 (0.640)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.649 (0.643)	test_acc   0.58 (  0.61)	test_minacc   0.52 (  0.54)	test_majacc   0.59 (  0.62)	Loss_d 0.649 (0.643)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.52 (  0.54)	test_majacc_d   0.59 (  0.62)	test_corr_d   0.24 (  0.29)
Test: [  20/  26]	Loss 0.634 (0.642)	test_acc   0.61 (  0.61)	test_minacc   0.45 (  0.56)	test_majacc   0.63 (  0.62)	Loss_d 0.634 (0.642)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.45 (  0.56)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.31 (  0.28)
Test: [  26/  26]	Loss 0.663 (0.644)	test_acc   0.58 (  0.61)	test_minacc   0.47 (  0.56)	test_majacc   0.60 (  0.62)	Loss_d 0.663 (0.644)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.47 (  0.56)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.28 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.71it/s]
Test: [  0/  1]	Loss 0.850 (0.850)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.64 (  0.64)	Loss_d 0.850 (0.850)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.850 (0.850)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.64 (  0.64)	Loss_d 0.850 (0.850)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.05 (  0.05)
Overall Timing[ 41/  1]	epoch_time 0.0402 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0398 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6097000130414962, 0.5600000023841858)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.24it/s] 15%|#5        | 4/26 [00:00<00:01, 20.92it/s] 31%|###       | 8/26 [00:00<00:00, 26.19it/s] 46%|####6     | 12/26 [00:00<00:00, 28.35it/s] 62%|######1   | 16/26 [00:00<00:00, 29.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.53it/s] 88%|########8 | 23/26 [00:00<00:00, 29.78it/s]100%|##########| 26/26 [00:00<00:00, 26.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.002 (0.001)	train_nll   0.64 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.82)	train_acc   0.58 (  0.57)	train_minacc   0.42 (  0.53)	train_majacc   0.61 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.60it/s] 23%|##3       | 6/26 [00:00<00:00, 29.31it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.31it/s] 42%|####2     | 11/26 [00:00<00:00, 37.01it/s] 65%|######5   | 17/26 [00:00<00:00, 42.79it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.79it/s] 85%|########4 | 22/26 [00:00<00:00, 44.99it/s]100%|##########| 26/26 [00:00<00:00, 38.24it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.62 (  0.62)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.630 (0.630)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.634 (0.624)	test_acc   0.62 (  0.62)	test_minacc   0.49 (  0.48)	test_majacc   0.65 (  0.65)	Loss_d 0.634 (0.624)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.49 (  0.48)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.29 (  0.35)
Test: [  20/  26]	Loss 0.617 (0.623)	test_acc   0.62 (  0.63)	test_minacc   0.40 (  0.51)	test_majacc   0.65 (  0.65)	Loss_d 0.617 (0.623)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.40 (  0.51)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.37 (  0.34)
Test: [  26/  26]	Loss 0.641 (0.624)	test_acc   0.59 (  0.63)	test_minacc   0.42 (  0.51)	test_majacc   0.63 (  0.65)	Loss_d 0.641 (0.624)	test_acc_d   0.59 (  0.63)	test_minacc_d   0.42 (  0.51)	test_majacc_d   0.63 (  0.65)	test_corr_d   0.35 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.05it/s]
Test: [  0/  1]	Loss 0.855 (0.855)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.63 (  0.63)	Loss_d 0.855 (0.855)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.855 (0.855)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.50)	test_majacc   0.63 (  0.63)	Loss_d 0.855 (0.855)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.06 (  0.06)
Overall Timing[ 42/  1]	epoch_time 0.0404 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0400 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6272000125050545, 0.51500004529953)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.11it/s] 15%|#5        | 4/26 [00:00<00:01, 16.55it/s] 27%|##6       | 7/26 [00:00<00:00, 21.56it/s] 38%|###8      | 10/26 [00:00<00:00, 24.06it/s] 50%|#####     | 13/26 [00:00<00:00, 25.89it/s] 62%|######1   | 16/26 [00:00<00:00, 26.92it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.73it/s] 88%|########8 | 23/26 [00:00<00:00, 28.76it/s]100%|##########| 26/26 [00:01<00:00, 24.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1118 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1119 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1120 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1121 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1122 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1123 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1124 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1125 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1126 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1127 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1128 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1129 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1130 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1131 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1132 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1133 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1134 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1135 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1136 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1137 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1138 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1139 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1140 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1141 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1142 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1143 364.00000000000006
constrain score by whole: 0
Epoch: [43][  26/  26]	Loss 0.001 (0.002)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.61 (  0.60)	train_minacc   0.69 (  0.55)	train_majacc   0.59 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.75it/s] 27%|##6       | 7/26 [00:00<00:00, 31.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.11it/s] 50%|#####     | 13/26 [00:00<00:00, 38.66it/s] 69%|######9   | 18/26 [00:00<00:00, 41.33it/s]                                                69%|######9   | 18/26 [00:00<00:00, 41.33it/s] 92%|#########2| 24/26 [00:00<00:00, 45.80it/s]100%|##########| 26/26 [00:00<00:00, 37.70it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.57 (  0.57)	test_minacc   0.58 (  0.58)	test_majacc   0.57 (  0.57)	Loss_d 0.640 (0.640)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.635 (0.636)	test_acc   0.58 (  0.59)	test_minacc   0.67 (  0.64)	test_majacc   0.57 (  0.58)	Loss_d 0.635 (0.636)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.67 (  0.64)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.23 (  0.29)
Test: [  20/  26]	Loss 0.629 (0.636)	test_acc   0.57 (  0.59)	test_minacc   0.60 (  0.66)	test_majacc   0.57 (  0.58)	Loss_d 0.629 (0.636)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.60 (  0.66)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.30 (  0.28)
Test: [  26/  26]	Loss 0.649 (0.637)	test_acc   0.60 (  0.59)	test_minacc   0.69 (  0.67)	test_majacc   0.58 (  0.58)	Loss_d 0.649 (0.637)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.69 (  0.67)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.27 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.79it/s]
Test: [  0/  1]	Loss 0.854 (0.854)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.54 (  0.54)	Loss_d 0.854 (0.854)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.854 (0.854)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.54 (  0.54)	Loss_d 0.854 (0.854)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 43/  1]	epoch_time 0.0394 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0389 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.592000008046627, 0.6230000257492065)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.72it/s] 15%|#5        | 4/26 [00:00<00:01, 14.88it/s] 27%|##6       | 7/26 [00:00<00:00, 20.23it/s] 38%|###8      | 10/26 [00:00<00:00, 23.23it/s] 50%|#####     | 13/26 [00:00<00:00, 25.21it/s] 65%|######5   | 17/26 [00:00<00:00, 27.16it/s] 81%|########  | 21/26 [00:00<00:00, 28.39it/s] 96%|#########6| 25/26 [00:01<00:00, 28.94it/s]100%|##########| 26/26 [00:01<00:00, 23.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1144 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1145 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1146 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1147 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1148 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1149 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1150 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1151 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1152 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1153 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1154 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1155 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1156 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1157 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1158 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1159 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1160 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1161 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1162 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1163 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1164 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1165 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1166 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1167 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1168 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1169 364.00000000000006
constrain score by whole: 0
Epoch: [44][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.54 (  0.57)	train_minacc   0.69 (  0.61)	train_majacc   0.51 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.81it/s] 27%|##6       | 7/26 [00:00<00:00, 31.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.79it/s] 50%|#####     | 13/26 [00:00<00:00, 39.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.84it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.84it/s] 92%|#########2| 24/26 [00:00<00:00, 45.17it/s]100%|##########| 26/26 [00:00<00:00, 37.69it/s]
Test: [   0/  26]	Loss 0.689 (0.689)	test_acc   0.47 (  0.47)	test_minacc   0.55 (  0.55)	test_majacc   0.45 (  0.45)	Loss_d 0.689 (0.689)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.06 (  0.06)
Test: [  10/  26]	Loss 0.689 (0.684)	test_acc   0.47 (  0.49)	test_minacc   0.68 (  0.69)	test_majacc   0.43 (  0.45)	Loss_d 0.689 (0.684)	test_acc_d   0.47 (  0.49)	test_minacc_d   0.68 (  0.69)	test_majacc_d   0.43 (  0.45)	test_corr_d   0.02 (  0.06)
Test: [  20/  26]	Loss 0.694 (0.685)	test_acc   0.47 (  0.48)	test_minacc   0.83 (  0.69)	test_majacc   0.42 (  0.44)	Loss_d 0.694 (0.685)	test_acc_d   0.47 (  0.48)	test_minacc_d   0.83 (  0.69)	test_majacc_d   0.42 (  0.44)	test_corr_d  -0.00 (  0.05)
Test: [  26/  26]	Loss 0.679 (0.685)	test_acc   0.52 (  0.48)	test_minacc   0.69 (  0.69)	test_majacc   0.48 (  0.44)	Loss_d 0.679 (0.685)	test_acc_d   0.52 (  0.48)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.48 (  0.44)	test_corr_d   0.07 (  0.05)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.43it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.65 (  0.65)	test_minacc   0.67 (  0.67)	test_majacc   0.51 (  0.51)	Loss_d 0.690 (0.690)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.65 (  0.65)	test_minacc   0.67 (  0.67)	test_majacc   0.51 (  0.51)	Loss_d 0.690 (0.690)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 44/  1]	epoch_time 0.0398 (0.0413)	validation_time 0.0005 (0.0007)	train_time 0.0393 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.4777000081837177, 0.6530000567436218)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.38it/s] 15%|#5        | 4/26 [00:00<00:01, 18.99it/s] 27%|##6       | 7/26 [00:00<00:00, 22.61it/s] 38%|###8      | 10/26 [00:00<00:00, 25.16it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.32it/s] 65%|######5   | 17/26 [00:00<00:00, 28.04it/s] 81%|########  | 21/26 [00:00<00:00, 28.99it/s] 96%|#########6| 25/26 [00:00<00:00, 29.24it/s]100%|##########| 26/26 [00:01<00:00, 25.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1170 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1171 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1172 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1173 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1174 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1175 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1176 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1177 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1178 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1179 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1180 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1181 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1182 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1183 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1184 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1185 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1186 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1187 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1188 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1189 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1190 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1191 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1192 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1193 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1194 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1195 364.00000000000006
constrain score by whole: 0
Epoch: [45][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.51 (  0.52)	train_minacc   0.58 (  0.66)	train_majacc   0.49 (  0.50)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 27.26it/s] 31%|###       | 8/26 [00:00<00:00, 35.80it/s]                                               31%|###       | 8/26 [00:00<00:00, 35.80it/s] 54%|#####3    | 14/26 [00:00<00:00, 43.65it/s] 77%|#######6  | 20/26 [00:00<00:00, 45.93it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 45.93it/s]100%|##########| 26/26 [00:00<00:00, 49.88it/s]100%|##########| 26/26 [00:00<00:00, 41.95it/s]
Test: [   0/  26]	Loss 0.668 (0.668)	test_acc   0.48 (  0.48)	test_minacc   0.63 (  0.63)	test_majacc   0.45 (  0.45)	Loss_d 0.668 (0.668)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.45 (  0.45)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.667 (0.670)	test_acc   0.50 (  0.49)	test_minacc   0.61 (  0.63)	test_majacc   0.48 (  0.46)	Loss_d 0.667 (0.670)	test_acc_d   0.50 (  0.49)	test_minacc_d   0.61 (  0.63)	test_majacc_d   0.48 (  0.46)	test_corr_d   0.14 (  0.16)
Test: [  20/  26]	Loss 0.667 (0.670)	test_acc   0.46 (  0.49)	test_minacc   0.66 (  0.62)	test_majacc   0.43 (  0.46)	Loss_d 0.667 (0.670)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.66 (  0.62)	test_majacc_d   0.43 (  0.46)	test_corr_d   0.18 (  0.16)
Test: [  26/  26]	Loss 0.679 (0.671)	test_acc   0.49 (  0.49)	test_minacc   0.58 (  0.62)	test_majacc   0.47 (  0.47)	Loss_d 0.679 (0.671)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.58 (  0.62)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.18 (  0.16)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.63it/s]
Test: [  0/  1]	Loss 0.740 (0.740)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.45 (  0.45)	Loss_d 0.740 (0.740)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.45 (  0.45)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.740 (0.740)	test_acc   0.60 (  0.60)	test_minacc   0.62 (  0.62)	test_majacc   0.45 (  0.45)	Loss_d 0.740 (0.740)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.45 (  0.45)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 45/  1]	epoch_time 0.0451 (0.0414)	validation_time 0.0036 (0.0008)	train_time 0.0414 (0.0402)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.4896000119447708, 0.6030000448226929)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.44it/s] 15%|#5        | 4/26 [00:00<00:01, 15.80it/s] 31%|###       | 8/26 [00:00<00:00, 22.48it/s] 46%|####6     | 12/26 [00:00<00:00, 26.07it/s] 62%|######1   | 16/26 [00:00<00:00, 27.71it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.91it/s] 92%|#########2| 24/26 [00:00<00:00, 29.66it/s]100%|##########| 26/26 [00:01<00:00, 24.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1196 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1197 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1198 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1199 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1200 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1201 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1202 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1203 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1204 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1205 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1206 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1207 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1208 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1209 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1210 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1211 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1212 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1213 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1214 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1215 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1216 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1217 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1218 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1219 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1220 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1221 364.00000000000006
constrain score by whole: 0
Epoch: [46][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.52 (  0.54)	train_minacc   0.73 (  0.59)	train_majacc   0.47 (  0.53)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.15it/s] 27%|##6       | 7/26 [00:00<00:00, 29.97it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.97it/s] 46%|####6     | 12/26 [00:00<00:00, 36.94it/s] 65%|######5   | 17/26 [00:00<00:00, 39.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.34it/s] 88%|########8 | 23/26 [00:00<00:00, 45.28it/s]100%|##########| 26/26 [00:00<00:00, 36.42it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.56 (  0.56)	Loss_d 0.657 (0.657)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.656 (0.654)	test_acc   0.58 (  0.57)	test_minacc   0.58 (  0.58)	test_majacc   0.58 (  0.57)	Loss_d 0.656 (0.654)	test_acc_d   0.58 (  0.57)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.58 (  0.57)	test_corr_d   0.20 (  0.23)
Test: [  20/  26]	Loss 0.654 (0.655)	test_acc   0.58 (  0.57)	test_minacc   0.60 (  0.61)	test_majacc   0.58 (  0.56)	Loss_d 0.654 (0.655)	test_acc_d   0.58 (  0.57)	test_minacc_d   0.60 (  0.61)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.24 (  0.22)
Test: [  26/  26]	Loss 0.667 (0.656)	test_acc   0.54 (  0.57)	test_minacc   0.49 (  0.61)	test_majacc   0.55 (  0.56)	Loss_d 0.667 (0.656)	test_acc_d   0.54 (  0.57)	test_minacc_d   0.49 (  0.61)	test_majacc_d   0.55 (  0.56)	test_corr_d   0.21 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.37it/s]
Test: [  0/  1]	Loss 0.745 (0.745)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.56 (  0.56)	Loss_d 0.745 (0.745)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.745 (0.745)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.56 (  0.56)	Loss_d 0.745 (0.745)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.03 (  0.03)
Overall Timing[ 46/  1]	epoch_time 0.0376 (0.0413)	validation_time 0.0004 (0.0008)	train_time 0.0372 (0.0401)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5678000137805939, 0.5590000152587891)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.76it/s] 15%|#5        | 4/26 [00:00<00:01, 14.64it/s] 31%|###       | 8/26 [00:00<00:00, 21.40it/s] 46%|####6     | 12/26 [00:00<00:00, 25.05it/s] 62%|######1   | 16/26 [00:00<00:00, 27.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.26it/s] 92%|#########2| 24/26 [00:00<00:00, 29.09it/s]100%|##########| 26/26 [00:01<00:00, 23.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1222 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1223 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1224 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1225 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1226 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1227 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1228 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1229 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1230 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1231 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1232 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1233 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1234 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1235 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1236 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1237 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1238 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1239 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1240 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1241 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1242 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1243 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1244 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1245 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1246 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1247 364.00000000000006
constrain score by whole: 0
Epoch: [47][  26/  26]	Loss 0.001 (0.001)	train_nll   0.68 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.55 (  0.52)	train_minacc   0.40 (  0.58)	train_majacc   0.59 (  0.51)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.82it/s] 27%|##6       | 7/26 [00:00<00:00, 30.79it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.79it/s] 50%|#####     | 13/26 [00:00<00:00, 37.28it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.45it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.45it/s] 96%|#########6| 25/26 [00:00<00:00, 43.82it/s]100%|##########| 26/26 [00:00<00:00, 36.22it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.57 (  0.57)	test_minacc   0.55 (  0.55)	test_majacc   0.58 (  0.58)	Loss_d 0.667 (0.667)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.664 (0.658)	test_acc   0.57 (  0.58)	test_minacc   0.51 (  0.47)	test_majacc   0.59 (  0.60)	Loss_d 0.664 (0.658)	test_acc_d   0.57 (  0.58)	test_minacc_d   0.51 (  0.47)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.22 (  0.25)
Test: [  20/  26]	Loss 0.655 (0.659)	test_acc   0.59 (  0.58)	test_minacc   0.43 (  0.50)	test_majacc   0.61 (  0.60)	Loss_d 0.655 (0.659)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.61 (  0.60)	test_corr_d   0.25 (  0.23)
Test: [  26/  26]	Loss 0.670 (0.659)	test_acc   0.56 (  0.58)	test_minacc   0.40 (  0.49)	test_majacc   0.60 (  0.60)	Loss_d 0.670 (0.659)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.40 (  0.49)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.24 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.73it/s]
Test: [  0/  1]	Loss 0.750 (0.750)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.60 (  0.60)	Loss_d 0.750 (0.750)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.750 (0.750)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.60 (  0.60)	Loss_d 0.750 (0.750)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.01 (  0.01)
Overall Timing[ 47/  1]	epoch_time 0.0398 (0.0413)	validation_time 0.0005 (0.0008)	train_time 0.0393 (0.0401)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5838000162839889, 0.5)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.89it/s] 15%|#5        | 4/26 [00:00<00:01, 17.02it/s] 27%|##6       | 7/26 [00:00<00:00, 22.03it/s] 42%|####2     | 11/26 [00:00<00:00, 25.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.60it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.90it/s] 88%|########8 | 23/26 [00:00<00:00, 29.57it/s]100%|##########| 26/26 [00:00<00:00, 29.20it/s]100%|##########| 26/26 [00:01<00:00, 24.82it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1248 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1249 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1250 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1251 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1252 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1253 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1254 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1255 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1256 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1257 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1258 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1259 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1260 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1261 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1262 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1263 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1264 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1265 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1266 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1267 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1268 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1269 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1270 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1271 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1272 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1273 364.00000000000006
constrain score by whole: 0
Epoch: [48][  26/  26]	Loss 0.003 (0.001)	train_nll   0.66 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.59 (  0.60)	train_minacc   0.51 (  0.53)	train_majacc   0.61 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.51it/s] 31%|###       | 8/26 [00:00<00:00, 41.50it/s]                                               31%|###       | 8/26 [00:00<00:00, 41.50it/s] 50%|#####     | 13/26 [00:00<00:00, 40.92it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.54it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.54it/s] 96%|#########6| 25/26 [00:00<00:00, 46.78it/s]100%|##########| 26/26 [00:00<00:00, 40.02it/s]
Test: [   0/  26]	Loss 0.633 (0.633)	test_acc   0.62 (  0.62)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.633 (0.633)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.640 (0.631)	test_acc   0.62 (  0.62)	test_minacc   0.46 (  0.49)	test_majacc   0.65 (  0.65)	Loss_d 0.640 (0.631)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.46 (  0.49)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.31 (  0.33)
Test: [  20/  26]	Loss 0.617 (0.631)	test_acc   0.63 (  0.62)	test_minacc   0.38 (  0.50)	test_majacc   0.66 (  0.64)	Loss_d 0.617 (0.631)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.38 (  0.50)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.37 (  0.33)
Test: [  26/  26]	Loss 0.667 (0.632)	test_acc   0.59 (  0.62)	test_minacc   0.44 (  0.51)	test_majacc   0.62 (  0.64)	Loss_d 0.667 (0.632)	test_acc_d   0.59 (  0.62)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.32 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.40it/s]
Test: [  0/  1]	Loss 0.967 (0.967)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.64 (  0.64)	Loss_d 0.967 (0.967)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.967 (0.967)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.64 (  0.64)	Loss_d 0.967 (0.967)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.03 (  0.03)
Overall Timing[ 48/  1]	epoch_time 0.0393 (0.0413)	validation_time 0.0005 (0.0008)	train_time 0.0388 (0.0401)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.6211000140309334, 0.5230000019073486)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.78it/s] 15%|#5        | 4/26 [00:00<00:01, 16.69it/s] 27%|##6       | 7/26 [00:00<00:01, 18.94it/s] 38%|###8      | 10/26 [00:00<00:00, 17.30it/s] 50%|#####     | 13/26 [00:00<00:00, 20.48it/s] 62%|######1   | 16/26 [00:00<00:00, 22.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.50it/s] 85%|########4 | 22/26 [00:01<00:00, 25.81it/s] 96%|#########6| 25/26 [00:01<00:00, 26.68it/s]100%|##########| 26/26 [00:01<00:00, 21.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1274 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1275 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1276 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1277 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1278 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1279 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1280 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1281 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1282 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1283 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1284 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1285 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1286 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1287 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1288 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1289 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1290 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1291 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1292 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1293 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1294 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1295 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1296 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1297 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1298 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1299 364.00000000000006
constrain score by whole: 0
Epoch: [49][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.60 (  0.58)	train_minacc   0.69 (  0.65)	train_majacc   0.58 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.35it/s] 27%|##6       | 7/26 [00:00<00:00, 37.30it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.30it/s] 50%|#####     | 13/26 [00:00<00:00, 42.27it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.26it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.26it/s] 96%|#########6| 25/26 [00:00<00:00, 46.46it/s]100%|##########| 26/26 [00:00<00:00, 39.70it/s]
Test: [   0/  26]	Loss 0.643 (0.643)	test_acc   0.57 (  0.57)	test_minacc   0.61 (  0.61)	test_majacc   0.56 (  0.56)	Loss_d 0.643 (0.643)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.647 (0.645)	test_acc   0.55 (  0.57)	test_minacc   0.64 (  0.63)	test_majacc   0.53 (  0.56)	Loss_d 0.647 (0.645)	test_acc_d   0.55 (  0.57)	test_minacc_d   0.64 (  0.63)	test_majacc_d   0.53 (  0.56)	test_corr_d   0.20 (  0.26)
Test: [  20/  26]	Loss 0.644 (0.647)	test_acc   0.55 (  0.57)	test_minacc   0.64 (  0.64)	test_majacc   0.54 (  0.55)	Loss_d 0.644 (0.647)	test_acc_d   0.55 (  0.57)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.54 (  0.55)	test_corr_d   0.28 (  0.25)
Test: [  26/  26]	Loss 0.642 (0.648)	test_acc   0.61 (  0.57)	test_minacc   0.71 (  0.65)	test_majacc   0.59 (  0.55)	Loss_d 0.642 (0.648)	test_acc_d   0.61 (  0.57)	test_minacc_d   0.71 (  0.65)	test_majacc_d   0.59 (  0.55)	test_corr_d   0.26 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.38it/s]
Test: [  0/  1]	Loss 0.808 (0.808)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.54 (  0.54)	Loss_d 0.808 (0.808)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.808 (0.808)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.54 (  0.54)	Loss_d 0.808 (0.808)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 49/  1]	epoch_time 0.0416 (0.0413)	validation_time 0.0004 (0.0007)	train_time 0.0412 (0.0401)
record: (train_acc, test_acc) (0.602700013756752, 0.6370000243186951)
last accs (train_acc, test_acc) (0.5671000111103058, 0.6190000176429749)
wandb: - 0.163 MB of 0.163 MB uploadedwandb: \ 0.163 MB of 0.163 MB uploadedwandb: | 0.163 MB of 0.163 MB uploadedwandb: / 0.163 MB of 0.163 MB uploadedwandb: - 0.184 MB of 0.196 MB uploaded (0.003 MB deduped)wandb: \ 0.563 MB of 0.563 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/diagnostics/epoch_time_val █▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▂▂▁▁▁▂▂▁▂▂▂▁▁▁▁▁▁▁▁▁▂▁▁▂
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/diagnostics/train_time_val █▂▂▁▂▁▁▁▂▁▁▁▂▂▂▂▂▂▂▁▂▁▂▂▂▃▂▁▁▁▂▁▂▂▂▂▂▁▂▂
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▁▁▁▁▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▄▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/Loss_avg ▆▁▂▂▁▂▃▄▁▂▄▃▃▁▅▆▅▆▇▅▂▃▁█▄▂▃▂▃▁▂▃▁▃▃▃▁▁▁▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/Loss_d_avg ▆▁▂▂▁▂▃▄▁▂▄▃▃▁▅▆▅▆▇▅▂▃▁█▄▂▃▂▃▁▂▃▁▃▃▃▁▁▁▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/Loss_d_val ▆▁▂▂▁▂▃▄▁▂▄▃▃▁▅▆▅▆▇▅▂▃▁█▄▂▃▂▃▁▂▃▁▃▃▃▁▁▁▃
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/Loss_val ▆▁▂▂▁▂▃▄▁▂▄▃▃▁▅▆▅▆▇▅▂▃▁█▄▂▃▂▃▁▂▃▁▃▃▃▁▁▁▃
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_acc_avg ▁▆▆▄█▄▄▇▅▅▄▆▅▄▅▅▄▅▃▅▆▆▄▄▆▆█▆▆▄▅▆▇▆▅▇▇▆▅▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_acc_d_avg ▁▆▆▄█▄▄▇▅▅▄▆▅▄▅▅▄▅▃▅▆▆▄▄▆▆█▆▆▄▅▆▇▆▅▇▇▆▅▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_acc_d_val ▁▆▆▄█▄▄▇▅▅▄▆▅▄▅▅▄▅▃▅▆▆▄▄▆▆█▆▆▄▅▆▇▆▅▇▇▆▅▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_acc_val ▁▆▆▄█▄▄▇▅▅▄▆▅▄▅▅▄▅▃▅▆▆▄▄▆▆█▆▆▄▅▆▇▆▅▇▇▆▅▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_corr_d_avg █▃▂▅▁▆▄▂▄▃▄▃▃▃▇▄▅▄▄▃▃▂▃▄▃▂▃▂▃▃▃▃▂▃▃▂▂▂▂▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_corr_d_val █▃▂▅▁▆▄▂▄▃▄▃▃▃▇▄▅▄▄▃▃▂▃▄▃▂▃▂▃▃▃▃▂▃▃▂▂▂▂▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_majacc_avg █▄▅▅▂▆▆▃▆▄▆▄▇▅▂▆▆█▆▆▅▅▅▇▂▅▄▄▅▅▅▁▅▅▅▃▁▄▅▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_majacc_d_avg █▄▅▅▂▆▆▃▆▄▆▄▇▅▂▆▆█▆▆▅▅▅▇▂▅▄▄▅▅▅▁▅▅▅▃▁▄▅▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_majacc_d_val █▄▅▅▂▆▆▃▆▄▆▄▇▅▂▆▆█▆▆▅▅▅▇▂▅▄▄▅▅▅▁▅▅▅▃▁▄▅▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_majacc_val █▄▅▅▂▆▆▃▆▄▆▄▇▅▂▆▆█▆▆▅▅▅▇▂▅▄▄▅▅▅▁▅▅▅▃▁▄▅▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_minacc_avg ▁▆▆▄█▄▄▇▅▅▄▆▅▄▅▄▄▄▃▅▆▆▄▄▆▅▇▆▆▄▅▇▆▆▅▇▇▆▅▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_minacc_d_avg ▁▆▆▄█▄▄▇▅▅▄▆▅▄▅▄▄▄▃▅▆▆▄▄▆▅▇▆▆▄▅▇▆▆▅▇▇▆▅▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_minacc_d_val ▁▆▆▄█▄▄▇▅▅▄▆▅▄▅▄▄▄▃▅▆▆▄▄▆▅▇▆▆▄▅▇▆▆▅▇▇▆▅▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_minacc_val ▁▆▆▄█▄▄▇▅▅▄▆▅▄▅▄▄▄▃▅▆▆▄▄▆▅▇▆▆▄▅▇▆▆▅▇▇▆▅▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/Loss_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/Loss_val ▄▂▁▁▁▁▂▁▁▁▁▁▁▁▂▂█▂▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_acc_avg █▄▅▅▄▄▅▆▄▅▄▆▅▄▄▆▅▆▅▅▃▃▃▄▃▃▃▂▁▃▂▃▃▃▃▄▂▂▂▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_acc_val ▇▅▆▆▆▅▆▇▆▄▆▅▇▅▃▄▅█▆▅▄▅▄▇▆▄▅▅▄▃▄▁▅▅▅▅▃▃▄▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_majacc_avg █▃▅▅▄▄▅▅▄▅▃▅▅▃▄▅▅▆▅▅▂▃▃▃▃▃▃▂▁▃▂▃▃▃▃▄▁▂▂▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_majacc_val █▅▆▆▆▅▆▆▆▅▆▅▇▅▄▄▅█▆▅▄▅▅▇▆▅▅▄▄▃▄▁▆▅▅▅▄▃▅▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_minacc_avg ▁▇▇▆▆▇▄▇▆▆▆▅▄▇▅▅▅▄▄▄█▇▇▅▆▇▇█▇▅▆▇▆▆▅▆█▆▆▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_minacc_val ▁▆▅▄▆▄▃▇▆▄▃▅▅▃▅▇▃▃▄▄█▄▅▄▅▃▅▇▅▇▅█▄▃▃▆▅▇▃▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_nll_avg █▅▃▃▃▃▄▁▄▃▄▄▃▅▆▂▃▃▃▄▆▆▆▆▆▆▆▆▆▆▇▆▆▆▆▅▇▇▆▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_nll_val ▄▅▄▅▅▇▆▃▅▆▅▆▄▇▆▇█▁▅▆▆▆▆▅▆▆▆▆▆▇▇▇▆▆▆▆▇▇▇▆
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_penalty_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_penalty_val ▄▂▁▁▁▁▂▁▁▁▁▁▁▁▂▂█▂▁▂▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/weight_norm_avg █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/weight_norm_val █▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/diagnostics/epoch_time_val 0.04163
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/diagnostics/train_time_val 0.04118
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/diagnostics/validation_time_val 0.00043
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/Loss_avg 0.80799
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/Loss_d_avg 0.80799
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/Loss_d_val 0.80799
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/Loss_val 0.80799
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_acc_avg 0.619
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_acc_d_avg 0.619
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_acc_d_val 0.619
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_acc_val 0.619
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_corr_d_avg -0.06099
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_corr_d_val -0.06099
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_majacc_avg 0.54
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_majacc_d_avg 0.54
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_majacc_d_val 0.54
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_majacc_val 0.54
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_minacc_avg 0.62778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_minacc_d_avg 0.62778
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_minacc_d_val 0.62778
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/test/test_minacc_val 0.62778
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/Loss_avg 0.00122
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/Loss_val 0.00131
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_acc_avg 0.5835
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_acc_val 0.6
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_majacc_avg 0.5709
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_majacc_val 0.58049
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_minacc_avg 0.65265
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_minacc_val 0.68889
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_nll_avg 0.64322
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_nll_val 0.63939
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_penalty_avg 0.00038
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/train_penalty_val 0.00046
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/weight_norm_avg 7.80621
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/25/logs/train/weight_norm_val 7.80558
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/yquo5fr7
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240904_235817-yquo5fr7/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240905_000115-bmzvha48
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/bmzvha48
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, classes_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=13, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1214
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6008, 3, 32, 32) (5992, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:46,  1.85s/it] 19%|#9        | 5/26 [00:01<00:06,  3.32it/s] 35%|###4      | 9/26 [00:02<00:02,  6.55it/s] 50%|#####     | 13/26 [00:02<00:01, 10.09it/s] 62%|######1   | 16/26 [00:02<00:00, 12.80it/s] 77%|#######6  | 20/26 [00:02<00:00, 16.58it/s] 92%|#########2| 24/26 [00:02<00:00, 19.97it/s]100%|##########| 26/26 [00:02<00:00,  8.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 13
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.003 (4.938)	train_nll   0.61 (  0.64)	train_penalty   0.00 (  0.28)	weight_norm   7.96 (  8.58)	train_acc   0.68 (  0.73)	train_minacc   0.46 (  0.28)	train_majacc   0.74 (  0.81)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.92it/s] 31%|###       | 8/26 [00:00<00:00, 33.83it/s]                                               31%|###       | 8/26 [00:00<00:00, 33.83it/s] 54%|#####3    | 14/26 [00:00<00:00, 39.70it/s] 77%|#######6  | 20/26 [00:00<00:00, 45.22it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 45.22it/s]100%|##########| 26/26 [00:00<00:00, 49.54it/s]100%|##########| 26/26 [00:00<00:00, 40.03it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.67 (  0.67)	test_minacc   0.34 (  0.34)	test_majacc   0.74 (  0.74)	Loss_d 0.648 (0.648)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.56 (  0.56)
Test: [  10/  26]	Loss 0.556 (0.602)	test_acc   0.71 (  0.69)	test_minacc   0.38 (  0.36)	test_majacc   0.77 (  0.74)	Loss_d 0.556 (0.602)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.38 (  0.36)	test_majacc_d   0.77 (  0.74)	test_corr_d   0.66 (  0.60)
Test: [  20/  26]	Loss 0.589 (0.601)	test_acc   0.70 (  0.70)	test_minacc   0.50 (  0.41)	test_majacc   0.72 (  0.75)	Loss_d 0.589 (0.601)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.50 (  0.41)	test_majacc_d   0.72 (  0.75)	test_corr_d   0.57 (  0.58)
Test: [  26/  26]	Loss 0.625 (0.601)	test_acc   0.69 (  0.70)	test_minacc   0.43 (  0.41)	test_majacc   0.77 (  0.75)	Loss_d 0.625 (0.601)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.43 (  0.41)	test_majacc_d   0.77 (  0.75)	test_corr_d   0.59 (  0.59)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.47it/s]100%|##########| 1/1 [00:00<00:00,  2.46it/s]
Test: [  0/  1]	Loss 0.970 (0.970)	test_acc   0.39 (  0.39)	test_minacc   0.35 (  0.35)	test_majacc   0.77 (  0.77)	Loss_d 0.970 (0.970)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.47 (  0.47)
Test: [  1/  1]	Loss 0.970 (0.970)	test_acc   0.39 (  0.39)	test_minacc   0.35 (  0.35)	test_majacc   0.77 (  0.77)	Loss_d 0.970 (0.970)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.77 (  0.77)	test_corr_d   0.47 (  0.47)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/26/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.1045 (0.1045)	validation_time 0.0068 (0.0068)	train_time 0.0684 (0.0684)
record: (train_acc, test_acc) (0.7024000308513642, 0.3920000195503235)
last accs (train_acc, test_acc) (0.7024000308513642, 0.3920000195503235)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.80it/s] 19%|#9        | 5/26 [00:00<00:00, 23.47it/s] 31%|###       | 8/26 [00:00<00:00, 26.02it/s] 42%|####2     | 11/26 [00:00<00:00, 27.26it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.02it/s] 69%|######9   | 18/26 [00:00<00:00, 29.70it/s] 85%|########4 | 22/26 [00:00<00:00, 30.87it/s]100%|##########| 26/26 [00:00<00:00, 31.77it/s]100%|##########| 26/26 [00:00<00:00, 27.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.001 (0.004)	train_nll   0.60 (  0.59)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.85)	train_acc   0.65 (  0.68)	train_minacc   0.57 (  0.52)	train_majacc   0.67 (  0.71)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 27%|##6       | 7/26 [00:00<00:00, 34.28it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.28it/s] 50%|#####     | 13/26 [00:00<00:00, 39.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.32it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.32it/s] 96%|#########6| 25/26 [00:00<00:00, 48.08it/s]100%|##########| 26/26 [00:00<00:00, 39.49it/s]
Test: [   0/  26]	Loss 0.594 (0.594)	test_acc   0.65 (  0.65)	test_minacc   0.50 (  0.50)	test_majacc   0.68 (  0.68)	Loss_d 0.594 (0.594)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.562 (0.578)	test_acc   0.71 (  0.70)	test_minacc   0.60 (  0.55)	test_majacc   0.73 (  0.73)	Loss_d 0.562 (0.578)	test_acc_d   0.71 (  0.70)	test_minacc_d   0.60 (  0.55)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.46 (  0.44)
Test: [  20/  26]	Loss 0.587 (0.582)	test_acc   0.71 (  0.70)	test_minacc   0.46 (  0.55)	test_majacc   0.74 (  0.72)	Loss_d 0.587 (0.582)	test_acc_d   0.71 (  0.70)	test_minacc_d   0.46 (  0.55)	test_majacc_d   0.74 (  0.72)	test_corr_d   0.48 (  0.43)
Test: [  26/  26]	Loss 0.600 (0.583)	test_acc   0.67 (  0.69)	test_minacc   0.57 (  0.54)	test_majacc   0.69 (  0.72)	Loss_d 0.600 (0.583)	test_acc_d   0.67 (  0.69)	test_minacc_d   0.57 (  0.54)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.36 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.67it/s]
Test: [  0/  1]	Loss 0.731 (0.731)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.74 (  0.74)	Loss_d 0.731 (0.731)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.731 (0.731)	test_acc   0.53 (  0.53)	test_minacc   0.51 (  0.51)	test_majacc   0.74 (  0.74)	Loss_d 0.731 (0.731)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.09 (  0.09)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/26/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0384 (0.0714)	validation_time 0.0005 (0.0036)	train_time 0.0378 (0.0531)
record: (train_acc, test_acc) (0.6941000257730484, 0.5290000438690186)
last accs (train_acc, test_acc) (0.6941000257730484, 0.5290000438690186)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.61it/s] 15%|#5        | 4/26 [00:00<00:01, 17.25it/s] 31%|###       | 8/26 [00:00<00:00, 23.49it/s] 46%|####6     | 12/26 [00:00<00:00, 26.79it/s] 62%|######1   | 16/26 [00:00<00:00, 28.90it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.19it/s] 92%|#########2| 24/26 [00:00<00:00, 31.02it/s]100%|##########| 26/26 [00:01<00:00, 25.88it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.005 (0.002)	train_nll   0.70 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.80)	train_acc   0.54 (  0.63)	train_minacc   0.59 (  0.58)	train_majacc   0.52 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.75it/s] 27%|##6       | 7/26 [00:00<00:00, 35.39it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.39it/s] 50%|#####     | 13/26 [00:00<00:00, 44.44it/s] 69%|######9   | 18/26 [00:00<00:00, 44.36it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.36it/s] 88%|########8 | 23/26 [00:00<00:00, 46.25it/s]100%|##########| 26/26 [00:00<00:00, 41.85it/s]
Test: [   0/  26]	Loss 0.676 (0.676)	test_acc   0.54 (  0.54)	test_minacc   0.61 (  0.61)	test_majacc   0.53 (  0.53)	Loss_d 0.676 (0.676)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.659 (0.664)	test_acc   0.56 (  0.59)	test_minacc   0.69 (  0.70)	test_majacc   0.54 (  0.57)	Loss_d 0.659 (0.664)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.69 (  0.70)	test_majacc_d   0.54 (  0.57)	test_corr_d   0.11 (  0.11)
Test: [  20/  26]	Loss 0.671 (0.664)	test_acc   0.56 (  0.58)	test_minacc   0.59 (  0.68)	test_majacc   0.56 (  0.56)	Loss_d 0.671 (0.664)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.59 (  0.68)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.18 (  0.10)
Test: [  26/  26]	Loss 0.673 (0.664)	test_acc   0.55 (  0.58)	test_minacc   0.61 (  0.67)	test_majacc   0.54 (  0.56)	Loss_d 0.673 (0.664)	test_acc_d   0.55 (  0.58)	test_minacc_d   0.61 (  0.67)	test_majacc_d   0.54 (  0.56)	test_corr_d   0.02 (  0.11)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 22.90it/s]
Test: [  0/  1]	Loss 0.663 (0.663)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.58 (  0.58)	Loss_d 0.663 (0.663)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.19 ( -0.19)
Test: [  1/  1]	Loss 0.663 (0.663)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.58 (  0.58)	Loss_d 0.663 (0.663)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.19 ( -0.19)
Overall Timing[  2/  1]	epoch_time 0.0381 (0.0603)	validation_time 0.0009 (0.0027)	train_time 0.0372 (0.0478)
record: (train_acc, test_acc) (0.6941000257730484, 0.5290000438690186)
last accs (train_acc, test_acc) (0.5804000115394592, 0.6160000562667847)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.46it/s] 19%|#9        | 5/26 [00:00<00:01, 16.25it/s] 35%|###4      | 9/26 [00:00<00:00, 22.08it/s] 50%|#####     | 13/26 [00:00<00:00, 25.04it/s] 65%|######5   | 17/26 [00:00<00:00, 26.62it/s] 81%|########  | 21/26 [00:00<00:00, 28.21it/s] 96%|#########6| 25/26 [00:01<00:00, 29.58it/s]100%|##########| 26/26 [00:01<00:00, 24.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.001 (0.003)	train_nll   0.67 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.56 (  0.60)	train_minacc   0.50 (  0.61)	train_majacc   0.58 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 27%|##6       | 7/26 [00:00<00:00, 29.34it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.34it/s] 50%|#####     | 13/26 [00:00<00:00, 37.03it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.21it/s] 96%|#########6| 25/26 [00:00<00:00, 45.95it/s]100%|##########| 26/26 [00:00<00:00, 37.23it/s]
Test: [   0/  26]	Loss 0.677 (0.677)	test_acc   0.53 (  0.53)	test_minacc   0.48 (  0.48)	test_majacc   0.54 (  0.54)	Loss_d 0.677 (0.677)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.693 (0.680)	test_acc   0.52 (  0.54)	test_minacc   0.51 (  0.48)	test_majacc   0.52 (  0.55)	Loss_d 0.693 (0.680)	test_acc_d   0.52 (  0.54)	test_minacc_d   0.51 (  0.48)	test_majacc_d   0.52 (  0.55)	test_corr_d   0.17 (  0.21)
Test: [  20/  26]	Loss 0.695 (0.683)	test_acc   0.49 (  0.53)	test_minacc   0.50 (  0.48)	test_majacc   0.49 (  0.54)	Loss_d 0.695 (0.683)	test_acc_d   0.49 (  0.53)	test_minacc_d   0.50 (  0.48)	test_majacc_d   0.49 (  0.54)	test_corr_d   0.16 (  0.21)
Test: [  26/  26]	Loss 0.654 (0.681)	test_acc   0.62 (  0.54)	test_minacc   0.50 (  0.47)	test_majacc   0.65 (  0.55)	Loss_d 0.654 (0.681)	test_acc_d   0.62 (  0.54)	test_minacc_d   0.50 (  0.47)	test_majacc_d   0.65 (  0.55)	test_corr_d   0.31 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.45it/s]
Test: [  0/  1]	Loss 0.793 (0.793)	test_acc   0.42 (  0.42)	test_minacc   0.39 (  0.39)	test_majacc   0.64 (  0.64)	Loss_d 0.793 (0.793)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 0.793 (0.793)	test_acc   0.42 (  0.42)	test_minacc   0.39 (  0.39)	test_majacc   0.64 (  0.64)	Loss_d 0.793 (0.793)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.29 (  0.29)
Overall Timing[  3/  1]	epoch_time 0.0381 (0.0548)	validation_time 0.0005 (0.0022)	train_time 0.0376 (0.0452)
record: (train_acc, test_acc) (0.6941000257730484, 0.5290000438690186)
last accs (train_acc, test_acc) (0.5385000119507313, 0.41700002551078796)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.68it/s] 15%|#5        | 4/26 [00:00<00:01, 19.11it/s] 31%|###       | 8/26 [00:00<00:00, 25.71it/s] 46%|####6     | 12/26 [00:00<00:00, 28.22it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.57it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.97it/s] 88%|########8 | 23/26 [00:00<00:00, 30.88it/s]100%|##########| 26/26 [00:00<00:00, 26.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.58 (  0.63)	train_minacc   0.76 (  0.57)	train_majacc   0.53 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.13it/s] 31%|###       | 8/26 [00:00<00:00, 39.20it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.20it/s] 54%|#####3    | 14/26 [00:00<00:00, 44.12it/s] 77%|#######6  | 20/26 [00:00<00:00, 48.80it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 48.80it/s]100%|##########| 26/26 [00:00<00:00, 52.34it/s]100%|##########| 26/26 [00:00<00:00, 42.74it/s]
Test: [   0/  26]	Loss 0.697 (0.697)	test_acc   0.49 (  0.49)	test_minacc   0.66 (  0.66)	test_majacc   0.46 (  0.46)	Loss_d 0.697 (0.697)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.06 (  0.06)
Test: [  10/  26]	Loss 0.735 (0.717)	test_acc   0.42 (  0.46)	test_minacc   0.65 (  0.69)	test_majacc   0.39 (  0.42)	Loss_d 0.735 (0.717)	test_acc_d   0.42 (  0.46)	test_minacc_d   0.65 (  0.69)	test_majacc_d   0.39 (  0.42)	test_corr_d  -0.09 ( -0.02)
Test: [  20/  26]	Loss 0.741 (0.716)	test_acc   0.42 (  0.46)	test_minacc   0.61 (  0.69)	test_majacc   0.40 (  0.42)	Loss_d 0.741 (0.716)	test_acc_d   0.42 (  0.46)	test_minacc_d   0.61 (  0.69)	test_majacc_d   0.40 (  0.42)	test_corr_d  -0.02 ( -0.02)
Test: [  26/  26]	Loss 0.673 (0.714)	test_acc   0.53 (  0.47)	test_minacc   0.74 (  0.68)	test_majacc   0.47 (  0.43)	Loss_d 0.673 (0.714)	test_acc_d   0.53 (  0.47)	test_minacc_d   0.74 (  0.68)	test_majacc_d   0.47 (  0.43)	test_corr_d   0.02 ( -0.02)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.71it/s]
Test: [  0/  1]	Loss 0.688 (0.688)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.56 (  0.56)	Loss_d 0.688 (0.688)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.19 ( -0.19)
Test: [  1/  1]	Loss 0.688 (0.688)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.56 (  0.56)	Loss_d 0.688 (0.688)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.19 ( -0.19)
Overall Timing[  4/  1]	epoch_time 0.0378 (0.0514)	validation_time 0.0004 (0.0018)	train_time 0.0373 (0.0437)
record: (train_acc, test_acc) (0.6941000257730484, 0.5290000438690186)
last accs (train_acc, test_acc) (0.46640000662207604, 0.5870000123977661)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.12it/s] 19%|#9        | 5/26 [00:00<00:01, 17.67it/s] 35%|###4      | 9/26 [00:00<00:00, 23.15it/s] 50%|#####     | 13/26 [00:00<00:00, 26.38it/s] 65%|######5   | 17/26 [00:00<00:00, 28.36it/s] 81%|########  | 21/26 [00:00<00:00, 29.73it/s] 96%|#########6| 25/26 [00:00<00:00, 28.98it/s]100%|##########| 26/26 [00:01<00:00, 24.62it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.002 (0.003)	train_nll   0.59 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.70 (  0.67)	train_minacc   0.67 (  0.59)	train_majacc   0.71 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 27%|##6       | 7/26 [00:00<00:00, 31.51it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.51it/s] 50%|#####     | 13/26 [00:00<00:00, 39.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.91it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.91it/s] 96%|#########6| 25/26 [00:00<00:00, 47.23it/s]100%|##########| 26/26 [00:00<00:00, 38.56it/s]
Test: [   0/  26]	Loss 0.581 (0.581)	test_acc   0.69 (  0.69)	test_minacc   0.61 (  0.61)	test_majacc   0.71 (  0.71)	Loss_d 0.581 (0.581)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.41 (  0.41)
Test: [  10/  26]	Loss 0.588 (0.597)	test_acc   0.66 (  0.66)	test_minacc   0.62 (  0.63)	test_majacc   0.67 (  0.67)	Loss_d 0.588 (0.597)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.62 (  0.63)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.38 (  0.35)
Test: [  20/  26]	Loss 0.603 (0.599)	test_acc   0.66 (  0.66)	test_minacc   0.52 (  0.64)	test_majacc   0.67 (  0.66)	Loss_d 0.603 (0.599)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.52 (  0.64)	test_majacc_d   0.67 (  0.66)	test_corr_d   0.39 (  0.34)
Test: [  26/  26]	Loss 0.601 (0.600)	test_acc   0.67 (  0.66)	test_minacc   0.67 (  0.64)	test_majacc   0.67 (  0.67)	Loss_d 0.601 (0.600)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.67 (  0.64)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.27 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.50it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.62 (  0.62)	Loss_d 0.690 (0.690)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.62 (  0.62)	Loss_d 0.690 (0.690)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.10 ( -0.10)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/26/checkpoints/model_best.pth
Overall Timing[  5/  1]	epoch_time 0.0370 (0.0490)	validation_time 0.0005 (0.0016)	train_time 0.0365 (0.0425)
record: (train_acc, test_acc) (0.6621000207066536, 0.6070000529289246)
last accs (train_acc, test_acc) (0.6621000207066536, 0.6070000529289246)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.26it/s] 19%|#9        | 5/26 [00:00<00:00, 21.41it/s] 35%|###4      | 9/26 [00:00<00:00, 25.95it/s] 50%|#####     | 13/26 [00:00<00:00, 28.43it/s] 65%|######5   | 17/26 [00:00<00:00, 29.44it/s] 81%|########  | 21/26 [00:00<00:00, 30.61it/s] 96%|#########6| 25/26 [00:00<00:00, 31.43it/s]100%|##########| 26/26 [00:00<00:00, 27.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.001 (0.002)	train_nll   0.61 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.67 (  0.63)	train_minacc   0.61 (  0.61)	train_majacc   0.68 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.24it/s] 27%|##6       | 7/26 [00:00<00:00, 33.04it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.04it/s] 50%|#####     | 13/26 [00:00<00:00, 40.31it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.68it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.68it/s] 96%|#########6| 25/26 [00:00<00:00, 47.81it/s]100%|##########| 26/26 [00:00<00:00, 39.57it/s]
Test: [   0/  26]	Loss 0.593 (0.593)	test_acc   0.69 (  0.69)	test_minacc   0.50 (  0.50)	test_majacc   0.72 (  0.72)	Loss_d 0.593 (0.593)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.575 (0.592)	test_acc   0.75 (  0.70)	test_minacc   0.62 (  0.57)	test_majacc   0.77 (  0.72)	Loss_d 0.575 (0.592)	test_acc_d   0.75 (  0.70)	test_minacc_d   0.62 (  0.57)	test_majacc_d   0.77 (  0.72)	test_corr_d   0.49 (  0.43)
Test: [  20/  26]	Loss 0.575 (0.594)	test_acc   0.75 (  0.70)	test_minacc   0.48 (  0.56)	test_majacc   0.79 (  0.72)	Loss_d 0.575 (0.594)	test_acc_d   0.75 (  0.70)	test_minacc_d   0.48 (  0.56)	test_majacc_d   0.79 (  0.72)	test_corr_d   0.53 (  0.42)
Test: [  26/  26]	Loss 0.613 (0.595)	test_acc   0.70 (  0.70)	test_minacc   0.61 (  0.56)	test_majacc   0.72 (  0.72)	Loss_d 0.613 (0.595)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.61 (  0.56)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.33 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.71it/s]
Test: [  0/  1]	Loss 0.704 (0.704)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.704 (0.704)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.00 (  0.00)
Test: [  1/  1]	Loss 0.704 (0.704)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.704 (0.704)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.00 (  0.00)
Overall Timing[  6/  1]	epoch_time 0.0365 (0.0472)	validation_time 0.0004 (0.0014)	train_time 0.0360 (0.0415)
record: (train_acc, test_acc) (0.6621000207066536, 0.6070000529289246)
last accs (train_acc, test_acc) (0.6990000301003456, 0.5670000314712524)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.20it/s] 19%|#9        | 5/26 [00:00<00:00, 21.23it/s] 35%|###4      | 9/26 [00:00<00:00, 25.47it/s] 50%|#####     | 13/26 [00:00<00:00, 27.90it/s] 62%|######1   | 16/26 [00:00<00:00, 27.97it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.43it/s] 88%|########8 | 23/26 [00:00<00:00, 29.52it/s]100%|##########| 26/26 [00:01<00:00, 25.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.003 (0.002)	train_nll   0.70 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.55 (  0.62)	train_minacc   0.59 (  0.61)	train_majacc   0.54 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.89it/s] 27%|##6       | 7/26 [00:00<00:00, 32.04it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.04it/s] 50%|#####     | 13/26 [00:00<00:00, 42.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.21it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.21it/s] 96%|#########6| 25/26 [00:00<00:00, 49.48it/s]100%|##########| 26/26 [00:00<00:00, 41.14it/s]
Test: [   0/  26]	Loss 0.671 (0.671)	test_acc   0.57 (  0.57)	test_minacc   0.50 (  0.50)	test_majacc   0.58 (  0.58)	Loss_d 0.671 (0.671)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.665 (0.671)	test_acc   0.59 (  0.55)	test_minacc   0.56 (  0.54)	test_majacc   0.59 (  0.55)	Loss_d 0.665 (0.671)	test_acc_d   0.59 (  0.55)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.59 (  0.55)	test_corr_d   0.22 (  0.19)
Test: [  20/  26]	Loss 0.659 (0.669)	test_acc   0.58 (  0.55)	test_minacc   0.57 (  0.54)	test_majacc   0.59 (  0.56)	Loss_d 0.659 (0.669)	test_acc_d   0.58 (  0.55)	test_minacc_d   0.57 (  0.54)	test_majacc_d   0.59 (  0.56)	test_corr_d   0.29 (  0.19)
Test: [  26/  26]	Loss 0.678 (0.669)	test_acc   0.58 (  0.56)	test_minacc   0.57 (  0.54)	test_majacc   0.58 (  0.56)	Loss_d 0.678 (0.669)	test_acc_d   0.58 (  0.56)	test_minacc_d   0.57 (  0.54)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.12 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.74it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.58 (  0.58)	Loss_d 0.700 (0.700)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.58 (  0.58)	Loss_d 0.700 (0.700)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.02 ( -0.02)
Overall Timing[  7/  1]	epoch_time 0.0371 (0.0459)	validation_time 0.0004 (0.0013)	train_time 0.0367 (0.0409)
record: (train_acc, test_acc) (0.6621000207066536, 0.6070000529289246)
last accs (train_acc, test_acc) (0.559500012755394, 0.5390000343322754)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.32it/s] 15%|#5        | 4/26 [00:00<00:01, 18.74it/s] 27%|##6       | 7/26 [00:00<00:00, 23.11it/s] 42%|####2     | 11/26 [00:00<00:00, 27.14it/s] 54%|#####3    | 14/26 [00:00<00:00, 12.11it/s] 69%|######9   | 18/26 [00:01<00:00, 16.14it/s] 85%|########4 | 22/26 [00:01<00:00, 19.78it/s]100%|##########| 26/26 [00:01<00:00, 22.95it/s]100%|##########| 26/26 [00:01<00:00, 18.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.57 (  0.61)	train_minacc   0.63 (  0.61)	train_majacc   0.55 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.94it/s] 23%|##3       | 6/26 [00:00<00:00, 31.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.47it/s] 42%|####2     | 11/26 [00:00<00:00, 35.27it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.92it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.53it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.53it/s] 96%|#########6| 25/26 [00:00<00:00, 41.48it/s]100%|##########| 26/26 [00:00<00:00, 35.49it/s]
Test: [   0/  26]	Loss 0.681 (0.681)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.54 (  0.54)	Loss_d 0.681 (0.681)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.13 (  0.13)
Test: [  10/  26]	Loss 0.697 (0.696)	test_acc   0.50 (  0.52)	test_minacc   0.65 (  0.61)	test_majacc   0.48 (  0.50)	Loss_d 0.697 (0.696)	test_acc_d   0.50 (  0.52)	test_minacc_d   0.65 (  0.61)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.08 (  0.06)
Test: [  20/  26]	Loss 0.702 (0.693)	test_acc   0.52 (  0.53)	test_minacc   0.50 (  0.60)	test_majacc   0.52 (  0.51)	Loss_d 0.702 (0.693)	test_acc_d   0.52 (  0.53)	test_minacc_d   0.50 (  0.60)	test_majacc_d   0.52 (  0.51)	test_corr_d   0.12 (  0.07)
Test: [  26/  26]	Loss 0.673 (0.692)	test_acc   0.54 (  0.53)	test_minacc   0.61 (  0.60)	test_majacc   0.53 (  0.51)	Loss_d 0.673 (0.692)	test_acc_d   0.54 (  0.53)	test_minacc_d   0.61 (  0.60)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.09 (  0.08)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.69it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.57 (  0.57)	Loss_d 0.690 (0.690)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.57 (  0.57)	Loss_d 0.690 (0.690)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.11 ( -0.11)
Overall Timing[  8/  1]	epoch_time 0.0456 (0.0459)	validation_time 0.0004 (0.0012)	train_time 0.0452 (0.0414)
record: (train_acc, test_acc) (0.6621000207066536, 0.6070000529289246)
last accs (train_acc, test_acc) (0.5268000096678734, 0.5870000123977661)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.60it/s] 19%|#9        | 5/26 [00:00<00:00, 21.81it/s] 31%|###       | 8/26 [00:00<00:00, 25.02it/s] 46%|####6     | 12/26 [00:00<00:00, 27.91it/s] 62%|######1   | 16/26 [00:00<00:00, 29.25it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.28it/s] 92%|#########2| 24/26 [00:00<00:00, 29.65it/s]100%|##########| 26/26 [00:00<00:00, 26.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.003 (0.002)	train_nll   0.62 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.66 (  0.63)	train_minacc   0.67 (  0.59)	train_majacc   0.65 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.77it/s] 15%|#5        | 4/26 [00:00<00:01, 20.41it/s] 35%|###4      | 9/26 [00:00<00:00, 32.81it/s]                                               35%|###4      | 9/26 [00:00<00:00, 32.81it/s] 58%|#####7    | 15/26 [00:00<00:00, 40.02it/s] 77%|#######6  | 20/26 [00:00<00:00, 42.74it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 42.74it/s]100%|##########| 26/26 [00:00<00:00, 46.93it/s]100%|##########| 26/26 [00:00<00:00, 36.84it/s]
Test: [   0/  26]	Loss 0.618 (0.618)	test_acc   0.64 (  0.64)	test_minacc   0.53 (  0.53)	test_majacc   0.66 (  0.66)	Loss_d 0.618 (0.618)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.588 (0.607)	test_acc   0.67 (  0.64)	test_minacc   0.65 (  0.61)	test_majacc   0.68 (  0.65)	Loss_d 0.588 (0.607)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.65 (  0.61)	test_majacc_d   0.68 (  0.65)	test_corr_d   0.40 (  0.36)
Test: [  20/  26]	Loss 0.619 (0.605)	test_acc   0.64 (  0.65)	test_minacc   0.50 (  0.63)	test_majacc   0.66 (  0.65)	Loss_d 0.619 (0.605)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.50 (  0.63)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.40 (  0.35)
Test: [  26/  26]	Loss 0.614 (0.605)	test_acc   0.66 (  0.65)	test_minacc   0.67 (  0.63)	test_majacc   0.66 (  0.65)	Loss_d 0.614 (0.605)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.67 (  0.63)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.29 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.07it/s]
Test: [  0/  1]	Loss 0.711 (0.711)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.65 (  0.65)	Loss_d 0.711 (0.711)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.711 (0.711)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.65 (  0.65)	Loss_d 0.711 (0.711)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.07 ( -0.07)
Overall Timing[  9/  1]	epoch_time 0.0381 (0.0451)	validation_time 0.0004 (0.0011)	train_time 0.0377 (0.0410)
record: (train_acc, test_acc) (0.6621000207066536, 0.6070000529289246)
last accs (train_acc, test_acc) (0.6499000177383423, 0.597000002861023)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.87it/s] 15%|#5        | 4/26 [00:00<00:01, 16.71it/s] 27%|##6       | 7/26 [00:00<00:00, 21.08it/s] 42%|####2     | 11/26 [00:00<00:00, 24.97it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.18it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.47it/s] 88%|########8 | 23/26 [00:00<00:00, 29.20it/s]100%|##########| 26/26 [00:01<00:00, 25.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.002 (0.001)	train_nll   0.60 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.67 (  0.59)	train_minacc   0.69 (  0.62)	train_majacc   0.66 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.47it/s] 27%|##6       | 7/26 [00:00<00:00, 35.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.54it/s] 50%|#####     | 13/26 [00:00<00:00, 40.05it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.19it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.19it/s] 96%|#########6| 25/26 [00:00<00:00, 45.26it/s]100%|##########| 26/26 [00:00<00:00, 39.21it/s]
Test: [   0/  26]	Loss 0.633 (0.633)	test_acc   0.63 (  0.63)	test_minacc   0.56 (  0.56)	test_majacc   0.64 (  0.64)	Loss_d 0.633 (0.633)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.610 (0.627)	test_acc   0.68 (  0.64)	test_minacc   0.65 (  0.65)	test_majacc   0.68 (  0.64)	Loss_d 0.610 (0.627)	test_acc_d   0.68 (  0.64)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.68 (  0.64)	test_corr_d   0.32 (  0.28)
Test: [  20/  26]	Loss 0.635 (0.624)	test_acc   0.64 (  0.64)	test_minacc   0.52 (  0.65)	test_majacc   0.65 (  0.64)	Loss_d 0.635 (0.624)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.52 (  0.65)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.34 (  0.27)
Test: [  26/  26]	Loss 0.611 (0.624)	test_acc   0.66 (  0.64)	test_minacc   0.65 (  0.65)	test_majacc   0.66 (  0.64)	Loss_d 0.611 (0.624)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.66 (  0.64)	test_corr_d   0.21 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.68it/s]
Test: [  0/  1]	Loss 0.681 (0.681)	test_acc   0.63 (  0.63)	test_minacc   0.63 (  0.63)	test_majacc   0.64 (  0.64)	Loss_d 0.681 (0.681)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.18 ( -0.18)
Test: [  1/  1]	Loss 0.681 (0.681)	test_acc   0.63 (  0.63)	test_minacc   0.63 (  0.63)	test_majacc   0.64 (  0.64)	Loss_d 0.681 (0.681)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.18 ( -0.18)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/26/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0384 (0.0445)	validation_time 0.0004 (0.0011)	train_time 0.0380 (0.0408)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.59it/s] 15%|#5        | 4/26 [00:00<00:01, 16.57it/s] 31%|###       | 8/26 [00:00<00:00, 23.27it/s] 46%|####6     | 12/26 [00:00<00:00, 26.75it/s] 62%|######1   | 16/26 [00:00<00:00, 28.74it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.04it/s] 92%|#########2| 24/26 [00:00<00:00, 30.81it/s]100%|##########| 26/26 [00:00<00:00, 26.01it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.001 (0.001)	train_nll   0.60 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.66 (  0.59)	train_minacc   0.72 (  0.55)	train_majacc   0.64 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 21.41it/s] 35%|###4      | 9/26 [00:00<00:00, 38.13it/s]                                               35%|###4      | 9/26 [00:00<00:00, 38.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 42.37it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 42.37it/s] 81%|########  | 21/26 [00:00<00:00, 46.83it/s]100%|##########| 26/26 [00:00<00:00, 41.14it/s]
Test: [   0/  26]	Loss 0.602 (0.602)	test_acc   0.68 (  0.68)	test_minacc   0.61 (  0.61)	test_majacc   0.69 (  0.69)	Loss_d 0.602 (0.602)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.583 (0.613)	test_acc   0.68 (  0.64)	test_minacc   0.73 (  0.65)	test_majacc   0.68 (  0.64)	Loss_d 0.583 (0.613)	test_acc_d   0.68 (  0.64)	test_minacc_d   0.73 (  0.65)	test_majacc_d   0.68 (  0.64)	test_corr_d   0.38 (  0.32)
Test: [  20/  26]	Loss 0.622 (0.610)	test_acc   0.64 (  0.64)	test_minacc   0.52 (  0.67)	test_majacc   0.65 (  0.64)	Loss_d 0.622 (0.610)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.52 (  0.67)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.38 (  0.32)
Test: [  26/  26]	Loss 0.606 (0.611)	test_acc   0.68 (  0.64)	test_minacc   0.70 (  0.67)	test_majacc   0.67 (  0.64)	Loss_d 0.606 (0.611)	test_acc_d   0.68 (  0.64)	test_minacc_d   0.70 (  0.67)	test_majacc_d   0.67 (  0.64)	test_corr_d   0.24 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.72it/s]
Test: [  0/  1]	Loss 0.697 (0.697)	test_acc   0.63 (  0.63)	test_minacc   0.63 (  0.63)	test_majacc   0.60 (  0.60)	Loss_d 0.697 (0.697)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.697 (0.697)	test_acc   0.63 (  0.63)	test_minacc   0.63 (  0.63)	test_majacc   0.60 (  0.60)	Loss_d 0.697 (0.697)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 11/  1]	epoch_time 0.0369 (0.0439)	validation_time 0.0004 (0.0010)	train_time 0.0364 (0.0404)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6441000198721886, 0.6270000338554382)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.28it/s] 15%|#5        | 4/26 [00:00<00:01, 19.48it/s] 31%|###       | 8/26 [00:00<00:00, 25.22it/s] 46%|####6     | 12/26 [00:00<00:00, 27.73it/s] 62%|######1   | 16/26 [00:00<00:00, 29.19it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.39it/s] 92%|#########2| 24/26 [00:00<00:00, 30.76it/s]100%|##########| 26/26 [00:00<00:00, 26.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.001 (0.001)	train_nll   0.63 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.62 (  0.59)	train_minacc   0.67 (  0.59)	train_majacc   0.61 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.26it/s] 23%|##3       | 6/26 [00:00<00:00, 28.24it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.24it/s] 42%|####2     | 11/26 [00:00<00:00, 34.16it/s] 65%|######5   | 17/26 [00:00<00:00, 40.93it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.93it/s] 88%|########8 | 23/26 [00:00<00:00, 43.90it/s]100%|##########| 26/26 [00:00<00:00, 36.65it/s]
Test: [   0/  26]	Loss 0.605 (0.605)	test_acc   0.65 (  0.65)	test_minacc   0.58 (  0.58)	test_majacc   0.67 (  0.67)	Loss_d 0.605 (0.605)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.614 (0.622)	test_acc   0.58 (  0.61)	test_minacc   0.60 (  0.63)	test_majacc   0.58 (  0.60)	Loss_d 0.614 (0.622)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.60 (  0.63)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.32 (  0.30)
Test: [  20/  26]	Loss 0.629 (0.619)	test_acc   0.60 (  0.61)	test_minacc   0.46 (  0.63)	test_majacc   0.62 (  0.61)	Loss_d 0.629 (0.619)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.46 (  0.63)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.38 (  0.31)
Test: [  26/  26]	Loss 0.627 (0.620)	test_acc   0.62 (  0.61)	test_minacc   0.67 (  0.63)	test_majacc   0.61 (  0.61)	Loss_d 0.627 (0.620)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.67 (  0.63)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.22 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.51it/s]
Test: [  0/  1]	Loss 0.709 (0.709)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.65 (  0.65)	Loss_d 0.709 (0.709)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.709 (0.709)	test_acc   0.61 (  0.61)	test_minacc   0.60 (  0.60)	test_majacc   0.65 (  0.65)	Loss_d 0.709 (0.709)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 12/  1]	epoch_time 0.0385 (0.0435)	validation_time 0.0004 (0.0010)	train_time 0.0379 (0.0402)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.610700005531311, 0.6060000061988831)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.09it/s] 19%|#9        | 5/26 [00:00<00:01, 20.46it/s] 31%|###       | 8/26 [00:00<00:00, 23.93it/s] 46%|####6     | 12/26 [00:00<00:00, 26.81it/s] 62%|######1   | 16/26 [00:00<00:00, 28.47it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.89it/s] 92%|#########2| 24/26 [00:00<00:00, 30.66it/s]100%|##########| 26/26 [00:00<00:00, 26.05it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.001 (0.002)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.64 (  0.61)	train_minacc   0.65 (  0.60)	train_majacc   0.64 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.93it/s] 27%|##6       | 7/26 [00:00<00:00, 36.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.93it/s] 42%|####2     | 11/26 [00:00<00:00, 37.78it/s] 65%|######5   | 17/26 [00:00<00:00, 45.35it/s]                                                65%|######5   | 17/26 [00:00<00:00, 45.35it/s] 88%|########8 | 23/26 [00:00<00:00, 45.47it/s]100%|##########| 26/26 [00:00<00:00, 40.47it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.63 (  0.63)	test_minacc   0.55 (  0.55)	test_majacc   0.64 (  0.64)	Loss_d 0.636 (0.636)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.629 (0.629)	test_acc   0.61 (  0.61)	test_minacc   0.51 (  0.57)	test_majacc   0.62 (  0.61)	Loss_d 0.629 (0.629)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.51 (  0.57)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.32 (  0.33)
Test: [  20/  26]	Loss 0.650 (0.629)	test_acc   0.59 (  0.61)	test_minacc   0.61 (  0.59)	test_majacc   0.59 (  0.61)	Loss_d 0.650 (0.629)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.61 (  0.59)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.35 (  0.32)
Test: [  26/  26]	Loss 0.623 (0.630)	test_acc   0.64 (  0.61)	test_minacc   0.63 (  0.60)	test_majacc   0.64 (  0.61)	Loss_d 0.623 (0.630)	test_acc_d   0.64 (  0.61)	test_minacc_d   0.63 (  0.60)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.25 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.13it/s]
Test: [  0/  1]	Loss 0.730 (0.730)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.63 (  0.63)	Loss_d 0.730 (0.730)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.730 (0.730)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.63 (  0.63)	Loss_d 0.730 (0.730)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 13/  1]	epoch_time 0.0395 (0.0432)	validation_time 0.0013 (0.0010)	train_time 0.0381 (0.0401)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6124000083804131, 0.5690000057220459)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.65it/s] 15%|#5        | 4/26 [00:00<00:01, 14.26it/s] 27%|##6       | 7/26 [00:00<00:00, 19.64it/s] 42%|####2     | 11/26 [00:00<00:00, 23.66it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.98it/s] 69%|######9   | 18/26 [00:00<00:00, 26.38it/s] 85%|########4 | 22/26 [00:00<00:00, 27.94it/s]100%|##########| 26/26 [00:01<00:00, 28.96it/s]100%|##########| 26/26 [00:01<00:00, 23.11it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.002 (0.002)	train_nll   0.58 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.70 (  0.63)	train_minacc   0.56 (  0.60)	train_majacc   0.74 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.70it/s] 27%|##6       | 7/26 [00:00<00:00, 33.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.54it/s] 46%|####6     | 12/26 [00:00<00:00, 40.24it/s] 65%|######5   | 17/26 [00:00<00:00, 42.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.98it/s] 88%|########8 | 23/26 [00:00<00:00, 47.62it/s]100%|##########| 26/26 [00:00<00:00, 39.28it/s]
Test: [   0/  26]	Loss 0.586 (0.586)	test_acc   0.66 (  0.66)	test_minacc   0.50 (  0.50)	test_majacc   0.70 (  0.70)	Loss_d 0.586 (0.586)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.564 (0.572)	test_acc   0.69 (  0.67)	test_minacc   0.58 (  0.54)	test_majacc   0.71 (  0.69)	Loss_d 0.564 (0.572)	test_acc_d   0.69 (  0.67)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.71 (  0.69)	test_corr_d   0.49 (  0.47)
Test: [  20/  26]	Loss 0.592 (0.573)	test_acc   0.67 (  0.67)	test_minacc   0.59 (  0.56)	test_majacc   0.68 (  0.69)	Loss_d 0.592 (0.573)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.46 (  0.46)
Test: [  26/  26]	Loss 0.586 (0.573)	test_acc   0.69 (  0.68)	test_minacc   0.57 (  0.56)	test_majacc   0.72 (  0.70)	Loss_d 0.586 (0.573)	test_acc_d   0.69 (  0.68)	test_minacc_d   0.57 (  0.56)	test_majacc_d   0.72 (  0.70)	test_corr_d   0.39 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.70it/s]
Test: [  0/  1]	Loss 0.766 (0.766)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.71 (  0.71)	Loss_d 0.766 (0.766)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.766 (0.766)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.71 (  0.71)	Loss_d 0.766 (0.766)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.07 (  0.07)
Overall Timing[ 14/  1]	epoch_time 0.0416 (0.0431)	validation_time 0.0021 (0.0011)	train_time 0.0395 (0.0400)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6774000253677368, 0.5530000329017639)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.15it/s] 12%|#1        | 3/26 [00:00<00:02, 11.12it/s] 23%|##3       | 6/26 [00:00<00:01, 17.59it/s] 35%|###4      | 9/26 [00:00<00:00, 21.50it/s] 50%|#####     | 13/26 [00:00<00:00, 25.03it/s] 65%|######5   | 17/26 [00:00<00:00, 27.16it/s] 81%|########  | 21/26 [00:00<00:00, 28.27it/s] 96%|#########6| 25/26 [00:01<00:00, 29.26it/s]100%|##########| 26/26 [00:01<00:00, 23.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0067, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(6.2622e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(4.6478e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.003 (0.005)	train_nll   0.66 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.61 (  0.64)	train_minacc   0.50 (  0.50)	train_majacc   0.64 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.79it/s] 31%|###       | 8/26 [00:00<00:00, 42.29it/s]                                               31%|###       | 8/26 [00:00<00:00, 42.29it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.58it/s] 77%|#######6  | 20/26 [00:00<00:00, 47.51it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 47.51it/s]100%|##########| 26/26 [00:00<00:00, 51.07it/s]100%|##########| 26/26 [00:00<00:00, 43.25it/s]
Test: [   0/  26]	Loss 0.626 (0.626)	test_acc   0.64 (  0.64)	test_minacc   0.53 (  0.53)	test_majacc   0.66 (  0.66)	Loss_d 0.626 (0.626)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.582 (0.602)	test_acc   0.68 (  0.66)	test_minacc   0.62 (  0.58)	test_majacc   0.69 (  0.67)	Loss_d 0.582 (0.602)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.62 (  0.58)	test_majacc_d   0.69 (  0.67)	test_corr_d   0.42 (  0.38)
Test: [  20/  26]	Loss 0.629 (0.603)	test_acc   0.61 (  0.65)	test_minacc   0.43 (  0.58)	test_majacc   0.64 (  0.67)	Loss_d 0.629 (0.603)	test_acc_d   0.61 (  0.65)	test_minacc_d   0.43 (  0.58)	test_majacc_d   0.64 (  0.67)	test_corr_d   0.36 (  0.37)
Test: [  26/  26]	Loss 0.609 (0.604)	test_acc   0.64 (  0.65)	test_minacc   0.59 (  0.58)	test_majacc   0.65 (  0.67)	Loss_d 0.609 (0.604)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.59 (  0.58)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.35 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.36it/s]
Test: [  0/  1]	Loss 0.735 (0.735)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.65 (  0.65)	Loss_d 0.735 (0.735)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.735 (0.735)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.65 (  0.65)	Loss_d 0.735 (0.735)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.06 (  0.06)
Overall Timing[ 15/  1]	epoch_time 0.0383 (0.0428)	validation_time 0.0004 (0.0010)	train_time 0.0378 (0.0399)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6532000198960304, 0.5509999990463257)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.62it/s] 15%|#5        | 4/26 [00:00<00:01, 14.48it/s] 27%|##6       | 7/26 [00:00<00:00, 19.73it/s] 38%|###8      | 10/26 [00:00<00:00, 22.17it/s] 50%|#####     | 13/26 [00:00<00:00, 23.85it/s] 65%|######5   | 17/26 [00:00<00:00, 25.95it/s] 81%|########  | 21/26 [00:00<00:00, 27.46it/s] 96%|#########6| 25/26 [00:01<00:00, 28.42it/s]100%|##########| 26/26 [00:01<00:00, 23.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0046, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(4.9397e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.002 (0.004)	train_nll   0.70 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.54 (  0.64)	train_minacc   0.54 (  0.50)	train_majacc   0.54 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 27%|##6       | 7/26 [00:00<00:00, 34.91it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.91it/s] 50%|#####     | 13/26 [00:00<00:00, 40.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.26it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.26it/s] 96%|#########6| 25/26 [00:00<00:00, 47.10it/s]100%|##########| 26/26 [00:00<00:00, 39.52it/s]
Test: [   0/  26]	Loss 0.733 (0.733)	test_acc   0.47 (  0.47)	test_minacc   0.52 (  0.52)	test_majacc   0.46 (  0.46)	Loss_d 0.733 (0.733)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.46 (  0.46)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.745 (0.740)	test_acc   0.44 (  0.45)	test_minacc   0.53 (  0.49)	test_majacc   0.43 (  0.44)	Loss_d 0.745 (0.740)	test_acc_d   0.44 (  0.45)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.43 (  0.44)	test_corr_d  -0.05 (  0.01)
Test: [  20/  26]	Loss 0.753 (0.736)	test_acc   0.43 (  0.45)	test_minacc   0.57 (  0.51)	test_majacc   0.41 (  0.44)	Loss_d 0.753 (0.736)	test_acc_d   0.43 (  0.45)	test_minacc_d   0.57 (  0.51)	test_majacc_d   0.41 (  0.44)	test_corr_d  -0.07 (  0.01)
Test: [  26/  26]	Loss 0.736 (0.737)	test_acc   0.45 (  0.45)	test_minacc   0.43 (  0.50)	test_majacc   0.45 (  0.44)	Loss_d 0.736 (0.737)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.45 (  0.44)	test_corr_d   0.04 (  0.01)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.62it/s]
Test: [  0/  1]	Loss 0.784 (0.784)	test_acc   0.45 (  0.45)	test_minacc   0.44 (  0.44)	test_majacc   0.50 (  0.50)	Loss_d 0.784 (0.784)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Test: [  1/  1]	Loss 0.784 (0.784)	test_acc   0.45 (  0.45)	test_minacc   0.44 (  0.44)	test_majacc   0.50 (  0.50)	Loss_d 0.784 (0.784)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.17 (  0.17)
Overall Timing[ 16/  1]	epoch_time 0.0401 (0.0426)	validation_time 0.0004 (0.0010)	train_time 0.0396 (0.0399)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.45180000546574595, 0.45000001788139343)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.93it/s] 12%|#1        | 3/26 [00:00<00:01, 13.42it/s] 23%|##3       | 6/26 [00:00<00:01, 19.81it/s] 38%|###8      | 10/26 [00:00<00:00, 24.53it/s] 50%|#####     | 13/26 [00:00<00:00, 26.26it/s] 65%|######5   | 17/26 [00:00<00:00, 27.44it/s] 81%|########  | 21/26 [00:00<00:00, 28.75it/s] 96%|#########6| 25/26 [00:00<00:00, 29.19it/s]100%|##########| 26/26 [00:01<00:00, 24.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0043, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(1.9692e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.006 (0.006)	train_nll   0.58 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.74 (  0.64)	train_minacc   0.59 (  0.49)	train_majacc   0.78 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.93it/s] 27%|##6       | 7/26 [00:00<00:00, 37.56it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.56it/s] 50%|#####     | 13/26 [00:00<00:00, 43.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.19it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.19it/s] 96%|#########6| 25/26 [00:00<00:00, 48.54it/s]100%|##########| 26/26 [00:00<00:00, 41.99it/s]
Test: [   0/  26]	Loss 0.570 (0.570)	test_acc   0.73 (  0.73)	test_minacc   0.44 (  0.44)	test_majacc   0.78 (  0.78)	Loss_d 0.570 (0.570)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.57 (  0.57)
Test: [  10/  26]	Loss 0.559 (0.568)	test_acc   0.74 (  0.73)	test_minacc   0.51 (  0.46)	test_majacc   0.78 (  0.77)	Loss_d 0.559 (0.568)	test_acc_d   0.74 (  0.73)	test_minacc_d   0.51 (  0.46)	test_majacc_d   0.78 (  0.77)	test_corr_d   0.58 (  0.56)
Test: [  20/  26]	Loss 0.567 (0.568)	test_acc   0.75 (  0.73)	test_minacc   0.43 (  0.48)	test_majacc   0.79 (  0.78)	Loss_d 0.567 (0.568)	test_acc_d   0.75 (  0.73)	test_minacc_d   0.43 (  0.48)	test_majacc_d   0.79 (  0.78)	test_corr_d   0.57 (  0.56)
Test: [  26/  26]	Loss 0.576 (0.569)	test_acc   0.72 (  0.73)	test_minacc   0.52 (  0.49)	test_majacc   0.78 (  0.78)	Loss_d 0.576 (0.569)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.52 (  0.49)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.48 (  0.56)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.58it/s]
Test: [  0/  1]	Loss 0.773 (0.773)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.83 (  0.83)	Loss_d 0.773 (0.773)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.22 (  0.22)
Test: [  1/  1]	Loss 0.773 (0.773)	test_acc   0.50 (  0.50)	test_minacc   0.46 (  0.46)	test_majacc   0.83 (  0.83)	Loss_d 0.773 (0.773)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.83 (  0.83)	test_corr_d   0.22 (  0.22)
Overall Timing[ 17/  1]	epoch_time 0.0378 (0.0424)	validation_time 0.0004 (0.0010)	train_time 0.0374 (0.0397)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.7319000313878059, 0.49500003457069397)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.31it/s] 15%|#5        | 4/26 [00:00<00:01, 17.11it/s] 31%|###       | 8/26 [00:00<00:00, 23.45it/s] 46%|####6     | 12/26 [00:00<00:00, 26.41it/s] 62%|######1   | 16/26 [00:00<00:00, 28.22it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.34it/s] 88%|########8 | 23/26 [00:00<00:00, 29.28it/s]100%|##########| 26/26 [00:01<00:00, 25.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0037, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: tensor(4.8061e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.003 (0.003)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.63 (  0.62)	train_minacc   0.39 (  0.56)	train_majacc   0.70 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.71it/s] 31%|###       | 8/26 [00:00<00:00, 39.32it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.32it/s] 50%|#####     | 13/26 [00:00<00:00, 42.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.12it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.12it/s] 96%|#########6| 25/26 [00:00<00:00, 48.44it/s]100%|##########| 26/26 [00:00<00:00, 41.64it/s]
Test: [   0/  26]	Loss 0.559 (0.559)	test_acc   0.70 (  0.70)	test_minacc   0.37 (  0.37)	test_majacc   0.76 (  0.76)	Loss_d 0.559 (0.559)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.61 (  0.61)
Test: [  10/  26]	Loss 0.531 (0.545)	test_acc   0.73 (  0.73)	test_minacc   0.44 (  0.44)	test_majacc   0.78 (  0.78)	Loss_d 0.531 (0.545)	test_acc_d   0.73 (  0.73)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.66 (  0.62)
Test: [  20/  26]	Loss 0.533 (0.547)	test_acc   0.76 (  0.73)	test_minacc   0.41 (  0.43)	test_majacc   0.80 (  0.78)	Loss_d 0.533 (0.547)	test_acc_d   0.76 (  0.73)	test_minacc_d   0.41 (  0.43)	test_majacc_d   0.80 (  0.78)	test_corr_d   0.67 (  0.62)
Test: [  26/  26]	Loss 0.582 (0.548)	test_acc   0.72 (  0.73)	test_minacc   0.50 (  0.44)	test_majacc   0.78 (  0.78)	Loss_d 0.582 (0.548)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.50 (  0.44)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.54 (  0.61)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.60it/s]
Test: [  0/  1]	Loss 0.820 (0.820)	test_acc   0.46 (  0.46)	test_minacc   0.42 (  0.42)	test_majacc   0.76 (  0.76)	Loss_d 0.820 (0.820)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.35 (  0.35)
Test: [  1/  1]	Loss 0.820 (0.820)	test_acc   0.46 (  0.46)	test_minacc   0.42 (  0.42)	test_majacc   0.76 (  0.76)	Loss_d 0.820 (0.820)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.35 (  0.35)
Overall Timing[ 18/  1]	epoch_time 0.0371 (0.0421)	validation_time 0.0004 (0.0009)	train_time 0.0367 (0.0396)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.7273000326156617, 0.4570000171661377)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.22it/s] 15%|#5        | 4/26 [00:00<00:01, 17.37it/s] 31%|###       | 8/26 [00:00<00:00, 23.39it/s] 42%|####2     | 11/26 [00:00<00:00, 25.44it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.51it/s] 69%|######9   | 18/26 [00:00<00:00, 27.95it/s] 85%|########4 | 22/26 [00:00<00:00, 29.08it/s]100%|##########| 26/26 [00:00<00:00, 29.76it/s]100%|##########| 26/26 [00:01<00:00, 25.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0032, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.009 (0.004)	train_nll   0.71 (  0.62)	train_penalty   0.01 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.58 (  0.65)	train_minacc   0.52 (  0.50)	train_majacc   0.59 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.69it/s] 23%|##3       | 6/26 [00:00<00:00, 31.26it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.26it/s] 46%|####6     | 12/26 [00:00<00:00, 42.35it/s] 69%|######9   | 18/26 [00:00<00:00, 44.40it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.40it/s] 92%|#########2| 24/26 [00:00<00:00, 48.89it/s]100%|##########| 26/26 [00:00<00:00, 40.79it/s]
Test: [   0/  26]	Loss 0.589 (0.589)	test_acc   0.70 (  0.70)	test_minacc   0.40 (  0.40)	test_majacc   0.75 (  0.75)	Loss_d 0.589 (0.589)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.532 (0.555)	test_acc   0.76 (  0.74)	test_minacc   0.49 (  0.46)	test_majacc   0.81 (  0.79)	Loss_d 0.532 (0.555)	test_acc_d   0.76 (  0.74)	test_minacc_d   0.49 (  0.46)	test_majacc_d   0.81 (  0.79)	test_corr_d   0.59 (  0.56)
Test: [  20/  26]	Loss 0.560 (0.557)	test_acc   0.72 (  0.74)	test_minacc   0.43 (  0.46)	test_majacc   0.76 (  0.78)	Loss_d 0.560 (0.557)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.43 (  0.46)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.55 (  0.55)
Test: [  26/  26]	Loss 0.563 (0.556)	test_acc   0.72 (  0.74)	test_minacc   0.52 (  0.47)	test_majacc   0.78 (  0.78)	Loss_d 0.563 (0.556)	test_acc_d   0.72 (  0.74)	test_minacc_d   0.52 (  0.47)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.47 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.94it/s]
Test: [  0/  1]	Loss 0.810 (0.810)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.75 (  0.75)	Loss_d 0.810 (0.810)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.810 (0.810)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.75 (  0.75)	Loss_d 0.810 (0.810)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.20 (  0.20)
Overall Timing[ 19/  1]	epoch_time 0.0368 (0.0418)	validation_time 0.0004 (0.0009)	train_time 0.0364 (0.0394)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.7350000290870666, 0.49400001764297485)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  3.83it/s] 15%|#5        | 4/26 [00:00<00:01, 12.62it/s] 27%|##6       | 7/26 [00:00<00:01, 18.28it/s] 42%|####2     | 11/26 [00:00<00:00, 23.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.87it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.59it/s] 88%|########8 | 23/26 [00:00<00:00, 28.39it/s]100%|##########| 26/26 [00:01<00:00, 22.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0026, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.003 (0.002)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.61 (  0.62)	train_minacc   0.52 (  0.59)	train_majacc   0.63 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 27%|##6       | 7/26 [00:00<00:00, 31.69it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.69it/s] 50%|#####     | 13/26 [00:00<00:00, 38.96it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.83it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.83it/s] 96%|#########6| 25/26 [00:00<00:00, 46.85it/s]100%|##########| 26/26 [00:00<00:00, 38.41it/s]
Test: [   0/  26]	Loss 0.605 (0.605)	test_acc   0.68 (  0.68)	test_minacc   0.39 (  0.39)	test_majacc   0.74 (  0.74)	Loss_d 0.605 (0.605)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.60 (  0.60)
Test: [  10/  26]	Loss 0.580 (0.594)	test_acc   0.76 (  0.71)	test_minacc   0.44 (  0.41)	test_majacc   0.81 (  0.76)	Loss_d 0.580 (0.594)	test_acc_d   0.76 (  0.71)	test_minacc_d   0.44 (  0.41)	test_majacc_d   0.81 (  0.76)	test_corr_d   0.62 (  0.61)
Test: [  20/  26]	Loss 0.596 (0.595)	test_acc   0.70 (  0.71)	test_minacc   0.41 (  0.42)	test_majacc   0.74 (  0.76)	Loss_d 0.596 (0.595)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.41 (  0.42)	test_majacc_d   0.74 (  0.76)	test_corr_d   0.63 (  0.60)
Test: [  26/  26]	Loss 0.595 (0.595)	test_acc   0.70 (  0.71)	test_minacc   0.43 (  0.42)	test_majacc   0.78 (  0.76)	Loss_d 0.595 (0.595)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.43 (  0.42)	test_majacc_d   0.78 (  0.76)	test_corr_d   0.56 (  0.60)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.59it/s]
Test: [  0/  1]	Loss 0.760 (0.760)	test_acc   0.42 (  0.42)	test_minacc   0.39 (  0.39)	test_majacc   0.73 (  0.73)	Loss_d 0.760 (0.760)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.33 (  0.33)
Test: [  1/  1]	Loss 0.760 (0.760)	test_acc   0.42 (  0.42)	test_minacc   0.39 (  0.39)	test_majacc   0.73 (  0.73)	Loss_d 0.760 (0.760)	test_acc_d   0.42 (  0.42)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.33 (  0.33)
Overall Timing[ 20/  1]	epoch_time 0.0378 (0.0416)	validation_time 0.0004 (0.0009)	train_time 0.0374 (0.0393)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.7113000295758247, 0.42000001668930054)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.08it/s] 15%|#5        | 4/26 [00:00<00:01, 18.30it/s] 31%|###       | 8/26 [00:00<00:00, 24.21it/s] 46%|####6     | 12/26 [00:00<00:00, 27.15it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.82it/s] 69%|######9   | 18/26 [00:00<00:00, 28.47it/s] 85%|########4 | 22/26 [00:00<00:00, 29.48it/s]100%|##########| 26/26 [00:00<00:00, 30.24it/s]100%|##########| 26/26 [00:01<00:00, 25.70it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0023, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.003 (0.003)	train_nll   0.61 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.64 (  0.60)	train_minacc   0.46 (  0.52)	train_majacc   0.69 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.53it/s] 23%|##3       | 6/26 [00:00<00:00, 28.63it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.63it/s] 46%|####6     | 12/26 [00:00<00:00, 40.78it/s] 69%|######9   | 18/26 [00:00<00:00, 43.98it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.98it/s] 92%|#########2| 24/26 [00:00<00:00, 48.26it/s]100%|##########| 26/26 [00:00<00:00, 39.71it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.67 (  0.67)	test_minacc   0.42 (  0.42)	test_majacc   0.72 (  0.72)	Loss_d 0.590 (0.590)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.55 (  0.55)
Test: [  10/  26]	Loss 0.566 (0.575)	test_acc   0.70 (  0.70)	test_minacc   0.47 (  0.47)	test_majacc   0.73 (  0.74)	Loss_d 0.566 (0.575)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.73 (  0.74)	test_corr_d   0.57 (  0.55)
Test: [  20/  26]	Loss 0.568 (0.579)	test_acc   0.69 (  0.69)	test_minacc   0.35 (  0.46)	test_majacc   0.74 (  0.73)	Loss_d 0.568 (0.579)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.35 (  0.46)	test_majacc_d   0.74 (  0.73)	test_corr_d   0.61 (  0.55)
Test: [  26/  26]	Loss 0.587 (0.579)	test_acc   0.66 (  0.69)	test_minacc   0.48 (  0.46)	test_majacc   0.71 (  0.73)	Loss_d 0.587 (0.579)	test_acc_d   0.66 (  0.69)	test_minacc_d   0.48 (  0.46)	test_majacc_d   0.71 (  0.73)	test_corr_d   0.49 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.01it/s]
Test: [  0/  1]	Loss 0.802 (0.802)	test_acc   0.47 (  0.47)	test_minacc   0.44 (  0.44)	test_majacc   0.75 (  0.75)	Loss_d 0.802 (0.802)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.34 (  0.34)
Test: [  1/  1]	Loss 0.802 (0.802)	test_acc   0.47 (  0.47)	test_minacc   0.44 (  0.44)	test_majacc   0.75 (  0.75)	Loss_d 0.802 (0.802)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.34 (  0.34)
Overall Timing[ 21/  1]	epoch_time 0.0389 (0.0415)	validation_time 0.0004 (0.0009)	train_time 0.0385 (0.0393)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6903000316023826, 0.47300001978874207)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.25it/s] 19%|#9        | 5/26 [00:00<00:01, 19.28it/s] 35%|###4      | 9/26 [00:00<00:00, 24.41it/s] 50%|#####     | 13/26 [00:00<00:00, 27.33it/s] 65%|######5   | 17/26 [00:00<00:00, 28.71it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.06it/s] 88%|########8 | 23/26 [00:00<00:00, 28.71it/s]100%|##########| 26/26 [00:01<00:00, 25.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0016, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.003 (0.004)	train_nll   0.64 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.66 (  0.65)	train_minacc   0.41 (  0.48)	train_majacc   0.72 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.32it/s] 27%|##6       | 7/26 [00:00<00:00, 33.94it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.94it/s] 50%|#####     | 13/26 [00:00<00:00, 40.67it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.72it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.72it/s] 96%|#########6| 25/26 [00:00<00:00, 48.51it/s]100%|##########| 26/26 [00:00<00:00, 39.66it/s]
Test: [   0/  26]	Loss 0.680 (0.680)	test_acc   0.55 (  0.55)	test_minacc   0.48 (  0.48)	test_majacc   0.56 (  0.56)	Loss_d 0.680 (0.680)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.668 (0.680)	test_acc   0.57 (  0.53)	test_minacc   0.45 (  0.44)	test_majacc   0.59 (  0.54)	Loss_d 0.668 (0.680)	test_acc_d   0.57 (  0.53)	test_minacc_d   0.45 (  0.44)	test_majacc_d   0.59 (  0.54)	test_corr_d   0.27 (  0.20)
Test: [  20/  26]	Loss 0.678 (0.680)	test_acc   0.53 (  0.53)	test_minacc   0.48 (  0.44)	test_majacc   0.54 (  0.54)	Loss_d 0.678 (0.680)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.48 (  0.44)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.20 (  0.19)
Test: [  26/  26]	Loss 0.692 (0.680)	test_acc   0.49 (  0.53)	test_minacc   0.44 (  0.44)	test_majacc   0.50 (  0.55)	Loss_d 0.692 (0.680)	test_acc_d   0.49 (  0.53)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.50 (  0.55)	test_corr_d   0.16 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.03it/s]
Test: [  0/  1]	Loss 0.719 (0.719)	test_acc   0.47 (  0.47)	test_minacc   0.46 (  0.46)	test_majacc   0.56 (  0.56)	Loss_d 0.719 (0.719)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.15 (  0.15)
Test: [  1/  1]	Loss 0.719 (0.719)	test_acc   0.47 (  0.47)	test_minacc   0.46 (  0.46)	test_majacc   0.56 (  0.56)	Loss_d 0.719 (0.719)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.15 (  0.15)
Overall Timing[ 22/  1]	epoch_time 0.0377 (0.0413)	validation_time 0.0007 (0.0009)	train_time 0.0370 (0.0392)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5292000165581703, 0.4690000116825104)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.57it/s] 15%|#5        | 4/26 [00:00<00:01, 16.33it/s] 31%|###       | 8/26 [00:00<00:00, 22.94it/s] 46%|####6     | 12/26 [00:00<00:00, 26.18it/s] 62%|######1   | 16/26 [00:00<00:00, 27.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.10it/s] 88%|########8 | 23/26 [00:00<00:00, 28.51it/s]100%|##########| 26/26 [00:01<00:00, 28.59it/s]100%|##########| 26/26 [00:01<00:00, 24.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.001 (0.003)	train_nll   0.68 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.58 (  0.63)	train_minacc   0.59 (  0.54)	train_majacc   0.58 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.47it/s] 27%|##6       | 7/26 [00:00<00:00, 28.86it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.86it/s] 50%|#####     | 13/26 [00:00<00:00, 37.13it/s] 73%|#######3  | 19/26 [00:00<00:00, 42.87it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 42.87it/s] 96%|#########6| 25/26 [00:00<00:00, 44.46it/s]100%|##########| 26/26 [00:00<00:00, 36.80it/s]
Test: [   0/  26]	Loss 0.679 (0.679)	test_acc   0.60 (  0.60)	test_minacc   0.53 (  0.53)	test_majacc   0.61 (  0.61)	Loss_d 0.679 (0.679)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.664 (0.668)	test_acc   0.60 (  0.61)	test_minacc   0.60 (  0.55)	test_majacc   0.60 (  0.62)	Loss_d 0.664 (0.668)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.60 (  0.55)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.35 (  0.32)
Test: [  20/  26]	Loss 0.673 (0.672)	test_acc   0.60 (  0.60)	test_minacc   0.43 (  0.54)	test_majacc   0.62 (  0.61)	Loss_d 0.673 (0.672)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.43 (  0.54)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.35 (  0.30)
Test: [  26/  26]	Loss 0.690 (0.674)	test_acc   0.62 (  0.60)	test_minacc   0.56 (  0.54)	test_majacc   0.64 (  0.61)	Loss_d 0.690 (0.674)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.56 (  0.54)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.24 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.79it/s]
Test: [  0/  1]	Loss 0.729 (0.729)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.59 (  0.59)	Loss_d 0.729 (0.729)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.729 (0.729)	test_acc   0.54 (  0.54)	test_minacc   0.54 (  0.54)	test_majacc   0.59 (  0.59)	Loss_d 0.729 (0.729)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 23/  1]	epoch_time 0.0382 (0.0412)	validation_time 0.0005 (0.0008)	train_time 0.0378 (0.0391)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6017000070214271, 0.5430000424385071)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.33it/s] 19%|#9        | 5/26 [00:00<00:01, 19.59it/s] 31%|###       | 8/26 [00:00<00:00, 23.18it/s] 46%|####6     | 12/26 [00:00<00:00, 26.29it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.97it/s] 88%|########8 | 23/26 [00:00<00:00, 29.16it/s]100%|##########| 26/26 [00:01<00:00, 25.18it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: tensor(0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.001 (0.003)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.53 (  0.61)	train_minacc   0.65 (  0.57)	train_majacc   0.50 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.48it/s] 31%|###       | 8/26 [00:00<00:00, 39.41it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.41it/s] 50%|#####     | 13/26 [00:00<00:00, 43.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.92it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.92it/s] 96%|#########6| 25/26 [00:00<00:00, 47.63it/s]100%|##########| 26/26 [00:00<00:00, 40.35it/s]
Test: [   0/  26]	Loss 0.693 (0.693)	test_acc   0.52 (  0.52)	test_minacc   0.53 (  0.53)	test_majacc   0.52 (  0.52)	Loss_d 0.693 (0.693)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.659 (0.668)	test_acc   0.56 (  0.54)	test_minacc   0.49 (  0.55)	test_majacc   0.57 (  0.54)	Loss_d 0.659 (0.668)	test_acc_d   0.56 (  0.54)	test_minacc_d   0.49 (  0.55)	test_majacc_d   0.57 (  0.54)	test_corr_d   0.28 (  0.26)
Test: [  20/  26]	Loss 0.677 (0.667)	test_acc   0.53 (  0.55)	test_minacc   0.72 (  0.58)	test_majacc   0.50 (  0.55)	Loss_d 0.677 (0.667)	test_acc_d   0.53 (  0.55)	test_minacc_d   0.72 (  0.58)	test_majacc_d   0.50 (  0.55)	test_corr_d   0.22 (  0.24)
Test: [  26/  26]	Loss 0.677 (0.666)	test_acc   0.53 (  0.55)	test_minacc   0.50 (  0.58)	test_majacc   0.54 (  0.55)	Loss_d 0.677 (0.666)	test_acc_d   0.53 (  0.55)	test_minacc_d   0.50 (  0.58)	test_majacc_d   0.54 (  0.55)	test_corr_d   0.16 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.41it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.52 (  0.52)	Loss_d 0.690 (0.690)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.20 ( -0.20)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.52 (  0.52)	Loss_d 0.690 (0.690)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.20 ( -0.20)
Overall Timing[ 24/  1]	epoch_time 0.0395 (0.0411)	validation_time 0.0004 (0.0008)	train_time 0.0391 (0.0391)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5519000098705292, 0.5750000476837158)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.05it/s] 15%|#5        | 4/26 [00:00<00:01, 14.43it/s] 27%|##6       | 7/26 [00:00<00:00, 19.64it/s] 42%|####2     | 11/26 [00:00<00:00, 24.13it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.41it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.97it/s] 88%|########8 | 23/26 [00:00<00:00, 29.26it/s]100%|##########| 26/26 [00:01<00:00, 23.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.54 (  0.61)	train_minacc   0.52 (  0.58)	train_majacc   0.54 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.77it/s] 23%|##3       | 6/26 [00:00<00:00, 31.33it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.33it/s] 46%|####6     | 12/26 [00:00<00:00, 42.12it/s] 65%|######5   | 17/26 [00:00<00:00, 42.85it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.85it/s] 88%|########8 | 23/26 [00:00<00:00, 47.62it/s]100%|##########| 26/26 [00:00<00:00, 39.31it/s]
Test: [   0/  26]	Loss 0.647 (0.647)	test_acc   0.63 (  0.63)	test_minacc   0.48 (  0.48)	test_majacc   0.66 (  0.66)	Loss_d 0.647 (0.647)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.629 (0.632)	test_acc   0.64 (  0.64)	test_minacc   0.53 (  0.55)	test_majacc   0.66 (  0.66)	Loss_d 0.629 (0.632)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.53 (  0.55)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.34 (  0.33)
Test: [  20/  26]	Loss 0.640 (0.633)	test_acc   0.63 (  0.64)	test_minacc   0.50 (  0.57)	test_majacc   0.64 (  0.65)	Loss_d 0.640 (0.633)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.50 (  0.57)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.32 (  0.31)
Test: [  26/  26]	Loss 0.648 (0.634)	test_acc   0.61 (  0.64)	test_minacc   0.52 (  0.57)	test_majacc   0.64 (  0.65)	Loss_d 0.648 (0.634)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.52 (  0.57)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.24 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.32it/s]
Test: [  0/  1]	Loss 0.689 (0.689)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.62 (  0.62)	Loss_d 0.689 (0.689)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.689 (0.689)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.62 (  0.62)	Loss_d 0.689 (0.689)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 25/  1]	epoch_time 0.0393 (0.0411)	validation_time 0.0004 (0.0008)	train_time 0.0388 (0.0391)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.640100015103817, 0.562000036239624)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.40it/s] 15%|#5        | 4/26 [00:00<00:01, 15.94it/s] 31%|###       | 8/26 [00:00<00:00, 22.49it/s] 46%|####6     | 12/26 [00:00<00:00, 25.70it/s] 62%|######1   | 16/26 [00:00<00:00, 27.66it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.89it/s] 92%|#########2| 24/26 [00:00<00:00, 29.51it/s]100%|##########| 26/26 [00:01<00:00, 24.77it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.59 (  0.60)	train_minacc   0.54 (  0.60)	train_majacc   0.61 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.19it/s] 27%|##6       | 7/26 [00:00<00:00, 32.84it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.84it/s] 46%|####6     | 12/26 [00:00<00:00, 37.95it/s] 65%|######5   | 17/26 [00:00<00:00, 39.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.77it/s] 88%|########8 | 23/26 [00:00<00:00, 44.44it/s]100%|##########| 26/26 [00:00<00:00, 37.16it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.61 (  0.61)	test_minacc   0.52 (  0.52)	test_majacc   0.62 (  0.62)	Loss_d 0.662 (0.662)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.652 (0.647)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.54)	test_majacc   0.61 (  0.63)	Loss_d 0.652 (0.647)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.40 (  0.39)
Test: [  20/  26]	Loss 0.653 (0.652)	test_acc   0.61 (  0.61)	test_minacc   0.39 (  0.53)	test_majacc   0.64 (  0.62)	Loss_d 0.653 (0.652)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.39 (  0.53)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.40 (  0.38)
Test: [  26/  26]	Loss 0.672 (0.653)	test_acc   0.60 (  0.61)	test_minacc   0.57 (  0.54)	test_majacc   0.61 (  0.62)	Loss_d 0.672 (0.653)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.57 (  0.54)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.30 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.31it/s]
Test: [  0/  1]	Loss 0.741 (0.741)	test_acc   0.53 (  0.53)	test_minacc   0.52 (  0.52)	test_majacc   0.63 (  0.63)	Loss_d 0.741 (0.741)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.741 (0.741)	test_acc   0.53 (  0.53)	test_minacc   0.52 (  0.52)	test_majacc   0.63 (  0.63)	Loss_d 0.741 (0.741)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.04 (  0.04)
Overall Timing[ 26/  1]	epoch_time 0.0388 (0.0410)	validation_time 0.0004 (0.0008)	train_time 0.0384 (0.0391)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6092000060677528, 0.5320000052452087)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.13it/s] 15%|#5        | 4/26 [00:00<00:01, 18.19it/s] 27%|##6       | 7/26 [00:00<00:00, 22.92it/s] 42%|####2     | 11/26 [00:00<00:00, 26.11it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.06it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.22it/s] 88%|########8 | 23/26 [00:00<00:00, 29.36it/s]100%|##########| 26/26 [00:00<00:00, 29.47it/s]100%|##########| 26/26 [00:01<00:00, 25.36it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: tensor(0.0001, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.001 (0.002)	train_nll   0.63 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.64 (  0.60)	train_minacc   0.61 (  0.55)	train_majacc   0.65 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.10it/s] 27%|##6       | 7/26 [00:00<00:00, 30.91it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.91it/s] 46%|####6     | 12/26 [00:00<00:00, 38.43it/s] 65%|######5   | 17/26 [00:00<00:00, 38.77it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.77it/s] 85%|########4 | 22/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 36.39it/s]
Test: [   0/  26]	Loss 0.683 (0.683)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.683 (0.683)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.637 (0.658)	test_acc   0.52 (  0.51)	test_minacc   0.47 (  0.49)	test_majacc   0.53 (  0.51)	Loss_d 0.637 (0.658)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.44 (  0.42)
Test: [  20/  26]	Loss 0.654 (0.657)	test_acc   0.52 (  0.51)	test_minacc   0.59 (  0.50)	test_majacc   0.51 (  0.52)	Loss_d 0.654 (0.657)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.46 (  0.41)
Test: [  26/  26]	Loss 0.662 (0.656)	test_acc   0.52 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.52 (  0.52)	Loss_d 0.662 (0.656)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.34 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.06it/s]
Test: [  0/  1]	Loss 0.777 (0.777)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.52 (  0.52)	Loss_d 0.777 (0.777)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.777 (0.777)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.52 (  0.52)	Loss_d 0.777 (0.777)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.04 (  0.04)
Overall Timing[ 27/  1]	epoch_time 0.0401 (0.0410)	validation_time 0.0004 (0.0008)	train_time 0.0397 (0.0391)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5143000116050244, 0.5020000338554382)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.40it/s] 15%|#5        | 4/26 [00:00<00:01, 20.14it/s] 27%|##6       | 7/26 [00:00<00:00, 24.03it/s] 38%|###8      | 10/26 [00:00<00:00, 26.30it/s] 50%|#####     | 13/26 [00:00<00:00, 27.19it/s] 65%|######5   | 17/26 [00:00<00:00, 28.46it/s] 81%|########  | 21/26 [00:00<00:00, 29.26it/s] 92%|#########2| 24/26 [00:00<00:00, 29.30it/s]100%|##########| 26/26 [00:01<00:00, 25.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.002 (0.002)	train_nll   0.68 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.52 (  0.62)	train_minacc   0.54 (  0.56)	train_majacc   0.52 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 26.10it/s] 35%|###4      | 9/26 [00:00<00:00, 41.03it/s]                                               35%|###4      | 9/26 [00:00<00:00, 41.03it/s] 58%|#####7    | 15/26 [00:00<00:00, 45.12it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 45.12it/s] 81%|########  | 21/26 [00:00<00:00, 48.86it/s]100%|##########| 26/26 [00:00<00:00, 48.90it/s]100%|##########| 26/26 [00:00<00:00, 42.31it/s]
Test: [   0/  26]	Loss 0.677 (0.677)	test_acc   0.55 (  0.55)	test_minacc   0.47 (  0.47)	test_majacc   0.56 (  0.56)	Loss_d 0.677 (0.677)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.653 (0.667)	test_acc   0.57 (  0.55)	test_minacc   0.47 (  0.50)	test_majacc   0.59 (  0.55)	Loss_d 0.653 (0.667)	test_acc_d   0.57 (  0.55)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.59 (  0.55)	test_corr_d   0.36 (  0.33)
Test: [  20/  26]	Loss 0.665 (0.664)	test_acc   0.57 (  0.55)	test_minacc   0.65 (  0.51)	test_majacc   0.56 (  0.56)	Loss_d 0.665 (0.664)	test_acc_d   0.57 (  0.55)	test_minacc_d   0.65 (  0.51)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.33 (  0.32)
Test: [  26/  26]	Loss 0.665 (0.664)	test_acc   0.55 (  0.55)	test_minacc   0.46 (  0.51)	test_majacc   0.58 (  0.56)	Loss_d 0.665 (0.664)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.46 (  0.51)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.27 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.74it/s]
Test: [  0/  1]	Loss 0.719 (0.719)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.57 (  0.57)	Loss_d 0.719 (0.719)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.719 (0.719)	test_acc   0.51 (  0.51)	test_minacc   0.50 (  0.50)	test_majacc   0.57 (  0.57)	Loss_d 0.719 (0.719)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.01 (  0.01)
Overall Timing[ 28/  1]	epoch_time 0.0383 (0.0409)	validation_time 0.0004 (0.0008)	train_time 0.0379 (0.0391)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5549000142216682, 0.5060000419616699)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.53it/s] 15%|#5        | 4/26 [00:00<00:01, 15.86it/s] 27%|##6       | 7/26 [00:00<00:00, 20.63it/s] 38%|###8      | 10/26 [00:00<00:00, 23.45it/s] 50%|#####     | 13/26 [00:00<00:00, 25.07it/s] 62%|######1   | 16/26 [00:00<00:00, 25.90it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.45it/s] 85%|########4 | 22/26 [00:00<00:00, 27.08it/s]100%|##########| 26/26 [00:01<00:00, 28.49it/s]100%|##########| 26/26 [00:01<00:00, 23.13it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.001 (0.002)	train_nll   0.62 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.64 (  0.59)	train_minacc   0.56 (  0.57)	train_majacc   0.67 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.68it/s] 23%|##3       | 6/26 [00:00<00:00, 29.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.49it/s] 42%|####2     | 11/26 [00:00<00:00, 37.85it/s] 65%|######5   | 17/26 [00:00<00:00, 44.63it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.63it/s] 85%|########4 | 22/26 [00:00<00:00, 46.29it/s]100%|##########| 26/26 [00:00<00:00, 39.88it/s]
Test: [   0/  26]	Loss 0.622 (0.622)	test_acc   0.65 (  0.65)	test_minacc   0.53 (  0.53)	test_majacc   0.67 (  0.67)	Loss_d 0.622 (0.622)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.598 (0.608)	test_acc   0.68 (  0.67)	test_minacc   0.64 (  0.57)	test_majacc   0.69 (  0.68)	Loss_d 0.598 (0.608)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.40 (  0.37)
Test: [  20/  26]	Loss 0.613 (0.610)	test_acc   0.65 (  0.66)	test_minacc   0.46 (  0.57)	test_majacc   0.67 (  0.67)	Loss_d 0.613 (0.610)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.46 (  0.57)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.40 (  0.36)
Test: [  26/  26]	Loss 0.625 (0.611)	test_acc   0.64 (  0.66)	test_minacc   0.63 (  0.58)	test_majacc   0.65 (  0.67)	Loss_d 0.625 (0.611)	test_acc_d   0.64 (  0.66)	test_minacc_d   0.63 (  0.58)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.28 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.86it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.698 (0.698)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.67 (  0.67)	Loss_d 0.698 (0.698)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.05 ( -0.05)
Overall Timing[ 29/  1]	epoch_time 0.0382 (0.0408)	validation_time 0.0004 (0.0008)	train_time 0.0378 (0.0390)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6600000245571136, 0.5680000185966492)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.07it/s] 15%|#5        | 4/26 [00:00<00:01, 14.85it/s] 27%|##6       | 7/26 [00:00<00:00, 20.27it/s] 42%|####2     | 11/26 [00:00<00:00, 23.99it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.36it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.79it/s] 88%|########8 | 23/26 [00:00<00:00, 28.62it/s]100%|##########| 26/26 [00:01<00:00, 23.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.001 (0.002)	train_nll   0.68 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.51 (  0.61)	train_minacc   0.63 (  0.59)	train_majacc   0.47 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.58it/s] 27%|##6       | 7/26 [00:00<00:00, 36.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.14it/s] 50%|#####     | 13/26 [00:00<00:00, 42.54it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.72it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.72it/s] 96%|#########6| 25/26 [00:00<00:00, 49.35it/s]100%|##########| 26/26 [00:00<00:00, 41.76it/s]
Test: [   0/  26]	Loss 0.683 (0.683)	test_acc   0.53 (  0.53)	test_minacc   0.63 (  0.63)	test_majacc   0.51 (  0.51)	Loss_d 0.683 (0.683)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.08 (  0.08)
Test: [  10/  26]	Loss 0.672 (0.675)	test_acc   0.55 (  0.53)	test_minacc   0.67 (  0.67)	test_majacc   0.53 (  0.50)	Loss_d 0.672 (0.675)	test_acc_d   0.55 (  0.53)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.13 (  0.11)
Test: [  20/  26]	Loss 0.679 (0.674)	test_acc   0.47 (  0.53)	test_minacc   0.72 (  0.68)	test_majacc   0.44 (  0.50)	Loss_d 0.679 (0.674)	test_acc_d   0.47 (  0.53)	test_minacc_d   0.72 (  0.68)	test_majacc_d   0.44 (  0.50)	test_corr_d   0.08 (  0.10)
Test: [  26/  26]	Loss 0.675 (0.674)	test_acc   0.52 (  0.53)	test_minacc   0.63 (  0.68)	test_majacc   0.48 (  0.50)	Loss_d 0.675 (0.674)	test_acc_d   0.52 (  0.53)	test_minacc_d   0.63 (  0.68)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.02 (  0.10)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.63it/s]
Test: [  0/  1]	Loss 0.664 (0.664)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.51 (  0.51)	Loss_d 0.664 (0.664)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.23 ( -0.23)
Test: [  1/  1]	Loss 0.664 (0.664)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.51 (  0.51)	Loss_d 0.664 (0.664)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.23 ( -0.23)
Overall Timing[ 30/  1]	epoch_time 0.0379 (0.0407)	validation_time 0.0004 (0.0007)	train_time 0.0375 (0.0390)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5292000130414963, 0.6270000338554382)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.98it/s] 15%|#5        | 4/26 [00:00<00:01, 16.11it/s] 31%|###       | 8/26 [00:00<00:00, 22.53it/s] 46%|####6     | 12/26 [00:00<00:00, 25.88it/s] 62%|######1   | 16/26 [00:00<00:00, 27.91it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.12it/s] 88%|########8 | 23/26 [00:00<00:00, 29.19it/s]100%|##########| 26/26 [00:01<00:00, 28.99it/s]100%|##########| 26/26 [00:01<00:00, 24.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.62 (  0.57)	train_minacc   0.67 (  0.58)	train_majacc   0.61 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.52it/s] 23%|##3       | 6/26 [00:00<00:00, 28.27it/s]                                               23%|##3       | 6/26 [00:00<00:00, 28.27it/s] 42%|####2     | 11/26 [00:00<00:00, 37.16it/s] 62%|######1   | 16/26 [00:00<00:00, 40.32it/s]                                                62%|######1   | 16/26 [00:00<00:00, 40.32it/s] 85%|########4 | 22/26 [00:00<00:00, 46.12it/s]100%|##########| 26/26 [00:00<00:00, 37.98it/s]
Test: [   0/  26]	Loss 0.642 (0.642)	test_acc   0.62 (  0.62)	test_minacc   0.50 (  0.50)	test_majacc   0.64 (  0.64)	Loss_d 0.642 (0.642)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.610 (0.621)	test_acc   0.65 (  0.65)	test_minacc   0.60 (  0.57)	test_majacc   0.66 (  0.66)	Loss_d 0.610 (0.621)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.60 (  0.57)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.36 (  0.33)
Test: [  20/  26]	Loss 0.638 (0.625)	test_acc   0.61 (  0.64)	test_minacc   0.37 (  0.56)	test_majacc   0.64 (  0.65)	Loss_d 0.638 (0.625)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.37 (  0.56)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.34 (  0.32)
Test: [  26/  26]	Loss 0.637 (0.625)	test_acc   0.62 (  0.64)	test_minacc   0.63 (  0.57)	test_majacc   0.61 (  0.65)	Loss_d 0.637 (0.625)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.63 (  0.57)	test_majacc_d   0.61 (  0.65)	test_corr_d   0.23 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.73it/s]
Test: [  0/  1]	Loss 0.692 (0.692)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.68 (  0.68)	Loss_d 0.692 (0.692)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.692 (0.692)	test_acc   0.59 (  0.59)	test_minacc   0.57 (  0.57)	test_majacc   0.68 (  0.68)	Loss_d 0.692 (0.692)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 31/  1]	epoch_time 0.0386 (0.0406)	validation_time 0.0004 (0.0007)	train_time 0.0381 (0.0389)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6396000153422355, 0.5850000381469727)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 15%|#5        | 4/26 [00:00<00:01, 16.61it/s] 27%|##6       | 7/26 [00:00<00:00, 20.84it/s] 38%|###8      | 10/26 [00:00<00:00, 23.46it/s] 50%|#####     | 13/26 [00:00<00:00, 25.14it/s] 65%|######5   | 17/26 [00:00<00:00, 27.02it/s] 81%|########  | 21/26 [00:00<00:00, 28.40it/s] 96%|#########6| 25/26 [00:00<00:00, 29.09it/s]100%|##########| 26/26 [00:01<00:00, 24.37it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.001 (0.003)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.64 (  0.62)	train_minacc   0.63 (  0.52)	train_majacc   0.64 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.76it/s] 23%|##3       | 6/26 [00:00<00:00, 29.66it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.66it/s] 46%|####6     | 12/26 [00:00<00:00, 40.93it/s] 65%|######5   | 17/26 [00:00<00:00, 41.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.37it/s] 88%|########8 | 23/26 [00:00<00:00, 46.67it/s]100%|##########| 26/26 [00:00<00:00, 38.75it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.64 (  0.64)	test_minacc   0.50 (  0.50)	test_majacc   0.66 (  0.66)	Loss_d 0.639 (0.639)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.595 (0.612)	test_acc   0.68 (  0.66)	test_minacc   0.58 (  0.55)	test_majacc   0.69 (  0.68)	Loss_d 0.595 (0.612)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.40 (  0.37)
Test: [  20/  26]	Loss 0.615 (0.615)	test_acc   0.65 (  0.66)	test_minacc   0.46 (  0.55)	test_majacc   0.68 (  0.68)	Loss_d 0.615 (0.615)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.46 (  0.55)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.42 (  0.37)
Test: [  26/  26]	Loss 0.645 (0.617)	test_acc   0.64 (  0.66)	test_minacc   0.59 (  0.55)	test_majacc   0.65 (  0.67)	Loss_d 0.645 (0.617)	test_acc_d   0.64 (  0.66)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.26 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.64it/s]
Test: [  0/  1]	Loss 0.744 (0.744)	test_acc   0.55 (  0.55)	test_minacc   0.53 (  0.53)	test_majacc   0.68 (  0.68)	Loss_d 0.744 (0.744)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.744 (0.744)	test_acc   0.55 (  0.55)	test_minacc   0.53 (  0.53)	test_majacc   0.68 (  0.68)	Loss_d 0.744 (0.744)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.68 (  0.68)	test_corr_d  -0.00 ( -0.00)
Overall Timing[ 32/  1]	epoch_time 0.0402 (0.0406)	validation_time 0.0005 (0.0007)	train_time 0.0397 (0.0390)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.65640001642704, 0.5490000247955322)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.20it/s] 15%|#5        | 4/26 [00:00<00:01, 14.87it/s] 27%|##6       | 7/26 [00:00<00:00, 20.17it/s] 42%|####2     | 11/26 [00:00<00:00, 24.25it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.87it/s] 88%|########8 | 23/26 [00:00<00:00, 29.00it/s]100%|##########| 26/26 [00:01<00:00, 24.14it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.003 (0.003)	train_nll   0.61 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.67 (  0.64)	train_minacc   0.57 (  0.55)	train_majacc   0.69 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.27it/s] 27%|##6       | 7/26 [00:00<00:00, 32.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.83it/s] 46%|####6     | 12/26 [00:00<00:00, 38.35it/s] 69%|######9   | 18/26 [00:00<00:00, 45.38it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.38it/s] 92%|#########2| 24/26 [00:00<00:00, 49.00it/s]100%|##########| 26/26 [00:00<00:00, 39.27it/s]
Test: [   0/  26]	Loss 0.603 (0.603)	test_acc   0.67 (  0.67)	test_minacc   0.47 (  0.47)	test_majacc   0.71 (  0.71)	Loss_d 0.603 (0.603)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.572 (0.584)	test_acc   0.74 (  0.71)	test_minacc   0.55 (  0.52)	test_majacc   0.77 (  0.74)	Loss_d 0.572 (0.584)	test_acc_d   0.74 (  0.71)	test_minacc_d   0.55 (  0.52)	test_majacc_d   0.77 (  0.74)	test_corr_d   0.53 (  0.50)
Test: [  20/  26]	Loss 0.586 (0.586)	test_acc   0.69 (  0.71)	test_minacc   0.41 (  0.52)	test_majacc   0.72 (  0.74)	Loss_d 0.586 (0.586)	test_acc_d   0.69 (  0.71)	test_minacc_d   0.41 (  0.52)	test_majacc_d   0.72 (  0.74)	test_corr_d   0.52 (  0.49)
Test: [  26/  26]	Loss 0.606 (0.587)	test_acc   0.68 (  0.71)	test_minacc   0.56 (  0.52)	test_majacc   0.72 (  0.74)	Loss_d 0.606 (0.587)	test_acc_d   0.68 (  0.71)	test_minacc_d   0.56 (  0.52)	test_majacc_d   0.72 (  0.74)	test_corr_d   0.41 (  0.49)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.65it/s]
Test: [  0/  1]	Loss 0.739 (0.739)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 0.739 (0.739)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.739 (0.739)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.75 (  0.75)	Loss_d 0.739 (0.739)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.14 (  0.14)
Overall Timing[ 33/  1]	epoch_time 0.0389 (0.0406)	validation_time 0.0004 (0.0007)	train_time 0.0384 (0.0389)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.706000032544136, 0.527999997138977)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.72it/s] 15%|#5        | 4/26 [00:00<00:01, 16.84it/s] 27%|##6       | 7/26 [00:00<00:00, 21.98it/s] 42%|####2     | 11/26 [00:00<00:00, 26.17it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.12it/s] 88%|########8 | 23/26 [00:00<00:00, 29.92it/s]100%|##########| 26/26 [00:01<00:00, 25.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.60 (  0.59)	train_minacc   0.63 (  0.58)	train_majacc   0.59 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.92it/s] 27%|##6       | 7/26 [00:00<00:00, 32.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.20it/s] 50%|#####     | 13/26 [00:00<00:00, 40.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 41.70it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 41.70it/s] 96%|#########6| 25/26 [00:00<00:00, 45.75it/s]100%|##########| 26/26 [00:00<00:00, 37.99it/s]
Test: [   0/  26]	Loss 0.668 (0.668)	test_acc   0.59 (  0.59)	test_minacc   0.50 (  0.50)	test_majacc   0.61 (  0.61)	Loss_d 0.668 (0.668)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.656 (0.657)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.60)	test_majacc   0.61 (  0.63)	Loss_d 0.656 (0.657)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.60)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.24 (  0.23)
Test: [  20/  26]	Loss 0.668 (0.658)	test_acc   0.60 (  0.62)	test_minacc   0.39 (  0.58)	test_majacc   0.63 (  0.62)	Loss_d 0.668 (0.658)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.39 (  0.58)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.23 (  0.22)
Test: [  26/  26]	Loss 0.673 (0.658)	test_acc   0.58 (  0.62)	test_minacc   0.57 (  0.58)	test_majacc   0.59 (  0.62)	Loss_d 0.673 (0.658)	test_acc_d   0.58 (  0.62)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.59 (  0.62)	test_corr_d   0.14 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.79it/s]
Test: [  0/  1]	Loss 0.673 (0.673)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.65 (  0.65)	Loss_d 0.673 (0.673)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.16 ( -0.16)
Test: [  1/  1]	Loss 0.673 (0.673)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.65 (  0.65)	Loss_d 0.673 (0.673)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.16 ( -0.16)
Overall Timing[ 34/  1]	epoch_time 0.0385 (0.0405)	validation_time 0.0007 (0.0007)	train_time 0.0377 (0.0389)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6169000107049942, 0.5710000395774841)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 19%|#9        | 5/26 [00:00<00:01, 20.02it/s] 35%|###4      | 9/26 [00:00<00:00, 25.46it/s] 50%|#####     | 13/26 [00:00<00:00, 28.20it/s] 65%|######5   | 17/26 [00:00<00:00, 29.64it/s] 81%|########  | 21/26 [00:00<00:00, 30.56it/s] 96%|#########6| 25/26 [00:00<00:00, 29.74it/s]100%|##########| 26/26 [00:01<00:00, 25.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.79)	train_acc   0.59 (  0.59)	train_minacc   0.72 (  0.60)	train_majacc   0.56 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 27%|##6       | 7/26 [00:00<00:00, 35.59it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.59it/s] 50%|#####     | 13/26 [00:00<00:00, 40.10it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.70it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.70it/s] 96%|#########6| 25/26 [00:00<00:00, 47.45it/s]100%|##########| 26/26 [00:00<00:00, 40.14it/s]
Test: [   0/  26]	Loss 0.687 (0.687)	test_acc   0.48 (  0.48)	test_minacc   0.55 (  0.55)	test_majacc   0.47 (  0.47)	Loss_d 0.687 (0.687)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.47 (  0.47)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.660 (0.668)	test_acc   0.55 (  0.53)	test_minacc   0.53 (  0.59)	test_majacc   0.56 (  0.52)	Loss_d 0.660 (0.668)	test_acc_d   0.55 (  0.53)	test_minacc_d   0.53 (  0.59)	test_majacc_d   0.56 (  0.52)	test_corr_d   0.24 (  0.22)
Test: [  20/  26]	Loss 0.675 (0.667)	test_acc   0.50 (  0.53)	test_minacc   0.72 (  0.61)	test_majacc   0.47 (  0.52)	Loss_d 0.675 (0.667)	test_acc_d   0.50 (  0.53)	test_minacc_d   0.72 (  0.61)	test_majacc_d   0.47 (  0.52)	test_corr_d   0.22 (  0.21)
Test: [  26/  26]	Loss 0.677 (0.666)	test_acc   0.52 (  0.54)	test_minacc   0.56 (  0.61)	test_majacc   0.51 (  0.52)	Loss_d 0.677 (0.666)	test_acc_d   0.52 (  0.54)	test_minacc_d   0.56 (  0.61)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.10 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.05it/s]
Test: [  0/  1]	Loss 0.690 (0.690)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.50 (  0.50)	Loss_d 0.690 (0.690)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.16 ( -0.16)
Test: [  1/  1]	Loss 0.690 (0.690)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.50 (  0.50)	Loss_d 0.690 (0.690)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.16 ( -0.16)
Overall Timing[ 35/  1]	epoch_time 0.0389 (0.0405)	validation_time 0.0004 (0.0007)	train_time 0.0385 (0.0389)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.536700009316206, 0.5850000381469727)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.98it/s] 15%|#5        | 4/26 [00:00<00:01, 19.77it/s] 27%|##6       | 7/26 [00:00<00:00, 23.18it/s] 38%|###8      | 10/26 [00:00<00:00, 25.33it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.06it/s] 69%|######9   | 18/26 [00:00<00:00, 29.43it/s] 85%|########4 | 22/26 [00:00<00:00, 30.48it/s]100%|##########| 26/26 [00:00<00:00, 29.63it/s]100%|##########| 26/26 [00:00<00:00, 26.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.61 (  0.59)	train_minacc   0.54 (  0.61)	train_majacc   0.63 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.39it/s] 27%|##6       | 7/26 [00:00<00:00, 32.20it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.20it/s] 46%|####6     | 12/26 [00:00<00:00, 38.72it/s] 65%|######5   | 17/26 [00:00<00:00, 41.38it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.38it/s] 88%|########8 | 23/26 [00:00<00:00, 43.16it/s]100%|##########| 26/26 [00:00<00:00, 37.45it/s]
Test: [   0/  26]	Loss 0.668 (0.668)	test_acc   0.50 (  0.50)	test_minacc   0.47 (  0.47)	test_majacc   0.51 (  0.51)	Loss_d 0.668 (0.668)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.655 (0.660)	test_acc   0.52 (  0.51)	test_minacc   0.45 (  0.51)	test_majacc   0.53 (  0.52)	Loss_d 0.655 (0.660)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.45 (  0.51)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.36 (  0.35)
Test: [  20/  26]	Loss 0.662 (0.659)	test_acc   0.52 (  0.52)	test_minacc   0.54 (  0.52)	test_majacc   0.51 (  0.52)	Loss_d 0.662 (0.659)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.37 (  0.34)
Test: [  26/  26]	Loss 0.670 (0.659)	test_acc   0.52 (  0.52)	test_minacc   0.54 (  0.52)	test_majacc   0.52 (  0.52)	Loss_d 0.670 (0.659)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.24 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.73it/s]
Test: [  0/  1]	Loss 0.703 (0.703)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.53)	Loss_d 0.703 (0.703)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.03 (  0.03)
Test: [  1/  1]	Loss 0.703 (0.703)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.53 (  0.53)	Loss_d 0.703 (0.703)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.03 (  0.03)
Overall Timing[ 36/  1]	epoch_time 0.0392 (0.0404)	validation_time 0.0004 (0.0007)	train_time 0.0387 (0.0389)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5217000113725663, 0.51500004529953)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.12it/s] 15%|#5        | 4/26 [00:00<00:01, 19.03it/s] 31%|###       | 8/26 [00:00<00:00, 25.06it/s] 46%|####6     | 12/26 [00:00<00:00, 27.81it/s] 62%|######1   | 16/26 [00:00<00:00, 29.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.26it/s] 85%|########4 | 22/26 [00:00<00:00, 29.47it/s] 96%|#########6| 25/26 [00:00<00:00, 29.11it/s]100%|##########| 26/26 [00:01<00:00, 25.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.001 (0.001)	train_nll   0.70 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.46 (  0.55)	train_minacc   0.57 (  0.53)	train_majacc   0.43 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.22it/s] 31%|###       | 8/26 [00:00<00:00, 40.40it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.40it/s] 50%|#####     | 13/26 [00:00<00:00, 43.33it/s] 73%|#######3  | 19/26 [00:00<00:00, 49.38it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 49.38it/s] 92%|#########2| 24/26 [00:00<00:00, 48.01it/s]100%|##########| 26/26 [00:00<00:00, 42.14it/s]
Test: [   0/  26]	Loss 0.730 (0.730)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.49 (  0.49)	Loss_d 0.730 (0.730)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.04 ( -0.04)
Test: [  10/  26]	Loss 0.723 (0.729)	test_acc   0.51 (  0.49)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.49)	Loss_d 0.723 (0.729)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.49)	test_corr_d  -0.05 ( -0.02)
Test: [  20/  26]	Loss 0.729 (0.727)	test_acc   0.50 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.729 (0.727)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d  -0.03 ( -0.02)
Test: [  26/  26]	Loss 0.723 (0.726)	test_acc   0.51 (  0.50)	test_minacc   0.52 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.723 (0.726)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.52 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d  -0.09 ( -0.02)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.83it/s]
Test: [  0/  1]	Loss 0.726 (0.726)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.726 (0.726)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.726 (0.726)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.726 (0.726)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.01 (  0.01)
Overall Timing[ 37/  1]	epoch_time 0.0373 (0.0403)	validation_time 0.0004 (0.0007)	train_time 0.0368 (0.0388)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 14.59it/s] 23%|##3       | 6/26 [00:00<00:00, 24.40it/s] 38%|###8      | 10/26 [00:00<00:00, 27.99it/s] 54%|#####3    | 14/26 [00:00<00:00, 29.43it/s] 65%|######5   | 17/26 [00:00<00:00, 29.48it/s] 81%|########  | 21/26 [00:00<00:00, 30.17it/s] 96%|#########6| 25/26 [00:00<00:00, 30.32it/s]100%|##########| 26/26 [00:00<00:00, 27.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.62 (  0.58)	train_minacc   0.61 (  0.57)	train_majacc   0.62 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.44it/s] 31%|###       | 8/26 [00:00<00:00, 39.24it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.24it/s] 50%|#####     | 13/26 [00:00<00:00, 42.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.88it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.88it/s] 96%|#########6| 25/26 [00:00<00:00, 48.70it/s]100%|##########| 26/26 [00:00<00:00, 41.55it/s]
Test: [   0/  26]	Loss 0.677 (0.677)	test_acc   0.51 (  0.51)	test_minacc   0.58 (  0.58)	test_majacc   0.49 (  0.49)	Loss_d 0.677 (0.677)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.16 (  0.16)
Test: [  10/  26]	Loss 0.653 (0.661)	test_acc   0.57 (  0.55)	test_minacc   0.58 (  0.63)	test_majacc   0.56 (  0.54)	Loss_d 0.653 (0.661)	test_acc_d   0.57 (  0.55)	test_minacc_d   0.58 (  0.63)	test_majacc_d   0.56 (  0.54)	test_corr_d   0.22 (  0.21)
Test: [  20/  26]	Loss 0.666 (0.660)	test_acc   0.52 (  0.56)	test_minacc   0.63 (  0.65)	test_majacc   0.51 (  0.54)	Loss_d 0.666 (0.660)	test_acc_d   0.52 (  0.56)	test_minacc_d   0.63 (  0.65)	test_majacc_d   0.51 (  0.54)	test_corr_d   0.24 (  0.20)
Test: [  26/  26]	Loss 0.659 (0.659)	test_acc   0.54 (  0.56)	test_minacc   0.63 (  0.65)	test_majacc   0.52 (  0.55)	Loss_d 0.659 (0.659)	test_acc_d   0.54 (  0.56)	test_minacc_d   0.63 (  0.65)	test_majacc_d   0.52 (  0.55)	test_corr_d   0.12 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.73it/s]
Test: [  0/  1]	Loss 0.671 (0.671)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.53 (  0.53)	Loss_d 0.671 (0.671)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.53 (  0.53)	test_corr_d  -0.20 ( -0.20)
Test: [  1/  1]	Loss 0.671 (0.671)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.53 (  0.53)	Loss_d 0.671 (0.671)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.53 (  0.53)	test_corr_d  -0.20 ( -0.20)
Overall Timing[ 38/  1]	epoch_time 0.0378 (0.0403)	validation_time 0.0004 (0.0007)	train_time 0.0374 (0.0388)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5615000143647194, 0.6330000162124634)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.60it/s] 15%|#5        | 4/26 [00:00<00:01, 18.77it/s] 27%|##6       | 7/26 [00:00<00:00, 22.51it/s] 38%|###8      | 10/26 [00:00<00:00, 25.08it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.36it/s] 69%|######9   | 18/26 [00:00<00:00, 28.63it/s] 85%|########4 | 22/26 [00:00<00:00, 29.44it/s]100%|##########| 26/26 [00:00<00:00, 30.10it/s]100%|##########| 26/26 [00:01<00:00, 25.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.60 (  0.61)	train_minacc   0.61 (  0.57)	train_majacc   0.59 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.75it/s] 23%|##3       | 6/26 [00:00<00:00, 27.72it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.72it/s] 46%|####6     | 12/26 [00:00<00:00, 39.00it/s] 65%|######5   | 17/26 [00:00<00:00, 42.18it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.18it/s] 88%|########8 | 23/26 [00:00<00:00, 47.67it/s]100%|##########| 26/26 [00:00<00:00, 37.82it/s]
Test: [   0/  26]	Loss 0.700 (0.700)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.49 (  0.49)	Loss_d 0.700 (0.700)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.677 (0.689)	test_acc   0.51 (  0.50)	test_minacc   0.47 (  0.49)	test_majacc   0.52 (  0.50)	Loss_d 0.677 (0.689)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.28 (  0.25)
Test: [  20/  26]	Loss 0.688 (0.687)	test_acc   0.51 (  0.50)	test_minacc   0.59 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.687)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.59 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.29 (  0.25)
Test: [  26/  26]	Loss 0.684 (0.686)	test_acc   0.52 (  0.50)	test_minacc   0.54 (  0.51)	test_majacc   0.52 (  0.50)	Loss_d 0.684 (0.686)	test_acc_d   0.52 (  0.50)	test_minacc_d   0.54 (  0.51)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.17 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.65it/s]
Test: [  0/  1]	Loss 0.705 (0.705)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.705 (0.705)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.705 (0.705)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.705 (0.705)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 39/  1]	epoch_time 0.0377 (0.0402)	validation_time 0.0004 (0.0007)	train_time 0.0373 (0.0388)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.503100011318922, 0.5040000081062317)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.08it/s] 15%|#5        | 4/26 [00:00<00:01, 19.14it/s] 31%|###       | 8/26 [00:00<00:00, 24.81it/s] 42%|####2     | 11/26 [00:00<00:00, 26.56it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.04it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.91it/s] 88%|########8 | 23/26 [00:00<00:00, 28.91it/s]100%|##########| 26/26 [00:00<00:00, 28.49it/s]100%|##########| 26/26 [00:01<00:00, 25.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.59 (  0.57)	train_minacc   0.46 (  0.55)	train_majacc   0.62 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.95it/s] 27%|##6       | 7/26 [00:00<00:00, 32.67it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.67it/s] 50%|#####     | 13/26 [00:00<00:00, 39.59it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.98it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.98it/s] 96%|#########6| 25/26 [00:00<00:00, 44.85it/s]100%|##########| 26/26 [00:00<00:00, 38.38it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.63 (  0.63)	test_minacc   0.53 (  0.53)	test_majacc   0.64 (  0.64)	Loss_d 0.645 (0.645)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.631 (0.632)	test_acc   0.64 (  0.64)	test_minacc   0.60 (  0.56)	test_majacc   0.64 (  0.65)	Loss_d 0.631 (0.632)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.60 (  0.56)	test_majacc_d   0.64 (  0.65)	test_corr_d   0.39 (  0.38)
Test: [  20/  26]	Loss 0.635 (0.635)	test_acc   0.62 (  0.63)	test_minacc   0.39 (  0.54)	test_majacc   0.65 (  0.65)	Loss_d 0.635 (0.635)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.39 (  0.54)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.42 (  0.37)
Test: [  26/  26]	Loss 0.650 (0.636)	test_acc   0.62 (  0.63)	test_minacc   0.59 (  0.55)	test_majacc   0.62 (  0.64)	Loss_d 0.650 (0.636)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.62 (  0.64)	test_corr_d   0.27 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.65it/s]
Test: [  0/  1]	Loss 0.704 (0.704)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.62 (  0.62)	Loss_d 0.704 (0.704)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.704 (0.704)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.62 (  0.62)	Loss_d 0.704 (0.704)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 40/  1]	epoch_time 0.0418 (0.0402)	validation_time 0.0004 (0.0007)	train_time 0.0413 (0.0388)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6293000124692917, 0.5490000247955322)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.96it/s] 19%|#9        | 5/26 [00:00<00:01, 18.81it/s] 35%|###4      | 9/26 [00:00<00:00, 24.17it/s] 46%|####6     | 12/26 [00:00<00:00, 25.72it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.88it/s] 69%|######9   | 18/26 [00:00<00:00, 27.56it/s] 81%|########  | 21/26 [00:00<00:00, 28.03it/s] 92%|#########2| 24/26 [00:00<00:00, 28.27it/s]100%|##########| 26/26 [00:01<00:00, 24.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.60 (  0.62)	train_minacc   0.57 (  0.57)	train_majacc   0.61 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.07it/s] 23%|##3       | 6/26 [00:00<00:00, 30.37it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.37it/s] 42%|####2     | 11/26 [00:00<00:00, 37.79it/s] 62%|######1   | 16/26 [00:00<00:00, 42.16it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.16it/s] 85%|########4 | 22/26 [00:00<00:00, 46.24it/s]100%|##########| 26/26 [00:00<00:00, 38.99it/s]
Test: [   0/  26]	Loss 0.664 (0.664)	test_acc   0.62 (  0.62)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.664 (0.664)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.661 (0.657)	test_acc   0.62 (  0.63)	test_minacc   0.56 (  0.56)	test_majacc   0.63 (  0.64)	Loss_d 0.661 (0.657)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.30 (  0.31)
Test: [  20/  26]	Loss 0.660 (0.658)	test_acc   0.61 (  0.62)	test_minacc   0.41 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.660 (0.658)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.41 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.36 (  0.31)
Test: [  26/  26]	Loss 0.665 (0.659)	test_acc   0.60 (  0.62)	test_minacc   0.57 (  0.55)	test_majacc   0.61 (  0.63)	Loss_d 0.665 (0.659)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.57 (  0.55)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.23 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.79it/s]
Test: [  0/  1]	Loss 0.684 (0.684)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.62 (  0.62)	Loss_d 0.684 (0.684)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.684 (0.684)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.62 (  0.62)	Loss_d 0.684 (0.684)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 41/  1]	epoch_time 0.0386 (0.0402)	validation_time 0.0004 (0.0007)	train_time 0.0382 (0.0388)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6192000041007996, 0.5660000443458557)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.11it/s] 15%|#5        | 4/26 [00:00<00:01, 13.01it/s] 31%|###       | 8/26 [00:00<00:00, 20.07it/s] 42%|####2     | 11/26 [00:00<00:00, 22.77it/s] 54%|#####3    | 14/26 [00:00<00:00, 24.45it/s] 65%|######5   | 17/26 [00:00<00:00, 25.32it/s] 81%|########  | 21/26 [00:00<00:00, 27.23it/s] 96%|#########6| 25/26 [00:01<00:00, 28.57it/s]100%|##########| 26/26 [00:01<00:00, 22.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.001 (0.002)	train_nll   0.69 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.51 (  0.55)	train_minacc   0.52 (  0.54)	train_majacc   0.51 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.02it/s] 27%|##6       | 7/26 [00:00<00:00, 34.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.83it/s] 50%|#####     | 13/26 [00:00<00:00, 39.19it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.55it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.55it/s] 96%|#########6| 25/26 [00:00<00:00, 44.58it/s]100%|##########| 26/26 [00:00<00:00, 38.37it/s]
Test: [   0/  26]	Loss 0.704 (0.704)	test_acc   0.49 (  0.49)	test_minacc   0.48 (  0.48)	test_majacc   0.49 (  0.49)	Loss_d 0.704 (0.704)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.695 (0.699)	test_acc   0.51 (  0.49)	test_minacc   0.47 (  0.49)	test_majacc   0.51 (  0.49)	Loss_d 0.695 (0.699)	test_acc_d   0.51 (  0.49)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.51 (  0.49)	test_corr_d   0.17 (  0.19)
Test: [  20/  26]	Loss 0.698 (0.697)	test_acc   0.50 (  0.50)	test_minacc   0.57 (  0.50)	test_majacc   0.49 (  0.50)	Loss_d 0.698 (0.697)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.57 (  0.50)	test_majacc_d   0.49 (  0.50)	test_corr_d   0.25 (  0.19)
Test: [  26/  26]	Loss 0.698 (0.696)	test_acc   0.51 (  0.50)	test_minacc   0.52 (  0.50)	test_majacc   0.51 (  0.50)	Loss_d 0.698 (0.696)	test_acc_d   0.51 (  0.50)	test_minacc_d   0.52 (  0.50)	test_majacc_d   0.51 (  0.50)	test_corr_d   0.09 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.54it/s]
Test: [  0/  1]	Loss 0.706 (0.706)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.706 (0.706)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.14 ( -0.14)
Test: [  1/  1]	Loss 0.706 (0.706)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.706 (0.706)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.14 ( -0.14)
Overall Timing[ 42/  1]	epoch_time 0.0470 (0.0404)	validation_time 0.0004 (0.0007)	train_time 0.0465 (0.0390)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5000000122487545, 0.5)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.52it/s] 19%|#9        | 5/26 [00:00<00:00, 22.26it/s] 35%|###4      | 9/26 [00:00<00:00, 26.01it/s] 50%|#####     | 13/26 [00:00<00:00, 28.17it/s] 65%|######5   | 17/26 [00:00<00:00, 28.65it/s] 81%|########  | 21/26 [00:00<00:00, 29.57it/s] 96%|#########6| 25/26 [00:00<00:00, 29.95it/s]100%|##########| 26/26 [00:00<00:00, 26.60it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1118 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1119 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1120 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1121 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1122 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1123 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1124 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1125 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1126 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1127 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1128 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1129 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1130 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1131 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1132 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1133 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1134 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1135 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1136 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1137 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1138 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1139 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1140 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1141 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1142 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1143 364.00000000000006
constrain score by whole: 0
Epoch: [43][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.78)	train_acc   0.58 (  0.59)	train_minacc   0.69 (  0.59)	train_majacc   0.55 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.03it/s] 27%|##6       | 7/26 [00:00<00:00, 31.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.60it/s] 50%|#####     | 13/26 [00:00<00:00, 39.48it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.14it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.14it/s] 92%|#########2| 24/26 [00:00<00:00, 31.36it/s]100%|##########| 26/26 [00:00<00:00, 31.86it/s]
Test: [   0/  26]	Loss 0.663 (0.663)	test_acc   0.58 (  0.58)	test_minacc   0.56 (  0.56)	test_majacc   0.58 (  0.58)	Loss_d 0.663 (0.663)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.636 (0.644)	test_acc   0.62 (  0.60)	test_minacc   0.51 (  0.57)	test_majacc   0.64 (  0.61)	Loss_d 0.636 (0.644)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.51 (  0.57)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.32 (  0.30)
Test: [  20/  26]	Loss 0.652 (0.643)	test_acc   0.58 (  0.61)	test_minacc   0.52 (  0.59)	test_majacc   0.59 (  0.61)	Loss_d 0.652 (0.643)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.52 (  0.59)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.31 (  0.29)
Test: [  26/  26]	Loss 0.650 (0.643)	test_acc   0.62 (  0.61)	test_minacc   0.59 (  0.60)	test_majacc   0.62 (  0.61)	Loss_d 0.650 (0.643)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.59 (  0.60)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.21 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.74it/s]
Test: [  0/  1]	Loss 0.684 (0.684)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.56 (  0.56)	Loss_d 0.684 (0.684)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.14 ( -0.14)
Test: [  1/  1]	Loss 0.684 (0.684)	test_acc   0.61 (  0.61)	test_minacc   0.61 (  0.61)	test_majacc   0.56 (  0.56)	Loss_d 0.684 (0.684)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.14 ( -0.14)
Overall Timing[ 43/  1]	epoch_time 0.0410 (0.0404)	validation_time 0.0004 (0.0007)	train_time 0.0406 (0.0390)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6091000066995621, 0.6050000190734863)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 15%|#5        | 4/26 [00:00<00:01, 17.36it/s] 31%|###       | 8/26 [00:00<00:00, 23.69it/s] 46%|####6     | 12/26 [00:00<00:00, 26.70it/s] 62%|######1   | 16/26 [00:00<00:00, 28.35it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.37it/s] 92%|#########2| 24/26 [00:00<00:00, 29.62it/s]100%|##########| 26/26 [00:01<00:00, 25.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1144 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1145 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1146 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1147 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1148 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1149 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1150 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1151 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1152 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1153 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1154 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1155 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1156 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1157 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1158 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1159 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1160 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1161 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1162 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1163 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1164 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1165 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1166 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1167 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1168 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1169 364.00000000000006
constrain score by whole: 0
Epoch: [44][  26/  26]	Loss 0.001 (0.003)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.78)	train_acc   0.61 (  0.62)	train_minacc   0.63 (  0.57)	train_majacc   0.61 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.50it/s] 27%|##6       | 7/26 [00:00<00:00, 33.88it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.88it/s] 50%|#####     | 13/26 [00:00<00:00, 39.85it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.12it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.12it/s] 96%|#########6| 25/26 [00:00<00:00, 47.80it/s]100%|##########| 26/26 [00:00<00:00, 39.84it/s]
Test: [   0/  26]	Loss 0.647 (0.647)	test_acc   0.61 (  0.61)	test_minacc   0.55 (  0.55)	test_majacc   0.62 (  0.62)	Loss_d 0.647 (0.647)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.637 (0.639)	test_acc   0.63 (  0.62)	test_minacc   0.64 (  0.59)	test_majacc   0.63 (  0.63)	Loss_d 0.637 (0.639)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.64 (  0.59)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.651 (0.642)	test_acc   0.60 (  0.62)	test_minacc   0.46 (  0.59)	test_majacc   0.62 (  0.63)	Loss_d 0.651 (0.642)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.46 (  0.59)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.30 (  0.26)
Test: [  26/  26]	Loss 0.653 (0.643)	test_acc   0.60 (  0.62)	test_minacc   0.61 (  0.60)	test_majacc   0.60 (  0.62)	Loss_d 0.653 (0.643)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.61 (  0.60)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.17 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.66it/s]
Test: [  0/  1]	Loss 0.678 (0.678)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.62 (  0.62)	Loss_d 0.678 (0.678)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.15 ( -0.15)
Test: [  1/  1]	Loss 0.678 (0.678)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.62 (  0.62)	Loss_d 0.678 (0.678)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.15 ( -0.15)
Overall Timing[ 44/  1]	epoch_time 0.0380 (0.0403)	validation_time 0.0005 (0.0007)	train_time 0.0375 (0.0390)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.620200010061264, 0.5900000333786011)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.29it/s] 15%|#5        | 4/26 [00:00<00:01, 19.25it/s] 27%|##6       | 7/26 [00:00<00:00, 23.41it/s] 38%|###8      | 10/26 [00:00<00:00, 25.36it/s] 50%|#####     | 13/26 [00:00<00:00, 26.31it/s] 62%|######1   | 16/26 [00:00<00:00, 27.47it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.07it/s] 88%|########8 | 23/26 [00:00<00:00, 29.22it/s]100%|##########| 26/26 [00:01<00:00, 25.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1170 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1171 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1172 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1173 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1174 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1175 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1176 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1177 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1178 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1179 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1180 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1181 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1182 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1183 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1184 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1185 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1186 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1187 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1188 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1189 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1190 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1191 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1192 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1193 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1194 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1195 364.00000000000006
constrain score by whole: 0
Epoch: [45][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.58 (  0.61)	train_minacc   0.57 (  0.59)	train_majacc   0.59 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.55it/s] 27%|##6       | 7/26 [00:00<00:00, 34.22it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.22it/s] 50%|#####     | 13/26 [00:00<00:00, 38.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.99it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.99it/s] 92%|#########2| 24/26 [00:00<00:00, 45.63it/s]100%|##########| 26/26 [00:00<00:00, 38.24it/s]
Test: [   0/  26]	Loss 0.651 (0.651)	test_acc   0.61 (  0.61)	test_minacc   0.52 (  0.52)	test_majacc   0.63 (  0.63)	Loss_d 0.651 (0.651)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.639 (0.640)	test_acc   0.63 (  0.63)	test_minacc   0.65 (  0.59)	test_majacc   0.63 (  0.63)	Loss_d 0.639 (0.640)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.65 (  0.59)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.26 (  0.26)
Test: [  20/  26]	Loss 0.650 (0.642)	test_acc   0.62 (  0.62)	test_minacc   0.54 (  0.60)	test_majacc   0.63 (  0.63)	Loss_d 0.650 (0.642)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.54 (  0.60)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.29 (  0.25)
Test: [  26/  26]	Loss 0.659 (0.642)	test_acc   0.61 (  0.62)	test_minacc   0.63 (  0.61)	test_majacc   0.60 (  0.63)	Loss_d 0.659 (0.642)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.63 (  0.61)	test_majacc_d   0.60 (  0.63)	test_corr_d   0.16 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.73it/s]
Test: [  0/  1]	Loss 0.670 (0.670)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.63 (  0.63)	Loss_d 0.670 (0.670)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 0.670 (0.670)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.63 (  0.63)	Loss_d 0.670 (0.670)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.17 ( -0.17)
Overall Timing[ 45/  1]	epoch_time 0.0389 (0.0403)	validation_time 0.0004 (0.0006)	train_time 0.0385 (0.0390)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6239000146985054, 0.6040000319480896)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.38it/s] 15%|#5        | 4/26 [00:00<00:01, 16.29it/s] 27%|##6       | 7/26 [00:00<00:00, 21.44it/s] 42%|####2     | 11/26 [00:00<00:00, 25.31it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.71it/s] 65%|######5   | 17/26 [00:00<00:00, 27.14it/s] 81%|########  | 21/26 [00:00<00:00, 28.41it/s] 96%|#########6| 25/26 [00:00<00:00, 29.07it/s]100%|##########| 26/26 [00:01<00:00, 24.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1196 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1197 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1198 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1199 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1200 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1201 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1202 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1203 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1204 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1205 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1206 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1207 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1208 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1209 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1210 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1211 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1212 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1213 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1214 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1215 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1216 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1217 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1218 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1219 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1220 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1221 364.00000000000006
constrain score by whole: 0
Epoch: [46][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.59 (  0.62)	train_minacc   0.57 (  0.57)	train_majacc   0.60 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.68it/s] 27%|##6       | 7/26 [00:00<00:00, 34.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.87it/s] 50%|#####     | 13/26 [00:00<00:00, 41.36it/s] 69%|######9   | 18/26 [00:00<00:00, 43.71it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.71it/s] 88%|########8 | 23/26 [00:00<00:00, 45.16it/s]100%|##########| 26/26 [00:00<00:00, 38.54it/s]
Test: [   0/  26]	Loss 0.670 (0.670)	test_acc   0.54 (  0.54)	test_minacc   0.48 (  0.48)	test_majacc   0.55 (  0.55)	Loss_d 0.670 (0.670)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.652 (0.657)	test_acc   0.58 (  0.58)	test_minacc   0.53 (  0.58)	test_majacc   0.59 (  0.58)	Loss_d 0.652 (0.657)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.53 (  0.58)	test_majacc_d   0.59 (  0.58)	test_corr_d   0.27 (  0.27)
Test: [  20/  26]	Loss 0.667 (0.656)	test_acc   0.55 (  0.58)	test_minacc   0.63 (  0.60)	test_majacc   0.54 (  0.58)	Loss_d 0.667 (0.656)	test_acc_d   0.55 (  0.58)	test_minacc_d   0.63 (  0.60)	test_majacc_d   0.54 (  0.58)	test_corr_d   0.27 (  0.26)
Test: [  26/  26]	Loss 0.674 (0.656)	test_acc   0.54 (  0.58)	test_minacc   0.56 (  0.61)	test_majacc   0.54 (  0.58)	Loss_d 0.674 (0.656)	test_acc_d   0.54 (  0.58)	test_minacc_d   0.56 (  0.61)	test_majacc_d   0.54 (  0.58)	test_corr_d   0.13 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.51it/s]
Test: [  0/  1]	Loss 0.688 (0.688)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.688 (0.688)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.50 (  0.50)	Loss_d 0.688 (0.688)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 46/  1]	epoch_time 0.0467 (0.0404)	validation_time 0.0066 (0.0008)	train_time 0.0400 (0.0390)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5828000026345252, 0.5910000205039978)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.63it/s] 15%|#5        | 4/26 [00:00<00:01, 17.83it/s] 27%|##6       | 7/26 [00:00<00:00, 22.74it/s] 42%|####2     | 11/26 [00:00<00:00, 26.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.92it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.08it/s] 88%|########8 | 23/26 [00:00<00:00, 29.69it/s]100%|##########| 26/26 [00:01<00:00, 25.68it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1222 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1223 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1224 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1225 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1226 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1227 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1228 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1229 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1230 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1231 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1232 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1233 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1234 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1235 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1236 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1237 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1238 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1239 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1240 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1241 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1242 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1243 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1244 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1245 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1246 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1247 364.00000000000006
constrain score by whole: 0
Epoch: [47][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.57 (  0.61)	train_minacc   0.59 (  0.59)	train_majacc   0.57 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.69it/s] 27%|##6       | 7/26 [00:00<00:00, 38.45it/s]                                               27%|##6       | 7/26 [00:00<00:00, 38.45it/s] 50%|#####     | 13/26 [00:00<00:00, 43.72it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.99it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.99it/s] 96%|#########6| 25/26 [00:00<00:00, 48.90it/s]100%|##########| 26/26 [00:00<00:00, 42.00it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.58 (  0.58)	test_minacc   0.50 (  0.50)	test_majacc   0.60 (  0.60)	Loss_d 0.659 (0.659)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.643 (0.643)	test_acc   0.64 (  0.63)	test_minacc   0.60 (  0.59)	test_majacc   0.64 (  0.64)	Loss_d 0.643 (0.643)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.60 (  0.59)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.28 (  0.29)
Test: [  20/  26]	Loss 0.648 (0.643)	test_acc   0.62 (  0.62)	test_minacc   0.57 (  0.59)	test_majacc   0.62 (  0.63)	Loss_d 0.648 (0.643)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.34 (  0.29)
Test: [  26/  26]	Loss 0.650 (0.643)	test_acc   0.59 (  0.62)	test_minacc   0.56 (  0.59)	test_majacc   0.60 (  0.63)	Loss_d 0.650 (0.643)	test_acc_d   0.59 (  0.62)	test_minacc_d   0.56 (  0.59)	test_majacc_d   0.60 (  0.63)	test_corr_d   0.20 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.49it/s]
Test: [  0/  1]	Loss 0.697 (0.697)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.64 (  0.64)	Loss_d 0.697 (0.697)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.697 (0.697)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.64 (  0.64)	Loss_d 0.697 (0.697)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 47/  1]	epoch_time 0.0382 (0.0404)	validation_time 0.0005 (0.0008)	train_time 0.0376 (0.0390)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.623200012743473, 0.593000054359436)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.33it/s] 15%|#5        | 4/26 [00:00<00:01, 15.45it/s] 27%|##6       | 7/26 [00:00<00:00, 20.61it/s] 42%|####2     | 11/26 [00:00<00:00, 24.94it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.37it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.85it/s] 88%|########8 | 23/26 [00:00<00:00, 29.79it/s]100%|##########| 26/26 [00:01<00:00, 24.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1248 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1249 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1250 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1251 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1252 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1253 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1254 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1255 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1256 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1257 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1258 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1259 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1260 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1261 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1262 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1263 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1264 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1265 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1266 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1267 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1268 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1269 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1270 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1271 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1272 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1273 364.00000000000006
constrain score by whole: 0
Epoch: [48][  26/  26]	Loss 0.002 (0.003)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.51 (  0.60)	train_minacc   0.50 (  0.57)	train_majacc   0.51 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.54it/s] 27%|##6       | 7/26 [00:00<00:00, 37.35it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.35it/s] 50%|#####     | 13/26 [00:00<00:00, 44.20it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.64it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.64it/s] 96%|#########6| 25/26 [00:00<00:00, 49.64it/s]100%|##########| 26/26 [00:00<00:00, 42.04it/s]
Test: [   0/  26]	Loss 0.677 (0.677)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.50 (  0.50)	Loss_d 0.677 (0.677)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.647 (0.656)	test_acc   0.52 (  0.51)	test_minacc   0.44 (  0.48)	test_majacc   0.53 (  0.51)	Loss_d 0.647 (0.656)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.44 (  0.48)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.40 (  0.41)
Test: [  20/  26]	Loss 0.656 (0.654)	test_acc   0.52 (  0.52)	test_minacc   0.54 (  0.49)	test_majacc   0.52 (  0.52)	Loss_d 0.656 (0.654)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.54 (  0.49)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.45 (  0.41)
Test: [  26/  26]	Loss 0.664 (0.654)	test_acc   0.52 (  0.52)	test_minacc   0.50 (  0.49)	test_majacc   0.53 (  0.52)	Loss_d 0.664 (0.654)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.50 (  0.49)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.31 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.79it/s]
Test: [  0/  1]	Loss 0.750 (0.750)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.750 (0.750)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.06 (  0.06)
Test: [  1/  1]	Loss 0.750 (0.750)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.51 (  0.51)	Loss_d 0.750 (0.750)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.06 (  0.06)
Overall Timing[ 48/  1]	epoch_time 0.0373 (0.0403)	validation_time 0.0004 (0.0008)	train_time 0.0369 (0.0389)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.5162000165581703, 0.5010000467300415)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.83it/s] 15%|#5        | 4/26 [00:00<00:01, 21.37it/s] 31%|###       | 8/26 [00:00<00:00, 26.29it/s] 46%|####6     | 12/26 [00:00<00:00, 28.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.85it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.94it/s] 88%|########8 | 23/26 [00:00<00:00, 30.38it/s]100%|##########| 26/26 [00:00<00:00, 26.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1274 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1275 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1276 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1277 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1278 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1279 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1280 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1281 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1282 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1283 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1284 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1285 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1286 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1287 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1288 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1289 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1290 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1291 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1292 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1293 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1294 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1295 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1296 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1297 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1298 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1299 364.00000000000006
constrain score by whole: 0
Epoch: [49][  26/  26]	Loss 0.001 (0.005)	train_nll   0.63 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.77 (  7.77)	train_acc   0.62 (  0.61)	train_minacc   0.52 (  0.52)	train_majacc   0.65 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.44it/s] 27%|##6       | 7/26 [00:00<00:00, 32.99it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.99it/s] 50%|#####     | 13/26 [00:00<00:00, 40.57it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.09it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.09it/s] 96%|#########6| 25/26 [00:00<00:00, 47.55it/s]100%|##########| 26/26 [00:00<00:00, 39.27it/s]
Test: [   0/  26]	Loss 0.609 (0.609)	test_acc   0.66 (  0.66)	test_minacc   0.37 (  0.37)	test_majacc   0.71 (  0.71)	Loss_d 0.609 (0.609)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.581 (0.591)	test_acc   0.72 (  0.70)	test_minacc   0.51 (  0.48)	test_majacc   0.76 (  0.74)	Loss_d 0.581 (0.591)	test_acc_d   0.72 (  0.70)	test_minacc_d   0.51 (  0.48)	test_majacc_d   0.76 (  0.74)	test_corr_d   0.49 (  0.48)
Test: [  20/  26]	Loss 0.590 (0.593)	test_acc   0.69 (  0.70)	test_minacc   0.43 (  0.49)	test_majacc   0.73 (  0.73)	Loss_d 0.590 (0.593)	test_acc_d   0.69 (  0.70)	test_minacc_d   0.43 (  0.49)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.53 (  0.47)
Test: [  26/  26]	Loss 0.599 (0.593)	test_acc   0.67 (  0.69)	test_minacc   0.54 (  0.50)	test_majacc   0.70 (  0.73)	Loss_d 0.599 (0.593)	test_acc_d   0.67 (  0.69)	test_minacc_d   0.54 (  0.50)	test_majacc_d   0.70 (  0.73)	test_corr_d   0.40 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.81it/s]
Test: [  0/  1]	Loss 0.745 (0.745)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.80 (  0.80)	Loss_d 0.745 (0.745)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.745 (0.745)	test_acc   0.52 (  0.52)	test_minacc   0.49 (  0.49)	test_majacc   0.80 (  0.80)	Loss_d 0.745 (0.745)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.80 (  0.80)	test_corr_d   0.12 (  0.12)
Overall Timing[ 49/  1]	epoch_time 0.0376 (0.0403)	validation_time 0.0004 (0.0008)	train_time 0.0372 (0.0389)
record: (train_acc, test_acc) (0.6403000109195709, 0.6290000081062317)
last accs (train_acc, test_acc) (0.6938000339269638, 0.5230000019073486)
wandb: - 0.166 MB of 0.166 MB uploadedwandb: \ 0.166 MB of 0.166 MB uploadedwandb: | 0.166 MB of 0.166 MB uploadedwandb: / 0.166 MB of 0.166 MB uploadedwandb: - 0.166 MB of 0.166 MB uploadedwandb: \ 0.166 MB of 0.166 MB uploadedwandb: | 0.166 MB of 0.166 MB uploadedwandb: / 0.166 MB of 0.166 MB uploadedwandb: - 0.166 MB of 0.166 MB uploadedwandb: \ 0.166 MB of 0.166 MB uploadedwandb: | 0.166 MB of 0.166 MB uploadedwandb: / 0.187 MB of 0.424 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/diagnostics/epoch_time_val █▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▂▁▁▂▁▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/diagnostics/train_time_val █▁▁▁▁▁▁▃▁▁▁▁▁▂▁▁▁▂▁▁▂▂▂▁▁▁▂▂▂▂▁▁▂▁▃▂▂▂▁▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁█▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/Loss_avg █▃▁▄▂▂▂▂▁▂▂▃▃▄▄▅▃▄▂▃▂▃▄▂▁▂▃▃▂▂▂▁▂▁▂▁▁▂▂▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/Loss_d_avg █▃▁▄▂▂▂▂▁▂▂▃▃▄▄▅▃▄▂▃▂▃▄▂▁▂▃▃▂▂▂▁▂▁▂▁▁▂▂▃
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/Loss_d_val █▃▁▄▂▂▂▂▁▂▂▃▃▄▄▅▃▄▂▃▂▃▄▂▁▂▃▃▂▂▂▁▂▁▂▁▁▂▂▃
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/Loss_val █▃▁▄▂▂▂▂▁▂▂▃▃▄▄▅▃▄▂▃▂▃▄▂▁▂▃▃▂▂▂▁▂▁▂▁▁▂▂▃
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_acc_avg ▁▅█▂▇▆▅▇██▇▆▆▃▄▃▂▃▃▅▆▅▄▄█▇▆▅▇▅▄█▆▆▄▇▇▇▇▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_acc_d_avg ▁▅█▂▇▆▅▇██▇▆▆▃▄▃▂▃▃▅▆▅▄▄█▇▆▅▇▅▄█▆▆▄▇▇▇▇▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_acc_d_val ▁▅█▂▇▆▅▇██▇▆▆▃▄▃▂▃▃▅▆▅▄▄█▇▆▅▇▅▄█▆▆▄▇▇▇▇▅
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_acc_val ▁▅█▂▇▆▅▇██▇▆▆▃▄▃▂▃▃▅▆▅▄▄█▇▆▅▇▅▄█▆▆▄▇▇▇▇▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_corr_d_avg █▄▁▆▂▃▃▂▂▂▃▃▄▅▆▇▇▇▅▃▃▄▄▃▁▂▃▅▂▄▃▁▃▃▂▂▂▂▃▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_corr_d_val █▄▁▆▂▃▃▂▂▂▃▃▄▅▆▇▇▇▅▃▃▄▄▃▁▂▃▅▂▄▃▁▃▃▂▂▂▂▃▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_majacc_avg ▇▆▃▄▄▅▃▂▄▃▄▄▄▁█▇▆▆▂▃▄▄▁▂▁▅▅▆▁▂▁▂▄▄▁▂▄▁▄▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_majacc_d_avg ▇▆▃▄▄▅▃▂▄▃▄▄▄▁█▇▆▆▂▃▄▄▁▂▁▅▅▆▁▂▁▂▄▄▁▂▄▁▄▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_majacc_d_val ▇▆▃▄▄▅▃▂▄▃▄▄▄▁█▇▆▆▂▃▄▄▁▂▁▅▅▆▁▂▁▂▄▄▁▂▄▁▄▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_majacc_val ▇▆▃▄▄▅▃▂▄▃▄▄▄▁█▇▆▆▂▃▄▄▁▂▁▅▅▆▁▂▁▂▄▄▁▂▄▁▄▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_minacc_avg ▁▅▇▂▇▆▅▇██▇▆▆▃▄▃▂▃▄▅▆▅▅▅█▆▅▅▇▅▅█▆▆▅▇▇▇▇▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_minacc_d_avg ▁▅▇▂▇▆▅▇██▇▆▆▃▄▃▂▃▄▅▆▅▅▅█▆▅▅▇▅▅█▆▆▅▇▇▇▇▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_minacc_d_val ▁▅▇▂▇▆▅▇██▇▆▆▃▄▃▂▃▄▅▆▅▅▅█▆▅▅▇▅▅█▆▆▅▇▇▇▇▄
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_minacc_val ▁▅▇▂▇▆▅▇██▇▆▆▃▄▃▂▃▄▅▆▅▅▅█▆▅▅▇▅▅█▆▆▅▇▇▇▇▄
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/Loss_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/Loss_val ▄▂▇▂▂▂▄▁▂▂▁▁▄▃█▃▄▅▃▁▁▂▁▃▂▁▂▄▁▁▁▂▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_acc_avg █▆▄▃▆▄▄▃▂▂▃▃▅▅▄▄▄▃▅▄▃▃▃▄▃▂▄▄▃▃▁▂▂▄▁▂▃▃▃▃
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_acc_val ▇▆▃▄▇▆▃▄▆▆▅▆▅▃█▅▅▆▆▄▃▄▆▃▂▅▅▆▄▅▁▅▄▅▂▄▄▄▄▅
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_majacc_avg █▅▃▂▄▃▃▂▂▂▂▃▄▄▄▃▃▃▄▃▂▂▃▃▃▁▃▄▂▂▁▂▂▃▁▂▃▃▃▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_majacc_val ▇▆▃▄▇▆▃▃▆▅▅▅▅▃█▆▅▆▇▄▃▅▅▃▂▅▅▆▄▅▁▅▅▅▃▃▄▄▄▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_minacc_avg ▁▆▇█▇████▇██▆▆▅▇▇▆▅▆▇█▇▇▇▇▆▇██▆▇▇▇▆▇█▇▇▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_minacc_val ▃▅▅▃▇▆▅▆▇█▇▆▃▄▅▁▄▃▁▅▄▄▆▄▆▇▆▅█▄▅▆▃▅▄▇▅▅▅▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_nll_avg ▅▁▅▅▂▄▅▄▅▅▄▄▃▃▂▅▄▆▃▅▆▆▆▅▅▆▅▄▆▆█▇▇▅█▆▅▅▆▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_nll_val ▃▂█▆▂▃█▅▂▂▄▃▆█▁▄▃▂▅▆▅▆▄▇▇▄▅▂▆▆█▅▅▆▇▆▅▅▆▃
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_penalty_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_penalty_val ▄▂▇▂▂▂▄▁▂▂▁▁▄▃█▃▄▅▃▁▁▂▁▃▂▁▂▄▁▁▁▂▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/weight_norm_avg █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/weight_norm_val █▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/diagnostics/epoch_time_val 0.03765
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/diagnostics/train_time_val 0.0372
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/diagnostics/validation_time_val 0.00043
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/Loss_avg 0.74457
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/Loss_d_avg 0.74457
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/Loss_d_val 0.74457
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/Loss_val 0.74457
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_acc_avg 0.523
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_acc_d_avg 0.523
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_acc_d_val 0.523
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_acc_val 0.523
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_corr_d_avg 0.11832
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_corr_d_val 0.11832
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_majacc_avg 0.8
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_majacc_d_avg 0.8
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_majacc_d_val 0.8
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_majacc_val 0.8
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_minacc_avg 0.49222
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_minacc_d_avg 0.49222
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_minacc_d_val 0.49222
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/test/test_minacc_val 0.49222
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/Loss_avg 0.00511
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/Loss_val 0.00114
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_acc_avg 0.6065
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_acc_val 0.62
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_majacc_avg 0.62249
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_majacc_val 0.64796
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_minacc_avg 0.51568
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_minacc_val 0.51852
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_nll_avg 0.65153
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_nll_val 0.62514
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_penalty_avg 0.00427
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/train_penalty_val 0.0003
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/weight_norm_avg 7.76919
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/26/logs/train/weight_norm_val 7.76883
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/bmzvha48
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240905_000115-bmzvha48/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240905_000413-muzdq2v3
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/muzdq2v3
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, classes_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=13, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1240
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (5974, 3, 32, 32) (6026, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:46,  1.84s/it] 19%|#9        | 5/26 [00:01<00:06,  3.33it/s] 35%|###4      | 9/26 [00:02<00:02,  6.57it/s] 50%|#####     | 13/26 [00:02<00:01, 10.13it/s] 65%|######5   | 17/26 [00:02<00:00, 13.80it/s] 81%|########  | 21/26 [00:02<00:00, 17.18it/s] 96%|#########6| 25/26 [00:02<00:00, 20.34it/s]100%|##########| 26/26 [00:02<00:00,  8.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 13
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.007 (4.918)	train_nll   0.50 (  0.58)	train_penalty   0.01 (  0.20)	weight_norm   7.91 (  8.56)	train_acc   0.75 (  0.77)	train_minacc   0.48 (  0.18)	train_majacc   0.79 (  0.88)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.26it/s] 27%|##6       | 7/26 [00:00<00:00, 33.75it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.75it/s] 46%|####6     | 12/26 [00:00<00:00, 40.26it/s] 69%|######9   | 18/26 [00:00<00:00, 44.06it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.06it/s] 92%|#########2| 24/26 [00:00<00:00, 46.94it/s]100%|##########| 26/26 [00:00<00:00, 40.62it/s]
Test: [   0/  26]	Loss 0.844 (0.844)	test_acc   0.50 (  0.50)	test_minacc   0.78 (  0.78)	test_majacc   0.44 (  0.44)	Loss_d 0.844 (0.844)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.78 (  0.78)	test_majacc_d   0.44 (  0.44)	test_corr_d  -0.35 ( -0.35)
Test: [  10/  26]	Loss 0.891 (0.878)	test_acc   0.46 (  0.49)	test_minacc   0.84 (  0.77)	test_majacc   0.40 (  0.44)	Loss_d 0.891 (0.878)	test_acc_d   0.46 (  0.49)	test_minacc_d   0.84 (  0.77)	test_majacc_d   0.40 (  0.44)	test_corr_d  -0.38 ( -0.34)
Test: [  20/  26]	Loss 0.877 (0.871)	test_acc   0.47 (  0.50)	test_minacc   0.69 (  0.77)	test_majacc   0.44 (  0.45)	Loss_d 0.877 (0.871)	test_acc_d   0.47 (  0.50)	test_minacc_d   0.69 (  0.77)	test_majacc_d   0.44 (  0.45)	test_corr_d  -0.29 ( -0.33)
Test: [  26/  26]	Loss 0.866 (0.873)	test_acc   0.50 (  0.50)	test_minacc   0.74 (  0.78)	test_majacc   0.47 (  0.45)	Loss_d 0.866 (0.873)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.74 (  0.78)	test_majacc_d   0.47 (  0.45)	test_corr_d  -0.34 ( -0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.46it/s]100%|##########| 1/1 [00:00<00:00,  2.46it/s]
Test: [  0/  1]	Loss 0.584 (0.584)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.52 (  0.52)	Loss_d 0.584 (0.584)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.50 ( -0.50)
Test: [  1/  1]	Loss 0.584 (0.584)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.52 (  0.52)	Loss_d 0.584 (0.584)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.50 ( -0.50)
Overall Timing[  0/  1]	epoch_time 0.1063 (0.1063)	validation_time 0.0069 (0.0069)	train_time 0.0695 (0.0695)
record: (train_acc, test_acc) None
last accs (train_acc, test_acc) (0.49510000842809676, 0.6720000505447388)
Traceback (most recent call last):
  File "/scratch/users/zd16/sparseIRM-resnet-ver/main.py", line 464, in <module>
    main()
  File "/scratch/users/zd16/sparseIRM-resnet-ver/main.py", line 59, in main
    main_worker(args)
  File "/scratch/users/zd16/sparseIRM-resnet-ver/main.py", line 214, in main_worker
    "record_train_acc": record_test_best[0],
TypeError: 'NoneType' object is not subscriptable
wandb: - 0.015 MB of 0.015 MB uploadedwandb: \ 0.015 MB of 0.015 MB uploadedwandb: | 0.015 MB of 0.015 MB uploadedwandb: / 0.037 MB of 0.045 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/diagnostics/epoch_time_val ▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/diagnostics/train_time_val ▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/diagnostics/validation_time_val ▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/global_step ▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/Loss_avg ▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/Loss_d_avg ▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/Loss_d_val ▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/Loss_val ▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_acc_avg ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_acc_d_avg ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_acc_d_val ▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_acc_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_corr_d_avg ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_corr_d_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_majacc_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_majacc_d_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_majacc_d_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_majacc_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_minacc_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_minacc_d_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_minacc_d_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_minacc_val ▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/Loss_avg ▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/Loss_val ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_acc_avg ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_acc_val ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_corr_avg ▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_corr_val ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_majacc_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_majacc_val ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_minacc_avg ▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_minacc_val ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_nll_avg ▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_nll_val ▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_penalty_avg ▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_penalty_val ▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/weight_norm_avg ▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/weight_norm_val ▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 0
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/diagnostics/epoch_time_val 0.10628
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/diagnostics/train_time_val 0.06948
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/diagnostics/validation_time_val 0.00686
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/global_step 0
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/Loss_avg 0.58428
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/Loss_d_avg 0.58428
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/Loss_d_val 0.58428
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/Loss_val 0.58428
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_acc_avg 0.672
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_acc_d_avg 0.672
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_acc_d_val 0.672
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_acc_val 0.672
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_corr_d_avg -0.5025
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_corr_d_val -0.5025
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_majacc_avg 0.52
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_majacc_d_avg 0.52
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_majacc_d_val 0.52
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_majacc_val 0.52
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_minacc_avg 0.68889
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_minacc_d_avg 0.68889
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_minacc_d_val 0.68889
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/test/test_minacc_val 0.68889
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/Loss_avg 4.91799
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/Loss_val 0.00661
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_acc_avg 0.7703
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_acc_val 0.752
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_majacc_avg 0.87636
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_majacc_val 0.78995
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_minacc_avg 0.17875
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_minacc_val 0.48387
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_nll_avg 0.57783
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_nll_val 0.49717
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_penalty_avg 0.2015
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/train_penalty_val 0.00577
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/weight_norm_avg 8.55655
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/27/logs/train/weight_norm_val 7.91211
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/muzdq2v3
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240905_000413-muzdq2v3/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240905_000502-zs9u1k2a
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/zs9u1k2a
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, classes_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=13, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1160
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6048, 3, 32, 32) (5952, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:40,  1.63s/it] 19%|#9        | 5/26 [00:01<00:05,  3.71it/s] 35%|###4      | 9/26 [00:01<00:02,  7.18it/s] 46%|####6     | 12/26 [00:01<00:01,  9.99it/s] 58%|#####7    | 15/26 [00:02<00:00, 12.87it/s] 73%|#######3  | 19/26 [00:02<00:00, 16.75it/s] 88%|########8 | 23/26 [00:02<00:00, 20.14it/s]100%|##########| 26/26 [00:02<00:00, 13.05it/s]100%|##########| 26/26 [00:02<00:00,  9.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 13
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.024 (4.933)	train_nll   0.63 (  0.63)	train_penalty   0.02 (  0.27)	weight_norm   7.97 (  8.59)	train_acc   0.66 (  0.74)	train_minacc   0.21 (  0.22)	train_majacc   0.76 (  0.83)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.46it/s] 27%|##6       | 7/26 [00:00<00:00, 31.47it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.47it/s] 50%|#####     | 13/26 [00:00<00:00, 38.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.50it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.50it/s] 96%|#########6| 25/26 [00:00<00:00, 46.31it/s]100%|##########| 26/26 [00:00<00:00, 37.84it/s]
Test: [   0/  26]	Loss 0.666 (0.666)	test_acc   0.59 (  0.59)	test_minacc   0.55 (  0.55)	test_majacc   0.59 (  0.59)	Loss_d 0.666 (0.666)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.661 (0.670)	test_acc   0.64 (  0.60)	test_minacc   0.66 (  0.60)	test_majacc   0.64 (  0.60)	Loss_d 0.661 (0.670)	test_acc_d   0.64 (  0.60)	test_minacc_d   0.66 (  0.60)	test_majacc_d   0.64 (  0.60)	test_corr_d   0.18 (  0.14)
Test: [  20/  26]	Loss 0.655 (0.663)	test_acc   0.63 (  0.62)	test_minacc   0.57 (  0.63)	test_majacc   0.64 (  0.61)	Loss_d 0.655 (0.663)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.57 (  0.63)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.22 (  0.16)
Test: [  26/  26]	Loss 0.733 (0.668)	test_acc   0.58 (  0.61)	test_minacc   0.50 (  0.62)	test_majacc   0.59 (  0.61)	Loss_d 0.733 (0.668)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.50 (  0.62)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.09 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.45it/s]100%|##########| 1/1 [00:00<00:00,  2.45it/s]
Test: [  0/  1]	Loss 0.744 (0.744)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.57 (  0.57)	Loss_d 0.744 (0.744)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.744 (0.744)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.57 (  0.57)	Loss_d 0.744 (0.744)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.05 ( -0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/28/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.1087 (0.1087)	validation_time 0.0069 (0.0069)	train_time 0.0739 (0.0739)
record: (train_acc, test_acc) (0.6128000116944313, 0.5020000338554382)
last accs (train_acc, test_acc) (0.6128000116944313, 0.5020000338554382)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.64it/s] 19%|#9        | 5/26 [00:00<00:00, 22.73it/s] 31%|###       | 8/26 [00:00<00:00, 24.85it/s] 42%|####2     | 11/26 [00:00<00:00, 26.60it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.39it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.54it/s] 88%|########8 | 23/26 [00:00<00:00, 30.11it/s]100%|##########| 26/26 [00:00<00:00, 26.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.010 (0.015)	train_nll   0.66 (  0.58)	train_penalty   0.01 (  0.01)	weight_norm   7.82 (  7.86)	train_acc   0.62 (  0.69)	train_minacc   0.42 (  0.47)	train_majacc   0.67 (  0.73)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.02it/s] 27%|##6       | 7/26 [00:00<00:00, 33.38it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.38it/s] 46%|####6     | 12/26 [00:00<00:00, 39.93it/s] 65%|######5   | 17/26 [00:00<00:00, 43.57it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.57it/s] 88%|########8 | 23/26 [00:00<00:00, 47.37it/s]100%|##########| 26/26 [00:00<00:00, 39.10it/s]
Test: [   0/  26]	Loss 0.602 (0.602)	test_acc   0.68 (  0.68)	test_minacc   0.52 (  0.52)	test_majacc   0.71 (  0.71)	Loss_d 0.602 (0.602)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.579 (0.600)	test_acc   0.70 (  0.68)	test_minacc   0.55 (  0.59)	test_majacc   0.72 (  0.69)	Loss_d 0.579 (0.600)	test_acc_d   0.70 (  0.68)	test_minacc_d   0.55 (  0.59)	test_majacc_d   0.72 (  0.69)	test_corr_d   0.46 (  0.40)
Test: [  20/  26]	Loss 0.597 (0.601)	test_acc   0.67 (  0.68)	test_minacc   0.50 (  0.57)	test_majacc   0.69 (  0.70)	Loss_d 0.597 (0.601)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.50 (  0.57)	test_majacc_d   0.69 (  0.70)	test_corr_d   0.44 (  0.42)
Test: [  26/  26]	Loss 0.657 (0.606)	test_acc   0.62 (  0.67)	test_minacc   0.48 (  0.56)	test_majacc   0.65 (  0.69)	Loss_d 0.657 (0.606)	test_acc_d   0.62 (  0.67)	test_minacc_d   0.48 (  0.56)	test_majacc_d   0.65 (  0.69)	test_corr_d   0.38 (  0.42)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 39.92it/s]
Test: [  0/  1]	Loss 0.905 (0.905)	test_acc   0.43 (  0.43)	test_minacc   0.41 (  0.41)	test_majacc   0.57 (  0.57)	Loss_d 0.905 (0.905)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.28 (  0.28)
Test: [  1/  1]	Loss 0.905 (0.905)	test_acc   0.43 (  0.43)	test_minacc   0.41 (  0.41)	test_majacc   0.57 (  0.57)	Loss_d 0.905 (0.905)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.28 (  0.28)
Overall Timing[  1/  1]	epoch_time 0.0372 (0.0729)	validation_time 0.0005 (0.0037)	train_time 0.0367 (0.0553)
record: (train_acc, test_acc) (0.6128000116944313, 0.5020000338554382)
last accs (train_acc, test_acc) (0.6730000249743462, 0.4270000159740448)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.67it/s] 15%|#5        | 4/26 [00:00<00:01, 16.41it/s] 31%|###       | 8/26 [00:00<00:00, 23.03it/s] 46%|####6     | 12/26 [00:00<00:00, 26.49it/s] 62%|######1   | 16/26 [00:00<00:00, 28.37it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.68it/s] 92%|#########2| 24/26 [00:00<00:00, 30.49it/s]100%|##########| 26/26 [00:01<00:00, 25.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.004 (0.003)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.67 (  0.66)	train_minacc   0.67 (  0.58)	train_majacc   0.67 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.04it/s] 27%|##6       | 7/26 [00:00<00:00, 36.08it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.08it/s] 46%|####6     | 12/26 [00:00<00:00, 41.85it/s] 65%|######5   | 17/26 [00:00<00:00, 43.31it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.31it/s] 88%|########8 | 23/26 [00:00<00:00, 48.33it/s]100%|##########| 26/26 [00:00<00:00, 40.19it/s]
Test: [   0/  26]	Loss 0.605 (0.605)	test_acc   0.64 (  0.64)	test_minacc   0.58 (  0.58)	test_majacc   0.65 (  0.65)	Loss_d 0.605 (0.605)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.579 (0.587)	test_acc   0.72 (  0.68)	test_minacc   0.70 (  0.71)	test_majacc   0.72 (  0.68)	Loss_d 0.579 (0.587)	test_acc_d   0.72 (  0.68)	test_minacc_d   0.70 (  0.71)	test_majacc_d   0.72 (  0.68)	test_corr_d   0.38 (  0.34)
Test: [  20/  26]	Loss 0.616 (0.589)	test_acc   0.63 (  0.67)	test_minacc   0.57 (  0.67)	test_majacc   0.64 (  0.68)	Loss_d 0.616 (0.589)	test_acc_d   0.63 (  0.67)	test_minacc_d   0.57 (  0.67)	test_majacc_d   0.64 (  0.68)	test_corr_d   0.34 (  0.35)
Test: [  26/  26]	Loss 0.604 (0.591)	test_acc   0.68 (  0.67)	test_minacc   0.65 (  0.65)	test_majacc   0.68 (  0.67)	Loss_d 0.604 (0.591)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.68 (  0.67)	test_corr_d   0.29 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.34it/s]
Test: [  0/  1]	Loss 0.737 (0.737)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.63 (  0.63)	Loss_d 0.737 (0.737)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.737 (0.737)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.63 (  0.63)	Loss_d 0.737 (0.737)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.04 ( -0.04)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/28/checkpoints/model_best.pth
Overall Timing[  2/  1]	epoch_time 0.0379 (0.0613)	validation_time 0.0004 (0.0026)	train_time 0.0374 (0.0493)
record: (train_acc, test_acc) (0.6712000263929367, 0.5750000476837158)
last accs (train_acc, test_acc) (0.6712000263929367, 0.5750000476837158)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.01it/s] 19%|#9        | 5/26 [00:00<00:01, 20.20it/s] 31%|###       | 8/26 [00:00<00:00, 23.76it/s] 42%|####2     | 11/26 [00:00<00:00, 25.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.47it/s] 69%|######9   | 18/26 [00:00<00:00, 28.19it/s] 85%|########4 | 22/26 [00:00<00:00, 29.17it/s]100%|##########| 26/26 [00:00<00:00, 29.82it/s]100%|##########| 26/26 [00:01<00:00, 25.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.009 (0.003)	train_nll   0.61 (  0.59)	train_penalty   0.01 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.66 (  0.66)	train_minacc   0.50 (  0.65)	train_majacc   0.70 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.06it/s] 27%|##6       | 7/26 [00:00<00:00, 30.11it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.11it/s] 42%|####2     | 11/26 [00:00<00:00, 33.49it/s] 65%|######5   | 17/26 [00:00<00:00, 42.11it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.11it/s] 88%|########8 | 23/26 [00:00<00:00, 47.08it/s]100%|##########| 26/26 [00:00<00:00, 36.59it/s]
Test: [   0/  26]	Loss 0.576 (0.576)	test_acc   0.65 (  0.65)	test_minacc   0.53 (  0.53)	test_majacc   0.68 (  0.68)	Loss_d 0.576 (0.576)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.45 (  0.45)
Test: [  10/  26]	Loss 0.563 (0.561)	test_acc   0.69 (  0.68)	test_minacc   0.60 (  0.67)	test_majacc   0.70 (  0.69)	Loss_d 0.563 (0.561)	test_acc_d   0.69 (  0.68)	test_minacc_d   0.60 (  0.67)	test_majacc_d   0.70 (  0.69)	test_corr_d   0.47 (  0.44)
Test: [  20/  26]	Loss 0.585 (0.563)	test_acc   0.67 (  0.68)	test_minacc   0.54 (  0.63)	test_majacc   0.68 (  0.69)	Loss_d 0.585 (0.563)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.54 (  0.63)	test_majacc_d   0.68 (  0.69)	test_corr_d   0.47 (  0.45)
Test: [  26/  26]	Loss 0.584 (0.565)	test_acc   0.67 (  0.68)	test_minacc   0.54 (  0.63)	test_majacc   0.70 (  0.69)	Loss_d 0.584 (0.565)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.54 (  0.63)	test_majacc_d   0.70 (  0.69)	test_corr_d   0.45 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.70it/s]
Test: [  0/  1]	Loss 0.806 (0.806)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.66 (  0.66)	Loss_d 0.806 (0.806)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.806 (0.806)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.66 (  0.66)	Loss_d 0.806 (0.806)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.12 (  0.12)
Overall Timing[  3/  1]	epoch_time 0.0389 (0.0557)	validation_time 0.0004 (0.0021)	train_time 0.0384 (0.0466)
record: (train_acc, test_acc) (0.6712000263929367, 0.5750000476837158)
last accs (train_acc, test_acc) (0.6795000312924385, 0.5400000214576721)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.70it/s] 15%|#5        | 4/26 [00:00<00:01, 20.17it/s] 27%|##6       | 7/26 [00:00<00:00, 22.66it/s] 38%|###8      | 10/26 [00:00<00:00, 24.96it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.53it/s] 69%|######9   | 18/26 [00:00<00:00, 28.94it/s] 85%|########4 | 22/26 [00:00<00:00, 29.78it/s] 96%|#########6| 25/26 [00:00<00:00, 29.71it/s]100%|##########| 26/26 [00:01<00:00, 25.79it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.001 (0.004)	train_nll   0.58 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.68 (  0.64)	train_minacc   0.54 (  0.62)	train_majacc   0.71 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.80it/s] 27%|##6       | 7/26 [00:00<00:00, 29.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.17it/s] 50%|#####     | 13/26 [00:00<00:00, 37.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.20it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.20it/s] 96%|#########6| 25/26 [00:00<00:00, 45.64it/s]100%|##########| 26/26 [00:00<00:00, 36.88it/s]
Test: [   0/  26]	Loss 0.703 (0.703)	test_acc   0.61 (  0.61)	test_minacc   0.44 (  0.44)	test_majacc   0.64 (  0.64)	Loss_d 0.703 (0.703)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.645 (0.679)	test_acc   0.65 (  0.63)	test_minacc   0.53 (  0.49)	test_majacc   0.67 (  0.65)	Loss_d 0.645 (0.679)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.53 (  0.49)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.39 (  0.37)
Test: [  20/  26]	Loss 0.689 (0.675)	test_acc   0.60 (  0.62)	test_minacc   0.52 (  0.47)	test_majacc   0.61 (  0.65)	Loss_d 0.689 (0.675)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.52 (  0.47)	test_majacc_d   0.61 (  0.65)	test_corr_d   0.37 (  0.39)
Test: [  26/  26]	Loss 0.593 (0.673)	test_acc   0.68 (  0.63)	test_minacc   0.56 (  0.47)	test_majacc   0.70 (  0.65)	Loss_d 0.593 (0.673)	test_acc_d   0.68 (  0.63)	test_minacc_d   0.56 (  0.47)	test_majacc_d   0.70 (  0.65)	test_corr_d   0.45 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.30it/s]
Test: [  0/  1]	Loss 0.902 (0.902)	test_acc   0.41 (  0.41)	test_minacc   0.39 (  0.39)	test_majacc   0.65 (  0.65)	Loss_d 0.902 (0.902)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.41 (  0.41)
Test: [  1/  1]	Loss 0.902 (0.902)	test_acc   0.41 (  0.41)	test_minacc   0.39 (  0.39)	test_majacc   0.65 (  0.65)	Loss_d 0.902 (0.902)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.39 (  0.39)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.41 (  0.41)
Overall Timing[  4/  1]	epoch_time 0.0390 (0.0523)	validation_time 0.0004 (0.0017)	train_time 0.0386 (0.0450)
record: (train_acc, test_acc) (0.6712000263929367, 0.5750000476837158)
last accs (train_acc, test_acc) (0.6256000128388405, 0.4140000343322754)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.26it/s] 15%|#5        | 4/26 [00:00<00:01, 18.46it/s] 31%|###       | 8/26 [00:00<00:00, 24.44it/s] 46%|####6     | 12/26 [00:00<00:00, 27.15it/s] 62%|######1   | 16/26 [00:00<00:00, 28.48it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.40it/s] 88%|########8 | 23/26 [00:00<00:00, 29.35it/s]100%|##########| 26/26 [00:00<00:00, 29.21it/s]100%|##########| 26/26 [00:01<00:00, 25.46it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.003 (0.006)	train_nll   0.61 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.67 (  0.66)	train_minacc   0.62 (  0.51)	train_majacc   0.68 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.33it/s] 27%|##6       | 7/26 [00:00<00:00, 35.72it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.72it/s] 46%|####6     | 12/26 [00:00<00:00, 41.30it/s] 69%|######9   | 18/26 [00:00<00:00, 42.49it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.49it/s] 92%|#########2| 24/26 [00:00<00:00, 46.38it/s]100%|##########| 26/26 [00:00<00:00, 40.12it/s]
Test: [   0/  26]	Loss 0.633 (0.633)	test_acc   0.64 (  0.64)	test_minacc   0.56 (  0.56)	test_majacc   0.65 (  0.65)	Loss_d 0.633 (0.633)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.638 (0.657)	test_acc   0.64 (  0.61)	test_minacc   0.57 (  0.55)	test_majacc   0.65 (  0.62)	Loss_d 0.638 (0.657)	test_acc_d   0.64 (  0.61)	test_minacc_d   0.57 (  0.55)	test_majacc_d   0.65 (  0.62)	test_corr_d   0.26 (  0.22)
Test: [  20/  26]	Loss 0.662 (0.651)	test_acc   0.60 (  0.62)	test_minacc   0.52 (  0.55)	test_majacc   0.61 (  0.63)	Loss_d 0.662 (0.651)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.52 (  0.55)	test_majacc_d   0.61 (  0.63)	test_corr_d   0.24 (  0.24)
Test: [  26/  26]	Loss 0.617 (0.652)	test_acc   0.65 (  0.62)	test_minacc   0.62 (  0.54)	test_majacc   0.66 (  0.63)	Loss_d 0.617 (0.652)	test_acc_d   0.65 (  0.62)	test_minacc_d   0.62 (  0.54)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 39.11it/s]
Test: [  0/  1]	Loss 0.757 (0.757)	test_acc   0.43 (  0.43)	test_minacc   0.42 (  0.42)	test_majacc   0.56 (  0.56)	Loss_d 0.757 (0.757)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.18 (  0.18)
Test: [  1/  1]	Loss 0.757 (0.757)	test_acc   0.43 (  0.43)	test_minacc   0.42 (  0.42)	test_majacc   0.56 (  0.56)	Loss_d 0.757 (0.757)	test_acc_d   0.43 (  0.43)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.18 (  0.18)
Overall Timing[  5/  1]	epoch_time 0.0402 (0.0503)	validation_time 0.0005 (0.0015)	train_time 0.0396 (0.0441)
record: (train_acc, test_acc) (0.6712000263929367, 0.5750000476837158)
last accs (train_acc, test_acc) (0.6173000085949898, 0.4320000112056732)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.48it/s] 15%|#5        | 4/26 [00:00<00:01, 16.90it/s] 27%|##6       | 7/26 [00:00<00:00, 21.64it/s] 38%|###8      | 10/26 [00:00<00:00, 24.48it/s] 50%|#####     | 13/26 [00:00<00:00, 25.97it/s] 62%|######1   | 16/26 [00:00<00:00, 26.92it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.35it/s] 85%|########4 | 22/26 [00:00<00:00, 27.70it/s] 96%|#########6| 25/26 [00:00<00:00, 27.84it/s]100%|##########| 26/26 [00:01<00:00, 23.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.61 (  0.60)	train_minacc   0.65 (  0.52)	train_majacc   0.60 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.45it/s] 27%|##6       | 7/26 [00:00<00:00, 34.85it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.85it/s] 46%|####6     | 12/26 [00:00<00:00, 39.85it/s] 65%|######5   | 17/26 [00:00<00:00, 38.67it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.67it/s] 85%|########4 | 22/26 [00:00<00:00, 41.34it/s]100%|##########| 26/26 [00:00<00:00, 36.36it/s]
Test: [   0/  26]	Loss 0.638 (0.638)	test_acc   0.61 (  0.61)	test_minacc   0.55 (  0.55)	test_majacc   0.62 (  0.62)	Loss_d 0.638 (0.638)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.644 (0.646)	test_acc   0.61 (  0.60)	test_minacc   0.58 (  0.55)	test_majacc   0.62 (  0.61)	Loss_d 0.644 (0.646)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.28 (  0.27)
Test: [  20/  26]	Loss 0.654 (0.641)	test_acc   0.57 (  0.61)	test_minacc   0.52 (  0.57)	test_majacc   0.58 (  0.62)	Loss_d 0.654 (0.641)	test_acc_d   0.57 (  0.61)	test_minacc_d   0.52 (  0.57)	test_majacc_d   0.58 (  0.62)	test_corr_d   0.25 (  0.28)
Test: [  26/  26]	Loss 0.632 (0.642)	test_acc   0.64 (  0.61)	test_minacc   0.62 (  0.56)	test_majacc   0.64 (  0.62)	Loss_d 0.632 (0.642)	test_acc_d   0.64 (  0.61)	test_minacc_d   0.62 (  0.56)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.26 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.12it/s]
Test: [  0/  1]	Loss 0.741 (0.741)	test_acc   0.48 (  0.48)	test_minacc   0.48 (  0.48)	test_majacc   0.51 (  0.51)	Loss_d 0.741 (0.741)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.741 (0.741)	test_acc   0.48 (  0.48)	test_minacc   0.48 (  0.48)	test_majacc   0.51 (  0.51)	Loss_d 0.741 (0.741)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.14 (  0.14)
Overall Timing[  6/  1]	epoch_time 0.0413 (0.0490)	validation_time 0.0005 (0.0014)	train_time 0.0408 (0.0436)
record: (train_acc, test_acc) (0.6712000263929367, 0.5750000476837158)
last accs (train_acc, test_acc) (0.6104000098705292, 0.4820000231266022)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.85it/s] 15%|#5        | 4/26 [00:00<00:01, 14.61it/s] 27%|##6       | 7/26 [00:00<00:00, 19.06it/s] 38%|###8      | 10/26 [00:00<00:00, 22.31it/s] 50%|#####     | 13/26 [00:00<00:00, 24.17it/s] 62%|######1   | 16/26 [00:00<00:00, 25.79it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.70it/s] 85%|########4 | 22/26 [00:00<00:00, 27.30it/s] 96%|#########6| 25/26 [00:01<00:00, 27.40it/s]100%|##########| 26/26 [00:01<00:00, 22.66it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.001 (0.002)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.69 (  0.62)	train_minacc   0.56 (  0.53)	train_majacc   0.72 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.35it/s] 19%|#9        | 5/26 [00:00<00:00, 24.26it/s] 38%|###8      | 10/26 [00:00<00:00, 34.95it/s]                                                38%|###8      | 10/26 [00:00<00:00, 34.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 36.27it/s] 77%|#######6  | 20/26 [00:00<00:00, 40.12it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 40.12it/s] 96%|#########6| 25/26 [00:00<00:00, 42.71it/s]100%|##########| 26/26 [00:00<00:00, 35.66it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.61 (  0.61)	test_minacc   0.55 (  0.55)	test_majacc   0.62 (  0.62)	Loss_d 0.659 (0.659)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.646 (0.655)	test_acc   0.63 (  0.63)	test_minacc   0.49 (  0.55)	test_majacc   0.65 (  0.64)	Loss_d 0.646 (0.655)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.49 (  0.55)	test_majacc_d   0.65 (  0.64)	test_corr_d   0.27 (  0.24)
Test: [  20/  26]	Loss 0.694 (0.650)	test_acc   0.59 (  0.63)	test_minacc   0.50 (  0.54)	test_majacc   0.60 (  0.64)	Loss_d 0.694 (0.650)	test_acc_d   0.59 (  0.63)	test_minacc_d   0.50 (  0.54)	test_majacc_d   0.60 (  0.64)	test_corr_d   0.21 (  0.25)
Test: [  26/  26]	Loss 0.641 (0.652)	test_acc   0.67 (  0.63)	test_minacc   0.60 (  0.54)	test_majacc   0.68 (  0.64)	Loss_d 0.641 (0.652)	test_acc_d   0.67 (  0.63)	test_minacc_d   0.60 (  0.54)	test_majacc_d   0.68 (  0.64)	test_corr_d   0.28 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.71it/s]
Test: [  0/  1]	Loss 0.782 (0.782)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.58 (  0.58)	Loss_d 0.782 (0.782)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.782 (0.782)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.58 (  0.58)	Loss_d 0.782 (0.782)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.05 (  0.05)
Overall Timing[  7/  1]	epoch_time 0.0414 (0.0481)	validation_time 0.0004 (0.0013)	train_time 0.0410 (0.0433)
record: (train_acc, test_acc) (0.6712000263929367, 0.5750000476837158)
last accs (train_acc, test_acc) (0.6270000100135803, 0.5020000338554382)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.14it/s] 15%|#5        | 4/26 [00:00<00:01, 16.66it/s] 27%|##6       | 7/26 [00:00<00:00, 21.17it/s] 38%|###8      | 10/26 [00:00<00:00, 23.83it/s] 50%|#####     | 13/26 [00:00<00:00, 25.09it/s] 65%|######5   | 17/26 [00:00<00:00, 27.20it/s] 81%|########  | 21/26 [00:00<00:00, 28.38it/s] 96%|#########6| 25/26 [00:00<00:00, 29.66it/s]100%|##########| 26/26 [00:01<00:00, 24.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.006 (0.003)	train_nll   0.61 (  0.64)	train_penalty   0.01 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.68 (  0.61)	train_minacc   0.48 (  0.57)	train_majacc   0.73 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.85it/s] 27%|##6       | 7/26 [00:00<00:00, 35.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.87it/s] 50%|#####     | 13/26 [00:00<00:00, 40.92it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.20it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.20it/s] 96%|#########6| 25/26 [00:00<00:00, 47.83it/s]100%|##########| 26/26 [00:00<00:00, 40.75it/s]
Test: [   0/  26]	Loss 0.568 (0.568)	test_acc   0.68 (  0.68)	test_minacc   0.55 (  0.55)	test_majacc   0.71 (  0.71)	Loss_d 0.568 (0.568)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.597 (0.578)	test_acc   0.68 (  0.68)	test_minacc   0.55 (  0.55)	test_majacc   0.70 (  0.70)	Loss_d 0.597 (0.578)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.46 (  0.44)
Test: [  20/  26]	Loss 0.607 (0.575)	test_acc   0.65 (  0.67)	test_minacc   0.41 (  0.53)	test_majacc   0.68 (  0.70)	Loss_d 0.607 (0.575)	test_acc_d   0.65 (  0.67)	test_minacc_d   0.41 (  0.53)	test_majacc_d   0.68 (  0.70)	test_corr_d   0.45 (  0.45)
Test: [  26/  26]	Loss 0.612 (0.579)	test_acc   0.66 (  0.67)	test_minacc   0.48 (  0.53)	test_majacc   0.71 (  0.70)	Loss_d 0.612 (0.579)	test_acc_d   0.66 (  0.67)	test_minacc_d   0.48 (  0.53)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.46 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.71it/s]
Test: [  0/  1]	Loss 0.925 (0.925)	test_acc   0.47 (  0.47)	test_minacc   0.46 (  0.46)	test_majacc   0.62 (  0.62)	Loss_d 0.925 (0.925)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.20 (  0.20)
Test: [  1/  1]	Loss 0.925 (0.925)	test_acc   0.47 (  0.47)	test_minacc   0.46 (  0.46)	test_majacc   0.62 (  0.62)	Loss_d 0.925 (0.925)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.20 (  0.20)
Overall Timing[  8/  1]	epoch_time 0.0389 (0.0471)	validation_time 0.0004 (0.0012)	train_time 0.0385 (0.0428)
record: (train_acc, test_acc) (0.6712000263929367, 0.5750000476837158)
last accs (train_acc, test_acc) (0.671900030374527, 0.47200003266334534)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.43it/s] 15%|#5        | 4/26 [00:00<00:01, 16.75it/s] 27%|##6       | 7/26 [00:00<00:00, 20.92it/s] 38%|###8      | 10/26 [00:00<00:00, 23.99it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.69it/s] 69%|######9   | 18/26 [00:00<00:00, 28.05it/s] 85%|########4 | 22/26 [00:00<00:00, 29.36it/s]100%|##########| 26/26 [00:00<00:00, 30.06it/s]100%|##########| 26/26 [00:01<00:00, 24.69it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.004 (0.002)	train_nll   0.62 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.65 (  0.60)	train_minacc   0.69 (  0.60)	train_majacc   0.64 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 27%|##6       | 7/26 [00:00<00:00, 32.73it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.73it/s] 50%|#####     | 13/26 [00:00<00:00, 37.56it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.68it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.68it/s] 96%|#########6| 25/26 [00:00<00:00, 45.23it/s]100%|##########| 26/26 [00:00<00:00, 37.85it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.65 (  0.65)	test_minacc   0.74 (  0.74)	test_majacc   0.63 (  0.63)	Loss_d 0.630 (0.630)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.625 (0.639)	test_acc   0.66 (  0.61)	test_minacc   0.55 (  0.59)	test_majacc   0.67 (  0.61)	Loss_d 0.625 (0.639)	test_acc_d   0.66 (  0.61)	test_minacc_d   0.55 (  0.59)	test_majacc_d   0.67 (  0.61)	test_corr_d   0.35 (  0.27)
Test: [  20/  26]	Loss 0.640 (0.638)	test_acc   0.59 (  0.61)	test_minacc   0.59 (  0.56)	test_majacc   0.59 (  0.62)	Loss_d 0.640 (0.638)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.59 (  0.56)	test_majacc_d   0.59 (  0.62)	test_corr_d   0.30 (  0.29)
Test: [  26/  26]	Loss 0.619 (0.639)	test_acc   0.66 (  0.61)	test_minacc   0.69 (  0.56)	test_majacc   0.65 (  0.62)	Loss_d 0.619 (0.639)	test_acc_d   0.66 (  0.61)	test_minacc_d   0.69 (  0.56)	test_majacc_d   0.65 (  0.62)	test_corr_d   0.27 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.55it/s]
Test: [  0/  1]	Loss 0.714 (0.714)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.61 (  0.61)	Loss_d 0.714 (0.714)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.714 (0.714)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.61 (  0.61)	Loss_d 0.714 (0.714)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.08 (  0.08)
Overall Timing[  9/  1]	epoch_time 0.0389 (0.0462)	validation_time 0.0004 (0.0011)	train_time 0.0384 (0.0423)
record: (train_acc, test_acc) (0.6712000263929367, 0.5750000476837158)
last accs (train_acc, test_acc) (0.6142000136375427, 0.4970000088214874)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.92it/s] 15%|#5        | 4/26 [00:00<00:01, 18.66it/s] 31%|###       | 8/26 [00:00<00:00, 24.60it/s] 46%|####6     | 12/26 [00:00<00:00, 27.37it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.63it/s] 88%|########8 | 23/26 [00:00<00:00, 29.49it/s]100%|##########| 26/26 [00:01<00:00, 25.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.002 (0.002)	train_nll   0.68 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.60 (  0.59)	train_minacc   0.65 (  0.57)	train_majacc   0.58 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.80it/s] 23%|##3       | 6/26 [00:00<00:00, 25.79it/s]                                               23%|##3       | 6/26 [00:00<00:00, 25.79it/s] 42%|####2     | 11/26 [00:00<00:00, 34.20it/s] 65%|######5   | 17/26 [00:00<00:00, 39.53it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.53it/s] 88%|########8 | 23/26 [00:00<00:00, 44.97it/s]100%|##########| 26/26 [00:00<00:00, 35.68it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.62 (  0.62)	test_minacc   0.73 (  0.73)	test_majacc   0.59 (  0.59)	Loss_d 0.655 (0.655)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.656 (0.648)	test_acc   0.63 (  0.60)	test_minacc   0.72 (  0.73)	test_majacc   0.62 (  0.58)	Loss_d 0.656 (0.648)	test_acc_d   0.63 (  0.60)	test_minacc_d   0.72 (  0.73)	test_majacc_d   0.62 (  0.58)	test_corr_d   0.20 (  0.17)
Test: [  20/  26]	Loss 0.664 (0.644)	test_acc   0.58 (  0.61)	test_minacc   0.67 (  0.71)	test_majacc   0.57 (  0.60)	Loss_d 0.664 (0.644)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.67 (  0.71)	test_majacc_d   0.57 (  0.60)	test_corr_d   0.20 (  0.20)
Test: [  26/  26]	Loss 0.670 (0.646)	test_acc   0.60 (  0.61)	test_minacc   0.60 (  0.70)	test_majacc   0.59 (  0.60)	Loss_d 0.670 (0.646)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.60 (  0.70)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.13 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.12it/s]
Test: [  0/  1]	Loss 0.679 (0.679)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.54 (  0.54)	Loss_d 0.679 (0.679)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.16 ( -0.16)
Test: [  1/  1]	Loss 0.679 (0.679)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.54 (  0.54)	Loss_d 0.679 (0.679)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.16 ( -0.16)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/28/checkpoints/model_best.pth
Overall Timing[ 10/  1]	epoch_time 0.0400 (0.0457)	validation_time 0.0004 (0.0010)	train_time 0.0396 (0.0421)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.98it/s] 15%|#5        | 4/26 [00:00<00:01, 16.42it/s] 27%|##6       | 7/26 [00:00<00:00, 21.16it/s] 38%|###8      | 10/26 [00:00<00:00, 23.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.48it/s] 69%|######9   | 18/26 [00:00<00:00, 28.07it/s] 85%|########4 | 22/26 [00:00<00:00, 29.48it/s]100%|##########| 26/26 [00:00<00:00, 30.26it/s]100%|##########| 26/26 [00:01<00:00, 24.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.002 (0.001)	train_nll   0.64 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.81)	train_acc   0.61 (  0.60)	train_minacc   0.56 (  0.66)	train_majacc   0.62 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.63it/s] 27%|##6       | 7/26 [00:00<00:00, 30.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.89it/s] 46%|####6     | 12/26 [00:00<00:00, 36.19it/s] 69%|######9   | 18/26 [00:00<00:00, 42.84it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.84it/s] 92%|#########2| 24/26 [00:00<00:00, 44.86it/s]100%|##########| 26/26 [00:00<00:00, 36.96it/s]
Test: [   0/  26]	Loss 0.652 (0.652)	test_acc   0.59 (  0.59)	test_minacc   0.66 (  0.66)	test_majacc   0.57 (  0.57)	Loss_d 0.652 (0.652)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.635 (0.653)	test_acc   0.64 (  0.58)	test_minacc   0.57 (  0.55)	test_majacc   0.65 (  0.59)	Loss_d 0.635 (0.653)	test_acc_d   0.64 (  0.58)	test_minacc_d   0.57 (  0.55)	test_majacc_d   0.65 (  0.59)	test_corr_d   0.31 (  0.24)
Test: [  20/  26]	Loss 0.638 (0.650)	test_acc   0.63 (  0.59)	test_minacc   0.52 (  0.52)	test_majacc   0.64 (  0.60)	Loss_d 0.638 (0.650)	test_acc_d   0.63 (  0.59)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.64 (  0.60)	test_corr_d   0.32 (  0.27)
Test: [  26/  26]	Loss 0.648 (0.651)	test_acc   0.59 (  0.59)	test_minacc   0.54 (  0.52)	test_majacc   0.60 (  0.60)	Loss_d 0.648 (0.651)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.54 (  0.52)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.28 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.01it/s]
Test: [  0/  1]	Loss 0.730 (0.730)	test_acc   0.48 (  0.48)	test_minacc   0.46 (  0.46)	test_majacc   0.59 (  0.59)	Loss_d 0.730 (0.730)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.730 (0.730)	test_acc   0.48 (  0.48)	test_minacc   0.46 (  0.46)	test_majacc   0.59 (  0.59)	Loss_d 0.730 (0.730)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.14 (  0.14)
Overall Timing[ 11/  1]	epoch_time 0.0376 (0.0450)	validation_time 0.0004 (0.0010)	train_time 0.0371 (0.0417)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5911000051498413, 0.47700002789497375)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.97it/s] 15%|#5        | 4/26 [00:00<00:01, 15.14it/s] 27%|##6       | 7/26 [00:00<00:00, 20.49it/s] 38%|###8      | 10/26 [00:00<00:00, 23.68it/s] 50%|#####     | 13/26 [00:00<00:00, 25.75it/s] 65%|######5   | 17/26 [00:00<00:00, 27.51it/s] 81%|########  | 21/26 [00:00<00:00, 28.77it/s] 96%|#########6| 25/26 [00:00<00:00, 29.73it/s]100%|##########| 26/26 [00:01<00:00, 24.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.58 (  0.56)	train_minacc   0.67 (  0.58)	train_majacc   0.55 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.40it/s] 27%|##6       | 7/26 [00:00<00:00, 33.08it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.08it/s] 50%|#####     | 13/26 [00:00<00:00, 39.35it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.81it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.81it/s] 96%|#########6| 25/26 [00:00<00:00, 46.92it/s]100%|##########| 26/26 [00:00<00:00, 38.86it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.55 (  0.55)	test_minacc   0.74 (  0.74)	test_majacc   0.51 (  0.51)	Loss_d 0.657 (0.657)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.644 (0.651)	test_acc   0.60 (  0.56)	test_minacc   0.62 (  0.70)	test_majacc   0.60 (  0.54)	Loss_d 0.644 (0.651)	test_acc_d   0.60 (  0.56)	test_minacc_d   0.62 (  0.70)	test_majacc_d   0.60 (  0.54)	test_corr_d   0.24 (  0.18)
Test: [  20/  26]	Loss 0.647 (0.648)	test_acc   0.56 (  0.57)	test_minacc   0.70 (  0.68)	test_majacc   0.55 (  0.55)	Loss_d 0.647 (0.648)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.70 (  0.68)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.26 (  0.21)
Test: [  26/  26]	Loss 0.665 (0.650)	test_acc   0.58 (  0.57)	test_minacc   0.67 (  0.68)	test_majacc   0.56 (  0.55)	Loss_d 0.665 (0.650)	test_acc_d   0.58 (  0.57)	test_minacc_d   0.67 (  0.68)	test_majacc_d   0.56 (  0.55)	test_corr_d   0.15 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.54it/s]
Test: [  0/  1]	Loss 0.706 (0.706)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.706 (0.706)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.706 (0.706)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.52 (  0.52)	Loss_d 0.706 (0.706)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 12/  1]	epoch_time 0.0394 (0.0446)	validation_time 0.0004 (0.0009)	train_time 0.0390 (0.0415)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5663000113964081, 0.5860000252723694)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 15%|#5        | 4/26 [00:00<00:01, 16.60it/s] 27%|##6       | 7/26 [00:00<00:00, 21.27it/s] 38%|###8      | 10/26 [00:00<00:00, 23.98it/s] 50%|#####     | 13/26 [00:00<00:00, 24.94it/s] 62%|######1   | 16/26 [00:00<00:00, 25.61it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.79it/s] 92%|#########2| 24/26 [00:00<00:00, 29.41it/s]100%|##########| 26/26 [00:01<00:00, 23.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.60 (  0.57)	train_minacc   0.65 (  0.66)	train_majacc   0.59 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.64it/s] 23%|##3       | 6/26 [00:00<00:00, 31.02it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.02it/s] 42%|####2     | 11/26 [00:00<00:00, 35.47it/s] 65%|######5   | 17/26 [00:00<00:00, 42.98it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.98it/s] 88%|########8 | 23/26 [00:00<00:00, 45.01it/s]100%|##########| 26/26 [00:00<00:00, 38.13it/s]
Test: [   0/  26]	Loss 0.648 (0.648)	test_acc   0.58 (  0.58)	test_minacc   0.74 (  0.74)	test_majacc   0.55 (  0.55)	Loss_d 0.648 (0.648)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.74 (  0.74)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.645 (0.649)	test_acc   0.59 (  0.55)	test_minacc   0.62 (  0.64)	test_majacc   0.58 (  0.54)	Loss_d 0.645 (0.649)	test_acc_d   0.59 (  0.55)	test_minacc_d   0.62 (  0.64)	test_majacc_d   0.58 (  0.54)	test_corr_d   0.27 (  0.22)
Test: [  20/  26]	Loss 0.644 (0.643)	test_acc   0.57 (  0.57)	test_minacc   0.67 (  0.63)	test_majacc   0.56 (  0.56)	Loss_d 0.644 (0.643)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.67 (  0.63)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.28 (  0.25)
Test: [  26/  26]	Loss 0.650 (0.644)	test_acc   0.60 (  0.57)	test_minacc   0.65 (  0.63)	test_majacc   0.58 (  0.56)	Loss_d 0.650 (0.644)	test_acc_d   0.60 (  0.57)	test_minacc_d   0.65 (  0.63)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.24 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.50it/s]
Test: [  0/  1]	Loss 0.724 (0.724)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.58 (  0.58)	Loss_d 0.724 (0.724)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.724 (0.724)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.58 (  0.58)	Loss_d 0.724 (0.724)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.05 (  0.05)
Overall Timing[ 13/  1]	epoch_time 0.0383 (0.0441)	validation_time 0.0004 (0.0009)	train_time 0.0379 (0.0412)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5719000136852265, 0.5520000457763672)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.42it/s] 15%|#5        | 4/26 [00:00<00:01, 19.20it/s] 27%|##6       | 7/26 [00:00<00:00, 22.70it/s] 38%|###8      | 10/26 [00:00<00:00, 24.80it/s] 50%|#####     | 13/26 [00:00<00:00, 25.49it/s] 62%|######1   | 16/26 [00:00<00:00, 26.32it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.49it/s] 85%|########4 | 22/26 [00:00<00:00, 27.14it/s] 96%|#########6| 25/26 [00:00<00:00, 27.69it/s]100%|##########| 26/26 [00:01<00:00, 24.26it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.56 (  0.56)	train_minacc   0.54 (  0.63)	train_majacc   0.57 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.16it/s] 23%|##3       | 6/26 [00:00<00:00, 26.41it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.41it/s] 46%|####6     | 12/26 [00:00<00:00, 38.24it/s] 65%|######5   | 17/26 [00:00<00:00, 38.58it/s]                                                65%|######5   | 17/26 [00:00<00:00, 38.58it/s] 88%|########8 | 23/26 [00:00<00:00, 43.40it/s]100%|##########| 26/26 [00:00<00:00, 35.16it/s]
Test: [   0/  26]	Loss 0.652 (0.652)	test_acc   0.59 (  0.59)	test_minacc   0.68 (  0.68)	test_majacc   0.57 (  0.57)	Loss_d 0.652 (0.652)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.68 (  0.68)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.658 (0.657)	test_acc   0.58 (  0.56)	test_minacc   0.55 (  0.61)	test_majacc   0.58 (  0.55)	Loss_d 0.658 (0.657)	test_acc_d   0.58 (  0.56)	test_minacc_d   0.55 (  0.61)	test_majacc_d   0.58 (  0.55)	test_corr_d   0.26 (  0.21)
Test: [  20/  26]	Loss 0.638 (0.651)	test_acc   0.63 (  0.58)	test_minacc   0.57 (  0.60)	test_majacc   0.63 (  0.58)	Loss_d 0.638 (0.651)	test_acc_d   0.63 (  0.58)	test_minacc_d   0.57 (  0.60)	test_majacc_d   0.63 (  0.58)	test_corr_d   0.28 (  0.24)
Test: [  26/  26]	Loss 0.661 (0.652)	test_acc   0.58 (  0.58)	test_minacc   0.62 (  0.60)	test_majacc   0.57 (  0.58)	Loss_d 0.661 (0.652)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.62 (  0.60)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.18 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.47it/s]
Test: [  0/  1]	Loss 0.720 (0.720)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.59 (  0.59)	Loss_d 0.720 (0.720)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.720 (0.720)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.59 (  0.59)	Loss_d 0.720 (0.720)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.05 (  0.05)
Overall Timing[ 14/  1]	epoch_time 0.0388 (0.0438)	validation_time 0.0004 (0.0009)	train_time 0.0383 (0.0410)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5799000115394592, 0.5370000004768372)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.34it/s] 12%|#1        | 3/26 [00:00<00:02,  9.54it/s] 23%|##3       | 6/26 [00:00<00:01, 16.36it/s] 38%|###8      | 10/26 [00:00<00:00, 21.79it/s] 50%|#####     | 13/26 [00:00<00:00, 24.14it/s] 65%|######5   | 17/26 [00:00<00:00, 26.36it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.10it/s] 88%|########8 | 23/26 [00:01<00:00, 27.92it/s]100%|##########| 26/26 [00:01<00:00, 12.52it/s]100%|##########| 26/26 [00:01<00:00, 16.06it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0072, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(4.3471e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(2.9230e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.002 (0.001)	train_nll   0.68 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.56 (  0.58)	train_minacc   0.58 (  0.53)	train_majacc   0.56 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.42it/s] 27%|##6       | 7/26 [00:00<00:00, 33.86it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.86it/s] 50%|#####     | 13/26 [00:00<00:00, 38.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.91it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.91it/s] 92%|#########2| 24/26 [00:00<00:00, 44.91it/s]100%|##########| 26/26 [00:00<00:00, 38.12it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.53 (  0.53)	test_minacc   0.63 (  0.63)	test_majacc   0.51 (  0.51)	Loss_d 0.659 (0.659)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.667 (0.654)	test_acc   0.53 (  0.55)	test_minacc   0.49 (  0.61)	test_majacc   0.53 (  0.54)	Loss_d 0.667 (0.654)	test_acc_d   0.53 (  0.55)	test_minacc_d   0.49 (  0.61)	test_majacc_d   0.53 (  0.54)	test_corr_d   0.24 (  0.21)
Test: [  20/  26]	Loss 0.637 (0.651)	test_acc   0.59 (  0.56)	test_minacc   0.52 (  0.60)	test_majacc   0.60 (  0.56)	Loss_d 0.637 (0.651)	test_acc_d   0.59 (  0.56)	test_minacc_d   0.52 (  0.60)	test_majacc_d   0.60 (  0.56)	test_corr_d   0.30 (  0.23)
Test: [  26/  26]	Loss 0.656 (0.651)	test_acc   0.59 (  0.56)	test_minacc   0.65 (  0.59)	test_majacc   0.57 (  0.56)	Loss_d 0.656 (0.651)	test_acc_d   0.59 (  0.56)	test_minacc_d   0.65 (  0.59)	test_majacc_d   0.57 (  0.56)	test_corr_d   0.18 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.85it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.58 (  0.58)	Loss_d 0.698 (0.698)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.58 (  0.58)	Loss_d 0.698 (0.698)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 15/  1]	epoch_time 0.0494 (0.0441)	validation_time 0.0011 (0.0009)	train_time 0.0483 (0.0415)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5649000090360642, 0.5580000281333923)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.80it/s] 12%|#1        | 3/26 [00:00<00:02, 10.98it/s] 27%|##6       | 7/26 [00:00<00:00, 19.43it/s] 38%|###8      | 10/26 [00:00<00:00, 22.69it/s] 50%|#####     | 13/26 [00:00<00:00, 24.96it/s] 62%|######1   | 16/26 [00:00<00:00, 26.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.48it/s] 85%|########4 | 22/26 [00:00<00:00, 27.15it/s] 96%|#########6| 25/26 [00:01<00:00, 27.73it/s]100%|##########| 26/26 [00:01<00:00, 22.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0047, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(3.3094e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.032 (0.006)	train_nll   0.72 (  0.63)	train_penalty   0.03 (  0.01)	weight_norm   7.80 (  7.80)	train_acc   0.58 (  0.62)	train_minacc   0.54 (  0.49)	train_majacc   0.58 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.18it/s] 27%|##6       | 7/26 [00:00<00:00, 31.94it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.94it/s] 50%|#####     | 13/26 [00:00<00:00, 39.17it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.08it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.08it/s] 96%|#########6| 25/26 [00:00<00:00, 46.22it/s]100%|##########| 26/26 [00:00<00:00, 38.54it/s]
Test: [   0/  26]	Loss 0.604 (0.604)	test_acc   0.65 (  0.65)	test_minacc   0.40 (  0.40)	test_majacc   0.69 (  0.69)	Loss_d 0.604 (0.604)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.40 (  0.40)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.583 (0.590)	test_acc   0.73 (  0.69)	test_minacc   0.45 (  0.44)	test_majacc   0.77 (  0.73)	Loss_d 0.583 (0.590)	test_acc_d   0.73 (  0.69)	test_minacc_d   0.45 (  0.44)	test_majacc_d   0.77 (  0.73)	test_corr_d   0.54 (  0.51)
Test: [  20/  26]	Loss 0.580 (0.588)	test_acc   0.71 (  0.69)	test_minacc   0.50 (  0.42)	test_majacc   0.74 (  0.74)	Loss_d 0.580 (0.588)	test_acc_d   0.71 (  0.69)	test_minacc_d   0.50 (  0.42)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.56 (  0.53)
Test: [  26/  26]	Loss 0.606 (0.588)	test_acc   0.73 (  0.69)	test_minacc   0.38 (  0.42)	test_majacc   0.82 (  0.74)	Loss_d 0.606 (0.588)	test_acc_d   0.73 (  0.69)	test_minacc_d   0.38 (  0.42)	test_majacc_d   0.82 (  0.74)	test_corr_d   0.60 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.24it/s]
Test: [  0/  1]	Loss 0.836 (0.836)	test_acc   0.37 (  0.37)	test_minacc   0.33 (  0.33)	test_majacc   0.76 (  0.76)	Loss_d 0.836 (0.836)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.42 (  0.42)
Test: [  1/  1]	Loss 0.836 (0.836)	test_acc   0.37 (  0.37)	test_minacc   0.33 (  0.33)	test_majacc   0.76 (  0.76)	Loss_d 0.836 (0.836)	test_acc_d   0.37 (  0.37)	test_minacc_d   0.33 (  0.33)	test_majacc_d   0.76 (  0.76)	test_corr_d   0.42 (  0.42)
Overall Timing[ 16/  1]	epoch_time 0.0399 (0.0439)	validation_time 0.0005 (0.0009)	train_time 0.0391 (0.0413)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6901000310182571, 0.3700000047683716)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.54it/s] 15%|#5        | 4/26 [00:00<00:01, 14.71it/s] 31%|###       | 8/26 [00:00<00:00, 21.43it/s] 42%|####2     | 11/26 [00:00<00:00, 23.84it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.19it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.74it/s] 88%|########8 | 23/26 [00:00<00:00, 28.55it/s]100%|##########| 26/26 [00:01<00:00, 23.97it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0038, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(1.2008e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.001 (0.005)	train_nll   0.65 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.80)	train_acc   0.61 (  0.64)	train_minacc   0.52 (  0.49)	train_majacc   0.63 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.61it/s] 31%|###       | 8/26 [00:00<00:00, 39.41it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.41it/s] 50%|#####     | 13/26 [00:00<00:00, 42.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.57it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.57it/s] 92%|#########2| 24/26 [00:00<00:00, 45.76it/s]100%|##########| 26/26 [00:00<00:00, 40.45it/s]
Test: [   0/  26]	Loss 0.628 (0.628)	test_acc   0.66 (  0.66)	test_minacc   0.53 (  0.53)	test_majacc   0.69 (  0.69)	Loss_d 0.628 (0.628)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.650 (0.631)	test_acc   0.62 (  0.65)	test_minacc   0.51 (  0.50)	test_majacc   0.64 (  0.67)	Loss_d 0.650 (0.631)	test_acc_d   0.62 (  0.65)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.64 (  0.67)	test_corr_d   0.35 (  0.36)
Test: [  20/  26]	Loss 0.621 (0.626)	test_acc   0.66 (  0.65)	test_minacc   0.41 (  0.49)	test_majacc   0.69 (  0.68)	Loss_d 0.621 (0.626)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.41 (  0.49)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.40 (  0.38)
Test: [  26/  26]	Loss 0.663 (0.627)	test_acc   0.60 (  0.65)	test_minacc   0.42 (  0.49)	test_majacc   0.64 (  0.67)	Loss_d 0.663 (0.627)	test_acc_d   0.60 (  0.65)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.64 (  0.67)	test_corr_d   0.37 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.52it/s]
Test: [  0/  1]	Loss 0.762 (0.762)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.65 (  0.65)	Loss_d 0.762 (0.762)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.762 (0.762)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.65 (  0.65)	Loss_d 0.762 (0.762)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.05 (  0.05)
Overall Timing[ 17/  1]	epoch_time 0.0386 (0.0436)	validation_time 0.0004 (0.0008)	train_time 0.0381 (0.0411)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6464000150561333, 0.5049999952316284)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.06it/s] 12%|#1        | 3/26 [00:00<00:01, 13.26it/s] 27%|##6       | 7/26 [00:00<00:00, 21.66it/s] 42%|####2     | 11/26 [00:00<00:00, 25.20it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.39it/s] 88%|########8 | 23/26 [00:00<00:00, 29.21it/s]100%|##########| 26/26 [00:01<00:00, 24.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0028, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: tensor(4.3220e-06, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.005 (0.004)	train_nll   0.71 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.50 (  0.62)	train_minacc   0.46 (  0.49)	train_majacc   0.50 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.66it/s] 31%|###       | 8/26 [00:00<00:00, 42.02it/s]                                               31%|###       | 8/26 [00:00<00:00, 42.02it/s] 50%|#####     | 13/26 [00:00<00:00, 43.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.40it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.40it/s] 96%|#########6| 25/26 [00:00<00:00, 49.18it/s]100%|##########| 26/26 [00:00<00:00, 42.53it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.67 (  0.67)	test_minacc   0.52 (  0.52)	test_majacc   0.70 (  0.70)	Loss_d 0.597 (0.597)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.50 (  0.50)
Test: [  10/  26]	Loss 0.609 (0.607)	test_acc   0.60 (  0.63)	test_minacc   0.47 (  0.48)	test_majacc   0.62 (  0.66)	Loss_d 0.609 (0.607)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.47 (  0.48)	test_majacc_d   0.62 (  0.66)	test_corr_d   0.52 (  0.51)
Test: [  20/  26]	Loss 0.593 (0.606)	test_acc   0.65 (  0.63)	test_minacc   0.37 (  0.47)	test_majacc   0.69 (  0.66)	Loss_d 0.593 (0.606)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.37 (  0.47)	test_majacc_d   0.69 (  0.66)	test_corr_d   0.53 (  0.52)
Test: [  26/  26]	Loss 0.621 (0.606)	test_acc   0.60 (  0.63)	test_minacc   0.38 (  0.47)	test_majacc   0.65 (  0.66)	Loss_d 0.621 (0.606)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.38 (  0.47)	test_majacc_d   0.65 (  0.66)	test_corr_d   0.56 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.93it/s]
Test: [  0/  1]	Loss 0.774 (0.774)	test_acc   0.46 (  0.46)	test_minacc   0.44 (  0.44)	test_majacc   0.62 (  0.62)	Loss_d 0.774 (0.774)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.27 (  0.27)
Test: [  1/  1]	Loss 0.774 (0.774)	test_acc   0.46 (  0.46)	test_minacc   0.44 (  0.44)	test_majacc   0.62 (  0.62)	Loss_d 0.774 (0.774)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.27 (  0.27)
Overall Timing[ 18/  1]	epoch_time 0.0424 (0.0435)	validation_time 0.0004 (0.0008)	train_time 0.0412 (0.0412)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6317000124454498, 0.4610000252723694)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.83it/s] 15%|#5        | 4/26 [00:00<00:01, 17.24it/s] 27%|##6       | 7/26 [00:00<00:00, 21.80it/s] 42%|####2     | 11/26 [00:00<00:00, 25.30it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.13it/s] 69%|######9   | 18/26 [00:00<00:00, 24.10it/s] 81%|########  | 21/26 [00:00<00:00, 25.55it/s] 92%|#########2| 24/26 [00:00<00:00, 26.65it/s]100%|##########| 26/26 [00:01<00:00, 23.57it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0030, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.004 (0.004)	train_nll   0.64 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.61 (  0.65)	train_minacc   0.52 (  0.52)	train_majacc   0.63 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.54it/s] 23%|##3       | 6/26 [00:00<00:00, 29.49it/s]                                               23%|##3       | 6/26 [00:00<00:00, 29.49it/s] 42%|####2     | 11/26 [00:00<00:00, 37.99it/s] 65%|######5   | 17/26 [00:00<00:00, 43.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.37it/s] 88%|########8 | 23/26 [00:00<00:00, 47.58it/s]100%|##########| 26/26 [00:00<00:00, 39.00it/s]
Test: [   0/  26]	Loss 0.616 (0.616)	test_acc   0.62 (  0.62)	test_minacc   0.44 (  0.44)	test_majacc   0.66 (  0.66)	Loss_d 0.616 (0.616)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.46 (  0.46)
Test: [  10/  26]	Loss 0.557 (0.587)	test_acc   0.69 (  0.65)	test_minacc   0.55 (  0.52)	test_majacc   0.71 (  0.68)	Loss_d 0.557 (0.587)	test_acc_d   0.69 (  0.65)	test_minacc_d   0.55 (  0.52)	test_majacc_d   0.71 (  0.68)	test_corr_d   0.50 (  0.46)
Test: [  20/  26]	Loss 0.602 (0.589)	test_acc   0.63 (  0.65)	test_minacc   0.52 (  0.51)	test_majacc   0.65 (  0.68)	Loss_d 0.602 (0.589)	test_acc_d   0.63 (  0.65)	test_minacc_d   0.52 (  0.51)	test_majacc_d   0.65 (  0.68)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.628 (0.590)	test_acc   0.67 (  0.66)	test_minacc   0.42 (  0.50)	test_majacc   0.73 (  0.68)	Loss_d 0.628 (0.590)	test_acc_d   0.67 (  0.66)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.73 (  0.68)	test_corr_d   0.48 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.79it/s]
Test: [  0/  1]	Loss 0.939 (0.939)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.62 (  0.62)	Loss_d 0.939 (0.939)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.23 (  0.23)
Test: [  1/  1]	Loss 0.939 (0.939)	test_acc   0.47 (  0.47)	test_minacc   0.45 (  0.45)	test_majacc   0.62 (  0.62)	Loss_d 0.939 (0.939)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.45 (  0.45)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.23 (  0.23)
Overall Timing[ 19/  1]	epoch_time 0.0410 (0.0434)	validation_time 0.0004 (0.0008)	train_time 0.0405 (0.0411)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.655800018966198, 0.4690000116825104)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.06it/s] 15%|#5        | 4/26 [00:00<00:01, 14.53it/s] 27%|##6       | 7/26 [00:00<00:00, 19.81it/s] 38%|###8      | 10/26 [00:00<00:00, 23.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.98it/s] 65%|######5   | 17/26 [00:00<00:00, 26.92it/s] 81%|########  | 21/26 [00:00<00:00, 28.43it/s] 96%|#########6| 25/26 [00:01<00:00, 28.99it/s]100%|##########| 26/26 [00:01<00:00, 23.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0024, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.001 (0.003)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.63 (  0.63)	train_minacc   0.62 (  0.54)	train_majacc   0.63 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.89it/s] 27%|##6       | 7/26 [00:00<00:00, 35.01it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.01it/s] 50%|#####     | 13/26 [00:00<00:00, 40.71it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.61it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.61it/s] 96%|#########6| 25/26 [00:00<00:00, 47.68it/s]100%|##########| 26/26 [00:00<00:00, 39.49it/s]
Test: [   0/  26]	Loss 0.616 (0.616)	test_acc   0.61 (  0.61)	test_minacc   0.53 (  0.53)	test_majacc   0.62 (  0.62)	Loss_d 0.616 (0.616)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.589 (0.601)	test_acc   0.67 (  0.63)	test_minacc   0.64 (  0.59)	test_majacc   0.67 (  0.64)	Loss_d 0.589 (0.601)	test_acc_d   0.67 (  0.63)	test_minacc_d   0.64 (  0.59)	test_majacc_d   0.67 (  0.64)	test_corr_d   0.40 (  0.37)
Test: [  20/  26]	Loss 0.606 (0.601)	test_acc   0.61 (  0.64)	test_minacc   0.59 (  0.58)	test_majacc   0.61 (  0.65)	Loss_d 0.606 (0.601)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.59 (  0.58)	test_majacc_d   0.61 (  0.65)	test_corr_d   0.40 (  0.38)
Test: [  26/  26]	Loss 0.607 (0.601)	test_acc   0.66 (  0.64)	test_minacc   0.56 (  0.58)	test_majacc   0.68 (  0.65)	Loss_d 0.607 (0.601)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.56 (  0.58)	test_majacc_d   0.68 (  0.65)	test_corr_d   0.42 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.17it/s]
Test: [  0/  1]	Loss 0.785 (0.785)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.61 (  0.61)	Loss_d 0.785 (0.785)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.785 (0.785)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.61 (  0.61)	Loss_d 0.785 (0.785)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.07 (  0.07)
Overall Timing[ 20/  1]	epoch_time 0.0407 (0.0433)	validation_time 0.0005 (0.0008)	train_time 0.0401 (0.0411)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6388000168204307, 0.5360000133514404)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.91it/s] 15%|#5        | 4/26 [00:00<00:01, 16.26it/s] 27%|##6       | 7/26 [00:00<00:00, 21.09it/s] 42%|####2     | 11/26 [00:00<00:00, 24.82it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.08it/s] 65%|######5   | 17/26 [00:00<00:00, 26.66it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.54it/s] 88%|########8 | 23/26 [00:00<00:00, 27.95it/s]100%|##########| 26/26 [00:01<00:00, 23.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0020, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.002 (0.004)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.62 (  0.63)	train_minacc   0.48 (  0.54)	train_majacc   0.65 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.25it/s] 27%|##6       | 7/26 [00:00<00:00, 36.31it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.31it/s] 46%|####6     | 12/26 [00:00<00:00, 41.55it/s] 65%|######5   | 17/26 [00:00<00:00, 44.75it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.75it/s] 85%|########4 | 22/26 [00:00<00:00, 46.51it/s]100%|##########| 26/26 [00:00<00:00, 40.05it/s]
Test: [   0/  26]	Loss 0.635 (0.635)	test_acc   0.63 (  0.63)	test_minacc   0.44 (  0.44)	test_majacc   0.66 (  0.66)	Loss_d 0.635 (0.635)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.597 (0.610)	test_acc   0.67 (  0.67)	test_minacc   0.45 (  0.50)	test_majacc   0.71 (  0.70)	Loss_d 0.597 (0.610)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.45 (  0.50)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.43 (  0.42)
Test: [  20/  26]	Loss 0.612 (0.608)	test_acc   0.65 (  0.67)	test_minacc   0.61 (  0.51)	test_majacc   0.66 (  0.70)	Loss_d 0.612 (0.608)	test_acc_d   0.65 (  0.67)	test_minacc_d   0.61 (  0.51)	test_majacc_d   0.66 (  0.70)	test_corr_d   0.42 (  0.42)
Test: [  26/  26]	Loss 0.620 (0.607)	test_acc   0.64 (  0.67)	test_minacc   0.42 (  0.50)	test_majacc   0.69 (  0.70)	Loss_d 0.620 (0.607)	test_acc_d   0.64 (  0.67)	test_minacc_d   0.42 (  0.50)	test_majacc_d   0.69 (  0.70)	test_corr_d   0.42 (  0.43)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.88it/s]
Test: [  0/  1]	Loss 0.769 (0.769)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.67 (  0.67)	Loss_d 0.769 (0.769)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.769 (0.769)	test_acc   0.50 (  0.50)	test_minacc   0.48 (  0.48)	test_majacc   0.67 (  0.67)	Loss_d 0.769 (0.769)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.09 (  0.09)
Overall Timing[ 21/  1]	epoch_time 0.0416 (0.0432)	validation_time 0.0004 (0.0008)	train_time 0.0412 (0.0411)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6677000238895416, 0.4960000216960907)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.73it/s] 15%|#5        | 4/26 [00:00<00:01, 16.06it/s] 27%|##6       | 7/26 [00:00<00:00, 21.14it/s] 38%|###8      | 10/26 [00:00<00:00, 24.04it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.62it/s] 65%|######5   | 17/26 [00:00<00:00, 27.53it/s] 81%|########  | 21/26 [00:00<00:00, 28.60it/s] 92%|#########2| 24/26 [00:00<00:00, 28.97it/s]100%|##########| 26/26 [00:01<00:00, 24.30it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0016, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.022 (0.004)	train_nll   0.72 (  0.65)	train_penalty   0.02 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.59 (  0.59)	train_minacc   0.54 (  0.48)	train_majacc   0.60 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.68it/s] 27%|##6       | 7/26 [00:00<00:00, 34.22it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.22it/s] 50%|#####     | 13/26 [00:00<00:00, 40.93it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.55it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.55it/s] 96%|#########6| 25/26 [00:00<00:00, 47.64it/s]100%|##########| 26/26 [00:00<00:00, 39.79it/s]
Test: [   0/  26]	Loss 0.590 (0.590)	test_acc   0.70 (  0.70)	test_minacc   0.52 (  0.52)	test_majacc   0.74 (  0.74)	Loss_d 0.590 (0.590)	test_acc_d   0.70 (  0.70)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.572 (0.574)	test_acc   0.71 (  0.70)	test_minacc   0.45 (  0.48)	test_majacc   0.75 (  0.74)	Loss_d 0.572 (0.574)	test_acc_d   0.71 (  0.70)	test_minacc_d   0.45 (  0.48)	test_majacc_d   0.75 (  0.74)	test_corr_d   0.54 (  0.53)
Test: [  20/  26]	Loss 0.564 (0.571)	test_acc   0.72 (  0.71)	test_minacc   0.46 (  0.48)	test_majacc   0.75 (  0.75)	Loss_d 0.564 (0.571)	test_acc_d   0.72 (  0.71)	test_minacc_d   0.46 (  0.48)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.58 (  0.54)
Test: [  26/  26]	Loss 0.611 (0.571)	test_acc   0.66 (  0.70)	test_minacc   0.44 (  0.47)	test_majacc   0.71 (  0.75)	Loss_d 0.611 (0.571)	test_acc_d   0.66 (  0.70)	test_minacc_d   0.44 (  0.47)	test_majacc_d   0.71 (  0.75)	test_corr_d   0.55 (  0.54)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.57it/s]
Test: [  0/  1]	Loss 0.834 (0.834)	test_acc   0.47 (  0.47)	test_minacc   0.44 (  0.44)	test_majacc   0.74 (  0.74)	Loss_d 0.834 (0.834)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.29 (  0.29)
Test: [  1/  1]	Loss 0.834 (0.834)	test_acc   0.47 (  0.47)	test_minacc   0.44 (  0.44)	test_majacc   0.74 (  0.74)	Loss_d 0.834 (0.834)	test_acc_d   0.47 (  0.47)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.29 (  0.29)
Overall Timing[ 22/  1]	epoch_time 0.0453 (0.0433)	validation_time 0.0004 (0.0007)	train_time 0.0448 (0.0412)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.70460003054142, 0.46800002455711365)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.80it/s] 15%|#5        | 4/26 [00:00<00:01, 16.24it/s] 27%|##6       | 7/26 [00:00<00:00, 21.17it/s] 42%|####2     | 11/26 [00:00<00:00, 25.08it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.14it/s] 69%|######9   | 18/26 [00:00<00:00, 27.17it/s] 81%|########  | 21/26 [00:00<00:00, 27.96it/s] 96%|#########6| 25/26 [00:00<00:00, 28.63it/s]100%|##########| 26/26 [00:01<00:00, 24.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0009, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.030 (0.005)	train_nll   0.70 (  0.64)	train_penalty   0.03 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.56 (  0.60)	train_minacc   0.42 (  0.49)	train_majacc   0.59 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.80it/s] 27%|##6       | 7/26 [00:00<00:00, 36.83it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.83it/s] 50%|#####     | 13/26 [00:00<00:00, 39.47it/s] 69%|######9   | 18/26 [00:00<00:00, 42.72it/s]                                                69%|######9   | 18/26 [00:00<00:00, 42.72it/s] 92%|#########2| 24/26 [00:00<00:00, 46.91it/s]100%|##########| 26/26 [00:00<00:00, 38.93it/s]
Test: [   0/  26]	Loss 0.600 (0.600)	test_acc   0.68 (  0.68)	test_minacc   0.52 (  0.52)	test_majacc   0.71 (  0.71)	Loss_d 0.600 (0.600)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.585 (0.583)	test_acc   0.67 (  0.68)	test_minacc   0.53 (  0.51)	test_majacc   0.69 (  0.72)	Loss_d 0.585 (0.583)	test_acc_d   0.67 (  0.68)	test_minacc_d   0.53 (  0.51)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.48 (  0.46)
Test: [  20/  26]	Loss 0.561 (0.580)	test_acc   0.73 (  0.69)	test_minacc   0.41 (  0.50)	test_majacc   0.78 (  0.73)	Loss_d 0.561 (0.580)	test_acc_d   0.73 (  0.69)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.78 (  0.73)	test_corr_d   0.51 (  0.47)
Test: [  26/  26]	Loss 0.623 (0.579)	test_acc   0.65 (  0.69)	test_minacc   0.46 (  0.50)	test_majacc   0.69 (  0.72)	Loss_d 0.623 (0.579)	test_acc_d   0.65 (  0.69)	test_minacc_d   0.46 (  0.50)	test_majacc_d   0.69 (  0.72)	test_corr_d   0.48 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.19it/s]
Test: [  0/  1]	Loss 0.910 (0.910)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.69 (  0.69)	Loss_d 0.910 (0.910)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.14 (  0.14)
Test: [  1/  1]	Loss 0.910 (0.910)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.69 (  0.69)	Loss_d 0.910 (0.910)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.14 (  0.14)
Overall Timing[ 23/  1]	epoch_time 0.0396 (0.0431)	validation_time 0.0004 (0.0007)	train_time 0.0392 (0.0412)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6889000331759453, 0.4930000305175781)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.28it/s] 15%|#5        | 4/26 [00:00<00:01, 16.77it/s] 27%|##6       | 7/26 [00:00<00:00, 21.73it/s] 38%|###8      | 10/26 [00:00<00:00, 24.55it/s] 50%|#####     | 13/26 [00:00<00:00, 25.94it/s] 62%|######1   | 16/26 [00:00<00:00, 27.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.59it/s] 88%|########8 | 23/26 [00:00<00:00, 28.45it/s]100%|##########| 26/26 [00:01<00:00, 24.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: tensor(0.0006, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.004 (0.003)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.76 (  0.63)	train_minacc   0.52 (  0.53)	train_majacc   0.82 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.49it/s] 27%|##6       | 7/26 [00:00<00:00, 32.99it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.99it/s] 50%|#####     | 13/26 [00:00<00:00, 40.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.81it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.81it/s] 96%|#########6| 25/26 [00:00<00:00, 47.51it/s]100%|##########| 26/26 [00:00<00:00, 39.18it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.63 (  0.63)	test_minacc   0.55 (  0.55)	test_majacc   0.64 (  0.64)	Loss_d 0.623 (0.623)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.632 (0.635)	test_acc   0.57 (  0.59)	test_minacc   0.55 (  0.53)	test_majacc   0.58 (  0.60)	Loss_d 0.632 (0.635)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.55 (  0.53)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.47 (  0.44)
Test: [  20/  26]	Loss 0.616 (0.632)	test_acc   0.61 (  0.59)	test_minacc   0.43 (  0.51)	test_majacc   0.63 (  0.60)	Loss_d 0.616 (0.632)	test_acc_d   0.61 (  0.59)	test_minacc_d   0.43 (  0.51)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.45 (  0.45)
Test: [  26/  26]	Loss 0.635 (0.631)	test_acc   0.56 (  0.59)	test_minacc   0.46 (  0.52)	test_majacc   0.59 (  0.60)	Loss_d 0.635 (0.631)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.46 (  0.52)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.48 (  0.46)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.18it/s]
Test: [  0/  1]	Loss 0.729 (0.729)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.61 (  0.61)	Loss_d 0.729 (0.729)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.729 (0.729)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.61 (  0.61)	Loss_d 0.729 (0.729)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.04 (  0.04)
Overall Timing[ 24/  1]	epoch_time 0.0394 (0.0430)	validation_time 0.0004 (0.0007)	train_time 0.0390 (0.0411)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5914000111818314, 0.5170000195503235)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.74it/s] 15%|#5        | 4/26 [00:00<00:01, 16.54it/s] 27%|##6       | 7/26 [00:00<00:00, 21.13it/s] 38%|###8      | 10/26 [00:00<00:00, 24.09it/s] 50%|#####     | 13/26 [00:00<00:00, 25.65it/s] 62%|######1   | 16/26 [00:00<00:00, 27.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.15it/s] 88%|########8 | 23/26 [00:00<00:00, 28.15it/s]100%|##########| 26/26 [00:01<00:00, 23.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: tensor(0.0003, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.003 (0.003)	train_nll   0.62 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.69 (  0.65)	train_minacc   0.56 (  0.57)	train_majacc   0.72 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.10it/s] 27%|##6       | 7/26 [00:00<00:00, 36.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.14it/s] 50%|#####     | 13/26 [00:00<00:00, 41.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.34it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.34it/s] 96%|#########6| 25/26 [00:00<00:00, 46.34it/s]100%|##########| 26/26 [00:00<00:00, 40.20it/s]
Test: [   0/  26]	Loss 0.613 (0.613)	test_acc   0.67 (  0.67)	test_minacc   0.56 (  0.56)	test_majacc   0.70 (  0.70)	Loss_d 0.613 (0.613)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.593 (0.609)	test_acc   0.69 (  0.67)	test_minacc   0.62 (  0.60)	test_majacc   0.71 (  0.69)	Loss_d 0.593 (0.609)	test_acc_d   0.69 (  0.67)	test_minacc_d   0.62 (  0.60)	test_majacc_d   0.71 (  0.69)	test_corr_d   0.41 (  0.36)
Test: [  20/  26]	Loss 0.625 (0.607)	test_acc   0.65 (  0.68)	test_minacc   0.54 (  0.58)	test_majacc   0.67 (  0.69)	Loss_d 0.625 (0.607)	test_acc_d   0.65 (  0.68)	test_minacc_d   0.54 (  0.58)	test_majacc_d   0.67 (  0.69)	test_corr_d   0.35 (  0.38)
Test: [  26/  26]	Loss 0.604 (0.606)	test_acc   0.68 (  0.68)	test_minacc   0.48 (  0.58)	test_majacc   0.73 (  0.69)	Loss_d 0.604 (0.606)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.48 (  0.58)	test_majacc_d   0.73 (  0.69)	test_corr_d   0.39 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.10it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.62 (  0.62)	Loss_d 0.695 (0.695)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.62 (  0.62)	Loss_d 0.695 (0.695)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.62 (  0.62)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 25/  1]	epoch_time 0.0386 (0.0428)	validation_time 0.0005 (0.0007)	train_time 0.0381 (0.0410)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6764000259637832, 0.5730000138282776)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.22it/s] 15%|#5        | 4/26 [00:00<00:01, 15.48it/s] 31%|###       | 8/26 [00:00<00:00, 22.13it/s] 46%|####6     | 12/26 [00:00<00:00, 25.37it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.71it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.90it/s] 88%|########8 | 23/26 [00:00<00:00, 28.42it/s]100%|##########| 26/26 [00:01<00:00, 24.04it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.56 (  0.59)	train_minacc   0.56 (  0.63)	train_majacc   0.55 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.54it/s] 27%|##6       | 7/26 [00:00<00:00, 35.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.14it/s] 46%|####6     | 12/26 [00:00<00:00, 41.65it/s] 65%|######5   | 17/26 [00:00<00:00, 44.46it/s]                                                65%|######5   | 17/26 [00:00<00:00, 44.46it/s] 88%|########8 | 23/26 [00:00<00:00, 48.52it/s]100%|##########| 26/26 [00:00<00:00, 40.48it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.59 (  0.59)	test_minacc   0.53 (  0.53)	test_majacc   0.60 (  0.60)	Loss_d 0.645 (0.645)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.621 (0.638)	test_acc   0.69 (  0.63)	test_minacc   0.72 (  0.63)	test_majacc   0.69 (  0.64)	Loss_d 0.621 (0.638)	test_acc_d   0.69 (  0.63)	test_minacc_d   0.72 (  0.63)	test_majacc_d   0.69 (  0.64)	test_corr_d   0.34 (  0.28)
Test: [  20/  26]	Loss 0.641 (0.637)	test_acc   0.62 (  0.64)	test_minacc   0.61 (  0.60)	test_majacc   0.62 (  0.65)	Loss_d 0.641 (0.637)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.61 (  0.60)	test_majacc_d   0.62 (  0.65)	test_corr_d   0.29 (  0.30)
Test: [  26/  26]	Loss 0.633 (0.637)	test_acc   0.66 (  0.64)	test_minacc   0.58 (  0.59)	test_majacc   0.68 (  0.65)	Loss_d 0.633 (0.637)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.68 (  0.65)	test_corr_d   0.31 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.38it/s]
Test: [  0/  1]	Loss 0.683 (0.683)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.60 (  0.60)	Loss_d 0.683 (0.683)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.683 (0.683)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.60 (  0.60)	Loss_d 0.683 (0.683)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.11 ( -0.11)
Overall Timing[ 26/  1]	epoch_time 0.0382 (0.0426)	validation_time 0.0004 (0.0007)	train_time 0.0378 (0.0408)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6399000169634819, 0.5630000233650208)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.27it/s] 15%|#5        | 4/26 [00:00<00:01, 18.53it/s] 27%|##6       | 7/26 [00:00<00:00, 21.49it/s] 38%|###8      | 10/26 [00:00<00:00, 23.44it/s] 50%|#####     | 13/26 [00:00<00:00, 24.41it/s] 62%|######1   | 16/26 [00:00<00:00, 26.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.68it/s] 85%|########4 | 22/26 [00:00<00:00, 27.45it/s] 96%|#########6| 25/26 [00:00<00:00, 28.08it/s]100%|##########| 26/26 [00:01<00:00, 23.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.002 (0.002)	train_nll   0.62 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.65 (  0.59)	train_minacc   0.56 (  0.59)	train_majacc   0.67 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.92it/s] 27%|##6       | 7/26 [00:00<00:00, 32.17it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.17it/s] 50%|#####     | 13/26 [00:00<00:00, 38.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.70it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.70it/s] 96%|#########6| 25/26 [00:00<00:00, 45.26it/s]100%|##########| 26/26 [00:00<00:00, 37.84it/s]
Test: [   0/  26]	Loss 0.617 (0.617)	test_acc   0.66 (  0.66)	test_minacc   0.61 (  0.61)	test_majacc   0.66 (  0.66)	Loss_d 0.617 (0.617)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.603 (0.616)	test_acc   0.66 (  0.66)	test_minacc   0.55 (  0.60)	test_majacc   0.68 (  0.66)	Loss_d 0.603 (0.616)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.55 (  0.60)	test_majacc_d   0.68 (  0.66)	test_corr_d   0.40 (  0.35)
Test: [  20/  26]	Loss 0.615 (0.613)	test_acc   0.65 (  0.66)	test_minacc   0.54 (  0.58)	test_majacc   0.66 (  0.68)	Loss_d 0.615 (0.613)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.54 (  0.58)	test_majacc_d   0.66 (  0.68)	test_corr_d   0.37 (  0.37)
Test: [  26/  26]	Loss 0.618 (0.613)	test_acc   0.64 (  0.66)	test_minacc   0.50 (  0.58)	test_majacc   0.67 (  0.68)	Loss_d 0.618 (0.613)	test_acc_d   0.64 (  0.66)	test_minacc_d   0.50 (  0.58)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.38 (  0.37)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 24.17it/s]
Test: [  0/  1]	Loss 0.703 (0.703)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.61 (  0.61)	Loss_d 0.703 (0.703)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.703 (0.703)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.61 (  0.61)	Loss_d 0.703 (0.703)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 27/  1]	epoch_time 0.0392 (0.0425)	validation_time 0.0007 (0.0007)	train_time 0.0384 (0.0408)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6611000252366066, 0.5520000457763672)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.72it/s] 15%|#5        | 4/26 [00:00<00:01, 19.04it/s] 27%|##6       | 7/26 [00:00<00:00, 22.82it/s] 38%|###8      | 10/26 [00:00<00:00, 25.33it/s] 50%|#####     | 13/26 [00:00<00:00, 26.70it/s] 65%|######5   | 17/26 [00:00<00:00, 27.91it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.16it/s] 88%|########8 | 23/26 [00:00<00:00, 27.90it/s]100%|##########| 26/26 [00:00<00:00, 28.20it/s]100%|##########| 26/26 [00:01<00:00, 24.90it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.001 (0.002)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.58 (  0.63)	train_minacc   0.56 (  0.59)	train_majacc   0.58 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.55it/s] 27%|##6       | 7/26 [00:00<00:00, 33.19it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.19it/s] 50%|#####     | 13/26 [00:00<00:00, 40.35it/s] 69%|######9   | 18/26 [00:00<00:00, 43.56it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.56it/s] 88%|########8 | 23/26 [00:00<00:00, 44.59it/s]100%|##########| 26/26 [00:00<00:00, 38.90it/s]
Test: [   0/  26]	Loss 0.660 (0.660)	test_acc   0.62 (  0.62)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.660 (0.660)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.611 (0.631)	test_acc   0.66 (  0.65)	test_minacc   0.64 (  0.60)	test_majacc   0.67 (  0.65)	Loss_d 0.611 (0.631)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.64 (  0.60)	test_majacc_d   0.67 (  0.65)	test_corr_d   0.34 (  0.29)
Test: [  20/  26]	Loss 0.640 (0.626)	test_acc   0.64 (  0.65)	test_minacc   0.63 (  0.59)	test_majacc   0.64 (  0.66)	Loss_d 0.640 (0.626)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.63 (  0.59)	test_majacc_d   0.64 (  0.66)	test_corr_d   0.33 (  0.32)
Test: [  26/  26]	Loss 0.625 (0.625)	test_acc   0.64 (  0.65)	test_minacc   0.50 (  0.59)	test_majacc   0.68 (  0.66)	Loss_d 0.625 (0.625)	test_acc_d   0.64 (  0.65)	test_minacc_d   0.50 (  0.59)	test_majacc_d   0.68 (  0.66)	test_corr_d   0.33 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 40.76it/s]
Test: [  0/  1]	Loss 0.701 (0.701)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.60 (  0.60)	Loss_d 0.701 (0.701)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.701 (0.701)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.60 (  0.60)	Loss_d 0.701 (0.701)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 28/  1]	epoch_time 0.0403 (0.0424)	validation_time 0.0005 (0.0007)	train_time 0.0397 (0.0407)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6509000216126442, 0.5879999995231628)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.95it/s] 15%|#5        | 4/26 [00:00<00:01, 16.52it/s] 27%|##6       | 7/26 [00:00<00:00, 21.03it/s] 42%|####2     | 11/26 [00:00<00:00, 24.77it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.25it/s] 65%|######5   | 17/26 [00:00<00:00, 27.26it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.02it/s] 88%|########8 | 23/26 [00:00<00:00, 28.43it/s]100%|##########| 26/26 [00:01<00:00, 24.23it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.57 (  0.63)	train_minacc   0.60 (  0.60)	train_majacc   0.56 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 28.11it/s] 27%|##6       | 7/26 [00:00<00:00, 34.41it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.41it/s] 50%|#####     | 13/26 [00:00<00:00, 43.78it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.04it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.04it/s] 96%|#########6| 25/26 [00:00<00:00, 48.52it/s]100%|##########| 26/26 [00:00<00:00, 41.89it/s]
Test: [   0/  26]	Loss 0.639 (0.639)	test_acc   0.61 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.62 (  0.62)	Loss_d 0.639 (0.639)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.635 (0.650)	test_acc   0.60 (  0.60)	test_minacc   0.57 (  0.59)	test_majacc   0.60 (  0.60)	Loss_d 0.635 (0.650)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.33 (  0.25)
Test: [  20/  26]	Loss 0.640 (0.644)	test_acc   0.61 (  0.61)	test_minacc   0.54 (  0.57)	test_majacc   0.62 (  0.61)	Loss_d 0.640 (0.644)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.54 (  0.57)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.644 (0.644)	test_acc   0.58 (  0.61)	test_minacc   0.58 (  0.58)	test_majacc   0.58 (  0.61)	Loss_d 0.644 (0.644)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.29 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.53it/s]
Test: [  0/  1]	Loss 0.706 (0.706)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.61 (  0.61)	Loss_d 0.706 (0.706)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.706 (0.706)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.61 (  0.61)	Loss_d 0.706 (0.706)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.11 ( -0.11)
Overall Timing[ 29/  1]	epoch_time 0.0400 (0.0424)	validation_time 0.0004 (0.0007)	train_time 0.0395 (0.0407)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6053000090718269, 0.5570000410079956)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 15%|#5        | 4/26 [00:00<00:01, 18.63it/s] 27%|##6       | 7/26 [00:00<00:00, 22.68it/s] 38%|###8      | 10/26 [00:00<00:00, 24.87it/s] 50%|#####     | 13/26 [00:00<00:00, 26.20it/s] 65%|######5   | 17/26 [00:00<00:00, 27.65it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.11it/s] 88%|########8 | 23/26 [00:00<00:00, 28.54it/s]100%|##########| 26/26 [00:01<00:00, 24.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.001 (0.001)	train_nll   0.66 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.60 (  0.60)	train_minacc   0.54 (  0.63)	train_majacc   0.61 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.27it/s] 27%|##6       | 7/26 [00:00<00:00, 35.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.58it/s] 50%|#####     | 13/26 [00:00<00:00, 38.65it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.82it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.82it/s] 92%|#########2| 24/26 [00:00<00:00, 45.87it/s]100%|##########| 26/26 [00:00<00:00, 37.96it/s]
Test: [   0/  26]	Loss 0.647 (0.647)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.58 (  0.58)	Loss_d 0.647 (0.647)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.652 (0.662)	test_acc   0.59 (  0.57)	test_minacc   0.62 (  0.60)	test_majacc   0.59 (  0.57)	Loss_d 0.652 (0.662)	test_acc_d   0.59 (  0.57)	test_minacc_d   0.62 (  0.60)	test_majacc_d   0.59 (  0.57)	test_corr_d   0.30 (  0.23)
Test: [  20/  26]	Loss 0.651 (0.659)	test_acc   0.57 (  0.58)	test_minacc   0.57 (  0.58)	test_majacc   0.58 (  0.58)	Loss_d 0.651 (0.659)	test_acc_d   0.57 (  0.58)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.24 (  0.26)
Test: [  26/  26]	Loss 0.646 (0.659)	test_acc   0.55 (  0.58)	test_minacc   0.54 (  0.58)	test_majacc   0.55 (  0.58)	Loss_d 0.646 (0.659)	test_acc_d   0.55 (  0.58)	test_minacc_d   0.54 (  0.58)	test_majacc_d   0.55 (  0.58)	test_corr_d   0.32 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.62it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.59 (  0.59)	Loss_d 0.699 (0.699)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.09 ( -0.09)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.59 (  0.59)	Loss_d 0.699 (0.699)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.09 ( -0.09)
Overall Timing[ 30/  1]	epoch_time 0.0404 (0.0423)	validation_time 0.0004 (0.0007)	train_time 0.0399 (0.0407)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5796000139117241, 0.562000036239624)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.92it/s] 15%|#5        | 4/26 [00:00<00:01, 16.15it/s] 31%|###       | 8/26 [00:00<00:00, 22.52it/s] 42%|####2     | 11/26 [00:00<00:00, 24.66it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.07it/s] 65%|######5   | 17/26 [00:00<00:00, 27.10it/s] 81%|########  | 21/26 [00:00<00:00, 28.50it/s] 96%|#########6| 25/26 [00:00<00:00, 28.84it/s]100%|##########| 26/26 [00:01<00:00, 24.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.002 (0.001)	train_nll   0.64 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.68 (  0.57)	train_minacc   0.65 (  0.56)	train_majacc   0.68 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.52it/s] 27%|##6       | 7/26 [00:00<00:00, 27.82it/s]                                               27%|##6       | 7/26 [00:00<00:00, 27.82it/s] 50%|#####     | 13/26 [00:00<00:00, 36.47it/s] 69%|######9   | 18/26 [00:00<00:00, 40.39it/s]                                                69%|######9   | 18/26 [00:00<00:00, 40.39it/s] 88%|########8 | 23/26 [00:00<00:00, 42.50it/s]100%|##########| 26/26 [00:00<00:00, 34.50it/s]
Test: [   0/  26]	Loss 0.711 (0.711)	test_acc   0.54 (  0.54)	test_minacc   0.48 (  0.48)	test_majacc   0.55 (  0.55)	Loss_d 0.711 (0.711)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.676 (0.696)	test_acc   0.59 (  0.54)	test_minacc   0.57 (  0.53)	test_majacc   0.59 (  0.55)	Loss_d 0.676 (0.696)	test_acc_d   0.59 (  0.54)	test_minacc_d   0.57 (  0.53)	test_majacc_d   0.59 (  0.55)	test_corr_d   0.25 (  0.17)
Test: [  20/  26]	Loss 0.707 (0.694)	test_acc   0.54 (  0.55)	test_minacc   0.63 (  0.52)	test_majacc   0.52 (  0.55)	Loss_d 0.707 (0.694)	test_acc_d   0.54 (  0.55)	test_minacc_d   0.63 (  0.52)	test_majacc_d   0.52 (  0.55)	test_corr_d   0.18 (  0.20)
Test: [  26/  26]	Loss 0.674 (0.694)	test_acc   0.58 (  0.55)	test_minacc   0.50 (  0.52)	test_majacc   0.60 (  0.55)	Loss_d 0.674 (0.694)	test_acc_d   0.58 (  0.55)	test_minacc_d   0.50 (  0.52)	test_majacc_d   0.60 (  0.55)	test_corr_d   0.27 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.11it/s]
Test: [  0/  1]	Loss 0.719 (0.719)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.54 (  0.54)	Loss_d 0.719 (0.719)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.719 (0.719)	test_acc   0.50 (  0.50)	test_minacc   0.49 (  0.49)	test_majacc   0.54 (  0.54)	Loss_d 0.719 (0.719)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 31/  1]	epoch_time 0.0402 (0.0422)	validation_time 0.0005 (0.0007)	train_time 0.0397 (0.0406)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5453000159263611, 0.49800002574920654)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.19it/s] 15%|#5        | 4/26 [00:00<00:01, 16.05it/s] 27%|##6       | 7/26 [00:00<00:00, 20.08it/s] 38%|###8      | 10/26 [00:00<00:00, 22.79it/s] 50%|#####     | 13/26 [00:00<00:00, 24.41it/s] 62%|######1   | 16/26 [00:00<00:00, 26.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.62it/s] 85%|########4 | 22/26 [00:00<00:00, 27.27it/s] 96%|#########6| 25/26 [00:01<00:00, 27.74it/s]100%|##########| 26/26 [00:01<00:00, 23.15it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.64 (  0.57)	train_minacc   0.60 (  0.56)	train_majacc   0.64 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.98it/s] 27%|##6       | 7/26 [00:00<00:00, 36.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.09it/s] 46%|####6     | 12/26 [00:00<00:00, 42.12it/s] 65%|######5   | 17/26 [00:00<00:00, 42.41it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.41it/s] 88%|########8 | 23/26 [00:00<00:00, 47.62it/s]100%|##########| 26/26 [00:00<00:00, 39.91it/s]
Test: [   0/  26]	Loss 0.671 (0.671)	test_acc   0.56 (  0.56)	test_minacc   0.53 (  0.53)	test_majacc   0.56 (  0.56)	Loss_d 0.671 (0.671)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.654 (0.671)	test_acc   0.62 (  0.57)	test_minacc   0.57 (  0.56)	test_majacc   0.63 (  0.57)	Loss_d 0.654 (0.671)	test_acc_d   0.62 (  0.57)	test_minacc_d   0.57 (  0.56)	test_majacc_d   0.63 (  0.57)	test_corr_d   0.25 (  0.18)
Test: [  20/  26]	Loss 0.674 (0.668)	test_acc   0.57 (  0.58)	test_minacc   0.59 (  0.55)	test_majacc   0.57 (  0.58)	Loss_d 0.674 (0.668)	test_acc_d   0.57 (  0.58)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.21 (  0.20)
Test: [  26/  26]	Loss 0.656 (0.668)	test_acc   0.62 (  0.58)	test_minacc   0.54 (  0.55)	test_majacc   0.64 (  0.58)	Loss_d 0.656 (0.668)	test_acc_d   0.62 (  0.58)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.64 (  0.58)	test_corr_d   0.27 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.60it/s]
Test: [  0/  1]	Loss 0.686 (0.686)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.54 (  0.54)	Loss_d 0.686 (0.686)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.686 (0.686)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.54 (  0.54)	Loss_d 0.686 (0.686)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 32/  1]	epoch_time 0.0402 (0.0422)	validation_time 0.0004 (0.0007)	train_time 0.0398 (0.0406)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5767000052332878, 0.550000011920929)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.95it/s] 15%|#5        | 4/26 [00:00<00:01, 16.24it/s] 27%|##6       | 7/26 [00:00<00:00, 20.54it/s] 42%|####2     | 11/26 [00:00<00:00, 24.35it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.03it/s] 65%|######5   | 17/26 [00:00<00:00, 26.09it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.12it/s] 88%|########8 | 23/26 [00:00<00:00, 27.72it/s]100%|##########| 26/26 [00:01<00:00, 23.81it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.62 (  0.57)	train_minacc   0.60 (  0.58)	train_majacc   0.63 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.64it/s] 27%|##6       | 7/26 [00:00<00:00, 32.54it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.54it/s] 50%|#####     | 13/26 [00:00<00:00, 40.38it/s] 69%|######9   | 18/26 [00:00<00:00, 43.64it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.64it/s] 88%|########8 | 23/26 [00:00<00:00, 44.65it/s]100%|##########| 26/26 [00:00<00:00, 38.65it/s]
Test: [   0/  26]	Loss 0.652 (0.652)	test_acc   0.59 (  0.59)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.652 (0.652)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.656 (0.663)	test_acc   0.57 (  0.58)	test_minacc   0.57 (  0.58)	test_majacc   0.57 (  0.58)	Loss_d 0.656 (0.663)	test_acc_d   0.57 (  0.58)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.32 (  0.24)
Test: [  20/  26]	Loss 0.654 (0.659)	test_acc   0.57 (  0.59)	test_minacc   0.50 (  0.57)	test_majacc   0.58 (  0.59)	Loss_d 0.654 (0.659)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.50 (  0.57)	test_majacc_d   0.58 (  0.59)	test_corr_d   0.27 (  0.27)
Test: [  26/  26]	Loss 0.656 (0.659)	test_acc   0.58 (  0.59)	test_minacc   0.58 (  0.57)	test_majacc   0.58 (  0.59)	Loss_d 0.656 (0.659)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.58 (  0.59)	test_corr_d   0.29 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.35it/s]
Test: [  0/  1]	Loss 0.693 (0.693)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.693 (0.693)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.50 (  0.50)	Loss_d 0.693 (0.693)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 33/  1]	epoch_time 0.0408 (0.0421)	validation_time 0.0006 (0.0007)	train_time 0.0397 (0.0406)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.587000014603138, 0.5450000166893005)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.37it/s] 15%|#5        | 4/26 [00:00<00:01, 18.52it/s] 27%|##6       | 7/26 [00:00<00:00, 22.49it/s] 42%|####2     | 11/26 [00:00<00:00, 25.91it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.12it/s] 69%|######9   | 18/26 [00:00<00:00, 28.14it/s] 85%|########4 | 22/26 [00:00<00:00, 28.58it/s]100%|##########| 26/26 [00:00<00:00, 29.32it/s]100%|##########| 26/26 [00:01<00:00, 25.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.57 (  0.57)	train_minacc   0.65 (  0.57)	train_majacc   0.55 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.08it/s] 27%|##6       | 7/26 [00:00<00:00, 32.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.00it/s] 50%|#####     | 13/26 [00:00<00:00, 38.56it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.36it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.36it/s] 92%|#########2| 24/26 [00:00<00:00, 46.03it/s]100%|##########| 26/26 [00:00<00:00, 38.67it/s]
Test: [   0/  26]	Loss 0.692 (0.692)	test_acc   0.51 (  0.51)	test_minacc   0.58 (  0.58)	test_majacc   0.49 (  0.49)	Loss_d 0.692 (0.692)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.07 (  0.07)
Test: [  10/  26]	Loss 0.688 (0.686)	test_acc   0.54 (  0.53)	test_minacc   0.62 (  0.63)	test_majacc   0.52 (  0.52)	Loss_d 0.688 (0.686)	test_acc_d   0.54 (  0.53)	test_minacc_d   0.62 (  0.63)	test_majacc_d   0.52 (  0.52)	test_corr_d   0.04 (  0.04)
Test: [  20/  26]	Loss 0.702 (0.684)	test_acc   0.54 (  0.54)	test_minacc   0.70 (  0.64)	test_majacc   0.51 (  0.53)	Loss_d 0.702 (0.684)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.70 (  0.64)	test_majacc_d   0.51 (  0.53)	test_corr_d   0.02 (  0.06)
Test: [  26/  26]	Loss 0.689 (0.684)	test_acc   0.54 (  0.54)	test_minacc   0.62 (  0.63)	test_majacc   0.52 (  0.53)	Loss_d 0.689 (0.684)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.62 (  0.63)	test_majacc_d   0.52 (  0.53)	test_corr_d   0.04 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.68it/s]
Test: [  0/  1]	Loss 0.661 (0.661)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.49 (  0.49)	Loss_d 0.661 (0.661)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.30 ( -0.30)
Test: [  1/  1]	Loss 0.661 (0.661)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.49 (  0.49)	Loss_d 0.661 (0.661)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.30 ( -0.30)
Overall Timing[ 34/  1]	epoch_time 0.0373 (0.0420)	validation_time 0.0004 (0.0007)	train_time 0.0369 (0.0405)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5429000121951103, 0.5910000205039978)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.03it/s] 15%|#5        | 4/26 [00:00<00:01, 18.81it/s] 27%|##6       | 7/26 [00:00<00:00, 23.38it/s] 42%|####2     | 11/26 [00:00<00:00, 26.56it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.07it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.09it/s] 88%|########8 | 23/26 [00:00<00:00, 29.11it/s]100%|##########| 26/26 [00:00<00:00, 29.32it/s]100%|##########| 26/26 [00:01<00:00, 25.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.001 (0.001)	train_nll   0.71 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.46 (  0.56)	train_minacc   0.67 (  0.60)	train_majacc   0.41 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.94it/s] 27%|##6       | 7/26 [00:00<00:00, 31.46it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.46it/s] 50%|#####     | 13/26 [00:00<00:00, 38.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.29it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.29it/s] 96%|#########6| 25/26 [00:00<00:00, 45.68it/s]100%|##########| 26/26 [00:00<00:00, 37.99it/s]
Test: [   0/  26]	Loss 0.682 (0.682)	test_acc   0.53 (  0.53)	test_minacc   0.63 (  0.63)	test_majacc   0.51 (  0.51)	Loss_d 0.682 (0.682)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.06 (  0.06)
Test: [  10/  26]	Loss 0.691 (0.685)	test_acc   0.47 (  0.52)	test_minacc   0.51 (  0.59)	test_majacc   0.47 (  0.51)	Loss_d 0.691 (0.685)	test_acc_d   0.47 (  0.52)	test_minacc_d   0.51 (  0.59)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.09 (  0.06)
Test: [  20/  26]	Loss 0.676 (0.684)	test_acc   0.54 (  0.53)	test_minacc   0.61 (  0.60)	test_majacc   0.53 (  0.51)	Loss_d 0.676 (0.684)	test_acc_d   0.54 (  0.53)	test_minacc_d   0.61 (  0.60)	test_majacc_d   0.53 (  0.51)	test_corr_d   0.10 (  0.07)
Test: [  26/  26]	Loss 0.688 (0.684)	test_acc   0.48 (  0.53)	test_minacc   0.54 (  0.60)	test_majacc   0.47 (  0.51)	Loss_d 0.688 (0.684)	test_acc_d   0.48 (  0.53)	test_minacc_d   0.54 (  0.60)	test_majacc_d   0.47 (  0.51)	test_corr_d   0.07 (  0.08)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.27it/s]
Test: [  0/  1]	Loss 0.678 (0.678)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.58 (  0.58)	Loss_d 0.678 (0.678)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.16 ( -0.16)
Test: [  1/  1]	Loss 0.678 (0.678)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.58 (  0.58)	Loss_d 0.678 (0.678)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.16 ( -0.16)
Overall Timing[ 35/  1]	epoch_time 0.0396 (0.0419)	validation_time 0.0017 (0.0007)	train_time 0.0379 (0.0404)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5281000047922134, 0.5860000252723694)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 15%|#5        | 4/26 [00:00<00:01, 18.64it/s] 27%|##6       | 7/26 [00:00<00:00, 22.72it/s] 38%|###8      | 10/26 [00:00<00:00, 25.06it/s] 50%|#####     | 13/26 [00:00<00:00, 26.33it/s] 62%|######1   | 16/26 [00:00<00:00, 26.80it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.35it/s] 88%|########8 | 23/26 [00:00<00:00, 28.33it/s]100%|##########| 26/26 [00:01<00:00, 24.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.001 (0.001)	train_nll   0.71 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.54 (  0.54)	train_minacc   0.54 (  0.55)	train_majacc   0.53 (  0.54)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.05it/s] 31%|###       | 8/26 [00:00<00:00, 39.57it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.57it/s] 50%|#####     | 13/26 [00:00<00:00, 42.81it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.43it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.43it/s] 96%|#########6| 25/26 [00:00<00:00, 47.91it/s]100%|##########| 26/26 [00:00<00:00, 40.94it/s]
Test: [   0/  26]	Loss 0.706 (0.706)	test_acc   0.48 (  0.48)	test_minacc   0.42 (  0.42)	test_majacc   0.49 (  0.49)	Loss_d 0.706 (0.706)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.49 (  0.49)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.698 (0.702)	test_acc   0.51 (  0.51)	test_minacc   0.43 (  0.52)	test_majacc   0.52 (  0.51)	Loss_d 0.698 (0.702)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.43 (  0.52)	test_majacc_d   0.52 (  0.51)	test_corr_d  -0.01 ( -0.03)
Test: [  20/  26]	Loss 0.703 (0.702)	test_acc   0.48 (  0.51)	test_minacc   0.61 (  0.52)	test_majacc   0.46 (  0.51)	Loss_d 0.703 (0.702)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.61 (  0.52)	test_majacc_d   0.46 (  0.51)	test_corr_d  -0.01 ( -0.04)
Test: [  26/  26]	Loss 0.697 (0.701)	test_acc   0.52 (  0.51)	test_minacc   0.54 (  0.51)	test_majacc   0.51 (  0.51)	Loss_d 0.697 (0.701)	test_acc_d   0.52 (  0.51)	test_minacc_d   0.54 (  0.51)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.02 ( -0.03)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.11it/s]
Test: [  0/  1]	Loss 0.694 (0.694)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.694 (0.694)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.694 (0.694)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.49 (  0.49)	Loss_d 0.694 (0.694)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.49 (  0.49)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 36/  1]	epoch_time 0.0392 (0.0418)	validation_time 0.0004 (0.0007)	train_time 0.0388 (0.0403)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5086000098288059, 0.51500004529953)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 15%|#5        | 4/26 [00:00<00:01, 18.40it/s] 27%|##6       | 7/26 [00:00<00:00, 23.06it/s] 42%|####2     | 11/26 [00:00<00:00, 26.21it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.01it/s] 88%|########8 | 23/26 [00:00<00:00, 29.58it/s]100%|##########| 26/26 [00:01<00:00, 25.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.001 (0.001)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.52 (  0.55)	train_minacc   0.56 (  0.54)	train_majacc   0.51 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.38it/s] 27%|##6       | 7/26 [00:00<00:00, 31.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.32it/s] 50%|#####     | 13/26 [00:00<00:00, 38.51it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.89it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.89it/s] 92%|#########2| 24/26 [00:00<00:00, 46.32it/s]100%|##########| 26/26 [00:00<00:00, 37.54it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.59 (  0.59)	test_minacc   0.53 (  0.53)	test_majacc   0.60 (  0.60)	Loss_d 0.667 (0.667)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.664 (0.668)	test_acc   0.60 (  0.60)	test_minacc   0.51 (  0.57)	test_majacc   0.62 (  0.60)	Loss_d 0.664 (0.668)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.51 (  0.57)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.29 (  0.23)
Test: [  20/  26]	Loss 0.667 (0.666)	test_acc   0.62 (  0.61)	test_minacc   0.65 (  0.57)	test_majacc   0.61 (  0.61)	Loss_d 0.667 (0.666)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.65 (  0.57)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.25 (  0.24)
Test: [  26/  26]	Loss 0.666 (0.666)	test_acc   0.61 (  0.61)	test_minacc   0.52 (  0.57)	test_majacc   0.63 (  0.62)	Loss_d 0.666 (0.666)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.52 (  0.57)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.24 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.69it/s]
Test: [  0/  1]	Loss 0.685 (0.685)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.57 (  0.57)	Loss_d 0.685 (0.685)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.685 (0.685)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.57 (  0.57)	Loss_d 0.685 (0.685)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 37/  1]	epoch_time 0.0387 (0.0418)	validation_time 0.0004 (0.0007)	train_time 0.0383 (0.0403)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6091000076532364, 0.531000018119812)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.45it/s] 15%|#5        | 4/26 [00:00<00:01, 15.53it/s] 27%|##6       | 7/26 [00:00<00:00, 20.19it/s] 38%|###8      | 10/26 [00:00<00:00, 22.70it/s] 50%|#####     | 13/26 [00:00<00:00, 24.51it/s] 62%|######1   | 16/26 [00:00<00:00, 25.94it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.56it/s] 88%|########8 | 23/26 [00:00<00:00, 28.09it/s]100%|##########| 26/26 [00:01<00:00, 23.50it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.58 (  0.59)	train_minacc   0.65 (  0.57)	train_majacc   0.56 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.76it/s] 27%|##6       | 7/26 [00:00<00:00, 30.23it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.23it/s] 50%|#####     | 13/26 [00:00<00:00, 38.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.03it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.03it/s] 96%|#########6| 25/26 [00:00<00:00, 46.83it/s]100%|##########| 26/26 [00:00<00:00, 38.34it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.60 (  0.60)	test_minacc   0.60 (  0.60)	test_majacc   0.60 (  0.60)	Loss_d 0.655 (0.655)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.664 (0.668)	test_acc   0.56 (  0.57)	test_minacc   0.60 (  0.57)	test_majacc   0.55 (  0.57)	Loss_d 0.664 (0.668)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.60 (  0.57)	test_majacc_d   0.55 (  0.57)	test_corr_d   0.24 (  0.18)
Test: [  20/  26]	Loss 0.655 (0.666)	test_acc   0.58 (  0.57)	test_minacc   0.52 (  0.56)	test_majacc   0.59 (  0.57)	Loss_d 0.655 (0.666)	test_acc_d   0.58 (  0.57)	test_minacc_d   0.52 (  0.56)	test_majacc_d   0.59 (  0.57)	test_corr_d   0.21 (  0.20)
Test: [  26/  26]	Loss 0.674 (0.666)	test_acc   0.54 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.53 (  0.57)	Loss_d 0.674 (0.666)	test_acc_d   0.54 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.53 (  0.57)	test_corr_d   0.19 (  0.20)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.54it/s]
Test: [  0/  1]	Loss 0.674 (0.674)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.58 (  0.58)	Loss_d 0.674 (0.674)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.22 ( -0.22)
Test: [  1/  1]	Loss 0.674 (0.674)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.58 (  0.58)	Loss_d 0.674 (0.674)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.22 ( -0.22)
Overall Timing[ 38/  1]	epoch_time 0.0392 (0.0417)	validation_time 0.0004 (0.0007)	train_time 0.0388 (0.0403)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5727000113725662, 0.5800000429153442)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.29it/s] 19%|#9        | 5/26 [00:00<00:01, 15.92it/s] 35%|###4      | 9/26 [00:00<00:00, 21.66it/s] 50%|#####     | 13/26 [00:00<00:00, 24.95it/s] 65%|######5   | 17/26 [00:00<00:00, 27.04it/s] 81%|########  | 21/26 [00:00<00:00, 28.46it/s] 96%|#########6| 25/26 [00:01<00:00, 29.00it/s]100%|##########| 26/26 [00:01<00:00, 23.63it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.002 (0.003)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.58 (  0.58)	train_minacc   0.58 (  0.57)	train_majacc   0.58 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.30it/s] 27%|##6       | 7/26 [00:00<00:00, 30.04it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.04it/s] 50%|#####     | 13/26 [00:00<00:00, 41.24it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.35it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.35it/s] 96%|#########6| 25/26 [00:00<00:00, 47.54it/s]100%|##########| 26/26 [00:00<00:00, 39.75it/s]
Test: [   0/  26]	Loss 0.690 (0.690)	test_acc   0.53 (  0.53)	test_minacc   0.48 (  0.48)	test_majacc   0.54 (  0.54)	Loss_d 0.690 (0.690)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.651 (0.669)	test_acc   0.60 (  0.57)	test_minacc   0.51 (  0.54)	test_majacc   0.62 (  0.57)	Loss_d 0.651 (0.669)	test_acc_d   0.60 (  0.57)	test_minacc_d   0.51 (  0.54)	test_majacc_d   0.62 (  0.57)	test_corr_d   0.33 (  0.28)
Test: [  20/  26]	Loss 0.681 (0.667)	test_acc   0.54 (  0.57)	test_minacc   0.61 (  0.55)	test_majacc   0.53 (  0.57)	Loss_d 0.681 (0.667)	test_acc_d   0.54 (  0.57)	test_minacc_d   0.61 (  0.55)	test_majacc_d   0.53 (  0.57)	test_corr_d   0.30 (  0.29)
Test: [  26/  26]	Loss 0.662 (0.666)	test_acc   0.61 (  0.57)	test_minacc   0.58 (  0.55)	test_majacc   0.61 (  0.57)	Loss_d 0.662 (0.666)	test_acc_d   0.61 (  0.57)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.61 (  0.57)	test_corr_d   0.31 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.35it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.55 (  0.55)	Loss_d 0.700 (0.700)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.55 (  0.55)	Loss_d 0.700 (0.700)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 39/  1]	epoch_time 0.0393 (0.0416)	validation_time 0.0005 (0.0007)	train_time 0.0388 (0.0402)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5696000097990036, 0.5320000052452087)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.54it/s] 15%|#5        | 4/26 [00:00<00:01, 16.13it/s] 27%|##6       | 7/26 [00:00<00:00, 20.62it/s] 38%|###8      | 10/26 [00:00<00:00, 23.85it/s] 50%|#####     | 13/26 [00:00<00:00, 25.73it/s] 62%|######1   | 16/26 [00:00<00:00, 27.02it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.86it/s] 85%|########4 | 22/26 [00:00<00:00, 28.51it/s] 96%|#########6| 25/26 [00:00<00:00, 28.95it/s]100%|##########| 26/26 [00:01<00:00, 24.41it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.60 (  0.59)	train_minacc   0.54 (  0.58)	train_majacc   0.61 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.83it/s] 27%|##6       | 7/26 [00:00<00:00, 33.60it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.60it/s] 46%|####6     | 12/26 [00:00<00:00, 38.48it/s] 69%|######9   | 18/26 [00:00<00:00, 44.94it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.94it/s] 92%|#########2| 24/26 [00:00<00:00, 46.94it/s]100%|##########| 26/26 [00:00<00:00, 39.40it/s]
Test: [   0/  26]	Loss 0.668 (0.668)	test_acc   0.55 (  0.55)	test_minacc   0.47 (  0.47)	test_majacc   0.56 (  0.56)	Loss_d 0.668 (0.668)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.639 (0.656)	test_acc   0.62 (  0.58)	test_minacc   0.53 (  0.54)	test_majacc   0.64 (  0.59)	Loss_d 0.639 (0.656)	test_acc_d   0.62 (  0.58)	test_minacc_d   0.53 (  0.54)	test_majacc_d   0.64 (  0.59)	test_corr_d   0.36 (  0.28)
Test: [  20/  26]	Loss 0.666 (0.655)	test_acc   0.56 (  0.58)	test_minacc   0.54 (  0.54)	test_majacc   0.56 (  0.59)	Loss_d 0.666 (0.655)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.29 (  0.30)
Test: [  26/  26]	Loss 0.650 (0.655)	test_acc   0.59 (  0.58)	test_minacc   0.50 (  0.54)	test_majacc   0.61 (  0.59)	Loss_d 0.650 (0.655)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.50 (  0.54)	test_majacc_d   0.61 (  0.59)	test_corr_d   0.32 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.69it/s]
Test: [  0/  1]	Loss 0.699 (0.699)	test_acc   0.53 (  0.53)	test_minacc   0.52 (  0.52)	test_majacc   0.54 (  0.54)	Loss_d 0.699 (0.699)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.699 (0.699)	test_acc   0.53 (  0.53)	test_minacc   0.52 (  0.52)	test_majacc   0.54 (  0.54)	Loss_d 0.699 (0.699)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 40/  1]	epoch_time 0.0392 (0.0416)	validation_time 0.0008 (0.0007)	train_time 0.0383 (0.0402)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5840000113844872, 0.5260000228881836)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.20it/s] 15%|#5        | 4/26 [00:00<00:01, 18.59it/s] 27%|##6       | 7/26 [00:00<00:00, 22.59it/s] 38%|###8      | 10/26 [00:00<00:00, 25.20it/s] 50%|#####     | 13/26 [00:00<00:00, 26.75it/s] 65%|######5   | 17/26 [00:00<00:00, 28.24it/s] 81%|########  | 21/26 [00:00<00:00, 29.09it/s] 96%|#########6| 25/26 [00:00<00:00, 29.54it/s]100%|##########| 26/26 [00:01<00:00, 25.53it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.64 (  0.57)	train_minacc   0.58 (  0.58)	train_majacc   0.65 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.70it/s] 27%|##6       | 7/26 [00:00<00:00, 30.50it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.50it/s] 50%|#####     | 13/26 [00:00<00:00, 38.63it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.09it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.09it/s] 96%|#########6| 25/26 [00:00<00:00, 47.02it/s]100%|##########| 26/26 [00:00<00:00, 38.51it/s]
Test: [   0/  26]	Loss 0.697 (0.697)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.55 (  0.55)	Loss_d 0.697 (0.697)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.12 (  0.12)
Test: [  10/  26]	Loss 0.669 (0.685)	test_acc   0.58 (  0.55)	test_minacc   0.51 (  0.56)	test_majacc   0.60 (  0.55)	Loss_d 0.669 (0.685)	test_acc_d   0.58 (  0.55)	test_minacc_d   0.51 (  0.56)	test_majacc_d   0.60 (  0.55)	test_corr_d   0.21 (  0.13)
Test: [  20/  26]	Loss 0.693 (0.682)	test_acc   0.54 (  0.56)	test_minacc   0.61 (  0.56)	test_majacc   0.53 (  0.55)	Loss_d 0.693 (0.682)	test_acc_d   0.54 (  0.56)	test_minacc_d   0.61 (  0.56)	test_majacc_d   0.53 (  0.55)	test_corr_d   0.15 (  0.15)
Test: [  26/  26]	Loss 0.666 (0.682)	test_acc   0.59 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.60 (  0.55)	Loss_d 0.666 (0.682)	test_acc_d   0.59 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.60 (  0.55)	test_corr_d   0.23 (  0.15)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.51it/s]
Test: [  0/  1]	Loss 0.681 (0.681)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.54 (  0.54)	Loss_d 0.681 (0.681)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.21 ( -0.21)
Test: [  1/  1]	Loss 0.681 (0.681)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.54 (  0.54)	Loss_d 0.681 (0.681)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.21 ( -0.21)
Overall Timing[ 41/  1]	epoch_time 0.0395 (0.0415)	validation_time 0.0007 (0.0007)	train_time 0.0388 (0.0401)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5555000086426735, 0.5450000166893005)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.47it/s] 19%|#9        | 5/26 [00:00<00:01, 19.54it/s] 31%|###       | 8/26 [00:00<00:00, 23.38it/s] 42%|####2     | 11/26 [00:00<00:00, 25.59it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.52it/s] 85%|########4 | 22/26 [00:00<00:00, 28.93it/s] 96%|#########6| 25/26 [00:00<00:00, 29.23it/s]100%|##########| 26/26 [00:01<00:00, 25.02it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.005 (0.003)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.66 (  0.60)	train_minacc   0.52 (  0.51)	train_majacc   0.69 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.96it/s] 31%|###       | 8/26 [00:00<00:00, 39.40it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.40it/s] 50%|#####     | 13/26 [00:00<00:00, 41.58it/s] 69%|######9   | 18/26 [00:00<00:00, 44.44it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.44it/s] 88%|########8 | 23/26 [00:00<00:00, 45.97it/s]100%|##########| 26/26 [00:00<00:00, 41.20it/s]
Test: [   0/  26]	Loss 0.620 (0.620)	test_acc   0.64 (  0.64)	test_minacc   0.48 (  0.48)	test_majacc   0.67 (  0.67)	Loss_d 0.620 (0.620)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.603 (0.606)	test_acc   0.66 (  0.67)	test_minacc   0.49 (  0.57)	test_majacc   0.69 (  0.69)	Loss_d 0.603 (0.606)	test_acc_d   0.66 (  0.67)	test_minacc_d   0.49 (  0.57)	test_majacc_d   0.69 (  0.69)	test_corr_d   0.41 (  0.37)
Test: [  20/  26]	Loss 0.617 (0.603)	test_acc   0.65 (  0.67)	test_minacc   0.50 (  0.56)	test_majacc   0.67 (  0.69)	Loss_d 0.617 (0.603)	test_acc_d   0.65 (  0.67)	test_minacc_d   0.50 (  0.56)	test_majacc_d   0.67 (  0.69)	test_corr_d   0.39 (  0.39)
Test: [  26/  26]	Loss 0.630 (0.603)	test_acc   0.63 (  0.67)	test_minacc   0.44 (  0.55)	test_majacc   0.67 (  0.70)	Loss_d 0.630 (0.603)	test_acc_d   0.63 (  0.67)	test_minacc_d   0.44 (  0.55)	test_majacc_d   0.67 (  0.70)	test_corr_d   0.39 (  0.39)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.83it/s]
Test: [  0/  1]	Loss 0.724 (0.724)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.66 (  0.66)	Loss_d 0.724 (0.724)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.724 (0.724)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.66 (  0.66)	Loss_d 0.724 (0.724)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 42/  1]	epoch_time 0.0383 (0.0415)	validation_time 0.0004 (0.0007)	train_time 0.0379 (0.0401)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6745000309944152, 0.5440000295639038)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.91it/s] 15%|#5        | 4/26 [00:00<00:01, 17.77it/s] 27%|##6       | 7/26 [00:00<00:00, 22.12it/s] 38%|###8      | 10/26 [00:00<00:00, 24.95it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.01it/s] 65%|######5   | 17/26 [00:00<00:00, 27.39it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.06it/s] 88%|########8 | 23/26 [00:00<00:00, 28.32it/s]100%|##########| 26/26 [00:01<00:00, 24.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1118 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1119 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1120 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1121 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1122 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1123 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1124 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1125 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1126 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1127 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1128 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1129 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1130 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1131 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1132 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1133 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1134 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1135 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1136 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1137 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1138 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1139 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1140 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1141 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1142 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1143 364.00000000000006
constrain score by whole: 0
Epoch: [43][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.60 (  0.63)	train_minacc   0.62 (  0.61)	train_majacc   0.59 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.28it/s] 15%|#5        | 4/26 [00:00<00:01, 16.83it/s] 35%|###4      | 9/26 [00:00<00:00, 29.06it/s]                                               35%|###4      | 9/26 [00:00<00:00, 29.06it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.78it/s] 77%|#######6  | 20/26 [00:00<00:00, 41.75it/s]                                                77%|#######6  | 20/26 [00:00<00:00, 41.75it/s]100%|##########| 26/26 [00:00<00:00, 46.76it/s]100%|##########| 26/26 [00:00<00:00, 35.09it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.57 (  0.57)	test_minacc   0.61 (  0.61)	test_majacc   0.56 (  0.56)	Loss_d 0.659 (0.659)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.15 (  0.15)
Test: [  10/  26]	Loss 0.666 (0.670)	test_acc   0.56 (  0.56)	test_minacc   0.60 (  0.59)	test_majacc   0.55 (  0.55)	Loss_d 0.666 (0.670)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.60 (  0.59)	test_majacc_d   0.55 (  0.55)	test_corr_d   0.23 (  0.16)
Test: [  20/  26]	Loss 0.656 (0.667)	test_acc   0.58 (  0.56)	test_minacc   0.57 (  0.58)	test_majacc   0.58 (  0.55)	Loss_d 0.656 (0.667)	test_acc_d   0.58 (  0.56)	test_minacc_d   0.57 (  0.58)	test_majacc_d   0.58 (  0.55)	test_corr_d   0.20 (  0.18)
Test: [  26/  26]	Loss 0.665 (0.667)	test_acc   0.53 (  0.56)	test_minacc   0.52 (  0.58)	test_majacc   0.53 (  0.56)	Loss_d 0.665 (0.667)	test_acc_d   0.53 (  0.56)	test_minacc_d   0.52 (  0.58)	test_majacc_d   0.53 (  0.56)	test_corr_d   0.24 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.28it/s]
Test: [  0/  1]	Loss 0.676 (0.676)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.58 (  0.58)	Loss_d 0.676 (0.676)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.20 ( -0.20)
Test: [  1/  1]	Loss 0.676 (0.676)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.58 (  0.58)	Loss_d 0.676 (0.676)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.20 ( -0.20)
Overall Timing[ 43/  1]	epoch_time 0.0395 (0.0414)	validation_time 0.0005 (0.0007)	train_time 0.0386 (0.0401)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.558700010418892, 0.5580000281333923)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.78it/s] 15%|#5        | 4/26 [00:00<00:01, 17.39it/s] 27%|##6       | 7/26 [00:00<00:00, 21.22it/s] 42%|####2     | 11/26 [00:00<00:00, 24.85it/s] 54%|#####3    | 14/26 [00:00<00:00, 25.95it/s] 65%|######5   | 17/26 [00:00<00:00, 26.21it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.03it/s] 88%|########8 | 23/26 [00:00<00:00, 27.24it/s]100%|##########| 26/26 [00:01<00:00, 23.96it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1144 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1145 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1146 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1147 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1148 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1149 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1150 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1151 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1152 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1153 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1154 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1155 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1156 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1157 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1158 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1159 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1160 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1161 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1162 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1163 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1164 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1165 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1166 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1167 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1168 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1169 364.00000000000006
constrain score by whole: 0
Epoch: [44][  26/  26]	Loss 0.002 (0.003)	train_nll   0.63 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.70 (  0.58)	train_minacc   0.48 (  0.55)	train_majacc   0.75 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.34it/s] 15%|#5        | 4/26 [00:00<00:01, 19.02it/s] 35%|###4      | 9/26 [00:00<00:00, 30.94it/s]                                               35%|###4      | 9/26 [00:00<00:00, 30.94it/s] 58%|#####7    | 15/26 [00:00<00:00, 38.12it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 38.12it/s] 81%|########  | 21/26 [00:00<00:00, 44.48it/s]100%|##########| 26/26 [00:00<00:00, 36.22it/s]
Test: [   0/  26]	Loss 0.620 (0.620)	test_acc   0.62 (  0.62)	test_minacc   0.56 (  0.56)	test_majacc   0.63 (  0.63)	Loss_d 0.620 (0.620)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.47 (  0.47)
Test: [  10/  26]	Loss 0.636 (0.632)	test_acc   0.56 (  0.57)	test_minacc   0.47 (  0.48)	test_majacc   0.57 (  0.59)	Loss_d 0.636 (0.632)	test_acc_d   0.56 (  0.57)	test_minacc_d   0.47 (  0.48)	test_majacc_d   0.57 (  0.59)	test_corr_d   0.53 (  0.50)
Test: [  20/  26]	Loss 0.611 (0.630)	test_acc   0.60 (  0.58)	test_minacc   0.39 (  0.47)	test_majacc   0.63 (  0.59)	Loss_d 0.611 (0.630)	test_acc_d   0.60 (  0.58)	test_minacc_d   0.39 (  0.47)	test_majacc_d   0.63 (  0.59)	test_corr_d   0.50 (  0.51)
Test: [  26/  26]	Loss 0.641 (0.631)	test_acc   0.56 (  0.58)	test_minacc   0.44 (  0.48)	test_majacc   0.58 (  0.59)	Loss_d 0.641 (0.631)	test_acc_d   0.56 (  0.58)	test_minacc_d   0.44 (  0.48)	test_majacc_d   0.58 (  0.59)	test_corr_d   0.55 (  0.51)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 44.77it/s]
Test: [  0/  1]	Loss 0.735 (0.735)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.60 (  0.60)	Loss_d 0.735 (0.735)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.735 (0.735)	test_acc   0.49 (  0.49)	test_minacc   0.47 (  0.47)	test_majacc   0.60 (  0.60)	Loss_d 0.735 (0.735)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.47 (  0.47)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.12 (  0.12)
Overall Timing[ 44/  1]	epoch_time 0.0403 (0.0414)	validation_time 0.0005 (0.0006)	train_time 0.0398 (0.0400)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5762000154852868, 0.4870000183582306)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.44it/s] 15%|#5        | 4/26 [00:00<00:01, 17.52it/s] 27%|##6       | 7/26 [00:00<00:00, 22.32it/s] 42%|####2     | 11/26 [00:00<00:00, 25.86it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.71it/s] 88%|########8 | 23/26 [00:00<00:00, 29.56it/s]100%|##########| 26/26 [00:01<00:00, 25.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1170 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1171 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1172 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1173 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1174 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1175 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1176 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1177 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1178 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1179 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1180 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1181 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1182 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1183 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1184 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1185 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1186 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1187 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1188 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1189 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1190 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1191 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1192 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1193 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1194 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1195 364.00000000000006
constrain score by whole: 0
Epoch: [45][  26/  26]	Loss 0.005 (0.002)	train_nll   0.69 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.58 (  0.64)	train_minacc   0.58 (  0.58)	train_majacc   0.57 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.79it/s] 27%|##6       | 7/26 [00:00<00:00, 33.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.32it/s] 50%|#####     | 13/26 [00:00<00:00, 39.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.54it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.54it/s] 92%|#########2| 24/26 [00:00<00:00, 44.32it/s]100%|##########| 26/26 [00:00<00:00, 38.89it/s]
Test: [   0/  26]	Loss 0.661 (0.661)	test_acc   0.60 (  0.60)	test_minacc   0.63 (  0.63)	test_majacc   0.60 (  0.60)	Loss_d 0.661 (0.661)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.17 (  0.17)
Test: [  10/  26]	Loss 0.653 (0.655)	test_acc   0.60 (  0.61)	test_minacc   0.51 (  0.60)	test_majacc   0.61 (  0.62)	Loss_d 0.653 (0.655)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.51 (  0.60)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.26 (  0.20)
Test: [  20/  26]	Loss 0.645 (0.650)	test_acc   0.59 (  0.62)	test_minacc   0.57 (  0.59)	test_majacc   0.59 (  0.62)	Loss_d 0.645 (0.650)	test_acc_d   0.59 (  0.62)	test_minacc_d   0.57 (  0.59)	test_majacc_d   0.59 (  0.62)	test_corr_d   0.23 (  0.22)
Test: [  26/  26]	Loss 0.648 (0.649)	test_acc   0.64 (  0.62)	test_minacc   0.52 (  0.58)	test_majacc   0.67 (  0.62)	Loss_d 0.648 (0.649)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.52 (  0.58)	test_majacc_d   0.67 (  0.62)	test_corr_d   0.26 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.95it/s]
Test: [  0/  1]	Loss 0.669 (0.669)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.59 (  0.59)	Loss_d 0.669 (0.669)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.18 ( -0.18)
Test: [  1/  1]	Loss 0.669 (0.669)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.59 (  0.59)	Loss_d 0.669 (0.669)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.18 ( -0.18)
Overall Timing[ 45/  1]	epoch_time 0.0383 (0.0413)	validation_time 0.0004 (0.0006)	train_time 0.0379 (0.0400)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.6181000119447708, 0.593000054359436)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.25it/s] 15%|#5        | 4/26 [00:00<00:01, 18.27it/s] 27%|##6       | 7/26 [00:00<00:00, 22.90it/s] 42%|####2     | 11/26 [00:00<00:00, 26.17it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.27it/s] 69%|######9   | 18/26 [00:00<00:00, 27.91it/s] 81%|########  | 21/26 [00:00<00:00, 28.36it/s] 92%|#########2| 24/26 [00:00<00:00, 28.57it/s]100%|##########| 26/26 [00:01<00:00, 25.03it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1196 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1197 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1198 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1199 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1200 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1201 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1202 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1203 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1204 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1205 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1206 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1207 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1208 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1209 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1210 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1211 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1212 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1213 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1214 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1215 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1216 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1217 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1218 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1219 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1220 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1221 364.00000000000006
constrain score by whole: 0
Epoch: [46][  26/  26]	Loss 0.001 (0.001)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.62 (  0.57)	train_minacc   0.54 (  0.57)	train_majacc   0.64 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.53it/s] 27%|##6       | 7/26 [00:00<00:00, 29.49it/s]                                               27%|##6       | 7/26 [00:00<00:00, 29.49it/s] 50%|#####     | 13/26 [00:00<00:00, 37.69it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.11it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.11it/s] 92%|#########2| 24/26 [00:00<00:00, 45.07it/s]100%|##########| 26/26 [00:00<00:00, 36.39it/s]
Test: [   0/  26]	Loss 0.699 (0.699)	test_acc   0.54 (  0.54)	test_minacc   0.56 (  0.56)	test_majacc   0.54 (  0.54)	Loss_d 0.699 (0.699)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.04 (  0.04)
Test: [  10/  26]	Loss 0.725 (0.718)	test_acc   0.49 (  0.51)	test_minacc   0.47 (  0.50)	test_majacc   0.50 (  0.51)	Loss_d 0.725 (0.718)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.09 (  0.04)
Test: [  20/  26]	Loss 0.692 (0.715)	test_acc   0.56 (  0.51)	test_minacc   0.41 (  0.50)	test_majacc   0.58 (  0.51)	Loss_d 0.692 (0.715)	test_acc_d   0.56 (  0.51)	test_minacc_d   0.41 (  0.50)	test_majacc_d   0.58 (  0.51)	test_corr_d   0.09 (  0.05)
Test: [  26/  26]	Loss 0.713 (0.715)	test_acc   0.48 (  0.51)	test_minacc   0.44 (  0.51)	test_majacc   0.50 (  0.51)	Loss_d 0.713 (0.715)	test_acc_d   0.48 (  0.51)	test_minacc_d   0.44 (  0.51)	test_majacc_d   0.50 (  0.51)	test_corr_d   0.15 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.05it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.27 ( -0.27)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.51 (  0.51)	test_minacc   0.51 (  0.51)	test_majacc   0.50 (  0.50)	Loss_d 0.700 (0.700)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.27 ( -0.27)
Overall Timing[ 46/  1]	epoch_time 0.0581 (0.0417)	validation_time 0.0173 (0.0010)	train_time 0.0407 (0.0400)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5108000127971173, 0.5120000243186951)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.67it/s] 15%|#5        | 4/26 [00:00<00:01, 14.28it/s] 27%|##6       | 7/26 [00:00<00:00, 19.38it/s] 38%|###8      | 10/26 [00:00<00:00, 22.83it/s] 50%|#####     | 13/26 [00:00<00:00, 24.92it/s] 62%|######1   | 16/26 [00:00<00:00, 26.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 26.85it/s] 85%|########4 | 22/26 [00:00<00:00, 27.25it/s] 96%|#########6| 25/26 [00:01<00:00, 26.96it/s]100%|##########| 26/26 [00:01<00:00, 22.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1222 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1223 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1224 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1225 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1226 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1227 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1228 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1229 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1230 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1231 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1232 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1233 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1234 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1235 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1236 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1237 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1238 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1239 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1240 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1241 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1242 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1243 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1244 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1245 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1246 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1247 364.00000000000006
constrain score by whole: 0
Epoch: [47][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.53 (  0.56)	train_minacc   0.44 (  0.55)	train_majacc   0.55 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.49it/s] 23%|##3       | 6/26 [00:00<00:00, 27.19it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.19it/s] 42%|####2     | 11/26 [00:00<00:00, 34.86it/s] 65%|######5   | 17/26 [00:00<00:00, 41.26it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.26it/s] 88%|########8 | 23/26 [00:00<00:00, 46.28it/s]100%|##########| 26/26 [00:00<00:00, 36.82it/s]
Test: [   0/  26]	Loss 0.668 (0.668)	test_acc   0.56 (  0.56)	test_minacc   0.50 (  0.50)	test_majacc   0.57 (  0.57)	Loss_d 0.668 (0.668)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.26 (  0.26)
Test: [  10/  26]	Loss 0.658 (0.667)	test_acc   0.62 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.63 (  0.58)	Loss_d 0.658 (0.667)	test_acc_d   0.62 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.63 (  0.58)	test_corr_d   0.28 (  0.22)
Test: [  20/  26]	Loss 0.669 (0.665)	test_acc   0.57 (  0.59)	test_minacc   0.63 (  0.58)	test_majacc   0.57 (  0.59)	Loss_d 0.669 (0.665)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.63 (  0.58)	test_majacc_d   0.57 (  0.59)	test_corr_d   0.23 (  0.24)
Test: [  26/  26]	Loss 0.659 (0.665)	test_acc   0.60 (  0.59)	test_minacc   0.56 (  0.57)	test_majacc   0.61 (  0.59)	Loss_d 0.659 (0.665)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.56 (  0.57)	test_majacc_d   0.61 (  0.59)	test_corr_d   0.31 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.14it/s]
Test: [  0/  1]	Loss 0.683 (0.683)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.54 (  0.54)	Loss_d 0.683 (0.683)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.683 (0.683)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.54 (  0.54)	Loss_d 0.683 (0.683)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 47/  1]	epoch_time 0.0408 (0.0417)	validation_time 0.0005 (0.0010)	train_time 0.0404 (0.0400)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.5869000118374824, 0.5450000166893005)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.61it/s] 15%|#5        | 4/26 [00:00<00:01, 13.97it/s] 27%|##6       | 7/26 [00:00<00:01, 18.85it/s] 38%|###8      | 10/26 [00:00<00:00, 22.20it/s] 50%|#####     | 13/26 [00:00<00:00, 23.93it/s] 62%|######1   | 16/26 [00:00<00:00, 25.16it/s] 73%|#######3  | 19/26 [00:00<00:00, 25.91it/s] 85%|########4 | 22/26 [00:00<00:00, 26.90it/s] 96%|#########6| 25/26 [00:01<00:00, 26.89it/s]100%|##########| 26/26 [00:01<00:00, 22.22it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1248 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1249 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1250 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1251 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1252 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1253 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1254 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1255 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1256 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1257 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1258 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1259 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1260 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1261 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1262 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1263 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1264 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1265 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1266 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1267 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1268 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1269 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1270 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1271 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1272 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1273 364.00000000000006
constrain score by whole: 0
Epoch: [48][  26/  26]	Loss 0.001 (0.001)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.50 (  0.55)	train_minacc   0.46 (  0.58)	train_majacc   0.51 (  0.55)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.65it/s] 27%|##6       | 7/26 [00:00<00:00, 28.92it/s]                                               27%|##6       | 7/26 [00:00<00:00, 28.92it/s] 46%|####6     | 12/26 [00:00<00:00, 35.38it/s] 65%|######5   | 17/26 [00:00<00:00, 37.90it/s]                                                65%|######5   | 17/26 [00:00<00:00, 37.90it/s] 88%|########8 | 23/26 [00:00<00:00, 42.94it/s]100%|##########| 26/26 [00:00<00:00, 35.17it/s]
Test: [   0/  26]	Loss 0.684 (0.684)	test_acc   0.53 (  0.53)	test_minacc   0.50 (  0.50)	test_majacc   0.53 (  0.53)	Loss_d 0.684 (0.684)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.21 (  0.21)
Test: [  10/  26]	Loss 0.668 (0.678)	test_acc   0.58 (  0.55)	test_minacc   0.51 (  0.56)	test_majacc   0.59 (  0.55)	Loss_d 0.668 (0.678)	test_acc_d   0.58 (  0.55)	test_minacc_d   0.51 (  0.56)	test_majacc_d   0.59 (  0.55)	test_corr_d   0.25 (  0.17)
Test: [  20/  26]	Loss 0.685 (0.677)	test_acc   0.52 (  0.55)	test_minacc   0.61 (  0.56)	test_majacc   0.51 (  0.55)	Loss_d 0.685 (0.677)	test_acc_d   0.52 (  0.55)	test_minacc_d   0.61 (  0.56)	test_majacc_d   0.51 (  0.55)	test_corr_d   0.19 (  0.19)
Test: [  26/  26]	Loss 0.672 (0.677)	test_acc   0.59 (  0.55)	test_minacc   0.54 (  0.55)	test_majacc   0.60 (  0.55)	Loss_d 0.672 (0.677)	test_acc_d   0.59 (  0.55)	test_minacc_d   0.54 (  0.55)	test_majacc_d   0.60 (  0.55)	test_corr_d   0.24 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.20it/s]
Test: [  0/  1]	Loss 0.682 (0.682)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.54 (  0.54)	Loss_d 0.682 (0.682)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.21 ( -0.21)
Test: [  1/  1]	Loss 0.682 (0.682)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.54 (  0.54)	Loss_d 0.682 (0.682)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.21 ( -0.21)
Overall Timing[ 48/  1]	epoch_time 0.0421 (0.0417)	validation_time 0.0004 (0.0010)	train_time 0.0417 (0.0401)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.552600013256073, 0.5490000247955322)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.80it/s] 15%|#5        | 4/26 [00:00<00:01, 18.55it/s] 27%|##6       | 7/26 [00:00<00:00, 22.93it/s] 38%|###8      | 10/26 [00:00<00:00, 25.05it/s] 50%|#####     | 13/26 [00:00<00:00, 26.44it/s] 62%|######1   | 16/26 [00:00<00:00, 27.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.39it/s] 85%|########4 | 22/26 [00:00<00:00, 27.61it/s] 96%|#########6| 25/26 [00:00<00:00, 27.81it/s]100%|##########| 26/26 [00:01<00:00, 24.49it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1274 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1275 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1276 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1277 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1278 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1279 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1280 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1281 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1282 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1283 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1284 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1285 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1286 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1287 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1288 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1289 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1290 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1291 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1292 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1293 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1294 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1295 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1296 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1297 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1298 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1299 364.00000000000006
constrain score by whole: 0
Epoch: [49][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.78 (  7.79)	train_acc   0.54 (  0.58)	train_minacc   0.48 (  0.56)	train_majacc   0.55 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.42it/s] 19%|#9        | 5/26 [00:00<00:00, 26.09it/s] 38%|###8      | 10/26 [00:00<00:00, 35.68it/s]                                                38%|###8      | 10/26 [00:00<00:00, 35.68it/s] 62%|######1   | 16/26 [00:00<00:00, 42.82it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.82it/s] 81%|########  | 21/26 [00:00<00:00, 42.35it/s]100%|##########| 26/26 [00:00<00:00, 37.48it/s]
Test: [   0/  26]	Loss 0.670 (0.670)	test_acc   0.57 (  0.57)	test_minacc   0.48 (  0.48)	test_majacc   0.59 (  0.59)	Loss_d 0.670 (0.670)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.18 (  0.18)
Test: [  10/  26]	Loss 0.653 (0.668)	test_acc   0.62 (  0.58)	test_minacc   0.62 (  0.59)	test_majacc   0.62 (  0.58)	Loss_d 0.653 (0.668)	test_acc_d   0.62 (  0.58)	test_minacc_d   0.62 (  0.59)	test_majacc_d   0.62 (  0.58)	test_corr_d   0.25 (  0.15)
Test: [  20/  26]	Loss 0.671 (0.666)	test_acc   0.58 (  0.59)	test_minacc   0.61 (  0.58)	test_majacc   0.57 (  0.59)	Loss_d 0.671 (0.666)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.61 (  0.58)	test_majacc_d   0.57 (  0.59)	test_corr_d   0.17 (  0.18)
Test: [  26/  26]	Loss 0.654 (0.666)	test_acc   0.60 (  0.59)	test_minacc   0.52 (  0.58)	test_majacc   0.61 (  0.59)	Loss_d 0.654 (0.666)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.52 (  0.58)	test_majacc_d   0.61 (  0.59)	test_corr_d   0.28 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.06it/s]
Test: [  0/  1]	Loss 0.674 (0.674)	test_acc   0.58 (  0.58)	test_minacc   0.59 (  0.59)	test_majacc   0.50 (  0.50)	Loss_d 0.674 (0.674)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.19 ( -0.19)
Test: [  1/  1]	Loss 0.674 (0.674)	test_acc   0.58 (  0.58)	test_minacc   0.59 (  0.59)	test_majacc   0.50 (  0.50)	Loss_d 0.674 (0.674)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.19 ( -0.19)
Overall Timing[ 49/  1]	epoch_time 0.0396 (0.0416)	validation_time 0.0005 (0.0010)	train_time 0.0392 (0.0400)
record: (train_acc, test_acc) (0.6128000077605248, 0.6170000433921814)
last accs (train_acc, test_acc) (0.585400009393692, 0.578000009059906)
wandb: - 0.160 MB of 0.160 MB uploadedwandb: \ 0.160 MB of 0.160 MB uploadedwandb: | 0.160 MB of 0.160 MB uploadedwandb: / 0.160 MB of 0.160 MB uploadedwandb: - 0.160 MB of 0.160 MB uploadedwandb: \ 0.160 MB of 0.160 MB uploadedwandb: | 0.160 MB of 0.160 MB uploadedwandb: / 0.181 MB of 0.187 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/diagnostics/epoch_time_val █▁▁▁▁▁▁▁▁▁▁▁▂▁▁▂▁▁▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▃▁▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/diagnostics/train_time_val █▁▁▁▂▂▂▁▂▁▁▁▃▁▁▂▂▂▃▁▁▁▁▂▂▂▂▂▁▁▁▁▁▁▁▁▁▂▂▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/diagnostics/validation_time_val ▄▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁█▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/Loss_avg ▃▇▃▅▃▃▄█▁▃▂▂▂▆▄▄▄▄▆█▂▁▂▂▂▂▁▂▁▂▁▁▂▁▃▁▁▂▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/Loss_d_avg ▃▇▃▅▃▃▄█▁▃▂▂▂▆▄▄▄▄▆█▂▁▂▂▂▂▁▂▁▂▁▁▂▁▃▁▁▂▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/Loss_d_val ▃▇▃▅▃▃▄█▁▃▂▂▂▆▄▄▄▄▆█▂▁▂▂▂▂▁▂▁▂▁▁▂▁▃▁▁▂▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/Loss_val ▃▇▃▅▃▃▄█▁▃▂▂▂▆▄▄▄▄▆█▂▁▂▂▂▂▁▂▁▂▁▁▂▁▃▁▁▂▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_acc_avg ▅▃▇▆▃▄▅▄█▄▇▆▆▁▅▄▆▅▄▄▇▆▆▇▆▅▆▆▇▅▆▇▅▆▆▆▇▅▆▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_acc_d_avg ▅▃▇▆▃▄▅▄█▄▇▆▆▁▅▄▆▅▄▄▇▆▆▇▆▅▆▆▇▅▆▇▅▆▆▆▇▅▆▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_acc_d_val ▅▃▇▆▃▄▅▄█▄▇▆▆▁▅▄▆▅▄▄▇▆▆▇▆▅▆▆▇▅▆▇▅▆▆▆▇▅▆▇
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_acc_val ▅▃▇▆▃▄▅▄█▄▇▆▆▁▅▄▆▅▄▄▇▆▆▇▆▅▆▆▇▅▆▇▅▆▆▆▇▅▆▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_corr_d_avg ▃▇▃▅▆▅▄▆▂▅▃▄▃█▄▆▅▅▇▅▃▃▃▃▃▃▂▃▂▂▃▁▃▂▃▂▂▁▃▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_corr_d_val ▃▇▃▅▆▅▄▆▂▅▃▄▃█▄▆▅▅▇▅▃▃▃▃▃▃▂▃▂▂▃▁▃▂▃▂▂▁▃▂
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_majacc_avg ▃▃▅▅▃▂▃▄▂▄▂▃▃█▅▄▄▆▇▆▄▄▄▄▄▂▂▁▃▁▃▃▂▂▅▃▄▁▂▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_majacc_d_avg ▃▃▅▅▃▂▃▄▂▄▂▃▃█▅▄▄▆▇▆▄▄▄▄▄▂▂▁▃▁▃▃▂▂▅▃▄▁▂▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_majacc_d_val ▃▃▅▅▃▂▃▄▂▄▂▃▃█▅▄▄▆▇▆▄▄▄▄▄▂▂▁▃▁▃▃▂▂▅▃▄▁▂▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_majacc_val ▃▃▅▅▃▂▃▄▂▄▂▃▃█▅▄▄▆▇▆▄▄▄▄▄▂▂▁▃▁▃▃▂▂▅▃▄▁▂▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_minacc_avg ▅▃▇▆▃▅▅▄█▄▇▆▆▁▅▄▆▅▄▄▇▆▆▇▆▅▆▆▇▅▆▇▆▆▆▆▇▅▆▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_minacc_d_avg ▅▃▇▆▃▅▅▄█▄▇▆▆▁▅▄▆▅▄▄▇▆▆▇▆▅▆▆▇▅▆▇▆▆▆▆▇▅▆▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_minacc_d_val ▅▃▇▆▃▅▅▄█▄▇▆▆▁▅▄▆▅▄▄▇▆▆▇▆▅▆▆▇▅▆▇▆▆▆▆▇▅▆▇
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_minacc_val ▅▃▇▆▃▅▅▄█▄▇▆▆▁▅▄▆▅▄▄▇▆▆▇▆▅▆▆▇▅▆▇▆▆▆▆▇▅▆▇
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/Loss_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/Loss_val ▆▃▂▃▂▁▁▂▁▁▁▁▁█▁▂▁▁▆▇▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▂▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_acc_avg █▇▅▅▅▃▄▄▃▃▂▂▃▄▅▄▄▄▃▃▅▃▃▄▃▂▂▂▂▁▁▃▃▂▃▄▄▂▂▂
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_acc_val ▇▆▇▇▇▆██▅▆▅▅▄▅▅▂▆▆▅▄█▄▇▅▅█▆▆▁▃▃▅▅▆▇▅▅▆▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_majacc_avg █▆▄▄▄▃▃▃▂▂▁▁▂▄▄▄▄▃▃▃▄▂▂▃▂▂▂▂▁▁▁▂▂▂▃▃▄▂▂▂
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_majacc_val █▆▆▇▆▅▇▇▄▅▄▅▄▄▅▃▅▆▅▅▇▄▆▄▅▆▆▅▁▃▃▄▅▆▇▅▄▆▄▄
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_minacc_avg ▁▅▇█▆▆▆▇▇█▇█▆▅▅▅▆▆▅▅▆█▇▇▇▆▆▇▇▆▆▇▇▇▆▇▇▆▆▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_minacc_val ▁▄█▅▇█▆▅█▆██▇▆▆▅▇▅▆▄▆▆▆▆▆█▇▇█▆▆█▆▇▆▇▇▆▄▅
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_nll_avg ▄▁▄▂▂▆▅▅▆▆▇▅▆▅▄▅▄▄▆▅▃▆▇▅▆▇▇▇▇██▇▇▇▆▅▅▇▇▇
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_nll_val ▃▄▁▁▁▃▂▁▅▃▅▃▅█▃▇▂▃█▇▂▄▂▃▄▃▄▄▇▇▅▄▄▄▃▄▆▅▅▄
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_penalty_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_penalty_val ▆▃▂▃▂▁▁▂▁▁▁▁▁█▁▂▁▁▆▇▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▁▂▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/weight_norm_avg █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/weight_norm_val █▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/diagnostics/epoch_time_val 0.03963
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/diagnostics/train_time_val 0.03915
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/diagnostics/validation_time_val 0.00046
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/Loss_avg 0.67391
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/Loss_d_avg 0.67391
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/Loss_d_val 0.67391
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/Loss_val 0.67391
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_acc_avg 0.578
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_acc_d_avg 0.578
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_acc_d_val 0.578
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_acc_val 0.578
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_corr_d_avg -0.19248
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_corr_d_val -0.19248
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_majacc_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_majacc_d_avg 0.5
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_majacc_d_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_majacc_val 0.5
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_minacc_avg 0.58667
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_minacc_d_avg 0.58667
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_minacc_d_val 0.58667
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/test/test_minacc_val 0.58667
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/Loss_avg 0.00185
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/Loss_val 0.00085
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_acc_avg 0.5784
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_acc_val 0.54
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_majacc_avg 0.58171
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_majacc_val 0.55446
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_minacc_avg 0.56207
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_minacc_val 0.47917
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_nll_avg 0.66916
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_nll_val 0.66376
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_penalty_avg 0.001
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/train_penalty_val 0.0
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/weight_norm_avg 7.78556
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/28/logs/train/weight_norm_val 7.78486
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/zs9u1k2a
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240905_000502-zs9u1k2a/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: janezdu (janezdu-uiuc). Use `wandb login --relogin` to force relogin
wandb: wandb version 0.17.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.17.7
wandb: Run data is saved locally in /scratch/users/zd16/sparseIRM-resnet-ver/wandb/run-20240905_000801-m4hb9bxx
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run name_random
wandb: ⭐️ View project at https://wandb.ai/janezdu-uiuc/irm
wandb: 🚀 View run at https://wandb.ai/janezdu-uiuc/irm/runs/m4hb9bxx
=> Reading YAML config from configs/smallscale/resnet18/resnet18-usc-unsigned.yaml
Namespace(data='dataset/', optimizer='adam', weight_opt='adam', set='mnistcifar', arch='ResNet18', config='configs/smallscale/resnet18/resnet18-usc-unsigned.yaml', log_dir=None, workers=4, epochs=50, start_epoch=None, batch_size=390, lr=0.006, warmup_length=0, momentum=0.9, weight_decay=0.0, print_freq=10, num_classes=10, resume='', resume_train_weights='', evaluate=False, pretrained=None, pretrained_distill=None, alpha_distill=0.95, T_distill=2, seed=0, multigpu=[0], lr_policy='cosine_lr', lr_adjust=30, lr_gamma=0.1, name='baseline', save_every=-1, prune_rate=0.95, param_prune_rate=0.0, pr_start=1.0, low_data=1, width_mult=1.0, nesterov=False, threetimes=False, random_subnet=False, one_batch=False, conv_type='ProbMaskConv', freeze_weights=False, st=False, mode='fan_in', nonlinearity='relu', bn_type='NonAffineBatchNorm', init='kaiming_normal', no_bn_decay=False, scale_fan=False, first_layer_dense=False, last_layer_dense=False, approx=False, zero=False, flip=False, bs=False, gumbel_sample=False, multiply_prob=False, no_multiply=False, multiply_cont=False, multiply_prob_bs=False, indiv=False, label_smoothing=None, first_layer_type=None, trainer='default', score_init_constant=1.0, K=1, update_freq=20, D=0.01, T=1, TA=True, TA2=False, TA_grow=False, center=False, straight_through=False, PLA_factor=0.1, PLA_patience=10, gradient_loss_para=0, abs_loss_para=0, thres=0.9, runs_name='name_random', resume_compare_loss1='', resume_compare_loss2='', init_weights='', trained_mask='', weight_rescaling=False, constrain_by_layer=False, weight_rescaling_data=False, use_running_stats=False, not_clipping=False, rescaling_para=False, lasso_para=0, dont_freeze_weights=False, iterative=True, prob_by_weight=False, rescale_at_fix_subnet=False, train_weights_at_the_same_time=True, sample_from_training_set=False, load_true_para=False, distill=False, finetune=False, stablize=False, prev_best=0, weight_opt_lr=0.0006, n=500, ts=0.28, te=0.6, d=20000, s=80, c=0.75, init_prob=False, thres_before=0.001, wide_ratio=0.001, noise=1, cal_p_q=False, just_finetune=False, snip=False, envs_num=2, classes_num=2, l2_regularizer_weight=0.001, data_num=50000, env_type='linear', irm_type='irmv1', hidden_dim=390, penalty_anneal_iters=13, penalty_weight=10000.0, grayscale_model=0, weight_lr_schedule=False, fix_subnet=False, freeze_weight=False, step='ours', prior_sd_coef=0, dim_inv=2, variance_gamma=1.0, dim_spu=10, image_scale=32, cons_ratio='0.999_0.7_0.1', noise_ratio=0.2, step_gamma=0.1, step_round=3, inner_steps=1)
=> Creating model 'ResNet18'
Here!!!!!!!!
==> Conv Type: ProbMaskConv
==> BN Type: NonAffineBatchNorm
<class 'utils.conv_type.ProbMaskConv'>
<class 'utils.bn_type.NonAffineBatchNorm'>
==> Building first layer with <class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
<class 'utils.conv_type.ProbMaskConv'>
init by 1
init by 1
ResNet(
  (conv1): ProbMaskConv(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(64, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(128, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(256, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): ProbMaskConv(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (downsample): Sequential(
        (0): ProbMaskConv(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): ProbMaskConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): NonAffineBatchNorm(512, eps=1e-05, momentum=0.1, affine=False, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=1)
  (fc): ProbMaskConv(512, 1, kernel_size=(1, 1), stride=(1, 1), bias=False)
)
=> Parallelizing on [0] gpus
<DEBUG> gradient to module.conv1.weight
<DEBUG> gradient to module.conv1.scores
<DEBUG> gradient to module.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv1.weight
<DEBUG> gradient to module.layer1.0.conv1.scores
<DEBUG> gradient to module.layer1.0.conv1.ones_mask
<DEBUG> gradient to module.layer1.0.conv2.weight
<DEBUG> gradient to module.layer1.0.conv2.scores
<DEBUG> gradient to module.layer1.0.conv2.ones_mask
<DEBUG> gradient to module.layer1.1.conv1.weight
<DEBUG> gradient to module.layer1.1.conv1.scores
<DEBUG> gradient to module.layer1.1.conv1.ones_mask
<DEBUG> gradient to module.layer1.1.conv2.weight
<DEBUG> gradient to module.layer1.1.conv2.scores
<DEBUG> gradient to module.layer1.1.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.conv1.weight
<DEBUG> gradient to module.layer2.0.conv1.scores
<DEBUG> gradient to module.layer2.0.conv1.ones_mask
<DEBUG> gradient to module.layer2.0.conv2.weight
<DEBUG> gradient to module.layer2.0.conv2.scores
<DEBUG> gradient to module.layer2.0.conv2.ones_mask
<DEBUG> gradient to module.layer2.0.downsample.0.weight
<DEBUG> gradient to module.layer2.0.downsample.0.scores
<DEBUG> gradient to module.layer2.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer2.1.conv1.weight
<DEBUG> gradient to module.layer2.1.conv1.scores
<DEBUG> gradient to module.layer2.1.conv1.ones_mask
<DEBUG> gradient to module.layer2.1.conv2.weight
<DEBUG> gradient to module.layer2.1.conv2.scores
<DEBUG> gradient to module.layer2.1.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.conv1.weight
<DEBUG> gradient to module.layer3.0.conv1.scores
<DEBUG> gradient to module.layer3.0.conv1.ones_mask
<DEBUG> gradient to module.layer3.0.conv2.weight
<DEBUG> gradient to module.layer3.0.conv2.scores
<DEBUG> gradient to module.layer3.0.conv2.ones_mask
<DEBUG> gradient to module.layer3.0.downsample.0.weight
<DEBUG> gradient to module.layer3.0.downsample.0.scores
<DEBUG> gradient to module.layer3.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer3.1.conv1.weight
<DEBUG> gradient to module.layer3.1.conv1.scores
<DEBUG> gradient to module.layer3.1.conv1.ones_mask
<DEBUG> gradient to module.layer3.1.conv2.weight
<DEBUG> gradient to module.layer3.1.conv2.scores
<DEBUG> gradient to module.layer3.1.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.conv1.weight
<DEBUG> gradient to module.layer4.0.conv1.scores
<DEBUG> gradient to module.layer4.0.conv1.ones_mask
<DEBUG> gradient to module.layer4.0.conv2.weight
<DEBUG> gradient to module.layer4.0.conv2.scores
<DEBUG> gradient to module.layer4.0.conv2.ones_mask
<DEBUG> gradient to module.layer4.0.downsample.0.weight
<DEBUG> gradient to module.layer4.0.downsample.0.scores
<DEBUG> gradient to module.layer4.0.downsample.0.ones_mask
<DEBUG> gradient to module.layer4.1.conv1.weight
<DEBUG> gradient to module.layer4.1.conv1.scores
<DEBUG> gradient to module.layer4.1.conv1.ones_mask
<DEBUG> gradient to module.layer4.1.conv2.weight
<DEBUG> gradient to module.layer4.1.conv2.scores
<DEBUG> gradient to module.layer4.1.conv2.ones_mask
<DEBUG> gradient to module.fc.weight
<DEBUG> gradient to module.fc.scores
<DEBUG> gradient to module.fc.ones_mask
module.conv1.weight weight_para
module.conv1.ones_mask weight_para
module.layer1.0.conv1.weight weight_para
module.layer1.0.conv1.ones_mask weight_para
module.layer1.0.conv2.weight weight_para
module.layer1.0.conv2.ones_mask weight_para
module.layer1.1.conv1.weight weight_para
module.layer1.1.conv1.ones_mask weight_para
module.layer1.1.conv2.weight weight_para
module.layer1.1.conv2.ones_mask weight_para
module.layer2.0.conv1.weight weight_para
module.layer2.0.conv1.ones_mask weight_para
module.layer2.0.conv2.weight weight_para
module.layer2.0.conv2.ones_mask weight_para
module.layer2.0.downsample.0.weight weight_para
module.layer2.0.downsample.0.ones_mask weight_para
module.layer2.1.conv1.weight weight_para
module.layer2.1.conv1.ones_mask weight_para
module.layer2.1.conv2.weight weight_para
module.layer2.1.conv2.ones_mask weight_para
module.layer3.0.conv1.weight weight_para
module.layer3.0.conv1.ones_mask weight_para
module.layer3.0.conv2.weight weight_para
module.layer3.0.conv2.ones_mask weight_para
module.layer3.0.downsample.0.weight weight_para
module.layer3.0.downsample.0.ones_mask weight_para
module.layer3.1.conv1.weight weight_para
module.layer3.1.conv1.ones_mask weight_para
module.layer3.1.conv2.weight weight_para
module.layer3.1.conv2.ones_mask weight_para
module.layer4.0.conv1.weight weight_para
module.layer4.0.conv1.ones_mask weight_para
module.layer4.0.conv2.weight weight_para
module.layer4.0.conv2.ones_mask weight_para
module.layer4.0.downsample.0.weight weight_para
module.layer4.0.downsample.0.ones_mask weight_para
module.layer4.1.conv1.weight weight_para
module.layer4.1.conv1.ones_mask weight_para
module.layer4.1.conv2.weight weight_para
module.layer4.1.conv2.ones_mask weight_para
module.fc.weight weight_para
module.fc.ones_mask weight_para
module.conv1.scores score_para
module.layer1.0.conv1.scores score_para
module.layer1.0.conv2.scores score_para
module.layer1.1.conv1.scores score_para
module.layer1.1.conv2.scores score_para
module.layer2.0.conv1.scores score_para
module.layer2.0.conv2.scores score_para
module.layer2.0.downsample.0.scores score_para
module.layer2.1.conv1.scores score_para
module.layer2.1.conv2.scores score_para
module.layer3.0.conv1.scores score_para
module.layer3.0.conv2.scores score_para
module.layer3.0.downsample.0.scores score_para
module.layer3.1.conv1.scores score_para
module.layer3.1.conv2.scores score_para
module.layer4.0.conv1.scores score_para
module.layer4.0.conv2.scores score_para
module.layer4.0.downsample.0.scores score_para
module.layer4.1.conv1.scores score_para
module.layer4.1.conv2.scores score_para
module.fc.scores score_para
Files already downloaded and verified
Files already downloaded and verified
Adding Noise to Label, len(Y)=12000, Label_noise=1240
Xmp (7877, 3, 32, 32) (6903, 3, 32, 32)
Xcp (6002, 3, 32, 32) (5998, 3, 32, 32)
env=0 2497 2497 3 3
xn 2500 xp 2500
env=1 1750 1750 750 750
xn 2500 xp 2500
env=2 50 50 450 450
xn 500 xp 500
=> Creating model 'EBD'
EBD(
  (embedings): Embedding(2, 1)
)
=> Parallelizing on [0] gpus
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:01<00:40,  1.61s/it] 15%|#5        | 4/26 [00:01<00:07,  3.01it/s] 31%|###       | 8/26 [00:01<00:02,  6.71it/s] 46%|####6     | 12/26 [00:01<00:01, 10.69it/s] 62%|######1   | 16/26 [00:02<00:00, 14.65it/s] 77%|#######6  | 20/26 [00:02<00:00, 18.15it/s] 92%|#########2| 24/26 [00:02<00:00, 21.33it/s]100%|##########| 26/26 [00:02<00:00,  9.44it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 0 13
penalty weights 0.0
constrain score by whole: tensor(4.7684e-07, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 2 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 3 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 4 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 5 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 6 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 7 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 8 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 9 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 10 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 11 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 12 13
penalty weights 0.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 13 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 14 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 15 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 16 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 17 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 18 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 19 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 20 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 21 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 22 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 23 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 24 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 25 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [0][  26/  26]	Loss 0.001 (4.956)	train_nll   0.64 (  0.67)	train_penalty   0.00 (  0.38)	weight_norm   7.97 (  8.59)	train_acc   0.58 (  0.72)	train_minacc   0.58 (  0.28)	train_majacc   0.58 (  0.80)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.19it/s] 27%|##6       | 7/26 [00:00<00:00, 33.24it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.24it/s] 50%|#####     | 13/26 [00:00<00:00, 39.59it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.68it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.68it/s] 96%|#########6| 25/26 [00:00<00:00, 47.04it/s]100%|##########| 26/26 [00:00<00:00, 38.74it/s]
Test: [   0/  26]	Loss 0.584 (0.584)	test_acc   0.69 (  0.69)	test_minacc   0.48 (  0.48)	test_majacc   0.73 (  0.73)	Loss_d 0.584 (0.584)	test_acc_d   0.69 (  0.69)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.73 (  0.73)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.544 (0.562)	test_acc   0.74 (  0.71)	test_minacc   0.61 (  0.50)	test_majacc   0.76 (  0.74)	Loss_d 0.544 (0.562)	test_acc_d   0.74 (  0.71)	test_minacc_d   0.61 (  0.50)	test_majacc_d   0.76 (  0.74)	test_corr_d   0.49 (  0.52)
Test: [  20/  26]	Loss 0.566 (0.561)	test_acc   0.73 (  0.71)	test_minacc   0.49 (  0.49)	test_majacc   0.77 (  0.75)	Loss_d 0.566 (0.561)	test_acc_d   0.73 (  0.71)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.77 (  0.75)	test_corr_d   0.53 (  0.52)
Test: [  26/  26]	Loss 0.574 (0.563)	test_acc   0.70 (  0.71)	test_minacc   0.47 (  0.48)	test_majacc   0.74 (  0.75)	Loss_d 0.574 (0.563)	test_acc_d   0.70 (  0.71)	test_minacc_d   0.47 (  0.48)	test_majacc_d   0.74 (  0.75)	test_corr_d   0.53 (  0.52)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00,  2.46it/s]100%|##########| 1/1 [00:00<00:00,  2.46it/s]
Test: [  0/  1]	Loss 0.866 (0.866)	test_acc   0.41 (  0.41)	test_minacc   0.38 (  0.38)	test_majacc   0.71 (  0.71)	Loss_d 0.866 (0.866)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.37 (  0.37)
Test: [  1/  1]	Loss 0.866 (0.866)	test_acc   0.41 (  0.41)	test_minacc   0.38 (  0.38)	test_majacc   0.71 (  0.71)	Loss_d 0.866 (0.866)	test_acc_d   0.41 (  0.41)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.37 (  0.37)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/29/checkpoints/model_best.pth
Overall Timing[  0/  1]	epoch_time 0.0952 (0.0952)	validation_time 0.0068 (0.0068)	train_time 0.0673 (0.0673)
record: (train_acc, test_acc) (0.7080000332593918, 0.4100000262260437)
last accs (train_acc, test_acc) (0.7080000332593918, 0.4100000262260437)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.47it/s] 19%|#9        | 5/26 [00:00<00:01, 19.17it/s] 35%|###4      | 9/26 [00:00<00:00, 24.52it/s] 46%|####6     | 12/26 [00:00<00:00, 26.07it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.83it/s] 69%|######9   | 18/26 [00:00<00:00, 27.54it/s] 85%|########4 | 22/26 [00:00<00:00, 28.74it/s]100%|##########| 26/26 [00:00<00:00, 29.73it/s]100%|##########| 26/26 [00:01<00:00, 24.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 26 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 27 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 28 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 29 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 30 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 31 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 32 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 33 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 34 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 35 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 36 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 37 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 38 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 39 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 40 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 41 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 42 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 43 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 44 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 45 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 46 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 47 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 48 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 49 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 50 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 51 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [1][  26/  26]	Loss 0.004 (0.005)	train_nll   0.65 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.85)	train_acc   0.67 (  0.67)	train_minacc   0.42 (  0.49)	train_majacc   0.71 (  0.70)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.86it/s] 23%|##3       | 6/26 [00:00<00:00, 27.98it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.98it/s] 42%|####2     | 11/26 [00:00<00:00, 36.69it/s] 65%|######5   | 17/26 [00:00<00:00, 39.45it/s]                                                65%|######5   | 17/26 [00:00<00:00, 39.45it/s] 85%|########4 | 22/26 [00:00<00:00, 42.64it/s]100%|##########| 26/26 [00:00<00:00, 35.51it/s]
Test: [   0/  26]	Loss 0.627 (0.627)	test_acc   0.67 (  0.67)	test_minacc   0.44 (  0.44)	test_majacc   0.70 (  0.70)	Loss_d 0.627 (0.627)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.590 (0.635)	test_acc   0.70 (  0.67)	test_minacc   0.61 (  0.50)	test_majacc   0.71 (  0.70)	Loss_d 0.590 (0.635)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.61 (  0.50)	test_majacc_d   0.71 (  0.70)	test_corr_d   0.31 (  0.32)
Test: [  20/  26]	Loss 0.615 (0.630)	test_acc   0.68 (  0.68)	test_minacc   0.51 (  0.50)	test_majacc   0.71 (  0.71)	Loss_d 0.615 (0.630)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.51 (  0.50)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.33 (  0.33)
Test: [  26/  26]	Loss 0.632 (0.630)	test_acc   0.68 (  0.68)	test_minacc   0.47 (  0.50)	test_majacc   0.71 (  0.71)	Loss_d 0.632 (0.630)	test_acc_d   0.68 (  0.68)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.71 (  0.71)	test_corr_d   0.38 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.00it/s]
Test: [  0/  1]	Loss 0.767 (0.767)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.72 (  0.72)	Loss_d 0.767 (0.767)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.07 (  0.07)
Test: [  1/  1]	Loss 0.767 (0.767)	test_acc   0.46 (  0.46)	test_minacc   0.43 (  0.43)	test_majacc   0.72 (  0.72)	Loss_d 0.767 (0.767)	test_acc_d   0.46 (  0.46)	test_minacc_d   0.43 (  0.43)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.07 (  0.07)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/29/checkpoints/model_best.pth
Overall Timing[  1/  1]	epoch_time 0.0414 (0.0683)	validation_time 0.0004 (0.0036)	train_time 0.0409 (0.0541)
record: (train_acc, test_acc) (0.6803000245690346, 0.45600003004074097)
last accs (train_acc, test_acc) (0.6803000245690346, 0.45600003004074097)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.63it/s] 19%|#9        | 5/26 [00:00<00:00, 23.18it/s] 35%|###4      | 9/26 [00:00<00:00, 27.75it/s] 50%|#####     | 13/26 [00:00<00:00, 29.89it/s] 65%|######5   | 17/26 [00:00<00:00, 30.85it/s] 81%|########  | 21/26 [00:00<00:00, 31.50it/s] 96%|#########6| 25/26 [00:00<00:00, 31.82it/s]100%|##########| 26/26 [00:00<00:00, 27.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 52 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 53 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 54 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 55 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 56 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 57 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 58 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 59 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 60 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 61 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 62 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 63 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 64 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 65 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 66 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 67 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 68 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 69 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 70 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 71 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 72 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 73 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 74 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 75 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 76 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 77 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [2][  26/  26]	Loss 0.003 (0.003)	train_nll   0.61 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.67 (  0.65)	train_minacc   0.69 (  0.57)	train_majacc   0.66 (  0.67)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 31%|###       | 8/26 [00:00<00:00, 37.59it/s]                                               31%|###       | 8/26 [00:00<00:00, 37.59it/s] 50%|#####     | 13/26 [00:00<00:00, 41.15it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.04it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.04it/s] 96%|#########6| 25/26 [00:00<00:00, 48.09it/s]100%|##########| 26/26 [00:00<00:00, 39.16it/s]
Test: [   0/  26]	Loss 0.701 (0.701)	test_acc   0.54 (  0.54)	test_minacc   0.73 (  0.73)	test_majacc   0.51 (  0.51)	Loss_d 0.701 (0.701)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.73 (  0.73)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.00 ( -0.00)
Test: [  10/  26]	Loss 0.659 (0.690)	test_acc   0.56 (  0.55)	test_minacc   0.78 (  0.75)	test_majacc   0.53 (  0.52)	Loss_d 0.659 (0.690)	test_acc_d   0.56 (  0.55)	test_minacc_d   0.78 (  0.75)	test_majacc_d   0.53 (  0.52)	test_corr_d   0.07 (  0.00)
Test: [  20/  26]	Loss 0.694 (0.688)	test_acc   0.55 (  0.55)	test_minacc   0.75 (  0.74)	test_majacc   0.51 (  0.52)	Loss_d 0.694 (0.688)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.75 (  0.74)	test_majacc_d   0.51 (  0.52)	test_corr_d   0.00 (  0.01)
Test: [  26/  26]	Loss 0.647 (0.686)	test_acc   0.61 (  0.55)	test_minacc   0.75 (  0.74)	test_majacc   0.59 (  0.52)	Loss_d 0.647 (0.686)	test_acc_d   0.61 (  0.55)	test_minacc_d   0.75 (  0.74)	test_majacc_d   0.59 (  0.52)	test_corr_d   0.12 (  0.01)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.30it/s]
Test: [  0/  1]	Loss 0.664 (0.664)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.51 (  0.51)	Loss_d 0.664 (0.664)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.24 ( -0.24)
Test: [  1/  1]	Loss 0.664 (0.664)	test_acc   0.62 (  0.62)	test_minacc   0.63 (  0.63)	test_majacc   0.51 (  0.51)	Loss_d 0.664 (0.664)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.24 ( -0.24)
Overall Timing[  2/  1]	epoch_time 0.0382 (0.0583)	validation_time 0.0004 (0.0026)	train_time 0.0378 (0.0487)
record: (train_acc, test_acc) (0.6803000245690346, 0.45600003004074097)
last accs (train_acc, test_acc) (0.5509000087976456, 0.6210000514984131)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.46it/s] 19%|#9        | 5/26 [00:00<00:01, 18.64it/s] 35%|###4      | 9/26 [00:00<00:00, 24.61it/s] 50%|#####     | 13/26 [00:00<00:00, 27.09it/s] 65%|######5   | 17/26 [00:00<00:00, 29.07it/s] 81%|########  | 21/26 [00:00<00:00, 30.41it/s] 96%|#########6| 25/26 [00:00<00:00, 31.46it/s]100%|##########| 26/26 [00:00<00:00, 26.00it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 78 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 79 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 80 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 81 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 82 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 83 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 84 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 85 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 86 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 87 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 88 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 89 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 90 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 91 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 92 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 93 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 94 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 95 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 96 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 97 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 98 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 99 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 100 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 101 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 102 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 103 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [3][  26/  26]	Loss 0.003 (0.003)	train_nll   0.60 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.68 (  0.64)	train_minacc   0.33 (  0.57)	train_majacc   0.74 (  0.66)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.21it/s] 27%|##6       | 7/26 [00:00<00:00, 32.58it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.58it/s] 50%|#####     | 13/26 [00:00<00:00, 39.29it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.85it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.85it/s] 96%|#########6| 25/26 [00:00<00:00, 46.68it/s]100%|##########| 26/26 [00:00<00:00, 38.60it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.65 (  0.65)	test_minacc   0.52 (  0.52)	test_majacc   0.67 (  0.67)	Loss_d 0.630 (0.630)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.622 (0.652)	test_acc   0.61 (  0.62)	test_minacc   0.33 (  0.47)	test_majacc   0.66 (  0.65)	Loss_d 0.622 (0.652)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.33 (  0.47)	test_majacc_d   0.66 (  0.65)	test_corr_d   0.38 (  0.29)
Test: [  20/  26]	Loss 0.647 (0.648)	test_acc   0.60 (  0.63)	test_minacc   0.42 (  0.47)	test_majacc   0.64 (  0.66)	Loss_d 0.647 (0.648)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.42 (  0.47)	test_majacc_d   0.64 (  0.66)	test_corr_d   0.36 (  0.30)
Test: [  26/  26]	Loss 0.651 (0.650)	test_acc   0.63 (  0.63)	test_minacc   0.33 (  0.46)	test_majacc   0.68 (  0.66)	Loss_d 0.651 (0.650)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.33 (  0.46)	test_majacc_d   0.68 (  0.66)	test_corr_d   0.34 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.39it/s]
Test: [  0/  1]	Loss 0.818 (0.818)	test_acc   0.39 (  0.39)	test_minacc   0.36 (  0.36)	test_majacc   0.63 (  0.63)	Loss_d 0.818 (0.818)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.26 (  0.26)
Test: [  1/  1]	Loss 0.818 (0.818)	test_acc   0.39 (  0.39)	test_minacc   0.36 (  0.36)	test_majacc   0.63 (  0.63)	Loss_d 0.818 (0.818)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.36 (  0.36)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.26 (  0.26)
Overall Timing[  3/  1]	epoch_time 0.0391 (0.0535)	validation_time 0.0004 (0.0020)	train_time 0.0387 (0.0462)
record: (train_acc, test_acc) (0.6803000245690346, 0.45600003004074097)
last accs (train_acc, test_acc) (0.6269000105857849, 0.39000001549720764)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.97it/s] 19%|#9        | 5/26 [00:00<00:00, 22.88it/s] 35%|###4      | 9/26 [00:00<00:00, 26.96it/s] 50%|#####     | 13/26 [00:00<00:00, 29.01it/s] 65%|######5   | 17/26 [00:00<00:00, 30.19it/s] 81%|########  | 21/26 [00:00<00:00, 31.00it/s] 96%|#########6| 25/26 [00:00<00:00, 31.56it/s]100%|##########| 26/26 [00:00<00:00, 27.43it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 104 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 105 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 106 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 107 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 108 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 109 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 110 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 111 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 112 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 113 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 114 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 115 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 116 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 117 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 118 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 119 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 120 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 121 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 122 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 123 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 124 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 125 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 126 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 127 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 128 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 129 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [4][  26/  26]	Loss 0.003 (0.003)	train_nll   0.62 (  0.61)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.68 (  0.66)	train_minacc   0.28 (  0.51)	train_majacc   0.74 (  0.69)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.89it/s] 19%|#9        | 5/26 [00:00<00:00, 25.37it/s]                                               19%|#9        | 5/26 [00:00<00:00, 25.37it/s] 42%|####2     | 11/26 [00:00<00:00, 39.54it/s] 62%|######1   | 16/26 [00:00<00:00, 42.50it/s]                                                62%|######1   | 16/26 [00:00<00:00, 42.50it/s] 85%|########4 | 22/26 [00:00<00:00, 47.10it/s]100%|##########| 26/26 [00:00<00:00, 38.46it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.65 (  0.65)	test_minacc   0.48 (  0.48)	test_majacc   0.68 (  0.68)	Loss_d 0.623 (0.623)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.48 (  0.48)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.613 (0.653)	test_acc   0.67 (  0.62)	test_minacc   0.52 (  0.45)	test_majacc   0.69 (  0.65)	Loss_d 0.613 (0.653)	test_acc_d   0.67 (  0.62)	test_minacc_d   0.52 (  0.45)	test_majacc_d   0.69 (  0.65)	test_corr_d   0.45 (  0.37)
Test: [  20/  26]	Loss 0.642 (0.646)	test_acc   0.65 (  0.63)	test_minacc   0.45 (  0.46)	test_majacc   0.69 (  0.66)	Loss_d 0.642 (0.646)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.45 (  0.46)	test_majacc_d   0.69 (  0.66)	test_corr_d   0.42 (  0.38)
Test: [  26/  26]	Loss 0.662 (0.649)	test_acc   0.60 (  0.63)	test_minacc   0.36 (  0.45)	test_majacc   0.64 (  0.66)	Loss_d 0.662 (0.649)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.36 (  0.45)	test_majacc_d   0.64 (  0.66)	test_corr_d   0.38 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.07it/s]
Test: [  0/  1]	Loss 0.853 (0.853)	test_acc   0.40 (  0.40)	test_minacc   0.37 (  0.37)	test_majacc   0.65 (  0.65)	Loss_d 0.853 (0.853)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.40 (  0.40)
Test: [  1/  1]	Loss 0.853 (0.853)	test_acc   0.40 (  0.40)	test_minacc   0.37 (  0.37)	test_majacc   0.65 (  0.65)	Loss_d 0.853 (0.853)	test_acc_d   0.40 (  0.40)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.40 (  0.40)
Overall Timing[  4/  1]	epoch_time 0.0376 (0.0503)	validation_time 0.0004 (0.0017)	train_time 0.0372 (0.0444)
record: (train_acc, test_acc) (0.6803000245690346, 0.45600003004074097)
last accs (train_acc, test_acc) (0.6268000162243843, 0.39500001072883606)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.99it/s] 15%|#5        | 4/26 [00:00<00:01, 18.19it/s] 31%|###       | 8/26 [00:00<00:00, 24.78it/s] 46%|####6     | 12/26 [00:00<00:00, 27.87it/s] 62%|######1   | 16/26 [00:00<00:00, 29.60it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.50it/s] 92%|#########2| 24/26 [00:00<00:00, 30.96it/s]100%|##########| 26/26 [00:00<00:00, 26.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 130 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 131 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 132 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 133 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 134 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 135 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 136 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 137 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 138 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 139 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 140 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 141 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 142 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 143 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 144 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 145 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 146 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 147 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 148 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 149 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 150 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 151 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 152 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 153 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 154 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 155 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [5][  26/  26]	Loss 0.002 (0.007)	train_nll   0.65 (  0.62)	train_penalty   0.00 (  0.01)	weight_norm   7.80 (  7.80)	train_acc   0.60 (  0.64)	train_minacc   0.53 (  0.43)	train_majacc   0.61 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.86it/s] 27%|##6       | 7/26 [00:00<00:00, 33.44it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.44it/s] 50%|#####     | 13/26 [00:00<00:00, 39.78it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.96it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.96it/s] 96%|#########6| 25/26 [00:00<00:00, 47.00it/s]100%|##########| 26/26 [00:00<00:00, 38.19it/s]
Test: [   0/  26]	Loss 0.686 (0.686)	test_acc   0.54 (  0.54)	test_minacc   0.67 (  0.67)	test_majacc   0.51 (  0.51)	Loss_d 0.686 (0.686)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.11 (  0.11)
Test: [  10/  26]	Loss 0.669 (0.684)	test_acc   0.56 (  0.53)	test_minacc   0.81 (  0.73)	test_majacc   0.52 (  0.50)	Loss_d 0.669 (0.684)	test_acc_d   0.56 (  0.53)	test_minacc_d   0.81 (  0.73)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.10 (  0.10)
Test: [  20/  26]	Loss 0.658 (0.678)	test_acc   0.58 (  0.54)	test_minacc   0.78 (  0.74)	test_majacc   0.54 (  0.51)	Loss_d 0.658 (0.678)	test_acc_d   0.58 (  0.54)	test_minacc_d   0.78 (  0.74)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.12 (  0.11)
Test: [  26/  26]	Loss 0.685 (0.681)	test_acc   0.52 (  0.54)	test_minacc   0.67 (  0.74)	test_majacc   0.50 (  0.50)	Loss_d 0.685 (0.681)	test_acc_d   0.52 (  0.54)	test_minacc_d   0.67 (  0.74)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.11 (  0.11)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.16it/s]
Test: [  0/  1]	Loss 0.728 (0.728)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.50 (  0.50)	Loss_d 0.728 (0.728)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.728 (0.728)	test_acc   0.62 (  0.62)	test_minacc   0.64 (  0.64)	test_majacc   0.50 (  0.50)	Loss_d 0.728 (0.728)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.50 (  0.50)	test_corr_d  -0.13 ( -0.13)
Overall Timing[  5/  1]	epoch_time 0.0398 (0.0486)	validation_time 0.0004 (0.0015)	train_time 0.0394 (0.0435)
record: (train_acc, test_acc) (0.6803000245690346, 0.45600003004074097)
last accs (train_acc, test_acc) (0.5400000081658364, 0.625)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.99it/s] 19%|#9        | 5/26 [00:00<00:01, 19.07it/s] 35%|###4      | 9/26 [00:00<00:00, 24.44it/s] 50%|#####     | 13/26 [00:00<00:00, 27.43it/s] 65%|######5   | 17/26 [00:00<00:00, 28.94it/s] 81%|########  | 21/26 [00:00<00:00, 29.86it/s] 96%|#########6| 25/26 [00:00<00:00, 31.11it/s]100%|##########| 26/26 [00:01<00:00, 25.92it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 156 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 157 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 158 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 159 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 160 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 161 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 162 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 163 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 164 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 165 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 166 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 167 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 168 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 169 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 170 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 171 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 172 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 173 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 174 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 175 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 176 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 177 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 178 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 179 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 180 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 181 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [6][  26/  26]	Loss 0.001 (0.003)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.67 (  0.62)	train_minacc   0.56 (  0.59)	train_majacc   0.69 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.33it/s] 27%|##6       | 7/26 [00:00<00:00, 34.12it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.12it/s] 50%|#####     | 13/26 [00:00<00:00, 40.09it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.62it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.62it/s] 96%|#########6| 25/26 [00:00<00:00, 45.33it/s]100%|##########| 26/26 [00:00<00:00, 38.51it/s]
Test: [   0/  26]	Loss 0.603 (0.603)	test_acc   0.66 (  0.66)	test_minacc   0.63 (  0.63)	test_majacc   0.67 (  0.67)	Loss_d 0.603 (0.603)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.577 (0.638)	test_acc   0.71 (  0.62)	test_minacc   0.70 (  0.58)	test_majacc   0.71 (  0.63)	Loss_d 0.577 (0.638)	test_acc_d   0.71 (  0.62)	test_minacc_d   0.70 (  0.58)	test_majacc_d   0.71 (  0.63)	test_corr_d   0.36 (  0.26)
Test: [  20/  26]	Loss 0.623 (0.630)	test_acc   0.64 (  0.64)	test_minacc   0.68 (  0.60)	test_majacc   0.63 (  0.64)	Loss_d 0.623 (0.630)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.68 (  0.60)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.26 (  0.27)
Test: [  26/  26]	Loss 0.622 (0.630)	test_acc   0.65 (  0.64)	test_minacc   0.50 (  0.60)	test_majacc   0.68 (  0.64)	Loss_d 0.622 (0.630)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.50 (  0.60)	test_majacc_d   0.68 (  0.64)	test_corr_d   0.33 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.75it/s]
Test: [  0/  1]	Loss 0.700 (0.700)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.63 (  0.63)	Loss_d 0.700 (0.700)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.700 (0.700)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.63 (  0.63)	Loss_d 0.700 (0.700)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.10 ( -0.10)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/29/checkpoints/model_best.pth
Overall Timing[  6/  1]	epoch_time 0.0389 (0.0472)	validation_time 0.0004 (0.0013)	train_time 0.0384 (0.0428)
record: (train_acc, test_acc) (0.6353000168204308, 0.5460000038146973)
last accs (train_acc, test_acc) (0.6353000168204308, 0.5460000038146973)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.17it/s] 15%|#5        | 4/26 [00:00<00:01, 19.46it/s] 31%|###       | 8/26 [00:00<00:00, 25.16it/s] 46%|####6     | 12/26 [00:00<00:00, 27.75it/s] 62%|######1   | 16/26 [00:00<00:00, 29.16it/s] 77%|#######6  | 20/26 [00:00<00:00, 30.09it/s] 92%|#########2| 24/26 [00:00<00:00, 30.74it/s]100%|##########| 26/26 [00:00<00:00, 26.45it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 182 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 183 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 184 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 185 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 186 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 187 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 188 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 189 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 190 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 191 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 192 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 193 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 194 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 195 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 196 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 197 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 198 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 199 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 200 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 201 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 202 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 203 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 204 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 205 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 206 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 207 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [7][  26/  26]	Loss 0.001 (0.002)	train_nll   0.62 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.63 (  0.64)	train_minacc   0.42 (  0.57)	train_majacc   0.66 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.89it/s] 27%|##6       | 7/26 [00:00<00:00, 33.99it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.99it/s] 46%|####6     | 12/26 [00:00<00:00, 39.26it/s] 69%|######9   | 18/26 [00:00<00:00, 46.16it/s]                                                69%|######9   | 18/26 [00:00<00:00, 46.16it/s] 92%|#########2| 24/26 [00:00<00:00, 47.09it/s]100%|##########| 26/26 [00:00<00:00, 39.42it/s]
Test: [   0/  26]	Loss 0.614 (0.614)	test_acc   0.65 (  0.65)	test_minacc   0.65 (  0.65)	test_majacc   0.65 (  0.65)	Loss_d 0.614 (0.614)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.617 (0.631)	test_acc   0.64 (  0.63)	test_minacc   0.67 (  0.60)	test_majacc   0.64 (  0.63)	Loss_d 0.617 (0.631)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.67 (  0.60)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.28 (  0.28)
Test: [  20/  26]	Loss 0.617 (0.625)	test_acc   0.61 (  0.63)	test_minacc   0.66 (  0.61)	test_majacc   0.60 (  0.63)	Loss_d 0.617 (0.625)	test_acc_d   0.61 (  0.63)	test_minacc_d   0.66 (  0.61)	test_majacc_d   0.60 (  0.63)	test_corr_d   0.28 (  0.29)
Test: [  26/  26]	Loss 0.624 (0.625)	test_acc   0.62 (  0.63)	test_minacc   0.42 (  0.60)	test_majacc   0.66 (  0.63)	Loss_d 0.624 (0.625)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.42 (  0.60)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.36 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.79it/s]
Test: [  0/  1]	Loss 0.707 (0.707)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.707 (0.707)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.707 (0.707)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.63 (  0.63)	Loss_d 0.707 (0.707)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.63 (  0.63)	test_corr_d  -0.06 ( -0.06)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/29/checkpoints/model_best.pth
Overall Timing[  7/  1]	epoch_time 0.0384 (0.0461)	validation_time 0.0005 (0.0012)	train_time 0.0379 (0.0422)
record: (train_acc, test_acc) (0.6284000102877617, 0.5580000281333923)
last accs (train_acc, test_acc) (0.6284000102877617, 0.5580000281333923)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.36it/s] 15%|#5        | 4/26 [00:00<00:01, 17.18it/s] 27%|##6       | 7/26 [00:00<00:00, 22.26it/s] 42%|####2     | 11/26 [00:00<00:00, 26.31it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.11it/s] 73%|#######3  | 19/26 [00:00<00:00, 29.24it/s] 88%|########8 | 23/26 [00:00<00:00, 29.67it/s]100%|##########| 26/26 [00:01<00:00, 25.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 208 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 209 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 210 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 211 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 212 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 213 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 214 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 215 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 216 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 217 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 218 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 219 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 220 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 221 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 222 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 223 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 224 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 225 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 226 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 227 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 228 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 229 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 230 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 231 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 232 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 233 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [8][  26/  26]	Loss 0.002 (0.002)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.62 (  0.61)	train_minacc   0.58 (  0.56)	train_majacc   0.63 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.69it/s] 23%|##3       | 6/26 [00:00<00:00, 30.36it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.36it/s] 46%|####6     | 12/26 [00:00<00:00, 40.83it/s] 69%|######9   | 18/26 [00:00<00:00, 45.05it/s]                                                69%|######9   | 18/26 [00:00<00:00, 45.05it/s] 92%|#########2| 24/26 [00:00<00:00, 47.86it/s]100%|##########| 26/26 [00:00<00:00, 39.84it/s]
Test: [   0/  26]	Loss 0.662 (0.662)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.59 (  0.59)	Loss_d 0.662 (0.662)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.683 (0.657)	test_acc   0.54 (  0.59)	test_minacc   0.44 (  0.56)	test_majacc   0.56 (  0.60)	Loss_d 0.683 (0.657)	test_acc_d   0.54 (  0.59)	test_minacc_d   0.44 (  0.56)	test_majacc_d   0.56 (  0.60)	test_corr_d   0.21 (  0.25)
Test: [  20/  26]	Loss 0.673 (0.657)	test_acc   0.56 (  0.59)	test_minacc   0.51 (  0.55)	test_majacc   0.57 (  0.60)	Loss_d 0.673 (0.657)	test_acc_d   0.56 (  0.59)	test_minacc_d   0.51 (  0.55)	test_majacc_d   0.57 (  0.60)	test_corr_d   0.25 (  0.26)
Test: [  26/  26]	Loss 0.645 (0.658)	test_acc   0.62 (  0.59)	test_minacc   0.58 (  0.55)	test_majacc   0.63 (  0.60)	Loss_d 0.645 (0.658)	test_acc_d   0.62 (  0.59)	test_minacc_d   0.58 (  0.55)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.30 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.14it/s]
Test: [  0/  1]	Loss 0.713 (0.713)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.58 (  0.58)	Loss_d 0.713 (0.713)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.713 (0.713)	test_acc   0.53 (  0.53)	test_minacc   0.53 (  0.53)	test_majacc   0.58 (  0.58)	Loss_d 0.713 (0.713)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.07 ( -0.07)
Overall Timing[  8/  1]	epoch_time 0.0387 (0.0453)	validation_time 0.0004 (0.0011)	train_time 0.0383 (0.0418)
record: (train_acc, test_acc) (0.6284000102877617, 0.5580000281333923)
last accs (train_acc, test_acc) (0.5879000078439712, 0.534000039100647)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.72it/s] 15%|#5        | 4/26 [00:00<00:01, 19.19it/s] 31%|###       | 8/26 [00:00<00:00, 24.92it/s] 46%|####6     | 12/26 [00:00<00:00, 27.86it/s] 62%|######1   | 16/26 [00:00<00:00, 29.00it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.71it/s] 88%|########8 | 23/26 [00:00<00:00, 29.68it/s]100%|##########| 26/26 [00:00<00:00, 29.72it/s]100%|##########| 26/26 [00:01<00:00, 25.74it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 234 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 235 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 236 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 237 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 238 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 239 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 240 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 241 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 242 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 243 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 244 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 245 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 246 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 247 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 248 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 249 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 250 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 251 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 252 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 253 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 254 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 255 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 256 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 257 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 258 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 259 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [9][  26/  26]	Loss 0.002 (0.001)	train_nll   0.59 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.65 (  0.59)	train_minacc   0.67 (  0.68)	train_majacc   0.65 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.86it/s] 27%|##6       | 7/26 [00:00<00:00, 38.21it/s]                                               27%|##6       | 7/26 [00:00<00:00, 38.21it/s] 50%|#####     | 13/26 [00:00<00:00, 42.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.90it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.90it/s] 96%|#########6| 25/26 [00:00<00:00, 46.93it/s]100%|##########| 26/26 [00:00<00:00, 39.82it/s]
Test: [   0/  26]	Loss 0.587 (0.587)	test_acc   0.66 (  0.66)	test_minacc   0.71 (  0.71)	test_majacc   0.65 (  0.65)	Loss_d 0.587 (0.587)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.613 (0.596)	test_acc   0.63 (  0.63)	test_minacc   0.69 (  0.67)	test_majacc   0.62 (  0.62)	Loss_d 0.613 (0.596)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.69 (  0.67)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.32 (  0.36)
Test: [  20/  26]	Loss 0.593 (0.598)	test_acc   0.65 (  0.63)	test_minacc   0.65 (  0.65)	test_majacc   0.65 (  0.63)	Loss_d 0.593 (0.598)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.37 (  0.36)
Test: [  26/  26]	Loss 0.590 (0.600)	test_acc   0.67 (  0.63)	test_minacc   0.69 (  0.65)	test_majacc   0.67 (  0.63)	Loss_d 0.590 (0.600)	test_acc_d   0.67 (  0.63)	test_minacc_d   0.69 (  0.65)	test_majacc_d   0.67 (  0.63)	test_corr_d   0.41 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.54it/s]
Test: [  0/  1]	Loss 0.747 (0.747)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.747 (0.747)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.02 (  0.02)
Test: [  1/  1]	Loss 0.747 (0.747)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.747 (0.747)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.02 (  0.02)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/29/checkpoints/model_best.pth
Overall Timing[  9/  1]	epoch_time 0.0381 (0.0446)	validation_time 0.0004 (0.0011)	train_time 0.0376 (0.0413)
record: (train_acc, test_acc) (0.6320000087618828, 0.581000030040741)
last accs (train_acc, test_acc) (0.6320000087618828, 0.581000030040741)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.80it/s] 15%|#5        | 4/26 [00:00<00:01, 16.25it/s] 31%|###       | 8/26 [00:00<00:00, 23.16it/s] 46%|####6     | 12/26 [00:00<00:00, 26.82it/s] 62%|######1   | 16/26 [00:00<00:00, 28.33it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.29it/s] 92%|#########2| 24/26 [00:00<00:00, 29.94it/s]100%|##########| 26/26 [00:01<00:00, 24.87it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 260 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 261 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 262 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 263 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 264 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 265 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 266 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 267 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 268 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 269 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 270 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 271 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 272 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 273 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 274 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 275 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 276 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 277 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 278 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 279 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 280 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 281 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 282 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 283 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 284 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 285 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [10][  26/  26]	Loss 0.001 (0.001)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.59 (  0.59)	train_minacc   0.42 (  0.61)	train_majacc   0.62 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.35it/s] 27%|##6       | 7/26 [00:00<00:00, 32.53it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.53it/s] 50%|#####     | 13/26 [00:00<00:00, 38.93it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.90it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.90it/s] 96%|#########6| 25/26 [00:00<00:00, 46.45it/s]100%|##########| 26/26 [00:00<00:00, 38.11it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.63 (  0.63)	test_minacc   0.60 (  0.60)	test_majacc   0.63 (  0.63)	Loss_d 0.623 (0.623)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.637 (0.623)	test_acc   0.61 (  0.62)	test_minacc   0.57 (  0.60)	test_majacc   0.61 (  0.62)	Loss_d 0.637 (0.623)	test_acc_d   0.61 (  0.62)	test_minacc_d   0.57 (  0.60)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.30 (  0.33)
Test: [  20/  26]	Loss 0.611 (0.623)	test_acc   0.63 (  0.62)	test_minacc   0.58 (  0.59)	test_majacc   0.64 (  0.63)	Loss_d 0.611 (0.623)	test_acc_d   0.63 (  0.62)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.37 (  0.35)
Test: [  26/  26]	Loss 0.636 (0.624)	test_acc   0.60 (  0.62)	test_minacc   0.44 (  0.58)	test_majacc   0.62 (  0.63)	Loss_d 0.636 (0.624)	test_acc_d   0.60 (  0.62)	test_minacc_d   0.44 (  0.58)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.36 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.55it/s]
Test: [  0/  1]	Loss 0.730 (0.730)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.63 (  0.63)	Loss_d 0.730 (0.730)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.08 (  0.08)
Test: [  1/  1]	Loss 0.730 (0.730)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.63 (  0.63)	Loss_d 0.730 (0.730)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.08 (  0.08)
Overall Timing[ 10/  1]	epoch_time 0.0387 (0.0440)	validation_time 0.0004 (0.0010)	train_time 0.0382 (0.0411)
record: (train_acc, test_acc) (0.6320000087618828, 0.581000030040741)
last accs (train_acc, test_acc) (0.619700003862381, 0.5430000424385071)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.30it/s] 19%|#9        | 5/26 [00:00<00:01, 19.33it/s] 35%|###4      | 9/26 [00:00<00:00, 24.47it/s] 50%|#####     | 13/26 [00:00<00:00, 27.40it/s] 65%|######5   | 17/26 [00:00<00:00, 29.08it/s] 81%|########  | 21/26 [00:00<00:00, 30.33it/s] 96%|#########6| 25/26 [00:00<00:00, 30.25it/s]100%|##########| 26/26 [00:01<00:00, 25.67it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 286 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 287 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 288 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 289 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 290 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 291 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 292 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 293 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 294 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 295 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 296 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 297 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 298 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 299 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 300 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 301 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 302 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 303 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 304 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 305 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 306 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 307 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 308 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 309 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 310 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 311 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [11][  26/  26]	Loss 0.002 (0.002)	train_nll   0.66 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.59 (  0.62)	train_minacc   0.58 (  0.61)	train_majacc   0.59 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.63it/s] 27%|##6       | 7/26 [00:00<00:00, 34.04it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.04it/s] 50%|#####     | 13/26 [00:00<00:00, 41.13it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.97it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.97it/s] 96%|#########6| 25/26 [00:00<00:00, 47.77it/s]100%|##########| 26/26 [00:00<00:00, 39.44it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.58 (  0.58)	test_minacc   0.71 (  0.71)	test_majacc   0.56 (  0.56)	Loss_d 0.655 (0.655)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.23 (  0.23)
Test: [  10/  26]	Loss 0.668 (0.638)	test_acc   0.55 (  0.59)	test_minacc   0.63 (  0.67)	test_majacc   0.54 (  0.58)	Loss_d 0.668 (0.638)	test_acc_d   0.55 (  0.59)	test_minacc_d   0.63 (  0.67)	test_majacc_d   0.54 (  0.58)	test_corr_d   0.20 (  0.26)
Test: [  20/  26]	Loss 0.635 (0.639)	test_acc   0.62 (  0.59)	test_minacc   0.58 (  0.65)	test_majacc   0.62 (  0.58)	Loss_d 0.635 (0.639)	test_acc_d   0.62 (  0.59)	test_minacc_d   0.58 (  0.65)	test_majacc_d   0.62 (  0.58)	test_corr_d   0.29 (  0.26)
Test: [  26/  26]	Loss 0.655 (0.640)	test_acc   0.60 (  0.59)	test_minacc   0.61 (  0.64)	test_majacc   0.60 (  0.59)	Loss_d 0.655 (0.640)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.61 (  0.64)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.28 (  0.26)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.63it/s]
Test: [  0/  1]	Loss 0.703 (0.703)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.54 (  0.54)	Loss_d 0.703 (0.703)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.07 ( -0.07)
Test: [  1/  1]	Loss 0.703 (0.703)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.54 (  0.54)	Loss_d 0.703 (0.703)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.07 ( -0.07)
Overall Timing[ 11/  1]	epoch_time 0.0377 (0.0435)	validation_time 0.0004 (0.0010)	train_time 0.0372 (0.0407)
record: (train_acc, test_acc) (0.6320000087618828, 0.581000030040741)
last accs (train_acc, test_acc) (0.5936000139713288, 0.5600000023841858)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.08it/s] 19%|#9        | 5/26 [00:00<00:00, 23.16it/s] 35%|###4      | 9/26 [00:00<00:00, 27.05it/s] 50%|#####     | 13/26 [00:00<00:00, 28.66it/s] 65%|######5   | 17/26 [00:00<00:00, 29.65it/s] 81%|########  | 21/26 [00:00<00:00, 30.74it/s] 96%|#########6| 25/26 [00:00<00:00, 30.92it/s]100%|##########| 26/26 [00:00<00:00, 27.31it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 312 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 313 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 314 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 315 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 316 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 317 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 318 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 319 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 320 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 321 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 322 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 323 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 324 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 325 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 326 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 327 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 328 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 329 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 330 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 331 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 332 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 333 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 334 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 335 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 336 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 337 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [12][  26/  26]	Loss 0.001 (0.002)	train_nll   0.59 (  0.62)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.65 (  0.62)	train_minacc   0.50 (  0.63)	train_majacc   0.67 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.08it/s] 27%|##6       | 7/26 [00:00<00:00, 32.32it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.32it/s] 50%|#####     | 13/26 [00:00<00:00, 39.60it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.10it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.10it/s] 96%|#########6| 25/26 [00:00<00:00, 47.08it/s]100%|##########| 26/26 [00:00<00:00, 38.75it/s]
Test: [   0/  26]	Loss 0.597 (0.597)	test_acc   0.67 (  0.67)	test_minacc   0.65 (  0.65)	test_majacc   0.68 (  0.68)	Loss_d 0.597 (0.597)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.603 (0.598)	test_acc   0.66 (  0.66)	test_minacc   0.69 (  0.56)	test_majacc   0.66 (  0.68)	Loss_d 0.603 (0.598)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.69 (  0.56)	test_majacc_d   0.66 (  0.68)	test_corr_d   0.33 (  0.38)
Test: [  20/  26]	Loss 0.579 (0.594)	test_acc   0.66 (  0.66)	test_minacc   0.55 (  0.57)	test_majacc   0.68 (  0.68)	Loss_d 0.579 (0.594)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.55 (  0.57)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.39 (  0.38)
Test: [  26/  26]	Loss 0.594 (0.596)	test_acc   0.65 (  0.66)	test_minacc   0.53 (  0.57)	test_majacc   0.67 (  0.68)	Loss_d 0.594 (0.596)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.53 (  0.57)	test_majacc_d   0.67 (  0.68)	test_corr_d   0.41 (  0.38)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.82it/s]
Test: [  0/  1]	Loss 0.785 (0.785)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.64 (  0.64)	Loss_d 0.785 (0.785)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.01 (  0.01)
Test: [  1/  1]	Loss 0.785 (0.785)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.64 (  0.64)	Loss_d 0.785 (0.785)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.01 (  0.01)
Overall Timing[ 12/  1]	epoch_time 0.0386 (0.0431)	validation_time 0.0004 (0.0009)	train_time 0.0381 (0.0405)
record: (train_acc, test_acc) (0.6320000087618828, 0.581000030040741)
last accs (train_acc, test_acc) (0.6613000245690346, 0.5350000262260437)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:07,  3.46it/s] 19%|#9        | 5/26 [00:00<00:01, 14.03it/s] 35%|###4      | 9/26 [00:00<00:00, 20.39it/s] 50%|#####     | 13/26 [00:00<00:00, 24.46it/s] 65%|######5   | 17/26 [00:00<00:00, 27.07it/s] 81%|########  | 21/26 [00:00<00:00, 28.71it/s] 96%|#########6| 25/26 [00:01<00:00, 29.93it/s]100%|##########| 26/26 [00:01<00:00, 22.98it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 338 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 339 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 340 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 341 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 342 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 343 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 344 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 345 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 346 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 347 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 348 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 349 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 350 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 351 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 352 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 353 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 354 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 355 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 356 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 357 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 358 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 359 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 360 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 361 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 362 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 363 13
penalty weights 10000.0
constrain score by whole: 0
Epoch: [13][  26/  26]	Loss 0.003 (0.002)	train_nll   0.62 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.80)	train_acc   0.64 (  0.61)	train_minacc   0.69 (  0.63)	train_majacc   0.64 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.03it/s] 27%|##6       | 7/26 [00:00<00:00, 32.28it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.28it/s] 50%|#####     | 13/26 [00:00<00:00, 40.45it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.92it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.92it/s] 96%|#########6| 25/26 [00:00<00:00, 46.95it/s]100%|##########| 26/26 [00:00<00:00, 38.59it/s]
Test: [   0/  26]	Loss 0.647 (0.647)	test_acc   0.58 (  0.58)	test_minacc   0.60 (  0.60)	test_majacc   0.58 (  0.58)	Loss_d 0.647 (0.647)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.650 (0.651)	test_acc   0.58 (  0.59)	test_minacc   0.61 (  0.61)	test_majacc   0.57 (  0.58)	Loss_d 0.650 (0.651)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.57 (  0.58)	test_corr_d   0.25 (  0.23)
Test: [  20/  26]	Loss 0.655 (0.650)	test_acc   0.57 (  0.59)	test_minacc   0.54 (  0.59)	test_majacc   0.58 (  0.59)	Loss_d 0.655 (0.650)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.54 (  0.59)	test_majacc_d   0.58 (  0.59)	test_corr_d   0.24 (  0.24)
Test: [  26/  26]	Loss 0.624 (0.649)	test_acc   0.65 (  0.59)	test_minacc   0.69 (  0.60)	test_majacc   0.64 (  0.59)	Loss_d 0.624 (0.649)	test_acc_d   0.65 (  0.59)	test_minacc_d   0.69 (  0.60)	test_majacc_d   0.64 (  0.59)	test_corr_d   0.28 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.22it/s]
Test: [  0/  1]	Loss 0.693 (0.693)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.58 (  0.58)	Loss_d 0.693 (0.693)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.10 ( -0.10)
Test: [  1/  1]	Loss 0.693 (0.693)	test_acc   0.56 (  0.56)	test_minacc   0.56 (  0.56)	test_majacc   0.58 (  0.58)	Loss_d 0.693 (0.693)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.10 ( -0.10)
Overall Timing[ 13/  1]	epoch_time 0.0385 (0.0428)	validation_time 0.0004 (0.0009)	train_time 0.0381 (0.0404)
record: (train_acc, test_acc) (0.6320000087618828, 0.581000030040741)
last accs (train_acc, test_acc) (0.5895000065565109, 0.5649999976158142)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  1.0
  0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:01, 20.60it/s] 23%|##3       | 6/26 [00:00<00:00, 24.09it/s] 35%|###4      | 9/26 [00:00<00:00, 25.48it/s] 46%|####6     | 12/26 [00:00<00:00, 26.34it/s] 58%|#####7    | 15/26 [00:00<00:00, 26.76it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.99it/s] 88%|########8 | 23/26 [00:00<00:00, 28.71it/s]100%|##########| 26/26 [00:00<00:00, 28.79it/s]100%|##########| 26/26 [00:01<00:00, 25.54it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 364 13
penalty weights 10000.0
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 365 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 365 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 366 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 366 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 367 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 367 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 368 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 368 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 369 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 369 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 370 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 370 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 371 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 371 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 372 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 372 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 373 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 373 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 374 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 374 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 375 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 375 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 376 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 376 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 377 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 377 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 378 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 378 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 379 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 379 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 380 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 380 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 381 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 381 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 382 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 382 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 383 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 383 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 384 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 384 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 385 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 385 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 386 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 386 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 387 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 387 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 388 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 388 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 389 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 389 364.00000000000006
constrain score by whole: 0
Epoch: [14][  26/  26]	Loss 0.001 (0.001)	train_nll   0.62 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.60 (  0.60)	train_minacc   0.56 (  0.60)	train_majacc   0.61 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.99it/s] 27%|##6       | 7/26 [00:00<00:00, 37.00it/s]                                               27%|##6       | 7/26 [00:00<00:00, 37.00it/s] 50%|#####     | 13/26 [00:00<00:00, 42.43it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.29it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.29it/s] 96%|#########6| 25/26 [00:00<00:00, 48.17it/s]100%|##########| 26/26 [00:00<00:00, 40.17it/s]
Test: [   0/  26]	Loss 0.612 (0.612)	test_acc   0.63 (  0.63)	test_minacc   0.69 (  0.69)	test_majacc   0.62 (  0.62)	Loss_d 0.612 (0.612)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.599 (0.617)	test_acc   0.68 (  0.62)	test_minacc   0.72 (  0.64)	test_majacc   0.67 (  0.62)	Loss_d 0.599 (0.617)	test_acc_d   0.68 (  0.62)	test_minacc_d   0.72 (  0.64)	test_majacc_d   0.67 (  0.62)	test_corr_d   0.32 (  0.31)
Test: [  20/  26]	Loss 0.612 (0.616)	test_acc   0.62 (  0.62)	test_minacc   0.62 (  0.62)	test_majacc   0.62 (  0.62)	Loss_d 0.612 (0.616)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.33 (  0.31)
Test: [  26/  26]	Loss 0.608 (0.615)	test_acc   0.64 (  0.62)	test_minacc   0.67 (  0.62)	test_majacc   0.64 (  0.62)	Loss_d 0.608 (0.615)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.67 (  0.62)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.35 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.97it/s]
Test: [  0/  1]	Loss 0.718 (0.718)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.718 (0.718)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.05 ( -0.05)
Test: [  1/  1]	Loss 0.718 (0.718)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.59 (  0.59)	Loss_d 0.718 (0.718)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.05 ( -0.05)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/29/checkpoints/model_best.pth
Overall Timing[ 14/  1]	epoch_time 0.0412 (0.0427)	validation_time 0.0004 (0.0009)	train_time 0.0407 (0.0404)
record: (train_acc, test_acc) (0.6211000094413758, 0.5840000510215759)
last accs (train_acc, test_acc) (0.6211000094413758, 0.5840000510215759)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.99119873046875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.44it/s] 12%|#1        | 3/26 [00:00<00:01, 12.01it/s] 23%|##3       | 6/26 [00:00<00:01, 18.64it/s] 35%|###4      | 9/26 [00:00<00:00, 22.02it/s] 46%|####6     | 12/26 [00:00<00:00, 24.26it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.97it/s] 69%|######9   | 18/26 [00:00<00:00, 26.68it/s] 81%|########  | 21/26 [00:00<00:00, 27.40it/s] 92%|#########2| 24/26 [00:01<00:00, 27.90it/s]100%|##########| 26/26 [00:01<00:00, 22.94it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 390 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 390 364.00000000000006
constrain score by whole: tensor(0.0068, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 391 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 391 364.00000000000006
constrain score by whole: tensor(2.8174e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 392 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 392 364.00000000000006
constrain score by whole: tensor(2.1561e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 393 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 393 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 394 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 394 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 395 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 395 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 396 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 396 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 397 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 397 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 398 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 398 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 399 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 399 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 400 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 400 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 401 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 401 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 402 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 402 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 403 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 403 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 404 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 404 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 405 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 405 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 406 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 406 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 407 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 407 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 408 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 408 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 409 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 409 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 410 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 410 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 411 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 411 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 412 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 412 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 413 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 413 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 414 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 414 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 415 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 415 364.00000000000006
constrain score by whole: 0
Epoch: [15][  26/  26]	Loss 0.007 (0.006)	train_nll   0.58 (  0.63)	train_penalty   0.01 (  0.00)	weight_norm   7.80 (  7.79)	train_acc   0.70 (  0.62)	train_minacc   0.31 (  0.48)	train_majacc   0.77 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.02it/s] 27%|##6       | 7/26 [00:00<00:00, 35.89it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.89it/s] 50%|#####     | 13/26 [00:00<00:00, 41.34it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.74it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.74it/s] 96%|#########6| 25/26 [00:00<00:00, 46.62it/s]100%|##########| 26/26 [00:00<00:00, 39.44it/s]
Test: [   0/  26]	Loss 0.608 (0.608)	test_acc   0.67 (  0.67)	test_minacc   0.38 (  0.38)	test_majacc   0.72 (  0.72)	Loss_d 0.608 (0.608)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.38 (  0.38)	test_majacc_d   0.72 (  0.72)	test_corr_d   0.49 (  0.49)
Test: [  10/  26]	Loss 0.598 (0.624)	test_acc   0.68 (  0.67)	test_minacc   0.54 (  0.44)	test_majacc   0.70 (  0.70)	Loss_d 0.598 (0.624)	test_acc_d   0.68 (  0.67)	test_minacc_d   0.54 (  0.44)	test_majacc_d   0.70 (  0.70)	test_corr_d   0.41 (  0.46)
Test: [  20/  26]	Loss 0.583 (0.617)	test_acc   0.69 (  0.67)	test_minacc   0.38 (  0.46)	test_majacc   0.75 (  0.71)	Loss_d 0.583 (0.617)	test_acc_d   0.69 (  0.67)	test_minacc_d   0.38 (  0.46)	test_majacc_d   0.75 (  0.71)	test_corr_d   0.49 (  0.47)
Test: [  26/  26]	Loss 0.645 (0.619)	test_acc   0.63 (  0.67)	test_minacc   0.39 (  0.45)	test_majacc   0.67 (  0.71)	Loss_d 0.645 (0.619)	test_acc_d   0.63 (  0.67)	test_minacc_d   0.39 (  0.45)	test_majacc_d   0.67 (  0.71)	test_corr_d   0.46 (  0.47)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.86it/s]
Test: [  0/  1]	Loss 0.846 (0.846)	test_acc   0.44 (  0.44)	test_minacc   0.41 (  0.41)	test_majacc   0.74 (  0.74)	Loss_d 0.846 (0.846)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Test: [  1/  1]	Loss 0.846 (0.846)	test_acc   0.44 (  0.44)	test_minacc   0.41 (  0.41)	test_majacc   0.74 (  0.74)	Loss_d 0.846 (0.846)	test_acc_d   0.44 (  0.44)	test_minacc_d   0.41 (  0.41)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.21 (  0.21)
Overall Timing[ 15/  1]	epoch_time 0.0407 (0.0426)	validation_time 0.0004 (0.0008)	train_time 0.0403 (0.0404)
record: (train_acc, test_acc) (0.6211000094413758, 0.5840000510215759)
last accs (train_acc, test_acc) (0.6689000280499459, 0.4410000145435333)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.98349609375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.61it/s] 15%|#5        | 4/26 [00:00<00:01, 16.99it/s] 27%|##6       | 7/26 [00:00<00:00, 21.86it/s] 38%|###8      | 10/26 [00:00<00:00, 24.76it/s] 50%|#####     | 13/26 [00:00<00:00, 25.69it/s] 65%|######5   | 17/26 [00:00<00:00, 27.01it/s] 81%|########  | 21/26 [00:00<00:00, 28.23it/s] 96%|#########6| 25/26 [00:00<00:00, 28.76it/s]100%|##########| 26/26 [00:01<00:00, 24.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 416 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 416 364.00000000000006
constrain score by whole: tensor(0.0048, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 417 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 417 364.00000000000006
constrain score by whole: tensor(4.8458e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 418 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 418 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 419 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 419 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 420 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 420 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 421 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 421 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 422 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 422 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 423 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 423 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 424 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 424 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 425 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 425 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 426 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 426 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 427 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 427 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 428 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 428 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 429 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 429 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 430 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 430 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 431 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 431 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 432 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 432 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 433 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 433 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 434 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 434 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 435 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 435 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 436 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 436 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 437 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 437 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 438 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 438 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 439 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 439 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 440 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 440 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 441 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 441 364.00000000000006
constrain score by whole: 0
Epoch: [16][  26/  26]	Loss 0.002 (0.006)	train_nll   0.65 (  0.60)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.61 (  0.66)	train_minacc   0.67 (  0.53)	train_majacc   0.60 (  0.68)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.56it/s] 27%|##6       | 7/26 [00:00<00:00, 31.93it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.93it/s] 50%|#####     | 13/26 [00:00<00:00, 39.74it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.02it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.02it/s] 96%|#########6| 25/26 [00:00<00:00, 46.14it/s]100%|##########| 26/26 [00:00<00:00, 37.96it/s]
Test: [   0/  26]	Loss 0.599 (0.599)	test_acc   0.67 (  0.67)	test_minacc   0.67 (  0.67)	test_majacc   0.67 (  0.67)	Loss_d 0.599 (0.599)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.38 (  0.38)
Test: [  10/  26]	Loss 0.604 (0.613)	test_acc   0.68 (  0.66)	test_minacc   0.65 (  0.60)	test_majacc   0.69 (  0.67)	Loss_d 0.604 (0.613)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.65 (  0.60)	test_majacc_d   0.69 (  0.67)	test_corr_d   0.36 (  0.36)
Test: [  20/  26]	Loss 0.596 (0.610)	test_acc   0.68 (  0.66)	test_minacc   0.58 (  0.60)	test_majacc   0.70 (  0.68)	Loss_d 0.596 (0.610)	test_acc_d   0.68 (  0.66)	test_minacc_d   0.58 (  0.60)	test_majacc_d   0.70 (  0.68)	test_corr_d   0.39 (  0.36)
Test: [  26/  26]	Loss 0.603 (0.612)	test_acc   0.65 (  0.66)	test_minacc   0.75 (  0.60)	test_majacc   0.64 (  0.67)	Loss_d 0.603 (0.612)	test_acc_d   0.65 (  0.66)	test_minacc_d   0.75 (  0.60)	test_majacc_d   0.64 (  0.67)	test_corr_d   0.35 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.27it/s]
Test: [  0/  1]	Loss 0.771 (0.771)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.67 (  0.67)	Loss_d 0.771 (0.771)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.771 (0.771)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.67 (  0.67)	Loss_d 0.771 (0.771)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.67 (  0.67)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 16/  1]	epoch_time 0.0406 (0.0424)	validation_time 0.0005 (0.0008)	train_time 0.0401 (0.0404)
record: (train_acc, test_acc) (0.6211000094413758, 0.5840000510215759)
last accs (train_acc, test_acc) (0.6608000257611275, 0.578000009059906)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9768188476562499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.96it/s] 15%|#5        | 4/26 [00:00<00:01, 16.48it/s] 31%|###       | 8/26 [00:00<00:00, 22.99it/s] 46%|####6     | 12/26 [00:00<00:00, 26.15it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.10it/s] 85%|########4 | 22/26 [00:00<00:00, 28.47it/s] 96%|#########6| 25/26 [00:00<00:00, 28.46it/s]100%|##########| 26/26 [00:01<00:00, 24.48it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 442 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 442 364.00000000000006
constrain score by whole: tensor(0.0038, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 443 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 443 364.00000000000006
constrain score by whole: tensor(1.3916e-05, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 444 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 444 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 445 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 445 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 446 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 446 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 447 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 447 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 448 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 448 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 449 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 449 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 450 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 450 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 451 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 451 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 452 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 452 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 453 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 453 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 454 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 454 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 455 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 455 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 456 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 456 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 457 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 457 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 458 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 458 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 459 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 459 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 460 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 460 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 461 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 461 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 462 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 462 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 463 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 463 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 464 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 464 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 465 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 465 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 466 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 466 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 467 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 467 364.00000000000006
constrain score by whole: 0
Epoch: [17][  26/  26]	Loss 0.001 (0.002)	train_nll   0.64 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.62 (  0.63)	train_minacc   0.75 (  0.61)	train_majacc   0.60 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.91it/s] 31%|###       | 8/26 [00:00<00:00, 40.61it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.61it/s] 50%|#####     | 13/26 [00:00<00:00, 40.82it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.56it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.56it/s] 96%|#########6| 25/26 [00:00<00:00, 46.54it/s]100%|##########| 26/26 [00:00<00:00, 40.44it/s]
Test: [   0/  26]	Loss 0.615 (0.615)	test_acc   0.62 (  0.62)	test_minacc   0.60 (  0.60)	test_majacc   0.62 (  0.62)	Loss_d 0.615 (0.615)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.606 (0.615)	test_acc   0.65 (  0.63)	test_minacc   0.61 (  0.61)	test_majacc   0.65 (  0.63)	Loss_d 0.606 (0.615)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.65 (  0.63)	test_corr_d   0.37 (  0.36)
Test: [  20/  26]	Loss 0.617 (0.615)	test_acc   0.60 (  0.63)	test_minacc   0.58 (  0.61)	test_majacc   0.60 (  0.63)	Loss_d 0.617 (0.615)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.58 (  0.61)	test_majacc_d   0.60 (  0.63)	test_corr_d   0.35 (  0.36)
Test: [  26/  26]	Loss 0.601 (0.614)	test_acc   0.64 (  0.63)	test_minacc   0.69 (  0.61)	test_majacc   0.63 (  0.63)	Loss_d 0.601 (0.614)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.69 (  0.61)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.36 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.81it/s]
Test: [  0/  1]	Loss 0.758 (0.758)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.51 (  0.51)	Loss_d 0.758 (0.758)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.00 ( -0.00)
Test: [  1/  1]	Loss 0.758 (0.758)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.51 (  0.51)	Loss_d 0.758 (0.758)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.00 ( -0.00)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/29/checkpoints/model_best.pth
Overall Timing[ 17/  1]	epoch_time 0.0400 (0.0423)	validation_time 0.0005 (0.0008)	train_time 0.0395 (0.0403)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.97109375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:06,  4.00it/s] 15%|#5        | 4/26 [00:00<00:01, 13.35it/s] 27%|##6       | 7/26 [00:00<00:01, 18.93it/s] 42%|####2     | 11/26 [00:00<00:00, 23.23it/s] 58%|#####7    | 15/26 [00:00<00:00, 25.98it/s] 69%|######9   | 18/26 [00:00<00:00, 27.08it/s] 85%|########4 | 22/26 [00:00<00:00, 28.33it/s]100%|##########| 26/26 [00:01<00:00, 29.33it/s]100%|##########| 26/26 [00:01<00:00, 22.42it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 468 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 468 364.00000000000006
constrain score by whole: tensor(0.0043, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 469 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 469 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 470 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 470 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 471 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 471 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 472 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 472 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 473 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 473 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 474 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 474 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 475 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 475 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 476 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 476 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 477 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 477 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 478 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 478 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 479 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 479 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 480 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 480 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 481 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 481 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 482 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 482 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 483 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 483 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 484 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 484 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 485 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 485 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 486 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 486 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 487 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 487 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 488 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 488 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 489 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 489 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 490 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 490 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 491 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 491 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 492 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 492 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 493 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 493 364.00000000000006
constrain score by whole: 0
Epoch: [18][  26/  26]	Loss 0.006 (0.007)	train_nll   0.56 (  0.64)	train_penalty   0.00 (  0.01)	weight_norm   7.80 (  7.80)	train_acc   0.68 (  0.61)	train_minacc   0.39 (  0.52)	train_majacc   0.73 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.21it/s] 31%|###       | 8/26 [00:00<00:00, 42.06it/s]                                               31%|###       | 8/26 [00:00<00:00, 42.06it/s] 50%|#####     | 13/26 [00:00<00:00, 43.22it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.79it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.79it/s] 96%|#########6| 25/26 [00:00<00:00, 48.32it/s]100%|##########| 26/26 [00:00<00:00, 41.83it/s]
Test: [   0/  26]	Loss 0.548 (0.548)	test_acc   0.71 (  0.71)	test_minacc   0.54 (  0.54)	test_majacc   0.74 (  0.74)	Loss_d 0.548 (0.548)	test_acc_d   0.71 (  0.71)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.74 (  0.74)	test_corr_d   0.54 (  0.54)
Test: [  10/  26]	Loss 0.529 (0.535)	test_acc   0.71 (  0.72)	test_minacc   0.52 (  0.49)	test_majacc   0.74 (  0.75)	Loss_d 0.529 (0.535)	test_acc_d   0.71 (  0.72)	test_minacc_d   0.52 (  0.49)	test_majacc_d   0.74 (  0.75)	test_corr_d   0.53 (  0.55)
Test: [  20/  26]	Loss 0.541 (0.534)	test_acc   0.74 (  0.72)	test_minacc   0.55 (  0.50)	test_majacc   0.78 (  0.76)	Loss_d 0.541 (0.534)	test_acc_d   0.74 (  0.72)	test_minacc_d   0.55 (  0.50)	test_majacc_d   0.78 (  0.76)	test_corr_d   0.56 (  0.54)
Test: [  26/  26]	Loss 0.543 (0.536)	test_acc   0.70 (  0.72)	test_minacc   0.47 (  0.49)	test_majacc   0.73 (  0.76)	Loss_d 0.543 (0.536)	test_acc_d   0.70 (  0.72)	test_minacc_d   0.47 (  0.49)	test_majacc_d   0.73 (  0.76)	test_corr_d   0.54 (  0.55)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.71it/s]
Test: [  0/  1]	Loss 1.010 (1.010)	test_acc   0.49 (  0.49)	test_minacc   0.46 (  0.46)	test_majacc   0.75 (  0.75)	Loss_d 1.010 (1.010)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.25 (  0.25)
Test: [  1/  1]	Loss 1.010 (1.010)	test_acc   0.49 (  0.49)	test_minacc   0.46 (  0.46)	test_majacc   0.75 (  0.75)	Loss_d 1.010 (1.010)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.75 (  0.75)	test_corr_d   0.25 (  0.25)
Overall Timing[ 18/  1]	epoch_time 0.0390 (0.0421)	validation_time 0.0004 (0.0008)	train_time 0.0385 (0.0402)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.7152000291347503, 0.48500001430511475)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96624755859375
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.63it/s] 15%|#5        | 4/26 [00:00<00:01, 18.36it/s] 27%|##6       | 7/26 [00:00<00:00, 21.70it/s] 42%|####2     | 11/26 [00:00<00:00, 25.04it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.56it/s] 65%|######5   | 17/26 [00:00<00:00, 27.38it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.53it/s] 88%|########8 | 23/26 [00:00<00:00, 27.99it/s]100%|##########| 26/26 [00:01<00:00, 24.33it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 494 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 494 364.00000000000006
constrain score by whole: tensor(0.0032, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 495 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 495 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 496 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 496 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 497 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 497 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 498 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 498 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 499 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 499 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 500 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 500 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 501 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 501 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 502 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 502 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 503 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 503 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 504 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 504 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 505 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 505 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 506 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 506 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 507 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 507 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 508 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 508 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 509 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 509 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 510 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 510 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 511 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 511 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 512 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 512 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 513 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 513 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 514 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 514 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 515 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 515 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 516 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 516 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 517 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 517 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 518 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 518 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 519 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 519 364.00000000000006
constrain score by whole: 0
Epoch: [19][  26/  26]	Loss 0.052 (0.020)	train_nll   0.82 (  0.59)	train_penalty   0.05 (  0.02)	weight_norm   7.81 (  7.80)	train_acc   0.48 (  0.70)	train_minacc   0.44 (  0.37)	train_majacc   0.48 (  0.75)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.72it/s] 27%|##6       | 7/26 [00:00<00:00, 32.44it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.44it/s] 50%|#####     | 13/26 [00:00<00:00, 39.51it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.71it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.71it/s] 96%|#########6| 25/26 [00:00<00:00, 46.42it/s]100%|##########| 26/26 [00:00<00:00, 38.06it/s]
Test: [   0/  26]	Loss 0.537 (0.537)	test_acc   0.72 (  0.72)	test_minacc   0.37 (  0.37)	test_majacc   0.78 (  0.78)	Loss_d 0.537 (0.537)	test_acc_d   0.72 (  0.72)	test_minacc_d   0.37 (  0.37)	test_majacc_d   0.78 (  0.78)	test_corr_d   0.65 (  0.65)
Test: [  10/  26]	Loss 0.522 (0.542)	test_acc   0.73 (  0.72)	test_minacc   0.50 (  0.36)	test_majacc   0.76 (  0.78)	Loss_d 0.522 (0.542)	test_acc_d   0.73 (  0.72)	test_minacc_d   0.50 (  0.36)	test_majacc_d   0.76 (  0.78)	test_corr_d   0.62 (  0.66)
Test: [  20/  26]	Loss 0.522 (0.539)	test_acc   0.75 (  0.73)	test_minacc   0.38 (  0.37)	test_majacc   0.82 (  0.79)	Loss_d 0.522 (0.539)	test_acc_d   0.75 (  0.73)	test_minacc_d   0.38 (  0.37)	test_majacc_d   0.82 (  0.79)	test_corr_d   0.68 (  0.67)
Test: [  26/  26]	Loss 0.561 (0.541)	test_acc   0.72 (  0.73)	test_minacc   0.28 (  0.36)	test_majacc   0.79 (  0.79)	Loss_d 0.561 (0.541)	test_acc_d   0.72 (  0.73)	test_minacc_d   0.28 (  0.36)	test_majacc_d   0.79 (  0.79)	test_corr_d   0.67 (  0.67)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.12it/s]
Test: [  0/  1]	Loss 0.996 (0.996)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.82 (  0.82)	Loss_d 0.996 (0.996)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.51 (  0.51)
Test: [  1/  1]	Loss 0.996 (0.996)	test_acc   0.39 (  0.39)	test_minacc   0.34 (  0.34)	test_majacc   0.82 (  0.82)	Loss_d 0.996 (0.996)	test_acc_d   0.39 (  0.39)	test_minacc_d   0.34 (  0.34)	test_majacc_d   0.82 (  0.82)	test_corr_d   0.51 (  0.51)
Overall Timing[ 19/  1]	epoch_time 0.0397 (0.0420)	validation_time 0.0004 (0.0008)	train_time 0.0392 (0.0402)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.7252000339031219, 0.3880000114440918)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.96220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.17it/s] 15%|#5        | 4/26 [00:00<00:01, 17.60it/s] 27%|##6       | 7/26 [00:00<00:00, 21.51it/s] 42%|####2     | 11/26 [00:00<00:00, 25.24it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.23it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.25it/s] 88%|########8 | 23/26 [00:00<00:00, 28.97it/s]100%|##########| 26/26 [00:00<00:00, 29.10it/s]100%|##########| 26/26 [00:01<00:00, 24.52it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 520 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 520 364.00000000000006
constrain score by whole: tensor(0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 521 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 521 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 522 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 522 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 523 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 523 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 524 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 524 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 525 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 525 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 526 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 526 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 527 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 527 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 528 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 528 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 529 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 529 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 530 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 530 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 531 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 531 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 532 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 532 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 533 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 533 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 534 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 534 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 535 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 535 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 536 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 536 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 537 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 537 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 538 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 538 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 539 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 539 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 540 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 540 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 541 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 541 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 542 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 542 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 543 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 543 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 544 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 544 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 545 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 545 364.00000000000006
constrain score by whole: 0
Epoch: [20][  26/  26]	Loss 0.001 (0.005)	train_nll   0.65 (  0.63)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.59 (  0.63)	train_minacc   0.47 (  0.51)	train_majacc   0.61 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.29it/s] 27%|##6       | 7/26 [00:00<00:00, 31.27it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.27it/s] 46%|####6     | 12/26 [00:00<00:00, 37.50it/s] 69%|######9   | 18/26 [00:00<00:00, 43.55it/s]                                                69%|######9   | 18/26 [00:00<00:00, 43.55it/s] 92%|#########2| 24/26 [00:00<00:00, 45.79it/s]100%|##########| 26/26 [00:00<00:00, 37.65it/s]
Test: [   0/  26]	Loss 0.654 (0.654)	test_acc   0.61 (  0.61)	test_minacc   0.35 (  0.35)	test_majacc   0.65 (  0.65)	Loss_d 0.654 (0.654)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.35 (  0.35)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.51 (  0.51)
Test: [  10/  26]	Loss 0.632 (0.663)	test_acc   0.63 (  0.59)	test_minacc   0.56 (  0.47)	test_majacc   0.64 (  0.61)	Loss_d 0.632 (0.663)	test_acc_d   0.63 (  0.59)	test_minacc_d   0.56 (  0.47)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.49 (  0.52)
Test: [  20/  26]	Loss 0.630 (0.658)	test_acc   0.60 (  0.59)	test_minacc   0.38 (  0.47)	test_majacc   0.64 (  0.61)	Loss_d 0.630 (0.658)	test_acc_d   0.60 (  0.59)	test_minacc_d   0.38 (  0.47)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.56 (  0.52)
Test: [  26/  26]	Loss 0.690 (0.660)	test_acc   0.58 (  0.59)	test_minacc   0.42 (  0.47)	test_majacc   0.60 (  0.62)	Loss_d 0.690 (0.660)	test_acc_d   0.58 (  0.59)	test_minacc_d   0.42 (  0.47)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.54 (  0.53)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.02it/s]
Test: [  0/  1]	Loss 0.864 (0.864)	test_acc   0.45 (  0.45)	test_minacc   0.44 (  0.44)	test_majacc   0.60 (  0.60)	Loss_d 0.864 (0.864)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.24 (  0.24)
Test: [  1/  1]	Loss 0.864 (0.864)	test_acc   0.45 (  0.45)	test_minacc   0.44 (  0.44)	test_majacc   0.60 (  0.60)	Loss_d 0.864 (0.864)	test_acc_d   0.45 (  0.45)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.24 (  0.24)
Overall Timing[ 20/  1]	epoch_time 0.0406 (0.0419)	validation_time 0.0005 (0.0007)	train_time 0.0399 (0.0402)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.5938000105023384, 0.4520000219345093)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9588989257812499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.75it/s] 15%|#5        | 4/26 [00:00<00:01, 16.21it/s] 27%|##6       | 7/26 [00:00<00:00, 21.23it/s] 38%|###8      | 10/26 [00:00<00:00, 24.26it/s] 50%|#####     | 13/26 [00:00<00:00, 25.84it/s] 65%|######5   | 17/26 [00:00<00:00, 27.54it/s] 81%|########  | 21/26 [00:00<00:00, 28.74it/s] 96%|#########6| 25/26 [00:00<00:00, 29.68it/s]100%|##########| 26/26 [00:01<00:00, 24.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 546 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 546 364.00000000000006
constrain score by whole: tensor(0.0018, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 547 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 547 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 548 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 548 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 549 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 549 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 550 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 550 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 551 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 551 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 552 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 552 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 553 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 553 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 554 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 554 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 555 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 555 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 556 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 556 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 557 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 557 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 558 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 558 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 559 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 559 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 560 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 560 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 561 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 561 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 562 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 562 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 563 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 563 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 564 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 564 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 565 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 565 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 566 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 566 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 567 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 567 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 568 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 568 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 569 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 569 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 570 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 570 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 571 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 571 364.00000000000006
constrain score by whole: 0
Epoch: [21][  26/  26]	Loss 0.003 (0.002)	train_nll   0.64 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.66 (  0.57)	train_minacc   0.56 (  0.46)	train_majacc   0.68 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.56it/s] 27%|##6       | 7/26 [00:00<00:00, 31.35it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.35it/s] 46%|####6     | 12/26 [00:00<00:00, 38.25it/s] 65%|######5   | 17/26 [00:00<00:00, 40.68it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.68it/s] 85%|########4 | 22/26 [00:00<00:00, 42.84it/s]100%|##########| 26/26 [00:00<00:00, 37.10it/s]
Test: [   0/  26]	Loss 0.623 (0.623)	test_acc   0.67 (  0.67)	test_minacc   0.69 (  0.69)	test_majacc   0.67 (  0.67)	Loss_d 0.623 (0.623)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.42 (  0.42)
Test: [  10/  26]	Loss 0.620 (0.618)	test_acc   0.66 (  0.66)	test_minacc   0.70 (  0.59)	test_majacc   0.65 (  0.68)	Loss_d 0.620 (0.618)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.70 (  0.59)	test_majacc_d   0.65 (  0.68)	test_corr_d   0.40 (  0.45)
Test: [  20/  26]	Loss 0.612 (0.617)	test_acc   0.70 (  0.67)	test_minacc   0.60 (  0.59)	test_majacc   0.72 (  0.68)	Loss_d 0.612 (0.617)	test_acc_d   0.70 (  0.67)	test_minacc_d   0.60 (  0.59)	test_majacc_d   0.72 (  0.68)	test_corr_d   0.48 (  0.45)
Test: [  26/  26]	Loss 0.617 (0.617)	test_acc   0.67 (  0.67)	test_minacc   0.58 (  0.57)	test_majacc   0.69 (  0.68)	Loss_d 0.617 (0.617)	test_acc_d   0.67 (  0.67)	test_minacc_d   0.58 (  0.57)	test_majacc_d   0.69 (  0.68)	test_corr_d   0.46 (  0.45)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.67it/s]
Test: [  0/  1]	Loss 0.728 (0.728)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.68 (  0.68)	Loss_d 0.728 (0.728)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.16 (  0.16)
Test: [  1/  1]	Loss 0.728 (0.728)	test_acc   0.54 (  0.54)	test_minacc   0.52 (  0.52)	test_majacc   0.68 (  0.68)	Loss_d 0.728 (0.728)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.16 (  0.16)
Overall Timing[ 21/  1]	epoch_time 0.0393 (0.0418)	validation_time 0.0004 (0.0007)	train_time 0.0388 (0.0401)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.6673000264167785, 0.5350000262260437)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9562499999999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.50it/s] 15%|#5        | 4/26 [00:00<00:01, 19.35it/s] 27%|##6       | 7/26 [00:00<00:00, 23.38it/s] 38%|###8      | 10/26 [00:00<00:00, 25.62it/s] 50%|#####     | 13/26 [00:00<00:00, 26.78it/s] 62%|######1   | 16/26 [00:00<00:00, 27.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.83it/s] 85%|########4 | 22/26 [00:00<00:00, 28.36it/s] 96%|#########6| 25/26 [00:00<00:00, 28.58it/s]100%|##########| 26/26 [00:01<00:00, 24.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 572 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 572 364.00000000000006
constrain score by whole: tensor(0.0018, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 573 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 573 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 574 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 574 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 575 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 575 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 576 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 576 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 577 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 577 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 578 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 578 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 579 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 579 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 580 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 580 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 581 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 581 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 582 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 582 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 583 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 583 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 584 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 584 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 585 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 585 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 586 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 586 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 587 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 587 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 588 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 588 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 589 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 589 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 590 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 590 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 591 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 591 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 592 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 592 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 593 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 593 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 594 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 594 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 595 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 595 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 596 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 596 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 597 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 597 364.00000000000006
constrain score by whole: 0
Epoch: [22][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.57 (  0.58)	train_minacc   0.58 (  0.63)	train_majacc   0.57 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.61it/s] 23%|##3       | 6/26 [00:00<00:00, 30.77it/s]                                               23%|##3       | 6/26 [00:00<00:00, 30.77it/s] 42%|####2     | 11/26 [00:00<00:00, 38.61it/s] 65%|######5   | 17/26 [00:00<00:00, 43.37it/s]                                                65%|######5   | 17/26 [00:00<00:00, 43.37it/s] 88%|########8 | 23/26 [00:00<00:00, 47.72it/s]100%|##########| 26/26 [00:00<00:00, 38.99it/s]
Test: [   0/  26]	Loss 0.653 (0.653)	test_acc   0.64 (  0.64)	test_minacc   0.71 (  0.71)	test_majacc   0.63 (  0.63)	Loss_d 0.653 (0.653)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.649 (0.634)	test_acc   0.64 (  0.64)	test_minacc   0.69 (  0.60)	test_majacc   0.63 (  0.65)	Loss_d 0.649 (0.634)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.69 (  0.60)	test_majacc_d   0.63 (  0.65)	test_corr_d   0.24 (  0.32)
Test: [  20/  26]	Loss 0.618 (0.634)	test_acc   0.69 (  0.64)	test_minacc   0.63 (  0.60)	test_majacc   0.70 (  0.65)	Loss_d 0.618 (0.634)	test_acc_d   0.69 (  0.64)	test_minacc_d   0.63 (  0.60)	test_majacc_d   0.70 (  0.65)	test_corr_d   0.37 (  0.32)
Test: [  26/  26]	Loss 0.640 (0.634)	test_acc   0.61 (  0.64)	test_minacc   0.56 (  0.59)	test_majacc   0.62 (  0.65)	Loss_d 0.640 (0.634)	test_acc_d   0.61 (  0.64)	test_minacc_d   0.56 (  0.59)	test_majacc_d   0.62 (  0.65)	test_corr_d   0.32 (  0.32)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.15it/s]
Test: [  0/  1]	Loss 0.731 (0.731)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.59 (  0.59)	Loss_d 0.731 (0.731)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.731 (0.731)	test_acc   0.58 (  0.58)	test_minacc   0.57 (  0.57)	test_majacc   0.59 (  0.59)	Loss_d 0.731 (0.731)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 22/  1]	epoch_time 0.0400 (0.0417)	validation_time 0.0004 (0.0007)	train_time 0.0396 (0.0401)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.6377000105977059, 0.5750000476837158)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95418701171875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.81it/s] 15%|#5        | 4/26 [00:00<00:01, 14.54it/s] 27%|##6       | 7/26 [00:00<00:00, 19.77it/s] 38%|###8      | 10/26 [00:00<00:00, 23.05it/s] 50%|#####     | 13/26 [00:00<00:00, 25.05it/s] 62%|######1   | 16/26 [00:00<00:00, 26.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 24.68it/s] 85%|########4 | 22/26 [00:00<00:00, 25.93it/s]100%|##########| 26/26 [00:01<00:00, 27.66it/s]100%|##########| 26/26 [00:01<00:00, 22.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 598 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 598 364.00000000000006
constrain score by whole: tensor(0.0015, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 599 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 599 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 600 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 600 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 601 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 601 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 602 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 602 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 603 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 603 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 604 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 604 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 605 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 605 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 606 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 606 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 607 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 607 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 608 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 608 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 609 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 609 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 610 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 610 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 611 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 611 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 612 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 612 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 613 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 613 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 614 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 614 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 615 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 615 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 616 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 616 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 617 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 617 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 618 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 618 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 619 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 619 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 620 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 620 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 621 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 621 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 622 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 622 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 623 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 623 364.00000000000006
constrain score by whole: 0
Epoch: [23][  26/  26]	Loss 0.025 (0.003)	train_nll   0.74 (  0.66)	train_penalty   0.02 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.52 (  0.60)	train_minacc   0.56 (  0.56)	train_majacc   0.52 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.24it/s] 27%|##6       | 7/26 [00:00<00:00, 36.08it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.08it/s] 50%|#####     | 13/26 [00:00<00:00, 42.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.58it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.58it/s] 96%|#########6| 25/26 [00:00<00:00, 48.19it/s]100%|##########| 26/26 [00:00<00:00, 40.43it/s]
Test: [   0/  26]	Loss 0.683 (0.683)	test_acc   0.57 (  0.57)	test_minacc   0.62 (  0.62)	test_majacc   0.56 (  0.56)	Loss_d 0.683 (0.683)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.56 (  0.56)	test_corr_d   0.29 (  0.29)
Test: [  10/  26]	Loss 0.693 (0.670)	test_acc   0.53 (  0.57)	test_minacc   0.52 (  0.54)	test_majacc   0.54 (  0.58)	Loss_d 0.693 (0.670)	test_acc_d   0.53 (  0.57)	test_minacc_d   0.52 (  0.54)	test_majacc_d   0.54 (  0.58)	test_corr_d   0.21 (  0.30)
Test: [  20/  26]	Loss 0.669 (0.671)	test_acc   0.58 (  0.57)	test_minacc   0.54 (  0.54)	test_majacc   0.59 (  0.58)	Loss_d 0.669 (0.671)	test_acc_d   0.58 (  0.57)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.59 (  0.58)	test_corr_d   0.36 (  0.30)
Test: [  26/  26]	Loss 0.658 (0.671)	test_acc   0.62 (  0.57)	test_minacc   0.61 (  0.54)	test_majacc   0.62 (  0.58)	Loss_d 0.658 (0.671)	test_acc_d   0.62 (  0.57)	test_minacc_d   0.61 (  0.54)	test_majacc_d   0.62 (  0.58)	test_corr_d   0.32 (  0.30)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.37it/s]
Test: [  0/  1]	Loss 0.730 (0.730)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.58 (  0.58)	Loss_d 0.730 (0.730)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.730 (0.730)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.58 (  0.58)	Loss_d 0.730 (0.730)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.58 (  0.58)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 23/  1]	epoch_time 0.0395 (0.0416)	validation_time 0.0004 (0.0007)	train_time 0.0390 (0.0400)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.5733000088334084, 0.5370000004768372)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95263671875
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.56it/s] 15%|#5        | 4/26 [00:00<00:01, 16.33it/s] 31%|###       | 8/26 [00:00<00:00, 23.14it/s] 46%|####6     | 12/26 [00:00<00:00, 26.19it/s] 62%|######1   | 16/26 [00:00<00:00, 27.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.40it/s] 85%|########4 | 22/26 [00:00<00:00, 27.65it/s] 96%|#########6| 25/26 [00:00<00:00, 28.01it/s]100%|##########| 26/26 [00:01<00:00, 23.95it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 624 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 624 364.00000000000006
constrain score by whole: tensor(0.0011, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 625 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 625 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 626 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 626 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 627 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 627 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 628 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 628 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 629 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 629 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 630 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 630 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 631 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 631 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 632 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 632 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 633 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 633 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 634 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 634 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 635 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 635 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 636 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 636 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 637 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 637 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 638 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 638 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 639 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 639 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 640 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 640 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 641 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 641 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 642 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 642 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 643 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 643 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 644 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 644 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 645 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 645 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 646 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 646 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 647 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 647 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 648 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 648 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 649 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 649 364.00000000000006
constrain score by whole: 0
Epoch: [24][  26/  26]	Loss 0.001 (0.003)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.62 (  0.61)	train_minacc   0.67 (  0.55)	train_majacc   0.62 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.98it/s] 23%|##3       | 6/26 [00:00<00:00, 33.47it/s]                                               23%|##3       | 6/26 [00:00<00:00, 33.47it/s] 42%|####2     | 11/26 [00:00<00:00, 40.75it/s] 62%|######1   | 16/26 [00:00<00:00, 41.27it/s]                                                62%|######1   | 16/26 [00:00<00:00, 41.27it/s] 85%|########4 | 22/26 [00:00<00:00, 46.70it/s]100%|##########| 26/26 [00:00<00:00, 39.31it/s]
Test: [   0/  26]	Loss 0.653 (0.653)	test_acc   0.62 (  0.62)	test_minacc   0.65 (  0.65)	test_majacc   0.62 (  0.62)	Loss_d 0.653 (0.653)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.661 (0.642)	test_acc   0.64 (  0.63)	test_minacc   0.65 (  0.59)	test_majacc   0.63 (  0.64)	Loss_d 0.661 (0.642)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.65 (  0.59)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.23 (  0.33)
Test: [  20/  26]	Loss 0.633 (0.643)	test_acc   0.66 (  0.63)	test_minacc   0.65 (  0.59)	test_majacc   0.67 (  0.64)	Loss_d 0.633 (0.643)	test_acc_d   0.66 (  0.63)	test_minacc_d   0.65 (  0.59)	test_majacc_d   0.67 (  0.64)	test_corr_d   0.37 (  0.33)
Test: [  26/  26]	Loss 0.633 (0.643)	test_acc   0.62 (  0.63)	test_minacc   0.58 (  0.58)	test_majacc   0.63 (  0.64)	Loss_d 0.633 (0.643)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.63 (  0.64)	test_corr_d   0.37 (  0.33)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.14it/s]
Test: [  0/  1]	Loss 0.724 (0.724)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.65 (  0.65)	Loss_d 0.724 (0.724)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.05 (  0.05)
Test: [  1/  1]	Loss 0.724 (0.724)	test_acc   0.56 (  0.56)	test_minacc   0.55 (  0.55)	test_majacc   0.65 (  0.65)	Loss_d 0.724 (0.724)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.65 (  0.65)	test_corr_d   0.05 (  0.05)
Overall Timing[ 24/  1]	epoch_time 0.0412 (0.0416)	validation_time 0.0004 (0.0007)	train_time 0.0408 (0.0401)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.632000010073185, 0.5570000410079956)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95152587890625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.20it/s] 19%|#9        | 5/26 [00:00<00:01, 19.42it/s] 35%|###4      | 9/26 [00:00<00:00, 24.04it/s] 46%|####6     | 12/26 [00:00<00:00, 25.66it/s] 62%|######1   | 16/26 [00:00<00:00, 27.50it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.65it/s] 92%|#########2| 24/26 [00:00<00:00, 29.35it/s]100%|##########| 26/26 [00:01<00:00, 24.99it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 650 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 650 364.00000000000006
constrain score by whole: tensor(0.0007, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 651 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 651 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 652 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 652 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 653 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 653 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 654 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 654 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 655 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 655 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 656 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 656 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 657 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 657 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 658 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 658 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 659 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 659 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 660 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 660 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 661 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 661 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 662 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 662 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 663 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 663 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 664 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 664 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 665 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 665 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 666 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 666 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 667 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 667 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 668 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 668 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 669 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 669 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 670 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 670 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 671 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 671 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 672 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 672 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 673 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 673 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 674 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 674 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 675 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 675 364.00000000000006
constrain score by whole: 0
Epoch: [25][  26/  26]	Loss 0.001 (0.001)	train_nll   0.68 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.54 (  0.59)	train_minacc   0.53 (  0.57)	train_majacc   0.55 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.32it/s] 27%|##6       | 7/26 [00:00<00:00, 31.25it/s]                                               27%|##6       | 7/26 [00:00<00:00, 31.25it/s] 50%|#####     | 13/26 [00:00<00:00, 38.77it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.44it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.44it/s] 96%|#########6| 25/26 [00:00<00:00, 46.69it/s]100%|##########| 26/26 [00:00<00:00, 37.85it/s]
Test: [   0/  26]	Loss 0.706 (0.706)	test_acc   0.51 (  0.51)	test_minacc   0.56 (  0.56)	test_majacc   0.51 (  0.51)	Loss_d 0.706 (0.706)	test_acc_d   0.51 (  0.51)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.51 (  0.51)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.719 (0.695)	test_acc   0.48 (  0.53)	test_minacc   0.44 (  0.50)	test_majacc   0.49 (  0.53)	Loss_d 0.719 (0.695)	test_acc_d   0.48 (  0.53)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.49 (  0.53)	test_corr_d   0.12 (  0.23)
Test: [  20/  26]	Loss 0.700 (0.696)	test_acc   0.51 (  0.52)	test_minacc   0.52 (  0.49)	test_majacc   0.51 (  0.53)	Loss_d 0.700 (0.696)	test_acc_d   0.51 (  0.52)	test_minacc_d   0.52 (  0.49)	test_majacc_d   0.51 (  0.53)	test_corr_d   0.30 (  0.23)
Test: [  26/  26]	Loss 0.682 (0.696)	test_acc   0.55 (  0.52)	test_minacc   0.56 (  0.50)	test_majacc   0.55 (  0.53)	Loss_d 0.682 (0.696)	test_acc_d   0.55 (  0.52)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.55 (  0.53)	test_corr_d   0.27 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.47it/s]
Test: [  0/  1]	Loss 0.713 (0.713)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.713 (0.713)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.713 (0.713)	test_acc   0.49 (  0.49)	test_minacc   0.49 (  0.49)	test_majacc   0.51 (  0.51)	Loss_d 0.713 (0.713)	test_acc_d   0.49 (  0.49)	test_minacc_d   0.49 (  0.49)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 25/  1]	epoch_time 0.0382 (0.0415)	validation_time 0.0004 (0.0007)	train_time 0.0378 (0.0400)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.5232000114619731, 0.49400001764297485)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9507812499999999
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:05,  4.98it/s] 15%|#5        | 4/26 [00:00<00:01, 15.03it/s] 27%|##6       | 7/26 [00:00<00:00, 20.21it/s] 38%|###8      | 10/26 [00:00<00:00, 23.37it/s] 50%|#####     | 13/26 [00:00<00:00, 25.25it/s] 62%|######1   | 16/26 [00:00<00:00, 26.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.35it/s] 85%|########4 | 22/26 [00:00<00:00, 27.96it/s]100%|##########| 26/26 [00:01<00:00, 29.09it/s]100%|##########| 26/26 [00:01<00:00, 23.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 676 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 676 364.00000000000006
constrain score by whole: tensor(0.0005, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 677 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 677 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 678 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 678 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 679 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 679 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 680 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 680 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 681 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 681 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 682 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 682 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 683 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 683 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 684 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 684 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 685 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 685 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 686 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 686 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 687 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 687 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 688 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 688 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 689 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 689 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 690 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 690 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 691 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 691 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 692 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 692 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 693 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 693 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 694 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 694 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 695 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 695 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 696 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 696 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 697 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 697 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 698 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 698 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 699 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 699 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 700 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 700 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 701 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 701 364.00000000000006
constrain score by whole: 0
Epoch: [26][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.62 (  0.58)	train_minacc   0.67 (  0.57)	train_majacc   0.62 (  0.58)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.38it/s] 27%|##6       | 7/26 [00:00<00:00, 33.01it/s]                                               27%|##6       | 7/26 [00:00<00:00, 33.01it/s] 46%|####6     | 12/26 [00:00<00:00, 39.92it/s] 65%|######5   | 17/26 [00:00<00:00, 41.42it/s]                                                65%|######5   | 17/26 [00:00<00:00, 41.42it/s] 88%|########8 | 23/26 [00:00<00:00, 47.10it/s]100%|##########| 26/26 [00:00<00:00, 38.32it/s]
Test: [   0/  26]	Loss 0.636 (0.636)	test_acc   0.64 (  0.64)	test_minacc   0.54 (  0.54)	test_majacc   0.66 (  0.66)	Loss_d 0.636 (0.636)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.39 (  0.39)
Test: [  10/  26]	Loss 0.637 (0.627)	test_acc   0.65 (  0.65)	test_minacc   0.59 (  0.55)	test_majacc   0.66 (  0.66)	Loss_d 0.637 (0.627)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.59 (  0.55)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.34 (  0.40)
Test: [  20/  26]	Loss 0.618 (0.627)	test_acc   0.68 (  0.65)	test_minacc   0.57 (  0.54)	test_majacc   0.70 (  0.67)	Loss_d 0.618 (0.627)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.57 (  0.54)	test_majacc_d   0.70 (  0.67)	test_corr_d   0.45 (  0.40)
Test: [  26/  26]	Loss 0.622 (0.627)	test_acc   0.65 (  0.65)	test_minacc   0.58 (  0.54)	test_majacc   0.66 (  0.67)	Loss_d 0.622 (0.627)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.58 (  0.54)	test_majacc_d   0.66 (  0.67)	test_corr_d   0.41 (  0.40)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.21it/s]
Test: [  0/  1]	Loss 0.727 (0.727)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.64 (  0.64)	Loss_d 0.727 (0.727)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.09 (  0.09)
Test: [  1/  1]	Loss 0.727 (0.727)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.64 (  0.64)	Loss_d 0.727 (0.727)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.09 (  0.09)
Overall Timing[ 26/  1]	epoch_time 0.0399 (0.0414)	validation_time 0.0005 (0.0007)	train_time 0.0395 (0.0400)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.6481000207066536, 0.5520000457763672)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.9503295898437499
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.93it/s] 15%|#5        | 4/26 [00:00<00:01, 18.33it/s] 31%|###       | 8/26 [00:00<00:00, 24.26it/s] 46%|####6     | 12/26 [00:00<00:00, 26.95it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.80it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.45it/s] 85%|########4 | 22/26 [00:00<00:00, 28.87it/s] 96%|#########6| 25/26 [00:00<00:00, 28.90it/s]100%|##########| 26/26 [00:01<00:00, 25.09it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 702 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 702 364.00000000000006
constrain score by whole: tensor(0.0002, device='cuda:0')
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 703 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 703 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 704 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 704 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 705 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 705 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 706 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 706 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 707 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 707 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 708 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 708 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 709 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 709 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 710 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 710 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 711 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 711 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 712 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 712 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 713 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 713 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 714 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 714 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 715 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 715 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 716 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 716 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 717 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 717 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 718 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 718 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 719 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 719 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 720 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 720 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 721 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 721 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 722 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 722 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 723 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 723 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 724 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 724 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 725 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 725 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 726 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 726 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 727 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 727 364.00000000000006
constrain score by whole: 0
Epoch: [27][  26/  26]	Loss 0.013 (0.003)	train_nll   0.73 (  0.67)	train_penalty   0.01 (  0.00)	weight_norm   7.82 (  7.82)	train_acc   0.48 (  0.58)	train_minacc   0.44 (  0.54)	train_majacc   0.48 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.12it/s] 23%|##3       | 6/26 [00:00<00:00, 31.62it/s]                                               23%|##3       | 6/26 [00:00<00:00, 31.62it/s] 46%|####6     | 12/26 [00:00<00:00, 41.87it/s] 65%|######5   | 17/26 [00:00<00:00, 42.31it/s]                                                65%|######5   | 17/26 [00:00<00:00, 42.31it/s] 88%|########8 | 23/26 [00:00<00:00, 46.60it/s]100%|##########| 26/26 [00:00<00:00, 37.45it/s]
Test: [   0/  26]	Loss 0.625 (0.625)	test_acc   0.64 (  0.64)	test_minacc   0.44 (  0.44)	test_majacc   0.67 (  0.67)	Loss_d 0.625 (0.625)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.44 (  0.44)
Test: [  10/  26]	Loss 0.624 (0.633)	test_acc   0.68 (  0.64)	test_minacc   0.63 (  0.49)	test_majacc   0.68 (  0.67)	Loss_d 0.624 (0.633)	test_acc_d   0.68 (  0.64)	test_minacc_d   0.63 (  0.49)	test_majacc_d   0.68 (  0.67)	test_corr_d   0.39 (  0.44)
Test: [  20/  26]	Loss 0.611 (0.632)	test_acc   0.65 (  0.64)	test_minacc   0.43 (  0.50)	test_majacc   0.70 (  0.67)	Loss_d 0.611 (0.632)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.43 (  0.50)	test_majacc_d   0.70 (  0.67)	test_corr_d   0.50 (  0.44)
Test: [  26/  26]	Loss 0.641 (0.632)	test_acc   0.62 (  0.64)	test_minacc   0.42 (  0.49)	test_majacc   0.65 (  0.67)	Loss_d 0.641 (0.632)	test_acc_d   0.62 (  0.64)	test_minacc_d   0.42 (  0.49)	test_majacc_d   0.65 (  0.67)	test_corr_d   0.46 (  0.44)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.79it/s]
Test: [  0/  1]	Loss 0.727 (0.727)	test_acc   0.48 (  0.48)	test_minacc   0.46 (  0.46)	test_majacc   0.67 (  0.67)	Loss_d 0.727 (0.727)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.12 (  0.12)
Test: [  1/  1]	Loss 0.727 (0.727)	test_acc   0.48 (  0.48)	test_minacc   0.46 (  0.46)	test_majacc   0.67 (  0.67)	Loss_d 0.727 (0.727)	test_acc_d   0.48 (  0.48)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.67 (  0.67)	test_corr_d   0.12 (  0.12)
Overall Timing[ 27/  1]	epoch_time 0.0410 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0405 (0.0400)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.6437000069618225, 0.47700002789497375)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95009765625
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.47it/s] 15%|#5        | 4/26 [00:00<00:01, 18.14it/s] 31%|###       | 8/26 [00:00<00:00, 24.13it/s] 42%|####2     | 11/26 [00:00<00:00, 25.77it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.58it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.40it/s] 88%|########8 | 23/26 [00:00<00:00, 28.81it/s]100%|##########| 26/26 [00:01<00:00, 25.17it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 728 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 728 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 729 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 729 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 730 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 730 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 731 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 731 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 732 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 732 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 733 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 733 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 734 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 734 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 735 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 735 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 736 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 736 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 737 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 737 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 738 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 738 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 739 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 739 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 740 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 740 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 741 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 741 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 742 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 742 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 743 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 743 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 744 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 744 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 745 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 745 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 746 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 746 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 747 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 747 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 748 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 748 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 749 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 749 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 750 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 750 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 751 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 751 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 752 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 752 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 753 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 753 364.00000000000006
constrain score by whole: 0
Epoch: [28][  26/  26]	Loss 0.002 (0.003)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.82)	train_acc   0.62 (  0.63)	train_minacc   0.67 (  0.56)	train_majacc   0.61 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s] 12%|#1        | 3/26 [00:00<00:00, 24.88it/s] 31%|###       | 8/26 [00:00<00:00, 38.21it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.21it/s] 54%|#####3    | 14/26 [00:00<00:00, 45.12it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.32it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.32it/s] 96%|#########6| 25/26 [00:00<00:00, 48.35it/s]100%|##########| 26/26 [00:00<00:00, 41.35it/s]
Test: [   0/  26]	Loss 0.638 (0.638)	test_acc   0.63 (  0.63)	test_minacc   0.69 (  0.69)	test_majacc   0.62 (  0.62)	Loss_d 0.638 (0.638)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.62 (  0.62)	test_corr_d   0.27 (  0.27)
Test: [  10/  26]	Loss 0.642 (0.638)	test_acc   0.63 (  0.63)	test_minacc   0.70 (  0.61)	test_majacc   0.62 (  0.63)	Loss_d 0.642 (0.638)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.70 (  0.61)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.19 (  0.26)
Test: [  20/  26]	Loss 0.618 (0.637)	test_acc   0.66 (  0.63)	test_minacc   0.65 (  0.62)	test_majacc   0.67 (  0.63)	Loss_d 0.618 (0.637)	test_acc_d   0.66 (  0.63)	test_minacc_d   0.65 (  0.62)	test_majacc_d   0.67 (  0.63)	test_corr_d   0.33 (  0.26)
Test: [  26/  26]	Loss 0.626 (0.637)	test_acc   0.62 (  0.63)	test_minacc   0.64 (  0.61)	test_majacc   0.62 (  0.63)	Loss_d 0.626 (0.637)	test_acc_d   0.62 (  0.63)	test_minacc_d   0.64 (  0.61)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.30 (  0.27)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.97it/s]
Test: [  0/  1]	Loss 0.679 (0.679)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.60 (  0.60)	Loss_d 0.679 (0.679)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.679 (0.679)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.60 (  0.60)	Loss_d 0.679 (0.679)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 28/  1]	epoch_time 0.0393 (0.0414)	validation_time 0.0004 (0.0007)	train_time 0.0389 (0.0399)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.6301000136733055, 0.5820000171661377)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95001220703125
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.41it/s] 15%|#5        | 4/26 [00:00<00:01, 18.52it/s] 27%|##6       | 7/26 [00:00<00:00, 22.67it/s] 38%|###8      | 10/26 [00:00<00:00, 24.97it/s] 50%|#####     | 13/26 [00:00<00:00, 26.23it/s] 65%|######5   | 17/26 [00:00<00:00, 27.92it/s] 81%|########  | 21/26 [00:00<00:00, 28.83it/s] 96%|#########6| 25/26 [00:00<00:00, 29.69it/s]100%|##########| 26/26 [00:01<00:00, 25.08it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 754 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 754 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 755 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 755 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 756 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 756 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 757 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 757 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 758 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 758 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 759 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 759 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 760 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 760 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 761 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 761 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 762 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 762 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 763 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 763 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 764 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 764 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 765 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 765 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 766 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 766 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 767 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 767 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 768 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 768 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 769 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 769 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 770 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 770 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 771 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 771 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 772 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 772 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 773 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 773 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 774 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 774 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 775 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 775 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 776 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 776 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 777 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 777 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 778 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 778 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 779 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 779 364.00000000000006
constrain score by whole: 0
Epoch: [29][  26/  26]	Loss 0.001 (0.003)	train_nll   0.66 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.59 (  0.59)	train_minacc   0.44 (  0.58)	train_majacc   0.62 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.37it/s] 27%|##6       | 7/26 [00:00<00:00, 32.95it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.95it/s] 50%|#####     | 13/26 [00:00<00:00, 41.43it/s] 69%|######9   | 18/26 [00:00<00:00, 44.20it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.20it/s] 92%|#########2| 24/26 [00:00<00:00, 48.71it/s]100%|##########| 26/26 [00:00<00:00, 39.52it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.61 (  0.61)	test_minacc   0.67 (  0.67)	test_majacc   0.60 (  0.60)	Loss_d 0.644 (0.644)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.34 (  0.34)
Test: [  10/  26]	Loss 0.645 (0.639)	test_acc   0.62 (  0.62)	test_minacc   0.61 (  0.58)	test_majacc   0.62 (  0.63)	Loss_d 0.645 (0.639)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.61 (  0.58)	test_majacc_d   0.62 (  0.63)	test_corr_d   0.31 (  0.34)
Test: [  20/  26]	Loss 0.632 (0.640)	test_acc   0.63 (  0.63)	test_minacc   0.60 (  0.58)	test_majacc   0.64 (  0.64)	Loss_d 0.632 (0.640)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.60 (  0.58)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.39 (  0.33)
Test: [  26/  26]	Loss 0.629 (0.639)	test_acc   0.64 (  0.63)	test_minacc   0.64 (  0.58)	test_majacc   0.64 (  0.64)	Loss_d 0.629 (0.639)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.64 (  0.58)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.38 (  0.34)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.25it/s]
Test: [  0/  1]	Loss 0.696 (0.696)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.56 (  0.56)	Loss_d 0.696 (0.696)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.04 ( -0.04)
Test: [  1/  1]	Loss 0.696 (0.696)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.56 (  0.56)	Loss_d 0.696 (0.696)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.04 ( -0.04)
Overall Timing[ 29/  1]	epoch_time 0.0387 (0.0413)	validation_time 0.0004 (0.0006)	train_time 0.0382 (0.0399)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.6276000102162361, 0.550000011920929)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.66it/s] 15%|#5        | 4/26 [00:00<00:01, 21.25it/s] 27%|##6       | 7/26 [00:00<00:00, 24.57it/s] 38%|###8      | 10/26 [00:00<00:00, 25.31it/s] 50%|#####     | 13/26 [00:00<00:00, 26.46it/s] 62%|######1   | 16/26 [00:00<00:00, 27.49it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.74it/s] 88%|########8 | 23/26 [00:00<00:00, 28.67it/s]100%|##########| 26/26 [00:01<00:00, 25.25it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 780 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 780 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 781 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 781 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 782 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 782 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 783 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 783 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 784 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 784 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 785 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 785 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 786 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 786 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 787 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 787 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 788 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 788 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 789 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 789 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 790 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 790 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 791 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 791 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 792 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 792 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 793 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 793 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 794 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 794 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 795 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 795 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 796 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 796 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 797 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 797 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 798 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 798 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 799 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 799 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 800 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 800 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 801 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 801 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 802 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 802 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 803 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 803 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 804 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 804 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 805 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 805 364.00000000000006
constrain score by whole: 0
Epoch: [30][  26/  26]	Loss 0.003 (0.002)	train_nll   0.69 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.49 (  0.60)	train_minacc   0.42 (  0.61)	train_majacc   0.50 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.30it/s] 35%|###4      | 9/26 [00:00<00:00, 40.10it/s]                                               35%|###4      | 9/26 [00:00<00:00, 40.10it/s] 58%|#####7    | 15/26 [00:00<00:00, 46.24it/s]                                                58%|#####7    | 15/26 [00:00<00:00, 46.24it/s] 81%|########  | 21/26 [00:00<00:00, 48.87it/s]100%|##########| 26/26 [00:00<00:00, 42.04it/s]
Test: [   0/  26]	Loss 0.668 (0.668)	test_acc   0.59 (  0.59)	test_minacc   0.60 (  0.60)	test_majacc   0.59 (  0.59)	Loss_d 0.668 (0.668)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.60 (  0.60)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.36 (  0.36)
Test: [  10/  26]	Loss 0.669 (0.657)	test_acc   0.57 (  0.59)	test_minacc   0.54 (  0.54)	test_majacc   0.57 (  0.60)	Loss_d 0.669 (0.657)	test_acc_d   0.57 (  0.59)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.57 (  0.60)	test_corr_d   0.33 (  0.36)
Test: [  20/  26]	Loss 0.658 (0.660)	test_acc   0.57 (  0.58)	test_minacc   0.51 (  0.53)	test_majacc   0.58 (  0.59)	Loss_d 0.658 (0.660)	test_acc_d   0.57 (  0.58)	test_minacc_d   0.51 (  0.53)	test_majacc_d   0.58 (  0.59)	test_corr_d   0.43 (  0.36)
Test: [  26/  26]	Loss 0.642 (0.659)	test_acc   0.62 (  0.59)	test_minacc   0.56 (  0.53)	test_majacc   0.63 (  0.59)	Loss_d 0.642 (0.659)	test_acc_d   0.62 (  0.59)	test_minacc_d   0.56 (  0.53)	test_majacc_d   0.63 (  0.59)	test_corr_d   0.40 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.80it/s]
Test: [  0/  1]	Loss 0.721 (0.721)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.55 (  0.55)	Loss_d 0.721 (0.721)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.01 ( -0.01)
Test: [  1/  1]	Loss 0.721 (0.721)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.55 (  0.55)	Loss_d 0.721 (0.721)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.01 ( -0.01)
Overall Timing[ 30/  1]	epoch_time 0.0391 (0.0412)	validation_time 0.0004 (0.0006)	train_time 0.0386 (0.0398)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.5850000091791153, 0.51500004529953)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.12it/s] 15%|#5        | 4/26 [00:00<00:01, 19.39it/s] 27%|##6       | 7/26 [00:00<00:00, 23.63it/s] 42%|####2     | 11/26 [00:00<00:00, 26.45it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.23it/s] 65%|######5   | 17/26 [00:00<00:00, 27.62it/s] 77%|#######6  | 20/26 [00:00<00:00, 28.28it/s] 88%|########8 | 23/26 [00:00<00:00, 28.45it/s]100%|##########| 26/26 [00:00<00:00, 28.63it/s]100%|##########| 26/26 [00:01<00:00, 24.71it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 806 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 806 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 807 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 807 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 808 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 808 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 809 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 809 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 810 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 810 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 811 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 811 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 812 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 812 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 813 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 813 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 814 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 814 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 815 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 815 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 816 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 816 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 817 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 817 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 818 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 818 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 819 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 819 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 820 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 820 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 821 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 821 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 822 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 822 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 823 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 823 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 824 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 824 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 825 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 825 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 826 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 826 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 827 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 827 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 828 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 828 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 829 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 829 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 830 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 830 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 831 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 831 364.00000000000006
constrain score by whole: 0
Epoch: [31][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.58 (  0.57)	train_minacc   0.42 (  0.62)	train_majacc   0.61 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.51it/s] 27%|##6       | 7/26 [00:00<00:00, 34.35it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.35it/s] 42%|####2     | 11/26 [00:00<00:00, 36.42it/s] 65%|######5   | 17/26 [00:00<00:00, 45.12it/s]                                                65%|######5   | 17/26 [00:00<00:00, 45.12it/s] 88%|########8 | 23/26 [00:00<00:00, 48.69it/s]100%|##########| 26/26 [00:00<00:00, 39.86it/s]
Test: [   0/  26]	Loss 0.645 (0.645)	test_acc   0.61 (  0.61)	test_minacc   0.52 (  0.52)	test_majacc   0.63 (  0.63)	Loss_d 0.645 (0.645)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.643 (0.653)	test_acc   0.64 (  0.61)	test_minacc   0.70 (  0.58)	test_majacc   0.63 (  0.62)	Loss_d 0.643 (0.653)	test_acc_d   0.64 (  0.61)	test_minacc_d   0.70 (  0.58)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.23 (  0.28)
Test: [  20/  26]	Loss 0.629 (0.651)	test_acc   0.64 (  0.61)	test_minacc   0.55 (  0.58)	test_majacc   0.66 (  0.62)	Loss_d 0.629 (0.651)	test_acc_d   0.64 (  0.61)	test_minacc_d   0.55 (  0.58)	test_majacc_d   0.66 (  0.62)	test_corr_d   0.35 (  0.28)
Test: [  26/  26]	Loss 0.652 (0.652)	test_acc   0.58 (  0.61)	test_minacc   0.47 (  0.57)	test_majacc   0.60 (  0.62)	Loss_d 0.652 (0.652)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.47 (  0.57)	test_majacc_d   0.60 (  0.62)	test_corr_d   0.33 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 45.41it/s]
Test: [  0/  1]	Loss 0.687 (0.687)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.66 (  0.66)	Loss_d 0.687 (0.687)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.11 ( -0.11)
Test: [  1/  1]	Loss 0.687 (0.687)	test_acc   0.55 (  0.55)	test_minacc   0.54 (  0.54)	test_majacc   0.66 (  0.66)	Loss_d 0.687 (0.687)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.54 (  0.54)	test_majacc_d   0.66 (  0.66)	test_corr_d  -0.11 ( -0.11)
Overall Timing[ 31/  1]	epoch_time 0.0396 (0.0411)	validation_time 0.0004 (0.0006)	train_time 0.0391 (0.0398)
record: (train_acc, test_acc) (0.6292000203728676, 0.5879999995231628)
last accs (train_acc, test_acc) (0.6110000131726265, 0.5540000200271606)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.02it/s] 15%|#5        | 4/26 [00:00<00:01, 19.95it/s] 27%|##6       | 7/26 [00:00<00:00, 23.67it/s] 38%|###8      | 10/26 [00:00<00:00, 25.98it/s] 50%|#####     | 13/26 [00:00<00:00, 27.23it/s] 62%|######1   | 16/26 [00:00<00:00, 28.01it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.46it/s] 88%|########8 | 23/26 [00:00<00:00, 29.00it/s]100%|##########| 26/26 [00:00<00:00, 29.10it/s]100%|##########| 26/26 [00:01<00:00, 25.32it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 832 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 832 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 833 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 833 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 834 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 834 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 835 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 835 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 836 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 836 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 837 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 837 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 838 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 838 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 839 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 839 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 840 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 840 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 841 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 841 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 842 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 842 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 843 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 843 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 844 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 844 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 845 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 845 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 846 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 846 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 847 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 847 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 848 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 848 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 849 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 849 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 850 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 850 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 851 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 851 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 852 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 852 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 853 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 853 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 854 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 854 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 855 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 855 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 856 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 856 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 857 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 857 364.00000000000006
constrain score by whole: 0
Epoch: [32][  26/  26]	Loss 0.002 (0.001)	train_nll   0.65 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.62 (  0.59)	train_minacc   0.64 (  0.61)	train_majacc   0.61 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 18.36it/s] 31%|###       | 8/26 [00:00<00:00, 40.10it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.10it/s] 50%|#####     | 13/26 [00:00<00:00, 41.95it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.91it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.91it/s] 96%|#########6| 25/26 [00:00<00:00, 48.02it/s]100%|##########| 26/26 [00:00<00:00, 41.30it/s]
Test: [   0/  26]	Loss 0.646 (0.646)	test_acc   0.62 (  0.62)	test_minacc   0.67 (  0.67)	test_majacc   0.61 (  0.61)	Loss_d 0.646 (0.646)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.642 (0.646)	test_acc   0.65 (  0.62)	test_minacc   0.76 (  0.63)	test_majacc   0.63 (  0.62)	Loss_d 0.642 (0.646)	test_acc_d   0.65 (  0.62)	test_minacc_d   0.76 (  0.63)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.20 (  0.24)
Test: [  20/  26]	Loss 0.629 (0.645)	test_acc   0.65 (  0.63)	test_minacc   0.68 (  0.64)	test_majacc   0.64 (  0.62)	Loss_d 0.629 (0.645)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.68 (  0.64)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.30 (  0.24)
Test: [  26/  26]	Loss 0.637 (0.645)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.63)	test_majacc   0.63 (  0.62)	Loss_d 0.637 (0.645)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.63)	test_majacc_d   0.63 (  0.62)	test_corr_d   0.29 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.67it/s]
Test: [  0/  1]	Loss 0.675 (0.675)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.61 (  0.61)	Loss_d 0.675 (0.675)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.675 (0.675)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.61 (  0.61)	Loss_d 0.675 (0.675)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.61 (  0.61)	test_corr_d  -0.13 ( -0.13)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/29/checkpoints/model_best.pth
Overall Timing[ 32/  1]	epoch_time 0.0392 (0.0411)	validation_time 0.0004 (0.0006)	train_time 0.0388 (0.0398)
record: (train_acc, test_acc) (0.6255000097155571, 0.5900000333786011)
last accs (train_acc, test_acc) (0.6255000097155571, 0.5900000333786011)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.98it/s] 19%|#9        | 5/26 [00:00<00:01, 18.75it/s] 35%|###4      | 9/26 [00:00<00:00, 23.92it/s] 50%|#####     | 13/26 [00:00<00:00, 26.51it/s] 65%|######5   | 17/26 [00:00<00:00, 28.05it/s] 81%|########  | 21/26 [00:00<00:00, 28.81it/s] 92%|#########2| 24/26 [00:00<00:00, 28.85it/s]100%|##########| 26/26 [00:01<00:00, 24.65it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 858 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 858 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 859 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 859 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 860 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 860 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 861 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 861 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 862 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 862 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 863 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 863 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 864 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 864 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 865 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 865 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 866 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 866 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 867 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 867 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 868 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 868 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 869 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 869 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 870 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 870 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 871 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 871 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 872 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 872 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 873 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 873 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 874 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 874 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 875 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 875 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 876 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 876 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 877 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 877 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 878 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 878 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 879 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 879 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 880 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 880 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 881 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 881 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 882 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 882 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 883 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 883 364.00000000000006
constrain score by whole: 0
Epoch: [33][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.62 (  0.57)	train_minacc   0.67 (  0.62)	train_majacc   0.61 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 19.77it/s] 31%|###       | 8/26 [00:00<00:00, 42.16it/s]                                               31%|###       | 8/26 [00:00<00:00, 42.16it/s] 50%|#####     | 13/26 [00:00<00:00, 42.42it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.96it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.96it/s] 96%|#########6| 25/26 [00:00<00:00, 47.91it/s]100%|##########| 26/26 [00:00<00:00, 41.86it/s]
Test: [   0/  26]	Loss 0.657 (0.657)	test_acc   0.60 (  0.60)	test_minacc   0.65 (  0.65)	test_majacc   0.59 (  0.59)	Loss_d 0.657 (0.657)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.65 (  0.65)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.33 (  0.33)
Test: [  10/  26]	Loss 0.659 (0.651)	test_acc   0.61 (  0.60)	test_minacc   0.63 (  0.58)	test_majacc   0.60 (  0.61)	Loss_d 0.659 (0.651)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.63 (  0.58)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.28 (  0.31)
Test: [  20/  26]	Loss 0.651 (0.653)	test_acc   0.58 (  0.60)	test_minacc   0.52 (  0.57)	test_majacc   0.59 (  0.61)	Loss_d 0.651 (0.653)	test_acc_d   0.58 (  0.60)	test_minacc_d   0.52 (  0.57)	test_majacc_d   0.59 (  0.61)	test_corr_d   0.36 (  0.31)
Test: [  26/  26]	Loss 0.640 (0.653)	test_acc   0.64 (  0.60)	test_minacc   0.64 (  0.57)	test_majacc   0.64 (  0.61)	Loss_d 0.640 (0.653)	test_acc_d   0.64 (  0.60)	test_minacc_d   0.64 (  0.57)	test_majacc_d   0.64 (  0.61)	test_corr_d   0.36 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.03it/s]
Test: [  0/  1]	Loss 0.698 (0.698)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.55 (  0.55)	Loss_d 0.698 (0.698)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.06 ( -0.06)
Test: [  1/  1]	Loss 0.698 (0.698)	test_acc   0.55 (  0.55)	test_minacc   0.55 (  0.55)	test_majacc   0.55 (  0.55)	Loss_d 0.698 (0.698)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.55 (  0.55)	test_majacc_d   0.55 (  0.55)	test_corr_d  -0.06 ( -0.06)
Overall Timing[ 33/  1]	epoch_time 0.0392 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0388 (0.0398)
record: (train_acc, test_acc) (0.6255000097155571, 0.5900000333786011)
last accs (train_acc, test_acc) (0.6000000091195107, 0.5470000505447388)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.68it/s] 15%|#5        | 4/26 [00:00<00:01, 18.12it/s] 27%|##6       | 7/26 [00:00<00:00, 22.33it/s] 42%|####2     | 11/26 [00:00<00:00, 25.39it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.37it/s] 65%|######5   | 17/26 [00:00<00:00, 27.09it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.87it/s] 88%|########8 | 23/26 [00:00<00:00, 28.44it/s]100%|##########| 26/26 [00:01<00:00, 28.83it/s]100%|##########| 26/26 [00:01<00:00, 24.51it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 884 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 884 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 885 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 885 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 886 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 886 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 887 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 887 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 888 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 888 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 889 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 889 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 890 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 890 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 891 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 891 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 892 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 892 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 893 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 893 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 894 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 894 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 895 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 895 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 896 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 896 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 897 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 897 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 898 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 898 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 899 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 899 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 900 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 900 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 901 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 901 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 902 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 902 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 903 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 903 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 904 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 904 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 905 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 905 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 906 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 906 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 907 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 907 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 908 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 908 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 909 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 909 364.00000000000006
constrain score by whole: 0
Epoch: [34][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.58 (  0.61)	train_minacc   0.72 (  0.59)	train_majacc   0.56 (  0.61)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.57it/s] 31%|###       | 8/26 [00:00<00:00, 32.16it/s]                                               31%|###       | 8/26 [00:00<00:00, 32.16it/s] 50%|#####     | 13/26 [00:00<00:00, 37.65it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.63it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.63it/s] 96%|#########6| 25/26 [00:00<00:00, 46.22it/s]100%|##########| 26/26 [00:00<00:00, 36.54it/s]
Test: [   0/  26]	Loss 0.659 (0.659)	test_acc   0.58 (  0.58)	test_minacc   0.56 (  0.56)	test_majacc   0.59 (  0.59)	Loss_d 0.659 (0.659)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.20 (  0.20)
Test: [  10/  26]	Loss 0.652 (0.665)	test_acc   0.62 (  0.59)	test_minacc   0.72 (  0.59)	test_majacc   0.60 (  0.59)	Loss_d 0.652 (0.665)	test_acc_d   0.62 (  0.59)	test_minacc_d   0.72 (  0.59)	test_majacc_d   0.60 (  0.59)	test_corr_d   0.15 (  0.20)
Test: [  20/  26]	Loss 0.635 (0.662)	test_acc   0.65 (  0.59)	test_minacc   0.66 (  0.60)	test_majacc   0.65 (  0.59)	Loss_d 0.635 (0.662)	test_acc_d   0.65 (  0.59)	test_minacc_d   0.66 (  0.60)	test_majacc_d   0.65 (  0.59)	test_corr_d   0.26 (  0.20)
Test: [  26/  26]	Loss 0.668 (0.663)	test_acc   0.54 (  0.59)	test_minacc   0.44 (  0.60)	test_majacc   0.56 (  0.59)	Loss_d 0.668 (0.663)	test_acc_d   0.54 (  0.59)	test_minacc_d   0.44 (  0.60)	test_majacc_d   0.56 (  0.59)	test_corr_d   0.23 (  0.21)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.05it/s]
Test: [  0/  1]	Loss 0.680 (0.680)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.60 (  0.60)	Loss_d 0.680 (0.680)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.20 ( -0.20)
Test: [  1/  1]	Loss 0.680 (0.680)	test_acc   0.57 (  0.57)	test_minacc   0.56 (  0.56)	test_majacc   0.60 (  0.60)	Loss_d 0.680 (0.680)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.20 ( -0.20)
Overall Timing[ 34/  1]	epoch_time 0.0400 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0395 (0.0398)
record: (train_acc, test_acc) (0.6255000097155571, 0.5900000333786011)
last accs (train_acc, test_acc) (0.5907000116705895, 0.5670000314712524)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.47it/s] 15%|#5        | 4/26 [00:00<00:01, 19.37it/s] 27%|##6       | 7/26 [00:00<00:00, 22.68it/s] 42%|####2     | 11/26 [00:00<00:00, 25.47it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.76it/s] 65%|######5   | 17/26 [00:00<00:00, 26.64it/s] 77%|#######6  | 20/26 [00:00<00:00, 27.52it/s] 88%|########8 | 23/26 [00:00<00:00, 27.92it/s]100%|##########| 26/26 [00:01<00:00, 27.79it/s]100%|##########| 26/26 [00:01<00:00, 24.34it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 910 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 910 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 911 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 911 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 912 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 912 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 913 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 913 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 914 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 914 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 915 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 915 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 916 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 916 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 917 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 917 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 918 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 918 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 919 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 919 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 920 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 920 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 921 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 921 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 922 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 922 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 923 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 923 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 924 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 924 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 925 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 925 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 926 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 926 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 927 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 927 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 928 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 928 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 929 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 929 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 930 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 930 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 931 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 931 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 932 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 932 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 933 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 933 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 934 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 934 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 935 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 935 364.00000000000006
constrain score by whole: 0
Epoch: [35][  26/  26]	Loss 0.002 (0.003)	train_nll   0.64 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.67 (  0.60)	train_minacc   0.64 (  0.60)	train_majacc   0.67 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.85it/s] 27%|##6       | 7/26 [00:00<00:00, 30.15it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.15it/s] 50%|#####     | 13/26 [00:00<00:00, 38.40it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.88it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.88it/s] 96%|#########6| 25/26 [00:00<00:00, 46.36it/s]100%|##########| 26/26 [00:00<00:00, 37.25it/s]
Test: [   0/  26]	Loss 0.667 (0.667)	test_acc   0.59 (  0.59)	test_minacc   0.63 (  0.63)	test_majacc   0.59 (  0.59)	Loss_d 0.667 (0.667)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.35 (  0.35)
Test: [  10/  26]	Loss 0.674 (0.657)	test_acc   0.55 (  0.59)	test_minacc   0.56 (  0.53)	test_majacc   0.55 (  0.60)	Loss_d 0.674 (0.657)	test_acc_d   0.55 (  0.59)	test_minacc_d   0.56 (  0.53)	test_majacc_d   0.55 (  0.60)	test_corr_d   0.32 (  0.36)
Test: [  20/  26]	Loss 0.660 (0.659)	test_acc   0.58 (  0.58)	test_minacc   0.49 (  0.53)	test_majacc   0.60 (  0.60)	Loss_d 0.660 (0.659)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.49 (  0.53)	test_majacc_d   0.60 (  0.60)	test_corr_d   0.42 (  0.36)
Test: [  26/  26]	Loss 0.646 (0.659)	test_acc   0.62 (  0.59)	test_minacc   0.56 (  0.53)	test_majacc   0.64 (  0.60)	Loss_d 0.646 (0.659)	test_acc_d   0.62 (  0.59)	test_minacc_d   0.56 (  0.53)	test_majacc_d   0.64 (  0.60)	test_corr_d   0.40 (  0.36)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.13it/s]
Test: [  0/  1]	Loss 0.720 (0.720)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.56 (  0.56)	Loss_d 0.720 (0.720)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.02 ( -0.02)
Test: [  1/  1]	Loss 0.720 (0.720)	test_acc   0.52 (  0.52)	test_minacc   0.52 (  0.52)	test_majacc   0.56 (  0.56)	Loss_d 0.720 (0.720)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.02 ( -0.02)
Overall Timing[ 35/  1]	epoch_time 0.0395 (0.0410)	validation_time 0.0004 (0.0006)	train_time 0.0391 (0.0397)
record: (train_acc, test_acc) (0.6255000097155571, 0.5900000333786011)
last accs (train_acc, test_acc) (0.5863000116348267, 0.5200000405311584)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.77it/s] 15%|#5        | 4/26 [00:00<00:01, 18.76it/s] 31%|###       | 8/26 [00:00<00:00, 24.64it/s] 46%|####6     | 12/26 [00:00<00:00, 27.30it/s] 62%|######1   | 16/26 [00:00<00:00, 28.86it/s] 77%|#######6  | 20/26 [00:00<00:00, 29.65it/s] 88%|########8 | 23/26 [00:00<00:00, 29.73it/s]100%|##########| 26/26 [00:00<00:00, 29.60it/s]100%|##########| 26/26 [00:01<00:00, 25.40it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 936 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 936 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 937 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 937 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 938 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 938 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 939 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 939 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 940 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 940 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 941 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 941 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 942 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 942 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 943 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 943 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 944 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 944 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 945 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 945 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 946 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 946 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 947 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 947 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 948 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 948 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 949 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 949 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 950 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 950 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 951 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 951 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 952 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 952 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 953 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 953 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 954 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 954 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 955 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 955 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 956 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 956 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 957 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 957 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 958 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 958 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 959 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 959 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 960 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 960 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 961 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 961 364.00000000000006
constrain score by whole: 0
Epoch: [36][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.57 (  0.62)	train_minacc   0.56 (  0.58)	train_majacc   0.57 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 16.94it/s] 31%|###       | 8/26 [00:00<00:00, 38.23it/s]                                               31%|###       | 8/26 [00:00<00:00, 38.23it/s] 50%|#####     | 13/26 [00:00<00:00, 42.64it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.26it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.26it/s] 96%|#########6| 25/26 [00:00<00:00, 48.46it/s]100%|##########| 26/26 [00:00<00:00, 40.87it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.58 (  0.58)	test_minacc   0.67 (  0.67)	test_majacc   0.57 (  0.57)	Loss_d 0.655 (0.655)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.19 (  0.19)
Test: [  10/  26]	Loss 0.658 (0.653)	test_acc   0.61 (  0.61)	test_minacc   0.74 (  0.65)	test_majacc   0.59 (  0.60)	Loss_d 0.658 (0.653)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.74 (  0.65)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.14 (  0.18)
Test: [  20/  26]	Loss 0.642 (0.653)	test_acc   0.64 (  0.61)	test_minacc   0.69 (  0.65)	test_majacc   0.63 (  0.60)	Loss_d 0.642 (0.653)	test_acc_d   0.64 (  0.61)	test_minacc_d   0.69 (  0.65)	test_majacc_d   0.63 (  0.60)	test_corr_d   0.24 (  0.18)
Test: [  26/  26]	Loss 0.651 (0.654)	test_acc   0.61 (  0.61)	test_minacc   0.72 (  0.65)	test_majacc   0.59 (  0.60)	Loss_d 0.651 (0.654)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.72 (  0.65)	test_majacc_d   0.59 (  0.60)	test_corr_d   0.21 (  0.18)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.28it/s]
Test: [  0/  1]	Loss 0.659 (0.659)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.51 (  0.51)	Loss_d 0.659 (0.659)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.23 ( -0.23)
Test: [  1/  1]	Loss 0.659 (0.659)	test_acc   0.61 (  0.61)	test_minacc   0.62 (  0.62)	test_majacc   0.51 (  0.51)	Loss_d 0.659 (0.659)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.62 (  0.62)	test_majacc_d   0.51 (  0.51)	test_corr_d  -0.23 ( -0.23)
==> New best, saving at runs/resnet18-usc-unsigned/baseline/prune_rate=0.95/29/checkpoints/model_best.pth
Overall Timing[ 36/  1]	epoch_time 0.0381 (0.0409)	validation_time 0.0004 (0.0006)	train_time 0.0377 (0.0397)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.67it/s] 15%|#5        | 4/26 [00:00<00:01, 18.85it/s] 27%|##6       | 7/26 [00:00<00:00, 23.31it/s] 42%|####2     | 11/26 [00:00<00:00, 26.66it/s] 58%|#####7    | 15/26 [00:00<00:00, 28.18it/s] 69%|######9   | 18/26 [00:00<00:00, 28.66it/s] 85%|########4 | 22/26 [00:00<00:00, 29.31it/s] 96%|#########6| 25/26 [00:00<00:00, 28.96it/s]100%|##########| 26/26 [00:01<00:00, 25.27it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 962 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 962 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 963 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 963 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 964 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 964 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 965 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 965 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 966 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 966 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 967 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 967 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 968 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 968 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 969 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 969 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 970 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 970 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 971 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 971 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 972 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 972 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 973 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 973 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 974 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 974 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 975 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 975 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 976 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 976 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 977 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 977 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 978 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 978 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 979 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 979 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 980 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 980 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 981 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 981 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 982 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 982 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 983 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 983 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 984 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 984 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 985 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 985 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 986 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 986 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 987 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 987 364.00000000000006
constrain score by whole: 0
Epoch: [37][  26/  26]	Loss 0.002 (0.002)	train_nll   0.63 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.81 (  7.81)	train_acc   0.64 (  0.56)	train_minacc   0.67 (  0.61)	train_majacc   0.64 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.43it/s] 31%|###       | 8/26 [00:00<00:00, 40.05it/s]                                               31%|###       | 8/26 [00:00<00:00, 40.05it/s] 50%|#####     | 13/26 [00:00<00:00, 42.00it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.40it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.40it/s] 96%|#########6| 25/26 [00:00<00:00, 48.17it/s]100%|##########| 26/26 [00:00<00:00, 40.77it/s]
Test: [   0/  26]	Loss 0.647 (0.647)	test_acc   0.63 (  0.63)	test_minacc   0.67 (  0.67)	test_majacc   0.63 (  0.63)	Loss_d 0.647 (0.647)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.648 (0.645)	test_acc   0.64 (  0.64)	test_minacc   0.69 (  0.60)	test_majacc   0.63 (  0.65)	Loss_d 0.648 (0.645)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.69 (  0.60)	test_majacc_d   0.63 (  0.65)	test_corr_d   0.24 (  0.29)
Test: [  20/  26]	Loss 0.636 (0.646)	test_acc   0.67 (  0.64)	test_minacc   0.63 (  0.61)	test_majacc   0.68 (  0.65)	Loss_d 0.636 (0.646)	test_acc_d   0.67 (  0.64)	test_minacc_d   0.63 (  0.61)	test_majacc_d   0.68 (  0.65)	test_corr_d   0.35 (  0.29)
Test: [  26/  26]	Loss 0.647 (0.646)	test_acc   0.63 (  0.64)	test_minacc   0.69 (  0.61)	test_majacc   0.62 (  0.65)	Loss_d 0.647 (0.646)	test_acc_d   0.63 (  0.64)	test_minacc_d   0.69 (  0.61)	test_majacc_d   0.62 (  0.65)	test_corr_d   0.30 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.63it/s]
Test: [  0/  1]	Loss 0.677 (0.677)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.59 (  0.59)	Loss_d 0.677 (0.677)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.12 ( -0.12)
Test: [  1/  1]	Loss 0.677 (0.677)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.59 (  0.59)	Loss_d 0.677 (0.677)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.59 (  0.59)	test_corr_d  -0.12 ( -0.12)
Overall Timing[ 37/  1]	epoch_time 0.0394 (0.0408)	validation_time 0.0004 (0.0006)	train_time 0.0390 (0.0397)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.639200010061264, 0.5740000009536743)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.66it/s] 15%|#5        | 4/26 [00:00<00:01, 20.11it/s] 27%|##6       | 7/26 [00:00<00:00, 24.21it/s] 38%|###8      | 10/26 [00:00<00:00, 26.31it/s] 50%|#####     | 13/26 [00:00<00:00, 27.32it/s] 65%|######5   | 17/26 [00:00<00:00, 28.17it/s] 81%|########  | 21/26 [00:00<00:00, 28.80it/s] 92%|#########2| 24/26 [00:00<00:00, 29.05it/s]100%|##########| 26/26 [00:01<00:00, 25.28it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 988 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 988 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 989 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 989 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 990 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 990 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 991 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 991 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 992 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 992 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 993 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 993 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 994 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 994 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 995 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 995 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 996 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 996 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 997 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 997 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 998 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 998 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 999 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 999 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1000 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1000 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1001 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1001 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1002 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1002 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1003 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1003 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1004 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1004 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1005 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1005 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1006 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1006 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1007 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1007 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1008 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1008 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1009 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1009 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1010 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1010 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1011 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1011 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1012 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1012 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1013 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1013 364.00000000000006
constrain score by whole: 0
Epoch: [38][  26/  26]	Loss 0.003 (0.002)	train_nll   0.71 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.81)	train_acc   0.48 (  0.60)	train_minacc   0.44 (  0.63)	train_majacc   0.48 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.10it/s] 27%|##6       | 7/26 [00:00<00:00, 35.40it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.40it/s] 50%|#####     | 13/26 [00:00<00:00, 41.48it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.78it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.78it/s] 96%|#########6| 25/26 [00:00<00:00, 48.24it/s]100%|##########| 26/26 [00:00<00:00, 39.98it/s]
Test: [   0/  26]	Loss 0.676 (0.676)	test_acc   0.55 (  0.55)	test_minacc   0.69 (  0.69)	test_majacc   0.53 (  0.53)	Loss_d 0.676 (0.676)	test_acc_d   0.55 (  0.55)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.08 (  0.08)
Test: [  10/  26]	Loss 0.678 (0.676)	test_acc   0.60 (  0.58)	test_minacc   0.72 (  0.69)	test_majacc   0.58 (  0.56)	Loss_d 0.678 (0.676)	test_acc_d   0.60 (  0.58)	test_minacc_d   0.72 (  0.69)	test_majacc_d   0.58 (  0.56)	test_corr_d   0.03 (  0.07)
Test: [  20/  26]	Loss 0.671 (0.677)	test_acc   0.63 (  0.58)	test_minacc   0.74 (  0.69)	test_majacc   0.61 (  0.56)	Loss_d 0.671 (0.677)	test_acc_d   0.63 (  0.58)	test_minacc_d   0.74 (  0.69)	test_majacc_d   0.61 (  0.56)	test_corr_d   0.13 (  0.06)
Test: [  26/  26]	Loss 0.677 (0.677)	test_acc   0.58 (  0.58)	test_minacc   0.67 (  0.68)	test_majacc   0.57 (  0.56)	Loss_d 0.677 (0.677)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.67 (  0.68)	test_majacc_d   0.57 (  0.56)	test_corr_d   0.08 (  0.06)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.04it/s]
Test: [  0/  1]	Loss 0.658 (0.658)	test_acc   0.65 (  0.65)	test_minacc   0.66 (  0.66)	test_majacc   0.48 (  0.48)	Loss_d 0.658 (0.658)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.34 ( -0.34)
Test: [  1/  1]	Loss 0.658 (0.658)	test_acc   0.65 (  0.65)	test_minacc   0.66 (  0.66)	test_majacc   0.48 (  0.48)	Loss_d 0.658 (0.658)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.66 (  0.66)	test_majacc_d   0.48 (  0.48)	test_corr_d  -0.34 ( -0.34)
Overall Timing[ 38/  1]	epoch_time 0.0391 (0.0408)	validation_time 0.0004 (0.0006)	train_time 0.0386 (0.0396)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.5816000046730041, 0.6450000405311584)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.18it/s] 15%|#5        | 4/26 [00:00<00:01, 17.19it/s] 27%|##6       | 7/26 [00:00<00:00, 21.99it/s] 42%|####2     | 11/26 [00:00<00:00, 25.58it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.25it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.45it/s] 88%|########8 | 23/26 [00:00<00:00, 29.06it/s]100%|##########| 26/26 [00:01<00:00, 24.59it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1014 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1014 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1015 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1015 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1016 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1016 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1017 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1017 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1018 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1018 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1019 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1019 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1020 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1020 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1021 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1021 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1022 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1022 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1023 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1023 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1024 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1024 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1025 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1025 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1026 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1026 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1027 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1027 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1028 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1028 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1029 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1029 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1030 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1030 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1031 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1031 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1032 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1032 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1033 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1033 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1034 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1034 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1035 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1035 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1036 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1036 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1037 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1037 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1038 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1038 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1039 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1039 364.00000000000006
constrain score by whole: 0
Epoch: [39][  26/  26]	Loss 0.001 (0.001)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.54 (  0.57)	train_minacc   0.56 (  0.62)	train_majacc   0.53 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.59it/s] 27%|##6       | 7/26 [00:00<00:00, 38.50it/s]                                               27%|##6       | 7/26 [00:00<00:00, 38.50it/s] 50%|#####     | 13/26 [00:00<00:00, 43.38it/s] 73%|#######3  | 19/26 [00:00<00:00, 48.77it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 48.77it/s] 96%|#########6| 25/26 [00:00<00:00, 48.23it/s]100%|##########| 26/26 [00:00<00:00, 40.82it/s]
Test: [   0/  26]	Loss 0.675 (0.675)	test_acc   0.57 (  0.57)	test_minacc   0.71 (  0.71)	test_majacc   0.54 (  0.54)	Loss_d 0.675 (0.675)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.71 (  0.71)	test_majacc_d   0.54 (  0.54)	test_corr_d   0.10 (  0.10)
Test: [  10/  26]	Loss 0.676 (0.676)	test_acc   0.58 (  0.58)	test_minacc   0.74 (  0.67)	test_majacc   0.56 (  0.57)	Loss_d 0.676 (0.676)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.74 (  0.67)	test_majacc_d   0.56 (  0.57)	test_corr_d   0.04 (  0.07)
Test: [  20/  26]	Loss 0.670 (0.676)	test_acc   0.59 (  0.58)	test_minacc   0.65 (  0.66)	test_majacc   0.58 (  0.57)	Loss_d 0.670 (0.676)	test_acc_d   0.59 (  0.58)	test_minacc_d   0.65 (  0.66)	test_majacc_d   0.58 (  0.57)	test_corr_d   0.15 (  0.07)
Test: [  26/  26]	Loss 0.668 (0.676)	test_acc   0.60 (  0.58)	test_minacc   0.78 (  0.66)	test_majacc   0.57 (  0.57)	Loss_d 0.668 (0.676)	test_acc_d   0.60 (  0.58)	test_minacc_d   0.78 (  0.66)	test_majacc_d   0.57 (  0.57)	test_corr_d   0.12 (  0.07)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.53it/s]
Test: [  0/  1]	Loss 0.660 (0.660)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.53 (  0.53)	Loss_d 0.660 (0.660)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.53 (  0.53)	test_corr_d  -0.30 ( -0.30)
Test: [  1/  1]	Loss 0.660 (0.660)	test_acc   0.63 (  0.63)	test_minacc   0.64 (  0.64)	test_majacc   0.53 (  0.53)	Loss_d 0.660 (0.660)	test_acc_d   0.63 (  0.63)	test_minacc_d   0.64 (  0.64)	test_majacc_d   0.53 (  0.53)	test_corr_d  -0.30 ( -0.30)
Overall Timing[ 39/  1]	epoch_time 0.0392 (0.0408)	validation_time 0.0004 (0.0006)	train_time 0.0387 (0.0396)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.580500009894371, 0.628000020980835)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.10it/s] 15%|#5        | 4/26 [00:00<00:01, 18.99it/s] 27%|##6       | 7/26 [00:00<00:00, 23.34it/s] 42%|####2     | 11/26 [00:00<00:00, 25.99it/s] 54%|#####3    | 14/26 [00:00<00:00, 26.52it/s] 65%|######5   | 17/26 [00:00<00:00, 27.43it/s] 81%|########  | 21/26 [00:00<00:00, 28.39it/s] 92%|#########2| 24/26 [00:00<00:00, 28.57it/s]100%|##########| 26/26 [00:01<00:00, 24.72it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1040 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1040 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1041 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1041 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1042 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1042 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1043 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1043 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1044 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1044 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1045 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1045 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1046 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1046 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1047 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1047 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1048 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1048 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1049 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1049 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1050 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1050 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1051 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1051 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1052 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1052 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1053 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1053 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1054 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1054 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1055 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1055 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1056 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1056 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1057 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1057 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1058 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1058 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1059 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1059 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1060 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1060 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1061 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1061 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1062 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1062 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1063 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1063 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1064 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1064 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1065 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1065 364.00000000000006
constrain score by whole: 0
Epoch: [40][  26/  26]	Loss 0.001 (0.002)	train_nll   0.68 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.52 (  0.56)	train_minacc   0.47 (  0.61)	train_majacc   0.53 (  0.56)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.69it/s] 27%|##6       | 7/26 [00:00<00:00, 35.36it/s]                                               27%|##6       | 7/26 [00:00<00:00, 35.36it/s] 50%|#####     | 13/26 [00:00<00:00, 40.46it/s] 73%|#######3  | 19/26 [00:00<00:00, 47.11it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 47.11it/s] 96%|#########6| 25/26 [00:00<00:00, 47.30it/s]100%|##########| 26/26 [00:00<00:00, 39.33it/s]
Test: [   0/  26]	Loss 0.680 (0.680)	test_acc   0.52 (  0.52)	test_minacc   0.44 (  0.44)	test_majacc   0.53 (  0.53)	Loss_d 0.680 (0.680)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.677 (0.694)	test_acc   0.53 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.53 (  0.50)	Loss_d 0.677 (0.694)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.53 (  0.50)	test_corr_d   0.19 (  0.24)
Test: [  20/  26]	Loss 0.671 (0.693)	test_acc   0.54 (  0.51)	test_minacc   0.49 (  0.51)	test_majacc   0.54 (  0.51)	Loss_d 0.671 (0.693)	test_acc_d   0.54 (  0.51)	test_minacc_d   0.49 (  0.51)	test_majacc_d   0.54 (  0.51)	test_corr_d   0.29 (  0.23)
Test: [  26/  26]	Loss 0.701 (0.693)	test_acc   0.49 (  0.51)	test_minacc   0.47 (  0.50)	test_majacc   0.49 (  0.51)	Loss_d 0.701 (0.693)	test_acc_d   0.49 (  0.51)	test_minacc_d   0.47 (  0.50)	test_majacc_d   0.49 (  0.51)	test_corr_d   0.27 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.83it/s]
Test: [  0/  1]	Loss 0.712 (0.712)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.52 (  0.52)	Loss_d 0.712 (0.712)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.13 ( -0.13)
Test: [  1/  1]	Loss 0.712 (0.712)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.52 (  0.52)	Loss_d 0.712 (0.712)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.52 (  0.52)	test_corr_d  -0.13 ( -0.13)
Overall Timing[ 40/  1]	epoch_time 0.0401 (0.0407)	validation_time 0.0005 (0.0006)	train_time 0.0396 (0.0396)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.5066000144183636, 0.5040000081062317)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.58it/s] 15%|#5        | 4/26 [00:00<00:01, 16.12it/s] 27%|##6       | 7/26 [00:00<00:00, 21.06it/s] 38%|###8      | 10/26 [00:00<00:00, 23.87it/s] 50%|#####     | 13/26 [00:00<00:00, 25.83it/s] 62%|######1   | 16/26 [00:00<00:00, 27.08it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.20it/s] 85%|########4 | 22/26 [00:00<00:00, 27.89it/s] 96%|#########6| 25/26 [00:01<00:00, 28.34it/s]100%|##########| 26/26 [00:01<00:00, 23.35it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1066 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1066 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1067 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1067 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1068 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1068 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1069 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1069 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1070 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1070 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1071 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1071 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1072 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1072 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1073 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1073 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1074 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1074 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1075 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1075 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1076 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1076 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1077 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1077 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1078 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1078 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1079 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1079 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1080 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1080 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1081 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1081 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1082 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1082 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1083 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1083 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1084 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1084 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1085 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1085 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1086 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1086 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1087 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1087 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1088 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1088 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1089 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1089 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1090 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1090 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1091 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1091 364.00000000000006
constrain score by whole: 0
Epoch: [41][  26/  26]	Loss 0.002 (0.002)	train_nll   0.67 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.58 (  0.59)	train_minacc   0.53 (  0.57)	train_majacc   0.58 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  6.15it/s] 27%|##6       | 7/26 [00:00<00:00, 30.87it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.87it/s] 50%|#####     | 13/26 [00:00<00:00, 39.55it/s] 73%|#######3  | 19/26 [00:00<00:00, 45.59it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 45.59it/s] 96%|#########6| 25/26 [00:00<00:00, 47.06it/s]100%|##########| 26/26 [00:00<00:00, 37.76it/s]
Test: [   0/  26]	Loss 0.652 (0.652)	test_acc   0.62 (  0.62)	test_minacc   0.67 (  0.67)	test_majacc   0.61 (  0.61)	Loss_d 0.652 (0.652)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.656 (0.654)	test_acc   0.62 (  0.61)	test_minacc   0.72 (  0.60)	test_majacc   0.60 (  0.61)	Loss_d 0.656 (0.654)	test_acc_d   0.62 (  0.61)	test_minacc_d   0.72 (  0.60)	test_majacc_d   0.60 (  0.61)	test_corr_d   0.16 (  0.22)
Test: [  20/  26]	Loss 0.644 (0.654)	test_acc   0.64 (  0.62)	test_minacc   0.66 (  0.61)	test_majacc   0.64 (  0.62)	Loss_d 0.644 (0.654)	test_acc_d   0.64 (  0.62)	test_minacc_d   0.66 (  0.61)	test_majacc_d   0.64 (  0.62)	test_corr_d   0.28 (  0.22)
Test: [  26/  26]	Loss 0.648 (0.654)	test_acc   0.62 (  0.62)	test_minacc   0.69 (  0.60)	test_majacc   0.61 (  0.62)	Loss_d 0.648 (0.654)	test_acc_d   0.62 (  0.62)	test_minacc_d   0.69 (  0.60)	test_majacc_d   0.61 (  0.62)	test_corr_d   0.25 (  0.22)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 47.58it/s]
Test: [  0/  1]	Loss 0.671 (0.671)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.57 (  0.57)	Loss_d 0.671 (0.671)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.17 ( -0.17)
Test: [  1/  1]	Loss 0.671 (0.671)	test_acc   0.58 (  0.58)	test_minacc   0.58 (  0.58)	test_majacc   0.57 (  0.57)	Loss_d 0.671 (0.671)	test_acc_d   0.58 (  0.58)	test_minacc_d   0.58 (  0.58)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.17 ( -0.17)
Overall Timing[ 41/  1]	epoch_time 0.0390 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0386 (0.0396)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.6150000097155571, 0.5790000557899475)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.24it/s] 15%|#5        | 4/26 [00:00<00:01, 19.90it/s] 27%|##6       | 7/26 [00:00<00:00, 23.85it/s] 38%|###8      | 10/26 [00:00<00:00, 26.09it/s] 50%|#####     | 13/26 [00:00<00:00, 26.95it/s] 62%|######1   | 16/26 [00:00<00:00, 27.88it/s] 73%|#######3  | 19/26 [00:00<00:00, 28.12it/s] 85%|########4 | 22/26 [00:00<00:00, 28.57it/s] 96%|#########6| 25/26 [00:00<00:00, 28.89it/s]100%|##########| 26/26 [00:01<00:00, 24.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1092 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1092 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1093 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1093 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1094 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1094 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1095 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1095 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1096 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1096 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1097 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1097 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1098 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1098 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1099 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1099 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1100 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1100 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1101 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1101 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1102 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1102 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1103 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1103 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1104 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1104 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1105 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1105 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1106 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1106 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1107 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1107 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1108 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1108 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1109 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1109 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1110 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1110 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1111 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1111 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1112 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1112 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1113 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1113 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1114 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1114 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1115 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1115 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1116 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1116 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1117 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1117 364.00000000000006
constrain score by whole: 0
Epoch: [42][  26/  26]	Loss 0.001 (0.002)	train_nll   0.67 (  0.67)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.58 (  0.59)	train_minacc   0.53 (  0.59)	train_majacc   0.59 (  0.59)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.44it/s] 27%|##6       | 7/26 [00:00<00:00, 34.86it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.86it/s] 50%|#####     | 13/26 [00:00<00:00, 39.68it/s] 73%|#######3  | 19/26 [00:00<00:00, 44.17it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 44.17it/s] 96%|#########6| 25/26 [00:00<00:00, 46.17it/s]100%|##########| 26/26 [00:00<00:00, 38.61it/s]
Test: [   0/  26]	Loss 0.727 (0.727)	test_acc   0.52 (  0.52)	test_minacc   0.42 (  0.42)	test_majacc   0.53 (  0.53)	Loss_d 0.727 (0.727)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.42 (  0.42)	test_majacc_d   0.53 (  0.53)	test_corr_d   0.31 (  0.31)
Test: [  10/  26]	Loss 0.718 (0.746)	test_acc   0.53 (  0.50)	test_minacc   0.56 (  0.50)	test_majacc   0.52 (  0.50)	Loss_d 0.718 (0.746)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.56 (  0.50)	test_majacc_d   0.52 (  0.50)	test_corr_d   0.32 (  0.29)
Test: [  20/  26]	Loss 0.725 (0.743)	test_acc   0.53 (  0.50)	test_minacc   0.48 (  0.50)	test_majacc   0.54 (  0.50)	Loss_d 0.725 (0.743)	test_acc_d   0.53 (  0.50)	test_minacc_d   0.48 (  0.50)	test_majacc_d   0.54 (  0.50)	test_corr_d   0.28 (  0.28)
Test: [  26/  26]	Loss 0.759 (0.744)	test_acc   0.48 (  0.50)	test_minacc   0.44 (  0.50)	test_majacc   0.48 (  0.50)	Loss_d 0.759 (0.744)	test_acc_d   0.48 (  0.50)	test_minacc_d   0.44 (  0.50)	test_majacc_d   0.48 (  0.50)	test_corr_d   0.34 (  0.28)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.11it/s]
Test: [  0/  1]	Loss 0.769 (0.769)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.769 (0.769)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Test: [  1/  1]	Loss 0.769 (0.769)	test_acc   0.50 (  0.50)	test_minacc   0.50 (  0.50)	test_majacc   0.50 (  0.50)	Loss_d 0.769 (0.769)	test_acc_d   0.50 (  0.50)	test_minacc_d   0.50 (  0.50)	test_majacc_d   0.50 (  0.50)	test_corr_d   0.04 (  0.04)
Overall Timing[ 42/  1]	epoch_time 0.0395 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0391 (0.0396)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.5000000141859055, 0.5)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.68it/s] 15%|#5        | 4/26 [00:00<00:01, 20.43it/s] 27%|##6       | 7/26 [00:00<00:00, 24.15it/s] 38%|###8      | 10/26 [00:00<00:00, 25.52it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.73it/s] 65%|######5   | 17/26 [00:00<00:00, 28.36it/s] 81%|########  | 21/26 [00:00<00:00, 29.18it/s] 96%|#########6| 25/26 [00:00<00:00, 29.81it/s]100%|##########| 26/26 [00:01<00:00, 25.75it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1118 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1118 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1119 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1119 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1120 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1120 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1121 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1121 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1122 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1122 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1123 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1123 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1124 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1124 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1125 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1125 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1126 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1126 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1127 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1127 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1128 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1128 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1129 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1129 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1130 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1130 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1131 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1131 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1132 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1132 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1133 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1133 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1134 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1134 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1135 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1135 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1136 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1136 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1137 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1137 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1138 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1138 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1139 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1139 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1140 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1140 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1141 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1141 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1142 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1142 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1143 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1143 364.00000000000006
constrain score by whole: 0
Epoch: [43][  26/  26]	Loss 0.001 (0.007)	train_nll   0.64 (  0.65)	train_penalty   0.00 (  0.01)	weight_norm   7.80 (  7.80)	train_acc   0.62 (  0.63)	train_minacc   0.61 (  0.54)	train_majacc   0.63 (  0.65)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.89it/s] 27%|##6       | 7/26 [00:00<00:00, 32.14it/s]                                               27%|##6       | 7/26 [00:00<00:00, 32.14it/s] 50%|#####     | 13/26 [00:00<00:00, 40.35it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.57it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.57it/s] 96%|#########6| 25/26 [00:00<00:00, 47.08it/s]100%|##########| 26/26 [00:00<00:00, 38.59it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.59 (  0.59)	test_minacc   0.67 (  0.67)	test_majacc   0.58 (  0.58)	Loss_d 0.672 (0.672)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.67 (  0.67)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.24 (  0.24)
Test: [  10/  26]	Loss 0.674 (0.665)	test_acc   0.58 (  0.61)	test_minacc   0.63 (  0.60)	test_majacc   0.58 (  0.61)	Loss_d 0.674 (0.665)	test_acc_d   0.58 (  0.61)	test_minacc_d   0.63 (  0.60)	test_majacc_d   0.58 (  0.61)	test_corr_d   0.19 (  0.22)
Test: [  20/  26]	Loss 0.664 (0.666)	test_acc   0.61 (  0.60)	test_minacc   0.58 (  0.59)	test_majacc   0.62 (  0.61)	Loss_d 0.664 (0.666)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.58 (  0.59)	test_majacc_d   0.62 (  0.61)	test_corr_d   0.30 (  0.23)
Test: [  26/  26]	Loss 0.649 (0.666)	test_acc   0.63 (  0.61)	test_minacc   0.67 (  0.59)	test_majacc   0.63 (  0.61)	Loss_d 0.649 (0.666)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.67 (  0.59)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.24 (  0.23)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.56it/s]
Test: [  0/  1]	Loss 0.695 (0.695)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.56 (  0.56)	Loss_d 0.695 (0.695)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.18 ( -0.18)
Test: [  1/  1]	Loss 0.695 (0.695)	test_acc   0.57 (  0.57)	test_minacc   0.57 (  0.57)	test_majacc   0.56 (  0.56)	Loss_d 0.695 (0.695)	test_acc_d   0.57 (  0.57)	test_minacc_d   0.57 (  0.57)	test_majacc_d   0.56 (  0.56)	test_corr_d  -0.18 ( -0.18)
Overall Timing[ 43/  1]	epoch_time 0.0409 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0404 (0.0396)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.6052000074386596, 0.5710000395774841)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.94it/s] 15%|#5        | 4/26 [00:00<00:01, 19.41it/s] 27%|##6       | 7/26 [00:00<00:00, 23.71it/s] 38%|###8      | 10/26 [00:00<00:00, 25.77it/s] 50%|#####     | 13/26 [00:00<00:00, 26.72it/s] 62%|######1   | 16/26 [00:00<00:00, 27.52it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.99it/s] 85%|########4 | 22/26 [00:00<00:00, 28.37it/s] 96%|#########6| 25/26 [00:00<00:00, 28.69it/s]100%|##########| 26/26 [00:01<00:00, 24.91it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1144 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1144 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1145 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1145 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1146 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1146 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1147 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1147 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1148 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1148 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1149 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1149 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1150 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1150 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1151 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1151 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1152 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1152 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1153 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1153 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1154 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1154 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1155 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1155 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1156 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1156 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1157 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1157 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1158 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1158 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1159 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1159 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1160 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1160 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1161 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1161 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1162 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1162 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1163 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1163 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1164 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1164 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1165 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1165 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1166 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1166 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1167 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1167 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1168 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1168 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1169 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1169 364.00000000000006
constrain score by whole: 0
Epoch: [44][  26/  26]	Loss 0.003 (0.003)	train_nll   0.64 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.68 (  0.60)	train_minacc   0.61 (  0.56)	train_majacc   0.69 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.84it/s] 27%|##6       | 7/26 [00:00<00:00, 36.24it/s]                                               27%|##6       | 7/26 [00:00<00:00, 36.24it/s] 50%|#####     | 13/26 [00:00<00:00, 40.84it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.76it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.76it/s] 96%|#########6| 25/26 [00:00<00:00, 47.54it/s]100%|##########| 26/26 [00:00<00:00, 39.68it/s]
Test: [   0/  26]	Loss 0.640 (0.640)	test_acc   0.66 (  0.66)	test_minacc   0.56 (  0.56)	test_majacc   0.68 (  0.68)	Loss_d 0.640 (0.640)	test_acc_d   0.66 (  0.66)	test_minacc_d   0.56 (  0.56)	test_majacc_d   0.68 (  0.68)	test_corr_d   0.37 (  0.37)
Test: [  10/  26]	Loss 0.640 (0.647)	test_acc   0.66 (  0.64)	test_minacc   0.56 (  0.55)	test_majacc   0.68 (  0.66)	Loss_d 0.640 (0.647)	test_acc_d   0.66 (  0.64)	test_minacc_d   0.56 (  0.55)	test_majacc_d   0.68 (  0.66)	test_corr_d   0.36 (  0.35)
Test: [  20/  26]	Loss 0.639 (0.646)	test_acc   0.65 (  0.64)	test_minacc   0.55 (  0.56)	test_majacc   0.67 (  0.66)	Loss_d 0.639 (0.646)	test_acc_d   0.65 (  0.64)	test_minacc_d   0.55 (  0.56)	test_majacc_d   0.67 (  0.66)	test_corr_d   0.39 (  0.35)
Test: [  26/  26]	Loss 0.657 (0.647)	test_acc   0.58 (  0.64)	test_minacc   0.44 (  0.55)	test_majacc   0.60 (  0.66)	Loss_d 0.657 (0.647)	test_acc_d   0.58 (  0.64)	test_minacc_d   0.44 (  0.55)	test_majacc_d   0.60 (  0.66)	test_corr_d   0.36 (  0.35)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.55it/s]
Test: [  0/  1]	Loss 0.691 (0.691)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.65 (  0.65)	Loss_d 0.691 (0.691)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.03 ( -0.03)
Test: [  1/  1]	Loss 0.691 (0.691)	test_acc   0.54 (  0.54)	test_minacc   0.53 (  0.53)	test_majacc   0.65 (  0.65)	Loss_d 0.691 (0.691)	test_acc_d   0.54 (  0.54)	test_minacc_d   0.53 (  0.53)	test_majacc_d   0.65 (  0.65)	test_corr_d  -0.03 ( -0.03)
Overall Timing[ 44/  1]	epoch_time 0.0394 (0.0407)	validation_time 0.0004 (0.0006)	train_time 0.0390 (0.0396)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.6396000054478646, 0.5380000472068787)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  8.52it/s] 15%|#5        | 4/26 [00:00<00:01, 19.92it/s] 27%|##6       | 7/26 [00:00<00:00, 23.72it/s] 38%|###8      | 10/26 [00:00<00:00, 26.08it/s] 54%|#####3    | 14/26 [00:00<00:00, 27.87it/s] 65%|######5   | 17/26 [00:00<00:00, 27.74it/s] 81%|########  | 21/26 [00:00<00:00, 28.94it/s] 96%|#########6| 25/26 [00:00<00:00, 29.73it/s]100%|##########| 26/26 [00:01<00:00, 25.56it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1170 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1170 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1171 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1171 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1172 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1172 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1173 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1173 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1174 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1174 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1175 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1175 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1176 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1176 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1177 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1177 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1178 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1178 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1179 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1179 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1180 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1180 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1181 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1181 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1182 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1182 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1183 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1183 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1184 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1184 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1185 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1185 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1186 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1186 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1187 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1187 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1188 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1188 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1189 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1189 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1190 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1190 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1191 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1191 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1192 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1192 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1193 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1193 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1194 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1194 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1195 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1195 364.00000000000006
constrain score by whole: 0
Epoch: [45][  26/  26]	Loss 0.001 (0.002)	train_nll   0.66 (  0.68)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.60 (  0.57)	train_minacc   0.53 (  0.57)	train_majacc   0.61 (  0.57)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  8%|7         | 2/26 [00:00<00:01, 17.85it/s] 31%|###       | 8/26 [00:00<00:00, 39.56it/s]                                               31%|###       | 8/26 [00:00<00:00, 39.56it/s] 50%|#####     | 13/26 [00:00<00:00, 40.57it/s] 73%|#######3  | 19/26 [00:00<00:00, 46.44it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 46.44it/s] 96%|#########6| 25/26 [00:00<00:00, 46.48it/s]100%|##########| 26/26 [00:00<00:00, 40.05it/s]
Test: [   0/  26]	Loss 0.672 (0.672)	test_acc   0.56 (  0.56)	test_minacc   0.44 (  0.44)	test_majacc   0.58 (  0.58)	Loss_d 0.672 (0.672)	test_acc_d   0.56 (  0.56)	test_minacc_d   0.44 (  0.44)	test_majacc_d   0.58 (  0.58)	test_corr_d   0.28 (  0.28)
Test: [  10/  26]	Loss 0.667 (0.685)	test_acc   0.56 (  0.53)	test_minacc   0.56 (  0.53)	test_majacc   0.56 (  0.53)	Loss_d 0.667 (0.685)	test_acc_d   0.56 (  0.53)	test_minacc_d   0.56 (  0.53)	test_majacc_d   0.56 (  0.53)	test_corr_d   0.24 (  0.25)
Test: [  20/  26]	Loss 0.665 (0.682)	test_acc   0.56 (  0.54)	test_minacc   0.48 (  0.53)	test_majacc   0.57 (  0.54)	Loss_d 0.665 (0.682)	test_acc_d   0.56 (  0.54)	test_minacc_d   0.48 (  0.53)	test_majacc_d   0.57 (  0.54)	test_corr_d   0.31 (  0.25)
Test: [  26/  26]	Loss 0.700 (0.683)	test_acc   0.51 (  0.53)	test_minacc   0.44 (  0.52)	test_majacc   0.52 (  0.54)	Loss_d 0.700 (0.683)	test_acc_d   0.51 (  0.53)	test_minacc_d   0.44 (  0.52)	test_majacc_d   0.52 (  0.54)	test_corr_d   0.26 (  0.25)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.84it/s]
Test: [  0/  1]	Loss 0.706 (0.706)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.57 (  0.57)	Loss_d 0.706 (0.706)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.15 ( -0.15)
Test: [  1/  1]	Loss 0.706 (0.706)	test_acc   0.52 (  0.52)	test_minacc   0.51 (  0.51)	test_majacc   0.57 (  0.57)	Loss_d 0.706 (0.706)	test_acc_d   0.52 (  0.52)	test_minacc_d   0.51 (  0.51)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.15 ( -0.15)
Overall Timing[ 45/  1]	epoch_time 0.0391 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0387 (0.0396)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.5346000123023987, 0.51500004529953)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  8.19it/s] 15%|#5        | 4/26 [00:00<00:01, 19.20it/s] 27%|##6       | 7/26 [00:00<00:00, 23.10it/s] 42%|####2     | 11/26 [00:00<00:00, 26.46it/s] 58%|#####7    | 15/26 [00:00<00:00, 27.99it/s] 69%|######9   | 18/26 [00:00<00:00, 28.45it/s] 85%|########4 | 22/26 [00:00<00:00, 29.15it/s]100%|##########| 26/26 [00:00<00:00, 29.83it/s]100%|##########| 26/26 [00:01<00:00, 25.47it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1196 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1196 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1197 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1197 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1198 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1198 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1199 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1199 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1200 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1200 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1201 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1201 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1202 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1202 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1203 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1203 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1204 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1204 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1205 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1205 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1206 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1206 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1207 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1207 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1208 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1208 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1209 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1209 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1210 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1210 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1211 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1211 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1212 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1212 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1213 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1213 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1214 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1214 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1215 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1215 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1216 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1216 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1217 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1217 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1218 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1218 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1219 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1219 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1220 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1220 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1221 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1221 364.00000000000006
constrain score by whole: 0
Epoch: [46][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.80 (  7.80)	train_acc   0.62 (  0.62)	train_minacc   0.75 (  0.57)	train_majacc   0.59 (  0.63)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.42it/s] 27%|##6       | 7/26 [00:00<00:00, 30.63it/s]                                               27%|##6       | 7/26 [00:00<00:00, 30.63it/s] 50%|#####     | 13/26 [00:00<00:00, 40.14it/s] 73%|#######3  | 19/26 [00:00<00:00, 43.71it/s]                                                73%|#######3  | 19/26 [00:00<00:00, 43.71it/s] 96%|#########6| 25/26 [00:00<00:00, 47.77it/s]100%|##########| 26/26 [00:00<00:00, 38.16it/s]
Test: [   0/  26]	Loss 0.638 (0.638)	test_acc   0.64 (  0.64)	test_minacc   0.69 (  0.69)	test_majacc   0.64 (  0.64)	Loss_d 0.638 (0.638)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.69 (  0.69)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.25 (  0.25)
Test: [  10/  26]	Loss 0.638 (0.641)	test_acc   0.64 (  0.63)	test_minacc   0.65 (  0.63)	test_majacc   0.64 (  0.63)	Loss_d 0.638 (0.641)	test_acc_d   0.64 (  0.63)	test_minacc_d   0.65 (  0.63)	test_majacc_d   0.64 (  0.63)	test_corr_d   0.20 (  0.24)
Test: [  20/  26]	Loss 0.623 (0.640)	test_acc   0.65 (  0.63)	test_minacc   0.58 (  0.63)	test_majacc   0.66 (  0.63)	Loss_d 0.623 (0.640)	test_acc_d   0.65 (  0.63)	test_minacc_d   0.58 (  0.63)	test_majacc_d   0.66 (  0.63)	test_corr_d   0.29 (  0.24)
Test: [  26/  26]	Loss 0.652 (0.641)	test_acc   0.60 (  0.63)	test_minacc   0.61 (  0.62)	test_majacc   0.59 (  0.63)	Loss_d 0.652 (0.641)	test_acc_d   0.60 (  0.63)	test_minacc_d   0.61 (  0.62)	test_majacc_d   0.59 (  0.63)	test_corr_d   0.23 (  0.24)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.64it/s]
Test: [  0/  1]	Loss 0.671 (0.671)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.60 (  0.60)	Loss_d 0.671 (0.671)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.18 ( -0.18)
Test: [  1/  1]	Loss 0.671 (0.671)	test_acc   0.60 (  0.60)	test_minacc   0.59 (  0.59)	test_majacc   0.60 (  0.60)	Loss_d 0.671 (0.671)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.60 (  0.60)	test_corr_d  -0.18 ( -0.18)
Overall Timing[ 46/  1]	epoch_time 0.0390 (0.0406)	validation_time 0.0004 (0.0006)	train_time 0.0385 (0.0395)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.6264000092744827, 0.5950000286102295)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.51it/s] 15%|#5        | 4/26 [00:00<00:01, 17.79it/s] 27%|##6       | 7/26 [00:00<00:00, 21.84it/s] 38%|###8      | 10/26 [00:00<00:00, 24.45it/s] 50%|#####     | 13/26 [00:00<00:00, 25.76it/s] 62%|######1   | 16/26 [00:00<00:00, 26.85it/s] 73%|#######3  | 19/26 [00:00<00:00, 27.27it/s] 88%|########8 | 23/26 [00:00<00:00, 28.26it/s]100%|##########| 26/26 [00:01<00:00, 24.24it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1222 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1222 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1223 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1223 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1224 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1224 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1225 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1225 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1226 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1226 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1227 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1227 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1228 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1228 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1229 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1229 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1230 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1230 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1231 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1231 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1232 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1232 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1233 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1233 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1234 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1234 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1235 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1235 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1236 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1236 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1237 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1237 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1238 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1238 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1239 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1239 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1240 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1240 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1241 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1241 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1242 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1242 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1243 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1243 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1244 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1244 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1245 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1245 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1246 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1246 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1247 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1247 364.00000000000006
constrain score by whole: 0
Epoch: [47][  26/  26]	Loss 0.001 (0.001)	train_nll   0.65 (  0.65)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.80)	train_acc   0.62 (  0.62)	train_minacc   0.72 (  0.61)	train_majacc   0.61 (  0.62)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.82it/s] 23%|##3       | 6/26 [00:00<00:00, 27.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 27.84it/s] 46%|####6     | 12/26 [00:00<00:00, 37.30it/s] 69%|######9   | 18/26 [00:00<00:00, 44.19it/s]                                                69%|######9   | 18/26 [00:00<00:00, 44.19it/s] 92%|#########2| 24/26 [00:00<00:00, 45.82it/s]100%|##########| 26/26 [00:00<00:00, 37.68it/s]
Test: [   0/  26]	Loss 0.655 (0.655)	test_acc   0.60 (  0.60)	test_minacc   0.63 (  0.63)	test_majacc   0.59 (  0.59)	Loss_d 0.655 (0.655)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.59 (  0.59)	test_corr_d   0.22 (  0.22)
Test: [  10/  26]	Loss 0.656 (0.651)	test_acc   0.59 (  0.61)	test_minacc   0.72 (  0.65)	test_majacc   0.57 (  0.60)	Loss_d 0.656 (0.651)	test_acc_d   0.59 (  0.61)	test_minacc_d   0.72 (  0.65)	test_majacc_d   0.57 (  0.60)	test_corr_d   0.15 (  0.20)
Test: [  20/  26]	Loss 0.644 (0.652)	test_acc   0.63 (  0.61)	test_minacc   0.68 (  0.65)	test_majacc   0.62 (  0.60)	Loss_d 0.644 (0.652)	test_acc_d   0.63 (  0.61)	test_minacc_d   0.68 (  0.65)	test_majacc_d   0.62 (  0.60)	test_corr_d   0.25 (  0.19)
Test: [  26/  26]	Loss 0.652 (0.652)	test_acc   0.60 (  0.61)	test_minacc   0.67 (  0.65)	test_majacc   0.58 (  0.60)	Loss_d 0.652 (0.652)	test_acc_d   0.60 (  0.61)	test_minacc_d   0.67 (  0.65)	test_majacc_d   0.58 (  0.60)	test_corr_d   0.19 (  0.19)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 48.63it/s]
Test: [  0/  1]	Loss 0.662 (0.662)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.54 (  0.54)	Loss_d 0.662 (0.662)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.22 ( -0.22)
Test: [  1/  1]	Loss 0.662 (0.662)	test_acc   0.60 (  0.60)	test_minacc   0.61 (  0.61)	test_majacc   0.54 (  0.54)	Loss_d 0.662 (0.662)	test_acc_d   0.60 (  0.60)	test_minacc_d   0.61 (  0.61)	test_majacc_d   0.54 (  0.54)	test_corr_d  -0.22 ( -0.22)
Overall Timing[ 47/  1]	epoch_time 0.0386 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0382 (0.0395)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.610200010240078, 0.6020000576972961)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:02,  9.61it/s] 15%|#5        | 4/26 [00:00<00:01, 21.35it/s] 27%|##6       | 7/26 [00:00<00:00, 24.04it/s] 38%|###8      | 10/26 [00:00<00:00, 25.92it/s] 54%|#####3    | 14/26 [00:00<00:00, 28.06it/s] 69%|######9   | 18/26 [00:00<00:00, 29.16it/s] 85%|########4 | 22/26 [00:00<00:00, 29.81it/s]100%|##########| 26/26 [00:00<00:00, 30.26it/s]100%|##########| 26/26 [00:01<00:00, 25.93it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1248 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1248 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1249 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1249 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1250 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1250 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1251 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1251 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1252 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1252 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1253 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1253 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1254 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1254 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1255 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1255 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1256 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1256 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1257 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1257 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1258 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1258 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1259 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1259 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1260 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1260 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1261 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1261 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1262 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1262 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1263 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1263 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1264 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1264 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1265 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1265 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1266 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1266 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1267 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1267 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1268 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1268 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1269 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1269 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1270 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1270 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1271 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1271 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1272 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1272 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1273 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1273 364.00000000000006
constrain score by whole: 0
Epoch: [48][  26/  26]	Loss 0.001 (0.002)	train_nll   0.65 (  0.66)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.58 (  0.60)	train_minacc   0.50 (  0.62)	train_majacc   0.60 (  0.60)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  7.50it/s] 27%|##6       | 7/26 [00:00<00:00, 34.09it/s]                                               27%|##6       | 7/26 [00:00<00:00, 34.09it/s] 42%|####2     | 11/26 [00:00<00:00, 35.98it/s] 69%|######9   | 18/26 [00:00<00:00, 47.31it/s]                                                69%|######9   | 18/26 [00:00<00:00, 47.31it/s] 92%|#########2| 24/26 [00:00<00:00, 50.39it/s]100%|##########| 26/26 [00:00<00:00, 39.54it/s]
Test: [   0/  26]	Loss 0.644 (0.644)	test_acc   0.61 (  0.61)	test_minacc   0.46 (  0.46)	test_majacc   0.63 (  0.63)	Loss_d 0.644 (0.644)	test_acc_d   0.61 (  0.61)	test_minacc_d   0.46 (  0.46)	test_majacc_d   0.63 (  0.63)	test_corr_d   0.32 (  0.32)
Test: [  10/  26]	Loss 0.639 (0.655)	test_acc   0.62 (  0.60)	test_minacc   0.65 (  0.54)	test_majacc   0.61 (  0.61)	Loss_d 0.639 (0.655)	test_acc_d   0.62 (  0.60)	test_minacc_d   0.65 (  0.54)	test_majacc_d   0.61 (  0.61)	test_corr_d   0.29 (  0.32)
Test: [  20/  26]	Loss 0.636 (0.654)	test_acc   0.61 (  0.60)	test_minacc   0.49 (  0.55)	test_majacc   0.63 (  0.61)	Loss_d 0.636 (0.654)	test_acc_d   0.61 (  0.60)	test_minacc_d   0.49 (  0.55)	test_majacc_d   0.63 (  0.61)	test_corr_d   0.36 (  0.31)
Test: [  26/  26]	Loss 0.673 (0.656)	test_acc   0.55 (  0.60)	test_minacc   0.44 (  0.55)	test_majacc   0.57 (  0.61)	Loss_d 0.673 (0.656)	test_acc_d   0.55 (  0.60)	test_minacc_d   0.44 (  0.55)	test_majacc_d   0.57 (  0.61)	test_corr_d   0.30 (  0.31)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.78it/s]
Test: [  0/  1]	Loss 0.713 (0.713)	test_acc   0.53 (  0.53)	test_minacc   0.52 (  0.52)	test_majacc   0.64 (  0.64)	Loss_d 0.713 (0.713)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.08 ( -0.08)
Test: [  1/  1]	Loss 0.713 (0.713)	test_acc   0.53 (  0.53)	test_minacc   0.52 (  0.52)	test_majacc   0.64 (  0.64)	Loss_d 0.713 (0.713)	test_acc_d   0.53 (  0.53)	test_minacc_d   0.52 (  0.52)	test_majacc_d   0.64 (  0.64)	test_corr_d  -0.08 ( -0.08)
Overall Timing[ 48/  1]	epoch_time 0.0392 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0387 (0.0395)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.599600006699562, 0.527999997138977)
current lr:  0.006
current weight lr:  0.0006
current prune rate:  0.95
  0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:04,  5.72it/s] 15%|#5        | 4/26 [00:00<00:01, 16.31it/s] 27%|##6       | 7/26 [00:00<00:00, 21.28it/s] 38%|###8      | 10/26 [00:00<00:00, 24.34it/s] 50%|#####     | 13/26 [00:00<00:00, 26.03it/s] 65%|######5   | 17/26 [00:00<00:00, 27.40it/s] 81%|########  | 21/26 [00:00<00:00, 28.27it/s] 96%|#########6| 25/26 [00:00<00:00, 28.68it/s]100%|##########| 26/26 [00:01<00:00, 23.84it/s]
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1274 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1274 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1275 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1275 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1276 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1276 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1277 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1277 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1278 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1278 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1279 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1279 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1280 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1280 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1281 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1281 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1282 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1282 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1283 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1283 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1284 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1284 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1285 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1285 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1286 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1286 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1287 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1287 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1288 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1288 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1289 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1289 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1290 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1290 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1291 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1291 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1292 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1292 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1293 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1293 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1294 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1294 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1295 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1295 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1296 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1296 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1297 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1297 364.00000000000006
constrain score by whole: 0
torch.Size([390, 3, 64, 32]) torch.Size([390, 1])
args.step args.penalty_anneal_iters 1298 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1298 364.00000000000006
constrain score by whole: 0
torch.Size([250, 3, 64, 32]) torch.Size([250, 1])
args.step args.penalty_anneal_iters 1299 13
penalty weights 10000.0
args.steps >= len(train_loader)*args.epochs*args.ts 1299 364.00000000000006
constrain score by whole: 0
Epoch: [49][  26/  26]	Loss 0.001 (0.003)	train_nll   0.64 (  0.64)	train_penalty   0.00 (  0.00)	weight_norm   7.79 (  7.79)	train_acc   0.64 (  0.63)	train_minacc   0.64 (  0.58)	train_majacc   0.64 (  0.64)	train_corr   0.00 (  0.00)
  0%|          | 0/26 [00:00<?, ?it/s]                                        0%|          | 0/26 [00:00<?, ?it/s]  4%|3         | 1/26 [00:00<00:03,  6.27it/s] 23%|##3       | 6/26 [00:00<00:00, 26.84it/s]                                               23%|##3       | 6/26 [00:00<00:00, 26.84it/s] 46%|####6     | 12/26 [00:00<00:00, 38.58it/s] 65%|######5   | 17/26 [00:00<00:00, 40.34it/s]                                                65%|######5   | 17/26 [00:00<00:00, 40.34it/s] 88%|########8 | 23/26 [00:00<00:00, 45.79it/s]100%|##########| 26/26 [00:00<00:00, 36.40it/s]
Test: [   0/  26]	Loss 0.630 (0.630)	test_acc   0.64 (  0.64)	test_minacc   0.63 (  0.63)	test_majacc   0.64 (  0.64)	Loss_d 0.630 (0.630)	test_acc_d   0.64 (  0.64)	test_minacc_d   0.63 (  0.63)	test_majacc_d   0.64 (  0.64)	test_corr_d   0.30 (  0.30)
Test: [  10/  26]	Loss 0.631 (0.626)	test_acc   0.65 (  0.65)	test_minacc   0.69 (  0.63)	test_majacc   0.65 (  0.66)	Loss_d 0.631 (0.626)	test_acc_d   0.65 (  0.65)	test_minacc_d   0.69 (  0.63)	test_majacc_d   0.65 (  0.66)	test_corr_d   0.27 (  0.30)
Test: [  20/  26]	Loss 0.617 (0.627)	test_acc   0.68 (  0.65)	test_minacc   0.65 (  0.62)	test_majacc   0.69 (  0.66)	Loss_d 0.617 (0.627)	test_acc_d   0.68 (  0.65)	test_minacc_d   0.65 (  0.62)	test_majacc_d   0.69 (  0.66)	test_corr_d   0.35 (  0.29)
Test: [  26/  26]	Loss 0.632 (0.628)	test_acc   0.66 (  0.65)	test_minacc   0.61 (  0.62)	test_majacc   0.66 (  0.66)	Loss_d 0.632 (0.628)	test_acc_d   0.66 (  0.65)	test_minacc_d   0.61 (  0.62)	test_majacc_d   0.66 (  0.66)	test_corr_d   0.31 (  0.29)
  0%|          | 0/1 [00:00<?, ?it/s]                                       0%|          | 0/1 [00:00<?, ?it/s]100%|##########| 1/1 [00:00<00:00, 46.61it/s]
Test: [  0/  1]	Loss 0.674 (0.674)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.57 (  0.57)	Loss_d 0.674 (0.674)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.15 ( -0.15)
Test: [  1/  1]	Loss 0.674 (0.674)	test_acc   0.59 (  0.59)	test_minacc   0.59 (  0.59)	test_majacc   0.57 (  0.57)	Loss_d 0.674 (0.674)	test_acc_d   0.59 (  0.59)	test_minacc_d   0.59 (  0.59)	test_majacc_d   0.57 (  0.57)	test_corr_d  -0.15 ( -0.15)
Overall Timing[ 49/  1]	epoch_time 0.0398 (0.0405)	validation_time 0.0004 (0.0006)	train_time 0.0394 (0.0395)
record: (train_acc, test_acc) (0.6087000063061714, 0.609000027179718)
last accs (train_acc, test_acc) (0.6513000149130821, 0.5879999995231628)
wandb: - 0.164 MB of 0.164 MB uploadedwandb: \ 0.164 MB of 0.164 MB uploadedwandb: | 0.164 MB of 0.164 MB uploadedwandb: / 0.185 MB of 0.194 MB uploaded (0.003 MB deduped)wandb: - 0.564 MB of 0.564 MB uploaded (0.003 MB deduped)wandb: 
wandb: Run history:
wandb:                                                                            global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/diagnostics/epoch_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/diagnostics/train_time_val █▂▁▁▁▁▁▁▁▁▁▁▂▂▂▁▂▁▂▁▁▂▂▁▁▁▁▁▁▁▁▁▂▁▁▂▁▁▁▁
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/diagnostics/validation_time_val █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▆▇▇▇▇▇███
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/Loss_avg ▅▃▁▄▂▂▂▂▂▂▄▂▅▃▃█▅▂▂▂▂▂▂▁▂▂▁▂▂▁▁▁▂▁▃▂▂▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/Loss_d_avg ▅▃▁▄▂▂▂▂▂▂▄▂▅▃▃█▅▂▂▂▂▂▂▁▂▂▁▂▂▁▁▁▂▁▃▂▂▁▁▁
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/Loss_d_val ▅▃▁▄▂▂▂▂▂▂▄▂▅▃▃█▅▂▂▂▂▂▂▁▂▂▁▂▂▁▁▁▂▁▃▂▂▁▁▁
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/Loss_val ▅▃▁▄▂▂▂▂▂▂▄▂▅▃▃█▅▂▂▂▂▂▂▁▂▂▁▂▂▁▁▁▂▁▃▂▂▁▁▁
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_acc_avg ▂▃▇▁▇▅▆▅▅▆▅▆▂▆▆▄▃▅▆▅▄▅▃▆▄▆▆▅▅▇▆█▄▆▄▆▄▇▇▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_acc_d_avg ▂▃▇▁▇▅▆▅▅▆▅▆▂▆▆▄▃▅▆▅▄▅▃▆▄▆▆▅▅▇▆█▄▆▄▆▄▇▇▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_acc_d_val ▂▃▇▁▇▅▆▅▅▆▅▆▂▆▆▄▃▅▆▅▄▅▃▆▄▆▆▅▅▇▆█▄▆▄▆▄▇▇▆
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_acc_val ▂▃▇▁▇▅▆▅▅▆▅▆▂▆▆▄▃▅▆▅▄▅▃▆▄▆▆▅▅▇▆█▄▆▄▆▄▇▇▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_corr_d_avg █▅▂▇▃▃▄▄▅▄▄▃▆▄▄▇▇▆▄▄▄▅▆▃▄▃▃▄▄▂▃▁▃▃▅▃▃▃▂▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_corr_d_val █▅▂▇▃▃▄▄▅▄▄▃▆▄▄▇▇▆▄▄▄▅▆▃▄▃▃▄▄▂▃▁▃▃▅▃▃▃▂▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_majacc_avg ▇▇▂▅▂▅▅▄▅▃▅▄█▆▂█▄▆▄▄▂▅▆▄▃▆▄▃▃▂▄▁▂▃▂▃▃▄▃▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_majacc_d_avg ▇▇▂▅▂▅▅▄▅▃▅▄█▆▂█▄▆▄▄▂▅▆▄▃▆▄▃▃▂▄▁▂▃▂▃▃▄▃▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_majacc_d_val ▇▇▂▅▂▅▅▄▅▃▅▄█▆▂█▄▆▄▄▂▅▆▄▃▆▄▃▃▂▄▁▂▃▂▃▃▄▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_majacc_val ▇▇▂▅▂▅▅▄▅▃▅▄█▆▂█▄▆▄▄▂▅▆▄▃▆▄▃▃▂▄▁▂▃▂▃▃▄▃▃
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_minacc_avg ▁▂▇▁▇▅▅▅▅▆▅▆▂▆▆▃▃▅▆▅▄▅▃▆▄▅▆▅▅▇▆█▄▆▄▆▄▆▇▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_minacc_d_avg ▁▂▇▁▇▅▅▅▅▆▅▆▂▆▆▃▃▅▆▅▄▅▃▆▄▅▆▅▅▇▆█▄▆▄▆▄▆▇▆
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_minacc_d_val ▁▂▇▁▇▅▅▅▅▆▅▆▂▆▆▃▃▅▆▅▄▅▃▆▄▅▆▅▅▇▆█▄▆▄▆▄▆▇▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_minacc_val ▁▂▇▁▇▅▅▅▅▆▅▆▂▆▆▃▃▅▆▅▄▅▃▆▄▅▆▅▅▇▆█▄▆▄▆▄▆▇▆
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/Loss_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/Loss_val ▁▂▂▁▁▁▁▁▁▁▁▂▃▁▁▂▁▂▁█▁▁▄▁▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_acc_avg █▆▅▅▄▄▄▃▂▃▃▃▄▅▄▃▄▁▂▃▂▂▂▄▃▁▂▁▂▄▁▂▁▂▂▄▁▄▄▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_acc_val ▄▇▇▇▅▇▆▅▄▅▆▆█▅▅▇▄▇▄▂▃▆▁▅▁▄▅▅▇▄▆▁▂▄▄▆▅▅▆▆
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_corr_avg ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_corr_val ▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_majacc_avg █▅▄▄▅▃▄▃▂▃▃▃▄▅▃▃▄▂▁▂▂▂▂▃▂▁▂▁▂▃▁▂▁▂▂▄▁▃▃▃
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_majacc_val ▃▇▅▇▄▆▅▄▄▄▆▅█▄▄▇▄▆▃▂▃▄▁▄▁▄▄▄▆▃▅▁▂▃▄▄▄▄▄▅
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_minacc_avg ▁▅▇▇▄▇▇▇████▅▆▇▆▆▅█▇▇▇▆▆▇█▇█▇▇██▇▇▇▆▇▇▇▇
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_minacc_val ▅▃▇▁▅▅▃▅▃▅▄▇▁▇█▂▄▅▅▅▅▇▃▇▃▃▆▇▆▅▇▃▄▅▅▆▅██▆
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_nll_avg ▇▂▂▂▂▃▃▄▄▃▃▄▃▁▃▄▃▆▇▇▇▇▇▄▆█▇█▇▅█▇█▆▇▅█▅▅▄
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_nll_val ▄▅▃▃▄▃▄▄▄▅▂▄▂▄▄▁▅▄▅█▆▄▇▅▆▅▅▅▄▅▄▇▆▅▅▄▅▅▄▄
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_penalty_avg █▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_penalty_val ▁▂▂▁▁▁▁▁▁▁▁▂▃▁▁▂▁▂▁█▁▁▄▁▂▁▁▁▁▁▁▂▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/weight_norm_avg █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/weight_norm_val █▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁
wandb: 
wandb: Run summary:
wandb:                                                                            global_step 49
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/diagnostics/epoch_time_val 0.03984
wandb:      resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/diagnostics/train_time_val 0.03937
wandb: resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/diagnostics/validation_time_val 0.00044
wandb:                     resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/global_step 49
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/Loss_avg 0.6742
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/Loss_d_avg 0.6742
wandb:                 resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/Loss_d_val 0.6742
wandb:                   resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/Loss_val 0.6742
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_acc_avg 0.588
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_acc_d_avg 0.588
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_acc_d_val 0.588
wandb:               resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_acc_val 0.588
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_corr_d_avg -0.14941
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_corr_d_val -0.14941
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_majacc_avg 0.57
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_majacc_d_avg 0.57
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_majacc_d_val 0.57
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_majacc_val 0.57
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_minacc_avg 0.59
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_minacc_d_avg 0.59
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_minacc_d_val 0.59
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/test/test_minacc_val 0.59
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/Loss_avg 0.00316
wandb:                  resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/Loss_val 0.00087
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_acc_avg 0.6302
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_acc_val 0.64
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_corr_avg 0.0
wandb:            resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_corr_val 0.0
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_majacc_avg 0.63913
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_majacc_val 0.64019
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_minacc_avg 0.57896
wandb:          resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_minacc_val 0.63889
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_nll_avg 0.63531
wandb:             resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_nll_val 0.63984
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_penalty_avg 0.00232
wandb:         resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/train_penalty_val 3e-05
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/weight_norm_avg 7.79268
wandb:           resnet18-usc-unsigned/baseline/prune_rate=0.95/29/logs/train/weight_norm_val 7.79212
wandb: 
wandb: 🚀 View run name_random at: https://wandb.ai/janezdu-uiuc/irm/runs/m4hb9bxx
wandb: ⭐️ View project at: https://wandb.ai/janezdu-uiuc/irm
wandb: Synced 5 W&B file(s), 0 media file(s), 2 artifact file(s) and 1 other file(s)
wandb: Find logs at: ./wandb/run-20240905_000801-m4hb9bxx/logs
wandb: WARNING The new W&B backend becomes opt-out in version 0.18.0; try it out with `wandb.require("core")`! See https://wandb.me/wandb-core for more information.
